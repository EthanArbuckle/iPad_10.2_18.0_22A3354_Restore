id sub_1004C6C94(uint64_t a1, const char *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v14 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v13 = sub_100228BD8(a1, (unint64_t)a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received Darwin notification: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return objc_msgSend(v3, "showEducationUIIfNecessary");
}

void sub_1004C6E4C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  int deviceSupportsApplePencil;
  id v14;
  __CFNotificationCenter *v15;
  __CFString *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  NSString v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  NSString v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  id v42;
  id v43;
  NSString v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  NSString v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  id v56;
  id v57;
  NSString v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  id v63;
  id v64;
  NSString v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  id v70;
  id v71;
  NSString v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  NSString v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  NSString v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  NSString v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  NSString v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  NSString v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  __CFString *v119;
  id v120;
  uint64_t v121;
  void *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  objc_class *v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  int v135;
  const char *v136;
  uint64_t v137;
  const char *v138;
  const char *v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  void **v145;
  uint64_t v146;
  uint64_t v147;
  os_log_type_t v148;
  uint8_t *v149;
  _QWORD v150[2];
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  Class v157;
  NSObject *v158;
  objc_super v159;
  void **aBlock;
  uint64_t v161;
  void *v162;
  void *v163;
  void *v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  isa = v6[-1].isa;
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (id)MobileGestalt_get_current_device(v8);
  if (v11)
  {
    v12 = v11;
    deviceSupportsApplePencil = MobileGestalt_get_deviceSupportsApplePencil();

    if (deviceSupportsApplePencil)
    {
      if (objc_msgSend((id)objc_opt_self(SDStatusMonitor), "b332PairingEnabled"))
      {
        v154 = v10;
        v155 = v5;
        v157 = isa;
        v158 = v6;
        v156 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
        objc_msgSend(v1, "setDispatchQueue:");
        v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        sub_10044BB8C();

        v15 = CFNotificationCenterGetDarwinNotifyCenter();
        v16 = (__CFString *)String._bridgeToObjectiveC()();
        CFNotificationCenterAddObserver(v15, v1, (CFNotificationCallback)sub_1004C8020, v16, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

        if (IsAppleInternalBuild(v17, v18))
        {
          v19 = (void *)objc_opt_self(NSDistributedNotificationCenter);
          v20 = objc_msgSend(v19, "defaultCenter");
          v152 = v3;
          v21 = v20;
          v22 = String._bridgeToObjectiveC()();
          v23 = swift_allocObject(&unk_10072C780, 24, 7);
          *(_QWORD *)(v23 + 16) = v1;
          v164 = sub_1004F4708;
          v165 = v23;
          aBlock = _NSConcreteStackBlock;
          v150[1] = 0xD00000000000002ALL;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C798;
          v24 = _Block_copy(&aBlock);
          v25 = v165;
          v26 = v1;
          v153 = v2;
          v27 = v26;
          swift_release(v25);
          v151 = v1;
          v28 = objc_msgSend(v21, "addObserverForName:object:queue:usingBlock:", v22, 0, 0, v24);
          _Block_release(v24);
          swift_unknownObjectRelease(v28);

          v29 = objc_msgSend(v19, "defaultCenter");
          v30 = String._bridgeToObjectiveC()();
          v31 = swift_allocObject(&unk_10072C7D0, 24, 7);
          *(_QWORD *)(v31 + 16) = v27;
          v164 = sub_1004F4738;
          v165 = v31;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C7E8;
          v32 = _Block_copy(&aBlock);
          v33 = v165;
          v34 = v27;
          swift_release(v33);
          v35 = objc_msgSend(v29, "addObserverForName:object:queue:usingBlock:", v30, 0, 0, v32);
          _Block_release(v32);
          swift_unknownObjectRelease(v35);

          v36 = objc_msgSend(v19, "defaultCenter");
          v37 = String._bridgeToObjectiveC()();
          v38 = swift_allocObject(&unk_10072C820, 24, 7);
          *(_QWORD *)(v38 + 16) = v34;
          v164 = sub_1004F4768;
          v165 = v38;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C838;
          v39 = _Block_copy(&aBlock);
          v40 = v165;
          v41 = v34;
          swift_release(v40);
          v42 = objc_msgSend(v36, "addObserverForName:object:queue:usingBlock:", v37, 0, 0, v39);
          _Block_release(v39);
          swift_unknownObjectRelease(v42);

          v43 = objc_msgSend(v19, "defaultCenter");
          v44 = String._bridgeToObjectiveC()();
          v45 = swift_allocObject(&unk_10072C870, 24, 7);
          *(_QWORD *)(v45 + 16) = v41;
          v164 = sub_1004F4798;
          v165 = v45;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C888;
          v46 = _Block_copy(&aBlock);
          v47 = v165;
          v48 = v41;
          swift_release(v47);
          v49 = objc_msgSend(v43, "addObserverForName:object:queue:usingBlock:", v44, 0, 0, v46);
          _Block_release(v46);
          swift_unknownObjectRelease(v49);

          v50 = objc_msgSend(v19, "defaultCenter");
          v51 = String._bridgeToObjectiveC()();
          v52 = swift_allocObject(&unk_10072C8C0, 24, 7);
          *(_QWORD *)(v52 + 16) = v48;
          v164 = sub_1004F47C0;
          v165 = v52;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C8D8;
          v53 = _Block_copy(&aBlock);
          v54 = v165;
          v55 = v48;
          swift_release(v54);
          v56 = objc_msgSend(v50, "addObserverForName:object:queue:usingBlock:", v51, 0, 0, v53);
          _Block_release(v53);
          swift_unknownObjectRelease(v56);

          v57 = objc_msgSend(v19, "defaultCenter");
          v58 = String._bridgeToObjectiveC()();
          v59 = swift_allocObject(&unk_10072C910, 24, 7);
          *(_QWORD *)(v59 + 16) = v55;
          v164 = sub_1004F47E8;
          v165 = v59;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C928;
          v60 = _Block_copy(&aBlock);
          v61 = v165;
          v62 = v55;
          swift_release(v61);
          v63 = objc_msgSend(v57, "addObserverForName:object:queue:usingBlock:", v58, 0, 0, v60);
          _Block_release(v60);
          swift_unknownObjectRelease(v63);

          v64 = objc_msgSend(v19, "defaultCenter");
          v65 = String._bridgeToObjectiveC()();
          v66 = swift_allocObject(&unk_10072C960, 24, 7);
          *(_QWORD *)(v66 + 16) = v62;
          v164 = sub_1004F4810;
          v165 = v66;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C978;
          v67 = _Block_copy(&aBlock);
          v68 = v165;
          v69 = v62;
          swift_release(v68);
          v70 = objc_msgSend(v64, "addObserverForName:object:queue:usingBlock:", v65, 0, 0, v67);
          _Block_release(v67);
          swift_unknownObjectRelease(v70);

          v71 = objc_msgSend(v19, "defaultCenter");
          v72 = String._bridgeToObjectiveC()();
          v73 = swift_allocObject(&unk_10072C9B0, 24, 7);
          *(_QWORD *)(v73 + 16) = v69;
          v164 = sub_1004F4838;
          v165 = v73;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072C9C8;
          v74 = _Block_copy(&aBlock);
          v75 = v165;
          v76 = v69;
          swift_release(v75);
          v77 = objc_msgSend(v71, "addObserverForName:object:queue:usingBlock:", v72, 0, 0, v74);
          _Block_release(v74);
          swift_unknownObjectRelease(v77);

          v78 = objc_msgSend(v19, "defaultCenter");
          v79 = String._bridgeToObjectiveC()();
          v80 = swift_allocObject(&unk_10072CA00, 24, 7);
          *(_QWORD *)(v80 + 16) = v76;
          v164 = sub_1004F4860;
          v165 = v80;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072CA18;
          v81 = _Block_copy(&aBlock);
          v82 = v165;
          v83 = v76;
          swift_release(v82);
          v84 = objc_msgSend(v78, "addObserverForName:object:queue:usingBlock:", v79, 0, 0, v81);
          _Block_release(v81);
          swift_unknownObjectRelease(v84);

          v85 = objc_msgSend(v19, "defaultCenter");
          v86 = String._bridgeToObjectiveC()();
          v87 = swift_allocObject(&unk_10072CA50, 24, 7);
          *(_QWORD *)(v87 + 16) = v83;
          v164 = sub_1004F4888;
          v165 = v87;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072CA68;
          v88 = _Block_copy(&aBlock);
          v89 = v165;
          v90 = v83;
          swift_release(v89);
          v91 = objc_msgSend(v85, "addObserverForName:object:queue:usingBlock:", v86, 0, 0, v88);
          _Block_release(v88);
          swift_unknownObjectRelease(v91);

          v92 = objc_msgSend(v19, "defaultCenter");
          v93 = String._bridgeToObjectiveC()();
          v94 = swift_allocObject(&unk_10072CAA0, 24, 7);
          *(_QWORD *)(v94 + 16) = v90;
          v164 = sub_1004F48B8;
          v165 = v94;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072CAB8;
          v95 = _Block_copy(&aBlock);
          v96 = v165;
          v97 = v90;
          swift_release(v96);
          v98 = objc_msgSend(v92, "addObserverForName:object:queue:usingBlock:", v93, 0, 0, v95);
          _Block_release(v95);
          swift_unknownObjectRelease(v98);

          v99 = objc_msgSend(v19, "defaultCenter");
          v100 = String._bridgeToObjectiveC()();
          v101 = swift_allocObject(&unk_10072CAF0, 24, 7);
          *(_QWORD *)(v101 + 16) = v97;
          v164 = sub_1004F48E0;
          v165 = v101;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072CB08;
          v102 = _Block_copy(&aBlock);
          v103 = v165;
          v104 = v97;
          v2 = v153;
          v105 = v104;
          swift_release(v103);
          v106 = objc_msgSend(v99, "addObserverForName:object:queue:usingBlock:", v100, 0, 0, v102);
          _Block_release(v102);
          swift_unknownObjectRelease(v106);

          v3 = v152;
          v107 = objc_msgSend(v19, "defaultCenter");
          v108 = String._bridgeToObjectiveC()();
          v109 = swift_allocObject(&unk_10072CB40, 24, 7);
          *(_QWORD *)(v109 + 16) = v105;
          v164 = sub_1004F4908;
          v165 = v109;
          aBlock = _NSConcreteStackBlock;
          v161 = 1107296256;
          v162 = sub_1004C8208;
          v163 = &unk_10072CB58;
          v110 = _Block_copy(&aBlock);
          v111 = v165;
          v112 = v105;
          swift_release(v111);
          v1 = v151;
          v113 = objc_msgSend(v107, "addObserverForName:object:queue:usingBlock:", v108, 0, 0, v110);
          _Block_release(v110);
          swift_unknownObjectRelease(v113);

        }
        v114 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        v115 = swift_allocObject(&unk_10072CB90, 24, 7);
        *(_QWORD *)(v115 + 16) = v1;
        v164 = sub_1004F4910;
        v165 = v115;
        aBlock = _NSConcreteStackBlock;
        v161 = 1107296256;
        v162 = sub_1004C8208;
        v163 = &unk_10072CBA8;
        v116 = _Block_copy(&aBlock);
        v117 = v165;
        v118 = v1;
        v119 = CFSTR("com.apple.sharingd.SystemUIChanged");
        swift_release(v117);
        v120 = objc_msgSend(v114, "addObserverForName:object:queue:usingBlock:", v119, 0, 0, v116);
        _Block_release(v116);
        swift_unknownObjectRelease(v120);

        v121 = swift_allocObject(&unk_10072CBE0, 24, 7);
        *(_QWORD *)(v121 + 16) = v118;
        v164 = sub_1004F4940;
        v165 = v121;
        aBlock = _NSConcreteStackBlock;
        v161 = 1107296256;
        v162 = sub_10025BBB4;
        v163 = &unk_10072CBF8;
        v122 = _Block_copy(&aBlock);
        v123 = v118;
        v124 = v154;
        static DispatchQoS.unspecified.getter(v123);
        v166 = _swiftEmptyArrayStorage;
        v125 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v126 = sub_100008384((uint64_t *)&unk_1007B6410);
        v127 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
        v128 = v155;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v166, v126, v127, v2, v125);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v124, v128, v122);
        _Block_release(v122);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v128, v2);
        (*((void (**)(char *, NSObject *))v157 + 1))(v124, v158);
        swift_release(v165);
        v129 = (objc_class *)type metadata accessor for SDB332SetupAgent(0);
        v159.receiver = v123;
        v159.super_class = v129;
        objc_msgSendSuper2(&v159, "_activate");
        if (qword_1007B41F0 != -1)
          swift_once(&qword_1007B41F0, sub_1004C46F4);
        v130 = type metadata accessor for Logger(0);
        v131 = sub_100221DF8(v130, (uint64_t)qword_1007C37A0);
        v132 = Logger.logObject.getter(v131);
        v133 = static os_log_type_t.default.getter(v132);
        if (os_log_type_enabled(v132, v133))
        {
          v134 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v134 = 0;
          _os_log_impl((void *)&_mh_execute_header, v132, v133, "Activated", v134, 2u);
          swift_slowDealloc(v134, -1, -1);
        }

      }
      else
      {
        if (qword_1007B41F0 != -1)
          swift_once(&qword_1007B41F0, sub_1004C46F4);
        v146 = type metadata accessor for Logger(0);
        v147 = sub_100221DF8(v146, (uint64_t)qword_1007C37A0);
        v158 = Logger.logObject.getter(v147);
        v148 = static os_log_type_t.default.getter(v158);
        if (os_log_type_enabled(v158, v148))
        {
          v149 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v149 = 0;
          _os_log_impl((void *)&_mh_execute_header, v158, v148, "b332PairingEnabled = false. Don't activate.", v149, 2u);
          swift_slowDealloc(v149, -1, -1);
        }

      }
    }
    else
    {
      v135 = SFDeviceModelCodeGet();
      v136 = sub_1004F4668(v135);
      v137 = String.init(cString:)(v136);
      v139 = v138;
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v140 = type metadata accessor for Logger(0);
      sub_100221DF8(v140, (uint64_t)qword_1007C37A0);
      swift_bridgeObjectRetain(v139);
      v142 = Logger.logObject.getter(v141);
      v143 = static os_log_type_t.default.getter(v142);
      if (os_log_type_enabled(v142, v143))
      {
        v144 = (uint8_t *)swift_slowAlloc(12, -1);
        v145 = (void **)swift_slowAlloc(32, -1);
        aBlock = v145;
        *(_DWORD *)v144 = 136315138;
        swift_bridgeObjectRetain(v139);
        v166 = (_QWORD *)sub_100228BD8(v137, (unint64_t)v139, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v144 + 4);
        swift_bridgeObjectRelease_n(v139, 3);
        _os_log_impl((void *)&_mh_execute_header, v142, v143, "Device model code (%s) does not support Apple Pencil. Don't activate.", v144, 0xCu);
        swift_arrayDestroy(v145, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v145, -1, -1);
        swift_slowDealloc(v144, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v139, 2);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

__n128 sub_1004C8020(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  id v12;
  id v13;
  id v14;
  __n128 result;

  if (a2)
  {
    if (a3)
    {
      v8 = a2;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v11 = v10;
      v12 = a3;
      v13 = a1;
      v14 = a5;
      sub_1004C6C94(v9, v11);

      return swift_bridgeObjectRelease(v11);
    }
  }
  return result;
}

uint64_t sub_1004C80D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Erasing B332 setup defaults", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  sub_1004D031C();
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_10044B918();

  v8 = type metadata accessor for SDB332SetupAgentSessionState(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  sub_1004C5524();
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) = v9;
  return swift_release(v10);
}

uint64_t sub_1004C8208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1004C82AC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v16 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v16 + 16) = a2;
  aBlock[4] = a4;
  v26 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a5;
  v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(a2);
  v24 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008384((uint64_t *)&unk_1007B6410);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v19, v20, v9, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v26);
}

void sub_1004C849C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  const void *v8;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "sharingCallBluetoothAddressChangedHandler", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "bluetoothAddressChangedHandler");
  if (v7)
  {
    v8 = v7;
    (*((void (**)(void))v7 + 2))();
    _Block_release(v8);
  }
}

uint64_t sub_1004C85B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char v8;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "sendsUIUpdates = false, sharingDisableB332UIUpdates", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v8 = *(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
  swift_retain();
  sub_1004C4854(v8, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
  return swift_release(v7);
}

void sub_1004C86C0()
{
  sub_1004C88EC("sharing.setB332Defaults", sub_10044B714);
}

uint64_t sub_1004C86D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = a3;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a4;
  v13 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v6, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1004C889C()
{
  sub_1004C8A10("sharing.b332WhatsNewSetup1", 1, 0);
}

void sub_1004C88B0()
{
  sub_1004C8A10("sharing.b332WhatsNewSetup2", 1, 1000);
}

void sub_1004C88C4()
{
  sub_1004C8A10("sharing.b332WhatsNewSetup3", 0, 1000);
}

void sub_1004C88D8()
{
  sub_1004C88EC("sharing.b332WhatsNewSetup4", sub_10044B918);
}

void sub_1004C88EC(const char *a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  a2();

}

void sub_1004C89FC()
{
  sub_1004C8A10("sharing.b332WhatsNewSetup5", 1, 2);
}

void sub_1004C8A10(const char *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  id v13;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a1, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = (void *)objc_opt_self(NSUserDefaults);
  v12 = objc_msgSend(v11, "standardUserDefaults");
  sub_10044B468(a2 & 1);

  v13 = objc_msgSend(v11, "standardUserDefaults");
  sub_10044B338(a3);

}

id sub_1004C8B54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "sharing.simulateB332TapToPair", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return objc_msgSend(a1, "pairTapped");
}

void sub_1004C8C30()
{
  sub_1004C8C50("ssharing.b332SetHasSeenScribbleEducation", 1);
}

void sub_1004C8C40()
{
  sub_1004C8C50("ssharing.b332SetHasNotSeenScribbleEducation", 0);
}

void sub_1004C8C50(const char *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_10044B4A0(a2 & 1);

}

uint64_t sub_1004C8D68(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Notification(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v21[1] = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_10072D018, v14 + v12, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1004F4B4C;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072D030;
  v16 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(a2);
  v25 = _swiftEmptyArrayStorage;
  v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100008384((uint64_t *)&unk_1007B6410);
  v19 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
  return swift_release(v27);
}

void sub_1004C8FD0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  const char *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  double v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  _QWORD v64[3];
  void *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  const char *v70;
  __int128 v71;
  __int128 v72;

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007C37A0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v64[1] = a1;
    v64[2] = v12;
    v65 = v1;
    v66 = v6;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v71 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = Notification.userInfo.getter(v17);
    if (v18)
    {
      v19 = (const char *)v18;
      v20 = Dictionary.description.getter(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v22 = v21;
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v69 = 0;
      v70 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v70);
      v22 = (const char *)0x800000010061F3E0;
      v20 = 0xD00000000000002BLL;
    }
    v69 = sub_100228BD8(v20, (unint64_t)v22, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v16 + 4);
    v24 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v24);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "showPencilUI. Info: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v2 = v65;
    v6 = v66;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  }
  v25 = Notification.userInfo.getter(v23);
  if (!v25)
  {
    v33 = Logger.logObject.getter(0);
    v34 = static os_log_type_t.error.getter(v33);
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_37;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "showPencilUI called without userInfo";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v33, v34, v36, v35, 2u);
    v42 = v35;
LABEL_36:
    swift_slowDealloc(v42, -1, -1);
    goto LABEL_37;
  }
  v26 = v25;
  v67 = 0x657079546975;
  v68 = 0xE600000000000000;
  AnyHashable.init<A>(_:)(&v69, &v67, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_10045C1D0((uint64_t)&v69), (v28 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(v26 + 56) + 32 * v27, (uint64_t)&v71);
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  sub_10022E6C0((uint64_t)&v69);
  if (!*((_QWORD *)&v72 + 1))
  {
    swift_bridgeObjectRelease((const char *)v26);
    v37 = sub_10000D0F0((uint64_t)&v71, (uint64_t *)&unk_1007B6890);
LABEL_23:
    v33 = Logger.logObject.getter(v37);
    v34 = static os_log_type_t.error.getter(v33);
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_37;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "showPencilUI called without UI type";
    goto LABEL_35;
  }
  if ((swift_dynamicCast(&v67, &v71, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease((const char *)v26);
    goto LABEL_23;
  }
  v30 = v67;
  v29 = (const char *)v68;
  v67 = 0x79546C69636E6570;
  v68 = 0xEA00000000006570;
  AnyHashable.init<A>(_:)(&v69, &v67, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v26 + 16) && (v31 = sub_10045C1D0((uint64_t)&v69), (v32 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(v26 + 56) + 32 * v31, (uint64_t)&v71);
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  sub_10022E6C0((uint64_t)&v69);
  if (!*((_QWORD *)&v72 + 1))
  {
    *(_QWORD *)&v39 = swift_bridgeObjectRelease(v29).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v26, v39);
    v40 = sub_10000D0F0((uint64_t)&v71, (uint64_t *)&unk_1007B6890);
LABEL_33:
    v33 = Logger.logObject.getter(v40);
    v34 = static os_log_type_t.error.getter(v33);
    if (!os_log_type_enabled(v33, v34))
      goto LABEL_37;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    v36 = "showPencilUI called without valid Pencil type";
    goto LABEL_35;
  }
  if ((swift_dynamicCast(&v67, &v71, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
  {
    *(_QWORD *)&v41 = swift_bridgeObjectRelease(v29).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v26, v41);
    goto LABEL_33;
  }
  v38 = v67;
  if (v30 == 0x6961507473726966 && v29 == (const char *)0xE900000000000072)
  {
    swift_bridgeObjectRelease((const char *)0xE900000000000072);
LABEL_40:
    v43 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v6, 1, 1, v43);
    type metadata accessor for MainActor(0);
    v44 = v2;
    v45 = static MainActor.shared.getter(v44);
    v46 = (_QWORD *)swift_allocObject(&unk_10072D0B8, 56, 7);
    v46[2] = v45;
    v46[3] = &protocol witness table for MainActor;
    v46[4] = v44;
    v46[5] = v38;
    v46[6] = v26;
    v47 = &unk_1007C4458;
LABEL_41:
    v48 = sub_100252EC0((uint64_t)v6, (uint64_t)v47, (uint64_t)v46);
    swift_release(v48);
    return;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6961507473726966, 0xE900000000000072, v30, v29, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v29);
    goto LABEL_40;
  }
  if (v30 == 1819044208 && v29 == (const char *)0xE400000000000000)
  {
    swift_bridgeObjectRelease((const char *)0xE400000000000000);
LABEL_47:
    v49 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v6, 1, 1, v49);
    type metadata accessor for MainActor(0);
    v50 = v2;
    v51 = static MainActor.shared.getter(v50);
    v46 = (_QWORD *)swift_allocObject(&unk_10072D090, 56, 7);
    v46[2] = v51;
    v46[3] = &protocol witness table for MainActor;
    v46[4] = v50;
    v46[5] = v38;
    v46[6] = v26;
    v47 = &unk_1007C4448;
    goto LABEL_41;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1819044208, 0xE400000000000000, v30, v29, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v29);
    goto LABEL_47;
  }
  if (v30 == 0x6574746142776F6CLL && v29 == (const char *)0xEE006C6C69507972)
  {
    swift_bridgeObjectRelease((const char *)0xEE006C6C69507972);
LABEL_53:
    v67 = 0x656772616863;
    v68 = 0xE600000000000000;
    AnyHashable.init<A>(_:)(&v69, &v67, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v26 + 16) && (v52 = sub_10045C1D0((uint64_t)&v69), (v53 & 1) != 0))
    {
      sub_10022E77C(*(_QWORD *)(v26 + 56) + 32 * v52, (uint64_t)&v71);
    }
    else
    {
      v71 = 0u;
      v72 = 0u;
    }
    swift_bridgeObjectRelease((const char *)v26);
    sub_10022E6C0((uint64_t)&v69);
    if (*((_QWORD *)&v72 + 1))
    {
      v54 = swift_dynamicCast(&v67, &v71, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
      if ((v54 & 1) != 0)
      {
        v55 = v67;
        v56 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v6, 1, 1, v56);
        type metadata accessor for MainActor(0);
        v57 = v2;
        v58 = static MainActor.shared.getter(v57);
        v46 = (_QWORD *)swift_allocObject(&unk_10072D068, 56, 7);
        v46[2] = v58;
        v46[3] = &protocol witness table for MainActor;
        v46[4] = v57;
        v46[5] = v38;
        v46[6] = v55;
        v47 = &unk_1007C4438;
        goto LABEL_41;
      }
    }
    else
    {
      v54 = sub_10000D0F0((uint64_t)&v71, (uint64_t *)&unk_1007B6890);
    }
    v33 = Logger.logObject.getter(v54);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      v36 = "showPencilUI called for low-battery pill without valid charge";
      goto LABEL_35;
    }
LABEL_37:

    return;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574746142776F6CLL, 0xEE006C6C69507972, v30, v29, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v29);
    goto LABEL_53;
  }
  *(_QWORD *)&v59 = swift_bridgeObjectRelease((const char *)v26).n128_u64[0];
  swift_bridgeObjectRetain(v29, v59);
  v33 = Logger.logObject.getter(v60);
  v61 = static os_log_type_t.error.getter(v33);
  if (os_log_type_enabled(v33, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc(12, -1);
    v63 = swift_slowAlloc(32, -1);
    v69 = v63;
    *(_DWORD *)v62 = 136315138;
    swift_bridgeObjectRetain(v29);
    *(_QWORD *)&v71 = sub_100228BD8(v30, (unint64_t)v29, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, (char *)&v71 + 8, v62 + 4);
    swift_bridgeObjectRelease_n(v29, 3);
    _os_log_impl((void *)&_mh_execute_header, v33, v61, "showPencilUI called with unrecognized UI type: %s", v62, 0xCu);
    swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    v42 = v62;
    goto LABEL_36;
  }

  swift_bridgeObjectRelease_n(v29, 2);
}

void sub_1004C99E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  void *v60;
  NSString v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  Swift::String v73;
  const char *v74;
  __n128 v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint8_t *v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  const char *v95;
  void *v96;
  id v97;
  NSString v98;
  id v99;
  uint64_t v100;
  const char *v101;
  const char *v102;
  id v103;
  id v104;
  const char *v105;
  const char *v106;
  Swift::String v107;
  const char *object;
  __n128 v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint8_t *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  char v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t *v137;
  const char *v138;
  uint64_t v139;
  const char *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  const char *v147;
  char v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint8_t *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  int v167;
  Swift::String v168;
  const char *v169;
  __n128 v170;
  const char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  uint8_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  Swift::String v182;
  const char *v183;
  __n128 v184;
  const char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  NSObject *v189;
  os_log_type_t v190;
  uint8_t *v191;
  Swift::String v192;
  const char *v193;
  __n128 v194;
  const char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint8_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  Swift::String v210;
  const char *v211;
  __n128 v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  NSObject *v217;
  os_log_type_t v218;
  uint8_t *v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  unint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t aBlock;
  const char *v242;
  uint64_t v243[3];

  v1 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v1);
  v3 = (char *)&v220 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v240 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v238 = *(_QWORD *)(v7 - 8);
  v239 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v236 = *(_QWORD *)(v10 - 8);
  v237 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v220 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v220 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v220 - v17;
  v19 = *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if ((*(_BYTE *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) != 0)
    return;
  v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
  v21 = v20 > 4;
  v22 = (1 << v20) & 0x1A;
  if (v21 || v22 == 0)
    return;
  v233 = v4;
  v234 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v232 = v3;
  v24 = *(_QWORD *)(v19 + 16);
  v235 = v0;
  v25 = v0;
  swift_retain();
  v231 = (unint64_t)"<no found.batteryInfo>";
  sub_100283538(916, 0xD000000000000057, (const char *)0x800000010061ECC0, v24, (uint64_t)v25);

  v26 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if ((v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted] & 1) != 0)
  {
    v27 = 1;
    v28 = 1;
  }
  else
  {
    v28 = sub_1004C60F0();
    v27 = v25[v26];
  }
  v25[v26] = v28 & 1;
  sub_1004C5F9C(v27);
  if (v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitorActivated] != 1)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v45 = type metadata accessor for Logger(0);
    v46 = sub_100221DF8(v45, (uint64_t)qword_1007C37A0);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.default.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = v24;
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "System monitor not activated. Bailing.", v50, 2u);
      swift_slowDealloc(v50, -1, -1);

      swift_release(v49);
      return;
    }

    goto LABEL_25;
  }
  v29 = *(_QWORD *)&v235[v234];
  if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) & 1) != 0)
  {
LABEL_25:
    swift_release(v24);
    return;
  }
  v228 = v9;
  v230 = v24;
  v30 = v29 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  v31 = *(_QWORD *)v30;
  v32 = *(unsigned __int8 *)(v30 + 8);
  sub_1004D608C();
  v229 = v25;
  LODWORD(v226) = v32;
  v227 = v31;
  sub_1004D1598();
  sub_1004D2F24();
  sub_1004D33B0();
  sub_1004D37D4();
  v33 = v25;
  sub_100283544(948, 0xD000000000000057, (const char *)(v231 | 0x8000000000000000), v230, v33);

  sub_1004D664C();
  v225 = 0;
  v224 = (char *)v33;
  v43 = *(_QWORD *)&v235[v234];
  v51 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty;
  LODWORD(v33) = *(unsigned __int8 *)(v43
                                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty);
  if ((_DWORD)v33 == 2)
  {
    v52 = *(void **)&v224[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
    swift_retain();
    v53 = objc_msgSend(v52, "sharedPairingAgent");
    if (!v53)
    {
      __break(1u);
      goto LABEL_162;
    }
    v54 = v53;
    sub_1004D0A8C();
    v56 = v55;

    v33 = v56;
    if ((unint64_t)v56 >> 62)
    {
      if (v56 >= 0)
        v56 &= 0xFFFFFFFFFFFFFF8uLL;
      swift_bridgeObjectRetain((const char *)v33);
      v57 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease((const char *)v33);
    }
    else
    {
      v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease((const char *)v33);
    v58 = v57 == 0;
    LOBYTE(v33) = *(_BYTE *)(v43 + v51);
  }
  else
  {
    v58 = v33 & 1;
    swift_retain();
  }
  *(_BYTE *)(v43 + v51) = v58;
  sub_1004C4C58(v33);
  swift_release(v43);
  v59 = *(_QWORD *)&v235[v234];
  v60 = *(void **)(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  if ((sub_10044ABB4() & 1) != 0)
  {
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v60, "BOOLForKey:", v61);
    swift_release(v59);

    if ((v62 & 1) == 0)
    {
      v43 = v225;
      sub_1004D6960();
      if (!v43)
      {
        sub_1004D6D10();
        sub_1004D3E10();
        v63 = v226;
        if (v227 == 3)
          v64 = v226;
        else
          v64 = 1;
        if ((v64 & 1) == 0)
          sub_1004D7370(0);
        sub_1004D3C7C();
        sub_1004D45A8();
        if ((v63 & 1) == 0 && (v227 == 4 || v227 == 1))
        {
          v65 = *(_QWORD *)&v235[v234];
          if (*(_BYTE *)(v65 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) == 1)
          {
            sub_1004CFEB4(0);
            v65 = *(_QWORD *)&v235[v234];
          }
          v66 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
          if ((*(_BYTE *)(v65 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
          {
            sub_1004D4A68(1, v227);
            v65 = *(_QWORD *)&v235[v234];
            v66 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
          }
          *(_BYTE *)(v65 + v66) = 1;
        }
        sub_1004D7600();
        sub_1004D78D0();
        v222 = sub_1004D7DFC();
        v223 = v67;
        v226 = v68;
        v227 = v69;
        v225 = 0;
        v141 = v222;
        v142 = v67;
        sub_10022E4A8(v222, v67);
        v143 = v227;
        v221 = v227 >> 62;
        v144 = v226;
        sub_10022E4A8(v226, v227);
        sub_10028361C(1005, (os_log_t)0xD000000000000057, (const char *)(v231 | 0x8000000000000000), v230, v141, v142, v144, v143);
        sub_100225AB4(v141, v142);
        __asm { BR              X9 }
      }
      goto LABEL_13;
    }
  }
  else
  {
    swift_release(v59);
  }
  v70 = *(unsigned __int8 *)(*(_QWORD *)&v235[v234]
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty);
  v43 = v225;
  if (v70 == 2)
  {
    __break(1u);
    JUMPOUT(0x1004CBEB4);
  }
  v71 = v230 + 16;
  v72 = v224;
  if ((v70 & 1) != 0)
  {
    aBlock = 0xD000000000000057;
    v242 = (const char *)(v231 | 0x8000000000000000);
    v243[0] = 1055;
    v107._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v107._object;
    String.append(_:)(v107);
    v109 = swift_bridgeObjectRelease(object);
    v110 = v242;
    v111 = String.hashValue.getter(aBlock, v242, v109);
    swift_bridgeObjectRelease(v110);
    swift_beginAccess(v71, &aBlock, 33, 0);
    LOBYTE(v110) = sub_10045DE64(v243, v111);
    swift_endAccess(&aBlock);
    if ((v110 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v112 = type metadata accessor for Logger(0);
      v113 = sub_100221DF8(v112, (uint64_t)qword_1007C37A0);
      v114 = Logger.logObject.getter(v113);
      v115 = static os_log_type_t.default.getter(v114);
      if (os_log_type_enabled(v114, v115))
      {
        v116 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v116 = 0;
        _os_log_impl((void *)&_mh_execute_header, v114, v115, "pairedPencilsIsEmpty path", v116, 2u);
        v117 = v116;
        v43 = v225;
        swift_slowDealloc(v117, -1, -1);
      }

    }
    sub_1004D6960();
    if (!v43)
    {
      sub_1004D6D10();
      sub_1004D7600();
      v118 = v235;
      v119 = *(_QWORD *)&v235[v234];
      v120 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
      if ((*(_BYTE *)(v119 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
      {
        sub_1004D7370(1);
        v119 = *(_QWORD *)&v118[v234];
        v120 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
      }
      *(_BYTE *)(v119 + v120) = 1;
      sub_1004D78D0();
      v121 = sub_1004D7DFC();
      v123 = v122;
      v125 = v124;
      v127 = v126;
      sub_10022E4A8(v121, v122);
      sub_10022E4A8(v125, v127);
      sub_100225AB4(v121, v123);
      __asm { BR              X9 }
    }
    goto LABEL_13;
  }
  aBlock = 0xD000000000000057;
  v242 = (const char *)(v231 | 0x8000000000000000);
  v243[0] = 1083;
  v73._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v74 = (const char *)v73._object;
  String.append(_:)(v73);
  v75 = swift_bridgeObjectRelease(v74);
  v76 = v242;
  v77 = String.hashValue.getter(aBlock, v242, v75);
  swift_bridgeObjectRelease(v76);
  swift_beginAccess(v71, &aBlock, 33, 0);
  LOBYTE(v76) = sub_10045DE64(v243, v77);
  swift_endAccess(&aBlock);
  if ((v76 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v78 = type metadata accessor for Logger(0);
    v79 = sub_100221DF8(v78, (uint64_t)qword_1007C37A0);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.default.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "have a paired Pencil path", v82, 2u);
      v83 = v82;
      v43 = v225;
      swift_slowDealloc(v83, -1, -1);
    }

  }
  sub_1004D7600();
  if (v43)
  {
LABEL_13:
    v34 = v230;
    aBlock = v43;
    swift_errorRetain(v43);
    v35 = sub_100008384(&qword_1007B5A60);
    if (swift_dynamicCast(v243, &aBlock, v35, &type metadata for SDRunState, 0) && LOBYTE(v243[0]) == 3)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100221DF8(v36, (uint64_t)qword_1007C37A0);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = v43;
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "run() failed", v41, 2u);
        v42 = v41;
        v43 = v40;
        v34 = v230;
        swift_slowDealloc(v42, -1, -1);
      }

      v44 = (uint64_t)v232;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v240 + 56))(v232, 1, 1, v233);
      sub_1004CF030(v44, 0);
      swift_release(v34);
      swift_errorRelease(v43);
      sub_10000D0F0(v44, &qword_1007B7280);
    }
    else
    {
      swift_errorRelease(v43);
      swift_release(v34);
    }
    swift_errorRelease(aBlock);
    return;
  }
  v84 = v234;
  if (*(_BYTE *)(*(_QWORD *)&v235[v234]
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
    goto LABEL_114;
  v85 = objc_msgSend(*(id *)&v72[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "sharedPairingAgent");
  if (!v85)
  {
    __break(1u);
    JUMPOUT(0x1004CBEFCLL);
  }
  v86 = v85;
  sub_1004D0A8C();
  v88 = v87;

  if (!((unint64_t)v88 >> 62))
  {
    if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_65;
LABEL_113:
    swift_bridgeObjectRelease((const char *)v88);
    v84 = v234;
    goto LABEL_114;
  }
  if (v88 < 0)
    v156 = v88;
  else
    v156 = v88 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v88);
  v157 = _CocoaArrayWrapper.endIndex.getter(v156);
  swift_bridgeObjectRelease((const char *)v88);
  if (!v157)
    goto LABEL_113;
LABEL_65:
  v225 = 0;
  if ((v88 & 0xC000000000000001) != 0)
  {
    v89 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v88);
  }
  else
  {
    if (!*(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x1004CBE44);
    }
    v89 = *(id *)(v88 + 32);
  }
  v90 = v89;
  v91 = objc_msgSend(v89, "identifier", swift_bridgeObjectRelease((const char *)v88).n128_f64[0]);

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v91);
  v93 = UUID.uuidString.getter(v92);
  v95 = v94;
  (*(void (**)(char *, uint64_t))(v240 + 8))(v6, v233);
  v96 = (void *)objc_opt_self(NSUserDefaults);
  v97 = objc_msgSend(v96, "standardUserDefaults");
  v98 = String._bridgeToObjectiveC()();
  v99 = objc_msgSend(v97, "stringForKey:", v98);

  if (!v99)
  {
    swift_bridgeObjectRelease(v95);
LABEL_100:
    v43 = v225;
    v84 = v234;
LABEL_101:
    v72 = v224;
    goto LABEL_114;
  }
  v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
  v102 = v101;
  v103 = objc_msgSend(v96, "standardUserDefaults");
  v104 = objc_msgSend(v103, "stringForKey:", v99);

  if (!v104)
  {
    swift_bridgeObjectRelease(v95);
    swift_bridgeObjectRelease(v102);
    goto LABEL_100;
  }
  v239 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
  v106 = v105;

  if (v100 == v93 && v102 == v95)
  {
    swift_bridgeObjectRelease_n(v95, 2);
  }
  else
  {
    v128 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v102, v93, v95, 0);
    *(_QWORD *)&v129 = swift_bridgeObjectRelease(v102).n128_u64[0];
    swift_bridgeObjectRelease(v95, v129);
    if ((v128 & 1) == 0)
    {
LABEL_99:
      swift_bridgeObjectRelease(v106);
      goto LABEL_100;
    }
  }
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v130 = type metadata accessor for Logger(0);
  v131 = sub_100221DF8(v130, (uint64_t)qword_1007C37A0);
  v132 = v224;
  swift_bridgeObjectRetain_n(v106, 2);
  v133 = v132;
  v238 = v131;
  v134 = Logger.logObject.getter(v133);
  v135 = static os_log_type_t.default.getter(v134);
  if (os_log_type_enabled(v134, v135))
  {
    v136 = swift_slowAlloc(22, -1);
    v237 = swift_slowAlloc(64, -1);
    v243[0] = v237;
    *(_DWORD *)v136 = 136315394;
    swift_bridgeObjectRetain(v106);
    aBlock = sub_100228BD8(v239, (unint64_t)v106, v243);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v242, v136 + 4);
    swift_bridgeObjectRelease_n(v106, 3);
    *(_WORD *)(v136 + 12) = 2080;
    v137 = (uint64_t *)(*(_QWORD *)&v235[v234] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
    v138 = (const char *)v137[1];
    if (v138)
    {
      v139 = *v137;
      v140 = (const char *)v137[1];
    }
    else
    {
      aBlock = 0;
      v242 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v242);
      v139 = 0xD000000000000015;
      v140 = (const char *)0x8000000100612DF0;
    }
    swift_bridgeObjectRetain(v138);
    aBlock = sub_100228BD8(v139, (unint64_t)v140, v243);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v242, v136 + 14);

    swift_bridgeObjectRelease(v140);
    _os_log_impl((void *)&_mh_execute_header, v134, v135, "getHash: %s, sessionState.babyHash: %s", (uint8_t *)v136, 0x16u);
    v145 = v237;
    swift_arrayDestroy(v237, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v145, -1, -1);
    swift_slowDealloc(v136, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v106, 2);
  }
  if ((v133[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8] & 1) != 0)
    goto LABEL_99;
  v146 = (_QWORD *)(*(_QWORD *)&v235[v234] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
  v147 = (const char *)v146[1];
  if (!v147)
    goto LABEL_99;
  if (v239 == *v146 && v147 == v106)
  {
    swift_bridgeObjectRelease(v106);
LABEL_103:
    sub_1004D7370(0);
    sub_1004DBC28();
    v150 = Logger.logObject.getter(v149);
    v151 = static os_log_type_t.default.getter(v150);
    if (os_log_type_enabled(v150, v151))
    {
      v152 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v152 = 0;
      _os_log_impl((void *)&_mh_execute_header, v150, v151, "sendsUIUpdates = false, because we already showed battery status for short-hash path", v152, 2u);
      swift_slowDealloc(v152, -1, -1);
    }

    v153 = v234;
    v154 = *(_QWORD *)&v235[v234];
    v155 = *(_BYTE *)(v154 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
    *(_BYTE *)(v154 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
    swift_retain();
    sub_1004C4854(v155, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
    swift_release(v154);
    v84 = v153;
    v43 = v225;
    goto LABEL_101;
  }
  v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v239, v106, *v146, v147, 0);
  swift_bridgeObjectRelease(v106);
  v43 = v225;
  v84 = v234;
  v72 = v224;
  if ((v148 & 1) != 0)
    goto LABEL_103;
LABEL_114:
  v158 = v235;
  v159 = *(_QWORD *)&v235[v84];
  v160 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332;
  if (*(_BYTE *)(v159
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332) == 1)
  {
    v161 = v84;
    sub_1004D7370(1);
    v159 = *(_QWORD *)&v158[v161];
    v160 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332;
  }
  *(_BYTE *)(v159 + v160) = 0;
  sub_1004D78D0();
  v162 = sub_1004D7DFC();
  if (v43)
    goto LABEL_13;
  v31 = v162;
  v13 = v163;
  v18 = v164;
  v12 = v165;
  objc_msgSend(v72, "startScanning");
  v166 = (char *)sub_1004D8394();
  v167 = *(unsigned __int8 *)(*(_QWORD *)&v235[v234]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
  if (v167 == 2)
  {
    __break(1u);
    JUMPOUT(0x1004CBF08);
  }
  v16 = v166;
  if ((v167 & 1) == 0)
  {
    aBlock = 0xD000000000000057;
    v242 = (const char *)(v231 | 0x8000000000000000);
    v243[0] = 1131;
    v168._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v169 = (const char *)v168._object;
    String.append(_:)(v168);
    v170 = swift_bridgeObjectRelease(v169);
    v171 = v242;
    v172 = String.hashValue.getter(aBlock, v242, v170);
    swift_bridgeObjectRelease(v171);
    swift_beginAccess(v71, &aBlock, 33, 0);
    LOBYTE(v171) = sub_10045DE64(v243, v172);
    swift_endAccess(&aBlock);
    if ((v171 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v173 = type metadata accessor for Logger(0);
      v174 = sub_100221DF8(v173, (uint64_t)qword_1007C37A0);
      v175 = Logger.logObject.getter(v174);
      v176 = static os_log_type_t.default.getter(v175);
      if (os_log_type_enabled(v175, v176))
      {
        v177 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v177 = 0;
        _os_log_impl((void *)&_mh_execute_header, v175, v176, "not-isPaired block", v177, 2u);
        swift_slowDealloc(v177, -1, -1);
      }

    }
    objc_msgSend(v224, "startBatteryScannerForPeripheral:", v16);
    sub_1004D6960();
    v178 = *(_QWORD *)&v235[v234];
    v179 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332;
    if (*(_BYTE *)(v178
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332) == 1)
    {
      sub_1004D7370(1);
      v178 = *(_QWORD *)&v235[v234];
      v179 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332;
    }
    *(_BYTE *)(v178 + v179) = 0;
    sub_1004DD258();
    v181 = *(_QWORD *)(v180 + 16);
    swift_bridgeObjectRelease((const char *)v180);
    if (!v181)
      sub_1004DBE84();
    sub_1004D8A94();
    aBlock = 0xD000000000000057;
    v242 = (const char *)(v231 | 0x8000000000000000);
    v243[0] = 1141;
    v182._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v183 = (const char *)v182._object;
    String.append(_:)(v182);
    v184 = swift_bridgeObjectRelease(v183);
    v185 = v242;
    v186 = String.hashValue.getter(aBlock, v242, v184);
    swift_bridgeObjectRelease(v185);
    swift_beginAccess(v71, &aBlock, 33, 0);
    LOBYTE(v185) = sub_10045DE64(v243, v186);
    swift_endAccess(&aBlock);
    if ((v185 & 1) == 0)
      goto LABEL_134;
    if (qword_1007B41F0 == -1)
    {
LABEL_131:
      v187 = type metadata accessor for Logger(0);
      v188 = sub_100221DF8(v187, (uint64_t)qword_1007C37A0);
      v189 = Logger.logObject.getter(v188);
      v190 = static os_log_type_t.default.getter(v189);
      if (os_log_type_enabled(v189, v190))
      {
        v191 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v191 = 0;
        _os_log_impl((void *)&_mh_execute_header, v189, v190, "not-isPaired block 2", v191, 2u);
        swift_slowDealloc(v191, -1, -1);
      }

LABEL_134:
      sub_1004DCDEC();
      if (!v43)
      {
        sub_1004DBE84();
        sub_10022E4A8(v31, v13);
        sub_10022E4A8((uint64_t)v18, (unint64_t)v12);
        sub_100225AB4(v31, v13);
        __asm { BR              X9 }
      }

      sub_100225AB4(v31, v13);
      sub_100225AB4((uint64_t)v18, (unint64_t)v12);
      goto LABEL_13;
    }
LABEL_162:
    swift_once(&qword_1007B41F0, sub_1004C46F4);
    goto LABEL_131;
  }
  aBlock = 0xD000000000000057;
  v242 = (const char *)(v231 | 0x8000000000000000);
  v243[0] = 1117;
  v192._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v193 = (const char *)v192._object;
  String.append(_:)(v192);
  v194 = swift_bridgeObjectRelease(v193);
  v195 = v242;
  v196 = String.hashValue.getter(aBlock, v242, v194);
  swift_bridgeObjectRelease(v195);
  swift_beginAccess(v71, &aBlock, 33, 0);
  LOBYTE(v195) = sub_10045DE64(v243, v196);
  swift_endAccess(&aBlock);
  if ((v195 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v197 = type metadata accessor for Logger(0);
    v198 = sub_100221DF8(v197, (uint64_t)qword_1007C37A0);
    v199 = Logger.logObject.getter(v198);
    v200 = static os_log_type_t.default.getter(v199);
    if (os_log_type_enabled(v199, v200))
    {
      v201 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v201 = 0;
      _os_log_impl((void *)&_mh_execute_header, v199, v200, "isPaired block", v201, 2u);
      swift_slowDealloc(v201, -1, -1);
    }

  }
  sub_1004D7370(0);
  sub_1004D8A94();
  v225 = 0;
  if ((*(_BYTE *)(*(_QWORD *)&v235[v234]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) & 1) == 0)
  {
    v202 = v225;
    sub_1004DB8B8();
    v225 = v202;
    sub_1004DBC28();
    *(_BYTE *)(*(_QWORD *)&v235[v234] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) = 1;
  }
  v203 = *(_QWORD *)&v235[v234];
  v204 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
  if ((*(_BYTE *)(v203 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) & 1) != 0)
  {
    v205 = 1;
  }
  else
  {
    *(_BYTE *)(v203 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) = 0;
    v206 = *(_QWORD *)&v235[v234];
    v207 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess;
    if ((*(_BYTE *)(v206 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) & 1) == 0)
    {
      sub_1004DBC28();
      v206 = *(_QWORD *)&v235[v234];
      v207 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess;
    }
    *(_BYTE *)(v206 + v207) = 1;
    v203 = *(_QWORD *)&v235[v234];
    v204 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
    v205 = *(_BYTE *)(v203 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
  }
  *(_BYTE *)(v203 + v204) = 1;
  swift_retain();
  sub_1004C4854(v205, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");

  swift_release(v203);
  sub_100225AB4(v31, v13);
  sub_100225AB4((uint64_t)v18, (unint64_t)v12);
  v208 = *(_QWORD *)&v235[v234];
  swift_retain();
  sub_1004C50D8();
  swift_release(v208);
  v209 = v224;
  objc_msgSend(v224, "stopBatteryScanner");
  objc_msgSend(v209, "stopScanning");
  sub_1004D522C();
  v43 = v225;
  sub_1004D5830();
  if (v43)
    goto LABEL_13;
  aBlock = 0xD000000000000057;
  v242 = (const char *)(v231 | 0x8000000000000000);
  v243[0] = 1172;
  v210._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v211 = (const char *)v210._object;
  String.append(_:)(v210);
  v212 = swift_bridgeObjectRelease(v211);
  v213 = v242;
  v214 = String.hashValue.getter(aBlock, v242, v212);
  swift_bridgeObjectRelease(v213);
  swift_beginAccess(v230 + 16, &aBlock, 33, 0);
  LOBYTE(v213) = sub_10045DE64(v243, v214);
  swift_endAccess(&aBlock);
  if ((v213 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v215 = type metadata accessor for Logger(0);
    v216 = sub_100221DF8(v215, (uint64_t)qword_1007C37A0);
    v217 = Logger.logObject.getter(v216);
    v218 = static os_log_type_t.default.getter(v217);
    if (os_log_type_enabled(v217, v218))
    {
      v219 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v219 = 0;
      _os_log_impl((void *)&_mh_execute_header, v217, v218, "All cleanup completely done.", v219, 2u);
      swift_slowDealloc(v219, -1, -1);
    }
    swift_release(v230);

  }
  else
  {
    swift_release(v230);
  }
}

void sub_1004CBF4C(_BYTE *a1)
{
  uint64_t v2;
  char v3;
  char v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  id v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)();
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  const char *v77;
  double v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)();
  uint64_t v84;
  const char *v85;
  const char *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  id v92;
  NSObject *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  NSObject *v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  NSObject *v106;
  id v107;
  os_log_type_t v108;
  uint64_t v109;
  NSObject *log;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  void *aBlock;
  uint64_t v116;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;

  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if ((a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted] & 1) != 0)
  {
    v3 = 1;
    v4 = 1;
  }
  else
  {
    v4 = sub_1004C60F0();
    v3 = a1[v2];
  }
  a1[v2] = v4 & 1;
  sub_1004C5F9C(v3);
  v5 = objc_msgSend(objc_allocWithZone((Class)FBSOrientationObserver), "init");
  v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver;
  v7 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver];
  *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver] = v5;

  v8 = swift_allocObject(&unk_10072CC30, 24, 7);
  *(_QWORD *)(v8 + 16) = a1;
  v9 = *(void **)&a1[v6];
  if (!v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  v10 = v8;
  v119 = sub_1004F4948;
  v120 = v8;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_1002C3A3C;
  v118 = &unk_10072CC48;
  v11 = _Block_copy(&aBlock);
  v12 = v120;
  v13 = a1;
  swift_retain();
  v14 = v9;
  swift_release(v12);
  objc_msgSend(v14, "activeInterfaceOrientationWithCompletion:", v11);
  _Block_release(v11);

  v15 = *(void **)&a1[v6];
  if (!v15)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v119 = sub_1004F4948;
  v120 = v10;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_1002C3A3C;
  v118 = &unk_10072CC70;
  v16 = _Block_copy(&aBlock);
  v17 = v120;
  swift_retain();
  v18 = v15;
  swift_release(v17);
  objc_msgSend(v18, "setHandler:", v16);
  _Block_release(v16);

  v19 = swift_allocObject(&unk_10072CCA8, 24, 7);
  *(_QWORD *)(v19 + 16) = v13;
  v20 = *(void **)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_powerSourceMonitor];
  v21 = swift_allocObject(&unk_10072CCD0, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1004F4950;
  *(_QWORD *)(v21 + 24) = v19;
  v119 = sub_1004F497C;
  v120 = v21;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_1002C3A3C;
  v118 = &unk_10072CCE8;
  v22 = _Block_copy(&aBlock);
  v23 = v120;
  v24 = v13;
  swift_retain();
  swift_release(v23);
  objc_msgSend(v20, "setPowerSourceFoundHandler:", v22);
  _Block_release(v22);
  v25 = swift_allocObject(&unk_10072CD20, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_1004F4950;
  *(_QWORD *)(v25 + 24) = v19;
  v119 = sub_100287F38;
  v120 = v25;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_1004C4424;
  v118 = &unk_10072CD38;
  v26 = _Block_copy(&aBlock);
  v27 = v120;
  swift_retain();
  swift_release(v27);
  objc_msgSend(v20, "setPowerSourceChangedHandler:", v26);
  _Block_release(v26);
  v28 = swift_allocObject(&unk_10072CD70, 24, 7);
  *(_QWORD *)(v28 + 16) = v24;
  v119 = sub_1004F4984;
  v120 = v28;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_1002C3A3C;
  v118 = &unk_10072CD88;
  v29 = _Block_copy(&aBlock);
  v30 = v120;
  v31 = v24;
  swift_release(v30);
  objc_msgSend(v20, "setPowerSourceLostHandler:", v29);
  _Block_release(v29);
  objc_msgSend(v20, "activateWithCompletion:", 0);
  v32 = objc_msgSend(objc_allocWithZone((Class)CBCentralManager), "initWithDelegate:queue:", v31, *(_QWORD *)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]);
  v33 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  v34 = *(void **)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
  *(_QWORD *)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] = v32;

  v35 = objc_msgSend(objc_allocWithZone((Class)ACCBLEPairingProvider), "initWithDelegate:", v31);
  v36 = *(void **)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider];
  *(_QWORD *)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider] = v35;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v37 = type metadata accessor for Logger(0);
  sub_100221DF8(v37, (uint64_t)qword_1007C37A0);
  v38 = v31;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  v111 = v19;
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v41 = 67109120;
    LODWORD(aBlock) = objc_msgSend(*(id *)&v31[v33], "isScanning");
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, (char *)&aBlock + 4, v41 + 4);

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "scanning: %{BOOL}d", v41, 8u);
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {

    v39 = v38;
  }

  v42 = v38;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter(v43);
  v112 = v10;
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v45 = 138412290;
    v47 = *(Class *)((char *)&v42->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor);
    aBlock = (uint64_t)v47;
    v48 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, &v116, v45 + 4);
    *v46 = v47;

    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Setting handlers on systemMonitor %@...", v45, 0xCu);
    v49 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v46, 1, v49);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);
  }
  else
  {

    v43 = v42;
  }

  v50 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  v51 = *(Class *)((char *)&v42->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor);
  v52 = swift_allocObject(&unk_10072CDC0, 24, 7);
  *(_QWORD *)(v52 + 16) = v42;
  v119 = sub_1004F498C;
  v120 = v52;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_10025BBB4;
  v118 = &unk_10072CDD8;
  v53 = _Block_copy(&aBlock);
  v54 = v120;
  v55 = v42;
  v56 = v51;
  swift_release(v54);
  objc_msgSend(v56, "setSystemLockStateChangedHandler:", v53);
  _Block_release(v53);

  v57 = *(Class *)((char *)&v42->isa + v50);
  v58 = swift_allocObject(&unk_10072BE40, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16, v55);
  v119 = sub_1004F49AC;
  v120 = v58;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_10025BBB4;
  v118 = &unk_10072CE00;
  v59 = _Block_copy(&aBlock);
  v60 = v120;
  v61 = v57;
  swift_release(v60);
  objc_msgSend(v61, "setBluetoothAddressChangedHandler:", v59);
  _Block_release(v59);

  v62 = v55;
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter(v63);
  if (os_log_type_enabled(v63, v64))
  {
    v108 = v64;
    log = v63;
    v65 = swift_slowAlloc(32, -1);
    v66 = (_QWORD *)swift_slowAlloc(8, -1);
    v109 = swift_slowAlloc(64, -1);
    *(_DWORD *)v65 = 138412802;
    v67 = *(Class *)((char *)&v42->isa + v50);
    v114 = v109;
    aBlock = (uint64_t)v67;
    v68 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, &v116, v65 + 4);
    *v66 = v67;

    *(_WORD *)(v65 + 12) = 2080;
    v69 = objc_msgSend(*(id *)((char *)&v42->isa + v50), "bluetoothAddressChangedHandler");
    if (v69)
    {
      v70 = v69;
      v71 = swift_allocObject(&unk_10072CF28, 24, 7);
      *(_QWORD *)(v71 + 16) = v70;
      v72 = swift_allocObject(&unk_10072CF00, 32, 7);
      *(_QWORD *)(v72 + 16) = sub_1004F4F38;
      *(_QWORD *)(v72 + 24) = v71;
      v73 = sub_1004F5244;
    }
    else
    {
      v73 = 0;
      v72 = 0;
    }
    aBlock = (uint64_t)v73;
    v116 = v72;
    v74 = sub_100008384((uint64_t *)&unk_1007C4418);
    v75 = Optional.debugDescription.getter(v74);
    v77 = v76;
    sub_1002845F4((uint64_t)v73, v72);
    aBlock = sub_100228BD8(v75, (unint64_t)v77, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, &v116, v65 + 14);

    *(_QWORD *)&v78 = swift_bridgeObjectRelease(v77).n128_u64[0];
    *(_WORD *)(v65 + 22) = 2080;
    v79 = objc_msgSend(*(id *)((char *)&v42->isa + v50), "systemLockStateChangedHandler", v78);
    if (v79)
    {
      v80 = v79;
      v81 = swift_allocObject(&unk_10072CED8, 24, 7);
      *(_QWORD *)(v81 + 16) = v80;
      v82 = swift_allocObject(&unk_10072CEB0, 32, 7);
      *(_QWORD *)(v82 + 16) = sub_1004F49E8;
      *(_QWORD *)(v82 + 24) = v81;
      v83 = sub_100287F38;
    }
    else
    {
      v83 = 0;
      v82 = 0;
    }
    aBlock = (uint64_t)v83;
    v116 = v82;
    v84 = Optional.debugDescription.getter(v74);
    v86 = v85;
    sub_1002845F4((uint64_t)v83, v82);
    aBlock = sub_100228BD8(v84, (unint64_t)v86, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, &v116, v65 + 24);

    swift_bridgeObjectRelease(v86);
    _os_log_impl((void *)&_mh_execute_header, log, v108, "Did set handlers on systemMonitor %@. bluetoothAddressChangedHandler: %s, systemLockStateChangedHandler: %s", (uint8_t *)v65, 0x20u);
    v87 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v66, 1, v87);
    swift_slowDealloc(v66, -1, -1);
    swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v109, -1, -1);
    swift_slowDealloc(v65, -1, -1);

  }
  else
  {

  }
  v88 = *(Class *)((char *)&v42->isa + v50);
  v89 = swift_allocObject(&unk_10072BE40, 24, 7);
  swift_unknownObjectWeakInit(v89 + 16, v62);
  v119 = sub_1004F49B4;
  v120 = v89;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_10025BBB4;
  v118 = &unk_10072CE28;
  v90 = _Block_copy(&aBlock);
  v91 = v120;
  v92 = v88;
  swift_release(v91);
  objc_msgSend(v92, "setScreenOnChangedHandler:", v90);
  _Block_release(v90);

  v93 = v62;
  v94 = Logger.logObject.getter(v93);
  v95 = static os_log_type_t.default.getter(v94);
  if (os_log_type_enabled(v94, v95))
  {
    v96 = (uint8_t *)swift_slowAlloc(12, -1);
    v113 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v96 = 138412290;
    v97 = v42;
    v98 = v50;
    v99 = *(Class *)((char *)&v97->isa + v50);
    aBlock = (uint64_t)v99;
    v100 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((void **)&aBlock, &v116, v96 + 4);
    *v113 = v99;
    v50 = v98;
    v42 = v97;

    _os_log_impl((void *)&_mh_execute_header, v94, v95, "Activating systemMonitor %@", v96, 0xCu);
    v101 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v113, 1, v101);
    swift_slowDealloc(v113, -1, -1);
    swift_slowDealloc(v96, -1, -1);
  }
  else
  {

    v94 = v93;
  }

  v102 = *(Class *)((char *)&v42->isa + v50);
  v103 = swift_allocObject(&unk_10072CE60, 24, 7);
  *(_QWORD *)(v103 + 16) = v93;
  v119 = sub_1004F49BC;
  v120 = v103;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v116 = 1107296256;
  v117 = sub_10025BBB4;
  v118 = &unk_10072CE78;
  v104 = _Block_copy(&aBlock);
  v105 = v120;
  v106 = v93;
  v107 = v102;
  swift_release(v105);
  objc_msgSend(v107, "activateWithCompletion:", v104);
  _Block_release(v104);
  swift_release(v112);
  swift_release(v111);

}

uint64_t sub_1004CCC34(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void **v15;
  void **v16;
  void ***v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void ***v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void **aBlock;
  _QWORD v37[4];
  uint64_t v38;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  __chkstk_darwin(v8);
  v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007C37A0);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = (void ***)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v31 = v7;
    aBlock = v11;
    v15 = v11;
    v30 = a2;
    v16 = v15;
    v7 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v37, v14 + 4);
    v17 = v29;
    *v29 = v11;

    a2 = v30;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "new orientation: %@", v14, 0xCu);
    v18 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v17, 1, v18);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  v19 = objc_msgSend(v11, "orientation");
  v20 = swift_allocObject(&unk_10072CF78, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = v19;
  v37[3] = sub_1004F4AA0;
  v38 = v20;
  aBlock = _NSConcreteStackBlock;
  v37[0] = 1107296256;
  v37[1] = sub_10025BBB4;
  v37[2] = &unk_10072CF90;
  v21 = _Block_copy(&aBlock);
  v22 = a2;
  v23 = v32;
  static DispatchQoS.unspecified.getter(v22);
  v35 = _swiftEmptyArrayStorage;
  v24 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_100008384((uint64_t *)&unk_1007B6410);
  v26 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v25, v26, v4, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v23, v7, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v34);
  return swift_release(v38);
}

void sub_1004CCFA8(uint64_t a1, uint64_t a2)
{
  void *Strong;
  id v3;

  *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) = a2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, a2);
  if (Strong)
  {
    v3 = Strong;
    sub_1004C58F8(Strong, 1);

  }
}

void sub_1004CD00C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "productID") != (id)332
    && objc_msgSend(a1, "productID") != (id)482
    && objc_msgSend(a1, "productID") != (id)1106)
  {
    return;
  }
  v7 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8))
    v8 = -1.0;
  else
    v8 = *(double *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel);
  objc_msgSend(a1, "chargeLevel");
  *(double *)v7 = fabs(v9);
  *(_BYTE *)(v7 + 8) = 0;
  sub_1004C6468();
  v10 = (uint64_t)objc_msgSend(a1, "productID");
  if (v10 > 545)
  {
    if (v10 == 1106)
    {
      v11 = 4;
      goto LABEL_17;
    }
    if (v10 == 546)
    {
      v11 = 2;
      goto LABEL_17;
    }
  }
  else
  {
    if (v10 == 332)
    {
      v11 = 1;
      goto LABEL_17;
    }
    if (v10 == 482)
    {
      v11 = 3;
      goto LABEL_17;
    }
  }
  v11 = 0;
LABEL_17:
  v12 = objc_msgSend(a1, "sourceID");
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
  *(_QWORD *)v13 = v12;
  *(_BYTE *)(v13 + 8) = 0;
  sub_1004C99E8();
  if ((*(_BYTE *)(v7 + 8) & 1) == 0)
  {
    v14 = *(double *)v7;
    if ((v8 < 0.0 || vabdd_f64(v8, v14) > 0.005)
      && (objc_msgSend(a1, "productID") == (id)332
       || objc_msgSend(a1, "productID") == (id)482
       || objc_msgSend(a1, "productID") == (id)1106)
      && (objc_msgSend(a1, "charging") & 1) == 0
      && (fabs(v14 + -0.2) <= 0.005 || fabs(v14 + -0.1) <= 0.005))
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v15 = type metadata accessor for Logger(0);
      v16 = sub_100221DF8(v15, (uint64_t)qword_1007C37A0);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reached low battery pill threshold for connected Pencil", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
      v21 = swift_allocObject(&unk_10072BE40, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16, a2);
      type metadata accessor for MainActor(0);
      v22 = swift_retain();
      v23 = static MainActor.shared.getter(v22);
      v24 = (_QWORD *)swift_allocObject(&unk_10072CF50, 56, 7);
      v24[2] = v23;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v21;
      v24[5] = v11;
      v24[6] = v12;
      swift_release(v21);
      v25 = sub_100252EE0((uint64_t)v6, (uint64_t)&unk_1007C4428, (uint64_t)v24);
      swift_release(v25);
    }
  }
}

uint64_t sub_1004CD3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[10] = v8;
  v6[11] = v9;
  return swift_task_switch(sub_1004CD41C, v8, v9);
}

uint64_t sub_1004CD41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1007C4354);
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_1004CD4CC;
    return sub_1004CD560(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 72));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 96) == 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004CD4CC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  return swift_task_switch(sub_1004CD51C, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1004CD51C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004CD560(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  *(_QWORD *)(v4 + 144) = a2;
  *(_QWORD *)(v4 + 152) = v3;
  *(_BYTE *)(v4 + 304) = a3;
  *(_QWORD *)(v4 + 136) = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v4 + 160) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 168) = v6;
  *(_QWORD *)(v4 + 176) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v4 + 184) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 192) = v8;
  *(_QWORD *)(v4 + 200) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTimeInterval(0);
  *(_QWORD *)(v4 + 208) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 216) = v10;
  *(_QWORD *)(v4 + 224) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v4 + 232) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 240) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 248) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 256) = swift_task_alloc(v13);
  return swift_task_switch(sub_1004CD650, 0, 0);
}

uint64_t sub_1004CD650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  _QWORD *v14;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  *(_QWORD *)(v0 + 264) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_BYTE *)(v0 + 304) & 1;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = sub_1004E089C(v5);
    v10 = (const char *)v9;
    *(_QWORD *)(v0 + 120) = sub_100228BD8(v8, v9, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v6 + 4);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    v11 = sub_1004C43AC(v17, v16);
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 128) = sub_100228BD8(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v6 + 14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showLowBatteryPill [type: %s, powerSourceID: %s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v14 = (_QWORD *)swift_task_alloc(dword_1007C435C);
  *(_QWORD *)(v0 + 272) = v14;
  *v14 = v0;
  v14[1] = sub_1004CD84C;
  return sub_1004E09F0();
}

uint64_t sub_1004CD84C(char a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 272);
  v5 = *v1;
  swift_task_dealloc(v4);
  if ((a1 & 1) != 0)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1007C4364);
    v3[35] = v6;
    *v6 = v5;
    v6[1] = sub_1004CD90C;
    return sub_1004E1600();
  }
  else
  {
    v9 = v3[31];
    v8 = v3[32];
    v10 = v3[28];
    v11 = v3[25];
    v12 = v3[22];
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1004CD90C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 280);
  *(_QWORD *)(v3 + 288) = a1;
  *(_QWORD *)(v3 + 296) = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1004CD968, 0, 0);
}

uint64_t sub_1004CD968(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  void *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t result;
  id (*v23)(void *);
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;

  v2 = *(void **)(v1 + 288);
  if (!v2 || (v3 = *(void **)(v1 + 296)) == 0)
  {
    v8 = Logger.logObject.getter(a1);
    v9 = static os_log_type_t.error.getter(v8);
    v10 = os_log_type_enabled(v8, v9);
    v12 = *(void **)(v1 + 288);
    v11 = *(_QWORD *)(v1 + 296);
    if (v10)
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to get HUD connection to show low battery pill", v13, 2u);
      swift_slowDealloc(v13, -1, -1);

      swift_unknownObjectRelease(v11);
    }
    else
    {

      swift_unknownObjectRelease(v11);
    }
    goto LABEL_19;
  }
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_BYTE *)(v1 + 304) & 1;
  v54 = v2;
  v6 = swift_unknownObjectRetain(v3);
  if (v4 != 4 || v5 != 0)
  {
    v52 = 0;
    v53 = 0;
LABEL_18:
    v26 = *(_QWORD *)(v1 + 248);
    v27 = *(_QWORD *)(v1 + 256);
    v28 = *(_QWORD *)(v1 + 232);
    v30 = *(_QWORD *)(v1 + 216);
    v29 = *(_QWORD **)(v1 + 224);
    v31 = *(_QWORD *)(v1 + 208);
    v44 = *(_QWORD *)(v1 + 240);
    v45 = *(_QWORD *)(v1 + 200);
    v50 = *(_QWORD *)(v1 + 192);
    v51 = *(_QWORD *)(v1 + 184);
    v49 = *(_QWORD *)(v1 + 168);
    v47 = *(_QWORD *)(v1 + 176);
    v48 = *(_QWORD *)(v1 + 160);
    objc_msgSend(v3, "acquireHUDTransaction");
    sub_1004C58F8(v54, 0);
    objc_msgSend(v3, "showChargingStatus");
    v32 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
    v46 = (void *)static OS_dispatch_queue.main.getter(v32);
    static DispatchTime.now()(v46);
    *v29 = 5;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v29, enum case for DispatchTimeInterval.seconds(_:), v31);
    + infix(_:_:)(v26, v29);
    (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v29, v31);
    v33 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v33(v26, v28);
    v34 = swift_allocObject(&unk_10072C398, 24, 7);
    *(_QWORD *)(v34 + 16) = v3;
    *(_QWORD *)(v1 + 48) = sub_1004F5108;
    *(_QWORD *)(v1 + 56) = v34;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = 1107296256;
    *(_QWORD *)(v1 + 32) = sub_10025BBB4;
    *(_QWORD *)(v1 + 40) = &unk_10072C3B0;
    v35 = _Block_copy((const void *)(v1 + 16));
    v36 = swift_unknownObjectRetain(v3);
    static DispatchQoS.unspecified.getter(v36);
    *(_QWORD *)(v1 + 112) = _swiftEmptyArrayStorage;
    v37 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_100008384((uint64_t *)&unk_1007B6410);
    v39 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 112, v38, v39, v48, v37);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v27, v45, v47, v35);

    _Block_release(v35);
    swift_unknownObjectRelease_n(v3, 2);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v51);
    v33(v27, v28);
    swift_release(*(_QWORD *)(v1 + 56));
    sub_1002845F4(v52, v53);
LABEL_19:
    v40 = *(_QWORD *)(v1 + 248);
    v41 = *(_QWORD *)(v1 + 224);
    v42 = *(_QWORD *)(v1 + 200);
    v43 = *(_QWORD *)(v1 + 176);
    swift_task_dealloc(*(_QWORD *)(v1 + 256));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v14 = SFIsPencilHapticsEnabled(v6);
  if (!(_DWORD)v14)
  {
    v21 = Logger.logObject.getter(v14);
    v24 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v24, "Not playing Pencil haptics because the default is off", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    v23 = 0;
    v17 = 0;
    goto LABEL_17;
  }
  v15 = *(_QWORD *)(v1 + 144);
  v16 = objc_opt_self(BKSHIDHapticFeedbackRequest);
  v17 = swift_allocObject(&unk_10072C3E8, 24, 7);
  *(_QWORD *)(v17 + 16) = v15;
  v18 = swift_allocObject(&unk_10072C410, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1004F438C;
  *(_QWORD *)(v18 + 24) = v17;
  *(_QWORD *)(v1 + 96) = sub_100287F38;
  *(_QWORD *)(v1 + 104) = v18;
  *(_QWORD *)(v1 + 64) = _NSConcreteStackBlock;
  *(_QWORD *)(v1 + 72) = 1107296256;
  *(_QWORD *)(v1 + 80) = sub_1004E2328;
  *(_QWORD *)(v1 + 88) = &unk_10072C428;
  v19 = _Block_copy((const void *)(v1 + 64));
  v20 = *(_QWORD *)(v1 + 104);
  swift_retain();
  swift_release(v20);
  v21 = objc_msgSend((id)v16, "build:", v19);
  _Block_release(v19);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v18, "", 87, 1984, 53, 1);
  result = swift_release(v18);
  if ((v16 & 1) == 0)
  {
    BKSHIDServicesRequestHapticFeedback(v21);
    v23 = sub_1004F438C;
LABEL_17:
    v52 = (uint64_t)v23;
    v53 = v17;

    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004CDEC8(void *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t (*v8)(_QWORD);
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  id v14;
  uint64_t v15;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = a2;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v14 = v5;
    v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v9 + 4);
    *v10 = v5;

    a2 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Found power source: %@", v9, 0xCu);
    v12 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  return a2(v5);
}

void sub_1004CE080(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  if (objc_msgSend(a1, "productID") == (id)332
    || objc_msgSend(a1, "productID") == (id)482
    || objc_msgSend(a1, "productID") == (id)1106)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v4 = type metadata accessor for Logger(0);
    sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
    v5 = a1;
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      v14 = v5;
      v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4);
      *v9 = v5;

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Lost power source: %@", v8, 0xCu);
      v11 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

    }
    v12 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
    *(_QWORD *)v12 = 0;
    *(_BYTE *)(v12 + 8) = 1;
    sub_1004C6468();
    v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
    *(_QWORD *)v13 = 0;
    *(_BYTE *)(v13 + 8) = 1;
  }
}

void sub_1004CE294(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a2, v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  sub_1004C99E8();
}

void sub_1004CE374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  unint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  void *v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  char v62[24];

  v2 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v62, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v9);
  if (Strong)
  {
    v11 = (char *)Strong;
    v12 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "bluetoothAddressData");
    if (v12)
    {
      v13 = v12;
      v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0xF000000000000000;
    }
    v55 = v6;
    v56 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    v17 = (uint64_t *)(*(_QWORD *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress);
    v19 = *v17;
    v18 = v17[1];
    sub_100244404(*v17, v18);
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
    sub_100244404(v19, v18);
    sub_100244404(v14, v16);
    sub_100244404(v19, v18);
    v22 = sub_100244404(v14, v16);
    v52 = v21;
    v23 = Logger.logObject.getter(v22);
    v53 = static os_log_type_t.default.getter(v23);
    v24 = v18 >> 60;
    if (os_log_type_enabled(v23, (os_log_type_t)v53))
    {
      v49 = v23;
      v50 = v4;
      v54 = v18 >> 60;
      v25 = swift_slowAlloc(22, -1);
      v48 = swift_slowAlloc(64, -1);
      v61 = v48;
      *(_DWORD *)v25 = 136315394;
      v51 = v11;
      v59 = 0;
      v60 = (const char *)0xE000000000000000;
      if (v16 >> 60 == 15)
      {
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v60);
        v26 = (const char *)0x8000000100612DF0;
        v27 = 0xD000000000000015;
        v28 = v55;
      }
      else
      {
        v57 = v14;
        v58 = v16;
        v28 = v55;
        (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v8, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v5);
        v30 = sub_100358394();
        DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v57, v8, 58, 0xE100000000000000, &type metadata for Data, v30);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
        v27 = v59;
        v26 = v60;
      }
      v59 = sub_100228BD8(v27, (unint64_t)v26, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v25 + 4);
      swift_bridgeObjectRelease(v26);
      sub_100225AA0(v14, v16);
      sub_100225AA0(v14, v16);
      *(_WORD *)(v25 + 12) = 2080;
      v31 = v14;
      v59 = 0;
      v60 = (const char *)0xE000000000000000;
      if (v54 <= 0xE)
      {
        v57 = v19;
        v58 = v18;
        (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v8, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v5);
        v34 = sub_100358394();
        DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v57, v8, 58, 0xE100000000000000, &type metadata for Data, v34);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
        v33 = v59;
        v32 = v60;
        v29 = v56;
      }
      else
      {
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v60);
        v32 = (const char *)0x8000000100612DF0;
        v29 = v56;
        v33 = 0xD000000000000015;
      }
      v59 = sub_100228BD8(v33, (unint64_t)v32, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v25 + 14);
      swift_bridgeObjectRelease(v32);
      sub_100225AA0(v19, v18);
      sub_100225AA0(v19, v18);
      v35 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v53, "bluetoothAddressChanged %s, sentBluetoothAddress: %s", (uint8_t *)v25, 0x16u);
      v36 = v48;
      swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      v14 = v31;
      v4 = v50;
      v11 = v51;
      v24 = v54;
    }
    else
    {
      sub_100225AA0(v14, v16);
      sub_100225AA0(v14, v16);
      sub_100225AA0(v19, v18);
      sub_100225AA0(v19, v18);

      v29 = v56;
    }
    if (*(_QWORD *)(*(_QWORD *)&v11[v29]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                   + 8))
    {
      if (v24 >= 0xF)
      {
        if (v16 >> 60 == 15)
        {
LABEL_27:

          return;
        }
        sub_1004C99E8();
LABEL_26:
        sub_100225AA0(v14, v16);
        goto LABEL_27;
      }
    }
    else if (v24 >= 0xF)
    {
      goto LABEL_26;
    }
    sub_100244404(v19, v18);
    if (v16 >> 60 == 15)
    {
      sub_10022E4A8(v19, v18);
      sub_100225AA0(v19, v18);
      v37 = sub_100225AA0(v14, v16);
    }
    else
    {
      sub_100244404(v14, v16);
      sub_1002B7ED4(v19, v18);
      v39 = v38;
      v37 = sub_100225AA0(v14, v16);
      if ((v39 & 1) != 0)
      {
LABEL_25:
        sub_100225AA0(v19, v18);
        sub_100225AA0(v19, v18);
        goto LABEL_26;
      }
    }
    v40 = *(_QWORD *)&v11[v29];
    if ((*(_BYTE *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) & 1) != 0)
      goto LABEL_25;
    *(_BYTE *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToResetFromBTAddrRotation) = 1;
    if (*(_QWORD *)(*(_QWORD *)&v11[v29] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8) >> 60 == 15)
    {
      v41 = Logger.logObject.getter(v37);
      v42 = static os_log_type_t.default.getter(v41);
      if (os_log_type_enabled(v41, v42))
      {
        v43 = v11;
        v44 = v14;
        v45 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Waiting for OOBD before replayAttachEvent", v45, 2u);
        swift_slowDealloc(v45, -1, -1);

        sub_100225AA0(v19, v18);
        sub_100225AA0(v19, v18);
        sub_100225AA0(v44, v16);
      }
      else
      {
        sub_100225AA0(v14, v16);
        sub_100225AA0(v19, v18);

        sub_100225AA0(v19, v18);
      }
    }
    else
    {
      v46 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v4, 1, 1, v46);
      sub_1004CF030((unint64_t)v4, 1);

      sub_100225AA0(v19, v18);
      sub_100225AA0(v19, v18);
      sub_100225AA0(v14, v16);
      sub_10000D0F0((uint64_t)v4, &qword_1007B7280);
    }
  }
}

void sub_1004CEAAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    v9 = v7;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 67109120;
      HIDWORD(v14) = objc_msgSend(*(id *)((char *)&v9->isa+ OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "screenOn");
      UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v14 + 4, v15, v12 + 4);

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "screenOnChangedHandler. on: %{BOOL}d", v12, 8u);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {

      v10 = v9;
    }

    if (objc_msgSend(*(id *)((char *)&v9->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "screenOn"))
    {
      sub_1004C99E8();

    }
    else
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
      sub_1004CF030((unint64_t)v4, 0);

      sub_10000D0F0((uint64_t)v4, &qword_1007B7280);
    }
  }
}

void sub_1004CECC8(_BYTE *a1)
{
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BOOL4 v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitorActivated] = 1;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(18, -1);
    v7 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109378;
    v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
    v9 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor], "systemLockState") == 1|| objc_msgSend(*(id *)&v3[v8], "systemLockState") == 4;
    HIDWORD(v14) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v14 + 4, &v15, v6 + 4);
    *(_WORD *)(v6 + 8) = 2112;
    v10 = *(void **)&v3[v8];
    v13 = v10;
    v11 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 10);
    *v7 = v10;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "System monitor activated - Authed? %{BOOL}d - (%@)", (uint8_t *)v6, 0x12u);
    v12 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v12);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  sub_1004C99E8();
}

void sub_1004CEF00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[21];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = &unk_1005DB258;
  v6[2] = &unk_1005DB258;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[4] = &unk_1005DB2B8;
  v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[6] = &unk_1005DB228;
  v6[7] = &unk_1005DB228;
  v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100260B1C(319, (unint64_t *)&qword_1007B6230, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  if (v3 <= 0x3F)
  {
    v6[9] = *(_QWORD *)(v2 - 8) + 64;
    v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100260B1C(319, (unint64_t *)&qword_1007BC3D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      v6[13] = &unk_1005DB2A0;
      v6[14] = &unk_1005DB288;
      v6[15] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[16] = &unk_1005DB228;
      v6[17] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[18] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[19] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[20] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_updateClassMetadata2(a1, 256, 21, v6, a1 + 80);
    }
  }
}

void sub_1004CF030(unint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  void **p_vtable;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  const char *v39;
  void **v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  id v55;
  void *v56;
  id v57;
  const char *v58;
  Class isa;
  id v60;
  uint64_t v61;
  const char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void *v69;
  id v70;
  NSString v71;
  Class v72;
  void *v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  const char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  const char *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  const char *v93;
  double v94;
  uint64_t v95;
  _QWORD *v96;
  const char *v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  id v102;
  void **v103;
  void **v104;
  NSObject *v105;
  os_log_type_t v106;
  _BOOL4 v107;
  uint64_t v108;
  char *v109;
  uint8_t *v110;
  uint64_t v111;
  id v112;
  void *v113;
  uint64_t v114;
  void *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  _QWORD v124[2];
  void **v125;
  int v126;
  void *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  void **aBlock;
  _QWORD v143[4];
  uint64_t v144;

  v3 = v2;
  v137 = a2;
  v140 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v133 = *(_QWORD *)(v4 - 8);
  v134 = v4;
  __chkstk_darwin(v4);
  v132 = (char *)v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v130 = *(_QWORD *)(v6 - 8);
  v131 = v6;
  __chkstk_darwin(v6);
  v129 = (char *)v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v139 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B7280);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)v124 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)v124 - v18;
  v20 = (void *)objc_opt_self(NSUserDefaults);
  v21 = objc_msgSend(v20, "standardUserDefaults");
  v22 = sub_10044ABB4();

  LODWORD(v138) = v22;
  if ((v22 & 1) != 0)
    LODWORD(v128) = 0;
  else
    LODWORD(v128) = *(unsigned __int8 *)(*(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
  v136 = v10;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_100221DF8(v23, (uint64_t)qword_1007C37A0);
  sub_100221F28(v140, (uint64_t)v19, &qword_1007B7280);
  v25 = v3;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  v135 = v24;
  if (v28)
  {
    v126 = v27;
    v127 = v20;
    v29 = swift_slowAlloc(46, -1);
    v125 = (void **)swift_slowAlloc(64, -1);
    aBlock = v125;
    *(_DWORD *)v29 = 67110402;
    v124[1] = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    LODWORD(v141) = *(unsigned __int8 *)(*(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, (char *)&v141 + 4, v29 + 4);
    *(_WORD *)(v29 + 8) = 1024;
    LODWORD(v141) = v138 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, (char *)&v141 + 4, v29 + 10);
    *(_WORD *)(v29 + 14) = 1024;
    LODWORD(v141) = v128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, (char *)&v141 + 4, v29 + 16);
    *(_WORD *)(v29 + 20) = 1024;
    LODWORD(v141) = v137 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, (char *)&v141 + 4, v29 + 22);
    *(_WORD *)(v29 + 26) = 2080;
    sub_100221F28((uint64_t)v19, (uint64_t)v17, &qword_1007B7280);
    v30 = v139;
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 48))(v17, 1, v8);
    if ((_DWORD)v31 == 1)
    {
      sub_10000D0F0((uint64_t)v17, &qword_1007B7280);
      v32 = (const char *)0x800000010061F130;
      v33 = 0xD000000000000028;
    }
    else
    {
      v33 = UUID.description.getter(v31);
      v32 = v35;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v8);
    }
    v141 = (_QWORD *)sub_100228BD8(v33, (unint64_t)v32, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &aBlock, v29 + 28);
    swift_bridgeObjectRelease(v32);
    sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
    *(_WORD *)(v29 + 36) = 2080;
    v36 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v37 = dispatch thunk of CustomStringConvertible.description.getter(v8, v36);
    v39 = (const char *)v38;
    v141 = (_QWORD *)sub_100228BD8(v37, v38, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &aBlock, v29 + 38);

    swift_bridgeObjectRelease(v39);
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v126, "resetState. didComplete: %{BOOL}d, neededEduUI: %{BOOL}d, didCompleteInitialPair: %{BOOL}d, replayAttachEvent: %{BOOL}d, canceling id: %s, currentID: %s", (uint8_t *)v29, 0x2Eu);
    v40 = v125;
    swift_arrayDestroy(v125, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v29, -1, -1);

    v20 = v127;
    p_vtable = _TtC16DaemoniOSLibrary38SDAuthenticationTransportCoreBluetooth.vtable;
  }
  else
  {
    sub_10000D0F0((uint64_t)v19, &qword_1007B7280);

    p_vtable = (void **)(_TtC16DaemoniOSLibrary38SDAuthenticationTransportCoreBluetooth + 24);
  }
  sub_100221F28(v140, (uint64_t)v14, &qword_1007B7280);
  v41 = v139;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 48))(v14, 1, v8);
  v43 = v136;
  if (v42 == 1)
  {
    sub_10000D0F0((uint64_t)v14, &qword_1007B7280);
LABEL_16:
    v47 = (char *)p_vtable[500];
    v48 = *(_QWORD *)&v47[(_QWORD)v25];
    v49 = *(void **)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
    if (v49
      && (*(_BYTE *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType + 8) & 1) == 0
      && (*(_BYTE *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) & 1) == 0)
    {
      v50 = *(_QWORD *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType);
      v51 = v49;
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Reject unhandled pairing request", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

      v55 = objc_msgSend(*(id *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "sharedPairingAgent");
      if (!v55)
      {
        __break(1u);
        goto LABEL_48;
      }
      v56 = v55;
      v57 = v51;
      v58 = (const char *)sub_10021E5F8((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v56, "respondToPairingRequest:type:accept:data:", v57, v50, 0, isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

    }
    if ((v138 & 1) == 0)
    {
      v60 = objc_msgSend(v20, "standardUserDefaults");
      sub_10044B4D8(0);

    }
    v61 = *(_QWORD *)&v47[(_QWORD)v25];
    v62 = *(const char **)(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8);
    if (!v62)
      goto LABEL_32;
    v63 = *(_QWORD *)(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8);
    if (v63 >> 60 == 15
      || *(_BYTE *)(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) != 1)
    {
      goto LABEL_32;
    }
    v64 = *(_QWORD *)(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
    swift_bridgeObjectRetain(*(const char **)(v61
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                                            + 8));
    v65 = sub_100244404(v64, v63);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.default.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "stopBLEUpdates in resetState.", v68, 2u);
      swift_slowDealloc(v68, -1, -1);
    }

    v69 = *(void **)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider];
    if (v69)
    {
      v70 = v69;
      v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v62);
      v72 = Data._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v70, "stopBLEUpdates:blePairingUUID:", v71, v72);

      sub_100225AA0(v64, v63);
      v61 = *(_QWORD *)&v47[(_QWORD)v25];
LABEL_32:
      v73 = *(void **)(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
      if (v73)
      {
        v74 = v73;
        v75 = Logger.logObject.getter(v74);
        v76 = static os_log_type_t.default.getter(v75);
        if (os_log_type_enabled(v75, v76))
        {
          v77 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v77 = 0;
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "Dismiss FindMy unpair alert in resetState", v77, 2u);
          swift_slowDealloc(v77, -1, -1);
        }

        if (*(_QWORD *)(*(_QWORD *)&v47[(_QWORD)v25]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
          objc_msgSend(*(id *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "cancelPeripheralConnection:");
        objc_msgSend(v74, "invalidate");
        sub_1004CFEB4(0);

        v61 = *(_QWORD *)&v47[(_QWORD)v25];
      }
      swift_retain();
      sub_1004C50D8();
      swift_release(v61);
      objc_msgSend(v25, "stopScanning");
      objc_msgSend(v25, "stopBatteryScanner");
      v78 = *(_QWORD *)&v47[(_QWORD)v25];
      v79 = *(const char **)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8);
      v128 = *(_QWORD *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
      v81 = *(_QWORD *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
      v80 = *(_QWORD *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8);
      v82 = *(_QWORD *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
      v83 = *(_BYTE *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8);
      v84 = *(_QWORD *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag);
      v85 = *(const char **)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag + 8);
      v86 = (uint64_t *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode);
      v138 = *v86;
      LODWORD(v136) = *((unsigned __int8 *)v86 + 8);
      v87 = type metadata accessor for SDB332SetupAgentSessionState(0);
      v88 = swift_allocObject(v87, *(unsigned int *)(v87 + 48), *(unsigned __int16 *)(v87 + 52));
      swift_bridgeObjectRetain(v79);
      v139 = v81;
      sub_100244404(v81, v80);
      swift_bridgeObjectRetain(v85);
      sub_1004C5524();
      v89 = *(_QWORD *)&v47[(_QWORD)v25];
      *(_QWORD *)&v47[(_QWORD)v25] = v88;
      swift_release(v89);
      v90 = *(_QWORD *)&v47[(_QWORD)v25];
      v91 = v90 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      *(_QWORD *)v91 = v82;
      *(_BYTE *)(v91 + 8) = v83;
      v92 = (_QWORD *)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag);
      v93 = (const char *)v92[1];
      *v92 = v84;
      v92[1] = v85;
      *(_QWORD *)&v94 = swift_bridgeObjectRelease(v93).n128_u64[0];
      v95 = *(_QWORD *)&v47[(_QWORD)v25]
          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
      *(_QWORD *)v95 = v138;
      *(_BYTE *)(v95 + 8) = (_BYTE)v136;
      v140 = v80;
      if ((v137 & 1) != 0)
      {
        v96 = (_QWORD *)(*(_QWORD *)&v47[(_QWORD)v25]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
        v97 = (const char *)v96[1];
        *v96 = v128;
        v96[1] = v79;
        swift_bridgeObjectRelease(v97, v94);
        v98 = (uint64_t *)(*(_QWORD *)&v47[(_QWORD)v25]
                        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
        v99 = *v98;
        v100 = v98[1];
        v101 = v139;
        *v98 = v139;
        v98[1] = v80;
        sub_100244404(v101, v80);
        sub_100225AA0(v99, v100);
        v102 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "b332BTAddressRotationDelay");
        v104 = v103;
        v105 = Logger.logObject.getter(v102);
        v106 = static os_log_type_t.default.getter(v105);
        v107 = os_log_type_enabled(v105, v106);
        v109 = v132;
        v108 = v133;
        if (v107)
        {
          v110 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v110 = 134217984;
          aBlock = v104;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v143, v110 + 4);
          _os_log_impl((void *)&_mh_execute_header, v105, v106, "Sleeping for %f sec due to address rotation.", v110, 0xCu);
          swift_slowDealloc(v110, -1, -1);
        }

        objc_msgSend((id)objc_opt_self(NSThread), "sleepForTimeInterval:", *(double *)&v104);
        objc_msgSend(v25, "resetUIUpdatesFlagWithUndimScreen:", 0);
        v111 = v134;
      }
      else
      {
        swift_bridgeObjectRelease(v79, v94);
        sub_1004D0118();
        v112 = objc_msgSend(objc_allocWithZone((Class)CBCentralManager), "initWithDelegate:queue:", v25, *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]);
        v113 = *(void **)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
        *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] = v112;

        v108 = v133;
        v111 = v134;
        v109 = v132;
        v101 = v139;
      }
      v114 = swift_allocObject(&unk_10072C730, 24, 7);
      *(_QWORD *)(v114 + 16) = v25;
      v143[3] = sub_1004F4608;
      v144 = v114;
      aBlock = _NSConcreteStackBlock;
      v143[0] = 1107296256;
      v143[1] = sub_10025BBB4;
      v143[2] = &unk_10072C748;
      v115 = _Block_copy(&aBlock);
      v116 = v25;
      v117 = v129;
      static DispatchQoS.unspecified.getter(v116);
      v141 = _swiftEmptyArrayStorage;
      v118 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v119 = sub_100008384((uint64_t *)&unk_1007B6410);
      v120 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v141, v119, v120, v111, v118);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v117, v109, v115);
      _Block_release(v115);
      sub_100225AA0(v101, v140);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v111);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v117, v131);
      swift_release(v144);
      return;
    }
LABEL_48:
    __break(1u);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v136, v14, v8);
  v44 = *(_QWORD *)((char *)p_vtable[500] + (_QWORD)v25)
      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid;
  v45 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v46 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v44, v8, v45);
  if ((v46 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v8);
    p_vtable = _TtC16DaemoniOSLibrary38SDAuthenticationTransportCoreBluetooth.vtable;
    goto LABEL_16;
  }
  v121 = Logger.logObject.getter(v46);
  v122 = static os_log_type_t.default.getter(v121);
  if (os_log_type_enabled(v121, v122))
  {
    v123 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v123 = 0;
    _os_log_impl((void *)&_mh_execute_header, v121, v122, "ignore resetState", v123, 2u);
    swift_slowDealloc(v123, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v8);
}

void sub_1004CFEB4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (*(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v2 = v1;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "dismissSBUI", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v9);
    if (Strong)
    {
      v11 = (void *)Strong;
      aBlock[4] = sub_1004E4008;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072BE80;
      v12 = _Block_copy(aBlock);
      v13 = objc_msgSend(v11, "remoteObjectProxyWithErrorHandler:", v12);
      _Block_release(v12);
      objc_msgSend(v13, "dismissUIAnimated:", a1 & 1);

      swift_unknownObjectRelease(v13);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "ignore dismissSBUI, UI updates disabled for current session state", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

void sub_1004D0118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "releaseHUDTransaction", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    aBlock[4] = sub_1004E3FFC;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002377A0;
    aBlock[3] = &unk_10072BF70;
    v9 = _Block_copy(aBlock);
    v10 = objc_msgSend(v8, "remoteObjectProxyWithErrorHandler:", v9);
    _Block_release(v9);
    objc_msgSend(v10, "releaseHUDTransaction");

    swift_unknownObjectRelease(v10);
  }
  else
  {
    oslog = Logger.logObject.getter(0);
    v11 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "no UI service to stop", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
}

id sub_1004D031C()
{
  char **v0;
  char **v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  id result;
  void *v28;
  const char *v29;
  objc_class *v30;
  Class v31;
  void *v32;
  NSString v33;
  id v34;
  const char *v35;
  uint64_t v36;
  char **v37;
  char *v38;
  Class isa;
  uint64_t v40;
  id v41;
  uint64_t v42;
  objc_class *v43;
  uint64_t v44;
  void *v45;
  char **v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char **v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  void **aBlock;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v2);
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v75 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v74 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for DispatchTime(0);
  v71 = *(_QWORD *)(v73 - 8);
  v11 = __chkstk_darwin(v73);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v72 = (char *)&v63 - v14;
  v15 = type metadata accessor for UUID(0);
  v79 = *(_QWORD *)(v15 - 8);
  v80 = v15;
  __chkstk_darwin(v15);
  v77 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
LABEL_21:
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100221DF8(v17, (uint64_t)qword_1007C37A0);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = v5;
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "raceyInternalUnpairPreviousB332s...", v22, 2u);
    v23 = v22;
    v5 = v21;
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  v25 = objc_allocWithZone((Class)CBCentralManager);
  v70 = v24;
  v26 = objc_msgSend(v25, "initWithDelegate:queue:", 0, v24);
  v78 = objc_msgSend(objc_allocWithZone((Class)SPPairingManager), "init");
  result = objc_msgSend(v26, "sharedPairingAgent");
  if (!result)
    goto LABEL_27;
  v28 = result;
  v66 = v9;
  v67 = v8;
  sub_1004D0A8C();
  v8 = (uint64_t)v29;

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v62 = v8;
    else
      v62 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v8, v63, v64);
    v9 = _CocoaArrayWrapper.endIndex.getter(v62);
    swift_bridgeObjectRelease((const char *)v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v65 = v13;
  v68 = v6;
  v69 = v4;
  if (v9)
  {
    v63 = v5;
    v64 = v1;
    v13 = (char *)(v8 & 0xC000000000000001);
    v6 = 4;
    v1 = &selRef_initWithType_idsDeviceID_appName_bundleID_biometricOnly_;
    v76 = (char *)(v8 & 0xC000000000000001);
    while (1)
    {
      if (v13)
        v30 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v8);
      else
        v30 = (objc_class *)*(id *)(v8 + 8 * v6);
      v31 = v30;
      v5 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
      {
        __break(1u);
        goto LABEL_21;
      }
      result = objc_msgSend(v26, "sharedPairingAgent");
      if (!result)
        break;
      v32 = result;
      objc_msgSend(result, v1[240], v31);

      v33 = String._bridgeToObjectiveC()();
      v4 = (char *)-[objc_class hasTag:](v31, "hasTag:", v33);

      if ((_DWORD)v4)
      {
        v34 = -[objc_class identifier](v31, "identifier");
        v35 = (const char *)v8;
        v36 = v9;
        v37 = v1;
        v38 = v77;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v34);

        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v79 + 8))(v38, v80);
        v40 = swift_allocObject(&unk_10072C6E0, 24, 7);
        *(_QWORD *)(v40 + 16) = v31;
        v86 = sub_1004F4600;
        v87 = v40;
        aBlock = _NSConcreteStackBlock;
        v83 = 1107296256;
        v84 = sub_1002D6B08;
        v85 = &unk_10072C6F8;
        v4 = (char *)_Block_copy(&aBlock);
        v41 = v26;
        v42 = v87;
        v43 = v31;
        v44 = v42;
        v26 = v41;
        v1 = v37;
        v9 = v36;
        v8 = (uint64_t)v35;
        v13 = v76;
        swift_release(v44);
        objc_msgSend(v78, "unpairUUID:force:completion:", isa, 1, v4);

        _Block_release(v4);
        v31 = isa;
      }

      ++v6;
      if (v5 == v9)
      {
        v45 = v26;
        swift_bridgeObjectRelease((const char *)v8);
        v46 = v64;
        v47 = v63;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  v45 = v26;
  swift_bridgeObjectRelease((const char *)v8);
  v46 = v1;
  v47 = v5;
LABEL_19:
  v48 = objc_msgSend((id)objc_opt_self(NSThread), "sleepForTimeInterval:", 2.0);
  v49 = v65;
  static DispatchTime.now()(v48);
  v50 = v72;
  + infix(_:_:)(v49, 2.0);
  v76 = *(char **)(v71 + 8);
  v51 = v49;
  v52 = v73;
  ((void (*)(char *, uint64_t))v76)(v51, v73);
  v53 = swift_allocObject(&unk_10072C690, 24, 7);
  *(_QWORD *)(v53 + 16) = v45;
  v86 = sub_1004F45F8;
  v87 = v53;
  aBlock = _NSConcreteStackBlock;
  v83 = 1107296256;
  v84 = sub_10025BBB4;
  v85 = &unk_10072C6A8;
  v54 = _Block_copy(&aBlock);
  v77 = v45;
  v55 = v74;
  static DispatchQoS.unspecified.getter(v77);
  v81 = _swiftEmptyArrayStorage;
  v56 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v57 = sub_100008384((uint64_t *)&unk_1007B6410);
  v58 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  v59 = v67;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v81, v57, v58, v47, v56);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v50, v55, v59, v54);
  _Block_release(v54);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v59, v47);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v66);
  ((void (*)(char *, uint64_t))v76)(v50, v52);
  swift_release(v87);
  v60 = (char *)v46 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
  *(_QWORD *)v60 = 0;
  v60[8] = 1;
  sub_1004C6468();
  *(_QWORD *)&(*(char **)((char *)v46 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState))[OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage] = 0;
  v61 = (unint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v69, 1, 1, v80);
  sub_1004CF030(v61, 0);

  return (id)sub_10000D0F0(v61, &qword_1007B7280);
}

void sub_1004D0A8C()
{
  void *v0;
  id v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  uint64_t j;
  id v33;
  void *v34;
  NSString v35;
  unsigned __int8 v36;
  uint64_t v37;
  NSString v38;
  unsigned __int8 v39;
  NSString v40;
  unsigned __int8 v41;
  NSString v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = objc_msgSend(v0, "retrievePairedPeers");
  if (!v1)
    goto LABEL_60;
  v2 = v1;
  v3 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  v4 = (uint64_t)sub_10038E114((uint64_t)v3);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v65 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v4, v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (v6)
      goto LABEL_4;
LABEL_20:
    v17 = swift_bridgeObjectRelease((const char *)v4, v7).n128_u64[0];
    v18 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)&v7 = swift_bridgeObjectRetain((const char *)v4, v5).n128_u64[0];
  if (!v6)
    goto LABEL_20;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_59;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v9 = *(id *)(v4 + 8 * i + 32);
    v10 = v9;
    v11 = objc_opt_self(CBPeripheral);
    v12 = swift_dynamicCastObjCClass(v10, v11);
    if (v12)
    {
      v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v15 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v16);
    }
    else
    {

    }
  }
  v17 = swift_bridgeObjectRelease((const char *)v4).n128_u64[0];
  v18 = v65;
LABEL_21:
  swift_bridgeObjectRelease((const char *)v4, *(double *)&v17);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v20 = type metadata accessor for Logger(0);
  sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
  v21 = swift_bridgeObjectRetain_n(v18, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v65 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_100221EDC(0, &qword_1007C4238, CBPeripheral_ptr);
    swift_bridgeObjectRetain((const char *)v18);
    v28 = Array.description.getter(v27, v26);
    v30 = v29;
    swift_bridgeObjectRelease((const char *)v18);
    v64 = sub_100228BD8(v28, (unint64_t)v30, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v24 + 4);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "pairedPeripherals: %s", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v18, 2);
  }
  v65 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v18 >> 62))
  {
    v31 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
      goto LABEL_28;
LABEL_45:
    swift_bridgeObjectRelease((const char *)v18);
    v46 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_46;
  }
  if (v18 < 0)
    v47 = v18;
  else
    v47 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v18);
  v31 = _CocoaArrayWrapper.endIndex.getter(v47);
  swift_bridgeObjectRelease((const char *)v18);
  if (!v31)
    goto LABEL_45;
LABEL_28:
  if (v31 < 1)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  for (j = 0; j != v31; ++j)
  {
    if ((v18 & 0xC000000000000001) != 0)
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v18);
    else
      v33 = *(id *)(v18 + 8 * j + 32);
    v34 = v33;
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend(v34, "hasTag:", v35);

    if ((v36 & 1) != 0)
      goto LABEL_37;
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v34, "hasTag:", v38);

    if ((v39 & 1) != 0
      || (v40 = String._bridgeToObjectiveC()(),
          v41 = objc_msgSend(v34, "hasTag:", v40),
          v40,
          (v41 & 1) != 0)
      || (v42 = String._bridgeToObjectiveC()(),
          v43 = objc_msgSend(v34, "hasTag:", v42),
          v42,
          v43))
    {
LABEL_37:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v44 = *(_QWORD *)(v65 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v44);
      v45 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v34);
      specialized ContiguousArray._endMutation()(v45);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease((const char *)v18);
  v46 = v65;
LABEL_46:
  v48 = swift_retain_n(v46, 2);
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.default.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(12, -1);
    v52 = swift_slowAlloc(32, -1);
    v65 = v52;
    *(_DWORD *)v51 = 136315138;
    v53 = sub_100221EDC(0, &qword_1007C4238, CBPeripheral_ptr);
    v54 = swift_retain();
    v55 = Array.description.getter(v54, v53);
    v57 = v56;
    swift_release(v46);
    v64 = sub_100228BD8(v55, (unint64_t)v57, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v51 + 4);
    swift_release_n(v46, 2);
    swift_bridgeObjectRelease(v57);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "pairedPencils: %s", v51, 0xCu);
    swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v51, -1, -1);

  }
  else
  {

    v58 = swift_release_n(v46, 2);
  }
  if (v46 < 0 || (v46 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain((const char *)v46);
    v63 = _CocoaArrayWrapper.endIndex.getter(v62);
    v58 = swift_release(v46);
    if (v63 < 2)
      return;
  }
  else if (*(uint64_t *)(v46 + 16) < 2)
  {
    return;
  }
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "!!! Multiple paired Pencils", v61, 2u);
    swift_slowDealloc(v61, -1, -1);
  }

}

void sub_1004D11BC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    swift_errorRetain(a1);
    v9 = a2;
    swift_errorRetain(a1);
    v10 = v9;
    v25 = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = (uint64_t *)swift_slowAlloc(8, -1);
      v24 = swift_slowAlloc(32, -1);
      v27 = v24;
      *(_DWORD *)v12 = 136315394;
      v23 = v12 + 4;
      v14 = objc_msgSend(v10, "identifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v15 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of CustomStringConvertible.description.getter(v4, v15);
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v26 = sub_100228BD8(v16, (unint64_t)v18, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v23);

      swift_bridgeObjectRelease(v18);
      *(_WORD *)(v12 + 12) = 2112;
      swift_errorRetain(a1);
      v19 = _swift_stdlib_bridgeErrorToNSError(a1);
      v26 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v12 + 14);
      *v13 = v19;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v25, v11, "Failed to FindMy-unpair Pencil with ID %s: %@", (uint8_t *)v12, 0x16u);
      v20 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v13, 1, v20);
      swift_slowDealloc(v13, -1, -1);
      v21 = v24;
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

void sub_1004D14EC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100008384(&qword_1007C43F0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005CD2A0;
  v4 = objc_msgSend(a1, "sharedPairingAgent");
  if (v4)
  {
    v5 = v4;
    sub_1004D0A8C();
    v7 = v6;

    *(_QWORD *)(v3 + 56) = sub_100008384(&qword_1007C4410);
    *(_QWORD *)(v3 + 32) = v7;
    print(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease((const char *)v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004D1598()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B6D28);
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v49 - v10;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  v14 = __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v14);
  v19 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (!*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout))
  {
    v52 = v4;
    v55 = v11;
    v56 = (char *)&v49 - v17;
    v54 = v18;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v53 = v5;
    if (v24)
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "- startSessionTimeout", v25, 2u);
      v26 = v25;
      v5 = v53;
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v28 = v27(v56, *(_QWORD *)&v1[v19] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid, v12);
    static DispatchTime.now()(v28);
    v29 = v19;
    v30 = v12;
    if (qword_1007B41F8 != -1)
      swift_once(&qword_1007B41F8, sub_1004C4784);
    v31 = type metadata accessor for DispatchTimeInterval(0);
    v32 = sub_100221DF8(v31, (uint64_t)qword_1007C37B8);
    v33 = v55;
    + infix(_:_:)(v9, v32);
    v51 = *(void (**)(char *, uint64_t))(v6 + 8);
    v51(v9, v5);
    v50 = v29;
    v34 = *(_QWORD *)&v1[v29];
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v33, v5);
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v36 = (uint64_t)v52;
    v35(v52, 1, 1, v5);
    v49 = *(id *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
    v27(v15, (uint64_t)v56, v30);
    v37 = v54;
    v38 = *(unsigned __int8 *)(v54 + 80);
    v39 = (v38 + 24) & ~v38;
    v40 = swift_allocObject(&unk_10072C668, v39 + v13, v38 | 7);
    *(_QWORD *)(v40 + 16) = v1;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v40 + v39, v15, v30);
    v41 = type metadata accessor for PushableTimer(0);
    swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
    swift_retain();
    v42 = v49;
    v43 = v1;
    v44 = sub_100284070(v9, v36, v42, (uint64_t)sub_1004F45EC, v40);

    swift_release(v40);
    v45 = *(_QWORD *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout);
    *(_QWORD *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout) = v44;
    swift_release(v34);
    swift_release(v45);
    v46 = *(_QWORD *)(*(_QWORD *)&v1[v50]
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout);
    v47 = v37;
    v48 = v56;
    if (v46)
    {
      swift_getObjectType(*(_QWORD *)(v46 + OBJC_IVAR____TtC16DaemoniOSLibrary13PushableTimer_timer));
      swift_retain();
      OS_dispatch_source.resume()();
      swift_release(v46);
    }
    v51(v55, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v30);
  }
  return result;
}

uint64_t sub_1004D19B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "- sessionTimeout fired", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v5, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  sub_1004CF030(v5, 0);
  return sub_10000D0F0((uint64_t)v5, &qword_1007B7280);
}

void sub_1004D1B24(char a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  id v15;
  NSString v16;
  unsigned int v17;
  NSString v18;
  unsigned int v19;
  int v20;
  id v21;
  NSString v22;
  unsigned int v23;
  id v24;
  id v25;
  NSString v26;
  unsigned int v27;
  uint64_t v28;
  void *v29;
  NSString v30;
  unsigned __int8 v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  os_log_type_t v39;
  NSObject *log;
  unsigned int v41;
  uint64_t v42;

  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(_BYTE *)(v3 + 8) & 1) != 0 || *(_QWORD *)v3 != 2)
    return;
  v4 = v1;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
  v7 = v1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v39 = v9;
    log = v8;
    v10 = swift_slowAlloc(38, -1);
    *(_DWORD *)v10 = 67110400;
    v11 = *(_QWORD *)&v1[v2];
    v12 = *(void **)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    v13 = String._bridgeToObjectiveC()();
    LODWORD(v12) = objc_msgSend(v12, "BOOLForKey:", v13);

    swift_release(v11);
    v41 = v12 ^ 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 4);

    *(_WORD *)(v10 + 8) = 1024;
    v14 = *(_QWORD *)&v4[v2];
    swift_retain();
    LOBYTE(v11) = sub_10044ACAC();

    swift_release(v14);
    v41 = v11 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 10);

    *(_WORD *)(v10 + 14) = 1024;
    v15 = objc_retain(*(id *)(*(_QWORD *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "BOOLForKey:", v16);

    if (v17 && (sub_10044ADDC() & 1) != 0)
    {
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v15, "BOOLForKey:", v18);

      v20 = v19 ^ 1;
    }
    else
    {

      v20 = 0;
    }
    v41 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 16);

    *(_WORD *)(v10 + 20) = 1024;
    v21 = objc_retain(*(id *)(*(_QWORD *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v21, "BOOLForKey:", v22);

    v41 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 22);

    *(_WORD *)(v10 + 26) = 1024;
    v24 = objc_retain(*(id *)(*(_QWORD *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    LOBYTE(v22) = sub_10044ADDC();

    v41 = v22 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 28);

    *(_WORD *)(v10 + 32) = 1024;
    v25 = objc_retain(*(id *)(*(_QWORD *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "BOOLForKey:", v26);

    v41 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 34);

    _os_log_impl((void *)&_mh_execute_header, log, v39, "--B222 Begin run Info--\nneedsInitialEducationUI:%{BOOL}d\nneedsWhatsNewUI:%{BOOL}d\nneedsWhatsNewForKeyboardLocale:%{BOOL}d\nhasShownPencilTextInputEducation:%{BOOL}d\nSupportedTextInputLocaleExists:%{BOOL}d\nisShowingEducationUI:%{BOOL}d", (uint8_t *)v10, 0x26u);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v28 = *(_QWORD *)&v4[v2];
  v29 = *(void **)(v28 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  if ((sub_10044ABB4() & 1) != 0)
  {
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v29, "BOOLForKey:", v30);
    swift_release(v28);

    if ((v31 & 1) == 0)
    {
      if ((v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] & 1) != 0)
      {
        if ((a1 & 1) != 0)
        {
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.default.getter(v33);
          if (os_log_type_enabled(v33, v34))
          {
            v35 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v35 = 0;
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "Beginning b222 attempt in progress, but requested counter reset", v35, 2u);
            swift_slowDealloc(v35, -1, -1);
          }

          *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
        }
      }
      else
      {
        v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 1;
        *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
        sub_1004D2164(0);
      }
      return;
    }
  }
  else
  {
    v32 = swift_release(v28);
  }
  v36 = Logger.logObject.getter(v32);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "b222BeginRunWithTimeout does not need any education UI, bailing", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

}

void sub_1004D2164(int a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  objc_class *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t aBlock;
  _QWORD v63[4];
  uint64_t v64;

  v2 = v1;
  LODWORD(v61) = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress;
  if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] != 1)
    return;
  v59 = v8;
  v19 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt;
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt];
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_19;
  }
  v53 = (char *)&v52 - v17;
  v54 = v16;
  v60 = v10;
  v56 = v6;
  v57 = v4;
  v58 = v3;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = v22;
  if (qword_1007B41F0 != -1)
LABEL_19:
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v23 = type metadata accessor for Logger(0);
  sub_100221DF8(v23, (uint64_t)qword_1007C37A0);
  v24 = v2;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v55 = v7;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    aBlock = *(_QWORD *)&v2[v19];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v63, v28 + 4);

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Beginning b222 attempt %ld", v28, 0xCu);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v29 = v60;
  if (*(uint64_t *)&v2[v19] <= 9)
  {
    if ((v61 & 1) == 0)
    {
      sub_1004D2750();
      return;
    }
    v30 = *(_QWORD *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];
    v31 = v30 + 1;
    if (!__OFADD__(v30, 1))
    {
      *(_QWORD *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex] = v31;
      v32 = swift_allocObject(&unk_10072BE40, 24, 7);
      swift_unknownObjectWeakInit(v32 + 16, v24);
      v33 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
      v52 = static OS_dispatch_queue.main.getter(v33);
      static DispatchTime.now()(v52);
      v34 = v53;
      + infix(_:_:)(v15, 0.75);
      v61 = *(void (**)(char *, uint64_t))(v12 + 8);
      v35 = v54;
      v61(v15, v54);
      v36 = swift_allocObject(&unk_10072C348, 32, 7);
      *(_QWORD *)(v36 + 16) = v32;
      *(_QWORD *)(v36 + 24) = v31;
      v63[3] = sub_1004F4350;
      v64 = v36;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v63[0] = 1107296256;
      v63[1] = sub_10025BBB4;
      v63[2] = &unk_10072C360;
      v37 = _Block_copy(&aBlock);
      v38 = v64;
      swift_retain();
      v39 = swift_release(v38);
      static DispatchQoS.unspecified.getter(v39);
      aBlock = (uint64_t)_swiftEmptyArrayStorage;
      v40 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v41 = sub_100008384((uint64_t *)&unk_1007B6410);
      v42 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
      v43 = v56;
      v44 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v58, v40);
      v45 = (void *)v52;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v34, v29, v43, v37);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v44);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v55);
      v61(v34, v35);
      swift_release(v32);
      return;
    }
    goto LABEL_21;
  }
  v46 = v24;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v49 = 134217984;
    aBlock = 10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v63, v49 + 4);

    _os_log_impl((void *)&_mh_execute_header, v47, v48, "b222 reached max attempts %ld, canceling", v49, 0xCu);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {

    v47 = v46;
  }

  v2[v18] = 0;
  *(_QWORD *)&v2[v19] = 0;
  v50 = *(uint64_t *)((char *)&v46->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex);
  v21 = __OFADD__(v50, 1);
  v51 = (objc_class *)(v50 + 1);
  if (v21)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  *(Class *)((char *)&v46->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex) = v51;
}

void sub_1004D2694(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v4);

  if (Strong)
  {
    swift_beginAccess(v3, v13, 0, 0);
    v7 = (char *)swift_unknownObjectWeakLoadStrong(v3, v6);
    if (v7)
    {
      v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];

      if (v8 == a2)
      {
        swift_beginAccess(v3, v12, 0, 0);
        v10 = swift_unknownObjectWeakLoadStrong(v3, v9);
        if (v10)
        {
          v11 = (void *)v10;
          sub_1004D2750();

        }
      }
    }
  }
}

void sub_1004D2750()
{
  _BYTE *v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  unsigned __int8 v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v3 = v0;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled((os_log_t)v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, v7, "b222Run()", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex;
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex] = v13;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v1 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
  if ((*(_BYTE *)(*(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) & 1) != 0)
  {
    v6 = Logger.logObject.getter(v9);
    v14 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled((os_log_t)v6, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, v14, "B222 run called, but sessionState.didComplete == true.  Bailing", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 0;
    *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
    v16 = *(_QWORD *)&v3[v10];
    v12 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (!v12)
    {
      *(_QWORD *)&v3[v10] = v17;
      return;
    }
    goto LABEL_39;
  }
  v18 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "sharedPairingAgent");
  if (!v18)
    goto LABEL_45;
  v19 = v18;
  sub_1004D0A8C();
  v6 = v20;

  if (!((unint64_t)v6 >> 62))
  {
    v21 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
LABEL_40:
  if (v6 < 0)
    v44 = v6;
  else
    v44 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v6);
  v21 = _CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease((const char *)v6);
LABEL_14:
  swift_bridgeObjectRelease((const char *)v6);
  if (v21 >= 1)
  {
    v23 = *(_QWORD *)&v3[v2];
    v24 = *(void **)(v23 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    if ((sub_10044ABB4() & 1) != 0)
    {
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v24, "BOOLForKey:", v25);
      swift_release(v23);

      if ((v26 & 1) == 0)
      {
        v27 = Logger.logObject.getter(v22);
        v28 = static os_log_type_t.default.getter(v27);
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "attempting to show UI for b222.  .", v29, 2u);
          swift_slowDealloc(v29, -1, -1);
        }

        sub_1004D1598();
        sub_1004D2F24();
        sub_1004D33B0();
        sub_1004D37D4();
        sub_1004D3C7C();
        sub_1004D3E10();
        sub_1004D45A8();
        v40 = *(_QWORD *)&v3[v2];
        if ((*(_BYTE *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
        {
          if (*(_BYTE *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8))
            v41 = 0;
          else
            v41 = *(_QWORD *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
          sub_1004D4A68(1, v41);
          *(_BYTE *)(*(_QWORD *)&v3[v2]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) = 1;
          v40 = *(_QWORD *)&v3[v2];
        }
        v42 = v1[228];
        if ((*(_BYTE *)(v40 + v42) & 1) != 0)
        {
          v43 = 1;
        }
        else
        {
          sub_1004D4DD8();
          v40 = *(_QWORD *)&v3[v2];
          v42 = v1[228];
          v43 = *(_BYTE *)(v40 + v42);
        }
        *(_BYTE *)(v40 + v42) = 1;
        swift_retain();
        sub_1004C4854(v43, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");
        v22 = swift_release(v40);
      }
    }
    else
    {
      v22 = swift_release(v23);
    }
  }
  v30 = *(_QWORD *)&v3[v2];
  if ((*(_BYTE *)(v30 + v1[228]) & 1) != 0)
  {
    v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 0;
    *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
    v31 = *(_QWORD *)&v3[v10];
    v12 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (!v12)
    {
      *(_QWORD *)&v3[v10] = v32;
      swift_retain();
      sub_1004C50D8();
      swift_release(v30);
      objc_msgSend(v3, "stopScanning");
      sub_1004D522C();
      sub_1004D5830();
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "b222run() All cleanup completely done.", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      return;
    }
    __break(1u);
LABEL_45:
    __break(1u);
    return;
  }
  v37 = Logger.logObject.getter(v22);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "b222Run() did not complete, waiting to try again.", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  sub_1004D2164(1);
}

void sub_1004D2F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  Swift::String v5;
  const char *v6;
  __n128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  Swift::String v16;
  const char *object;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  const char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    v4 = *(_QWORD *)(v2 + 16);
    v35 = 0xD000000000000057;
    v36 = 0x800000010061ECC0;
    v37 = 1611;
    swift_retain();
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v16._object;
    String.append(_:)(v16);
    v18 = swift_bridgeObjectRelease(object);
    v19 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v18);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v4 + 16, &v35, 33, 0);
    v20 = sub_10045DE64(&v37, v19);
    swift_endAccess(&v35);
    if ((v20 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
      v12 = Logger.logObject.getter(v22);
      v13 = static os_log_type_t.default.getter(v12);
      if (!os_log_type_enabled(v12, v13))
        goto LABEL_14;
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      v15 = "ignore ensureScreenOn, UI updates disabled for current session state";
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "screenOn");
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + 16);
  if (v3)
  {
    v35 = 0xD000000000000057;
    v36 = 0x800000010061ECC0;
    v37 = 1620;
    swift_retain();
    v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v6 = (const char *)v5._object;
    String.append(_:)(v5);
    v7 = swift_bridgeObjectRelease(v6);
    v8 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v7);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v4 + 16, &v35, 33, 0);
    v9 = sub_10045DE64(&v37, v8);
    swift_endAccess(&v35);
    if ((v9 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_100221DF8(v10, (uint64_t)qword_1007C37A0);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter(v12);
      if (!os_log_type_enabled(v12, v13))
        goto LABEL_14;
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      v15 = "ensureScreenOn completed";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
      swift_slowDealloc(v14, -1, -1);
LABEL_14:
      swift_release(v4);

      return;
    }
LABEL_15:
    swift_release(v4);
    return;
  }
  v35 = 0xD000000000000057;
  v36 = 0x800000010061ECC0;
  v37 = 1617;
  swift_retain();
  v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v24 = (const char *)v23._object;
  String.append(_:)(v23);
  v25 = swift_bridgeObjectRelease(v24);
  v26 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v25);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v4 + 16, &v35, 33, 0);
  LOBYTE(v24) = sub_10045DE64(&v37, v26);
  swift_endAccess(&v35);
  if ((v24 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007C37A0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "ensureScreenOn - screen is currently off", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }
    swift_release(v4);

  }
  else
  {
    swift_release(v4);
  }
  v32 = sub_1004F3CD8();
  v33 = swift_allocError(&type metadata for SDRunState, v32, 0, 0);
  *v34 = 1;
  swift_willThrow(v33);
}

void sub_1004D33B0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  Swift::String v9;
  const char *object;
  __n128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  Swift::String v20;
  const char *v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    v8 = *(_QWORD *)(v1 + 16);
    v27 = 0xD000000000000057;
    v28 = 0x800000010061ECC0;
    v29 = 2259;
    swift_retain();
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v9._object;
    String.append(_:)(v9);
    v11 = swift_bridgeObjectRelease(object);
    v12 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v11);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v8 + 16, &v27, 33, 0);
    v13 = sub_10045DE64(&v29, v12);
    swift_endAccess(&v27);
    if ((v13 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_21;
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      v19 = "ignore startUIService, UI updates disabled for current session state";
      goto LABEL_20;
    }
LABEL_22:
    swift_release(v8);
    return;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted) != 1)
  {
    v8 = *(_QWORD *)(v1 + 16);
    v27 = 0xD000000000000057;
    v28 = 0x800000010061ECC0;
    v29 = 2265;
    swift_retain();
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v21 = (const char *)v20._object;
    String.append(_:)(v20);
    v22 = swift_bridgeObjectRelease(v21);
    v23 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v22);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v8 + 16, &v27, 33, 0);
    v24 = sub_10045DE64(&v29, v23);
    swift_endAccess(&v27);
    if ((v24 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
      v16 = Logger.logObject.getter(v26);
      v17 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_21;
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      v19 = "Hmm, SpringBoard hasn't started even though sendsUIUpdates = true";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
      swift_slowDealloc(v18, -1, -1);
LABEL_21:
      swift_release(v8);

      return;
    }
    goto LABEL_22;
  }
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "screenOn");
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 67109120;
    LODWORD(v27) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, (char *)&v27 + 4, v7 + 4);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "startUIService. Screen on? %{BOOL}d.", v7, 8u);
    swift_slowDealloc(v7, -1, -1);
  }

  if (qword_1007B3FB0 != -1)
    swift_once(&qword_1007B3FB0, sub_10037C2E8);
  sub_10037DF34();
}

void sub_1004D37D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  const char *v6;
  __n128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  Swift::String v16;
  const char *object;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  void *Strong;
  Swift::String v28;
  const char *v29;
  __n128 v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v3 = *(_QWORD *)(v2 + 16);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    v38 = 0xD000000000000057;
    v39 = 0x800000010061ECC0;
    v40 = 1627;
    swift_retain();
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v16._object;
    String.append(_:)(v16);
    v18 = swift_bridgeObjectRelease(object);
    v19 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v18);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v3 + 16, &v38, 33, 0);
    v20 = sub_10045DE64(&v40, v19);
    swift_endAccess(&v38);
    if ((v20 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter(v23);
      if (!os_log_type_enabled(v23, v24))
        goto LABEL_21;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "ignore ensureHUDServiceStarted, UI updates disabled for current session state";
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  v4 = v0;
  v38 = 0xD000000000000057;
  v39 = 0x800000010061ECC0;
  v40 = 1631;
  swift_retain();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v6 = (const char *)v5._object;
  String.append(_:)(v5);
  v7 = swift_bridgeObjectRelease(v6);
  v8 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v7);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v38, 33, 0);
  v9 = sub_10045DE64(&v40, v8);
  swift_endAccess(&v38);
  if ((v9 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100221DF8(v10, (uint64_t)qword_1007C37A0);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "ensureUIServiceStarted called", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v15);
  if (Strong)
  {

    v3 = *(_QWORD *)(*(_QWORD *)(v4 + v1) + 16);
    v38 = 0xD000000000000057;
    v39 = 0x800000010061ECC0;
    v40 = 1633;
    swift_retain();
    v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v29 = (const char *)v28._object;
    String.append(_:)(v28);
    v30 = swift_bridgeObjectRelease(v29);
    v31 = (const char *)v39;
    v32 = String.hashValue.getter(v38, v39, v30);
    swift_bridgeObjectRelease(v31);
    swift_beginAccess(v3 + 16, &v38, 33, 0);
    LOBYTE(v31) = sub_10045DE64(&v40, v32);
    swift_endAccess(&v38);
    if ((v31 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100221DF8(v33, (uint64_t)qword_1007C37A0);
      v23 = Logger.logObject.getter(v34);
      v24 = static os_log_type_t.default.getter(v23);
      if (!os_log_type_enabled(v23, v24))
        goto LABEL_21;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "ensureUIServiceStarted completed";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v23, v24, v26, v25, 2u);
      swift_slowDealloc(v25, -1, -1);
LABEL_21:
      swift_release(v3);

      return;
    }
LABEL_22:
    swift_release(v3);
    return;
  }
  v35 = sub_1004F3CD8();
  v36 = swift_allocError(&type metadata for SDRunState, v35, 0, 0);
  *v37 = 1;
  swift_willThrow(v36);
}

void sub_1004D3C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *oslog;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v8);
    v4 = static os_log_type_t.default.getter(oslog);
    if (!os_log_type_enabled(oslog, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "ignore startViewService, UI updates disabled for current session state";
    goto LABEL_11;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle))
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.default.getter(oslog);
    if (!os_log_type_enabled(oslog, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "sbRemoteHandle != nil";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, v6, v5, 2u);
    swift_slowDealloc(v5, -1, -1);
LABEL_12:

    return;
  }
  sub_1004E3C00();
}

void sub_1004D3E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  const char *v7;
  __n128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  Swift::String v16;
  const char *object;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  id v27;
  void *v28;
  unsigned int v29;
  void *v30;
  uint64_t countAndFlagsBits;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  double v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  const char *v55;
  __n128 v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = v3 + 16;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    v64._countAndFlagsBits = 0xD000000000000057;
    v64._object = (void *)0x800000010061ECC0;
    v65 = 1659;
    swift_retain();
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v16._object;
    String.append(_:)(v16);
    v18 = swift_bridgeObjectRelease(object);
    v19 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v18);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v3 + 16, &v64, 33, 0);
    v20 = sub_10045DE64(&v65, v19);
    swift_endAccess(&v64);
    if ((v20 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter(v23);
      if (!os_log_type_enabled(v23, v24))
        goto LABEL_27;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "ignore ensureSystemUIState, UI updates disabled for current session state";
      goto LABEL_26;
    }
LABEL_28:
    swift_release(v3);
    return;
  }
  v5 = v0;
  v64._countAndFlagsBits = 0xD000000000000057;
  v64._object = (void *)0x800000010061ECC0;
  v65 = 1662;
  swift_retain();
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v7 = (const char *)v6._object;
  String.append(_:)(v6);
  v8 = swift_bridgeObjectRelease(v7);
  v9 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v8);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v64, 33, 0);
  v10 = sub_10045DE64(&v65, v9);
  swift_endAccess(&v64);
  if ((v10 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100221DF8(v11, (uint64_t)qword_1007C37A0);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    v4 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v4, "ensureSystemUIState called", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v27 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!v27)
  {
    __break(1u);
    return;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "systemUIFlags");

  if ((v29 & 0x74008) == 0)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v5 + v1) + 16);
    v64._countAndFlagsBits = 0xD000000000000057;
    v64._object = (void *)0x800000010061ECC0;
    v65 = 1683;
    swift_retain();
    v54._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v55 = (const char *)v54._object;
    String.append(_:)(v54);
    v56 = swift_bridgeObjectRelease(v55);
    v57 = (const char *)v64._object;
    v58 = String.hashValue.getter(v64._countAndFlagsBits, v64._object, v56);
    swift_bridgeObjectRelease(v57);
    swift_beginAccess(v3 + 16, &v64, 33, 0);
    LOBYTE(v57) = sub_10045DE64(&v65, v58);
    swift_endAccess(&v64);
    if ((v57 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v59 = type metadata accessor for Logger(0);
      v60 = sub_100221DF8(v59, (uint64_t)qword_1007C37A0);
      v23 = Logger.logObject.getter(v60);
      v24 = static os_log_type_t.default.getter(v23);
      if (!os_log_type_enabled(v23, v24))
        goto LABEL_27;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "ensureSystemUIState completed";
LABEL_26:
      _os_log_impl((void *)&_mh_execute_header, v23, v24, v26, v25, 2u);
      swift_slowDealloc(v25, -1, -1);
LABEL_27:
      swift_release(v3);

      return;
    }
    goto LABEL_28;
  }
  LODWORD(v64._countAndFlagsBits) = v29;
  v30 = (void *)sub_1004F3D1C();
  countAndFlagsBits = String.init<A>(_:radix:uppercase:)(&v64, 2, 0, &type metadata for UInt32, v30);
  v33 = v32;
  v34 = String.count.getter(countAndFlagsBits, v32);
  v35 = 32 - v34;
  if (__OFSUB__(32, v34))
  {
    __break(1u);
    goto LABEL_32;
  }
  v36._countAndFlagsBits = 48;
  v36._object = (void *)0xE100000000000000;
  v37 = String.init(repeating:count:)(v36, v35 & (unint64_t)~(v35 >> 63));
  v64 = v37;
  swift_bridgeObjectRetain((const char *)v37._object);
  v38._countAndFlagsBits = countAndFlagsBits;
  v38._object = v33;
  String.append(_:)(v38);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease((const char *)v33).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v37._object, v39);
  v33 = v64._object;
  countAndFlagsBits = v64._countAndFlagsBits;
  LODWORD(v64._countAndFlagsBits) = 475144;
  v4 = String.init<A>(_:radix:uppercase:)(&v64, 2, 0, &type metadata for UInt32, v30);
  v30 = v40;
  v41 = String.count.getter(v4, v40);
  v42 = 32 - v41;
  if (__OFSUB__(32, v41))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v43._countAndFlagsBits = 48;
  v43._object = (void *)0xE100000000000000;
  v44 = String.init(repeating:count:)(v43, v42 & (unint64_t)~(v42 >> 63));
  v64 = v44;
  swift_bridgeObjectRetain((const char *)v44._object);
  v45._countAndFlagsBits = v4;
  v45._object = v30;
  String.append(_:)(v45);
  *(_QWORD *)&v46 = swift_bridgeObjectRelease((const char *)v30).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v44._object, v46);
  v30 = v64._object;
  v4 = v64._countAndFlagsBits;
  if (qword_1007B41F0 != -1)
LABEL_33:
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v47 = type metadata accessor for Logger(0);
  sub_100221DF8(v47, (uint64_t)qword_1007C37A0);
  *(_QWORD *)&v48 = swift_bridgeObjectRetain((const char *)v33).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v30, v48);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc(22, -1);
    v53 = swift_slowAlloc(64, -1);
    v64._countAndFlagsBits = v53;
    *(_DWORD *)v52 = 136315394;
    swift_bridgeObjectRetain((const char *)v33);
    v65 = sub_100228BD8(countAndFlagsBits, (unint64_t)v33, &v64._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v52 + 4);
    swift_bridgeObjectRelease_n(v33, 3);
    *(_WORD *)(v52 + 12) = 2080;
    swift_bridgeObjectRetain((const char *)v30);
    v65 = sub_100228BD8(v4, (unint64_t)v30, &v64._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v52 + 14);
    swift_bridgeObjectRelease_n(v30, 3);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "ensureSystemUIState - not ready.\n(%s) <- printSystemUIFlags,\n(%s) <- printB332Flags", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v30, 2);
    swift_bridgeObjectRelease_n(v33, 2);
  }
  v61 = sub_1004F3CD8();
  v62 = swift_allocError(&type metadata for SDRunState, v61, 0, 0);
  *v63 = 1;
  swift_willThrow(v62);
}

void sub_1004D45A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  const char *object;
  __n128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  Swift::String v15;
  const char *v16;
  __n128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  const char *v25;
  uint64_t v26;
  int v27;
  int v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  Swift::String v33;
  const char *v34;
  __n128 v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v3 = *(_QWORD *)(v2 + 16);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v4 = v0;
    v40 = 0xD000000000000057;
    v41 = 0x800000010061ECC0;
    v42 = 1644;
    swift_retain();
    v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v5._object;
    String.append(_:)(v5);
    v7 = swift_bridgeObjectRelease(object);
    v8 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v7);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v3 + 16, &v40, 33, 0);
    v9 = sub_10045DE64(&v42, v8);
    swift_endAccess(&v40);
    if ((v9 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_100221DF8(v10, (uint64_t)qword_1007C37A0);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter(v12);
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Waiting for view service", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }
      swift_release(v3);

    }
    else
    {
      swift_release(v3);
    }
    v26 = *(_QWORD *)(v4 + v1);
    v27 = *(unsigned __int8 *)(v26
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
    if (v27 == 2)
      goto LABEL_19;
    if ((v27 & 1) == 0)
      goto LABEL_21;
    v28 = *(unsigned __int8 *)(v26
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
    if (v28 == 2)
    {
LABEL_19:
      v29 = 1;
LABEL_22:
      v30 = sub_1004F3CD8();
      v31 = swift_allocError(&type metadata for SDRunState, v30, 0, 0);
      *v32 = v29;
      swift_willThrow(v31);
      return;
    }
    if ((v28 & 1) == 0)
    {
LABEL_21:
      v29 = 3;
      goto LABEL_22;
    }
    v3 = *(_QWORD *)(v26 + 16);
    v40 = 0xD000000000000057;
    v41 = 0x800000010061ECC0;
    v42 = 1652;
    swift_retain();
    v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v34 = (const char *)v33._object;
    String.append(_:)(v33);
    v35 = swift_bridgeObjectRelease(v34);
    v36 = (const char *)v41;
    v37 = String.hashValue.getter(v40, v41, v35);
    swift_bridgeObjectRelease(v36);
    swift_beginAccess(v3 + 16, &v40, 33, 0);
    LOBYTE(v36) = sub_10045DE64(&v42, v37);
    swift_endAccess(&v40);
    if ((v36 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v38 = type metadata accessor for Logger(0);
      v39 = sub_100221DF8(v38, (uint64_t)qword_1007C37A0);
      v22 = Logger.logObject.getter(v39);
      v23 = static os_log_type_t.default.getter(v22);
      if (!os_log_type_enabled(v22, v23))
        goto LABEL_14;
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      v25 = "View service up and XPC'd into daemon.";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v22, v23, v25, v24, 2u);
      swift_slowDealloc(v24, -1, -1);
LABEL_14:
      swift_release(v3);

      return;
    }
  }
  else
  {
    v40 = 0xD000000000000057;
    v41 = 0x800000010061ECC0;
    v42 = 1640;
    swift_retain();
    v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v16 = (const char *)v15._object;
    String.append(_:)(v15);
    v17 = swift_bridgeObjectRelease(v16);
    v18 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v17);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v3 + 16, &v40, 33, 0);
    v19 = sub_10045DE64(&v42, v18);
    swift_endAccess(&v40);
    if ((v19 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v20 = type metadata accessor for Logger(0);
      v21 = sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter(v22);
      if (!os_log_type_enabled(v22, v23))
        goto LABEL_14;
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      v25 = "ignore ensureViewServiceStarted, UI updates disabled for current session state";
      goto LABEL_13;
    }
  }
  swift_release(v3);
}

void sub_1004D4A68(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *Strong;
  id v24;
  void *v25;
  id v26;
  NSObject *oslog;
  uint64_t v28;
  uint64_t aBlock[6];

  v3 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_BYTE *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v4 = v2;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(18, -1);
      v12 = swift_slowAlloc(32, -1);
      aBlock[0] = v12;
      *(_DWORD *)v11 = 67109378;
      LODWORD(v28) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v11 + 4);
      *(_WORD *)(v11 + 8) = 2080;
      v13 = sub_1004E089C(a2);
      v15 = (const char *)v14;
      v28 = sub_100228BD8(v13, v14, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, aBlock, v11 + 10);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "showPairingStarted. willTransitionToEducation: %{BOOL}d, deviceType: %s", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    if ((a1 & 1) != 0)
    {
      v17 = *(_QWORD *)(v4 + v3);
      v18 = &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection;
    }
    else
    {
      v18 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
      v17 = v4;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v17 + *v18, v16);
    if (Strong)
    {
      v24 = Strong;
      sub_1004C58F8(v24, 1);
      aBlock[4] = (uint64_t)sub_1004E09B4;
      aBlock[5] = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1002377A0;
      aBlock[3] = (uint64_t)&unk_10072BED0;
      v25 = _Block_copy(aBlock);
      v26 = objc_msgSend(v24, "remoteObjectProxyWithErrorHandler:", v25);
      _Block_release(v25);
      objc_msgSend(v26, "setDeviceType:", a2);
      objc_msgSend((id)swift_unknownObjectRetain(v26), "showPairingStarted");
      swift_unknownObjectRelease_n(v26, 2);

    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100221DF8(v19, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v20);
    v21 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v21, "ignore showPairingStarted, UI updates disabled for current session state", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

  }
}

void sub_1004D4DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  unsigned __int8 v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  NSObject *oslog;
  _QWORD aBlock[6];

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v2 = v0;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "showPairingSuccess", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v1)+ OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, v8);
    if (Strong)
    {
      v10 = Strong;
      sub_1004C58F8(Strong, 1);
      aBlock[4] = sub_1004E09C0;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072BF20;
      v11 = _Block_copy(aBlock);
      v12 = objc_msgSend(v10, "remoteObjectProxyWithErrorHandler:", v11);
      _Block_release(v11);
      v13 = *(_QWORD *)(v2 + v1);
      swift_retain();
      LOBYTE(v11) = sub_10044ACAC();
      v14 = (id)swift_release(v13);
      if ((v11 & 1) != 0)
        v14 = objc_msgSend(v12, "setShouldShowWhatsNew:", 1);
      v15 = *(_QWORD *)(v2 + v1) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      if ((*(_BYTE *)(v15 + 8) & 1) != 0)
      {
        v16 = Logger.logObject.getter(v14);
        v17 = static os_log_type_t.error.getter(v16);
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "No device type is set in showPairingSuccess! Falling back to B222", v18, 2u);
          swift_slowDealloc(v18, -1, -1);
        }

        v19 = 2;
      }
      else
      {
        v19 = *(_QWORD *)v15;
      }
      objc_msgSend(v12, "setDeviceType:", v19);
      objc_msgSend(v12, "showPairingSuccess");
      v24 = *(_QWORD *)(v2 + v1);
      v25 = *(void **)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
      swift_retain();
      if ((sub_10044ABB4() & 1) != 0)
      {
        v26 = String._bridgeToObjectiveC()();
        v27 = objc_msgSend(v25, "BOOLForKey:", v26);
        swift_release(v24);

        if ((v27 & 1) == 0)
        {
          v28 = *(_QWORD *)(v2 + v1) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
          if ((*(_BYTE *)(v28 + 8) & 1) == 0)
          {
            v29 = *(_QWORD *)v28;
            if (v29 <= 4 && ((1 << v29) & 0x1A) != 0)
            {
              v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
              sub_10044B4D8(1);

            }
          }
        }

        swift_unknownObjectRelease(v12);
      }
      else
      {

        swift_unknownObjectRelease(v12);
        swift_release(v24);
      }
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v21);
    v22 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v22, "ignore showPairingSuccess, UI updates disabled for current session state", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

  }
}

void sub_1004D522C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  const char *v25;
  NSString v26;
  NSString v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  double v38;
  uint64_t v39;
  id v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) == 1
    && (*(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didCleanup) & 1) == 0)
  {
    *(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didCleanup) = 1;
    v8 = *(_QWORD *)&v1[v6] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(_BYTE *)(v8 + 8) & 1) != 0 || *(_QWORD *)v8 != 2)
    {
      v9 = (void *)objc_opt_self(NSUserDefaults);
      v10 = objc_msgSend(v9, "standardUserDefaults");
      v11 = String._bridgeToObjectiveC()();
      v12 = objc_msgSend(v10, "stringForKey:", v11);

      if (v12)
      {
        v13 = objc_msgSend(v9, "standardUserDefaults");
        objc_msgSend(v13, "setURL:forKey:", 0, v12);

      }
      v14 = *(void **)(*(_QWORD *)&v1[v6]
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
      if (v14)
      {
        v15 = objc_msgSend(v14, "identifier");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v15);

        v17 = UUID.uuidString.getter(v16);
        v19 = v18;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v20 = objc_msgSend(v9, "standardUserDefaults");
        v49 = v17;
        v21 = String._bridgeToObjectiveC()();
        v22 = String._bridgeToObjectiveC()();
        objc_msgSend(v20, "setObject:forKey:", v21, v22);

        v23 = objc_msgSend(v9, "standardUserDefaults");
        v24 = *(_QWORD *)&v1[v6] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash;
        v25 = *(const char **)(v24 + 8);
        if (v25)
        {
          swift_bridgeObjectRetain(*(const char **)(v24 + 8));
          v26 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v25);
        }
        else
        {
          v26 = 0;
        }
        v27 = String._bridgeToObjectiveC()();
        objc_msgSend(v23, "setObject:forKey:", v26, v27);

        swift_unknownObjectRelease(v26);
        if (qword_1007B41F0 != -1)
          swift_once(&qword_1007B41F0, sub_1004C46F4);
        v28 = type metadata accessor for Logger(0);
        sub_100221DF8(v28, (uint64_t)qword_1007C37A0);
        v29 = v1;
        swift_bridgeObjectRetain(v19);
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.default.getter(v31);
        if (os_log_type_enabled(v31, (os_log_type_t)v32))
        {
          v48 = v32;
          v33 = swift_slowAlloc(22, -1);
          v47 = swift_slowAlloc(64, -1);
          v52 = v47;
          *(_DWORD *)v33 = 136315394;
          v34 = (uint64_t *)(*(_QWORD *)&v1[v6]
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
          v35 = (const char *)v34[1];
          if (v35)
          {
            v36 = *v34;
            v37 = (const char *)v34[1];
          }
          else
          {
            v50 = 0;
            v51 = (const char *)0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease(v51);
            v37 = (const char *)0x8000000100612DF0;
            v36 = 0xD000000000000015;
          }
          swift_bridgeObjectRetain(v35, v47);
          v50 = sub_100228BD8(v36, (unint64_t)v37, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v33 + 4);

          *(_QWORD *)&v38 = swift_bridgeObjectRelease(v37).n128_u64[0];
          *(_WORD *)(v33 + 12) = 2080;
          swift_bridgeObjectRetain(v19, v38);
          v50 = sub_100228BD8(v49, (unint64_t)v19, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v33 + 14);
          swift_bridgeObjectRelease_n(v19, 3);
          _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v48, "setHash: %s, forKey: %s", (uint8_t *)v33, 0x16u);
          v39 = v47;
          swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v33, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v19, 2);
        }
      }
    }
    sub_1004D0118();
    v40 = objc_retain(*(id *)(*(_QWORD *)&v1[v6]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "removeObjectForKey:", v41);

    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_100221DF8(v42, (uint64_t)qword_1007C37A0);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "ensureCleanedUp!!!", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

  }
}

void sub_1004D5830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  const char *v18;
  __n128 v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v30 = 0xD000000000000057;
  v31 = 0x800000010061ECC0;
  v32 = 1213;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v30, 33, 0);
  v8 = sub_10045DE64(&v32, v7);
  swift_endAccess(&v30);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensurePairingAgentDeallocated called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  if (*(_BYTE *)(*(_QWORD *)(v1 + v2)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hidServiceDiscovered) == 1)
  {
    v14 = objc_msgSend(objc_allocWithZone((Class)CBCentralManager), "initWithDelegate:queue:", v1, *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q));
    v15 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central) = v14;

    v16 = *(_QWORD *)(*(_QWORD *)(v1 + v2) + 16);
    v30 = 0xD000000000000057;
    v31 = 0x800000010061ECC0;
    v32 = 1218;
    swift_retain();
    v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v18 = (const char *)v17._object;
    String.append(_:)(v17);
    v19 = swift_bridgeObjectRelease(v18);
    v20 = (const char *)v31;
    v21 = String.hashValue.getter(v30, v31, v19);
    swift_bridgeObjectRelease(v20);
    swift_beginAccess(v16 + 16, &v30, 33, 0);
    LOBYTE(v20) = sub_10045DE64(&v32, v21);
    swift_endAccess(&v30);
    if ((v20 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_100221DF8(v22, (uint64_t)qword_1007C37A0);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "ensurePairingAgentDeallocated completed", v26, 2u);
        swift_slowDealloc(v26, -1, -1);
      }
      swift_release(v16);

    }
    else
    {
      swift_release(v16);
    }
  }
  else
  {
    v27 = sub_1004F3CD8();
    v28 = swift_allocError(&type metadata for SDRunState, v27, 0, 0);
    *v29 = 1;
    swift_willThrow(v28);
  }
}

void sub_1004D5BD4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  id v15;
  NSString v16;
  NSString v17;
  unsigned int v18;
  int v19;
  id v20;
  NSString v21;
  unsigned int v22;
  id v23;
  os_log_type_t v24;
  char *v25;
  unsigned int v26;
  uint64_t v27;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "run() once", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v25 = a1;
  v7 = Logger.logObject.getter(v25);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v24 = v8;
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 67110144;
    v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    v11 = *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
    v12 = *(void **)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    v13 = String._bridgeToObjectiveC()();
    LODWORD(v12) = objc_msgSend(v12, "BOOLForKey:", v13);

    swift_release(v11);
    v26 = v12 ^ 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 4);

    *(_WORD *)(v9 + 8) = 1024;
    v14 = *(_QWORD *)&v25[v10];
    swift_retain();
    LOBYTE(v11) = sub_10044ACAC();

    swift_release(v14);
    v26 = v11 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 10);

    *(_WORD *)(v9 + 14) = 1024;
    v15 = objc_retain(*(id *)(*(_QWORD *)&v25[v10]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v16 = String._bridgeToObjectiveC()();
    LODWORD(v12) = objc_msgSend(v15, "BOOLForKey:", v16);

    if ((_DWORD)v12 && (sub_10044ADDC() & 1) != 0)
    {
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v15, "BOOLForKey:", v17);

      v19 = v18 ^ 1;
    }
    else
    {

      v19 = 0;
    }
    v26 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 16);

    *(_WORD *)(v9 + 20) = 1024;
    v20 = objc_retain(*(id *)(*(_QWORD *)&v25[v10]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "BOOLForKey:", v21);

    v26 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 22);

    *(_WORD *)(v9 + 26) = 1024;
    v23 = objc_retain(*(id *)(*(_QWORD *)&v25[v10]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    LOBYTE(v21) = sub_10044ADDC();

    v26 = v21 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 28);

    _os_log_impl((void *)&_mh_execute_header, v7, v24, "--B322 Begin run Info--\nneedsInitialEducationUI:%{BOOL}d\nneedsWhatsNewUI:%{BOOL}d\nneedsWhatsNewForKeyboardLocale:%{BOOL}d\nhasShownPencilTextInputEducation:%{BOOL}d\nSupportedTextInputLocaleExists:%{BOOL}d", (uint8_t *)v9, 0x20u);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
}

void sub_1004D608C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  Swift::String v19;
  const char *v20;
  __n128 v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v29 = 0xD000000000000057;
  v30 = 0x800000010061ECC0;
  v31 = 1223;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v29, 33, 0);
  v8 = sub_10045DE64(&v31, v7);
  swift_endAccess(&v29);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureAttached called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v14 = *(_QWORD *)(v1 + v2);
  if (*(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8)
    && *(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8) >> 60 != 15)
  {
    v18 = *(_QWORD *)(v14 + 16);
    v29 = 0xD000000000000057;
    v30 = 0x800000010061ECC0;
    v31 = 1225;
    swift_retain();
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v20 = (const char *)v19._object;
    String.append(_:)(v19);
    v21 = swift_bridgeObjectRelease(v20);
    v22 = (const char *)v30;
    v23 = String.hashValue.getter(v29, v30, v21);
    swift_bridgeObjectRelease(v22);
    swift_beginAccess(v18 + 16, &v29, 33, 0);
    LOBYTE(v22) = sub_10045DE64(&v31, v23);
    swift_endAccess(&v29);
    if ((v22 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v24 = type metadata accessor for Logger(0);
      v25 = sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "ensureAttached completed", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }
      swift_release(v18);

    }
    else
    {
      swift_release(v18);
    }
  }
  else
  {
    v15 = sub_1004F3CD8();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    swift_willThrow(v16);
  }
}

void sub_1004D6408(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  id v10;
  NSString v11;
  unsigned __int8 v12;
  int v13;
  char *v14;
  int v15;
  uint64_t v16;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v14 = a1;
  v3 = Logger.logObject.getter(v14);
  v4 = static os_log_type_t.default.getter(v3);
  if (!os_log_type_enabled(v3, v4))
  {

    return;
  }
  v5 = (uint8_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v5 = 67109120;
  v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v7 = *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  v8 = *(void **)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  v9 = String._bridgeToObjectiveC()();
  LOBYTE(v8) = objc_msgSend(v8, "BOOLForKey:", v9);
  swift_release(v7);

  if ((v8 & 1) != 0)
  {

  }
  else
  {
    v10 = objc_retain(*(id *)(*(_QWORD *)&v14[v6]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "BOOLForKey:", v11);

    if ((v12 & 1) == 0)
    {
      v13 = 1;
      goto LABEL_10;
    }
  }
  v13 = 0;
LABEL_10:
  v15 = v13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v5 + 4);

  _os_log_impl((void *)&_mh_execute_header, v3, v4, "First pair?: %{BOOL}d", v5, 8u);
  swift_slowDealloc(v5, -1, -1);

}

void sub_1004D664C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "state") == (id)5)
  {
    v3 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState] + 16);
    v22 = (id)0xD000000000000057;
    v23 = 0x800000010061ECC0;
    v24 = 1693;
    swift_retain();
    v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v4._object;
    String.append(_:)(v4);
    v6 = swift_bridgeObjectRelease(object);
    v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v3 + 16, &v22, 33, 0);
    v8 = sub_10045DE64(&v24, v7);
    swift_endAccess(&v22);
    if ((v8 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureBTOn completed", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }
      swift_release(v3);

    }
    else
    {
      swift_release(v3);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v14 = type metadata accessor for Logger(0);
    sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
    v15 = v0;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v18 = 134217984;
      v22 = objc_msgSend(*(id *)&v1[v2], "state");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v18 + 4);

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "ensureBTOn - central.state(%ld) != .poweredOn", v18, 0xCu);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

    }
    v19 = sub_1004F3CD8();
    v20 = swift_allocError(&type metadata for SDRunState, v19, 0, 0);
    *v21 = 1;
    swift_willThrow(v20);
  }
}

void sub_1004D6960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  const char *v17;
  __n128 v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v31 = 0xD000000000000057;
  v32 = 0x800000010061ECC0;
  v33 = 1719;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v31, 33, 0);
  v8 = sub_10045DE64(&v33, v7);
  swift_endAccess(&v31);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureUnlocked called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "systemLockState") == 1|| objc_msgSend(*(id *)(v1 + v14), "systemLockState") == 4)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v1 + v2) + 16);
    v31 = 0xD000000000000057;
    v32 = 0x800000010061ECC0;
    v33 = 1730;
    swift_retain();
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v17 = (const char *)v16._object;
    String.append(_:)(v16);
    v18 = swift_bridgeObjectRelease(v17);
    v19 = (const char *)v32;
    v20 = String.hashValue.getter(v31, v32, v18);
    swift_bridgeObjectRelease(v19);
    swift_beginAccess(v15 + 16, &v31, 33, 0);
    LOBYTE(v19) = sub_10045DE64(&v33, v20);
    swift_endAccess(&v31);
    if ((v19 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "ensureUnlocked completed", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }
      swift_release(v15);

    }
    else
    {
      swift_release(v15);
    }
  }
  else
  {
    v26 = *(_QWORD *)(v1 + v2);
    v27 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt;
    if (*(_BYTE *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) == 1)
    {
      sub_1004DB740();
      sub_1004E060C();
      v26 = *(_QWORD *)(v1 + v2);
      v27 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt;
    }
    *(_BYTE *)(v26 + v27) = 0;
    v28 = sub_1004F3CD8();
    v29 = swift_allocError(&type metadata for SDRunState, v28, 0, 0);
    *v30 = 1;
    swift_willThrow(v29);
  }
}

void sub_1004D6D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v1 = v0;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "dismissUnlockPrompt", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v7);
    if (Strong)
    {
      v9 = Strong;
      sub_1004C58F8(Strong, 1);
      aBlock[4] = sub_1004E3DE0;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072C180;
      v10 = _Block_copy(aBlock);
      v11 = objc_msgSend(v9, "remoteObjectProxyWithErrorHandler:", v10);
      _Block_release(v10);
      objc_msgSend(v11, "dismissUnlockPrompt");

      swift_unknownObjectRelease(v11);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "ignore dismissUnlockPrompt, UI updates disabled for current session state", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

void sub_1004D6F6C(char a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  const char *object;
  __n128 v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v7 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt;
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) & 1) == 0)
  {
    v9 = v4;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007C37A0);
    v14 = swift_bridgeObjectRetain_n(a4, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v35 = a1;
      v17 = swift_slowAlloc(28, -1);
      v33 = swift_slowAlloc(32, -1);
      v36 = v33;
      *(_DWORD *)v17 = 67109634;
      LODWORD(v38) = v35 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, (char *)&v38 + 4, v17 + 4);
      *(_WORD *)(v17 + 8) = 2080;
      swift_bridgeObjectRetain(a4);
      v38 = sub_100228BD8(a3, (unint64_t)a4, &v36);
      v7 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 10);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v17 + 18) = 2048;
      v38 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 20);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "ensurePairingConsented - inViewService: %{BOOL}d | %s:%ld", (uint8_t *)v17, 0x1Cu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      v18 = v17;
      a1 = v35;
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
    }
    sub_1004E033C(a1 & 1);
    v6 = *(_QWORD *)(v9 + v5);
    v8 = v7[188];
  }
  *(_BYTE *)(v6 + v8) = 1;
  if (*(_BYTE *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) == 1)
  {
    v19 = *(_QWORD *)(v6 + 16);
    v36 = 0xD000000000000057;
    v37 = 0x800000010061ECC0;
    v38 = 1603;
    swift_retain();
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v20._object;
    String.append(_:)(v20);
    v22 = swift_bridgeObjectRelease(object);
    v23 = (const char *)v37;
    v24 = String.hashValue.getter(v36, v37, v22);
    swift_bridgeObjectRelease(v23);
    swift_beginAccess(v19 + 16, &v36, 33, 0);
    LOBYTE(v23) = sub_10045DE64(&v38, v24);
    swift_endAccess(&v36);
    if ((v23 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.default.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "ensurePairingConsented completed", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }
      swift_release(v19);

    }
    else
    {
      swift_release(v19);
    }
  }
  else
  {
    v30 = sub_1004F3CD8();
    v31 = swift_allocError(&type metadata for SDRunState, v30, 0, 0);
    *v32 = 1;
    swift_willThrow(v31);
  }
}

void sub_1004D7370(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *Strong;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;
  _QWORD aBlock[6];

  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v3 = v1;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C37A0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "showChargingStatus", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v10);
    if (Strong)
    {
      v12 = Strong;
      if (a1 != 2)
        *(_BYTE *)(*(_QWORD *)(v3 + v2) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) = a1 & 1;
      sub_1004C58F8(Strong, 1);
      aBlock[4] = sub_1004E09D8;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072BF48;
      v13 = _Block_copy(aBlock);
      v14 = objc_msgSend(v12, "remoteObjectProxyWithErrorHandler:", v13);
      _Block_release(v13);
      objc_msgSend(v14, "showChargingStatus");

      swift_unknownObjectRelease(v14);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "ignore showChargingStatus, UI updates disabled for current session state", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
}

void sub_1004D7600()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  Swift::String v7;
  const char *object;
  __n128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _QWORD v25[3];
  uint64_t v26;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "bluetoothAddressData");
  if (v1)
  {
    v2 = v1;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    sub_100225AB4(v3, v5);
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
    v25[0] = 0xD000000000000057;
    v25[1] = 0x800000010061ECC0;
    v26 = 1703;
    swift_retain();
    v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v7._object;
    String.append(_:)(v7);
    v9 = swift_bridgeObjectRelease(object);
    v10 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v9);
    swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
    swift_beginAccess(v6 + 16, v25, 33, 0);
    v11 = sub_10045DE64(&v26, v10);
    swift_endAccess(v25);
    if ((v11 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v12 = type metadata accessor for Logger(0);
      v13 = sub_100221DF8(v12, (uint64_t)qword_1007C37A0);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "ensureMyBTAddressAvailable completed", v16, 2u);
        swift_slowDealloc(v16, -1, -1);
      }
      swift_release(v6);

    }
    else
    {
      swift_release(v6);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007C37A0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "ensureMyBTAddressAvailable - bluetoothAddressData = nil", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = sub_1004F3CD8();
    v23 = swift_allocError(&type metadata for SDRunState, v22, 0, 0);
    *v24 = 1;
    swift_willThrow(v23);
  }
}

void sub_1004D78D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  uint8_t *v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  id v41;
  NSString v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  Class v46;
  Class v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint8_t *v51;
  uint8_t *v52;
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  const char *v62;

  v1 = v0;
  v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress
                 + 8) >> 60 == 15)
  {
    v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor), "bluetoothAddressData");
    if (v7)
    {
      v8 = v7;
      v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;

    }
    else
    {
      v9 = 0;
      v11 = 0xF000000000000000;
    }
    v59 = v9;
    v60 = v11;
    v12 = sub_100008384(&qword_1007B5220);
    Optional.unwrap(_:file:line:)(&v61, sub_1004E0320, 0, "DaemoniOSLibrary/SDB332SetupAgent.swift", 39, 2, 1580, v12);
    sub_100225AA0(v9, v11);
    v13 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider);
    if (v13)
    {
      v14 = *(const char **)(*(_QWORD *)(v1 + v6)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                           + 8);
      if (v14)
      {
        v56 = v2;
        v57 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider;
        v55 = v5;
        v16 = v61;
        v15 = (unint64_t)v62;
        v17 = v13;
        swift_bridgeObjectRetain(v14);
        v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        v19 = *(_QWORD *)(v1 + v6) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
        v20 = *(_QWORD *)(v19 + 8);
        if (v20 >> 60 != 15)
        {
          v21 = *(_QWORD *)v19;
          sub_10022E4A8(*(_QWORD *)v19, *(_QWORD *)(v19 + 8));
          isa = Data._bridgeToObjectiveC()().super.isa;
          sub_100225AA0(v21, v20);
          objc_msgSend(v17, "startBLEUpdates:blePairingUUID:pairType:bRadioUpdatesOn:bPairInfoUpdatesOn:", v18, isa, 1, 1, 1);

          *(_BYTE *)(*(_QWORD *)(v1 + v6)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) = 1;
          if (qword_1007B41F0 != -1)
            swift_once(&qword_1007B41F0, sub_1004C46F4);
          v23 = type metadata accessor for Logger(0);
          sub_100221DF8(v23, (uint64_t)qword_1007C37A0);
          v24 = v15;
          sub_10022E4A8(v16, v15);
          v25 = sub_10022E4A8(v16, v15);
          v26 = Logger.logObject.getter(v25);
          v27 = static os_log_type_t.default.getter(v26);
          v28 = v27;
          if (os_log_type_enabled(v26, v27))
          {
            v54 = v28;
            v29 = (uint8_t *)swift_slowAlloc(12, -1);
            v30 = swift_slowAlloc(32, -1);
            v53 = v30;
            *(_DWORD *)v29 = 136315138;
            v58 = v30;
            v59 = v16;
            v51 = v29 + 4;
            v52 = v29;
            v61 = 0;
            v62 = (const char *)0xE000000000000000;
            v60 = v24;
            v31 = v3;
            v32 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
            v33 = v55;
            v34 = v56;
            v32(v55, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v56);
            v35 = sub_100358394();
            DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v59, v33, 58, 0xE100000000000000, &type metadata for Data, v35);
            (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v34);
            v36 = v62;
            v61 = sub_100228BD8(v61, (unint64_t)v62, &v58);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v51);
            swift_bridgeObjectRelease(v36);
            sub_100225AB4(v16, v24);
            sub_100225AB4(v16, v24);
            v37 = v52;
            _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v54, "ensureMyAddressSent - sent myAddress: %s", v52, 0xCu);
            v38 = v53;
            swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v38, -1, -1);
            swift_slowDealloc(v37, -1, -1);
          }
          else
          {
            sub_100225AB4(v16, v15);
            sub_100225AB4(v16, v15);
          }

          v39 = *(void **)(v1 + v57);
          if (v39)
          {
            v40 = *(const char **)(*(_QWORD *)(v1 + v6)
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                                 + 8);
            if (v40)
            {
              v41 = v39;
              swift_bridgeObjectRetain(v40);
              v42 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v40);
              v43 = *(_QWORD *)(v1 + v6)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
              v44 = *(_QWORD *)(v43 + 8);
              if (v44 >> 60 != 15)
              {
                v45 = *(_QWORD *)v43;
                sub_10022E4A8(*(_QWORD *)v43, *(_QWORD *)(v43 + 8));
                v46 = Data._bridgeToObjectiveC()().super.isa;
                sub_100225AA0(v45, v44);
                v47 = Data._bridgeToObjectiveC()().super.isa;
                objc_msgSend(v41, "deviceUpdatePairingInfo:blePairingUUID:pairType:pairInfo:", v42, v46, 1, v47);

                v48 = (uint64_t *)(*(_QWORD *)(v1 + v6)
                                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress);
                v49 = *v48;
                v50 = v48[1];
                *v48 = v16;
                v48[1] = v24;
                sub_100225AA0(v49, v50);
                return;
              }
LABEL_23:
              __break(1u);
              return;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_1004D7DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  const char *v24;
  __n128 v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v33 = 0xD000000000000057;
  v34 = 0x800000010061ECC0;
  v35 = 1708;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v33, 33, 0);
  v8 = sub_10045DE64(&v35, v7);
  swift_endAccess(&v33);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    v7 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v7, "ensureAllDataFromB332 called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v14 = *(_QWORD *)(v1 + v2);
  v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8);
  if (v15 >> 60 == 15
    || (v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8),
        v16 >> 60 == 15))
  {
    v17 = sub_1004F3CD8();
    v18 = swift_allocError(&type metadata for SDRunState, v17, 0, 0);
    *v19 = 1;
    swift_willThrow(v18);
  }
  else
  {
    v7 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
    v21 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
    v22 = *(_QWORD *)(v14 + 16);
    v33 = 0xD000000000000057;
    v34 = 0x800000010061ECC0;
    v35 = 1713;
    sub_100244404(v7, v15);
    sub_100244404(v21, v16);
    swift_retain();
    v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v24 = (const char *)v23._object;
    String.append(_:)(v23);
    v25 = swift_bridgeObjectRelease(v24);
    v26 = (const char *)v34;
    v27 = String.hashValue.getter(v33, v34, v25);
    swift_bridgeObjectRelease(v26);
    swift_beginAccess(v22 + 16, &v33, 33, 0);
    LOBYTE(v26) = sub_10045DE64(&v35, v27);
    swift_endAccess(&v33);
    if ((v26 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v28 = type metadata accessor for Logger(0);
      v29 = sub_100221DF8(v28, (uint64_t)qword_1007C37A0);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "ensureAllDataFromB332 completed", v32, 2u);
        swift_slowDealloc(v32, -1, -1);
      }
      swift_release(v22);

    }
    else
    {
      swift_release(v22);
    }
  }
  return v7;
}

void sub_1004D81B0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, int a5, int a6, int a7, int a8, os_log_t log, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  NSObject *v27;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v24 = type metadata accessor for Logger(0);
  sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
  sub_10022E4A8(a1, a2);
  v25 = sub_10022E4A8(a3, a4);
  v27 = Logger.logObject.getter(v25);
  v26 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v26))
  {
    *(_DWORD *)swift_slowAlloc(12, -1) = 134217984;
    __asm { BR              X10 }
  }
  sub_100225AB4(a1, a2);
  sub_100225AB4(a3, a4);

}

id sub_1004D8394()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  const char *v19;
  id v20;
  double v21;
  NSString v22;
  NSString v23;
  uint64_t v24;
  NSString v25;
  void *v26;
  id v27;
  void *v28;
  unsigned __int8 v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  int v35;
  const char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState] + 16);
  v40 = 0xD000000000000057;
  v41 = (const char *)0x800000010061ECC0;
  v42 = 1428;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v40, 33, 0);
  LOBYTE(object) = sub_10045DE64(&v42, v7);
  swift_endAccess(&v40);
  if ((object & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ensureDiscovered called", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v13 = *(_QWORD *)&v1[v2];
  v14 = *(void **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v14)
  {
    if ((*(_BYTE *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleDiscover) & 1) == 0)
    {
      *(_BYTE *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleDiscover) = 1;
      v19 = *(const char **)(*(_QWORD *)&v1[v2]
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag
                           + 8);
      v20 = v14;
      if (v19)
      {
        swift_bridgeObjectRetain(v19);
        v22 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
      }
      else
      {
        v22 = 0;
      }
      objc_msgSend(v14, "tag:", v22, v21);

      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v14, "tag:", v23);

      v24 = *(_QWORD *)&v1[v2];
      if ((*(_BYTE *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0
        && *(_QWORD *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType) == 4)
      {
        v25 = String._bridgeToObjectiveC()();
        objc_msgSend(v14, "tag:", v25);

        v24 = *(_QWORD *)&v1[v2];
      }
      v26 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
      swift_retain();
      v27 = objc_msgSend(v26, "sharedPairingAgent");
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(v27, "isPeerPaired:", v14);

        *(_BYTE *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired) = v29;
        swift_release(v24);
        if (qword_1007B41F0 != -1)
          swift_once(&qword_1007B41F0, sub_1004C46F4);
        v30 = type metadata accessor for Logger(0);
        sub_100221DF8(v30, (uint64_t)qword_1007C37A0);
        v31 = v1;
        v32 = Logger.logObject.getter(v31);
        v33 = static os_log_type_t.default.getter(v32);
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc(12, -1);
          v39 = swift_slowAlloc(32, -1);
          v42 = v39;
          *(_DWORD *)v34 = 136315138;
          v35 = *(unsigned __int8 *)(*(_QWORD *)&v1[v2]
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
          if (v35 == 2)
          {
            v40 = 0;
            v41 = (const char *)0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease(v41);
            v36 = (const char *)0x800000010061EEE0;
            v37 = 0xD000000000000013;
          }
          else
          {
            if ((v35 & 1) != 0)
              v37 = 1702195828;
            else
              v37 = 0x65736C6166;
            if ((v35 & 1) != 0)
              v36 = (const char *)0xE400000000000000;
            else
              v36 = (const char *)0xE500000000000000;
          }
          v40 = sub_100228BD8(v37, (unint64_t)v36, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v34 + 4);

          swift_bridgeObjectRelease(v36);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "ensureDiscovered completed. isPaired? %s", v34, 0xCu);
          swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v34, -1, -1);

        }
        else
        {

        }
        sub_1004D6D10();
        v38 = *(_QWORD *)(*(_QWORD *)&v1[v2] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8);
        if (v38 >> 60 != 15)
          __asm { BR              X13 }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x1004D8A78);
    }
    return v14;
  }
  else
  {
    v16 = sub_1004F3CD8();
    v17 = swift_allocError(&type metadata for SDRunState, v16, 0, 0);
    *v18 = 1;
    swift_willThrow(v17);
    return 0;
  }
}

void sub_1004D8A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v7[11];
  _QWORD v8[3];
  id v9;

  v1 = type metadata accessor for UUID(0);
  v7[9] = *(_QWORD *)(v1 - 8);
  v7[10] = v1;
  __chkstk_darwin(v1);
  v7[8] = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  __chkstk_darwin(v3);
  v4 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v9 = *(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  v5 = v9;
  v6 = sub_100008384((uint64_t *)&unk_1007C4320);
  Optional.unwrap(_:file:line:)(v8, sub_1004E02FC, 0, "DaemoniOSLibrary/SDB332SetupAgent.swift", 39, 2, 1457, v6);

  __asm { BR              X11 }
}

void sub_1004D8BC0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  const char *v28;
  void *v29;
  NSObject *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  char **v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  const char **v57;
  NSObject *v58;
  char isUniquelyReferenced_nonNull_native;
  const char *v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  NSString v66;
  id v67;
  NSString v68;
  unsigned __int8 v69;
  id v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  void *v79;
  unint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;

  *(_QWORD *)(v6 - 144) = v5;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v7 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v8 = *(void (**)(uint64_t))(v2 + 16);
  *(_QWORD *)(v6 - 168) = v7;
  v8(v4);
  *(_QWORD *)(v6 - 136) = v0;
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  *(_QWORD *)(v6 - 152) = v1;
  if (v12)
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v6 - 160) = v14;
    *(_QWORD *)(v6 - 104) = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_1004C6324();
    if (!v16)
    {

      __break(1u);
      goto LABEL_41;
    }
    v17 = (const char *)v16;
    *(_QWORD *)(v6 - 72) = sub_100228BD8(v15, v16, (uint64_t *)(v6 - 104));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 72, v6 - 64, v13 + 4);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "ensureConnected - Start connecting!!! withRandom: %s", v13, 0xCu);
    v18 = *(_QWORD *)(v6 - 160);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
    v1 = *(void **)(v6 - 152);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  }
  v19 = v9;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  *(_QWORD *)(v6 - 160) = v19;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v6 - 72) = v24;
    v25 = *(_QWORD *)(*(_QWORD *)(v6 - 136) + *(_QWORD *)(v6 - 144));
    *(_DWORD *)v23 = 136315138;
    v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
    if (v26 == 2)
    {
      *(_QWORD *)(v6 - 104) = 0;
      *(_QWORD *)(v6 - 96) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(*(const char **)(v6 - 96));
      v27 = 0xD000000000000013;
      v28 = (const char *)0x800000010061EEE0;
    }
    else
    {
      if ((v26 & 1) != 0)
        v27 = 1702195828;
      else
        v27 = 0x65736C6166;
      if ((v26 & 1) != 0)
        v28 = (const char *)0xE400000000000000;
      else
        v28 = (const char *)0xE500000000000000;
    }
    *(_QWORD *)(v6 - 104) = sub_100228BD8(v27, (unint64_t)v28, (uint64_t *)(v6 - 72));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 104, v6 - 96, v23 + 4);
    v29 = *(void **)(v6 - 160);

    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "is paired?: %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

  }
  v30 = v1;
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v33 = 134217984;
    *(_QWORD *)(v6 - 104) = -[NSObject state](v30, "state");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 104, v6 - 96, v33 + 4);

    _os_log_impl((void *)&_mh_execute_header, v31, v32, "connecting state: : %ld", v33, 0xCu);
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {

    v31 = v30;
  }

  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "attempting central.connect...", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

  v38 = v30;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  v41 = &selRef_handleStreamResponse_;
  if (os_log_type_enabled(v39, v40))
  {
    v42 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v6 - 176) = v43;
    *(_QWORD *)(v6 - 104) = v43;
    *(_DWORD *)v42 = 136315138;
    *(_QWORD *)(v6 - 184) = v42 + 4;
    v44 = -[NSObject identifier](v38, "identifier");
    v45 = *(_QWORD *)(v6 - 128);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v44);

    v47 = UUID.uuidString.getter(v46);
    v49 = v48;
    v50 = *(_QWORD *)(v6 - 120);
    (*(void (**)(uint64_t, _QWORD))(v50 + 8))(v45, *(_QWORD *)(v6 - 112));
    *(_QWORD *)(v6 - 72) = sub_100228BD8(v47, v49, (uint64_t *)(v6 - 104));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 72, v6 - 64, *(_QWORD *)(v6 - 184));

    v51 = (const char *)v49;
    v41 = &selRef_handleStreamResponse_;
    swift_bridgeObjectRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "UUID: %s", v42, 0xCu);
    v52 = *(_QWORD *)(v6 - 176);
    swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
    v53 = *(_QWORD *)(v6 - 112);
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

    v50 = *(_QWORD *)(v6 - 120);
    v53 = *(_QWORD *)(v6 - 112);
    v45 = *(_QWORD *)(v6 - 128);
  }
  v54 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  v55 = *(char **)(v6 - 160);
  objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "connectPeripheral:options:", v38, 0);
  v56 = objc_msgSend(v38, v41[141]);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v56);

  v57 = (const char **)&v55[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo];
  swift_beginAccess(&v55[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo], v6 - 104, 33, 0);
  v58 = v38;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
  *(_QWORD *)(v6 - 72) = *v57;
  *v57 = (const char *)0x8000000000000000;
  sub_10046D6F4((uint64_t)v58, v45, isUniquelyReferenced_nonNull_native);
  v60 = *v57;
  *v57 = *(const char **)(v6 - 72);
  v61 = swift_bridgeObjectRelease(v60);
  (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v45, v53, v61);
  swift_endAccess(v6 - 104);
  objc_msgSend(v55, "stopScanning");
  v63 = *(_QWORD *)(v6 - 144);
  v62 = *(_QWORD *)(v6 - 136);
  v64 = *(_QWORD *)(v62 + v63);
  v65 = *(void **)(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  v66 = String._bridgeToObjectiveC()();
  LOBYTE(v65) = objc_msgSend(v65, "BOOLForKey:", v66);
  swift_release(v64);

  if ((v65 & 1) == 0)
  {
    v67 = objc_retain(*(id *)(*(_QWORD *)(v62 + v63)
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    v68 = String._bridgeToObjectiveC()();
    v69 = objc_msgSend(v67, "BOOLForKey:", v68);

    if ((v69 & 1) == 0)
    {
      v70 = objc_msgSend(*(id *)&v55[v54], "sharedPairingAgent");
      if (v70)
      {
        v71 = v70;
        sub_1004D0A8C();
        v73 = (uint64_t)v72;

        if ((unint64_t)v73 >> 62)
        {
          if (v73 < 0)
            v83 = v73;
          else
            v83 = v73 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain((const char *)v73);
          v74 = _CocoaArrayWrapper.endIndex.getter(v83);
          swift_bridgeObjectRelease((const char *)v73);
        }
        else
        {
          v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease((const char *)v73);
        if (v74)
        {
          v76 = Logger.logObject.getter(v75);
          v77 = static os_log_type_t.default.getter(v76);
          if (os_log_type_enabled(v76, v77))
          {
            v78 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v78 = 0;
            _os_log_impl((void *)&_mh_execute_header, v76, v77, "Woah! isFirstEverPair but !pairedB332s().isEmpty!", v78, 2u);
            swift_slowDealloc(v78, -1, -1);
          }

        }
        goto LABEL_35;
      }
LABEL_41:
      __break(1u);
      JUMPOUT(0x1004D9654);
    }
  }
LABEL_35:
  *(_BYTE *)(*(_QWORD *)(v62 + v63) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState) = 1;
  v79 = *(void **)(v6 - 152);
  v80 = sub_1004F3CD8();
  v81 = swift_allocError(&type metadata for SDRunState, v80, 0, 0);
  *v82 = 1;
  swift_willThrow(v81);

}

void sub_1004D9664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  const char *object;
  __n128 v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranEnsurePairingStarted) & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "ensurePairingStarted called", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = *(_QWORD *)(v1 + v5);
    *(_BYTE *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranEnsurePairingStarted) = 1;
    v13 = *(void **)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
    if (v13)
    {
      v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
      v15 = v13;
      v16 = objc_msgSend(v14, "sharedPairingAgent");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "pairPeer:", v15);

        v18 = objc_msgSend(v15, "identifier");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v18);

        v19 = type metadata accessor for UUID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 0, 1, v19);
        v20 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair;
        swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair, &v33, 33, 0);
        sub_10023A084((uint64_t)v4, v20, &qword_1007B7280);
        swift_endAccess(&v33);

        v6 = *(_QWORD *)(v1 + v5);
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_9:
  v21 = *(_QWORD *)(v6 + 16);
  v33 = 0xD000000000000057;
  v34 = 0x800000010061ECC0;
  v32 = 1512;
  swift_retain();
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v22._object;
  String.append(_:)(v22);
  v24 = swift_bridgeObjectRelease(object);
  v25 = (const char *)v34;
  v26 = String.hashValue.getter(v33, v34, v24);
  swift_bridgeObjectRelease(v25);
  swift_beginAccess(v21 + 16, &v33, 33, 0);
  LOBYTE(v25) = sub_10045DE64(&v32, v26);
  swift_endAccess(&v33);
  if ((v25 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007C37A0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "ensurePairingStarted completed", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }
    swift_release(v21);

  }
  else
  {
    swift_release(v21);
  }
}

void sub_1004D9A08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  const char *object;
  __n128 v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  char *v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  const char *v32;
  __n128 v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  id v46;
  void (*v47)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint8_t *v59;
  char *v60;
  NSObject *v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  void *v68;
  id v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  char v73;
  void (*v74)(_BYTE *, uint64_t);
  uint64_t v75;
  _BYTE *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  unint64_t v101;
  const char *v102;
  uint8_t *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t inited;
  uint64_t v107;
  _BYTE v108[24];
  uint8_t *v109;
  uint8_t *v110;
  uint64_t v111;
  uint8_t *v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  NSObject *v123;
  uint64_t v124;
  unint64_t v125[2];
  uint64_t v126;
  uint64_t v127[4];
  char v128[16];

  v1 = v0;
  v115 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = &v108[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v119 = type metadata accessor for UUID(0);
  v120 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v116 = &v108[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v4);
  v118 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100008384(&qword_1007B7280);
  v7 = __chkstk_darwin(v6);
  v117 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v11 = &v108[-v10];
  __chkstk_darwin(v9);
  v13 = &v108[-v12];
  v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v15 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState] + 16);
  v122 = (unint64_t)"<no found.batteryInfo>";
  v124 = 0xD000000000000057;
  v125[0] = 0x800000010061ECC0;
  v127[0] = 1517;
  swift_retain();
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v16._object;
  String.append(_:)(v16);
  v18 = swift_bridgeObjectRelease(object);
  v19 = (const char *)v125[0];
  v20 = String.hashValue.getter(v124, v125[0], v18);
  swift_bridgeObjectRelease(v19);
  swift_beginAccess(v15 + 16, &v124, 33, 0);
  LOBYTE(v19) = sub_10045DE64(v127, v20);
  swift_endAccess(&v124);
  if ((v19 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v14;
      v26 = v1;
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "ensurePairingRequestHandled called", v27, 2u);
      v28 = v27;
      v1 = v26;
      v14 = v25;
      swift_slowDealloc(v28, -1, -1);
    }
    swift_release(v15);

  }
  else
  {
    swift_release(v15);
  }
  v121 = v1;
  v29 = *(_QWORD *)&v1[v14];
  if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) & 1) != 0)
  {
    v30 = *(_QWORD *)(v29 + 16);
    v124 = 0xD000000000000057;
    v125[0] = v122 | 0x8000000000000000;
    v127[0] = 1573;
    swift_retain();
    v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v32 = (const char *)v31._object;
    String.append(_:)(v31);
    v33 = swift_bridgeObjectRelease(v32);
    v34 = (const char *)v125[0];
    v35 = String.hashValue.getter(v124, v125[0], v33);
    swift_bridgeObjectRelease(v34);
    swift_beginAccess(v30 + 16, &v124, 33, 0);
    LOBYTE(v34) = sub_10045DE64(v127, v35);
    swift_endAccess(&v124);
    if ((v34 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100221DF8(v36, (uint64_t)qword_1007C37A0);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "ensurePairingRequestHandled completed", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }
      swift_release(v30);

    }
    else
    {
      swift_release(v30);
    }
    return;
  }
  v41 = *(uint8_t **)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
  if (!v41
    || (v42 = (uint64_t *)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType),
        (v42[1] & 1) != 0))
  {
    v43 = sub_1004F3CD8();
    v44 = swift_allocError(&type metadata for SDRunState, v43, 0, 0);
    *v45 = 1;
    swift_willThrow(v44);
    return;
  }
  v111 = *v42;
  v110 = v41;
  v112 = v41;
  v46 = -[uint8_t identifier](v112, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v46);

  v47 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v120 + 56);
  v48 = 1;
  v47(v13, 0, 1, v119);
  v49 = *(void **)(*(_QWORD *)&v121[v14]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v49)
  {
    v50 = objc_msgSend(v49, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v50);

    v48 = 0;
  }
  v51 = (uint64_t)v117;
  v52 = v119;
  v47(v11, v48, 1, v119);
  v53 = *(int *)(v4 + 48);
  v54 = v118;
  v55 = (uint64_t)&v118[v53];
  sub_100221F28((uint64_t)v13, (uint64_t)v118, &qword_1007B7280);
  v56 = v54;
  sub_100221F28((uint64_t)v11, v55, &qword_1007B7280);
  v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  if (v57((uint64_t)v56, 1, v52) == 1)
  {
    sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
    v56 = v118;
    sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
    if (v57(v55, 1, v52) == 1)
    {
      sub_10000D0F0((uint64_t)v56, &qword_1007B7280);
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  sub_100221F28((uint64_t)v56, v51, &qword_1007B7280);
  if (v57(v55, 1, v52) == 1)
  {
    sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
    sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v51, v52);
LABEL_26:
    sub_10000D0F0((uint64_t)v56, &qword_1007B6470);
    goto LABEL_27;
  }
  v70 = v51;
  v71 = v116;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v120 + 32))(v116, v55, v52);
  v72 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v73 = dispatch thunk of static Equatable.== infix(_:_:)(v70, v71, v52, v72);
  v74 = *(void (**)(_BYTE *, uint64_t))(v120 + 8);
  v74(v71, v52);
  sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
  sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
  v74(v117, v52);
  sub_10000D0F0((uint64_t)v56, &qword_1007B7280);
  if ((v73 & 1) != 0)
  {
LABEL_34:
    *(_BYTE *)(*(_QWORD *)&v121[v14]
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) = 1;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v75 = type metadata accessor for Logger(0);
    v76 = (_BYTE *)sub_100221DF8(v75, (uint64_t)qword_1007C37A0);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter(v77);
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "ensurePairingRequestHandled", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }

    v120 = v14;
    v80 = *(_QWORD *)&v121[v14] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd;
    v81 = *(_QWORD *)(v80 + 8);
    if (v81 >> 60 != 15)
    {
      v82 = *(_QWORD *)v80;
      sub_100244404(*(_QWORD *)v80, *(_QWORD *)(v80 + 8));
      v83 = sub_10022E4A8(v82, v81);
      v84 = Logger.logObject.getter(v83);
      v85 = static os_log_type_t.default.getter(v84);
      v86 = os_log_type_enabled(v84, v85);
      v119 = v81 >> 62;
      if (v86)
      {
        *(_DWORD *)swift_slowAlloc(12, -1) = 134217984;
        __asm { BR              X11 }
      }
      sub_100225AA0(v82, v81);

      v92 = (_BYTE *)objc_opt_self(SDStatusMonitor);
      if (objc_msgSend(v92, "enableOOBPCredentialLogging"))
      {
        sub_10022E4A8(v82, v81);
        v93 = sub_10022E4A8(v82, v81);
        v94 = Logger.logObject.getter(v93);
        v95 = static os_log_type_t.default.getter(v94);
        if (os_log_type_enabled(v94, v95))
        {
          v96 = (uint8_t *)swift_slowAlloc(12, -1);
          v97 = swift_slowAlloc(32, -1);
          v116 = (_BYTE *)v97;
          v118 = v76;
          v117 = v92;
          v110 = v96;
          *(_DWORD *)v96 = 136315138;
          v126 = v97;
          v109 = v96 + 4;
          v124 = 0;
          v125[0] = 0xE000000000000000;
          v127[0] = v82;
          v127[1] = v81;
          v98 = v114;
          v99 = v113;
          v100 = v115;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v114 + 104))(v113, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v115);
          v101 = sub_100358394();
          DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(v127, v99, 58, 0xE100000000000000, &type metadata for Data, v101);
          (*(void (**)(_BYTE *, uint64_t))(v98 + 8))(v99, v100);
          v102 = (const char *)v125[0];
          v124 = sub_100228BD8(v124, v125[0], &v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v109);
          swift_bridgeObjectRelease(v102);
          sub_100225AA0(v82, v81);
          sub_100225AA0(v82, v81);
          v103 = v110;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "pairData: %s", v110, 0xCu);
          v104 = v116;
          swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v104, -1, -1);
          swift_slowDealloc(v103, -1, -1);
        }
        else
        {
          sub_100225AA0(v82, v81);
          sub_100225AA0(v82, v81);
        }

      }
      v105 = sub_100008384((uint64_t *)&unk_1007C4210);
      inited = swift_initStackObject(v105, v128);
      *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBPairingAgentPairingDataOOBTKKey);
      *(_QWORD *)(inited + 40) = v107;
      *(_QWORD *)(inited + 72) = &type metadata for Data;
      *(_QWORD *)(inited + 48) = v82;
      *(_QWORD *)(inited + 56) = v81;
      sub_10022E4A8(v82, v81);
      sub_10021E744(inited);
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1004DB100);
  }
LABEL_27:
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v58 = type metadata accessor for Logger(0);
  sub_100221DF8(v58, (uint64_t)qword_1007C37A0);
  v59 = v112;
  v60 = v121;
  v61 = v59;
  v62 = v60;
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter(v63);
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc(22, -1);
    v66 = (char *)swift_slowAlloc(16, -1);
    *(_DWORD *)v65 = 138412546;
    v120 = v14;
    v124 = (uint64_t)v61;
    v123 = v61;
    v67 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v65 + 4);
    v122 = (unint64_t)v66;
    *(_QWORD *)v66 = v110;

    *(_WORD *)(v65 + 12) = 2112;
    v68 = *(void **)(*(_QWORD *)&v121[v120]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
    if (v68)
    {
      v124 = *(_QWORD *)(*(_QWORD *)&v121[v120]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
      v69 = v68;
    }
    else
    {
      v124 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v65 + 14);
    v87 = v122;
    *(_QWORD *)(v122 + 8) = v68;

    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Peer requesting pairing: %@\nbut storePeripheral is different: %@", (uint8_t *)v65, 0x16u);
    v88 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v87, 2, v88);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v65, -1, -1);
    v61 = v123;
  }
  else
  {

    v63 = v61;
  }

  v89 = sub_1004F3CD8();
  v90 = swift_allocError(&type metadata for SDRunState, v89, 0, 0);
  *v91 = 1;
  swift_willThrow(v90);

}

void sub_1004DB14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  const char *v17;
  __n128 v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  const char *v38;
  id v39;
  NSString v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  Class isa;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v48 = 0xD000000000000057;
  v49 = 0x800000010061ECC0;
  v50 = 1735;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v48, 33, 0);
  v8 = sub_10045DE64(&v50, v7);
  swift_endAccess(&v48);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensurePairingResultHandled called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v14 = *(_QWORD *)(v1 + v2);
  if ((*(_BYTE *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairResult) & 1) != 0)
    goto LABEL_9;
  v26 = *(unsigned __int8 *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed);
  v27 = 1;
  if (v26 == 2)
  {
LABEL_29:
    v45 = sub_1004F3CD8();
    v46 = swift_allocError(&type metadata for SDRunState, v45, 0, 0);
    *v47 = v27;
    swift_willThrow(v46);
    return;
  }
  *(_BYTE *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairResult) = 1;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100221DF8(v28, (uint64_t)qword_1007C37A0);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "ensurePairingResultHandled - pairingResult obtained", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  if (*(_BYTE *)(*(_QWORD *)(v1 + v2)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) == 1)
  {
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "stopBLEUpdates after pair result", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    v37 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider);
    if (v37)
    {
      v38 = *(const char **)(*(_QWORD *)(v1 + v2)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                           + 8);
      if (v38)
      {
        v39 = v37;
        swift_bridgeObjectRetain(v38);
        v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v38);
        v41 = *(_QWORD *)(v1 + v2) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
        v42 = *(_QWORD *)(v41 + 8);
        if (v42 >> 60 != 15)
        {
          v43 = *(_QWORD *)v41;
          sub_10022E4A8(*(_QWORD *)v41, *(_QWORD *)(v41 + 8));
          isa = Data._bridgeToObjectiveC()().super.isa;
          sub_100225AA0(v43, v42);
          objc_msgSend(v39, "stopBLEUpdates:blePairingUUID:", v40, isa);

          *(_BYTE *)(*(_QWORD *)(v1 + v2)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) = 0;
          goto LABEL_27;
        }
LABEL_34:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_27:
  if ((v26 & 1) == 0)
  {
    v27 = 3;
    goto LABEL_29;
  }
  v14 = *(_QWORD *)(v1 + v2);
LABEL_9:
  v15 = *(_QWORD *)(v14 + 16);
  v48 = 0xD000000000000057;
  v49 = 0x800000010061ECC0;
  v50 = 1756;
  swift_retain();
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v17 = (const char *)v16._object;
  String.append(_:)(v16);
  v18 = swift_bridgeObjectRelease(v17);
  v19 = (const char *)v49;
  v20 = String.hashValue.getter(v48, v49, v18);
  swift_bridgeObjectRelease(v19);
  swift_beginAccess(v15 + 16, &v48, 33, 0);
  LOBYTE(v19) = sub_10045DE64(&v50, v20);
  swift_endAccess(&v48);
  if ((v19 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "ensurePairingResultHandled completed", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    swift_release(v15);

  }
  else
  {
    swift_release(v15);
  }
}

void sub_1004DB6F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1004DB740();

  }
}

uint64_t sub_1004DB740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  v1 = v0;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "dismissChargingStatus", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v7);
  if (result)
  {
    v9 = (void *)result;
    v12[4] = sub_1004E09E4;
    v12[5] = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_1002377A0;
    v12[3] = &unk_10072BEA8;
    v10 = _Block_copy(v12);
    v11 = objc_msgSend(v9, "remoteObjectProxyWithErrorHandler:", v10);
    _Block_release(v10);
    objc_msgSend(v11, "dismissChargingStatus");

    return swift_unknownObjectRelease(v11);
  }
  return result;
}

void sub_1004DB8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  const char *object;
  __n128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  Swift::String v19;
  const char *v20;
  __n128 v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v29 = 0xD000000000000057;
  v30 = 0x800000010061ECC0;
  v31 = 1761;
  swift_retain();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v4._object;
  String.append(_:)(v4);
  v6 = swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v6);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v3 + 16, &v29, 33, 0);
  v8 = sub_10045DE64(&v31, v7);
  swift_endAccess(&v29);
  if ((v8 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureBatteryInfo called", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    swift_release(v3);

  }
  else
  {
    swift_release(v3);
  }
  v14 = *(_QWORD *)(v1 + v2);
  if (*(_QWORD *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo)
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8) & 1) == 0)
  {
    v18 = *(_QWORD *)(v14 + 16);
    v29 = 0xD000000000000057;
    v30 = 0x800000010061ECC0;
    v31 = 1765;
    swift_retain();
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v20 = (const char *)v19._object;
    String.append(_:)(v19);
    v21 = swift_bridgeObjectRelease(v20);
    v22 = (const char *)v30;
    v23 = String.hashValue.getter(v29, v30, v21);
    swift_bridgeObjectRelease(v22);
    swift_beginAccess(v18 + 16, &v29, 33, 0);
    LOBYTE(v22) = sub_10045DE64(&v31, v23);
    swift_endAccess(&v29);
    if ((v22 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v24 = type metadata accessor for Logger(0);
      v25 = sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "ensureBatteryInfo completed", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }
      swift_release(v18);

    }
    else
    {
      swift_release(v18);
    }
  }
  else
  {
    v15 = sub_1004F3CD8();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    swift_willThrow(v16);
  }
}

void sub_1004DBC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v1 = v0;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "showSubsequentPairSuccess", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v7);
    if (Strong)
    {
      v9 = Strong;
      sub_1004C58F8(Strong, 1);
      aBlock[4] = sub_1004E09CC;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072BF98;
      v10 = _Block_copy(aBlock);
      v11 = objc_msgSend(v9, "remoteObjectProxyWithErrorHandler:", v10);
      _Block_release(v10);
      objc_msgSend(v11, "showSubsequentPairSuccess");

      swift_unknownObjectRelease(v11);
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "ignore showSubsequentPairSuccess, UI updates disabled for current session state", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

void sub_1004DBE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  id v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  const char *v40;
  __n128 v41;
  void (*v42)(NSObject *, uint64_t, __n128);
  id v43;
  uint64_t v44;
  __n128 v45;
  const char *v46;
  unint64_t v47;
  char v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t *v54;
  id v55;
  char v56;
  const char *v57;
  __n128 v58;
  id v59;
  void *v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char **v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  const char *v77;
  const char **v78;
  double v79;
  const char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  const char *v86;
  const char **v87;
  double v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  const char *v94;
  os_log_t v95;
  NSObject *v96;
  uint64_t v97;
  uint64_t v98;
  const char **v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  NSObject *v117;
  os_log_type_t v118;
  int v119;
  uint64_t v120;
  const char **v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  const char *v128;
  const char *v129;
  const char **v130;
  double v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  const char *v137;
  const char *v138;
  const char **v139;
  double v140;
  const char *v141;
  uint64_t v142;
  uint64_t v143;
  const char *v144;
  const char *v145;
  NSObject *v146;
  os_log_t v147;
  unint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  uint64_t v151;
  Swift::String v152;
  const char *object;
  __n128 v154;
  const char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  NSObject *v166;
  const char *v167;
  const char **v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  os_log_t v175;
  uint64_t v176;
  NSObject *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  char v189[24];
  uint64_t v190;
  _BYTE v191[16];
  uint64_t v192[3];
  char v193[32];
  os_log_t v194;

  v2 = v1;
  isUniquelyReferenced_nonNull_native = v0;
  v176 = type metadata accessor for UUID(0);
  v173 = *(_QWORD *)(v176 - 8);
  v4 = __chkstk_darwin(v176);
  v165 = (char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v163 - v7;
  __chkstk_darwin(v6);
  v177 = ((char *)&v163 - v9);
  v174 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0
    && *(_QWORD *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType) == 2)
  {
    return;
  }
  v11 = *(_BYTE *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedUnpairProcess);
  v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
  v172 = v0;
  if ((v11 & 1) == 0)
  {
    *(_BYTE *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedUnpairProcess) = 1;
    v171 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
    v13 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central), "sharedPairingAgent");
    if (!v13)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v176);
      __break(1u);
      return;
    }
    v14 = v13;
    sub_1004D0A8C();
    v16 = (uint64_t)v15;

    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v162 = v16;
      else
        v162 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v16);
      v17 = _CocoaArrayWrapper.endIndex.getter(v162);
      swift_bridgeObjectRelease((const char *)v16);
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v164 = v2;
    if (v17)
    {
      v170 = v16 & 0xC000000000000001;
      v168 = (const char **)(isUniquelyReferenced_nonNull_native
                           + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo);
      swift_beginAccess(isUniquelyReferenced_nonNull_native+ OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo, v193, 0, 0);
      v18 = 4;
      v169 = v8;
      v166 = v17;
      v167 = (const char *)v16;
      while (1)
      {
        if (v170)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 - 4, v16);
        else
          v19 = *(id *)(v16 + 8 * v18);
        v20 = v19;
        if (__OFADD__(v18 - 4, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v175 = (os_log_t)(v18 - 3);
        v21 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + v174);
        swift_retain();
        v22 = objc_msgSend(v20, "identifier");
        v23 = v177;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v22);

        v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
        swift_beginAccess(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair, v192, 33, 0);
        v25 = v20;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v24);
        v190 = *v24;
        v26 = v190;
        *v24 = 0x8000000000000000;
        v28 = sub_10045C2DC((uint64_t)v23);
        v29 = *(_QWORD *)(v26 + 16);
        v30 = (v27 & 1) == 0;
        v31 = v29 + v30;
        if (__OFADD__(v29, v30))
          goto LABEL_61;
        v32 = v27;
        if (*(_QWORD *)(v26 + 24) >= v31)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v35 = (_QWORD *)v190;
            if ((v27 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_100471704();
            v35 = (_QWORD *)v190;
            if ((v32 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_10046B0F0(v31, isUniquelyReferenced_nonNull_native);
          v33 = sub_10045C2DC((uint64_t)v177);
          if ((v32 & 1) != (v34 & 1))
            goto LABEL_70;
          v28 = v33;
          v35 = (_QWORD *)v190;
          if ((v32 & 1) != 0)
          {
LABEL_20:
            v36 = v35[7];

            *(_QWORD *)(v36 + 8 * v28) = v25;
            goto LABEL_24;
          }
        }
        v35[(v28 >> 6) + 8] |= 1 << v28;
        (*(void (**)(unint64_t, NSObject *, uint64_t))(v173 + 16))(v35[6] + *(_QWORD *)(v173 + 72) * v28, v177, v176);
        *(_QWORD *)(v35[7] + 8 * v28) = v25;
        v37 = v35[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_62;
        v35[2] = v39;
LABEL_24:
        v40 = (const char *)*v24;
        *v24 = (uint64_t)v35;
        v41 = swift_bridgeObjectRelease(v40);
        v42 = *(void (**)(NSObject *, uint64_t, __n128))(v173 + 8);
        v42(v177, v176, v41);
        swift_endAccess(v192);
        swift_release(v21);
        v43 = objc_msgSend(v25, "identifier");
        v44 = (uint64_t)v169;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v43);

        v46 = *v168;
        if (*((_QWORD *)*v168 + 2))
        {
          swift_bridgeObjectRetain(*v168);
          v47 = sub_10045C2DC(v44);
          if ((v48 & 1) != 0)
          {
            v49 = *(id *)(*((_QWORD *)v46 + 7) + 8 * v47);
            v50 = swift_bridgeObjectRelease(v46);
            v42(v44, v176, v50);

            v51 = *(_QWORD *)(v172 + v174);
            swift_retain();
            v52 = objc_msgSend(v25, "identifier");
            v53 = (uint64_t)v165;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v52);

            v54 = (uint64_t *)(v51 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
            swift_beginAccess(v51 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect, v192, 33, 0);
            v55 = v25;
            v56 = swift_isUniquelyReferenced_nonNull_native(*v54);
            v190 = *v54;
            *v54 = 0x8000000000000000;
            sub_10046D6F4((uint64_t)v55, v53, v56);
            v57 = (const char *)*v54;
            *v54 = v190;
            v58 = swift_bridgeObjectRelease(v57);
            v42(v53, v176, v58);
            swift_endAccess(v192);
            swift_release(v51);
            goto LABEL_29;
          }
          v45 = swift_bridgeObjectRelease(v46);
        }
        v42(v44, v176, v45);
LABEL_29:
        isUniquelyReferenced_nonNull_native = v172;
        v59 = objc_msgSend(*(id *)(v172 + v171), "sharedPairingAgent");
        if (!v59)
        {
          __break(1u);
          goto LABEL_69;
        }
        v60 = v59;
        objc_msgSend(v59, "unpairPeer:", v25);

        ++v18;
        v16 = (uint64_t)v167;
        if (v175 == v166)
        {
          swift_bridgeObjectRelease(v167);
          v2 = v164;
          goto LABEL_33;
        }
      }
    }
    swift_bridgeObjectRelease((const char *)v16);
LABEL_33:
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v61 = type metadata accessor for Logger(0);
    sub_100221DF8(v61, (uint64_t)qword_1007C37A0);
    v62 = (char *)(id)isUniquelyReferenced_nonNull_native;
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter(v63);
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc(32, -1);
      v177 = swift_slowAlloc(96, -1);
      v192[0] = (uint64_t)v177;
      *(_DWORD *)v66 = 136315650;
      v171 = v66 + 4;
      v175 = v63;
      v67 = v174;
      v68 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + v174);
      LODWORD(v173) = v65;
      v69 = (const char **)(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
      swift_beginAccess(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair, &v180, 0, 0);
      v70 = *v69;
      v71 = sub_100221EDC(0, &qword_1007C4238, CBPeripheral_ptr);
      v72 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v170 = v72;
      swift_bridgeObjectRetain(v70);
      v73 = v176;
      v169 = (char *)v71;
      v75 = Dictionary.description.getter(v74, v176, v71, v72);
      v77 = v76;
      swift_bridgeObjectRelease(v70);
      v190 = sub_100228BD8(v75, (unint64_t)v77, v192);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191, v171);

      swift_bridgeObjectRelease(v77);
      *(_WORD *)(v66 + 12) = 2080;
      v78 = (const char **)(*(_QWORD *)(v172 + v67)
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
      *(_QWORD *)&v79 = swift_beginAccess(v78, &v179, 0, 0).n128_u64[0];
      v80 = *v78;
      swift_bridgeObjectRetain(v80, v79);
      v81 = v73;
      v82 = v170;
      v84 = Dictionary.description.getter(v83, v81, v71, v170);
      v86 = v85;
      swift_bridgeObjectRelease(v80);
      v190 = sub_100228BD8(v84, (unint64_t)v86, v192);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191, v66 + 14);

      swift_bridgeObjectRelease(v86);
      *(_WORD *)(v66 + 22) = 2080;
      v87 = (const char **)&v62[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo];
      *(_QWORD *)&v88 = swift_beginAccess(&v62[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo], &v178, 0, 0).n128_u64[0];
      v89 = *v87;
      swift_bridgeObjectRetain(v89, v88);
      v91 = Dictionary.description.getter(v90, v176, v169, v82);
      v93 = v92;
      swift_bridgeObjectRelease(v89);
      v190 = sub_100228BD8(v91, v93, v192);
      v2 = v164;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191, v66 + 24);

      v94 = (const char *)v93;
      isUniquelyReferenced_nonNull_native = v172;
      swift_bridgeObjectRelease(v94);
      v95 = v175;
      _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v173, "ensureAllUnpaired called. needingUnpair: %s, needingDisconnect: %s, peripheralsIConnectedTo: %s", (uint8_t *)v66, 0x20u);
      v96 = v177;
      swift_arrayDestroy(v177, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v96, -1, -1);
      swift_slowDealloc(v66, -1, -1);

    }
    else
    {

    }
    v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
  }
  v97 = v174;
  v98 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + v174);
  v99 = (const char **)(v98 + v12[199]);
  swift_beginAccess(v99, v192, 1, 0);
  v100 = *v99;
  v101 = *((_QWORD *)*v99 + 2);
  swift_retain();
  swift_bridgeObjectRetain(v100);
  v102 = v2;
  v104 = sub_1004EF5D8(v103);
  v164 = v102;
  swift_bridgeObjectRelease(v100);
  v105 = *v99;
  *v99 = (const char *)v104;
  swift_release(v98);
  swift_bridgeObjectRelease(v105);
  v106 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + v97) + v12[199];
  swift_beginAccess(v106, &v190, 0, 0);
  if (v101 != *(_QWORD *)(*(_QWORD *)v106 + 16))
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v107 = type metadata accessor for Logger(0);
    v108 = sub_100221DF8(v107, (uint64_t)qword_1007C37A0);
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.default.getter(v109);
    if (os_log_type_enabled(v109, v110))
    {
      v111 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v111 = 0;
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "Removed disconnected peripheral for which we have not yet gotten a disconnect delegate message", v111, 2u);
      swift_slowDealloc(v111, -1, -1);
    }

  }
  v112 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + v174);
  v113 = v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair;
  swift_beginAccess(v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair, v189, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v113 + 16)
    || (v114 = v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect,
        swift_beginAccess(v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect, &v181, 0, 0), *(_QWORD *)(*(_QWORD *)v114 + 16)))
  {
    if (qword_1007B41F0 != -1)
LABEL_63:
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v115 = type metadata accessor for Logger(0);
    sub_100221DF8(v115, (uint64_t)qword_1007C37A0);
    v116 = (char *)(id)isUniquelyReferenced_nonNull_native;
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.debug.getter();
    v119 = v118;
    v177 = v117;
    if (os_log_type_enabled(v117, v118))
    {
      v120 = swift_slowAlloc(32, -1);
      v175 = (os_log_t)swift_slowAlloc(96, -1);
      v194 = v175;
      *(_DWORD *)v120 = 136315650;
      v171 = v120 + 4;
      v121 = (const char **)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + v174)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
      swift_beginAccess(v121, &v187, 0, 0);
      v122 = *v121;
      v123 = sub_100221EDC(0, &qword_1007C4238, CBPeripheral_ptr);
      v124 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      swift_bridgeObjectRetain(v122);
      v125 = v176;
      v127 = Dictionary.description.getter(v126, v176, v123, v124);
      LODWORD(v173) = v119;
      v129 = v128;
      swift_bridgeObjectRelease(v122);
      v185 = sub_100228BD8(v127, (unint64_t)v129, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, &v186, v171);

      swift_bridgeObjectRelease(v129);
      *(_WORD *)(v120 + 12) = 2080;
      v130 = (const char **)(*(_QWORD *)(v172 + v174)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
      *(_QWORD *)&v131 = swift_beginAccess(v130, &v185, 0, 0).n128_u64[0];
      v132 = *v130;
      swift_bridgeObjectRetain(v132, v131);
      v133 = v125;
      v134 = v123;
      v136 = Dictionary.description.getter(v135, v133, v123, v124);
      v138 = v137;
      swift_bridgeObjectRelease(v132);
      v183 = sub_100228BD8(v136, (unint64_t)v138, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184, v120 + 14);

      swift_bridgeObjectRelease(v138);
      *(_WORD *)(v120 + 22) = 2080;
      v139 = (const char **)&v116[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo];
      *(_QWORD *)&v140 = swift_beginAccess(&v116[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo], &v183, 0, 0).n128_u64[0];
      v141 = *v139;
      swift_bridgeObjectRetain(v141, v140);
      v143 = Dictionary.description.getter(v142, v176, v134, v124);
      v145 = v144;
      swift_bridgeObjectRelease(v141);
      v182 = sub_100228BD8(v143, (unint64_t)v145, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, &v183, v120 + 24);

      swift_bridgeObjectRelease(v145);
      v146 = v177;
      _os_log_impl((void *)&_mh_execute_header, v177, (os_log_type_t)v173, "ensureAllUnpaired - In progress! needingUnpair: %s, needingDisconnect: %s, peripheralsIConnectedTo: %s", (uint8_t *)v120, 0x20u);
      v147 = v175;
      swift_arrayDestroy(v175, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v147, -1, -1);
      swift_slowDealloc(v120, -1, -1);

    }
    else
    {

    }
    v148 = sub_1004F3CD8();
    v149 = swift_allocError(&type metadata for SDRunState, v148, 0, 0);
    *v150 = 1;
    swift_willThrow(v149);
  }
  else
  {
    v151 = *(_QWORD *)(v112 + 16);
    v187 = 0xD000000000000057;
    v188 = 0x800000010061ECC0;
    v185 = 1266;
    swift_retain();
    v152._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v152._object;
    String.append(_:)(v152);
    v154 = swift_bridgeObjectRelease(object);
    v155 = (const char *)v188;
    v156 = String.hashValue.getter(v187, v188, v154);
    swift_bridgeObjectRelease(v155);
    swift_beginAccess(v151 + 16, &v187, 33, 0);
    LOBYTE(v155) = sub_10045DE64(&v185, v156);
    swift_endAccess(&v187);
    if ((v155 & 1) != 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v157 = type metadata accessor for Logger(0);
      v158 = sub_100221DF8(v157, (uint64_t)qword_1007C37A0);
      v159 = Logger.logObject.getter(v158);
      v160 = static os_log_type_t.default.getter(v159);
      if (os_log_type_enabled(v159, v160))
      {
        v161 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v161 = 0;
        _os_log_impl((void *)&_mh_execute_header, v159, v160, "ensureAllUnpaired completed", v161, 2u);
        swift_slowDealloc(v161, -1, -1);
      }
      swift_release(v151);

    }
    else
    {
      swift_release(v151);
    }
  }
}

void sub_1004DCDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  const char *object;
  __n128 v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  const char *v20;
  __n128 v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v39 = 0xD000000000000057;
  v40 = 0x800000010061ECC0;
  v41 = 1284;
  swift_retain();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v7._object;
  String.append(_:)(v7);
  v9 = swift_bridgeObjectRelease(object);
  v10 = (const char *)v40;
  v11 = String.hashValue.getter(v39, v40, v9);
  swift_bridgeObjectRelease(v10);
  swift_beginAccess(v6 + 16, &v39, 33, 0);
  LOBYTE(v10) = sub_10045DE64(&v41, v11);
  swift_endAccess(&v39);
  if ((v10 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C37A0);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "checkFindMyStatus called", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    swift_release(v6);

  }
  else
  {
    swift_release(v6);
  }
  v17 = *(_QWORD *)(v1 + v5);
  if ((*(_BYTE *)(v17 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) & 1) != 0)
    goto LABEL_9;
  if ((*(_BYTE *)(v17 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedCheckingFindMyStatus) & 1) != 0)
  {
LABEL_18:
    v35 = sub_1004F3CD8();
    v36 = swift_allocError(&type metadata for SDRunState, v35, 0, 0);
    *v37 = 1;
    swift_willThrow(v36);
    return;
  }
  sub_1004DD258();
  v30 = v29;
  if (*(_QWORD *)(v29 + 16))
  {
    *(_BYTE *)(*(_QWORD *)(v1 + v5)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedCheckingFindMyStatus) = 1;
    v31 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v4, 1, 1, v31);
    v32 = swift_allocObject(&unk_10072BE40, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v1);
    v33 = (_QWORD *)swift_allocObject(&unk_10072BFD0, 48, 7);
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v32;
    v33[5] = v30;
    v34 = sub_100252EC0((uint64_t)v4, (uint64_t)&unk_1007C4250, (uint64_t)v33);
    swift_release(v34);
    goto LABEL_18;
  }
  swift_bridgeObjectRelease((const char *)v29);
  *(_BYTE *)(*(_QWORD *)(v1 + v5)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) = 1;
  v17 = *(_QWORD *)(v1 + v5);
LABEL_9:
  v18 = *(_QWORD *)(v17 + 16);
  v39 = 0xD000000000000057;
  v40 = 0x800000010061ECC0;
  v41 = 1305;
  swift_retain();
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v20 = (const char *)v19._object;
  String.append(_:)(v19);
  v21 = swift_bridgeObjectRelease(v20);
  v22 = (const char *)v40;
  v23 = String.hashValue.getter(v39, v40, v21);
  swift_bridgeObjectRelease(v22);
  swift_beginAccess(v18 + 16, &v39, 33, 0);
  LOBYTE(v22) = sub_10045DE64(&v41, v23);
  swift_endAccess(&v39);
  if ((v22 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "checkFindMyStatus completed", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
    swift_release(v18);

  }
  else
  {
    swift_release(v18);
  }
}

void sub_1004DD258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  NSString v14;
  unsigned int v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central), "sharedPairingAgent"));
  if (!v4)
    goto LABEL_40;
  v5 = v4;
  sub_1004D0A8C();
  v7 = (uint64_t)v6;

  v42 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v19 = v7;
    else
      v19 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease((const char *)v7);
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      for (i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0)
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
        else
          v12 = *(id *)(v7 + 8 * i + 32);
        v13 = v12;
        v14 = String._bridgeToObjectiveC()();
        v15 = objc_msgSend(v13, "hasTag:", v14);

        if (v15)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v10 = *(_QWORD *)(v42 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
          v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v13);
          specialized ContiguousArray._endMutation()(v11);
        }
        else
        {

        }
      }
      *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)v7).n128_u64[0];
      v18 = v42;
      if (v42 < 0)
        goto LABEL_31;
      goto LABEL_20;
    }
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
  }
  *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)v7).n128_u64[0];
  v18 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_31;
LABEL_20:
  if ((v18 & 0x4000000000000000) != 0)
  {
LABEL_31:
    swift_bridgeObjectRetain((const char *)v18, v17);
    v20 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_release(v18);
    if (!v20)
      goto LABEL_32;
    goto LABEL_22;
  }
  v20 = *(_QWORD *)(v18 + 16);
  if (v20)
  {
LABEL_22:
    v42 = (uint64_t)_swiftEmptyArrayStorage;
    sub_100229C0C(0, v20 & ~(v20 >> 63), 0);
    if ((v20 & 0x8000000000000000) == 0)
    {
      v21 = 0;
      v22 = (const char *)v42;
      do
      {
        if ((v18 & 0xC000000000000001) != 0)
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v18);
        else
          v23 = *(id *)(v18 + 8 * v21 + 32);
        v24 = v23;
        v25 = objc_msgSend(v23, "identifier");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v42 = (uint64_t)v22;
        v27 = *((_QWORD *)v22 + 2);
        v26 = *((_QWORD *)v22 + 3);
        if (v27 >= v26 >> 1)
        {
          sub_100229C0C(v26 > 1, v27 + 1, 1);
          v22 = (const char *)v42;
        }
        ++v21;
        *((_QWORD *)v22 + 2) = v27 + 1;
        (*(void (**)(const char *, char *, uint64_t))(v1 + 32))(&v22[((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v27], v3, v40);
      }
      while (v20 != v21);
      swift_release(v18);
      goto LABEL_33;
    }
    goto LABEL_39;
  }
LABEL_32:
  swift_release(v18);
  v22 = (const char *)_swiftEmptyArrayStorage;
LABEL_33:
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v29 = type metadata accessor for Logger(0);
  sub_100221DF8(v29, (uint64_t)qword_1007C37A0);
  v30 = swift_bridgeObjectRetain_n(v22, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v42 = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain(v22);
    v36 = Array.description.getter(v35, v40);
    v38 = v37;
    swift_bridgeObjectRelease(v22);
    v41 = sub_100228BD8(v36, (unint64_t)v38, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v33 + 4);
    swift_bridgeObjectRelease_n(v22, 2);
    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Found paired Apple Pencil Pros: %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v22, 2);
  }
}

uint64_t sub_1004DD6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch(sub_1004DD6F8, 0, 0);
}

uint64_t sub_1004DD6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 56) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C425C);
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_1004DD7BC;
  return sub_1004DD840(*(_QWORD *)(v0 + 48), v5, v6);
}

uint64_t sub_1004DD7BC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_1004DD810, 0, 0);
}

uint64_t sub_1004DD810()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DD840(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 73) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_1004DD860, 0, 0);
}

uint64_t sub_1004DD860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  v0[5] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Checking if any paired Apple Pencil Pros are FindMy-paired...", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[2];

  v7 = swift_task_alloc(32);
  v0[6] = v7;
  *(_QWORD *)(v7 + 16) = v6;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[7] = v8;
  *v8 = v0;
  v8[1] = sub_1004DD9AC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 9, &type metadata for Bool, &type metadata for Bool, 0, 0, &unk_1007C4268, v7, &type metadata for Bool);
}

uint64_t sub_1004DD9AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1004DDA08, 0, 0);
}

uint64_t sub_1004DDA08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if ((*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1007C4274);
    *(_QWORD *)(v1 + 64) = v2;
    *v2 = v1;
    v2[1] = sub_1004DDAF4;
    return sub_1004DDEA4();
  }
  else
  {
    v4 = Logger.logObject.getter(a1);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No paired Apple Pencil Pros are FindMy-paired", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    sub_1004DDC70(0);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1004DDAF4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_BYTE *)(*(_QWORD *)v1 + 74) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004DDB50, 0, 0);
}

uint64_t sub_1004DDB50(uint64_t a1)
{
  uint64_t v1;
  int v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint8_t *v6;
  uint8_t *v7;

  v2 = *(unsigned __int8 *)(v1 + 74);
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  if (v2 == 1)
  {
    if (v5)
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Pencil being paired is already FindMy-paired to this account, assuming reattach and skipping alert", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    sub_1004DDC70(0);
  }
  else
  {
    if (v5)
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "At least one paired Apple Pencil Pro is FindMy-paired, showing warning alert", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    sub_1004DE788();
  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004DDC70(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  v10 = swift_allocObject(&unk_10072BE40, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  v11 = swift_allocObject(&unk_10072C0B0, 25, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = a1;
  aBlock[4] = sub_1004F4028;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C0C8;
  v12 = _Block_copy(aBlock);
  v13 = swift_retain();
  static DispatchQoS.unspecified.getter(v13);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v23;
  swift_release(v10);
  return swift_release(v17);
}

uint64_t sub_1004DDEA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[20] = v0;
  v2 = type metadata accessor for UUID(0);
  v1[21] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[22] = v3;
  v1[23] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004DDF04, 0, 0);
}

uint64_t sub_1004DDF04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  Class isa;
  void (*v30)(uint64_t, uint64_t);
  id v31;
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  os_log_type_t type;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  *(_QWORD *)(v0 + 192) = v2;
  if (v2
    && (v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType,
        (*(_BYTE *)(v3 + 8) & 1) == 0)
    && *(_QWORD *)v3 == 4)
  {
    v4 = objc_allocWithZone((Class)SPAccessoryDiscoveryAndPairingSession);
    v5 = v2;
    v6 = objc_msgSend(v4, "initWithPreviousState:", 0);
    *(_QWORD *)(v0 + 200) = v6;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v7 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 208) = sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
    v8 = v5;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    v11 = &selRef_handleStreamResponse_;
    if (os_log_type_enabled(v9, v10))
    {
      type = v10;
      v12 = *(_QWORD *)(v0 + 184);
      v35 = *(_QWORD *)(v0 + 176);
      v13 = *(_QWORD *)(v0 + 168);
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v39 = v37;
      *(_DWORD *)v14 = 136315138;
      v38 = v6;
      v15 = objc_msgSend(v8, "identifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v15);

      v16 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v17 = dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
      v19 = v18;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v12, v13);
      v20 = v17;
      v6 = v38;
      *(_QWORD *)(v0 + 152) = sub_100228BD8(v20, (unint64_t)v19, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v14 + 4);
      swift_bridgeObjectRelease(v19);

      _os_log_impl((void *)&_mh_execute_header, v9, type, "Checking if current Pencil (%s) is FindMy-paired to this account...", v14, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      v21 = v14;
      v11 = &selRef_handleStreamResponse_;
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {

    }
    v23 = v0 + 16;
    v25 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = (void *)objc_opt_self(SPAccessoryDiscoveryPairingStatusRequest);
    v28 = objc_msgSend(v8, v11[141]);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28);

    isa = UUID._bridgeToObjectiveC()().super.isa;
    v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(_QWORD *)(v0 + 216) = v30;
    v30(v24, v26);
    v31 = objc_msgSend(v27, "checkSerialNumberWithIdentifier:", isa);
    *(_QWORD *)(v0 + 224) = v31;

    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1004DE2D4;
    v33 = swift_continuation_init(v0 + 16, 1, v32);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v34 = (_QWORD *)(v0 + 80);
    v34[1] = 0x40000000;
    v34[2] = sub_1004DFBB8;
    v34[3] = &unk_10072C088;
    v34[4] = v33;
    objc_msgSend(v6, "pairingStatusWithRequest:completion:", v31, v34);
    return swift_continuation_await(v23);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1004DE2D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 232) = v1;
  if (v1)
    v2 = sub_1004DE5D8;
  else
    v2 = sub_1004DE334;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004DE334()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  id v17;
  BOOL v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 120);
  v2 = *(id *)(v0 + 192);
  v3 = v1;
  v4 = v2;
  v5 = v3;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(void **)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = swift_slowAlloc(22, -1);
    v28 = swift_slowAlloc(64, -1);
    v29 = v28;
    *(_DWORD *)v11 = 136315394;
    v12 = objc_msgSend(v9, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v12);

    v13 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
    v16 = v15;
    v27(v8, v10);
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v14, (unint64_t)v16, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v11 + 4);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v11 + 12) = 2080;
    v17 = objc_msgSend(v5, "pairingStatus");
    v18 = v17 == (id)2;
    if (v17 == (id)2)
      v19 = 7562617;
    else
      v19 = 28526;
    if (v18)
      v20 = (const char *)0xE300000000000000;
    else
      v20 = (const char *)0xE200000000000000;
    *(_QWORD *)(v0 + 144) = sub_100228BD8(v19, (unint64_t)v20, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v11 + 14);
    swift_bridgeObjectRelease(v20);

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Got back from call to pairingStatus(with:) for identifier %s with result (is FindMy-paired to this account) %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {
    v21 = *(void **)(v0 + 192);

  }
  v22 = *(void **)(v0 + 224);
  v24 = *(void **)(v0 + 192);
  v23 = *(void **)(v0 + 200);
  v25 = objc_msgSend(v5, "pairingStatus", v27);

  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v25 == (id)2);
}

uint64_t sub_1004DE5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(void **)(v1 + 224);
  v2 = *(_QWORD *)(v1 + 232);
  v4 = *(void **)(v1 + 200);
  swift_willThrow(a1);

  swift_errorRetain(v2);
  v5 = swift_errorRetain(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v1 + 232);
    v9 = *(NSObject **)(v1 + 192);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v8);
    v12 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v1 + 128) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 128, v1 + 136, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get Pencil status with error: %@, falling back to unpaired", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    v6 = v9;
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 232);

    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }
  swift_errorRelease(v8);

  swift_task_dealloc(*(_QWORD *)(v1 + 184));
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

void sub_1004DE788()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  id v16;
  const char *v17;
  NSString v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  double v29;
  NSString v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  double v39;
  NSString v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  id v49;
  const char *v50;
  NSString v51;
  double v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  _QWORD aBlock[5];
  uint64_t v86;

  v1 = (const char *)0xEC0000006C69636ELL;
  v2 = 0x655020656C707041;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v79 = v6;
  v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v70 - v7;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v77 = v12;
  v78 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v84 = (char *)&v70 - v13;
  v14 = String._bridgeToObjectiveC()();
  v16 = (id)SFLocalizedStringForKey(v14, v15);

  if (v16)
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v1 = v17;

  }
  v18 = String._bridgeToObjectiveC()();
  v20 = (id)SFLocalizedStringForKey(v18, v19);

  if (v20)
  {
    v81 = v10;
    v82 = v9;
    v83 = v8;
    v75 = v4;
    v76 = v3;
    v21 = v0;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    v25 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v26 = swift_allocObject(v25, 72, 7);
    v72 = xmmword_1005CD2A0;
    *(_OWORD *)(v26 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v26 + 56) = &type metadata for String;
    v27 = sub_100299AB0();
    *(_QWORD *)(v26 + 64) = v27;
    *(_QWORD *)(v26 + 32) = v2;
    *(_QWORD *)(v26 + 40) = v1;
    swift_bridgeObjectRetain(v1);
    v73 = static String.localizedStringWithFormat(_:_:)(v22, v24, v26);
    v74 = v28;
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v24).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v26, v29);
    v30 = String._bridgeToObjectiveC()();
    v32 = (id)SFLocalizedStringForKey(v30, v31);

    if (v32)
    {
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = swift_allocObject(v25, 72, 7);
      *(_OWORD *)(v36 + 16) = v72;
      *(_QWORD *)(v36 + 56) = &type metadata for String;
      *(_QWORD *)(v36 + 64) = v27;
      *(_QWORD *)(v36 + 32) = v2;
      *(_QWORD *)(v36 + 40) = v1;
      static String.localizedStringWithFormat(_:_:)(v33, v35, v36);
      v38 = v37;
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v35).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v36, v39);
      v40 = String._bridgeToObjectiveC()();
      v42 = (id)SFLocalizedStringForKey(v40, v41);

      *(_QWORD *)&v72 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
      v43 = v21;
      v44 = *(_QWORD *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
      v71 = v21;
      v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 16);
      v46 = v84;
      v47 = v45(v84, v44 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid, v82);
      v48 = v83;
      static Date.now.getter(v47);
      v49 = objc_msgSend(objc_allocWithZone((Class)SFUserAlert), "init");
      v50 = v74;
      v51 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v50).n128_u64[0];
      v70 = v49;
      objc_msgSend(v49, "setTitle:", v51, v52);

      v53 = String._bridgeToObjectiveC()();
      objc_msgSend(v49, "setDefaultButtonTitle:", v53, swift_bridgeObjectRelease(v38).n128_f64[0]);

      objc_msgSend(v49, "setAlternateButtonTitle:", v42);
      v54 = swift_allocObject(&unk_10072BE40, 24, 7);
      swift_unknownObjectWeakInit(v54 + 16, v43);
      v56 = v75;
      v55 = v76;
      v57 = v80;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v80, v48, v76);
      v58 = v78;
      v59 = v82;
      v45(v78, (uint64_t)v46, v82);
      v60 = *(unsigned __int8 *)(v56 + 80);
      v61 = (v60 + 24) & ~v60;
      v62 = v81;
      v63 = *(unsigned __int8 *)(v81 + 80);
      v64 = (v79 + v63 + v61) & ~v63;
      v65 = swift_allocObject(&unk_10072BFF8, v64 + v77, v60 | v63 | 7);
      *(_QWORD *)(v65 + 16) = v54;
      (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v65 + v61, v57, v55);
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v65 + v64, v58, v59);
      aBlock[4] = sub_1004F3F18;
      v86 = v65;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100366D0C;
      aBlock[3] = &unk_10072C010;
      v66 = _Block_copy(aBlock);
      swift_release(v86);
      v67 = v70;
      objc_msgSend(v70, "setResponseHandler:", v66);
      _Block_release(v66);
      objc_msgSend(v67, "present");
      (*(void (**)(char *, uint64_t))(v56 + 8))(v83, v55);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v84, v59);
      v68 = *(_QWORD *)(v71 + v72);
      v69 = *(void **)(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
      *(_QWORD *)(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert) = v67;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1004DED4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[13] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[14] = v6;
  v3[15] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B68A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v7);
  v3[17] = swift_task_alloc(v7);
  v8 = sub_100008384(&qword_1007C4290);
  v3[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[19] = v9;
  v3[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7280);
  v3[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004DEE38, 0, 0);
}

uint64_t sub_1004DEE38()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  __n128 v38;
  _QWORD *v39;
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v44)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, const char *, uint64_t, __n128);
  id v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = objc_msgSend(objc_allocWithZone((Class)SPOwnerInterface), "init");
  v51 = objc_msgSend(v2, "ownerSession");
  *(_QWORD *)(v0 + 176) = v51;

  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(const char **)(v0 + 88);
    v6 = *(unsigned __int8 *)(v4 + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = &v5[v7];
    v48 = *(_QWORD *)(v4 + 72);
    v49 = v7;
    v50 = *(void (**)(uint64_t, const char *, uint64_t, __n128))(v4 + 16);
    v46 = (*(_QWORD *)(v0 + 112) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = v6 | 7;
    v9 = swift_bridgeObjectRetain(v5);
    v45 = v4;
    while (1)
    {
      v12 = *(_QWORD *)(v0 + 168);
      v13 = *(_QWORD *)(v0 + 96);
      v50(v12, v8, v13, v9);
      v14 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
      v14(v12, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v12, 1, v13) == 1)
        goto LABEL_14;
      v44 = (void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v14;
      v52 = v8;
      v15 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 136);
      v53 = v3;
      v54 = *(_QWORD *)(v0 + 128);
      v17 = *(_QWORD *)(v0 + 120);
      v18 = *(_QWORD *)(v0 + 96);
      v19 = type metadata accessor for TaskPriority(0);
      v20 = *(_QWORD *)(v19 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v16, 1, 1, v19);
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      v21(v17, v15, v18);
      v22 = swift_allocObject(&unk_10072C100, v46 + 8, v47);
      *(_QWORD *)(v22 + 16) = 0;
      v23 = (uint64_t *)(v22 + 16);
      *(_QWORD *)(v22 + 24) = 0;
      v21(v22 + v49, v17, v18);
      *(_QWORD *)(v22 + v46) = v51;
      sub_100221F28(v16, v54, &qword_1007B68A0);
      LODWORD(v16) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v54, 1, v19);
      v24 = swift_unknownObjectRetain(v51);
      v25 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v16 == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 128), &qword_1007B68A0);
        v26 = 0;
        v27 = *v23;
        if (!*v23)
          goto LABEL_9;
      }
      else
      {
        v33 = TaskPriority.rawValue.getter(v24);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v19);
        v26 = v33;
        v27 = *v23;
        if (!*v23)
        {
LABEL_9:
          v30 = 0;
          v32 = 0;
          goto LABEL_10;
        }
      }
      v28 = *(_QWORD *)(v22 + 24);
      ObjectType = swift_getObjectType(v27);
      swift_unknownObjectRetain(v27);
      v30 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v28);
      v32 = v31;
      swift_unknownObjectRelease(v27);
LABEL_10:
      v34 = **(_QWORD **)(v0 + 80);
      v35 = swift_allocObject(&unk_10072C128, 32, 7);
      *(_QWORD *)(v35 + 16) = &unk_1007C4308;
      *(_QWORD *)(v35 + 24) = v22;
      v36 = v32 | v30;
      if (v32 | v30)
      {
        v36 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v30;
        *(_QWORD *)(v0 + 40) = v32;
      }
      v4 = v45;
      v10 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v36;
      *(_QWORD *)(v0 + 64) = v34;
      v11 = swift_task_create(v26 | 0x3100, v0 + 48, &type metadata for Bool, &unk_1007C4318, v35);
      swift_release(v11);
      sub_10000D0F0(v10, &qword_1007B68A0);
      v8 = &v52[v48];
      v3 = v53 - 1;
      if (v53 == 1)
      {
        v44(*(_QWORD *)(v0 + 168), 1, 1, *(_QWORD *)(v0 + 96), v9);
        goto LABEL_14;
      }
    }
  }
  v37 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 104) + 56);
  v38 = swift_bridgeObjectRetain((const char *)*(_QWORD *)(v0 + 88));
  v37(*(_QWORD *)(v0 + 168), 1, 1, *(_QWORD *)(v0 + 96), v38);
LABEL_14:
  v39 = *(_QWORD **)(v0 + 80);
  v40 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 88));
  TaskGroup.makeAsyncIterator()(*v39, &type metadata for Bool, v40);
  v41 = sub_10026E2FC(&qword_1007C4298, &qword_1007C4290, (uint64_t)&protocol conformance descriptor for TaskGroup<A>.Iterator);
  *(_QWORD *)(v0 + 184) = v41;
  v42 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 192) = v42;
  *v42 = v0;
  v42[1] = sub_1004DF220;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 208, *(_QWORD *)(v0 + 144), v41);
}

uint64_t sub_1004DF220()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 192));
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 152) + 8))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 144));
    v3 = LongHash.storage.getter;
  }
  else
  {
    *(_BYTE *)(v2 + 209) = 0;
    v3 = sub_1004DF294;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004DF294()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v11;

  v1 = *(unsigned __int8 *)(v0 + 208);
  *(_BYTE *)(v0 + 210) = v1;
  if (v1 == 2)
  {
    v2 = *(_BYTE *)(v0 + 209);
    v3 = *(_QWORD *)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_BYTE **)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v5, *(_QWORD *)(v0 + 144));
    *v9 = v2;
    swift_unknownObjectRelease(v4);
    swift_task_dealloc(v3);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 200) = v11;
    *v11 = v0;
    v11[1] = sub_1004DF394;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 208, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 184));
  }
}

uint64_t sub_1004DF394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 200));
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 152) + 8))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 144));
    v3 = LongHash.storage.getter;
  }
  else
  {
    *(_BYTE *)(v2 + 209) = (*(_BYTE *)(v2 + 209) | *(_BYTE *)(v2 + 210)) & 1;
    v3 = sub_1004DF294;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004DF418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[20] = a4;
  v5[21] = a5;
  v5[19] = a1;
  v6 = type metadata accessor for UUID(0);
  v5[22] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[23] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[24] = swift_task_alloc(v8);
  v5[25] = swift_task_alloc(v8);
  return swift_task_switch(sub_1004DF48C, 0, 0);
}

uint64_t sub_1004DF48C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  __n128 v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  _QWORD *v22;
  void *v23;
  Class isa;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = v0[25];
  v2 = v0[22];
  v3 = v0[23];
  v4 = v0[20];
  v5 = type metadata accessor for Logger(0);
  v0[26] = sub_100221DF8(v5, (uint64_t)qword_1007C37A0);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[27] = v6;
  v7 = v6(v1, v4, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[25];
  v12 = v0[22];
  v13 = v0[23];
  if (v10)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v29 = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v12, v16);
    v19 = (const char *)v18;
    v0[18] = sub_100228BD8(v17, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v0 + 19, v14 + 4);
    v20 = swift_bridgeObjectRelease(v19);
    v21 = *(void (**)(uint64_t, uint64_t, __n128))(v13 + 8);
    v21(v11, v12, v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding check-status task for identifier %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v21 = *(void (**)(uint64_t, uint64_t, __n128))(v13 + 8);
    ((void (*)(_QWORD, _QWORD))v21)(v0[25], v0[22]);
  }

  v22 = v0 + 2;
  v0[28] = v21;
  v23 = (void *)v0[21];
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v0[29] = isa;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1004DF704;
  v26 = swift_continuation_init(v0 + 2, 1, v25);
  v0[10] = _NSConcreteStackBlock;
  v27 = v0 + 10;
  v27[1] = 0x40000000;
  v27[2] = sub_1002CC354;
  v27[3] = &unk_10072C140;
  v27[4] = v26;
  objc_msgSend(v23, "peripheralConnectionMaterialForAccessoryIdentifier:completion:", isa, v27);
  return swift_continuation_await(v22);
}

uint64_t sub_1004DF704()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 240) = v1;
  if (v1)
    v2 = sub_1004DF9B0;
  else
    v2 = sub_1004DF764;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004DF764()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  __n128 v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 120);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 216))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 176));
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (!os_log_type_enabled(v3, v4))
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));

    if (!v2)
      goto LABEL_12;
LABEL_11:

    goto LABEL_12;
  }
  v18 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = swift_slowAlloc(22, -1);
  v19 = swift_slowAlloc(64, -1);
  v20 = v19;
  *(_DWORD *)v7 = 136315394;
  v8 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v9 = dispatch thunk of CustomStringConvertible.description.getter(v6, v8);
  v11 = (const char *)v10;
  *(_QWORD *)(v0 + 128) = sub_100228BD8(v9, v10, &v20);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v7 + 4);
  v12 = swift_bridgeObjectRelease(v11);
  v18(v5, v6, v12);
  *(_WORD *)(v7 + 12) = 2080;
  if (v2)
    v13 = 7562617;
  else
    v13 = 28526;
  if (v2)
    v14 = (const char *)0xE300000000000000;
  else
    v14 = (const char *)0xE200000000000000;
  *(_QWORD *)(v0 + 136) = sub_100228BD8(v13, (unint64_t)v14, &v20);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v7 + 14);
  swift_bridgeObjectRelease(v14);

  _os_log_impl((void *)&_mh_execute_header, v3, v4, "Got back from call to peripheralConnectionMaterial(forAccessoryIdentifier:) for identifier %s with result (is FindMy-paired) %s", (uint8_t *)v7, 0x16u);
  swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v19, -1, -1);
  swift_slowDealloc(v7, -1, -1);

  if (v2)
    goto LABEL_11;
LABEL_12:
  v16 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  **(_BYTE **)(v0 + 152) = v2 != 0;
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DF9B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(uint64_t, uint64_t, __n128);
  uint64_t v20[2];

  v2 = *(void **)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 240);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 216))(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 176));
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v1 + 224);
    v7 = *(_QWORD *)(v1 + 192);
    v8 = *(_QWORD *)(v1 + 176);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v20[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v8, v11);
    v14 = (const char *)v13;
    *(_QWORD *)(v1 + 128) = sub_100228BD8(v12, v13, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 128, v1 + 136, v9 + 4);
    v15 = swift_bridgeObjectRelease(v14);
    v19(v7, v8, v15);
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v1 + 136) = sub_100228BD8(28526, 0xE200000000000000, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v9 + 14);
    swift_bridgeObjectRelease((const char *)0xE200000000000000);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Got back from call to peripheralConnectionMaterial(forAccessoryIdentifier:) for identifier %s with result (is FindMy-paired) %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v1 + 224))(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 176));
  }

  v17 = *(_QWORD *)(v1 + 192);
  v16 = *(_QWORD *)(v1 + 200);
  **(_BYTE **)(v1 + 152) = 0;
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004DFBB8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v10 = a2;
    return swift_continuation_throwingResume(v3);
  }
}

void sub_1004DFC3C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE v30[24];

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
    v16 = *(void **)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
    *(_QWORD *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert) = 0;

    if (a1 == 1)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100221DF8(v17, (uint64_t)qword_1007C37A0);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "User chose to continue pairing", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      static Date.now.getter(v22);
      v23 = Date.timeIntervalSince(_:)(a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_1004DDC70(v23 > 18.0);
    }
    else
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v24 = type metadata accessor for Logger(0);
      v25 = sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "User chose to stop pairing", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }

      sub_1004DFEB4(a4);
    }

  }
}

uint64_t sub_1004DFEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  v14 = swift_allocObject(&unk_10072BE40, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_10072C048, v16 + v12, v15 | 7);
  *(_QWORD *)(v17 + 16) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v13, v10);
  aBlock[4] = sub_1004F3FF8;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C060;
  v18 = _Block_copy(aBlock);
  v19 = swift_retain();
  static DispatchQoS.unspecified.getter(v19);
  v29 = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100008384((uint64_t *)&unk_1007B6410);
  v22 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v21, v22, v4, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  v23 = v31;
  swift_release(v14);
  return swift_release(v23);
}

void sub_1004E0150(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    *(_BYTE *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) = 1;
    if ((a2 & 1) != 0)
      sub_1004D7370(1);
    sub_1004C99E8();

  }
}

uint64_t sub_1004E01CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v4 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1, v7);
  if (result)
  {
    v9 = (void *)result;
    if (*(_QWORD *)(*(_QWORD *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
      objc_msgSend(*(id *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central), "cancelPeripheralConnection:");
    sub_1004CFEB4(0);
    v10 = type metadata accessor for UUID(0);
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a2, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    sub_1004CF030((unint64_t)v6, 0);

    return sub_10000D0F0((uint64_t)v6, &qword_1007B7280);
  }
  return result;
}

uint64_t sub_1004E02FC()
{
  return 0x72655065726F7473;
}

unint64_t sub_1004E0320()
{
  return 0xD000000000000041;
}

void sub_1004E033C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *Strong;
  id v18;
  void *v19;
  id v20;
  NSObject *oslog;
  _QWORD aBlock[6];

  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v3 = v1;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C37A0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v9 = 67109120;
      LODWORD(aBlock[0]) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v9 + 4);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "showPairConsentPrompt. inViewService: %{BOOL}d", v9, 8u);
      swift_slowDealloc(v9, -1, -1);
    }

    if ((a1 & 1) != 0)
    {
      v11 = *(_QWORD *)(v3 + v2);
      v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection;
    }
    else
    {
      v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
      v11 = v3;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v11 + *v12, v10);
    if (Strong)
    {
      v18 = Strong;
      sub_1004C58F8(v18, 1);
      aBlock[4] = sub_1004E3DD4;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002377A0;
      aBlock[3] = &unk_10072C158;
      v19 = _Block_copy(aBlock);
      v20 = objc_msgSend(v18, "remoteObjectProxyWithErrorHandler:", v19);
      _Block_release(v19);
      objc_msgSend((id)swift_unknownObjectRetain(v20), "showPairConsentPrompt");
      swift_unknownObjectRelease_n(v20, 2);

    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "ignore showPairConsentPrompt, UI updates disabled for current session state", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
}

void sub_1004E060C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;
  _QWORD aBlock[6];

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    v2 = v0;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "showUnlockPrompt", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    v9 = *(_QWORD *)(v2 + v1);
    if (*(_BYTE *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) == 1)
    {
      *(_BYTE *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) = 0;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v8);
      if (Strong)
      {
        v11 = Strong;
        sub_1004C58F8(Strong, 1);
        aBlock[4] = sub_1004E3DC8;
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1002377A0;
        aBlock[3] = &unk_10072C1A8;
        v12 = _Block_copy(aBlock);
        v13 = objc_msgSend(v11, "remoteObjectProxyWithErrorHandler:", v12);
        _Block_release(v12);
        objc_msgSend(v13, "showUnlockPrompt");

        swift_unknownObjectRelease(v13);
      }
    }
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
    oslog = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "ignore showUnlockPrompt, UI updates disabled for current session state", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

void sub_1004E0890(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in updateStateRemotely. Error: %s");
}

unint64_t sub_1004E089C(uint64_t a1)
{
  unint64_t result;
  Swift::String v3;
  void *object;
  Swift::String v5;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 842216258;
      break;
    case 2:
      result = 842150466;
      break;
    case 3:
      result = 842544194;
      break;
    case 4:
      result = 842216770;
      break;
    default:
      _StringGuts.grow(_:)(46);
      swift_bridgeObjectRelease(0xE000000000000000);
      v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
      object = v3._object;
      String.append(_:)(v3);
      swift_bridgeObjectRelease(object);
      v5._countAndFlagsBits = 125;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      result = 0xD00000000000002BLL;
      break;
  }
  return result;
}

void sub_1004E09B4(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showPairingStarted. Error: %s");
}

void sub_1004E09C0(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showPairingSuccess. Error: %s");
}

void sub_1004E09CC(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showSubsequentPairSuccess. Error: %s");
}

void sub_1004E09D8(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showChargingStatus. Error: %s");
}

void sub_1004E09E4(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in dismissChargingStatus. Error: %s");
}

uint64_t sub_1004E09F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[7] = v0;
  v2 = type metadata accessor for ContinuousClock.Instant(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v4);
  v1[11] = swift_task_alloc(v4);
  v5 = type metadata accessor for ContinuousClock(0);
  v1[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[13] = v6;
  v1[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004E0A88, 0, 0);
}

uint64_t sub_1004E0A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _QWORD *v40;

  if (BKSHIDServicesIsSmartCoverClosed())
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_30;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "Not showing Pencil UI because cover is closed";
    goto LABEL_29;
  }
  v7 = *(_QWORD *)(v0 + 56);
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted) & 1) != 0)
  {
    v9 = 1;
    v10 = 1;
  }
  else
  {
    v10 = sub_1004C60F0();
    v9 = *(_BYTE *)(v7 + v8);
  }
  *(_BYTE *)(v7 + v8) = v10 & 1;
  sub_1004C5F9C(v9);
  if (*(_BYTE *)(v7 + v8) != 1)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100221DF8(v23, (uint64_t)qword_1007C37A0);
    v3 = Logger.logObject.getter(v24);
    v4 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_30;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "Not showing Pencil UI because SpringBoard hasn't started";
    goto LABEL_29;
  }
  v11 = *(_QWORD *)(v0 + 56);
  v12 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  if ((objc_msgSend(*(id *)(v11 + v12), "screenOn") & 1) != 0)
  {
LABEL_19:
    if ((objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)), "screenOn") & 1) != 0)
    {
      v22 = 1;
LABEL_31:
      v28 = *(_QWORD *)(v0 + 80);
      v27 = *(_QWORD *)(v0 + 88);
      swift_task_dealloc(*(_QWORD *)(v0 + 112));
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
    }
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
    v3 = Logger.logObject.getter(v26);
    v4 = static os_log_type_t.error.getter(v3);
    if (!os_log_type_enabled(v3, v4))
    {
LABEL_30:

      v22 = 0;
      goto LABEL_31;
    }
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "Not showing Pencil UI because screen isn't on";
LABEL_29:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc(v5, -1, -1);
    goto LABEL_30;
  }
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100221DF8(v13, (uint64_t)qword_1007C37A0);
  *(_QWORD *)(v0 + 128) = v14;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Turning on screen for showing Pencil UI...", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  SBSUndimScreen();
  v18 = objc_msgSend(*(id *)(v11 + v12), "screenOn");
  if ((v18 & 1) != 0)
  {
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Turned on screen for showing Pencil UI", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    goto LABEL_19;
  }
  v30 = *(_QWORD *)(v0 + 96);
  v32 = *(_QWORD *)(v0 + 72);
  v31 = *(_QWORD *)(v0 + 80);
  v33 = *(_QWORD *)(v0 + 64);
  v34 = static Duration.seconds(_:)(0.01);
  v36 = v35;
  ContinuousClock.init()(v34);
  *(_QWORD *)(v0 + 40) = v34;
  *(_QWORD *)(v0 + 48) = v36;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  v37 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v30, v37);
  v38 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 40, v33, v38);
  v39 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  *(_QWORD *)(v0 + 136) = v39;
  v39(v31, v33);
  v40 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  *(_QWORD *)(v0 + 144) = v40;
  *v40 = v0;
  v40[1] = sub_1004E0F98;
  return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v0 + 88), v0 + 16, *(_QWORD *)(v0 + 96), v37);
}

uint64_t sub_1004E0F98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
  {
    v7 = sub_1004E1308;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    v7 = sub_1004E1030;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1004E1030()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD *v24;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)), "screenOn");
  if ((v1 & 1) != 0)
  {
    v2 = Logger.logObject.getter(v1);
    v3 = static os_log_type_t.default.getter(v2);
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Turned on screen for showing Pencil UI", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }

    v5 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)), "screenOn");
    if ((v5 & 1) == 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.error.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Not showing Pencil UI because screen isn't on", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

    }
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(id))(v0 + 8))(v5);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 64);
    v18 = static Duration.seconds(_:)(0.01);
    v20 = v19;
    ContinuousClock.init()(v18);
    *(_QWORD *)(v0 + 40) = v18;
    *(_QWORD *)(v0 + 48) = v20;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    v21 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v14, v21);
    v22 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 40, v17, v22);
    v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    *(_QWORD *)(v0 + 136) = v23;
    v23(v15, v17);
    v24 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 144) = v24;
    *v24 = v0;
    v24[1] = sub_1004E0F98;
    return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v0 + 88), v0 + 16, *(_QWORD *)(v0 + 96), v21);
  }
}

uint64_t sub_1004E1308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  swift_errorRelease(*(_QWORD *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)), "screenOn");
  if ((v4 & 1) != 0)
  {
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Turned on screen for showing Pencil UI", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    v8 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)), "screenOn");
    if ((v8 & 1) == 0)
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.error.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Not showing Pencil UI because screen isn't on", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

    }
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(id))(v0 + 8))(v8);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 64);
    v20 = static Duration.seconds(_:)(0.01);
    v22 = v21;
    ContinuousClock.init()(v20);
    *(_QWORD *)(v0 + 40) = v20;
    *(_QWORD *)(v0 + 48) = v22;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    v23 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v17, v23);
    v24 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 40, v19, v24);
    v25 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    *(_QWORD *)(v0 + 136) = v25;
    v25(v18, v19);
    v26 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 144) = v26;
    *v26 = v0;
    v26[1] = sub_1004E0F98;
    return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v0 + 88), v0 + 16, *(_QWORD *)(v0 + 96), v23);
  }
}

uint64_t sub_1004E1600()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[13] = v0;
  v2 = type metadata accessor for ContinuousClock.Instant(0);
  v1[14] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[15] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v4);
  v1[17] = swift_task_alloc(v4);
  v5 = type metadata accessor for ContinuousClock(0);
  v1[18] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[19] = v6;
  v1[20] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004E1698, 0, 0);
}

uint64_t sub_1004E1698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  _QWORD *v41;

  v3 = *(_QWORD *)(v2 + 104);
  v4 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
  *(_QWORD *)(v2 + 168) = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
  v5 = v3 + v4;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + v4, a2);

  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    *(_QWORD *)(v2 + 176) = v9;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Connecting to UI agent for showing Pencil UI...", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    if (qword_1007B3FB0 != -1)
      swift_once(&qword_1007B3FB0, sub_10037C2E8);
    sub_10037DF34();
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v5, v13);

    if (!v14)
    {
      v31 = *(_QWORD *)(v2 + 144);
      v33 = *(_QWORD *)(v2 + 120);
      v32 = *(_QWORD *)(v2 + 128);
      v34 = *(_QWORD *)(v2 + 112);
      v35 = static Duration.seconds(_:)(0.01);
      v37 = v36;
      ContinuousClock.init()(v35);
      *(_QWORD *)(v2 + 88) = v35;
      *(_QWORD *)(v2 + 96) = v37;
      *(_QWORD *)(v2 + 72) = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_BYTE *)(v2 + 80) = 1;
      v38 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
      dispatch thunk of Clock.now.getter(v31, v38);
      v39 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
      dispatch thunk of InstantProtocol.advanced(by:)(v2 + 88, v34, v39);
      v40 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      *(_QWORD *)(v2 + 184) = v40;
      v40(v32, v34);
      v41 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
      *(_QWORD *)(v2 + 192) = v41;
      *v41 = v2;
      v41[1] = sub_1004E1AEC;
      return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v2 + 136), v2 + 64, *(_QWORD *)(v2 + 144), v38);
    }
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Connected to UI agent for showing Pencil UI", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  v19 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 104) + *(_QWORD *)(v2 + 168), v7);
  if (v19)
  {
    v20 = (void *)v19;
    *(_QWORD *)(v2 + 48) = sub_1004E235C;
    *(_QWORD *)(v2 + 56) = 0;
    *(_QWORD *)(v2 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v2 + 24) = 1107296256;
    *(_QWORD *)(v2 + 32) = sub_1002377A0;
    *(_QWORD *)(v2 + 40) = &unk_10072C450;
    v21 = _Block_copy((const void *)(v2 + 16));
    v22 = objc_msgSend(v20, "remoteObjectProxyWithErrorHandler:", v21);
    _Block_release(v21);
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100221DF8(v23, (uint64_t)qword_1007C37A0);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Not showing Pencil UI because UI agent is not connected", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    v20 = 0;
    v22 = 0;
  }
  v29 = *(_QWORD *)(v2 + 128);
  v28 = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(*(_QWORD *)(v2 + 160));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void *, id))(v2 + 8))(v20, v22);
}

uint64_t sub_1004E1AEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
  {
    v7 = sub_1004E1ED4;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[19] + 8))(v2[20], v2[18]);
    v7 = sub_1004E1B84;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1004E1B84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2[13] + v2[21], a2);

  if (Strong)
  {
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Connected to UI agent for showing Pencil UI", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    v9 = swift_unknownObjectWeakLoadStrong(v2[13] + v2[21], v8);
    if (v9)
    {
      v10 = (void *)v9;
      v2[6] = sub_1004E235C;
      v2[7] = 0;
      v2[2] = _NSConcreteStackBlock;
      v2[3] = 1107296256;
      v2[4] = sub_1002377A0;
      v2[5] = &unk_10072C450;
      v11 = _Block_copy(v2 + 2);
      v12 = objc_msgSend(v10, "remoteObjectProxyWithErrorHandler:", v11);
      _Block_release(v11);
    }
    else
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.error.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Not showing Pencil UI because UI agent is not connected", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      v10 = 0;
      v12 = 0;
    }
    v31 = v2[16];
    v30 = v2[17];
    swift_task_dealloc(v2[20]);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return ((uint64_t (*)(void *, id))v2[1])(v10, v12);
  }
  else
  {
    v13 = v2[18];
    v15 = v2[15];
    v14 = v2[16];
    v16 = v2[14];
    v17 = static Duration.seconds(_:)(0.01);
    v19 = v18;
    ContinuousClock.init()(v17);
    v2[11] = v17;
    v2[12] = v19;
    v2[9] = 0;
    v2[8] = 0;
    *((_BYTE *)v2 + 80) = 1;
    v20 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v13, v20);
    v21 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v2 + 11, v16, v21);
    v22 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v2[23] = v22;
    v22(v14, v16);
    v23 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    v2[24] = v23;
    *v23 = v2;
    v23[1] = sub_1004E1AEC;
    return dispatch thunk of Clock.sleep(until:tolerance:)(v2[17], v2 + 8, v2[18], v20);
  }
}

uint64_t sub_1004E1ED4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[18];
  swift_errorRelease(v0[25]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0[13] + v0[21], v4);

  if (Strong)
  {
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Connected to UI agent for showing Pencil UI", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v11 = swift_unknownObjectWeakLoadStrong(v0[13] + v0[21], v10);
    if (v11)
    {
      v12 = (void *)v11;
      v0[6] = sub_1004E235C;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_1002377A0;
      v0[5] = &unk_10072C450;
      v13 = _Block_copy(v0 + 2);
      v14 = objc_msgSend(v12, "remoteObjectProxyWithErrorHandler:", v13);
      _Block_release(v13);
    }
    else
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v26 = type metadata accessor for Logger(0);
      v27 = sub_100221DF8(v26, (uint64_t)qword_1007C37A0);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Not showing Pencil UI because UI agent is not connected", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }

      v12 = 0;
      v14 = 0;
    }
    v32 = v0[16];
    v31 = v0[17];
    swift_task_dealloc(v0[20]);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return ((uint64_t (*)(void *, id))v0[1])(v12, v14);
  }
  else
  {
    v15 = v0[18];
    v16 = v0[16];
    v33 = v0[15];
    v17 = v0[14];
    v18 = static Duration.seconds(_:)(0.01);
    v20 = v19;
    ContinuousClock.init()(v18);
    v0[11] = v18;
    v0[12] = v20;
    v0[8] = 0;
    v0[9] = 0;
    *((_BYTE *)v0 + 80) = 1;
    v21 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v15, v21);
    v22 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 11, v17, v22);
    v23 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v0[23] = v23;
    v23(v16, v17);
    v24 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    v0[24] = v24;
    *v24 = v0;
    v24[1] = sub_1004E1AEC;
    return dispatch thunk of Clock.sleep(until:tolerance:)(v0[17], v0 + 8, v0[18], v21);
  }
}

id sub_1004E2244(void *a1, Swift::Int a2)
{
  NSString v4;
  Class isa;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setPattern:", v4);

  objc_msgSend(a1, "setDeviceType:", 0);
  objc_msgSend(a1, "setSenderID:", 0);
  sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
  isa = NSNumber.init(integerLiteral:)(a2).super.super.isa;
  objc_msgSend(a1, "setPowerSourceID:", isa);

  return objc_msgSend(a1, "setTimestamp:", mach_absolute_time());
}

void sub_1004E2328(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_1004E235C(uint64_t a1)
{
  sub_1004E4014(a1, "Not showing Pencil UI because remoteObjectProxyWithErrorHandler failed. Error: %s");
}

uint64_t sub_1004E2368()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1[18] = v0;
  v2 = type metadata accessor for ContinuousClock.Instant(0);
  v1[19] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[20] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v4);
  v1[22] = swift_task_alloc(v4);
  v1[23] = swift_task_alloc(v4);
  v5 = type metadata accessor for ContinuousClock(0);
  v1[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[26] = swift_task_alloc(v7);
  v1[27] = swift_task_alloc(v7);
  return swift_task_switch(sub_1004E241C, 0, 0);
}

uint64_t sub_1004E241C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  const char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t Strong;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 144);
  sub_1004E3C00();
  v3 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v4 = *(_QWORD *)(v1 + v3);
  v5 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v5 == 2)
  {
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = static Duration.seconds(_:)(0.01);
    v12 = v11;
    ContinuousClock.init()(v10);
    *(_QWORD *)(v0 + 112) = v10;
    *(_QWORD *)(v0 + 120) = v12;
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    v13 = v0 + 64;
    *(_BYTE *)(v0 + 80) = 1;
    v14 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v6, v14);
    v15 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 112, v8, v15);
    v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v0 + 232) = v16;
    v16(v7, v8);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 240) = v17;
    *v17 = v0;
    v17[1] = sub_1004E2940;
    v19 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v19, v13, v18, v14);
  }
  if ((v5 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100221DF8(v20, (uint64_t)qword_1007C37A0);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (!os_log_type_enabled(v22, v23))
      goto LABEL_23;
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    v25 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v22, v23, v25, v24, 2u);
    swift_slowDealloc(v24, -1, -1);
LABEL_23:

    v41 = 0;
    v43 = 0;
    goto LABEL_24;
  }
  v26 = *(unsigned __int8 *)(v4
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v26 == 2)
  {
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 152);
    v30 = *(_QWORD *)(v0 + 160);
    v31 = static Duration.seconds(_:)(0.01);
    v33 = v32;
    ContinuousClock.init()(v31);
    *(_QWORD *)(v0 + 128) = v31;
    *(_QWORD *)(v0 + 136) = v33;
    *(_QWORD *)(v0 + 96) = 0;
    *(_QWORD *)(v0 + 88) = 0;
    v13 = v0 + 88;
    *(_BYTE *)(v0 + 104) = 1;
    v14 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v27, v14);
    v34 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 128, v29, v34);
    v35 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    *(_QWORD *)(v0 + 256) = v35;
    v35(v28, v29);
    v36 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 264) = v36;
    *v36 = v0;
    v36[1] = sub_1004E3438;
    v18 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 168);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v19, v13, v18, v14);
  }
  if ((v26 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100221DF8(v38, (uint64_t)qword_1007C37A0);
    v22 = Logger.logObject.getter(v39);
    v23 = static os_log_type_t.error.getter(v22);
    if (!os_log_type_enabled(v22, v23))
      goto LABEL_23;
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    v25 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_22;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, v2);
  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100221DF8(v44, (uint64_t)qword_1007C37A0);
    v22 = Logger.logObject.getter(v45);
    v23 = static os_log_type_t.error.getter(v22);
    if (!os_log_type_enabled(v22, v23))
      goto LABEL_23;
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    v25 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_22;
  }
  v41 = (void *)Strong;
  *(_QWORD *)(v0 + 48) = sub_1004E3DBC;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1002377A0;
  *(_QWORD *)(v0 + 40) = &unk_10072D120;
  v42 = _Block_copy((const void *)(v0 + 16));
  v43 = objc_msgSend(v41, "remoteObjectProxyWithErrorHandler:", v42);
  _Block_release(v42);
LABEL_24:
  v46 = *(_QWORD *)(v0 + 208);
  v48 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 184);
  v49 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void *, id))(v0 + 8))(v41, v43);
}

uint64_t sub_1004E2940()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
  {
    v7 = sub_1004E2EF0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[25] + 8))(v2[27], v2[24]);
    v7 = sub_1004E29D8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1004E29D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  const char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t Strong;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 144) + *(_QWORD *)(v2 + 224));
  v4 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v4 == 2)
  {
    v5 = *(_QWORD *)(v2 + 192);
    v6 = *(_QWORD *)(v2 + 176);
    v7 = *(_QWORD *)(v2 + 152);
    v8 = *(_QWORD *)(v2 + 160);
    v9 = static Duration.seconds(_:)(0.01);
    v11 = v10;
    ContinuousClock.init()(v9);
    *(_QWORD *)(v2 + 112) = v9;
    *(_QWORD *)(v2 + 120) = v11;
    *(_QWORD *)(v2 + 72) = 0;
    *(_QWORD *)(v2 + 64) = 0;
    v12 = v2 + 64;
    *(_BYTE *)(v2 + 80) = 1;
    v13 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v5, v13);
    v14 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v2 + 112, v7, v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(_QWORD *)(v2 + 232) = v15;
    v15(v6, v7);
    v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v2 + 240) = v16;
    *v16 = v2;
    v16[1] = sub_1004E2940;
    v18 = *(_QWORD *)(v2 + 184);
    v17 = *(_QWORD *)(v2 + 192);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v18, v12, v17, v13);
  }
  if ((v4 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100221DF8(v19, (uint64_t)qword_1007C37A0);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (!os_log_type_enabled(v21, v22))
      goto LABEL_23;
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    v24 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v21, v22, v24, v23, 2u);
    swift_slowDealloc(v23, -1, -1);
LABEL_23:

    v40 = 0;
    v42 = 0;
    goto LABEL_24;
  }
  v25 = *(unsigned __int8 *)(v3
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v25 == 2)
  {
    v26 = *(_QWORD *)(v2 + 192);
    v27 = *(_QWORD *)(v2 + 176);
    v28 = *(_QWORD *)(v2 + 152);
    v29 = *(_QWORD *)(v2 + 160);
    v30 = static Duration.seconds(_:)(0.01);
    v32 = v31;
    ContinuousClock.init()(v30);
    *(_QWORD *)(v2 + 128) = v30;
    *(_QWORD *)(v2 + 136) = v32;
    *(_QWORD *)(v2 + 96) = 0;
    *(_QWORD *)(v2 + 88) = 0;
    v12 = v2 + 88;
    *(_BYTE *)(v2 + 104) = 1;
    v13 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v26, v13);
    v33 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v2 + 128, v28, v33);
    v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    *(_QWORD *)(v2 + 256) = v34;
    v34(v27, v28);
    v35 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v2 + 264) = v35;
    *v35 = v2;
    v35[1] = sub_1004E3438;
    v17 = *(_QWORD *)(v2 + 192);
    v18 = *(_QWORD *)(v2 + 168);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v18, v12, v17, v13);
  }
  if ((v25 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_100221DF8(v37, (uint64_t)qword_1007C37A0);
    v21 = Logger.logObject.getter(v38);
    v22 = static os_log_type_t.error.getter(v21);
    if (!os_log_type_enabled(v21, v22))
      goto LABEL_23;
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    v24 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_22;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, a2);
  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100221DF8(v43, (uint64_t)qword_1007C37A0);
    v21 = Logger.logObject.getter(v44);
    v22 = static os_log_type_t.error.getter(v21);
    if (!os_log_type_enabled(v21, v22))
      goto LABEL_23;
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    v24 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_22;
  }
  v40 = (void *)Strong;
  *(_QWORD *)(v2 + 48) = sub_1004E3DBC;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v2 + 24) = 1107296256;
  *(_QWORD *)(v2 + 32) = sub_1002377A0;
  *(_QWORD *)(v2 + 40) = &unk_10072D120;
  v41 = _Block_copy((const void *)(v2 + 16));
  v42 = objc_msgSend(v40, "remoteObjectProxyWithErrorHandler:", v41);
  _Block_release(v41);
LABEL_24:
  v45 = *(_QWORD *)(v2 + 208);
  v47 = *(_QWORD *)(v2 + 176);
  v46 = *(_QWORD *)(v2 + 184);
  v48 = *(_QWORD *)(v2 + 168);
  swift_task_dealloc(*(_QWORD *)(v2 + 216));
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void *, id))(v2 + 8))(v40, v42);
}

uint64_t sub_1004E2EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_errorRelease(*(_QWORD *)(v0 + 248));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + *(_QWORD *)(v0 + 224));
  v6 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v6 == 2)
  {
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 152);
    v52 = *(_QWORD *)(v0 + 160);
    v10 = static Duration.seconds(_:)(0.01);
    v12 = v11;
    ContinuousClock.init()(v10);
    *(_QWORD *)(v0 + 112) = v10;
    *(_QWORD *)(v0 + 120) = v12;
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0;
    *(_BYTE *)(v0 + 80) = 1;
    v13 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v7, v13);
    v14 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 112, v9, v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    *(_QWORD *)(v0 + 232) = v15;
    v15(v8, v9);
    v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 240) = v16;
    *v16 = v0;
    v16[1] = sub_1004E2940;
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 184);
    v19 = v0 + 64;
    v20 = v13;
    return dispatch thunk of Clock.sleep(until:tolerance:)(v18, v19, v17, v20);
  }
  if ((v6 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100221DF8(v21, (uint64_t)qword_1007C37A0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_23;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    v26 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v23, v24, v26, v25, 2u);
    swift_slowDealloc(v25, -1, -1);
LABEL_23:

    v43 = 0;
    v45 = 0;
    goto LABEL_24;
  }
  v27 = *(unsigned __int8 *)(v5
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v27 == 2)
  {
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = static Duration.seconds(_:)(0.01);
    v34 = v33;
    ContinuousClock.init()(v32);
    *(_QWORD *)(v0 + 128) = v32;
    *(_QWORD *)(v0 + 136) = v34;
    *(_QWORD *)(v0 + 96) = 0;
    *(_QWORD *)(v0 + 88) = 0;
    *(_BYTE *)(v0 + 104) = 1;
    v35 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v28, v35);
    v36 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 128, v30, v36);
    v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    *(_QWORD *)(v0 + 256) = v37;
    v37(v29, v30);
    v38 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 264) = v38;
    *v38 = v0;
    v38[1] = sub_1004E3438;
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = v0 + 88;
    v20 = v35;
    return dispatch thunk of Clock.sleep(until:tolerance:)(v18, v19, v17, v20);
  }
  if ((v27 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v40 = type metadata accessor for Logger(0);
    v41 = sub_100221DF8(v40, (uint64_t)qword_1007C37A0);
    v23 = Logger.logObject.getter(v41);
    v24 = static os_log_type_t.error.getter(v23);
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_23;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    v26 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_22;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, v4);
  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v46 = type metadata accessor for Logger(0);
    v47 = sub_100221DF8(v46, (uint64_t)qword_1007C37A0);
    v23 = Logger.logObject.getter(v47);
    v24 = static os_log_type_t.error.getter(v23);
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_23;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    v26 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_22;
  }
  v43 = (void *)Strong;
  *(_QWORD *)(v0 + 48) = sub_1004E3DBC;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1002377A0;
  *(_QWORD *)(v0 + 40) = &unk_10072D120;
  v44 = _Block_copy((const void *)(v0 + 16));
  v45 = objc_msgSend(v43, "remoteObjectProxyWithErrorHandler:", v44);
  _Block_release(v44);
LABEL_24:
  v48 = *(_QWORD *)(v0 + 208);
  v50 = *(_QWORD *)(v0 + 176);
  v49 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void *, id))(v0 + 8))(v43, v45);
}

uint64_t sub_1004E3438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 256);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
  {
    v7 = sub_1004E3858;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[25] + 8))(v2[26], v2[24]);
    v7 = sub_1004E34D0;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1004E34D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t Strong;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 144) + *(_QWORD *)(v2 + 224));
  v4 = *(unsigned __int8 *)(v3
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v4 == 2)
  {
    v5 = *(_QWORD *)(v2 + 192);
    v6 = *(_QWORD *)(v2 + 176);
    v7 = *(_QWORD *)(v2 + 152);
    v8 = *(_QWORD *)(v2 + 160);
    v9 = static Duration.seconds(_:)(0.01);
    v11 = v10;
    ContinuousClock.init()(v9);
    *(_QWORD *)(v2 + 128) = v9;
    *(_QWORD *)(v2 + 136) = v11;
    *(_QWORD *)(v2 + 96) = 0;
    *(_QWORD *)(v2 + 88) = 0;
    *(_BYTE *)(v2 + 104) = 1;
    v12 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v5, v12);
    v13 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v2 + 128, v7, v13);
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(_QWORD *)(v2 + 256) = v14;
    v14(v6, v7);
    v15 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v2 + 264) = v15;
    *v15 = v2;
    v15[1] = sub_1004E3438;
    return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v2 + 168), v2 + 88, *(_QWORD *)(v2 + 192), v12);
  }
  if ((v4 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007C37A0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (!os_log_type_enabled(v19, v20))
      goto LABEL_15;
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    v22 = "Not showing fake first-pair UI because view service XPC connection could not be established";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v22, v21, 2u);
    swift_slowDealloc(v21, -1, -1);
LABEL_15:

    v24 = 0;
    v26 = 0;
    goto LABEL_16;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, a2);
  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007C37A0);
    v19 = Logger.logObject.getter(v28);
    v20 = static os_log_type_t.error.getter(v19);
    if (!os_log_type_enabled(v19, v20))
      goto LABEL_15;
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    v22 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_14;
  }
  v24 = (void *)Strong;
  *(_QWORD *)(v2 + 48) = sub_1004E3DBC;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v2 + 24) = 1107296256;
  *(_QWORD *)(v2 + 32) = sub_1002377A0;
  *(_QWORD *)(v2 + 40) = &unk_10072D120;
  v25 = _Block_copy((const void *)(v2 + 16));
  v26 = objc_msgSend(v24, "remoteObjectProxyWithErrorHandler:", v25);
  _Block_release(v25);
LABEL_16:
  v29 = *(_QWORD *)(v2 + 208);
  v31 = *(_QWORD *)(v2 + 176);
  v30 = *(_QWORD *)(v2 + 184);
  v32 = *(_QWORD *)(v2 + 168);
  swift_task_dealloc(*(_QWORD *)(v2 + 216));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void *, id))(v2 + 8))(v24, v26);
}

uint64_t sub_1004E3858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t Strong;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  swift_errorRelease(*(_QWORD *)(v0 + 272));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + *(_QWORD *)(v0 + 224));
  v6 = *(unsigned __int8 *)(v5
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v6 == 2)
  {
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 160);
    v10 = static Duration.seconds(_:)(0.01);
    v12 = v11;
    ContinuousClock.init()(v10);
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v12;
    *(_QWORD *)(v0 + 88) = 0;
    *(_QWORD *)(v0 + 96) = 0;
    *(_BYTE *)(v0 + 104) = 1;
    v13 = sub_100220D78((unint64_t *)&unk_1007B65F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
    dispatch thunk of Clock.now.getter(v7, v13);
    v14 = sub_100220D78(&qword_1007C4370, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)(v0 + 128, v9, v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    *(_QWORD *)(v0 + 256) = v15;
    v15(v8, v9);
    v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
    *(_QWORD *)(v0 + 264) = v16;
    *v16 = v0;
    v16[1] = sub_1004E3438;
    return dispatch thunk of Clock.sleep(until:tolerance:)(*(_QWORD *)(v0 + 168), v0 + 88, *(_QWORD *)(v0 + 192), v13);
  }
  if ((v6 & 1) == 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100221DF8(v18, (uint64_t)qword_1007C37A0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (!os_log_type_enabled(v20, v21))
      goto LABEL_15;
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    v23 = "Not showing fake first-pair UI because view service XPC connection could not be established";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 2u);
    swift_slowDealloc(v22, -1, -1);
LABEL_15:

    v25 = 0;
    v27 = 0;
    goto LABEL_16;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, v4);
  if (!Strong)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100221DF8(v28, (uint64_t)qword_1007C37A0);
    v20 = Logger.logObject.getter(v29);
    v21 = static os_log_type_t.error.getter(v20);
    if (!os_log_type_enabled(v20, v21))
      goto LABEL_15;
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    v23 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_14;
  }
  v25 = (void *)Strong;
  *(_QWORD *)(v0 + 48) = sub_1004E3DBC;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1002377A0;
  *(_QWORD *)(v0 + 40) = &unk_10072D120;
  v26 = _Block_copy((const void *)(v0 + 16));
  v27 = objc_msgSend(v25, "remoteObjectProxyWithErrorHandler:", v26);
  _Block_release(v26);
LABEL_16:
  v30 = *(_QWORD *)(v0 + 208);
  v32 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 184);
  v33 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void *, id))(v0 + 8))(v25, v27);
}

void sub_1004E3C00()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  const char *v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v1 = v0;
  v2 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "initWithServiceName:viewControllerClassName:", v3, v4);

  v14 = objc_msgSend(objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext), "init");
  v6 = (const char *)sub_10021E5F8((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setUserInfo:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  v10 = (void *)objc_opt_self(SBSRemoteAlertHandle);
  swift_retain();
  sub_1004C5064(objc_msgSend(v10, "newHandleWithDefinition:configurationContext:", v5, v14));
  swift_release(v9);
  v11 = *(void **)(*(_QWORD *)(v1 + v8) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle);
  if (v11)
  {
    objc_msgSend(v11, "sd_addObserver:", v1);
    v12 = *(void **)(*(_QWORD *)(v1 + v8)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v13, "activateWithContext:", 0);

    }
  }

}

void sub_1004E3DBC(uint64_t a1)
{
  sub_1004E4014(a1, "Not showing fake first-pair UI because remoteObjectProxyWithErrorHandler failed. Error: %s");
}

void sub_1004E3DC8(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showUnlockPrompt. Error: %s");
}

void sub_1004E3DD4(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in showPairConsentPrompt. Error: %s");
}

void sub_1004E3DE0(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in dismissUnlockPrompt. Error: %s");
}

void sub_1004E3DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "acquireHUDTransaction", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    aBlock[4] = sub_1004E3FF0;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002377A0;
    aBlock[3] = &unk_10072C4C8;
    v9 = _Block_copy(aBlock);
    v10 = objc_msgSend(v8, "remoteObjectProxyWithErrorHandler:", v9);
    _Block_release(v9);
    objc_msgSend(v10, "acquireHUDTransaction");

    swift_unknownObjectRelease(v10);
  }
  else
  {
    oslog = Logger.logObject.getter(0);
    v11 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "no UI service to retain", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
}

void sub_1004E3FF0(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in acquireHUDTransaction. Error: %s");
}

void sub_1004E3FFC(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in releaseHUDTransaction. Error: %s");
}

void sub_1004E4008(uint64_t a1)
{
  sub_1004E4014(a1, "remoteObjectProxyWithErrorHandler failed in dismissSBUI. Error: %s");
}

void sub_1004E4014(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  NSObject *oslog;
  uint64_t v13;
  _QWORD v14[3];
  _BYTE v15[8];
  uint64_t v16;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue(a1, v15, v14);
    v9 = Error.localizedDescription.getter(v14[1], v14[2]);
    v11 = (const char *)v10;
    v13 = sub_100228BD8(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14, v7 + 4);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, a2, v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

uint64_t sub_1004E41EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 152) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7280) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 48) = swift_task_alloc(v5);
  *(_QWORD *)(v4 + 56) = swift_task_alloc(v5);
  v6 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v4 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 80) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 88) = swift_task_alloc(v8);
  return swift_task_switch(sub_1004E4298, 0, 0);
}

uint64_t sub_1004E4298()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  _QWORD *v11;
  uint64_t v13;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  v0[12] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = v0[3];
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_1004E089C(v5);
    v10 = (const char *)v9;
    v0[2] = sub_100228BD8(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v6 + 4);
    swift_bridgeObjectRelease(v10, v13);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showFakeFirstPairUI [type: %s]", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = (_QWORD *)swift_task_alloc(dword_1007C435C);
  v0[13] = v11;
  *v11 = v0;
  v11[1] = sub_1004E4440;
  return sub_1004E09F0();
}

uint64_t sub_1004E4440(char a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v5 = *v1;
  swift_task_dealloc(v4);
  if ((a1 & 1) != 0)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1007C446C);
    v3[14] = v6;
    *v6 = v5;
    v6[1] = sub_1004E44F0;
    return sub_1004E2368();
  }
  else
  {
    v9 = v3[10];
    v8 = v3[11];
    v12 = v3 + 6;
    v11 = v3[6];
    v10 = v12[1];
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1004E44F0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  *(_QWORD *)(*(_QWORD *)v2 + 120) = a2;
  swift_task_dealloc(v4);

  return swift_task_switch(sub_1004E454C, 0, 0);
}

uint64_t sub_1004E454C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    if (*(_QWORD *)(v0 + 24) == 3)
    {
      v2 = *(_BYTE *)(v0 + 152);
      v3 = dword_1007C4474;
      swift_unknownObjectRetain(v1);
      v4 = (_QWORD *)swift_task_alloc(v3);
      *(_QWORD *)(v0 + 128) = v4;
      *v4 = v0;
      v4[1] = sub_1004E48C4;
      return sub_1004E4DFC(3, *(_QWORD *)(v0 + 32), v2 & 1, 1, 1);
    }
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 40);
    if ((*(_BYTE *)(v0 + 152) & 1) != 0)
      v11 = 0.0;
    else
      v11 = *(double *)(v0 + 32);
    v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if (*(_BYTE *)(v12 + 8))
      v13 = 0;
    else
      v13 = *(_QWORD *)v12;
    v14 = swift_unknownObjectRetain_n(v1, 2);
    UUID.init()(v14);
    v15 = type metadata accessor for UUID(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
    v18 = *(_QWORD *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
    if (v18 <= 3)
      v17 = qword_1005DB370[v18];
    v19 = *(_QWORD *)(v0 + 48);
    sub_100221F28(*(_QWORD *)(v0 + 56), v19, &qword_1007B7280);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15) == 1)
    {
      isa = 0;
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 48);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
    }
    v22 = *(void **)(v0 + 120);
    v23 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 24);
    objc_msgSend(v22, "updateDeviceInfoWithDeviceType:batteryLevel:batteryLevelKnown:edge:orientation:isCharging:identifier:", v13, (*(_BYTE *)(v0 + 152) & 1) == 0, v17, 0, 1, isa, v11);

    swift_unknownObjectRelease(v22);
    sub_10000D0F0(v23, &qword_1007B7280);
    objc_msgSend(v22, "showPairingStarted");
    if (v24 == 4 || v24 == 1)
    {
      v25 = static Duration.seconds(_:)(0.8);
      v27 = v26;
      ContinuousClock.init()(v25);
      v33 = (char *)&dword_1007B6518 + dword_1007B6518;
      v28 = (_QWORD *)swift_task_alloc(unk_1007B651C);
      *(_QWORD *)(v0 + 144) = v28;
      *v28 = v0;
      v28[1] = sub_1004E4CDC;
      return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v33)(v25, v27, 0, 0, 1);
    }
    v29 = *(void **)(v0 + 120);
    objc_msgSend(v29, "setDeviceType:", *(_QWORD *)(v0 + 24));
    objc_msgSend(v29, "showPairingSuccess");
    swift_unknownObjectRelease_n(v29, 2);
  }
  else
  {
    v6 = Logger.logObject.getter(0);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get view service connection to show fake first-pair UI", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

  }
  v30 = *(_QWORD *)(v0 + 80);
  v32 = *(_QWORD *)(v0 + 48);
  v31 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004E48C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_1004E4918, 0, 0);
}

uint64_t sub_1004E4918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(0.8);
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 136) = v4;
  *v4 = v0;
  v4[1] = sub_1004E49B0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1004E49B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 136));
  v3 = *(_QWORD *)(v2 + 88);
  v6 = v2 + 64;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v6 + 8);
  if (v0)
    swift_errorRelease(v0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_task_switch(sub_1004E4A48, 0, 0);
}

uint64_t sub_1004E4A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 152) & 1) != 0)
    v3 = 0.0;
  else
    v3 = *(double *)(v0 + 32);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0;
  else
    v5 = *(_QWORD *)v4;
  v6 = swift_unknownObjectRetain(*(_QWORD *)(v0 + 120));
  UUID.init()(v6);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v1, 0, 1, v7);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
  if (v10 <= 3)
    v9 = qword_1005DB370[v10];
  v11 = *(_QWORD *)(v0 + 48);
  sub_100221F28(*(_QWORD *)(v0 + 56), v11, &qword_1007B7280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7) == 1)
  {
    isa = 0;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 48);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  v14 = *(void **)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v14, "updateDeviceInfoWithDeviceType:batteryLevel:batteryLevelKnown:edge:orientation:isCharging:identifier:", v5, (*(_BYTE *)(v0 + 152) & 1) == 0, v9, 0, 1, isa, v3);

  swift_unknownObjectRelease(v14);
  sub_10000D0F0(v15, &qword_1007B7280);
  objc_msgSend(v14, "showPairingStarted");
  if (v16 == 4 || v16 == 1)
  {
    v17 = static Duration.seconds(_:)(0.8);
    v19 = v18;
    ContinuousClock.init()(v17);
    v26 = (char *)&dword_1007B6518 + dword_1007B6518;
    v20 = (_QWORD *)swift_task_alloc(unk_1007B651C);
    *(_QWORD *)(v0 + 144) = v20;
    *v20 = v0;
    v20[1] = sub_1004E4CDC;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v26)(v17, v19, 0, 0, 1);
  }
  else
  {
    v22 = *(void **)(v0 + 120);
    objc_msgSend(v22, "setDeviceType:", *(_QWORD *)(v0 + 24));
    objc_msgSend(v22, "showPairingSuccess");
    swift_unknownObjectRelease_n(v22, 2);
    v23 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004E4CDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 144));
  v4 = v2[9];
  v3 = v2[10];
  v5 = v2[8];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1004F5240;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1004E4D74;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1004E4D74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 120);
  objc_msgSend(v1, "setDeviceType:", *(_QWORD *)(v0 + 24));
  objc_msgSend(v1, "showPairingSuccess");
  swift_unknownObjectRelease_n(v1, 2);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004E4DFC(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_BYTE *)(v6 + 277) = a4;
  *(_BYTE *)(v6 + 276) = a3;
  *(_QWORD *)(v6 + 88) = a1;
  *(_QWORD *)(v6 + 96) = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v6 + 120) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 128) = v8;
  *(_QWORD *)(v6 + 136) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v6 + 144) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 152) = v10;
  *(_QWORD *)(v6 + 160) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTimeInterval(0);
  *(_QWORD *)(v6 + 168) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 176) = v12;
  *(_QWORD *)(v6 + 184) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v6 + 192) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 200) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 208) = swift_task_alloc(v15);
  *(_QWORD *)(v6 + 216) = swift_task_alloc(v15);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7280) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 224) = swift_task_alloc(v16);
  *(_QWORD *)(v6 + 232) = swift_task_alloc(v16);
  return swift_task_switch(sub_1004E4F24, 0, 0);
}

uint64_t sub_1004E4F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  int v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18[2];
  const char *v19;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C37A0);
  *(_QWORD *)(v0 + 240) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_BYTE *)(v0 + 276);
    v7 = swift_slowAlloc(28, -1);
    v17 = swift_slowAlloc(64, -1);
    v18[0] = v17;
    *(_DWORD *)v7 = 136315650;
    v8 = sub_1004E089C(v5);
    v10 = (const char *)v9;
    *(_QWORD *)(v0 + 72) = sub_100228BD8(v8, v9, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v7 + 4);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v7 + 12) = 2080;
    if ((v6 & 1) != 0)
    {
      v18[1] = 0;
      v19 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v19);
      v13 = (const char *)0x800000010061F410;
      v11 = 0xD000000000000015;
    }
    else
    {
      v11 = Double.description.getter(*(double *)(v0 + 96));
      v13 = v12;
    }
    v14 = *(unsigned __int8 *)(v0 + 277);
    *(_QWORD *)(v0 + 80) = sub_100228BD8(v11, (unint64_t)v13, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v7 + 14);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v7 + 22) = 1024;
    *(_DWORD *)(v0 + 272) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 272, v0 + 276, v7 + 24);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showFakePill [type: %s, charge: %s, charging: %{BOOL}d]", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  v15 = (_QWORD *)swift_task_alloc(dword_1007C435C);
  *(_QWORD *)(v0 + 248) = v15;
  *v15 = v0;
  v15[1] = sub_1004E5180;
  return sub_1004E09F0();
}

uint64_t sub_1004E5180(char a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 248);
  v5 = *v1;
  swift_task_dealloc(v4);
  if ((a1 & 1) != 0)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1007C4364);
    v3[32] = v6;
    *v6 = v5;
    v6[1] = sub_1004E5260;
    return sub_1004E1600();
  }
  else
  {
    v9 = v3[28];
    v8 = v3[29];
    v11 = v3[26];
    v10 = v3[27];
    v12 = v3[23];
    v13 = v3[20];
    v14 = v3[17];
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1004E5260(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 256);
  *(_QWORD *)(*(_QWORD *)v2 + 264) = a2;
  swift_task_dealloc(v4);

  return swift_task_switch(sub_1004E52BC, 0, 0);
}

uint64_t sub_1004E52BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Class isa;
  NSObject *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = *(void **)(v1 + 264);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 232);
    v4 = *(_QWORD *)(v1 + 112);
    v5 = *(_BYTE *)(v1 + 276);
    v6 = *(double *)(v1 + 96);
    objc_msgSend((id)swift_unknownObjectRetain(v2), "acquireHUDTransaction");
    if ((v5 & 1) != 0)
      v6 = 0.0;
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if (*(_BYTE *)(v7 + 8))
      v8 = 0;
    else
      v8 = *(_QWORD *)v7;
    v44 = v8;
    v9 = swift_unknownObjectRetain(v2);
    UUID.init()(v9);
    v10 = type metadata accessor for UUID(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v10);
    v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
    if (v13 <= 3)
      v12 = qword_1005DB370[v13];
    v14 = *(_QWORD *)(v1 + 224);
    sub_100221F28(*(_QWORD *)(v1 + 232), v14, &qword_1007B7280);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10) == 1)
    {
      isa = 0;
    }
    else
    {
      v19 = *(_QWORD *)(v1 + 224);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v10);
    }
    v20 = *(_QWORD *)(v1 + 232);
    v22 = *(_QWORD *)(v1 + 208);
    v21 = *(_QWORD *)(v1 + 216);
    v23 = *(_QWORD **)(v1 + 184);
    v41 = *(_QWORD *)(v1 + 200);
    v42 = *(_QWORD *)(v1 + 192);
    v24 = *(_QWORD *)(v1 + 168);
    v25 = *(_QWORD *)(v1 + 176);
    v50 = *(_QWORD *)(v1 + 152);
    v51 = *(_QWORD *)(v1 + 144);
    v46 = *(_QWORD *)(v1 + 160);
    v47 = *(_QWORD *)(v1 + 136);
    v48 = *(_QWORD *)(v1 + 120);
    v49 = *(_QWORD *)(v1 + 128);
    v40 = *(_QWORD *)(v1 + 104);
    objc_msgSend(v2, "updateDeviceInfoWithDeviceType:batteryLevel:batteryLevelKnown:edge:orientation:isCharging:identifier:", v44, (*(_BYTE *)(v1 + 276) & 1) == 0, v12, 0, *(unsigned __int8 *)(v1 + 277), isa, v6);

    swift_unknownObjectRelease(v2);
    sub_10000D0F0(v20, &qword_1007B7280);
    objc_msgSend(v2, "showChargingStatus");
    v26 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
    v43 = (void *)static OS_dispatch_queue.main.getter(v26);
    static DispatchTime.now()(v43);
    *v23 = v40;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104))(v23, enum case for DispatchTimeInterval.seconds(_:), v24);
    + infix(_:_:)(v22, v23);
    (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v23, v24);
    v45 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v45(v22, v42);
    v27 = swift_allocObject(&unk_10072D0E0, 24, 7);
    *(_QWORD *)(v27 + 16) = v2;
    *(_QWORD *)(v1 + 48) = sub_1004F4D7C;
    *(_QWORD *)(v1 + 56) = v27;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = 1107296256;
    *(_QWORD *)(v1 + 32) = sub_10025BBB4;
    *(_QWORD *)(v1 + 40) = &unk_10072D0F8;
    v28 = _Block_copy((const void *)(v1 + 16));
    v29 = swift_unknownObjectRetain(v2);
    static DispatchQoS.unspecified.getter(v29);
    *(_QWORD *)(v1 + 64) = _swiftEmptyArrayStorage;
    v30 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = sub_100008384((uint64_t *)&unk_1007B6410);
    v32 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 64, v31, v32, v48, v30);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v21, v46, v47, v28);
    _Block_release(v28);

    swift_unknownObjectRelease_n(v2, 2);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v46, v51);
    v45(v21, v42);
    swift_release(*(_QWORD *)(v1 + 56));
  }
  else
  {
    v16 = Logger.logObject.getter(a1);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v17, "Failed to get HUD connection to show fake pill", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  v33 = *(_QWORD *)(v1 + 224);
  v35 = *(_QWORD *)(v1 + 208);
  v34 = *(_QWORD *)(v1 + 216);
  v36 = *(_QWORD *)(v1 + 184);
  v37 = *(_QWORD *)(v1 + 160);
  v38 = *(_QWORD *)(v1 + 136);
  swift_task_dealloc(*(_QWORD *)(v1 + 232));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004E5784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[17] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[18] = v8;
  v6[19] = v9;
  return swift_task_switch(sub_1004E57F4, v8, v9);
}

uint64_t sub_1004E57F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  *(_QWORD *)(v0 + 88) = 0x656772616863;
  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 96) = 0xE600000000000000;
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 16), v0 + 88, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_10045C1D0(v0 + 16), (v3 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(*(_QWORD *)(v0 + 128) + 56) + 32 * v2, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  sub_10022E6C0(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
  {
    v4 = swift_dynamicCast(v0 + 104, v0 + 56, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
    if (v4)
      v5 = *(_QWORD *)(v0 + 104);
    else
      v5 = 0;
    v6 = v4 ^ 1;
  }
  else
  {
    sub_10000D0F0(v0 + 56, (uint64_t *)&unk_1007B6890);
    v5 = 0;
    v6 = 1;
  }
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4464);
  *(_QWORD *)(v0 + 160) = v7;
  *v7 = v0;
  v7[1] = sub_1004E5930;
  return sub_1004E41EC(*(_QWORD *)(v0 + 120), v5, v6);
}

uint64_t sub_1004E5930()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return swift_task_switch(sub_1004F4FD0, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1004E597C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[17] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[18] = v8;
  v6[19] = v9;
  return swift_task_switch(sub_1004E59EC, v8, v9);
}

uint64_t sub_1004E59EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  *(_QWORD *)(v0 + 88) = 0x656772616863;
  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 96) = 0xE600000000000000;
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 16), v0 + 88, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_10045C1D0(v0 + 16), (v3 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(*(_QWORD *)(v0 + 128) + 56) + 32 * v2, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  sub_10022E6C0(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
  {
    v4 = swift_dynamicCast(v0 + 104, v0 + 56, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
    if (v4)
      v5 = *(_QWORD *)(v0 + 104);
    else
      v5 = 0;
    v6 = v4 ^ 1;
  }
  else
  {
    sub_10000D0F0(v0 + 56, (uint64_t *)&unk_1007B6890);
    v5 = 0;
    v6 = 1;
  }
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4474);
  *(_QWORD *)(v0 + 160) = v7;
  *v7 = v0;
  v7[1] = sub_1004E5B30;
  return sub_1004E4DFC(*(_QWORD *)(v0 + 120), v5, v6, 1, 5);
}

uint64_t sub_1004E5B30()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return swift_task_switch(sub_1004E5B7C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1004E5B7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004E5BAC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;

  v9 = type metadata accessor for MainActor(0);
  v6[2] = v9;
  v6[3] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1007C4474);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_1004E5C38;
  return sub_1004E4DFC(a6, *(uint64_t *)&a1, 0, 0, 5);
}

uint64_t sub_1004E5C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004E5CA8, v2, v3);
}

uint64_t sub_1004E5CA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004E5CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "remoteAlertHandleDidActivate", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  *(_BYTE *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated) = 1;
  sub_1004C99E8();
}

uint64_t sub_1004E5E34(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v12 = (_QWORD *)swift_allocObject(&unk_10072C5C8, 40, 7);
  v12[2] = a2;
  v12[3] = a1;
  v12[4] = v2;
  aBlock[4] = sub_1004F45CC;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C5E0;
  v13 = _Block_copy(aBlock);
  swift_errorRetain(a2);
  v14 = a1;
  static DispatchQoS.unspecified.getter(v2);
  v21 = _swiftEmptyArrayStorage;
  v15 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100008384((uint64_t *)&unk_1007B6410);
  v17 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release(v23);
}

uint64_t sub_1004E6040(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;
  const char *v24;
  uint64_t v25;

  v6 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v6);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007C37A0);
  swift_errorRetain(a1);
  v10 = swift_errorRetain(a1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v25 = v14;
    *(_DWORD *)v13 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v22, v21);
      v15 = Error.localizedDescription.getter(v21[1], v21[2]);
      v17 = v16;
    }
    else
    {
      v23 = 0;
      v24 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v24);
      v17 = (const char *)0x8000000100612DF0;
      v15 = 0xD000000000000015;
    }
    v23 = sub_100228BD8(v15, (unint64_t)v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "remoteAlertHandle didInvalidateWithError: %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  objc_msgSend(a2, "removeObserver:", a3);
  *(_BYTE *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) = 0;
  v18 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  sub_1004CF030((unint64_t)v8, 0);
  return sub_10000D0F0((uint64_t)v8, &qword_1007B7280);
}

void sub_1004E6398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  void *v8;

  v1 = v0;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "pairTapped", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) = 1;
  v7 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setBluetoothEnabled:", 1);

    sub_1004C99E8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E64F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  NSString v13;
  unsigned __int8 v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress) & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "b222 UI connection in progress, ignoring, resetting attempt count", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt) = 0;
  }
  else
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "b222 showEducationUIIfNecessary", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    if ((sub_10044ABB4() & 1) != 0)
    {
      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v12, "BOOLForKey:", v13);

      if ((v14 & 1) == 0)
      {
        sub_1004D1B24(0);
        return;
      }
    }
    else
    {

    }
    oslog = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "b222 No need for any education UI.  Bailing", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

void sub_1004E68C8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  char v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "XPC: connectionEstablished", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = objc_msgSend(a1, "sd_connectionBundleID");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    if (v10 == 0xD00000000000001CLL)
    {
      v13 = (const char *)0x8000000100612040;
      if (v12 == (const char *)0x8000000100612040)
        goto LABEL_10;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100612040, v10, v12, 0) & 1) != 0)
    {
      v13 = v12;
LABEL_10:
      swift_bridgeObjectRelease(v13);
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
      swift_unknownObjectWeakAssign(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, a1);
      *(_BYTE *)(v14
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) = 1;
      goto LABEL_22;
    }
    if (v10 == 0xD000000000000023 && v12 == (const char *)0x80000001006180A0)
    {
      swift_bridgeObjectRelease((const char *)0x80000001006180A0);
LABEL_15:
      swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, a1);
      sub_1004E3DEC();
      goto LABEL_22;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x80000001006180A0, v10, v12, 0);
    swift_bridgeObjectRelease(v12);
    if ((v15 & 1) != 0)
      goto LABEL_15;
  }
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v28 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = objc_msgSend(v16, "sd_connectionBundleID");
    if (v21)
    {
      v22 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;

    }
    else
    {
      v26 = 0;
      v27 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      v23 = 0xD000000000000015;
      v25 = (const char *)0x8000000100612DF0;
    }
    v26 = sub_100228BD8(v23, (unint64_t)v25, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 4);

    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "connectionEstablished connection bundle ID invalid: %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

  }
LABEL_22:
  sub_1004C99E8();
}

void sub_1004E6CBC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v4 = a1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (_QWORD *)swift_slowAlloc(8, -1);
    v27 = v4;
    *(_DWORD *)v7 = 138412290;
    v8 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v7 + 4);
    *v26 = v4;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "XPC: connectionInvalidated: %@", v7, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v26, 1, v9);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v11 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)+ OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, v10);
  if (Strong && (v14 = Strong, Strong, v14 == v4))
  {
    v25 = *(_QWORD *)(v1 + v11);
    swift_unknownObjectWeakAssign(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceConnection, 0);
    if (*(_BYTE *)(v25
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) == 2)
      *(_BYTE *)(v25
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) = 0;
  }
  else
  {
    v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
    v16 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v13);
    if (v16 && (v17 = v16, v16, v17 == v4))
    {
      swift_unknownObjectWeakAssign(v15, 0);
      if (qword_1007B3FB0 != -1)
        swift_once(&qword_1007B3FB0, sub_10037C2E8);
      sub_10037E0D0();
    }
    else
    {
      v18 = v4;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v22 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v21 = 138412290;
        v27 = v18;
        v23 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v21 + 4);
        *v22 = v18;

        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unknown connection invalidated: %@", v21, 0xCu);
        v24 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v22, 1, v24);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

      }
      else
      {

      }
    }
  }
  sub_1004C99E8();
}

void sub_1004E7090(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  char **v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD);
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(_QWORD, _QWORD);
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  void **aBlock;
  _QWORD v58[4];
  uint64_t v59;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v52 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTimeInterval(0);
  v51 = *(void (**)(_QWORD, _QWORD))(v10 - 8);
  __chkstk_darwin(v10);
  v50 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = type metadata accessor for DispatchTime(0);
  v49 = *(_QWORD *)(v55 - 8);
  v12 = __chkstk_darwin(v55);
  v48 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v54 = (char *)&v45 - v14;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100221DF8(v15, (uint64_t)qword_1007C37A0);
  v17 = a1;
  v47 = v16;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = &selRef_setSupportsApproveIcon_;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = (_DWORD *)swift_slowAlloc(18, -1);
    v46 = v10;
    v22 = v21;
    *v21 = 134218240;
    v23 = v2;
    v24 = v4;
    v25 = v21 + 1;
    aBlock = (void **)objc_msgSend(v17, "state");
    v26 = v25;
    v4 = v24;
    v2 = v23;
    v20 = &selRef_setSupportsApproveIcon_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v58, v26);
    *((_WORD *)v22 + 6) = 1024;
    LODWORD(aBlock) = objc_msgSend(v17, "isScanning");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, (char *)v22 + 14);

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "centralManagerDidUpdateState: %ld. scanning: %{BOOL}d", (uint8_t *)v22, 0x12u);
    v27 = v22;
    v10 = v46;
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

  }
  if (objc_msgSend(v17, v20[423]) == (id)5
    && (v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState),
        *(_BYTE *)(v28 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) == 1)
    && *(_BYTE *)(v28 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) == 1)
  {
    v29 = Logger.logObject.getter(5);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Waiting for 2ms before calling run() to avoid race condition...", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
    v32 = v48;
    static DispatchTime.now()(v33);
    v35 = v50;
    v34 = v51;
    *v50 = 2;
    (*((void (**)(_QWORD *, _QWORD, uint64_t))v34 + 13))(v35, enum case for DispatchTimeInterval.milliseconds(_:), v10);
    + infix(_:_:)(v32, v35);
    (*((void (**)(_QWORD *, uint64_t))v34 + 1))(v35, v10);
    v51 = *(void (**)(_QWORD, _QWORD))(v49 + 8);
    v51(v32, v55);
    v36 = swift_allocObject(&unk_10072BE40, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v2);
    v58[3] = sub_1004F4588;
    v59 = v36;
    aBlock = _NSConcreteStackBlock;
    v58[0] = 1107296256;
    v58[1] = sub_10025BBB4;
    v58[2] = &unk_10072C540;
    v37 = _Block_copy(&aBlock);
    v38 = swift_retain();
    v39 = v52;
    static DispatchQoS.unspecified.getter(v38);
    v56 = _swiftEmptyArrayStorage;
    v40 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_100008384((uint64_t *)&unk_1007B6410);
    v42 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v41, v42, v4, v40);
    v43 = v54;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v54, v39, v7, v37);
    _Block_release(v37);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v8);
    v51(v43, v55);
    v44 = v59;
    swift_release(v36);
    swift_release(v44);
  }
  else
  {
    sub_1004C99E8();
  }
}

void sub_1004E75E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1004C99E8();

  }
}

void sub_1004E794C(void *a1, uint64_t (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  NSString v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  NSObject **v62;
  NSObject *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  id v78;
  void *v79;
  id v80;
  unint64_t v81;
  unint64_t isa;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  int v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  const char *v125;
  uint64_t v126;
  uint64_t v127;
  const char *v128;
  const char *v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  const char *v137;
  const char *v138;
  id v139;
  Class v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t i;
  id v145;
  void *v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint8_t *v153;
  NSObject *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, char *, uint64_t);
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v161;
  uint64_t v162;
  id v163;
  int v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t (*v174)(char *, uint64_t, uint64_t);
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178[2];
  NSObject *v179;
  uint64_t v180;

  v174 = a2;
  v163 = a1;
  v3 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v3);
  v5 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD **)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v173 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v167 = (char *)&v152 - v11;
  v12 = __chkstk_darwin(v10);
  v165 = (char *)&v152 - v13;
  v14 = __chkstk_darwin(v12);
  v170 = (char *)&v152 - v15;
  __chkstk_darwin(v14);
  v171 = (char *)&v152 - v16;
  v155 = sub_100008384(&qword_1007B7280);
  v157 = *(_QWORD *)(v155 - 8);
  v17 = __chkstk_darwin(v155);
  v156 = (uint64_t)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v159 = (uint64_t)&v152 - v20;
  v21 = __chkstk_darwin(v19);
  v169 = (char *)&v152 - v22;
  v23 = __chkstk_darwin(v21);
  v172 = (uint64_t)&v152 - v24;
  v25 = __chkstk_darwin(v23);
  v161 = ((char *)&v152 - v26);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v152 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v152 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v152 - v33;
  v166 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v168 = v2;
  v35 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v35)
  {
    v36 = objc_msgSend(v35, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v37 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7[7];
    v37((uint64_t)v34, 0, 1, v6);
  }
  else
  {
    v37 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7[7];
    v37((uint64_t)&v152 - v33, 1, 1, v6);
  }
  v38 = objc_msgSend(v174, "identifier");
  v39 = v171;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v38);

  v158 = (void (*)(char *, char *, uint64_t))v7[2];
  v158(v32, v39, v6);
  v160 = v37;
  v37((uint64_t)v32, 0, 1, v6);
  v40 = (uint64_t)&v5[*(int *)(v3 + 48)];
  v41 = &qword_1007B7280;
  sub_100221F28((uint64_t)v32, (uint64_t)v5, &qword_1007B7280);
  sub_100221F28((uint64_t)v34, v40, &qword_1007B7280);
  v175 = v7;
  v42 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  v43 = v42(v5, 1, v6);
  v176 = v6;
  if (v43 == 1)
  {
    sub_10000D0F0((uint64_t)v32, &qword_1007B7280);
    if (v42((char *)v40, 1, v6) == 1)
    {
      v44 = -1;
    }
    else
    {
      v41 = &qword_1007B6470;
      v44 = 0;
    }
    v164 = v44;
  }
  else
  {
    sub_100221F28((uint64_t)v5, (uint64_t)v29, &qword_1007B7280);
    if (v42((char *)v40, 1, v6) == 1)
    {
      sub_10000D0F0((uint64_t)v32, &qword_1007B7280);
      ((void (*)(char *, uint64_t))v175[1])(v29, v6);
      v164 = 0;
      v41 = &qword_1007B6470;
    }
    else
    {
      v45 = v175;
      v46 = (uint64_t)v170;
      ((void (*)(char *, uint64_t, uint64_t))v175[4])(v170, v40, v6);
      v47 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v164 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v46, v6, v47);
      v48 = (void (*)(uint64_t, uint64_t))v45[1];
      v48(v46, v6);
      v41 = &qword_1007B7280;
      sub_10000D0F0((uint64_t)v32, &qword_1007B7280);
      v48((uint64_t)v29, v6);
    }
  }
  v49 = (uint64_t)v174;
  sub_10000D0F0((uint64_t)v5, v41);
  v50 = objc_opt_self(CBPeripheral);
  v51 = swift_dynamicCastObjCClass(v49, v50);
  if (v51)
  {
    v52 = (void *)v51;
    if ((sub_1004EF4DC() & 1) != 0)
    {
      v53 = String._bridgeToObjectiveC()();
      v54 = objc_msgSend(v52, "hasTag:", v53);

    }
    else
    {
      v54 = 1;
    }
    v55 = v54 ^ 1;
  }
  else
  {
    v55 = 0;
  }
  v174 = v42;
  v170 = v34;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v56 = type metadata accessor for Logger(0);
  v57 = sub_100221DF8(v56, (uint64_t)qword_1007C37A0);
  v58 = (id)v49;
  v162 = v57;
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.default.getter(v59);
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc(24, -1);
    v62 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v61 = 138412802;
    v179 = v58;
    v63 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v61 + 4);
    *v62 = v58;

    *(_WORD *)(v61 + 12) = 1024;
    LODWORD(v179) = v164 & 1;
    v49 = (uint64_t)&v179 + 4;
    v64 = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, (char *)&v179 + 4, v61 + 14);
    *(_WORD *)(v61 + 18) = 1024;
    v65 = v55;
    LODWORD(v179) = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, (char *)&v179 + 4, v61 + 20);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "peerDidCompletePairing: %@, isStoredPeripheral: %{BOOL}d, isTagged: %{BOOL}d", (uint8_t *)v61, 0x18u);
    v66 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v62, 1, v66);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v61, -1, -1);
    v67 = v175;
    v68 = (uint64_t)v170;
    v69 = v165;
  }
  else
  {
    v65 = v55;

    v59 = v58;
    v67 = v175;
    v68 = (uint64_t)v170;
    v69 = v165;
    v64 = v168;
  }

  v70 = *(_QWORD *)(v64 + v166) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(_BYTE *)(v70 + 8) & 1) != 0)
    goto LABEL_97;
  v71 = *(_QWORD *)v70;
  if ((v71 | 2) == 3)
  {
    if (!v65)
    {
LABEL_97:
      ((void (*)(char *, uint64_t))v67[1])(v171, v176);
      sub_10000D0F0(v68, &qword_1007B7280);
      return;
    }
  }
  else
  {
    if (v71 == 4)
      v72 = v65;
    else
      v72 = 0;
    if ((v72 & 1) == 0)
      goto LABEL_97;
  }
  sub_1004D0A8C();
  v74 = v73;
  if ((unint64_t)v73 >> 62)
  {
    if (v73 >= 0)
      v73 &= 0xFFFFFFFFFFFFFF8uLL;
    v75 = _CocoaArrayWrapper.endIndex.getter(v73);
  }
  else
  {
    v75 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v154 = v58;
  if (v75)
  {
    v179 = _swiftEmptyArrayStorage;
    sub_100229C0C(0, v75 & ~(v75 >> 63), 0);
    if (v75 < 0)
    {
      __break(1u);
      goto LABEL_88;
    }
    v76 = 0;
    v77 = v179;
    do
    {
      if ((v74 & 0xC000000000000001) != 0)
        v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v74);
      else
        v78 = *(id *)(v74 + 8 * v76 + 32);
      v79 = v78;
      v80 = objc_msgSend(v78, "identifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v80);

      v179 = v77;
      isa = (unint64_t)v77[2].isa;
      v81 = (unint64_t)v77[3].isa;
      if (isa >= v81 >> 1)
      {
        sub_100229C0C(v81 > 1, isa + 1, 1);
        v77 = v179;
      }
      ++v76;
      v77[2].isa = (Class)(isa + 1);
      ((void (*)(unint64_t, id, uint64_t))v67[4])((unint64_t)v77+ ((*((unsigned __int8 *)v67 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v67 + 80))+ v67[9] * isa, v69, v176);
    }
    while (v75 != v76);
    *(_QWORD *)&v83 = swift_bridgeObjectRelease((const char *)v74).n128_u64[0];
    v58 = v154;
    v64 = v168;
  }
  else
  {
    *(_QWORD *)&v83 = swift_bridgeObjectRelease((const char *)v74).n128_u64[0];
    v77 = _swiftEmptyArrayStorage;
  }
  if (v77[2].isa < (Class)2)
  {
    swift_bridgeObjectRelease((const char *)v77, v83);
    goto LABEL_93;
  }
  v85 = sub_100008384((uint64_t *)&unk_1007C4380);
  v86 = v64;
  v87 = *(_QWORD *)(v157 + 72);
  v88 = *(unsigned __int8 *)(v157 + 80);
  v89 = (v88 + 32) & ~v88;
  v90 = swift_allocObject(v85, v89 + 3 * v87, v88 | 7);
  *(_OWORD *)(v90 + 16) = xmmword_1005CF140;
  v91 = v90 + v89;
  sub_100221F28((uint64_t)v170, v90 + v89, &qword_1007B7280);
  v92 = v86 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair;
  swift_beginAccess(v92, &v179, 0, 0);
  sub_100221F28(v92, v90 + v89 + v87, &qword_1007B7280);
  if (v77[2].isa)
  {
    v93 = v176;
    v158((char *)(v91 + 2 * v87), (char *)v77 + ((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80)), v176);
    v94 = 0;
  }
  else
  {
    v94 = 1;
    v93 = v176;
  }
  v160(v91 + 2 * v87, v94, 1, v93);
  v95 = swift_bridgeObjectRetain_n(v90, 2);
  v96 = Logger.logObject.getter(v95);
  v97 = static os_log_type_t.error.getter(v96);
  v98 = v97;
  if (os_log_type_enabled(v96, v97))
  {
    LODWORD(v165) = v98;
    v99 = (uint8_t *)swift_slowAlloc(12, -1);
    v157 = swift_slowAlloc(32, -1);
    v178[0] = v157;
    *(_DWORD *)v99 = 136315138;
    v153 = v99 + 4;
    swift_bridgeObjectRetain((const char *)v90);
    v101 = Array.description.getter(v100, v155);
    v103 = v102;
    swift_bridgeObjectRelease((const char *)v90);
    v177 = sub_100228BD8(v101, (unint64_t)v103, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v153);
    swift_bridgeObjectRelease_n(v90, 2);
    swift_bridgeObjectRelease(v103);
    _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v165, "peerDidCompletePairing - b332sToKeep: %s", v99, 0xCu);
    v104 = v157;
    swift_arrayDestroy(v157, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v104, -1, -1);
    swift_slowDealloc(v99, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v90, 2);
  }
  v105 = *(_QWORD *)(v90 + 16);
  v106 = (uint64_t)v169;
  if (v105)
  {
    v165 = (char *)v90;
    swift_bridgeObjectRetain((const char *)v90);
    v107 = (char *)_swiftEmptyArrayStorage;
    do
    {
      v108 = v172;
      sub_100221F28(v91, v172, &qword_1007B7280);
      sub_1004B4544(v108, v106);
      if (v174((char *)v106, 1, v93) == 1)
      {
        sub_10000D0F0(v106, &qword_1007B7280);
      }
      else
      {
        v109 = (void (*)(char *, uint64_t, uint64_t))v175[4];
        v110 = v167;
        v109(v167, v106, v93);
        v109(v173, (uint64_t)v110, v93);
        if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
          v107 = (char *)sub_100228BB0(0, *((_QWORD *)v107 + 2) + 1, 1, (unint64_t)v107);
        v112 = *((_QWORD *)v107 + 2);
        v111 = *((_QWORD *)v107 + 3);
        if (v112 >= v111 >> 1)
          v107 = (char *)sub_100228BB0(v111 > 1, v112 + 1, 1, (unint64_t)v107);
        *((_QWORD *)v107 + 2) = v112 + 1;
        v109(&v107[((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80))+ v175[9] * v112], (uint64_t)v173, v93);
        v106 = (uint64_t)v169;
      }
      v91 += v87;
      --v105;
    }
    while (v105);
    swift_bridgeObjectRelease_n(v165, 2);
  }
  else
  {
    swift_bridgeObjectRelease((const char *)v90);
    v107 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain((const char *)v77);
  v113 = sub_1004F0434((uint64_t)v107, (const char *)v77);
  v114 = swift_bridgeObjectRelease((const char *)v77);
  v58 = v161;
  v115 = v159;
  if (*(_QWORD *)(v113 + 16))
  {
    ((void (*)(NSObject *, unint64_t, uint64_t, __n128))v158)(v161, v113 + ((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80)), v93, v114);
    v116 = 0;
  }
  else
  {
    v116 = 1;
  }
  v160((uint64_t)v58, v116, 1, v93);
  swift_bridgeObjectRelease((const char *)v113);
  v117 = sub_100221F28((uint64_t)v58, v115, &qword_1007B7280);
  v118 = Logger.logObject.getter(v117);
  v119 = static os_log_type_t.error.getter(v118);
  if (os_log_type_enabled(v118, v119))
  {
    v120 = (uint8_t *)swift_slowAlloc(12, -1);
    v121 = swift_slowAlloc(32, -1);
    v178[0] = v121;
    *(_DWORD *)v120 = 136315138;
    v122 = v115;
    v123 = v156;
    sub_100221F28(v122, v156, &qword_1007B7280);
    v124 = v174((char *)v123, 1, v93);
    if ((_DWORD)v124 == 1)
    {
      sub_10000D0F0(v123, &qword_1007B7280);
      v125 = (const char *)0xEC0000003E676E69;
      v126 = 0x7065656B206F6E3CLL;
    }
    else
    {
      v126 = UUID.description.getter(v124);
      v125 = v128;
      ((void (*)(uint64_t, uint64_t))v175[1])(v123, v93);
    }
    v177 = sub_100228BD8(v126, (unint64_t)v125, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v120 + 4);
    swift_bridgeObjectRelease(v125);
    sub_10000D0F0(v159, &qword_1007B7280);
    _os_log_impl((void *)&_mh_execute_header, v118, v119, "peerDidCompletePairing - keeping: %s", v120, 0xCu);
    swift_arrayDestroy(v121, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v121, -1, -1);
    swift_slowDealloc(v120, -1, -1);

    v58 = v161;
  }
  else
  {
    sub_10000D0F0(v115, &qword_1007B7280);

  }
  __chkstk_darwin(v127);
  *(&v152 - 2) = (uint64_t)v58;
  v129 = (const char *)sub_1004C4428((uint64_t (*)(char *))sub_1004F456C, (uint64_t)(&v152 - 4), (const char *)v77);
  v130 = swift_bridgeObjectRetain_n(v129, 2);
  v131 = Logger.logObject.getter(v130);
  v132 = static os_log_type_t.error.getter(v131);
  if (os_log_type_enabled(v131, v132))
  {
    v133 = (uint8_t *)swift_slowAlloc(12, -1);
    v134 = swift_slowAlloc(32, -1);
    v178[0] = v134;
    *(_DWORD *)v133 = 136315138;
    swift_bridgeObjectRetain(v129);
    v136 = Array.description.getter(v135, v176);
    v138 = v137;
    swift_bridgeObjectRelease(v129);
    v177 = sub_100228BD8(v136, (unint64_t)v138, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v133 + 4);
    swift_bridgeObjectRelease_n(v129, 2);
    v58 = v161;
    swift_bridgeObjectRelease(v138);
    _os_log_impl((void *)&_mh_execute_header, v131, v132, "peerDidCompletePairing - otherPairedOnes: %s", v133, 0xCu);
    swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v134, -1, -1);
    swift_slowDealloc(v133, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v129, 2);
  }
  v64 = v168;
  v69 = v163;
  v139 = *(id *)(v168 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
  v140 = Array._bridgeToObjectiveC()().super.isa;
  v141 = objc_msgSend(v139, "retrievePeripheralsWithIdentifiers:", v140, swift_bridgeObjectRelease(v129).n128_f64[0]);

  v142 = sub_100221EDC(0, &qword_1007C4238, CBPeripheral_ptr);
  v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v141, v142);

  if (!((unint64_t)v49 >> 62))
  {
    v143 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v175;
    if (v143)
      goto LABEL_78;
LABEL_92:
    swift_bridgeObjectRelease((const char *)v49);
    v84 = sub_10000D0F0((uint64_t)v58, &qword_1007B7280);
    v58 = v154;
LABEL_93:
    v68 = (uint64_t)v170;
    if ((v164 & 1) != 0)
    {
      v148 = Logger.logObject.getter(v84);
      v149 = static os_log_type_t.default.getter(v148);
      if (os_log_type_enabled(v148, v149))
      {
        v150 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v150 = 0;
        _os_log_impl((void *)&_mh_execute_header, v148, v149, "Unset OOBP enabled flag in peerDidCompletePairing", v150, 2u);
        swift_slowDealloc(v150, -1, -1);
      }

      objc_msgSend(v163, "setOOBPairingEnabled:forPeer:", 0, v58);
      v151 = *(_QWORD *)(v64 + v166);
      *(_BYTE *)(v151 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed) = 1;
      swift_retain();
      sub_1004C4E78();
      swift_release(v151);
      sub_1004C99E8();
    }
    goto LABEL_97;
  }
LABEL_88:
  if (v49 < 0)
    v147 = v49;
  else
    v147 = v49 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v49);
  v143 = _CocoaArrayWrapper.endIndex.getter(v147);
  swift_bridgeObjectRelease((const char *)v49);
  v67 = v175;
  if (!v143)
    goto LABEL_92;
LABEL_78:
  if (v143 >= 1)
  {
    for (i = 0; i != v143; ++i)
    {
      if ((v49 & 0xC000000000000001) != 0)
        v145 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v49);
      else
        v145 = *(id *)(v49 + 8 * i + 32);
      v146 = v145;
      objc_msgSend(v69, "unpairPeer:", v145);

    }
    goto LABEL_92;
  }
  __break(1u);
}

uint64_t sub_1004E8BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7280);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v24 - v14, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100221F28((uint64_t)v15, (uint64_t)v9, &qword_1007B7280);
  sub_100221F28(a2, v16, &qword_1007B7280);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_100221F28((uint64_t)v9, (uint64_t)v13, &qword_1007B7280);
    if (v17(v16, 1, v4) != 1)
    {
      v19 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v25, v16, v4);
      v20 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v19, v4, v20);
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v19, v4);
      sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
      v22(v13, v4);
      sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
      v18 = v21 ^ 1;
      return v18 & 1;
    }
    sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_6;
  }
  sub_10000D0F0((uint64_t)v15, &qword_1007B7280);
  if (v17(v16, 1, v4) != 1)
  {
LABEL_6:
    sub_10000D0F0((uint64_t)v9, &qword_1007B6470);
    v18 = 1;
    return v18 & 1;
  }
  sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
  v18 = 0;
  return v18 & 1;
}

void sub_1004E8EF0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  char **v23;
  void *v24;
  id v25;
  uint64_t *v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  id v31;
  __n128 v32;
  char *v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject **v38;
  NSObject *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;

  v3 = v2;
  v55 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - v9;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007C37A0);
  v13 = a2;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v54 = v5;
    v17 = (uint8_t *)v16;
    v50 = (_QWORD *)swift_slowAlloc(8, -1);
    v51 = v10;
    v52 = v12;
    *(_DWORD *)v17 = 138412290;
    v58 = v13;
    v18 = v13;
    v10 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v17 + 4);
    v19 = v50;
    *v50 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "peerDidUnpair: %@", v17, 0xCu);
    v20 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v19, 1, v20);
    swift_slowDealloc(v19, -1, -1);
    v21 = v17;
    v5 = v54;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  v54 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  swift_retain();
  v23 = &selRef_handleStreamResponse_;
  v24 = v13;
  v25 = objc_msgSend(v13, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v26 = (uint64_t *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
  *(_QWORD *)&v27 = swift_beginAccess(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair, &v58, 0, 0).n128_u64[0];
  v28 = *v26;
  swift_bridgeObjectRetain((const char *)v28, v27);
  swift_release(v22);
  if (*(_QWORD *)(v28 + 16) && (v29 = sub_10045C2DC((uint64_t)v10), (v30 & 1) != 0))
  {
    v31 = *(id *)(*(_QWORD *)(v28 + 56) + 8 * v29);
    v32 = swift_bridgeObjectRelease((const char *)v28);
    v33 = *(char **)(v6 + 8);
    ((void (*)(char *, uint64_t, __n128))v33)(v10, v5, v32);

    v34 = v24;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v52 = v3;
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = (NSObject **)swift_slowAlloc(8, -1);
      v51 = v33;
      *(_DWORD *)v37 = 138412290;
      v56 = v34;
      v39 = v34;
      v23 = &selRef_handleStreamResponse_;
      v33 = v51;
      v3 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v37 + 4);
      *v38 = v34;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "peerDidUnpair - removing from needingUnpair: %@", v37, 0xCu);
      v40 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v38, 1, v40);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {

      v35 = v34;
    }

    v42 = *(_QWORD *)(v3 + v54);
    swift_retain();
    v43 = objc_msgSend(v34, v23[141]);
    v44 = (uint64_t)v53;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v43);

    swift_beginAccess(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair, &v56, 33, 0);
    v45 = (void *)sub_10026B35C(v44);
    ((void (*)(uint64_t, uint64_t))v33)(v44, v5);
    swift_endAccess(&v56);
    swift_release(v42);

  }
  else
  {
    v41 = swift_bridgeObjectRelease((const char *)v28);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v10, v5, v41);
  }
  sub_1004D0A8C();
  v47 = (const char *)v46;
  if ((unint64_t)v46 >> 62)
  {
    if (v46 >= 0)
      v46 &= 0xFFFFFFFFFFFFFF8uLL;
    v48 = _CocoaArrayWrapper.endIndex.getter(v46);
  }
  else
  {
    v48 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v47);
  if (!v48)
  {
    v49 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
    *(_QWORD *)v49 = 0;
    *(_BYTE *)(v49 + 8) = 1;
    sub_1004C6468();
    *(_QWORD *)(*(_QWORD *)(v3 + v54)
              + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = 0;
  }
  sub_1004C99E8();
}

void sub_1004E946C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  void (*v34)(char *, uint64_t);
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  id v49;
  char v50;
  const char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  const char *v58;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v51 - v9;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v11 = type metadata accessor for Logger(0);
  sub_100221DF8(v11, (uint64_t)qword_1007C37A0);
  v12 = a1;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v15 = os_log_type_enabled(v13, v14);
  v56 = v10;
  if (v15)
  {
    v52 = v8;
    v53 = v5;
    v54 = v4;
    v55 = a2;
    v16 = swift_slowAlloc(22, -1);
    v17 = (_QWORD *)swift_slowAlloc(8, -1);
    v51 = (const char *)swift_slowAlloc(32, -1);
    v57 = (uint64_t)v12;
    v58 = v51;
    *(_DWORD *)v16 = 138412546;
    v18 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v16 + 4);
    *v17 = v12;

    *(_WORD *)(v16 + 12) = 2080;
    v19 = objc_msgSend(v18, "services");
    if (v19)
    {
      v20 = v19;
      v21 = sub_100221EDC(0, &qword_1007C4378, CBService_ptr);
      v22 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

      v23 = Array.description.getter(v22, v21);
      v25 = v24;
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v25 = (const char *)0x800000010061F0A0;
      v23 = 0xD000000000000018;
    }
    v57 = sub_100228BD8(v23, (unint64_t)v25, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v16 + 14);

    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "peripheral: %@, didDiscoverServices: %s", (uint8_t *)v16, 0x16u);
    v26 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v17, 1, v26);
    swift_slowDealloc(v17, -1, -1);
    v27 = v51;
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v4 = v54;
    a2 = v55;
    v8 = v52;
    v5 = v53;
  }
  else
  {

  }
  v28 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v29 = *(void **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v30, "identifier");
    v32 = v56;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

    v33 = objc_msgSend(v12, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v33);

    LOBYTE(v33) = static UUID.== infix(_:_:)(v32, v8);
    v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v8, v4);
    v34(v32, v4);
    if ((v33 & 1) == 0
      || (v35 = objc_msgSend(v12, "services")) == 0)
    {
LABEL_30:

      return;
    }
    v36 = v35;
    v37 = sub_100221EDC(0, &qword_1007C4378, CBService_ptr);
    v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v48 = v38;
      else
        v48 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v38);
      v39 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease((const char *)v38);
      if (v39)
        goto LABEL_14;
    }
    else
    {
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v39)
      {
LABEL_14:
        v55 = a2;
        v58 = (const char *)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v39);
        if (v39 < 0)
        {
          __break(1u);
          return;
        }
        v40 = 0;
        do
        {
          if ((v38 & 0xC000000000000001) != 0)
            v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
          else
            v41 = *(id *)(v38 + 8 * v40 + 32);
          v42 = v41;
          ++v40;
          v43 = objc_msgSend(v41, "UUID");

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
          v45 = *((_QWORD *)v58 + 2);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
          v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
          specialized ContiguousArray._endMutation()(v46);
        }
        while (v39 != v40);
        v47 = v58;
        swift_bridgeObjectRelease((const char *)v38);
        a2 = v55;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease((const char *)v38);
    v47 = (const char *)_swiftEmptyArrayStorage;
LABEL_26:
    if (qword_1007B4200 != -1)
      swift_once(&qword_1007B4200, sub_1004C47E4);
    v49 = (id)qword_1007D8588;
    v50 = sub_1002EF76C((uint64_t)v49, (uint64_t)v47);
    swift_bridgeObjectRelease(v47);

    if ((v50 & 1) != 0)
    {
      *(_BYTE *)(*(_QWORD *)(a2 + v28)
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hidServiceDiscovered) = 1;
      sub_1004C99E8();
    }
    goto LABEL_30;
  }
}

uint64_t sub_1004E9A40(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  int IsSmartCoverClosed;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v21;
  uint64_t v22;

  v2 = v1;
  v4 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted) & 1) != 0)
  {
    v5 = 1;
    v6 = 1;
  }
  else
  {
    v6 = sub_1004C60F0();
    v5 = *(_BYTE *)(v1 + v4);
  }
  *(_BYTE *)(v1 + v4) = v6 & 1;
  sub_1004C5F9C(v5);
  IsSmartCoverClosed = BKSHIDServicesIsSmartCoverClosed();
  v8 = *(unsigned __int8 *)(v1 + v4);
  v9 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "isBuddyCompleted");
  if (!IsSmartCoverClosed && (a1 & 1) != 0)
    SBSUndimScreen();
  v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (IsSmartCoverClosed)
    v11 = 0;
  else
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) & v9 & v8;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100221DF8(v12, (uint64_t)qword_1007C37A0);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = IsSmartCoverClosed == 0;
    v17 = swift_slowAlloc(26, -1);
    *(_DWORD *)v17 = 67109888;
    v21 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4);
    *(_WORD *)(v17 + 8) = 1024;
    v21 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 10);
    *(_WORD *)(v17 + 14) = 1024;
    v21 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 16);
    *(_WORD *)(v17 + 20) = 1024;
    v21 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 22);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "sendsUIUpdates = %{BOOL}d, coverIsOpen: %{BOOL}d, sbStarted: %{BOOL}d, buddyComplete: %{BOOL}d", (uint8_t *)v17, 0x1Au);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = *(_QWORD *)(v2 + v10);
  v19 = *(_BYTE *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  *(_BYTE *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = v11;
  swift_retain();
  sub_1004C4854(v19, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
  return swift_release(v18);
}

void sub_1004E9CCC(uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, const char *a5, uint64_t a6, unint64_t a7, char *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  __n128 v42;
  unint64_t v43;
  const char *v44;
  os_log_t v45;
  void *v46;
  unint64_t v47;
  void *v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  uint64_t v55;
  char v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  id v60;
  NSString v61;
  NSString v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  const char *v72;
  unint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  const char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  unint64_t v84;
  uint8_t *v85;
  unint64_t v86;
  char v87;
  const char *v88;
  _BOOL4 v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  id v93;
  id v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  io_object_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  const char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  char *v127;
  double v128;
  void (*v129)(char *, uint64_t);
  id v130;
  double v131;
  char *v132;
  const char *v133;
  uint64_t v134;
  const char *v135;
  unint64_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  const char *v140;
  double v141;
  uint64_t v142;
  char v143;
  double v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  char v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  const char *v155;
  unint64_t v156;
  char v157;
  int v158;
  unint64_t v159;
  const char *v160;
  unint64_t *v161;
  const char *v162;
  id v163;
  void *v164;
  _QWORD *v165;
  const char *v166;
  const char *v167;
  double v168;
  uint64_t *v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  const char *v175;
  const char *v176;
  double v177;
  uint64_t v178;
  unint64_t v179;
  char *v180;
  NSObject *v181;
  char *v182;
  os_log_type_t v183;
  uint8_t *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  const char *v188;
  const char *v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t);
  unint64_t v192;
  char *v193;
  unsigned int v194;
  void (*v195)(char *);
  int v196;
  os_log_t v197;
  void *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  const char *v210;
  const char *v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  unint64_t v215;
  unint64_t v216;
  const char *v217;
  unint64_t v218;
  const char *v219[3];
  __int128 v220;
  __int128 v221;

  v208 = a8;
  v212 = a7;
  v213 = a1;
  v13 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v13);
  v206 = (char *)&v190 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for Date(0);
  v207 = *(_QWORD *)(v201 - 8);
  v15 = __chkstk_darwin(v201);
  v199 = (char *)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v190 - v17;
  v19 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v19);
  v202 = (char *)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v21 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v23 = (char *)&v190 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100221DF8(v24, (uint64_t)qword_1007C37A0);
  swift_bridgeObjectRetain(a2);
  sub_10022E4A8(a3, a4);
  swift_bridgeObjectRetain(a5);
  v26 = v212;
  sub_10022E4A8(a6, v212);
  swift_bridgeObjectRetain(a2);
  sub_10022E4A8(a3, a4);
  swift_bridgeObjectRetain(a5);
  v27 = sub_10022E4A8(a6, v26);
  v209 = v25;
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter(v28);
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v210 = a5;
  v205 = a4;
  v204 = a3;
  v211 = a2;
  v200 = v18;
  if (v31)
  {
    v32 = swift_slowAlloc(42, -1);
    v197 = v28;
    v33 = a2;
    v34 = v32;
    v198 = (void *)swift_slowAlloc(128, -1);
    v214 = v198;
    *(_DWORD *)v34 = 136315906;
    v35 = a5;
    swift_bridgeObjectRetain(v33);
    v218 = sub_100228BD8(v213, (unint64_t)v33, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, v219, v34 + 4);
    swift_bridgeObjectRelease_n(v33, 3);
    *(_WORD *)(v34 + 12) = 2080;
    v218 = 0;
    v219[0] = (const char *)0xE000000000000000;
    *(_QWORD *)&v220 = a3;
    *((_QWORD *)&v220 + 1) = a4;
    v194 = enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:);
    v195 = *(void (**)(char *))(v21 + 104);
    v196 = v30;
    v36 = v203;
    v195(v23);
    v192 = sub_100358394();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v220, v23, 58, 0xE100000000000000, &type metadata for Data, v192);
    v191 = *(void (**)(char *, uint64_t))(v21 + 8);
    v191(v23, v36);
    v37 = v219[0];
    v218 = sub_100228BD8(v218, (unint64_t)v219[0], (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, v219, v34 + 14);
    swift_bridgeObjectRelease(v37);
    sub_100225AB4(a3, a4);
    sub_100225AB4(a3, a4);
    *(_WORD *)(v34 + 22) = 2080;
    swift_bridgeObjectRetain(a5);
    v193 = (char *)&type metadata for Any + 8;
    v39 = Dictionary.description.getter(v38, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v41 = v40;
    swift_bridgeObjectRelease(v35);
    v218 = sub_100228BD8(v39, (unint64_t)v41, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, v219, v34 + 24);
    swift_bridgeObjectRelease_n(v35, 2);
    v42 = swift_bridgeObjectRelease(v41);
    *(_WORD *)(v34 + 32) = 2080;
    v218 = 0;
    v219[0] = (const char *)0xE000000000000000;
    v43 = v212;
    *(_QWORD *)&v220 = a6;
    *((_QWORD *)&v220 + 1) = v212;
    ((void (*)(char *, _QWORD, uint64_t, __n128))v195)(v23, v194, v36, v42);
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v220, v23, 58, 0xE100000000000000, &type metadata for Data, v192);
    v191(v23, v36);
    v44 = v219[0];
    v218 = sub_100228BD8(v218, (unint64_t)v219[0], (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, v219, v34 + 34);
    swift_bridgeObjectRelease(v44);
    sub_100225AB4(a6, v43);
    sub_100225AB4(a6, v43);
    v45 = v197;
    _os_log_impl((void *)&_mh_execute_header, v197, (os_log_type_t)v196, "!!! Accessory attached: %s, blePairingUUID: %s, accInfoDict: %s, supportedPairTypes: %s", (uint8_t *)v34, 0x2Au);
    v46 = v198;
    swift_arrayDestroy(v198, 4, v193);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
    sub_100225AB4(a3, a4);
    sub_100225AB4(a3, a4);
    swift_bridgeObjectRelease_n(a5, 2);
    v47 = v212;
    sub_100225AB4(a6, v212);
    sub_100225AB4(a6, v47);

  }
  v48 = (void *)objc_opt_self(NSUserDefaults);
  v49 = objc_msgSend(v48, "standardUserDefaults");
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v49, "stringForKey:", v50);

  if (v51)
  {
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    if (v52 == v213 && v54 == v211)
    {
      swift_bridgeObjectRelease(v211);
LABEL_11:
      v57 = Logger.logObject.getter(v55);
      v58 = static os_log_type_t.default.getter(v57);
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v59 = 0;
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Got same accessoryUID for this attach. Ignoring.", v59, 2u);
        swift_slowDealloc(v59, -1, -1);
      }

      return;
    }
    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v213, v211, v52, v54, 0);
    swift_bridgeObjectRelease(v54);
    if ((v56 & 1) != 0)
      goto LABEL_11;
  }
  v60 = objc_msgSend(v48, "standardUserDefaults");
  v61 = String._bridgeToObjectiveC()();
  v62 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "setObject:forKey:", v61, v62);

  v64 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v65 = v208;
  v66 = v207;
  if (*(_BYTE *)(*(_QWORD *)&v208[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) == 1)
  {
    v67 = Logger.logObject.getter(v63);
    v68 = static os_log_type_t.default.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Pencil attached while previous Pencil is still attached, resetting state", v69, 2u);
      swift_slowDealloc(v69, -1, -1);
    }

    v70 = type metadata accessor for UUID(0);
    v71 = (unint64_t)v202;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v202, 1, 1, v70);
    sub_1004CF030(v71, 0);
    sub_10000D0F0(v71, &qword_1007B7280);
  }
  sub_1004E3DEC();
  v214 = (id)0xD00000000000001BLL;
  v215 = 0x800000010061F020;
  AnyHashable.init<A>(_:)(&v218, &v214, &type metadata for String, &protocol witness table for String);
  v72 = v210;
  if (*((_QWORD *)v210 + 2) && (v73 = sub_10045C1D0((uint64_t)&v218), (v74 & 1) != 0))
  {
    sub_10022E77C(*((_QWORD *)v72 + 7) + 32 * v73, (uint64_t)&v220);
  }
  else
  {
    v220 = 0u;
    v221 = 0u;
  }
  sub_10022E6C0((uint64_t)&v218);
  if (*((_QWORD *)&v221 + 1))
  {
    if ((swift_dynamicCast(&v214, &v220, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v76 = (uint64_t)v214;
      v75 = v215;
      if (v214 == (id)0x6E776F6E6B6E55 && v215 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease((const char *)0xE700000000000000);
      }
      else
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v214, v215, 0x6E776F6E6B6E55, 0xE700000000000000, 0) & 1) != 0)
          goto LABEL_34;
        v77 = HIBYTE(v75) & 0xF;
        if ((v75 & 0x2000000000000000) == 0)
          v77 = v76 & 0xFFFFFFFFFFFFLL;
        if (!v77)
        {
LABEL_34:
          swift_bridgeObjectRelease((const char *)v75);
        }
        else
        {
          v78 = (uint64_t *)(*(_QWORD *)&v65[v64]
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
          v79 = (const char *)v78[1];
          *v78 = v76;
          v78[1] = v75;
          swift_bridgeObjectRetain_n(v75, 2);
          swift_bridgeObjectRelease(v79);
          v81 = Logger.logObject.getter(v80);
          v82 = static os_log_type_t.default.getter(v81);
          if (os_log_type_enabled(v81, v82))
          {
            v83 = (uint8_t *)swift_slowAlloc(12, -1);
            v212 = swift_slowAlloc(32, -1);
            v218 = v212;
            *(_DWORD *)v83 = 136315138;
            v203 = (uint64_t)(v83 + 4);
            swift_bridgeObjectRetain((const char *)v75);
            *(_QWORD *)&v220 = sub_100228BD8(v76, v75, (uint64_t *)&v218);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v220, (char *)&v220 + 8, v203);
            swift_bridgeObjectRelease_n(v75, 3);
            _os_log_impl((void *)&_mh_execute_header, v81, v82, "Received hash! setting on sessionState: %s", v83, 0xCu);
            v84 = v212;
            swift_arrayDestroy(v212, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v84, -1, -1);
            v85 = v83;
            v66 = v207;
            swift_slowDealloc(v85, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v75, 2);
          }
          v65 = v208;
        }
      }
      v72 = v210;
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
  }
  v214 = (id)0xD000000000000017;
  v215 = 0x800000010061EF90;
  AnyHashable.init<A>(_:)(&v218, &v214, &type metadata for String, &protocol witness table for String);
  if (*((_QWORD *)v72 + 2) && (v86 = sub_10045C1D0((uint64_t)&v218), (v87 & 1) != 0))
  {
    sub_10022E77C(*((_QWORD *)v72 + 7) + 32 * v86, (uint64_t)&v220);
  }
  else
  {
    v220 = 0u;
    v221 = 0u;
  }
  sub_10022E6C0((uint64_t)&v218);
  if (!*((_QWORD *)&v221 + 1))
  {
    sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
    goto LABEL_46;
  }
  if ((swift_dynamicCast(&v214, &v220, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_46:
    v214 = (id)0xD00000000000001BLL;
    v215 = 0x800000010061F040;
    AnyHashable.init<A>(_:)(&v218, &v214, &type metadata for String, &protocol witness table for String);
    if (*((_QWORD *)v72 + 2) && (v90 = sub_10045C1D0((uint64_t)&v218), (v91 & 1) != 0))
    {
      sub_10022E77C(*((_QWORD *)v72 + 7) + 32 * v90, (uint64_t)&v220);
    }
    else
    {
      v220 = 0u;
      v221 = 0u;
    }
    sub_10022E6C0((uint64_t)&v218);
    if (*((_QWORD *)&v221 + 1))
    {
      v92 = sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
      if ((swift_dynamicCast(&v214, &v220, (char *)&type metadata for Any + 8, v92, 6) & 1) != 0)
      {
        v93 = v214;
        v94 = objc_msgSend(v214, "integerValue");

        v72 = v210;
        v89 = v94 == (id)1057;
        goto LABEL_55;
      }
    }
    else
    {
      sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
    }
    v89 = 0;
    goto LABEL_55;
  }
  v88 = (const char *)v215;
  if (v214 != (id)842544194 || v215 != 0xE400000000000000)
  {
    v124 = _stringCompareWithSmolCheck(_:_:expecting:)(v214, v215, 842544194, 0xE400000000000000, 0);
    swift_bridgeObjectRelease(v88);
    v72 = v210;
    if ((v124 & 1) != 0)
    {
      v89 = 1;
      goto LABEL_55;
    }
    goto LABEL_46;
  }
  swift_bridgeObjectRelease((const char *)0xE400000000000000);
  v89 = 1;
  v72 = v210;
LABEL_55:
  v214 = (id)0xD00000000000001CLL;
  v215 = 0x800000010061F060;
  AnyHashable.init<A>(_:)(&v218, &v214, &type metadata for String, &protocol witness table for String);
  if (*((_QWORD *)v72 + 2) && (v95 = sub_10045C1D0((uint64_t)&v218), (v96 & 1) != 0))
  {
    sub_10022E77C(*((_QWORD *)v72 + 7) + 32 * v95, (uint64_t)&v220);
  }
  else
  {
    v220 = 0u;
    v221 = 0u;
  }
  sub_10022E6C0((uint64_t)&v218);
  if (*((_QWORD *)&v221 + 1))
  {
    v97 = sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
    if ((swift_dynamicCast(&v214, &v220, (char *)&type metadata for Any + 8, v97, 6) & 1) != 0)
    {
      v98 = v214;
      v99 = objc_msgSend(v214, "integerValue");

      if (v99 == (id)1)
      {
        v100 = *(_QWORD *)&v65[v64];
        v101 = v100 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
        *(_QWORD *)v101 = 4;
        *(_BYTE *)(v101 + 8) = 0;
        v102 = v100 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag;
        v103 = *(const char **)(v102 + 8);
        *(_OWORD *)v102 = xmmword_1005DB170;
        v104 = swift_bridgeObjectRelease(v103).n128_u64[0];
        v105 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
        v106 = 1106;
        goto LABEL_69;
      }
    }
  }
  else
  {
    sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
  }
  if (v89)
  {
    v107 = *(_QWORD *)&v65[v64];
    v108 = v107 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    *(_QWORD *)v108 = 3;
    *(_BYTE *)(v108 + 8) = 0;
    v109 = v107 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag;
    v110 = *(const char **)(v109 + 8);
    *(_OWORD *)v109 = xmmword_1005DB1A0;
    v104 = swift_bridgeObjectRelease(v110).n128_u64[0];
    v105 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
    v106 = 482;
  }
  else
  {
    sub_1004F441C();
    if (v111)
    {
      IOObjectRelease(v111);
      v112 = *(_QWORD *)&v65[v64];
      v113 = v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      *(_QWORD *)v113 = 1;
      *(_BYTE *)(v113 + 8) = 0;
      v114 = v112 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag;
      v115 = *(const char **)(v114 + 8);
      *(_OWORD *)v114 = xmmword_1005DB180;
      v104 = swift_bridgeObjectRelease(v115).n128_u64[0];
      v105 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
      v106 = 332;
    }
    else
    {
      v116 = *(_QWORD *)&v65[v64];
      v117 = v116 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      *(_QWORD *)v117 = 2;
      *(_BYTE *)(v117 + 8) = 0;
      v118 = v116 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag;
      v119 = *(const char **)(v118 + 8);
      *(_OWORD *)v118 = xmmword_1005DB190;
      v104 = swift_bridgeObjectRelease(v119).n128_u64[0];
      v105 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
      v106 = 546;
    }
  }
LABEL_69:
  *(_QWORD *)v105 = v106;
  v120 = (uint64_t)v206;
  *(_BYTE *)(v105 + 8) = 0;
  v121 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(_BYTE *)(v121 + 8) & 1) != 0
    || *(_QWORD *)v121 != 3
    || (objc_msgSend(*(id *)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor], "screenOn", *(double *)&v104) & 1) != 0)
  {
    goto LABEL_98;
  }
  v122 = (uint64_t)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp];
  swift_beginAccess(&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp], &v214, 0, 0);
  sub_100221F28(v122, v120, &qword_1007C4330);
  v123 = v201;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v120, 1, v201) != 1)
  {
    v125 = v200;
    v126 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 32))(v200, v120, v123);
    v127 = v199;
    static Date.now.getter(v126);
    v128 = Date.timeIntervalSince(_:)(v125);
    v129 = *(void (**)(char *, uint64_t))(v66 + 8);
    v129(v127, v123);
    v130 = objc_msgSend(v48, "standardUserDefaults");
    v131 = sub_10044B630();

    if (v128 >= v131)
    {
      v138 = v125;
      v139 = v123;
    }
    else
    {
      v132 = v125;
      v133 = *(const char **)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum
                                + 8];
      if (v133)
      {
        v134 = *(_QWORD *)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum];
        v216 = 0xD00000000000001BLL;
        v217 = (const char *)0x800000010061F080;
        swift_bridgeObjectRetain(v133);
        AnyHashable.init<A>(_:)(&v218, &v216, &type metadata for String, &protocol witness table for String);
        v135 = v210;
        if (*((_QWORD *)v210 + 2) && (v136 = sub_10045C1D0((uint64_t)&v218), (v137 & 1) != 0))
        {
          sub_10022E77C(*((_QWORD *)v135 + 7) + 32 * v136, (uint64_t)&v220);
        }
        else
        {
          v220 = 0u;
          v221 = 0u;
        }
        sub_10022E6C0((uint64_t)&v218);
        if (*((_QWORD *)&v221 + 1))
        {
          if ((swift_dynamicCast(&v216, &v220, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v140 = v217;
            if (v134 == v216 && v133 == v217)
            {
              *(_QWORD *)&v141 = swift_bridgeObjectRelease(v217).n128_u64[0];
              swift_bridgeObjectRelease(v133, v141);
LABEL_93:
              v145 = Logger.logObject.getter(v142);
              v146 = static os_log_type_t.default.getter(v145);
              if (os_log_type_enabled(v145, v146))
              {
                v147 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v147 = 0;
                _os_log_impl((void *)&_mh_execute_header, v145, v146, "Detected case of USB re-enumeration causing reattach while screen is off. Not showing UI for pair", v147, 2u);
                swift_slowDealloc(v147, -1, -1);
              }

              v148 = *(_QWORD *)&v65[v64];
              v149 = *(_BYTE *)(v148 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
              *(_BYTE *)(v148 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
              swift_retain();
              sub_1004C4854(v149, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
              swift_release(v148);
              v129(v132, v201);
              v151 = 0;
              goto LABEL_99;
            }
            v143 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v133, v216, v217, 0);
            *(_QWORD *)&v144 = swift_bridgeObjectRelease(v140).n128_u64[0];
            swift_bridgeObjectRelease(v133, v144);
            if ((v143 & 1) != 0)
              goto LABEL_93;
          }
          else
          {
            swift_bridgeObjectRelease(v133);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v133);
          sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
        }
      }
      v138 = v132;
      v139 = v201;
    }
    v129(v138, v139);
    goto LABEL_98;
  }
  sub_10000D0F0(v120, &qword_1007C4330);
LABEL_98:
  v152 = *(_QWORD *)&v65[v64];
  v153 = *(_BYTE *)(v152 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  v151 = 1;
  *(_BYTE *)(v152 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 1;
  swift_retain();
  sub_1004C4854(v153, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
  swift_release(v152);
LABEL_99:
  v154 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(_BYTE *)(v154 + 8) & 1) == 0 && *(_QWORD *)v154 == 3)
  {
    *(_QWORD *)&v220 = 0xD00000000000001BLL;
    *((_QWORD *)&v220 + 1) = 0x800000010061F080;
    AnyHashable.init<A>(_:)(&v218, &v220, &type metadata for String, &protocol witness table for String);
    v155 = v210;
    if (*((_QWORD *)v210 + 2) && (v156 = sub_10045C1D0((uint64_t)&v218), (v157 & 1) != 0))
    {
      sub_10022E77C(*((_QWORD *)v155 + 7) + 32 * v156, (uint64_t)&v220);
    }
    else
    {
      v220 = 0u;
      v221 = 0u;
    }
    sub_10022E6C0((uint64_t)&v218);
    if (*((_QWORD *)&v221 + 1))
    {
      v158 = swift_dynamicCast(&v216, &v220, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      v159 = v216;
      v160 = v217;
      if (!v158)
      {
        v159 = 0;
        v160 = 0;
      }
    }
    else
    {
      sub_10000D0F0((uint64_t)&v220, (uint64_t *)&unk_1007B6890);
      v159 = 0;
      v160 = 0;
    }
    v161 = (unint64_t *)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum];
    v162 = *(const char **)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum + 8];
    *v161 = v159;
    v161[1] = (unint64_t)v160;
    *(_QWORD *)&v150 = swift_bridgeObjectRelease(v162).n128_u64[0];
  }
  objc_msgSend(v65, "resetUIUpdatesFlagWithUndimScreen:", v151, v150);
  *(_QWORD *)(*(_QWORD *)&v65[v64]
            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = 0;
  v163 = objc_msgSend(*(id *)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central], "sharedPairingAgent");
  if (v163)
  {
    v164 = v163;
    objc_msgSend(v163, "setDelegate:", v65);

    v165 = (_QWORD *)(*(_QWORD *)&v65[v64]
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
    v166 = (const char *)v165[1];
    v167 = v211;
    *v165 = v213;
    v165[1] = v167;
    *(_QWORD *)&v168 = swift_bridgeObjectRetain(v167).n128_u64[0];
    swift_bridgeObjectRelease(v166, v168);
    v169 = (uint64_t *)(*(_QWORD *)&v65[v64]
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
    v170 = *v169;
    v171 = v169[1];
    v172 = v204;
    v173 = v205;
    *v169 = v204;
    v169[1] = v173;
    sub_10022E4A8(v172, v173);
    sub_100225AA0(v170, v171);
    v174 = *(_QWORD *)&v65[v64];
    v175 = *(const char **)(v174 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict);
    v176 = v210;
    *(_QWORD *)(v174 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict) = v210;
    *(_QWORD *)&v177 = swift_bridgeObjectRetain(v176).n128_u64[0];
    swift_bridgeObjectRelease(v175, v177);
    v178 = *(_QWORD *)&v65[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(_BYTE *)(v178 + 8) & 1) == 0)
    {
      v179 = *(_QWORD *)v178;
      if (v179 <= 4 && ((1 << v179) & 0x1A) != 0)
      {
        v180 = v65;
        v181 = Logger.logObject.getter(v180);
        v182 = v65;
        v183 = static os_log_type_t.default.getter(v181);
        if (os_log_type_enabled(v181, v183))
        {
          v184 = (uint8_t *)swift_slowAlloc(12, -1);
          v185 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v220 = v185;
          *(_DWORD *)v184 = 136315138;
          v186 = *(_QWORD *)&v182[v64] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
          if ((*(_BYTE *)(v186 + 8) & 1) != 0)
          {
            v218 = 0;
            v219[0] = (const char *)0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease(v219[0]);
            v187 = 0xD000000000000015;
            v188 = (const char *)0x8000000100612DF0;
          }
          else
          {
            v187 = sub_1004E089C(*(_QWORD *)v186);
            v188 = v189;
          }
          v218 = sub_100228BD8(v187, (unint64_t)v188, (uint64_t *)&v220);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, v219, v184 + 4);

          swift_bridgeObjectRelease(v188);
          _os_log_impl((void *)&_mh_execute_header, v181, v183, "Starting pairing process for Pencil of type %s", v184, 0xCu);
          swift_arrayDestroy(v185, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v185, -1, -1);
          swift_slowDealloc(v184, -1, -1);

        }
        else
        {

        }
        sub_1004C99E8();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004EB450(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  const char *v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83[4];
  __int128 v84;
  __int128 v85;

  v79 = a2;
  v9 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v12);
  v78 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  __chkstk_darwin(v14);
  v74 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict);
  if (!v20)
    goto LABEL_14;
  v80 = 0xD000000000000017;
  v81 = 0x800000010061EF90;
  swift_bridgeObjectRetain((const char *)v20);
  AnyHashable.init<A>(_:)(&v82, &v80, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_10045C1D0((uint64_t)&v82), (v22 & 1) != 0))
  {
    sub_10022E77C(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease((const char *)v20);
  sub_10022E6C0((uint64_t)&v82);
  if (!*((_QWORD *)&v85 + 1))
  {
    sub_10000D0F0((uint64_t)&v84, (uint64_t *)&unk_1007B6890);
    goto LABEL_14;
  }
  if ((swift_dynamicCast(&v80, &v84, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_14;
  v23 = (const char *)v81;
  if (v80 == 0x3330363141 && v81 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease((const char *)0xE500000000000000);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v81, 0x3330363141, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
      goto LABEL_14;
  }
  sub_1004D1B24(1);
LABEL_14:
  v25 = *(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8);
  v77 = v19;
  if ((v25 & 1) == 0)
  {
    v26 = *(_QWORD *)(a1 + v19) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(_BYTE *)(v26 + 8) & 1) == 0)
    {
      v27 = *(_QWORD *)v26;
      if (((v27 | 2) == 3 || v27 == 4)
        && *(double *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel) <= 0.2)
      {
        v73 = v27;
        if (qword_1007B41F0 != -1)
          swift_once(&qword_1007B41F0, sub_1004C46F4);
        v28 = type metadata accessor for Logger(0);
        v29 = sub_100221DF8(v28, (uint64_t)qword_1007C37A0);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Showing low battery pill on detach of connected Pencil", v32, 2u);
          swift_slowDealloc(v32, -1, -1);
        }

        v33 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v18, 1, 1, v33);
        v34 = swift_allocObject(&unk_10072BE40, 24, 7);
        swift_unknownObjectWeakInit(v34 + 16, a1);
        type metadata accessor for MainActor(0);
        v35 = swift_retain();
        v36 = static MainActor.shared.getter(v35);
        v37 = (_QWORD *)swift_allocObject(&unk_10072C320, 48, 7);
        v37[2] = v36;
        v37[3] = &protocol witness table for MainActor;
        v38 = v73;
        v37[4] = v34;
        v37[5] = v38;
        swift_release(v34);
        v39 = sub_100252EC0((uint64_t)v18, (uint64_t)&unk_1007C4340, (uint64_t)v37);
        swift_release(v39);
      }
    }
  }
  v40 = a4;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v41 = type metadata accessor for Logger(0);
  v42 = sub_100221DF8(v41, (uint64_t)qword_1007C37A0);
  swift_bridgeObjectRetain(a3);
  sub_10022E4A8(a4, a5);
  swift_bridgeObjectRetain(a3);
  v43 = sub_10022E4A8(a4, a5);
  v73 = v42;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter(v44);
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc(22, -1);
    v71 = a5;
    v70 = v40;
    v47 = v46;
    v72 = swift_slowAlloc(64, -1);
    v80 = v72;
    *(_DWORD *)v47 = 136315394;
    swift_bridgeObjectRetain(a3);
    v82 = sub_100228BD8(v79, (unint64_t)a3, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83, v47 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v47 + 12) = 2080;
    v69 = v47 + 14;
    v82 = 0;
    v83[0] = 0xE000000000000000;
    *(_QWORD *)&v84 = v40;
    *((_QWORD *)&v84 + 1) = a5;
    v48 = v74;
    v49 = v75;
    v50 = v76;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v76);
    v51 = sub_100358394();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v84, v48, 58, 0xE100000000000000, &type metadata for Data, v51);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
    v52 = (const char *)v83[0];
    v82 = sub_100228BD8(v82, v83[0], &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83, v69);
    swift_bridgeObjectRelease(v52);
    v53 = v70;
    v54 = v71;
    sub_100225AB4(v70, v71);
    sub_100225AB4(v53, v54);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "!!! Accessory detached: %s, blePairingUUID: %s", (uint8_t *)v47, 0x16u);
    v55 = v72;
    swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);
    sub_100225AB4(v40, a5);
    sub_100225AB4(v40, a5);
  }

  v56 = (uint64_t)v78;
  static Date.now.getter(v57);
  v58 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v56, 0, 1, v58);
  v59 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp, &v82, 33, 0);
  sub_10023A084(v56, v59, &qword_1007C4330);
  swift_endAccess(&v82);
  v60 = (uint64_t *)(*(_QWORD *)(a1 + v77)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
  v61 = (const char *)v60[1];
  if (!v61
    || (v62 = *v60, *v60 == v79) && v61 == a3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(*v60, v60[1], v79, a3, 0) & 1) != 0)
  {
    v63 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v11, 1, 1, v63);
    sub_1004CF030((unint64_t)v11, 0);
    sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
  }
  else
  {
    v64 = swift_bridgeObjectRetain_n(v61, 2);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter(v65);
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(12, -1);
      v68 = swift_slowAlloc(32, -1);
      v82 = v68;
      *(_DWORD *)v67 = 136315138;
      swift_bridgeObjectRetain(v61);
      *(_QWORD *)&v84 = sub_100228BD8(v62, (unint64_t)v61, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v67 + 4);
      swift_bridgeObjectRelease_n(v61, 3);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Not resetting state on Pencil detach because a session is ongoing for a different accessory: %s", v67, 0xCu);
      swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1, -1);
      swift_slowDealloc(v67, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v61, 2);
    }
  }
}

uint64_t sub_1004EBD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_1004EBD8C, v7, v8);
}

uint64_t sub_1004EBD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
    v5 = *(_QWORD *)v4;
    v6 = *(_BYTE *)(v4 + 8);
    v7 = (_QWORD *)swift_task_alloc(dword_1007C4354);
    *(_QWORD *)(v0 + 88) = v7;
    *v7 = v0;
    v7[1] = sub_1004EBE58;
    return sub_1004CD560(*(_QWORD *)(v0 + 48), v5, v6);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004EBE58()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_1004EBEA4, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1004EBEA4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004EBF84(int a1, int a2, char a3, char a4)
{
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v17 = 0;
  v18 = 0xE000000000000000;
  LODWORD(v16) = a1;
  type metadata accessor for ACCBLEPairing_Status_t(0);
  _print_unlocked<A, B>(_:_:)(&v16, &v17, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9 = v17;
  v8 = (const char *)v18;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007C37A0);
  swift_bridgeObjectRetain(v8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(30, -1);
    v15 = swift_slowAlloc(32, -1);
    v17 = v15;
    *(_DWORD *)v14 = 136315906;
    swift_bridgeObjectRetain(v8);
    v16 = sub_100228BD8(v9, (unint64_t)v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v14 + 4);
    swift_bridgeObjectRelease_n(v8, 3);
    *(_WORD *)(v14 + 12) = 1024;
    LODWORD(v16) = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, (char *)&v16 + 4, v14 + 14);
    *(_WORD *)(v14 + 18) = 1024;
    LODWORD(v16) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, (char *)&v16 + 4, v14 + 20);
    *(_WORD *)(v14 + 24) = 1024;
    LODWORD(v16) = a4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, (char *)&v16 + 4, v14 + 26);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "!!! blePairingStateUpdate. pairingState: %s\nvalidMask: %u\npairingModeOn: %{BOOL}d\nbtRadioOn: %{BOOL}d", (uint8_t *)v14, 0x1Eu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
  }
}

void sub_1004EC264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[4];

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v29[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = Array.debugDescription.getter(a1);
    v12 = (const char *)v11;
    v27 = sub_100228BD8(v10, v11, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v8 + 4);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "!!! blePairingInfoUpdate. pairInfoList: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    v13 = swift_bridgeObjectRelease_n(a1, 2);
  }
  v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd
                 + 8) >> 60 != 15)
  {
    v15 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "We got a pairInfo despite already having a pairData.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  v18 = (uint64_t *)(*(_QWORD *)(a2 + v14) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
  v19 = *v18;
  v20 = v18[1];
  *(_OWORD *)v18 = xmmword_1005CF260;
  v21 = sub_100225AA0(v19, v20);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_10022E77C(a1 + 32, (uint64_t)v29);
    v22 = swift_dynamicCast(&v27, v29, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
    if ((v22 & 1) != 0)
      __asm { BR              X9 }
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "blePairingInfoUpdate - Cannot convert to data. Ignoring.";
      goto LABEL_17;
    }
  }
  else
  {
    v23 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "blePairingInfoUpdate - No elements. Ignoring.";
LABEL_17:
      _os_log_impl((void *)&_mh_execute_header, v23, v24, v26, v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
  }

}

void sub_1004ECAF8(int a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v8 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 0;
  v24 = 0xE000000000000000;
  LODWORD(v22) = a1;
  type metadata accessor for ACCBLEPairing_Types_t(0);
  _print_unlocked<A, B>(_:_:)(&v22, &v23, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v23;
  v13 = (const char *)v24;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
  v16 = a3 >> 62;
  sub_10022E4A8(a2, a3);
  sub_10022E4A8(a2, a3);
  swift_bridgeObjectRetain(v13);
  v21[2] = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v21[0] = v10;
    v21[1] = a4;
    v20 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(32, -1);
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain(v13);
    v22 = sub_100228BD8(v12, (unint64_t)v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v20 + 4);
    swift_bridgeObjectRelease_n(v13, 3);
    *(_WORD *)(v20 + 12) = 2048;
    __asm { BR              X10 }
  }
  sub_100225AB4(a2, a3);
  swift_bridgeObjectRelease_n(v13, 2);
  sub_100225AB4(a2, a3);

  __asm { BR              X9 }
}

void sub_1004ED178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  const char *object;
  __n128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  id v21;
  Class isa;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v24[0] = 0xD000000000000057;
  v24[1] = 0x800000010061ECC0;
  v25 = 2992;
  swift_retain();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v3._object;
  String.append(_:)(v3);
  v5 = swift_bridgeObjectRelease(object);
  v6 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v5);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v2 + 16, v24, 33, 0);
  v7 = sub_10045DE64(&v25, v6);
  swift_endAccess(v24);
  if ((v7 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "startScanning", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    swift_release(v2);

  }
  else
  {
    swift_release(v2);
  }
  v13 = sub_100008384((uint64_t *)&unk_1007C4210);
  inited = swift_initStackObject(v13, &v23);
  *(_OWORD *)(inited + 16) = xmmword_1005D0690;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBCentralManagerScanOptionAllowDuplicatesKey);
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBCentralManagerScanOptionActive);
  *(_QWORD *)(inited + 88) = v16;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 1;
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBManagerIsPrivilegedDaemonKey);
  *(_QWORD *)(inited + 136) = v17;
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 1;
  *(_QWORD *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBCentralManagerScanOptionScanInterval);
  *(_QWORD *)(inited + 184) = v18;
  *(_QWORD *)(inited + 216) = &type metadata for Int;
  *(_QWORD *)(inited + 192) = 40;
  *(_QWORD *)(inited + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBCentralManagerScanOptionScanWindow);
  *(_QWORD *)(inited + 232) = v19;
  *(_QWORD *)(inited + 264) = &type metadata for Int;
  *(_QWORD *)(inited + 240) = 30;
  v20 = (const char *)sub_10021E744(inited);
  v21 = *(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "scanForPeripheralsWithServices:options:", 0, isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

}

id sub_1004ED494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  const char *object;
  __n128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) + 16);
  v14 = 0xD000000000000057;
  v15 = 0x800000010061ECC0;
  v16 = 3007;
  swift_retain();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = (const char *)v3._object;
  String.append(_:)(v3);
  v5 = swift_bridgeObjectRelease(object);
  v6 = String.hashValue.getter(0xD000000000000057, 0x800000010061ECC0, v5);
  swift_bridgeObjectRelease((const char *)0x800000010061ECC0);
  swift_beginAccess(v2 + 16, &v14, 33, 0);
  v7 = sub_10045DE64(&v16, v6);
  swift_endAccess(&v14);
  if ((v7 & 1) != 0)
  {
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007C37A0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "stopScanning", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    swift_release(v2);

  }
  else
  {
    swift_release(v2);
  }
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central), "stopScan", v14, v15);
}

void sub_1004ED688(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  const char *v29;
  Class isa;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  void *v39;
  void *v40;
  void **aBlock;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
    v11 = v10 > 4;
    v12 = (1 << v10) & 0x1A;
    v13 = v11 || v12 == 0;
    if (!v13 && !*(_QWORD *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner))
    {
      if (qword_1007B41F0 != -1)
        swift_once(&qword_1007B41F0, sub_1004C46F4);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_100221DF8(v14, (uint64_t)qword_1007C37A0);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "startBatteryScanner", v18, 2u);
        swift_slowDealloc(v18, -1, -1);
      }

      v19 = objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
      v20 = *(_QWORD *)&v2[v8];
      v21 = *(void **)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
      *(_QWORD *)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner) = v19;
      v22 = v19;

      objc_msgSend(v22, "setChangeFlags:", 1);
      objc_msgSend(v22, "setDiscoveryFlags:", 2);
      objc_msgSend(v22, "setDispatchQueue:", *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]);
      v23 = sub_100008384(&qword_1007B53F0);
      v24 = *(unsigned __int8 *)(v5 + 80);
      v25 = (v24 + 32) & ~v24;
      v26 = swift_allocObject(v23, v25 + *(_QWORD *)(v5 + 72), v24 | 7);
      *(_OWORD *)(v26 + 16) = xmmword_1005CD2A0;
      v27 = v26 + v25;
      v28 = objc_msgSend(a1, "identifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28);

      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v27, v7, v4);
      v29 = (const char *)sub_100287BA4(v26);
      swift_setDeallocating(v26);
      swift_arrayDestroy(v27, 1, v4);
      swift_deallocClassInstance(v26, 32, 7);
      sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      isa = Set._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "setDeviceFilter:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

      v31 = swift_allocObject(&unk_10072BD50, 24, 7);
      *(_QWORD *)(v31 + 16) = v2;
      v45 = sub_1004F3C84;
      v46 = v31;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_1002C3A3C;
      v44 = &unk_10072BD68;
      v32 = _Block_copy(&aBlock);
      v33 = v46;
      v34 = v2;
      swift_release(v33);
      objc_msgSend(v22, "setDeviceFoundHandler:", v32);
      _Block_release(v32);
      v35 = swift_allocObject(&unk_10072BDA0, 24, 7);
      *(_QWORD *)(v35 + 16) = v34;
      v45 = sub_1004F3CA4;
      v46 = v35;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_1004C4424;
      v44 = &unk_10072BDB8;
      v36 = _Block_copy(&aBlock);
      v37 = v46;
      v38 = v34;
      swift_release(v37);
      objc_msgSend(v22, "setDeviceChangedHandler:", v36);
      _Block_release(v36);
      v45 = sub_1004EEF28;
      v46 = 0;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_10025BBB4;
      v44 = &unk_10072BDE0;
      v39 = _Block_copy(&aBlock);
      objc_msgSend(v22, "setInvalidationHandler:", v39);
      _Block_release(v39);
      v45 = sub_1004EEFF4;
      v46 = 0;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_1002D6B08;
      v44 = &unk_10072BE08;
      v40 = _Block_copy(&aBlock);
      objc_msgSend(v22, "activateWithCompletion:", v40);
      _Block_release(v40);

    }
  }
}

void sub_1004EDB28(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  id v30;
  void *v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  const char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  const char *v43;
  double v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  const char *v53;
  double v54;
  id v55;
  void *v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  const char *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  void *v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  int v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  uint64_t v88;
  void *Strong;
  void *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  int v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v103 = a2;
  v98 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v98);
  v100 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v102 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v97 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7280);
  v7 = __chkstk_darwin(v6);
  v96 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v92 - v10;
  v12 = __chkstk_darwin(v9);
  v101 = (char *)&v92 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v92 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v92 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v92 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v92 - v23;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v99 = v11;
  v25 = type metadata accessor for Logger(0);
  sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
  v26 = a1;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    v95 = v28;
    v29 = swift_slowAlloc(32, -1);
    v94 = swift_slowAlloc(96, -1);
    v105 = v94;
    *(_DWORD *)v29 = 136315650;
    v30 = objc_msgSend(v26, "identifier");
    if (v30)
    {
      v31 = v30;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v32 = v102;
      v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v102[7];
      v34 = v22;
      v35 = 0;
    }
    else
    {
      v32 = v102;
      v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v102[7];
      v34 = v22;
      v35 = 1;
    }
    v92 = v33;
    v33(v34, v35, 1, v4);
    sub_1004B4544((uint64_t)v22, (uint64_t)v24);
    v93 = (unsigned int (*)(char *, uint64_t, uint64_t))v32[6];
    if (v93(v24, 1, v4))
    {
      sub_10000D0F0((uint64_t)v24, &qword_1007B7280);
      v38 = 0xD000000000000015;
      v39 = (const char *)0x800000010061EC60;
    }
    else
    {
      v40 = v32;
      v41 = v97;
      ((void (*)(char *, char *, uint64_t))v32[2])(v97, v24, v4);
      v42 = sub_10000D0F0((uint64_t)v24, &qword_1007B7280);
      v38 = UUID.description.getter(v42);
      v39 = v43;
      ((void (*)(char *, uint64_t))v40[1])(v41, v4);
    }
    v104 = sub_100228BD8(v38, (unint64_t)v39, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v29 + 4);

    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v39).n128_u64[0];
    *(_WORD *)(v29 + 12) = 2080;
    v45 = objc_msgSend(v26, "bleDevice", v44);
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "identifier");

      if (v47)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v47);

        v48 = 0;
      }
      else
      {
        v48 = 1;
      }
      v37 = v102;
      v92(v16, v48, 1, v4);
      sub_1004B4544((uint64_t)v16, (uint64_t)v19);
      if (v93(v19, 1, v4))
      {
        sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
        v49 = (const char *)0x800000010061EC80;
        v50 = 0xD00000000000001FLL;
      }
      else
      {
        v51 = v97;
        ((void (*)(char *, char *, uint64_t))v37[2])(v97, v19, v4);
        v52 = sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
        v50 = UUID.description.getter(v52);
        v49 = v53;
        ((void (*)(char *, uint64_t))v37[1])(v51, v4);
      }
    }
    else
    {
      v49 = (const char *)0x800000010061EC80;
      v50 = 0xD00000000000001FLL;
      v37 = v102;
    }
    v104 = sub_100228BD8(v50, (unint64_t)v49, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v29 + 14);

    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v49).n128_u64[0];
    *(_WORD *)(v29 + 22) = 2080;
    v55 = objc_msgSend(v26, "batteryInfo", v54);
    if (v55)
    {
      v56 = v55;
      v57 = sub_100221EDC(0, &qword_1007C41F0, SFBatteryInfo_ptr);
      v58 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v57);

      v59 = Array.description.getter(v58, v57);
      v61 = v60;
      swift_bridgeObjectRelease(v58);
    }
    else
    {
      v59 = 0xD000000000000016;
      v61 = (const char *)0x800000010061ECA0;
    }
    v36 = (uint64_t)v100;
    v104 = sub_100228BD8(v59, (unint64_t)v61, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v29 + 24);

    swift_bridgeObjectRelease(v61);
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v95, "btBatteryScanner - found: %s, bleID: %s, battery: %s", (uint8_t *)v29, 0x20u);
    v62 = v94;
    swift_arrayDestroy(v94, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    v36 = (uint64_t)v100;
    v37 = v102;
  }
  v63 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v64 = *(void **)(*(_QWORD *)(v103 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  v65 = (uint64_t)v101;
  if (v64)
  {
    v66 = v64;
    v67 = objc_msgSend(v26, "identifier");
    if (v67)
    {
      v68 = v67;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v67);

      v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37[7];
      v69(v65, 0, 1, v4);
    }
    else
    {
      v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37[7];
      v69(v65, 1, 1, v4);
    }
    v102 = v66;
    v70 = objc_msgSend(v66, "identifier");
    v71 = (uint64_t)v99;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v70);

    v69(v71, 0, 1, v4);
    v72 = v36 + *(int *)(v98 + 48);
    sub_100221F28(v65, v36, &qword_1007B7280);
    sub_100221F28(v71, v72, &qword_1007B7280);
    v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37[6];
    if (v73(v36, 1, v4) == 1)
    {
      sub_10000D0F0(v71, &qword_1007B7280);
      sub_10000D0F0(v65, &qword_1007B7280);
      v74 = v73(v72, 1, v4);
      v75 = v102;
      if (v74 == 1)
      {
        sub_10000D0F0(v36, &qword_1007B7280);
        goto LABEL_34;
      }
    }
    else
    {
      v76 = v96;
      sub_100221F28(v36, v96, &qword_1007B7280);
      if (v73(v72, 1, v4) != 1)
      {
        v77 = v65;
        v78 = v97;
        ((void (*)(char *, uint64_t, uint64_t))v37[4])(v97, v72, v4);
        v79 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v80 = dispatch thunk of static Equatable.== infix(_:_:)(v76, v78, v4, v79);
        v81 = (void (*)(char *, uint64_t))v37[1];
        v81(v78, v4);
        sub_10000D0F0((uint64_t)v99, &qword_1007B7280);
        sub_10000D0F0(v77, &qword_1007B7280);
        v81((char *)v76, v4);
        sub_10000D0F0(v36, &qword_1007B7280);
        v75 = v102;
        if ((v80 & 1) != 0)
        {
LABEL_34:
          v82 = *(_QWORD *)(v103 + v63);
          swift_retain();
          v83 = objc_msgSend(v26, "batteryInfo");
          if (!v83)
          {
LABEL_42:
            v87 = *(void **)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo);
            *(_QWORD *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) = v83;
            swift_release(v82);

            Strong = (void *)swift_unknownObjectWeakLoadStrong(v103 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection, v88);
            if (Strong)
            {
              v90 = Strong;
              sub_1004C58F8(Strong, 1);

            }
            sub_1004C99E8();
            goto LABEL_45;
          }
          v84 = sub_100221EDC(0, &qword_1007C41F0, SFBatteryInfo_ptr);
          v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, v84);

          if ((unint64_t)v85 >> 62)
          {
            if (v85 < 0)
              v91 = v85;
            else
              v91 = v85 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain((const char *)v85);
            v83 = (id)_CocoaArrayWrapper.endIndex.getter(v91);
            swift_bridgeObjectRelease((const char *)v85);
            if (v83)
              goto LABEL_37;
          }
          else
          {
            v83 = *(id *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v83)
            {
LABEL_37:
              if ((v85 & 0xC000000000000001) != 0)
              {
                v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v85);
              }
              else
              {
                if (!*(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  return;
                }
                v86 = *(id *)(v85 + 32);
              }
              v83 = v86;
            }
          }
          swift_bridgeObjectRelease((const char *)v85);
          goto LABEL_42;
        }
LABEL_45:

        return;
      }
      sub_10000D0F0((uint64_t)v99, &qword_1007B7280);
      sub_10000D0F0(v65, &qword_1007B7280);
      ((void (*)(uint64_t, uint64_t))v37[1])(v76, v4);
      v75 = v102;
    }
    sub_10000D0F0(v36, &qword_1007B6470);
    goto LABEL_45;
  }
}

void sub_1004EE548(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  id v44;
  NSObject *v45;
  int v46;
  _BOOL4 v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  double v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  const char *v76;
  double v77;
  id v78;
  void *v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  const char *v83;
  const char *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  id v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v9);
  v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B7280);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v16 = __chkstk_darwin((char *)&v94 - v15);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v94 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v94 - v21;
  v23 = __chkstk_darwin(v20);
  v28 = (char *)&v94 - v27;
  v106 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v29 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v29)
  {
    v99 = v24;
    v100 = v23;
    v104 = v26;
    v101 = v8;
    v102 = a3;
    v98 = v25;
    v107 = v6;
    v30 = v29;
    v103 = a1;
    v31 = objc_msgSend(a1, "identifier");
    if (v31)
    {
      v32 = v31;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

      v33 = v107;
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
      v34((uint64_t)v28, 0, 1, v5);
    }
    else
    {
      v33 = v107;
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
      v34((uint64_t)v28, 1, 1, v5);
    }
    v35 = objc_msgSend(v30, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v35);

    v105 = v34;
    v34((uint64_t)v22, 0, 1, v5);
    v36 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_100221F28((uint64_t)v28, (uint64_t)v11, &qword_1007B7280);
    sub_100221F28((uint64_t)v22, v36, &qword_1007B7280);
    v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v37((uint64_t)v11, 1, v5) == 1)
    {
      sub_10000D0F0((uint64_t)v22, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v28, &qword_1007B7280);
      if (v37(v36, 1, v5) == 1)
      {
        v97 = v37;
        sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
        goto LABEL_12;
      }
    }
    else
    {
      v38 = v33;
      sub_100221F28((uint64_t)v11, (uint64_t)v19, &qword_1007B7280);
      if (v37(v36, 1, v5) != 1)
      {
        v97 = v37;
        v39 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
        v40 = v101;
        v39(v101, v36, v5);
        v41 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        LODWORD(v95) = dispatch thunk of static Equatable.== infix(_:_:)(v19, v40, v5, v41);
        v42 = *(void (**)(char *, uint64_t))(v38 + 8);
        v42(v40, v5);
        sub_10000D0F0((uint64_t)v22, &qword_1007B7280);
        sub_10000D0F0((uint64_t)v28, &qword_1007B7280);
        v42(v19, v5);
        sub_10000D0F0((uint64_t)v11, &qword_1007B7280);
        if ((v95 & 1) != 0)
        {
LABEL_12:
          if (qword_1007B41F0 != -1)
            swift_once(&qword_1007B41F0, sub_1004C46F4);
          v43 = type metadata accessor for Logger(0);
          sub_100221DF8(v43, (uint64_t)qword_1007C37A0);
          v44 = v103;
          v45 = Logger.logObject.getter(v44);
          v46 = static os_log_type_t.default.getter(v45);
          v47 = os_log_type_enabled(v45, (os_log_type_t)v46);
          v49 = v104;
          v48 = v105;
          v96 = v30;
          if (!v47)
          {

            v55 = v102;
            goto LABEL_34;
          }
          LODWORD(v103) = v46;
          v50 = swift_slowAlloc(32, -1);
          v94 = swift_slowAlloc(96, -1);
          v109 = v94;
          *(_DWORD *)v50 = 136315650;
          v51 = objc_msgSend(v44, "identifier");
          if (v51)
          {
            v52 = v51;
            v53 = v100;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v51);

            v54 = 0;
          }
          else
          {
            v54 = 1;
            v53 = v100;
          }
          v48(v53, v54, 1, v5);
          sub_1004B4544(v53, v49);
          v56 = v97(v49, 1, v5);
          v95 = v45;
          if (v56)
          {
            sub_10000D0F0(v49, &qword_1007B7280);
            v57 = 0xD000000000000015;
            v58 = (const char *)0x800000010061EC60;
          }
          else
          {
            v59 = v107;
            v60 = v101;
            (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v101, v49, v5);
            v61 = sub_10000D0F0(v49, &qword_1007B7280);
            v57 = UUID.description.getter(v61);
            v58 = v62;
            (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v5);
          }
          v108 = sub_100228BD8(v57, (unint64_t)v58, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v50 + 4);

          *(_QWORD *)&v63 = swift_bridgeObjectRelease(v58).n128_u64[0];
          *(_WORD *)(v50 + 12) = 2080;
          v64 = objc_msgSend(v44, "bleDevice", v63);
          if (v64)
          {
            v65 = v64;
            v66 = objc_msgSend(v64, "identifier");

            if (v66)
            {
              v67 = v98;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v66);

              v68 = 0;
            }
            else
            {
              v68 = 1;
              v67 = v98;
            }
            v48(v67, v68, 1, v5);
            v69 = v67;
            v70 = v99;
            sub_1004B4544(v69, v99);
            if (!v97(v70, 1, v5))
            {
              v73 = v107;
              v74 = v101;
              (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v101, v70, v5);
              v75 = sub_10000D0F0(v70, &qword_1007B7280);
              v72 = UUID.description.getter(v75);
              v71 = v76;
              (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v5);
              goto LABEL_30;
            }
            sub_10000D0F0(v70, &qword_1007B7280);
          }
          v71 = (const char *)0x800000010061EC80;
          v72 = 0xD00000000000001FLL;
LABEL_30:
          v108 = sub_100228BD8(v72, (unint64_t)v71, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v50 + 14);

          *(_QWORD *)&v77 = swift_bridgeObjectRelease(v71).n128_u64[0];
          *(_WORD *)(v50 + 22) = 2080;
          v78 = objc_msgSend(v44, "batteryInfo", v77);
          if (v78)
          {
            v79 = v78;
            v80 = sub_100221EDC(0, &qword_1007C41F0, SFBatteryInfo_ptr);
            v81 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v79, v80);

            v82 = Array.description.getter(v81, v80);
            v84 = v83;
            swift_bridgeObjectRelease(v81);
          }
          else
          {
            v82 = 0xD000000000000016;
            v84 = (const char *)0x800000010061ECA0;
          }
          v55 = v102;
          v86 = v94;
          v85 = v95;
          v108 = sub_100228BD8(v82, (unint64_t)v84, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v50 + 24);

          swift_bridgeObjectRelease(v84);
          _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v103, "btBatteryScanner - changed: %s, bleID: %s, battery: %s", (uint8_t *)v50, 0x20u);
          swift_arrayDestroy(v86, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v86, -1, -1);
          swift_slowDealloc(v50, -1, -1);

LABEL_34:
          v87 = *(_QWORD *)(v55 + v106);
          swift_retain();
          v88 = objc_msgSend(v44, "batteryInfo");
          if (!v88)
          {
LABEL_42:
            v92 = *(void **)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo);
            *(_QWORD *)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) = v88;
            swift_release(v87);

            sub_1004C99E8();
            v30 = v96;
            goto LABEL_43;
          }
          v89 = sub_100221EDC(0, &qword_1007C41F0, SFBatteryInfo_ptr);
          v90 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v88, v89);

          if ((unint64_t)v90 >> 62)
          {
            if (v90 < 0)
              v93 = v90;
            else
              v93 = v90 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain((const char *)v90);
            v88 = (id)_CocoaArrayWrapper.endIndex.getter(v93);
            swift_bridgeObjectRelease((const char *)v90);
            if (v88)
              goto LABEL_37;
          }
          else
          {
            v88 = *(id *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v88)
            {
LABEL_37:
              if ((v90 & 0xC000000000000001) != 0)
              {
                v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
              }
              else
              {
                if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  return;
                }
                v91 = *(id *)(v90 + 32);
              }
              v88 = v91;
            }
          }
          swift_bridgeObjectRelease((const char *)v90);
          goto LABEL_42;
        }
LABEL_43:

        return;
      }
      sub_10000D0F0((uint64_t)v22, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v28, &qword_1007B7280);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v5);
    }
    sub_10000D0F0((uint64_t)v11, &qword_1007B6470);
    goto LABEL_43;
  }
}

void sub_1004EEF28()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C37A0);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "btBatteryScanner Invalidated!!!", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_1004EEFF4(uint64_t a1)
{
  os_log_type_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  NSObject *log;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (a1)
    v2 = static os_log_type_t.error.getter(a1);
  else
    v2 = static os_log_type_t.default.getter(0);
  v3 = v2;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007C37A0);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  log = Logger.logObject.getter(v5);
  if (os_log_type_enabled(log, v3))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v13, v12);
      v8 = Error.localizedDescription.getter(v12[1], v12[2]);
      v10 = v9;
    }
    else
    {
      v14 = 0;
      v15 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000, log);
      v10 = (const char *)0x8000000100612DF0;
      v8 = 0xD000000000000015;
    }
    v14 = sub_100228BD8(v8, (unint64_t)v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, log, v3, "Activated btBatteryScanner with error %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

void sub_1004EF254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
  if (v2)
  {
    v3 = v0;
    v4 = qword_1007B41F0;
    v5 = v2;
    if (v4 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007C37A0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "stopBatteryScanner", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    objc_msgSend(v5, "invalidate");
    v11 = *(_QWORD *)(v3 + v1);
    v12 = *(void **)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
    *(_QWORD *)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner) = 0;

  }
}

uint64_t storeEnumTagSinglePayload for SDB332SetupAgentSessionState.ConnectionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004EF414 + 4 * byte_1005DB1BA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004EF448 + 4 * byte_1005DB1B5[v4]))();
}

uint64_t sub_1004EF448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004EF450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004EF458);
  return result;
}

uint64_t sub_1004EF464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004EF46CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004EF470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004EF478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDB332SetupAgentSessionState.ConnectionState()
{
  return &type metadata for SDB332SetupAgentSessionState.ConnectionState;
}

unint64_t sub_1004EF498()
{
  unint64_t result;

  result = qword_1007C41E8;
  if (!qword_1007C41E8)
  {
    result = swift_getWitnessTable(&unk_1005DB334, &type metadata for SDB332SetupAgentSessionState.ConnectionState);
    atomic_store(result, (unint64_t *)&qword_1007C41E8);
  }
  return result;
}

uint64_t sub_1004EF4DC()
{
  void *v0;
  NSString v1;
  unsigned __int8 v2;
  NSString v3;
  unsigned __int8 v4;
  NSString v5;
  unsigned __int8 v6;
  id v7;
  NSString v9;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "hasTag:", v1);

  if ((v2 & 1) != 0)
    return 1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "hasTag:", v3);

  if ((v4 & 1) != 0)
    return 1;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v0, "hasTag:", v5);

  if ((v6 & 1) != 0)
    return 1;
  v9 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v0, "hasTag:", v9);

  return (uint64_t)v7;
}

uint64_t sub_1004EF5D8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1004EF728((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_1004EF728((unint64_t *)v9, v6, v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_1004EF728(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  void (*v21)(char *, unint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int64_t v45;

  v32 = a2;
  v33 = a1;
  v42 = sub_100008384(&qword_1007C4240);
  v4 = __chkstk_darwin(v42);
  v41 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)&v32 - v6;
  v37 = type metadata accessor for UUID(0);
  v40 = *(_QWORD **)(v37 - 8);
  result = __chkstk_darwin(v37);
  v39 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v43 = (_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 64);
  v34 = 0;
  v35 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v36 = (unint64_t)(v11 + 63) >> 6;
  v15 = v39;
  v14 = v40;
  v16 = v37;
  v17 = (uint64_t)v38;
  v18 = v41;
  while (1)
  {
    if (v13)
    {
      v44 = (v13 - 1) & v13;
      v45 = v9;
      v19 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_5;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v36)
      return sub_1004F00E8(v33, v32, v34, v43);
    v28 = *(_QWORD *)(v35 + 8 * v27);
    v29 = v9 + 1;
    if (!v28)
    {
      v29 = v9 + 2;
      if (v9 + 2 >= v36)
        return sub_1004F00E8(v33, v32, v34, v43);
      v28 = *(_QWORD *)(v35 + 8 * v29);
      if (!v28)
      {
        v29 = v9 + 3;
        if (v9 + 3 >= v36)
          return sub_1004F00E8(v33, v32, v34, v43);
        v28 = *(_QWORD *)(v35 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v44 = (v28 - 1) & v28;
    v45 = v29;
    v19 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    v20 = v43;
    v21 = (void (*)(char *, unint64_t, uint64_t))v14[2];
    v21(v15, v43[6] + v14[9] * v19, v16);
    v22 = *(void **)(v20[7] + 8 * v19);
    v21((char *)v17, (unint64_t)v15, v16);
    v23 = *(int *)(v42 + 48);
    *(_QWORD *)(v17 + v23) = v22;
    v21(v18, v17, v16);
    *(_QWORD *)&v18[v23] = v22;
    v24 = v22;
    v25 = objc_msgSend(v24, "state", v32);
    sub_10000D0F0(v17, &qword_1007C4240);
    v26 = (void (*)(char *, uint64_t))v14[1];
    v26(v18, v16);

    result = ((uint64_t (*)(char *, uint64_t))v26)(v15, v16);
    v9 = v45;
    v13 = v44;
    if (v25)
    {
      *(unint64_t *)((char *)v33 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      if (__OFADD__(v34++, 1))
      {
        __break(1u);
        return sub_1004F00E8(v33, v32, v34, v43);
      }
    }
  }
  v30 = v9 + 4;
  if (v9 + 4 >= v36)
    return sub_1004F00E8(v33, v32, v34, v43);
  v28 = *(_QWORD *)(v35 + 8 * v30);
  if (v28)
  {
    v29 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v36)
      return sub_1004F00E8(v33, v32, v34, v43);
    v28 = *(_QWORD *)(v35 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1004EFA44(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  _QWORD v32[9];
  __int128 v33[3];
  __int128 v34[3];

  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_100008384(&qword_1007C1810);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v31 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v31)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v31)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v31)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v31)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v31)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    sub_100340E40(*(_QWORD *)(v4 + 56) + 48 * v14, (uint64_t)v34);
    sub_10026D7AC(v34, v33);
    Hasher.init(_seed:)(v32);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v20, v19);
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v24);
    *v29 = v20;
    v29[1] = v19;
    result = (uint64_t)sub_10026D7AC(v33, (_OWORD *)(*(_QWORD *)(v9 + 56) + 48 * v24));
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004EFCFC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v59 = type metadata accessor for SFNWInterfaceType(0);
  v53 = *(_QWORD *)(v59 - 8);
  v8 = __chkstk_darwin(v59);
  v58 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v52 = (char *)&v46 - v10;
  v11 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v57 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v50 = (char *)&v46 - v14;
  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (uint64_t)a4;
  }
  sub_100008384((uint64_t *)&unk_1007B4C10);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v16 = result;
  v46 = a1;
  v47 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v48 = a4;
  v49 = result;
  v20 = v52;
  while (1)
  {
    v56 = a3;
    if (v17)
    {
      v54 = (v17 - 1) & v17;
      v55 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v47)
        return v16;
      v23 = v46[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v47)
          return v16;
        v23 = v46[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v47)
            return v16;
          v23 = v46[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v47)
              return v16;
            v23 = v46[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v47)
                  return v16;
                v23 = v46[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v54 = (v23 - 1) & v23;
      v55 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v50;
    v27 = v51;
    v28 = *(_QWORD *)(v51 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, a4[6] + v28 * v21, v11);
    v29 = a4[7];
    v30 = v53;
    v31 = *(_QWORD *)(v53 + 72);
    v32 = v29 + v31 * v21;
    v33 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v20, v32, v59);
    v34 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v34(v57, v26, v11);
    v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v35(v58, v20, v33);
    v16 = v49;
    v36 = *(_QWORD *)(v49 + 40);
    v37 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v36, v11, v37);
    v38 = -1 << *(_BYTE *)(v16 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v41 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v44 = v40 == v43;
        if (v40 == v43)
          v40 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v45 == -1);
      v41 = __clz(__rbit64(~v45)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
    v34((char *)(*(_QWORD *)(v16 + 48) + v41 * v28), v57, v11);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(*(_QWORD *)(v16 + 56) + v41 * v31, v58, v59);
    ++*(_QWORD *)(v16 + 16);
    a3 = v56 - 1;
    if (__OFSUB__(v56, 1))
      break;
    a4 = v48;
    v17 = v54;
    v18 = v55;
    if (v56 == 1)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004F00E8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v48 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v48 - 8);
  v8 = __chkstk_darwin(v48);
  v47 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v43 = (char *)&v39 - v10;
  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_100008384(&qword_1007B4BF0);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v12 = result;
  v40 = a1;
  v41 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v42 = a4;
  v16 = v48;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v41)
        return v12;
      v19 = v40[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v41)
          return v12;
        v19 = v40[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v41)
            return v12;
          v19 = v40[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v41)
              return v12;
            v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v41)
                  return v12;
                v19 = v40[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v45 = (v19 - 1) & v19;
      v46 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v43;
    v23 = v44;
    v24 = *(_QWORD *)(v44 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v43, a4[6] + v24 * v17, v16);
    v25 = *(void **)(a4[7] + 8 * v17);
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v47, v22, v16);
    v27 = *(_QWORD *)(v12 + 40);
    v28 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v29 = v25;
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v16, v28);
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v36 = v32 == v35;
        if (v32 == v35)
          v32 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v32);
      }
      while (v37 == -1);
      v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(_QWORD *)(v15 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v12 + 48) + v33 * v24, v47, v48);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v33) = v29;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v42;
    v13 = v45;
    v14 = v46;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004F0434(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  __n128 v21;
  char *v22;
  void (*v23)(char *, unint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  char v31;
  __n128 v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  const char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v49;

  v4 = sub_100008384(&qword_1007B7280);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v36 - v8;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v36 - v15;
  result = __chkstk_darwin(v14);
  v41 = (char *)&v36 - v18;
  v49 = _swiftEmptyArrayStorage;
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    v19 = 0;
    v42 = a2;
    v38 = v9;
    v39 = a1;
    v46 = v11;
    while (v19 < *(_QWORD *)(a1 + 16))
    {
      v43 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v44 = v19;
      v45 = *(_QWORD *)(v11 + 72);
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v23(v9, a1 + v43 + v45 * v19, v10);
      v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v48)(v9, 0, 1, v10);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v24(v9, 1, v10) == 1)
        goto LABEL_22;
      v25 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v26 = v41;
      v47 = v25;
      v25(v41, v9, v10);
      v27 = *((_QWORD *)a2 + 2);
      if (v27)
      {
        v28 = a2;
        v29 = &a2[v43];
        v20 = swift_bridgeObjectRetain(v28);
        while (1)
        {
          ((void (*)(char *, const char *, uint64_t, __n128))v23)(v7, v29, v10, v20);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v48)(v7, 0, 1, v10);
          if (v24(v7, 1, v10) == 1)
            break;
          v47(v16, v7, v10);
          v30 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v31 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v26, v10, v30);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v10);
          if ((v31 & 1) != 0)
          {
            v32 = swift_bridgeObjectRelease(v42);
            ((void (*)(char *, char *, uint64_t, __n128))v47)(v37, v26, v10, v32);
            v33 = v49;
            if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
            {
              sub_100229C0C(0, v33[2] + 1, 1);
              v33 = v49;
            }
            a1 = v39;
            v11 = v46;
            v35 = v33[2];
            v34 = v33[3];
            if (v35 >= v34 >> 1)
            {
              sub_100229C0C(v34 > 1, v35 + 1, 1);
              v33 = v49;
            }
            v33[2] = v35 + 1;
            result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v33 + v43 + v35 * v45, v37, v10);
            v49 = v33;
            a2 = v42;
            goto LABEL_6;
          }
          v29 += v45;
          if (!--v27)
            goto LABEL_4;
        }
      }
      else
      {
        v20 = swift_bridgeObjectRetain(a2);
LABEL_4:
        v48(v7, 1, 1, v10, v20);
      }
      a2 = v42;
      v21 = swift_bridgeObjectRelease(v42);
      v22 = v26;
      v11 = v46;
      result = (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v22, v10, v21);
      a1 = v39;
LABEL_6:
      v19 = v44 + 1;
      v9 = v38;
      if (v44 + 1 == v40)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
LABEL_21:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v9, 1, 1, v10);
LABEL_22:
    swift_bridgeObjectRelease((const char *)a1);
    sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
    return (uint64_t)v49;
  }
  return result;
}

uint64_t sub_1004F082C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v14 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v14 + 16) = v3;
  aBlock[4] = a2;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a3;
  v15 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v3);
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100008384((uint64_t *)&unk_1007B6410);
  v18 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v7, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v24);
}

uint64_t sub_1004F0A18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C37A0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "remoteAlertHandleDidDeactivate", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_1004CF030((unint64_t)v2, 0);
  return sub_10000D0F0((uint64_t)v2, &qword_1007B7280);
}

uint64_t sub_1004F0C84()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  Class isa;
  id v6;
  uint64_t result;
  const char *v8;
  Class v9;
  const char *v10;

  v0 = objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", &OBJC_PROTOCOL___SFB332UIProtocol);
  v1 = sub_100008384(&qword_1007C43F0);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1005CD2A0;
  v3 = sub_100221EDC(0, &qword_1007C43F8, NSUUID_ptr);
  *(_QWORD *)(v2 + 56) = sub_100008384((uint64_t *)&unk_1007C4400);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = objc_allocWithZone((Class)NSSet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithArray:", isa, swift_bridgeObjectRelease((const char *)v2).n128_f64[0]);

  v10 = 0;
  result = static Set._forceBridgeFromObjectiveC(_:result:)(v6, &v10, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  v8 = v10;
  if (v10)
  {

    v9 = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v9, "updateDeviceInfoWithDeviceType:batteryLevel:batteryLevelKnown:edge:orientation:isCharging:identifier:", 6, 0, swift_bridgeObjectRelease(v8).n128_f64[0]);

    return (uint64_t)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F0E0C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  const char *v4;
  const char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v15;
  const char *v16;
  uint64_t v17;

  v1 = objc_msgSend(a1, "sd_connectionBundleID");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    if (v3 == 0xD00000000000001CLL && v5 == (const char *)0x8000000100612040)
    {
      v6 = 1;
      v3 = 0xD00000000000001CLL;
    }
    else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0xD00000000000001CLL, 0x8000000100612040, 0) & 1) != 0)
    {
      v6 = 1;
    }
    else if (v3 == 0xD000000000000023 && v5 == (const char *)0x80000001006180A0)
    {
      v6 = 1;
      v3 = 0xD000000000000023;
    }
    else
    {
      v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0xD000000000000023, 0x80000001006180A0, 0);
    }
  }
  else
  {
    v6 = 0;
    v3 = 0;
    v5 = 0;
  }
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007C37A0);
  swift_bridgeObjectRetain(v5);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(18, -1);
    v12 = swift_slowAlloc(32, -1);
    v17 = v12;
    *(_DWORD *)v11 = 67109378;
    LODWORD(v15) = v6 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, (char *)&v15 + 4, v11 + 4);
    *(_WORD *)(v11 + 8) = 2080;
    v13 = v5;
    if (!v5)
    {
      v15 = 0;
      v16 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v16);
      v3 = 0xD000000000000015;
      v13 = (const char *)0x8000000100612DF0;
    }
    swift_bridgeObjectRetain(v5);
    v15 = sub_100228BD8(v3, (unint64_t)v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v11 + 10);
    swift_bridgeObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "XPC: shouldAcceptNewConnection: %{BOOL}d. (%s)", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v5, 2);
  }
  return v6 & 1;
}

void sub_1004F10F8(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C37A0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    v10 = v3;
    v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v6 + 4);
    *v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "didConnect: %@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  sub_1004C99E8();
}

void sub_1004F1298(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  char v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  NSObject *v33;
  NSObject *v34;
  uint8_t *v35;
  NSObject **v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  __n128 v40;
  char **v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  const char **v46;
  __n128 v47;
  const char *v48;
  unint64_t v49;
  char v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  NSObject *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject *v58;
  uint8_t *v59;
  uint64_t v60;
  uint8_t *v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  NSObject *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  NSObject **v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject **v74;
  uint8_t *v75;
  void *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t, __n128);
  NSObject *v80;
  _BYTE v81[16];
  NSObject *v82;
  uint64_t v83;
  char v84[24];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v73 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v73 - v12;
  v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  swift_retain();
  v16 = objc_msgSend(a1, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = (uint64_t *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
  *(_QWORD *)&v18 = swift_beginAccess(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect, v84, 0, 0).n128_u64[0];
  v19 = *v17;
  swift_bridgeObjectRetain((const char *)v19, v18);
  swift_release(v15);
  v20 = &qword_1007B4000;
  if (*(_QWORD *)(v19 + 16) && (v21 = sub_10045C2DC((uint64_t)v13), (v22 & 1) != 0))
  {
    v78 = v11;
    v23 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v21);
    v24 = swift_bridgeObjectRelease((const char *)v19);
    v79 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v79(v13, v4, v24);

    v20 = &qword_1007B4000;
    if (qword_1007B41F0 != -1)
      swift_once(&qword_1007B41F0, sub_1004C46F4);
    v25 = type metadata accessor for Logger(0);
    sub_100221DF8(v25, (uint64_t)qword_1007C37A0);
    v26 = a1;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v77 = v2;
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v74 = (NSObject **)swift_slowAlloc(8, -1);
      v30 = v29;
      v75 = v29;
      *(_DWORD *)v29 = 138412290;
      v31 = v4;
      v32 = v30 + 4;
      v82 = v26;
      v33 = v26;
      v76 = a1;
      v34 = v33;
      v2 = v77;
      v35 = v32;
      v4 = v31;
      v20 = &qword_1007B4000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v35);
      v36 = v74;
      *v74 = v26;

      v37 = v28;
      v38 = v75;
      a1 = v76;
      _os_log_impl((void *)&_mh_execute_header, v27, v37, "didDisconnectPeripheral - removing from needingDisconnect: %@", v75, 0xCu);
      v39 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v36, 1, v39);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

      v27 = v26;
    }

    v42 = *(_QWORD *)(v2 + v14);
    swift_retain();
    v41 = &selRef_handleStreamResponse_;
    v43 = -[NSObject identifier](v26, "identifier");
    v11 = v78;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v43);

    swift_beginAccess(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect, &v82, 33, 0);
    v44 = (void *)sub_10026B35C((uint64_t)v11);
    ((void (*)(char *, uint64_t))v79)(v11, v4);
    swift_endAccess(&v82);
    swift_release(v42);

  }
  else
  {
    v40 = swift_bridgeObjectRelease((const char *)v19);
    v79 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v79(v13, v4, v40);
    v41 = &selRef_handleStreamResponse_;
  }
  v45 = objc_msgSend(a1, v41[141]);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v45);

  v46 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo);
  v47 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo, &v82, 0, 0);
  v48 = *v46;
  if (!*((_QWORD *)*v46 + 2))
    goto LABEL_17;
  swift_bridgeObjectRetain(*v46, v47.n128_f64[0]);
  v49 = sub_10045C2DC((uint64_t)v8);
  if ((v50 & 1) == 0)
  {
    v47 = swift_bridgeObjectRelease(v48);
LABEL_17:
    v79(v8, v4, v47);
    goto LABEL_20;
  }
  v78 = v11;
  v51 = *(id *)(*((_QWORD *)v48 + 7) + 8 * v49);
  v52 = swift_bridgeObjectRelease(v48);
  v79(v8, v4, v52);

  if (v20[62] != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v53 = type metadata accessor for Logger(0);
  sub_100221DF8(v53, (uint64_t)qword_1007C37A0);
  v54 = a1;
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.default.getter(v55);
  if (os_log_type_enabled(v55, v56))
  {
    v76 = a1;
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v75 = (uint8_t *)swift_slowAlloc(8, -1);
    v77 = v2;
    *(_DWORD *)v57 = 138412290;
    v80 = v54;
    v58 = v54;
    a1 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v57 + 4);
    v59 = v75;
    *(_QWORD *)v75 = v54;

    v41 = &selRef_handleStreamResponse_;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "didDisconnectPeripheral - removing from peripheralsIConnectedTo: %@", v57, 0xCu);
    v60 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v59, 1, v60);
    swift_slowDealloc(v59, -1, -1);
    v61 = v57;
    v20 = &qword_1007B4000;
    swift_slowDealloc(v61, -1, -1);
  }
  else
  {

    v55 = v54;
  }

  v62 = objc_msgSend(v54, v41[141]);
  v63 = (uint64_t)v78;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v62);

  swift_beginAccess(v46, &v80, 33, 0);
  v64 = (void *)sub_10026B35C(v63);
  ((void (*)(uint64_t, uint64_t))v79)(v63, v4);
  swift_endAccess(&v80);

LABEL_20:
  if (v20[62] != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v65 = type metadata accessor for Logger(0);
  sub_100221DF8(v65, (uint64_t)qword_1007C37A0);
  v66 = a1;
  v67 = Logger.logObject.getter(v66);
  v68 = static os_log_type_t.default.getter(v67);
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc(12, -1);
    v70 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v69 = 138412290;
    v80 = v66;
    v71 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v69 + 4);
    *v70 = v66;

    _os_log_impl((void *)&_mh_execute_header, v67, v68, "didDisconnectPeripheral: %@", v69, 0xCu);
    v72 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v70, 1, v72);
    swift_slowDealloc(v70, -1, -1);
    swift_slowDealloc(v69, -1, -1);
  }
  else
  {

    v67 = v66;
  }

  sub_1004C99E8();
}

uint64_t sub_1004F1A04(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t result;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;

  v2 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B7280);
  v9 = __chkstk_darwin(v8);
  v50 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v51 = (uint64_t)&v47 - v12;
  v13 = __chkstk_darwin(v11);
  v53 = (uint64_t)&v47 - v14;
  __chkstk_darwin(v13);
  v54 = (uint64_t)&v47 - v15;
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v16 = type metadata accessor for Logger(0);
  sub_100221DF8(v16, (uint64_t)qword_1007C37A0);
  v17 = a1;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v47 = v4;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(8, -1);
    v48 = v7;
    v23 = (_QWORD *)v22;
    v49 = v2;
    *(_DWORD *)v21 = 138412290;
    v56 = v17;
    v24 = v17;
    v2 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v21 + 4);
    *v23 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "didFailToConnect: %@", v21, 0xCu);
    v25 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v23, 1, v25);
    v26 = v23;
    v7 = v48;
    swift_slowDealloc(v26, -1, -1);
    v27 = v21;
    v4 = v47;
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

  }
  v28 = objc_msgSend(v17, "identifier");
  v29 = v54;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  v31 = 1;
  v30(v29, 0, 1, v2);
  v32 = *(void **)(*(_QWORD *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v32)
  {
    v33 = objc_msgSend(v32, "identifier");
    v34 = v53;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v33);

    v31 = 0;
  }
  else
  {
    v34 = v53;
  }
  v30(v34, v31, 1, v2);
  v35 = (uint64_t)&v7[*(int *)(v5 + 48)];
  v36 = v54;
  sub_100221F28(v54, (uint64_t)v7, &qword_1007B7280);
  sub_100221F28(v34, v35, &qword_1007B7280);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v37((uint64_t)v7, 1, v2) == 1)
  {
    sub_10000D0F0(v34, &qword_1007B7280);
    sub_10000D0F0(v36, &qword_1007B7280);
    if (v37(v35, 1, v2) == 1)
    {
      sub_10000D0F0((uint64_t)v7, &qword_1007B7280);
LABEL_16:
      v46 = (unint64_t)v50;
      v30((uint64_t)v50, 1, 1, v2);
      sub_1004CF030(v46, 0);
      v39 = &qword_1007B7280;
      v40 = v46;
      return sub_10000D0F0(v40, v39);
    }
  }
  else
  {
    v38 = v51;
    sub_100221F28((uint64_t)v7, v51, &qword_1007B7280);
    if (v37(v35, 1, v2) != 1)
    {
      v41 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v4, v35, v2);
      v42 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v43 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v4, v2, v42);
      v44 = *(void (**)(char *, uint64_t))(v41 + 8);
      v44(v4, v2);
      sub_10000D0F0(v53, &qword_1007B7280);
      sub_10000D0F0(v54, &qword_1007B7280);
      v44((char *)v38, v2);
      result = sub_10000D0F0((uint64_t)v7, &qword_1007B7280);
      if ((v43 & 1) == 0)
        return result;
      goto LABEL_16;
    }
    sub_10000D0F0(v53, &qword_1007B7280);
    sub_10000D0F0(v54, &qword_1007B7280);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v38, v2);
  }
  v39 = &qword_1007B6470;
  v40 = (uint64_t)v7;
  return sub_10000D0F0(v40, v39);
}

void sub_1004F1F5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  unint64_t v9;
  NSString v10;
  id v11;
  void *v12;
  void *v13;

  v2 = v1;
  v4 = type metadata accessor for Data.Iterator(0);
  __chkstk_darwin(v4);
  v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (!*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
  {
    sub_1004C6324();
    if (v6)
    {
      v7 = v6;
      v13 = a1;
      v8 = *(_QWORD *)(v1 + v5);
      v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8);
      if (v9 >> 60 != 15)
        __asm { BR              X10 }
      swift_retain();
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v13, "retrievePeripheralWithAddress:", v10, swift_bridgeObjectRelease(v7).n128_f64[0]);

      v12 = *(void **)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
      *(_QWORD *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral) = v11;
      swift_release(v8);

      if (*(_QWORD *)(*(_QWORD *)(v2 + v5)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
        sub_1004C99E8();
    }
  }
}

void sub_1004F2270(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char v38;
  char *v39;
  NSString v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  id v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  int v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  const char *v62;
  Class isa;
  double v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;

  v4 = v3;
  v81 = a3;
  v77 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v76 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B7280);
  v13 = __chkstk_darwin(v12);
  v78 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v74 - v18;
  v79 = a2;
  v20 = objc_msgSend(a2, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v20);

  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v22 = 1;
  v21(v19, 0, 1, v6);
  v82 = v4;
  v80 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v23 = *(void **)(*(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v23)
  {
    v24 = objc_msgSend(v23, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v22 = 0;
  }
  v21(v17, v22, 1, v6);
  v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  v26 = &qword_1007B7280;
  sub_100221F28((uint64_t)v19, (uint64_t)v11, &qword_1007B7280);
  sub_100221F28((uint64_t)v17, v25, &qword_1007B7280);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v28 = v27(v11, 1, v6);
  v29 = v78;
  if (v28 == 1)
  {
    sub_10000D0F0((uint64_t)v17, &qword_1007B7280);
    sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
    if (v27((char *)v25, 1, v6) == 1)
    {
      v30 = -1;
    }
    else
    {
      v26 = &qword_1007B6470;
      v30 = 0;
    }
  }
  else
  {
    sub_100221F28((uint64_t)v11, v78, &qword_1007B7280);
    if (v27((char *)v25, 1, v6) == 1)
    {
      sub_10000D0F0((uint64_t)v17, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v6);
      v30 = 0;
      v26 = &qword_1007B6470;
    }
    else
    {
      v31 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v76, v25, v6);
      v32 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v31, v6, v32);
      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33(v31, v6);
      v26 = &qword_1007B7280;
      sub_10000D0F0((uint64_t)v17, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v19, &qword_1007B7280);
      v33((char *)v29, v6);
    }
  }
  sub_10000D0F0((uint64_t)v11, v26);
  v34 = objc_opt_self(CBPeripheral);
  v35 = v79;
  v36 = swift_dynamicCastObjCClass(v79, v34);
  if (v36)
  {
    v37 = (void *)v36;
    v38 = sub_1004EF4DC();
    v39 = v82;
    if ((v38 & 1) != 0)
    {
      v40 = String._bridgeToObjectiveC()();
      v41 = objc_msgSend(v37, "hasTag:", v40);

      v42 = v41 ^ 1;
    }
    else
    {
      v42 = 0;
    }
  }
  else
  {
    v42 = 0;
    v39 = v82;
  }
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100221DF8(v43, (uint64_t)qword_1007C37A0);
  v45 = v35;
  v46 = v39;
  v47 = v45;
  v48 = v46;
  v79 = (void *)v44;
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.default.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    LODWORD(v76) = v42;
    LODWORD(v78) = v30;
    v51 = swift_slowAlloc(44, -1);
    v52 = (_QWORD *)swift_slowAlloc(8, -1);
    v75 = swift_slowAlloc(32, -1);
    v85 = v75;
    *(_DWORD *)v51 = 138413314;
    v83 = (uint64_t)v47;
    v53 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v51 + 4);
    v74 = v52;
    *v52 = v47;

    *(_WORD *)(v51 + 12) = 2048;
    v83 = v81;
    v39 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v51 + 14);
    v54 = *(_QWORD *)&v39[v80];
    *(_WORD *)(v51 + 22) = 2080;
    v55 = *(unsigned __int8 *)(v54 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
    if (v55 == 2)
    {
      v83 = 0;
      v84 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v84);
      v56 = (const char *)0x800000010061EEE0;
      v57 = 0xD000000000000013;
    }
    else
    {
      if ((v55 & 1) != 0)
        v57 = 1702195828;
      else
        v57 = 0x65736C6166;
      if ((v55 & 1) != 0)
        v56 = (const char *)0xE400000000000000;
      else
        v56 = (const char *)0xE500000000000000;
    }
    v83 = sub_100228BD8(v57, (unint64_t)v56, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v51 + 24);

    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v51 + 32) = 1024;
    v65 = v78;
    LODWORD(v83) = v78 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, (char *)&v83 + 4, v51 + 34);
    *(_WORD *)(v51 + 38) = 1024;
    v42 = (int)v76;
    LODWORD(v83) = (_DWORD)v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, (char *)&v83 + 4, v51 + 40);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "peerDidRequestPairing!!!! %@, type: %ld, paired? %s, isStoredPeripheral? %{BOOL}d, isTagged? %{BOOL}d", (uint8_t *)v51, 0x2Cu);
    v66 = sub_100008384(&qword_1007B4C30);
    v67 = v74;
    swift_arrayDestroy(v74, 1, v66);
    swift_slowDealloc(v67, -1, -1);
    v68 = v75;
    swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v51, -1, -1);

    if ((v65 & 1) != 0)
      goto LABEL_32;
  }
  else
  {

    if ((v30 & 1) != 0)
    {
LABEL_32:
      v69 = v80;
      v70 = *(_QWORD *)&v39[v80];
      v71 = *(void **)(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
      *(_QWORD *)(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing) = v47;
      v72 = v47;

      v73 = *(_QWORD *)&v39[v69] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType;
      *(_QWORD *)v73 = v81;
      *(_BYTE *)(v73 + 8) = 0;
      sub_1004C99E8();
      return;
    }
  }
  if (v42)
  {
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter(v59);
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "peerDidRequestPairing - is a B332 but not the one we're currently trying to pair to. Rejecting.", v61, 2u);
      swift_slowDealloc(v61, -1, -1);
    }

    v62 = (const char *)sub_10021E5F8((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v64 = swift_bridgeObjectRelease(v62).n128_u64[0];
    objc_msgSend(v77, "respondToPairingRequest:type:accept:data:", v47, v81, 0, isa, v64);

  }
}

void sub_1004F2A68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  int v50;
  _QWORD *v51;
  uint64_t v52;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B6470);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7280);
  v11 = __chkstk_darwin(v10);
  v46 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v44 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v44 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v44 - v19;
  v48 = a1;
  v21 = objc_msgSend(a1, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v21);

  v22 = 1;
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v49(v20, 0, 1, v4);
  v47 = v2;
  v45 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v23 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v23)
  {
    v24 = objc_msgSend(v23, "identifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v22 = 0;
  }
  v49(v18, v22, 1, v4);
  v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  v26 = &qword_1007B7280;
  sub_100221F28((uint64_t)v20, (uint64_t)v9, &qword_1007B7280);
  sub_100221F28((uint64_t)v18, v25, &qword_1007B7280);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v9, 1, v4) == 1)
  {
    sub_10000D0F0((uint64_t)v18, &qword_1007B7280);
    sub_10000D0F0((uint64_t)v20, &qword_1007B7280);
    if (v27(v25, 1, v4) == 1)
    {
      v28 = -1;
    }
    else
    {
      v26 = &qword_1007B6470;
      v28 = 0;
    }
  }
  else
  {
    sub_100221F28((uint64_t)v9, (uint64_t)v15, &qword_1007B7280);
    if (v27(v25, 1, v4) == 1)
    {
      sub_10000D0F0((uint64_t)v18, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v20, &qword_1007B7280);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
      v28 = 0;
      v26 = &qword_1007B6470;
    }
    else
    {
      v29 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v25, v4);
      v30 = sub_100220D78((unint64_t *)&unk_1007B7300, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v29, v4, v30);
      v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v29, v4);
      v26 = &qword_1007B7280;
      sub_10000D0F0((uint64_t)v18, &qword_1007B7280);
      sub_10000D0F0((uint64_t)v20, &qword_1007B7280);
      v31(v15, v4);
    }
  }
  sub_10000D0F0((uint64_t)v9, v26);
  if (qword_1007B41F0 != -1)
    swift_once(&qword_1007B41F0, sub_1004C46F4);
  v32 = type metadata accessor for Logger(0);
  sub_100221DF8(v32, (uint64_t)qword_1007C37A0);
  v33 = v48;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  if (!os_log_type_enabled(v34, v35))
  {

    if ((v28 & 1) == 0)
      return;
    goto LABEL_16;
  }
  v36 = swift_slowAlloc(18, -1);
  v48 = (_QWORD *)swift_slowAlloc(8, -1);
  *(_DWORD *)v36 = 138412546;
  v51 = v33;
  v37 = v4;
  v38 = v28;
  v39 = v33;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v36 + 4);
  v40 = v48;
  *v48 = v33;

  LOBYTE(v39) = v38;
  v4 = v37;
  *(_WORD *)(v36 + 12) = 1024;
  v50 = v39 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v36 + 14);
  _os_log_impl((void *)&_mh_execute_header, v34, v35, "peerDidFailToCompletePairing: %@, isStoredPeripheral: %{BOOL}d", (uint8_t *)v36, 0x12u);
  v41 = sub_100008384(&qword_1007B4C30);
  swift_arrayDestroy(v40, 1, v41);
  swift_slowDealloc(v40, -1, -1);
  swift_slowDealloc(v36, -1, -1);

  if ((v39 & 1) != 0)
  {
LABEL_16:
    v42 = *(_QWORD *)(v47 + v45);
    *(_BYTE *)(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed) = 0;
    swift_retain();
    sub_1004C4E78();
    swift_release(v42);
    v43 = (unint64_t)v46;
    v49(v46, 1, 1, v4);
    sub_1004CF030(v43, 0);
    sub_10000D0F0(v43, &qword_1007B7280);
  }
}

uint64_t sub_1004F2FE8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v11 = swift_allocObject(&unk_10072C500, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v1;
  aBlock[4] = sub_1004F4564;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C518;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  static DispatchQoS.unspecified.getter(v1);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

uint64_t sub_1004F31DC(uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, const char *a5, uint64_t a6, unint64_t a7)
{
  char *v7;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v29 = a7;
  ObjectType = swift_getObjectType(v7);
  v30 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v15 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v16 - 8);
  v33 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&ObjectType - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v19 = (_QWORD *)swift_allocObject(&unk_10072C488, 88, 7);
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = a6;
  v20 = ObjectType;
  v21 = v29;
  v19[8] = v29;
  v19[9] = v7;
  v19[10] = v20;
  aBlock[4] = sub_1004F43E8;
  v37 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C4A0;
  v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a2);
  sub_10022E4A8(a3, a4);
  swift_bridgeObjectRetain(a5);
  sub_10022E4A8(a6, v21);
  static DispatchQoS.unspecified.getter(v7);
  v35 = _swiftEmptyArrayStorage;
  v23 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100008384((uint64_t *)&unk_1007B6410);
  v25 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v24, v25, v30, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v15, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
  return swift_release(v37);
}

uint64_t sub_1004F3434(uint64_t a1, const char *a2, uint64_t a3, unint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v16 = (_QWORD *)swift_allocObject(&unk_10072C2D0, 56, 7);
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_1004F429C;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C2E8;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  swift_bridgeObjectRetain(a2);
  v19 = sub_10022E4A8(a3, a4);
  static DispatchQoS.unspecified.getter(v19);
  v26 = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100008384((uint64_t *)&unk_1007B6410);
  v22 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v21, v22, v9, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v28);
}

uint64_t sub_1004F3650(int a1, char a2, int a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  v16 = swift_allocObject(&unk_10072C280, 26, 7);
  *(_DWORD *)(v16 + 16) = a3;
  *(_DWORD *)(v16 + 20) = a1;
  *(_BYTE *)(v16 + 24) = a4;
  *(_BYTE *)(v16 + 25) = a2;
  aBlock[4] = sub_1004F4258;
  v26 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C298;
  v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v17);
  v24 = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008384((uint64_t *)&unk_1007B6410);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v19, v20, v9, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v26);
}

uint64_t sub_1004F3854(const char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v11 = swift_allocObject(&unk_10072C230, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v1;
  aBlock[4] = sub_1004F4240;
  v20 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C248;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v1);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = sub_100008384((uint64_t *)&unk_1007B6410);
  v15 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v3, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v20);
}

uint64_t sub_1004F3A4C(int a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  v14 = swift_allocObject(&unk_10072C1E0, 48, 7);
  *(_DWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = v3;
  aBlock[4] = sub_1004F4204;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072C1F8;
  v15 = _Block_copy(aBlock);
  sub_10022E4A8(a2, a3);
  static DispatchQoS.unspecified.getter(v3);
  v22 = _swiftEmptyArrayStorage;
  v16 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100008384((uint64_t *)&unk_1007B6410);
  v18 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v7, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v24);
}

uint64_t sub_1004F3C60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004F3C84(void *a1)
{
  uint64_t v1;

  sub_1004EDB28(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004F3C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004F3C9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1004F3CA4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004EE548(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1004F3CAC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004F3CD0()
{
  uint64_t v0;

  sub_1004DB6F0(v0);
}

unint64_t sub_1004F3CD8()
{
  unint64_t result;

  result = qword_1007C41F8;
  if (!qword_1007C41F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SDRunState, &type metadata for SDRunState);
    atomic_store(result, (unint64_t *)&qword_1007C41F8);
  }
  return result;
}

unint64_t sub_1004F3D1C()
{
  unint64_t result;

  result = qword_1007C4200;
  if (!qword_1007C4200)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(result, (unint64_t *)&qword_1007C4200);
  }
  return result;
}

uint64_t sub_1004F3D60()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004F3D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1007C424C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000D098;
  *(_OWORD *)(v2 + 40) = v3;
  return swift_task_switch(sub_1004DD6F8, 0, 0);
}

uint64_t sub_1004F3DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4264);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return sub_1004DED4C(a1, a2, v6);
}

uint64_t sub_1004F3E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

void sub_1004F3F18(int a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_1004DFC3C(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1004F3F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004F3FF8()
{
  return sub_10026EB58(sub_1004E01CC);
}

uint64_t sub_1004F4004()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1004F4028()
{
  uint64_t v0;

  sub_1004E0150(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1004F4034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1004F40C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1007C42A4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D098;
  return sub_1004DF418(a1, v6, v7, v8, v9);
}

uint64_t sub_1004F4168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C4314);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D12C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1007C4310 + dword_1007C4310))(a1, v4);
}

uint64_t sub_1004F41D8()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1004F4204()
{
  uint64_t v0;

  sub_1004ECAF8(*(_DWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1004F4214()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F4240()
{
  uint64_t v0;

  sub_1004EC264(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004F4248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

void sub_1004F4258()
{
  uint64_t v0;

  sub_1004EBF84(*(_DWORD *)(v0 + 16), *(_DWORD *)(v0 + 20), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_1004F4268()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(const char **)(v0 + 32));
  sub_100225AB4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1004F429C()
{
  uint64_t v0;

  sub_1004EB450(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(const char **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1004F42AC()
{
  return sub_100232EC8(48);
}

uint64_t sub_1004F42B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007C433C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_1004EBD20(a1, v4, v5, v7, v6);
}

uint64_t sub_1004F432C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F4350()
{
  uint64_t v0;

  sub_1004D2694(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004F4358()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004F437C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1004F438C(void *a1)
{
  uint64_t v1;

  return sub_1004E2244(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004F4394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F43A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(const char **)(v0 + 24));
  sub_100225AB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(const char **)(v0 + 48));
  sub_100225AB4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 88, 7);
}

void sub_1004F43E8()
{
  uint64_t v0;

  sub_1004E9CCC(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(const char **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(char **)(v0 + 72));
}

void sub_1004F441C()
{
  void (*v0)(uint64_t);
  void *v1;
  void *v2;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (void (*)(uint64_t))off_1007D6600;
  v7 = off_1007D6600;
  if (!off_1007D6600)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1004F4DAC;
    v3[3] = &unk_100714258;
    v3[4] = &v4;
    sub_1004F4DAC(v3);
    v0 = (void (*)(uint64_t))v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    v0(257);
  }
  else
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "io_service_t _IOAccessoryManagerGetServiceWithPrimaryPort(SInt32)"));
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("Daemon-iOS-Bridging-Header.h"), 94, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1004F4520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004F4538()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F4564()
{
  uint64_t v0;

  sub_1004E946C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004F456C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004E8BC4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1004F4588()
{
  uint64_t v0;

  sub_1004E75E4(v0);
}

void sub_1004F4590()
{
  uint64_t v0;

  sub_1004E64F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004F4598()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004F45CC()
{
  uint64_t v0;

  return sub_1004E6040(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1004F45D8()
{
  uint64_t v0;

  sub_1004E5CD8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004F45E0()
{
  return sub_1004F4AD4((uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

uint64_t sub_1004F45EC()
{
  return sub_10026EB58(sub_1004D19B0);
}

void sub_1004F45F8()
{
  uint64_t v0;

  sub_1004D14EC(*(void **)(v0 + 16));
}

void sub_1004F4600(uint64_t a1)
{
  uint64_t v1;

  sub_1004D11BC(a1, *(void **)(v1 + 16));
}

void sub_1004F4608()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)v1;
    v3 = v2 > 4;
    v4 = (1 << v2) & 0x1A;
    if (!v3 && v4 != 0)
      sub_1004C99E8();
  }
}

const char *sub_1004F4668(int a1)
{
  const char *result;

  result = "Unknown";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "D22ish";
      break;
    case 2:
      result = "SEish";
      break;
    case 3:
      result = "J3XXish";
      break;
    case 4:
      result = "N112ish";
      break;
    case 5:
      result = "B520ish";
      break;
    case 6:
      result = "B620ish";
      break;
    case 7:
      result = "J255ish";
      break;
    default:
      result = "?";
      break;
  }
  return result;
}

uint64_t sub_1004F4708(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C82AC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072D388, (uint64_t)sub_1004F4DA4, (uint64_t)&unk_10072D3A0);
}

uint64_t sub_1004F4738(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C82AC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072D338, (uint64_t)sub_1004F4D9C, (uint64_t)&unk_10072D350);
}

uint64_t sub_1004F4768(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C82AC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072D2E8, (uint64_t)sub_1004F4D94, (uint64_t)&unk_10072D300);
}

uint64_t sub_1004F4798(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C86C0, (uint64_t)&unk_10072D2B0);
}

uint64_t sub_1004F47C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C889C, (uint64_t)&unk_10072D288);
}

uint64_t sub_1004F47E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C88B0, (uint64_t)&unk_10072D260);
}

uint64_t sub_1004F4810(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C88C4, (uint64_t)&unk_10072D238);
}

uint64_t sub_1004F4838(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C88D8, (uint64_t)&unk_10072D210);
}

uint64_t sub_1004F4860(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C89FC, (uint64_t)&unk_10072D1E8);
}

uint64_t sub_1004F4888(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C82AC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072D1A8, (uint64_t)sub_1004F4D8C, (uint64_t)&unk_10072D1C0);
}

uint64_t sub_1004F48B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C8C30, (uint64_t)&unk_10072D170);
}

uint64_t sub_1004F48E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C86D4(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1004C8C40, (uint64_t)&unk_10072D148);
}

uint64_t sub_1004F4908(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C8D68(a1, *(char **)(v1 + 16));
}

uint64_t sub_1004F4910(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C82AC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072CFC8, (uint64_t)sub_1004F4AA8, (uint64_t)&unk_10072CFE0);
}

void sub_1004F4940()
{
  uint64_t v0;

  sub_1004CBF4C(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1004F4948(void *a1)
{
  uint64_t v1;

  return sub_1004CCC34(a1, *(void **)(v1 + 16));
}

void sub_1004F4950(void *a1)
{
  uint64_t v1;

  sub_1004CD00C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004F4958()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F497C(void *a1)
{
  uint64_t v1;

  return sub_1004CDEC8(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

void sub_1004F4984(void *a1)
{
  uint64_t v1;

  sub_1004CE080(a1, *(_QWORD *)(v1 + 16));
}

void sub_1004F498C()
{
  uint64_t v0;

  sub_1004CE294(*(_QWORD *)(v0 + 16), "systemLockStateChanged");
}

void sub_1004F49AC()
{
  uint64_t v0;

  sub_1004CE374(v0);
}

void sub_1004F49B4()
{
  uint64_t v0;

  sub_1004CEAAC(v0);
}

void sub_1004F49BC()
{
  uint64_t v0;

  sub_1004CECC8(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1004F49C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004F49E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1004F49F4()
{
  return sub_100232EC8(56);
}

uint64_t sub_1004F49FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007C4424);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1004CD3AC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004F4A7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F4AA0()
{
  uint64_t v0;

  sub_1004CCFA8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1004F4AA8()
{
  uint64_t v0;

  sub_1004CE294(*(_QWORD *)(v0 + 16), "kStatusSystemUIChanged");
}

uint64_t sub_1004F4AC8()
{
  return sub_1004F4AD4((uint64_t (*)(_QWORD))&type metadata accessor for Notification);
}

uint64_t sub_1004F4AD4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

void sub_1004F4B4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0) - 8) + 80);
  sub_1004C8FD0(v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1004F4B8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004F4BB8(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007C4434);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1004E5BAC(v8, a1, v4, v5, v6, v7);
}

uint64_t sub_1004F4C44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007C4444);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1004E597C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004F4CC8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004F4CFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1007C4454);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1004E5784(a1, v4, v5, v6, v7, v8);
}

id sub_1004F4D7C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "releaseHUDTransaction");
}

id sub_1004F4D8C()
{
  uint64_t v0;

  return sub_1004C8B54(*(void **)(v0 + 16));
}

uint64_t sub_1004F4D94()
{
  uint64_t v0;

  return sub_1004C85B0(*(_QWORD *)(v0 + 16));
}

void sub_1004F4D9C()
{
  uint64_t v0;

  sub_1004C849C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1004F4DA4()
{
  uint64_t v0;

  return sub_1004C80D8(*(_QWORD *)(v0 + 16));
}

void *sub_1004F4DAC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *result;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v5 = 0;
  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = (void *)qword_1007D6608;
  v9 = qword_1007D6608;
  if (!qword_1007D6608)
  {
    v10 = *(_OWORD *)off_10072D3C8;
    v11 = 0;
    v2 = (void *)_sl_dlopen(&v10, &v5);
    v7[3] = (uint64_t)v2;
    qword_1007D6608 = (uint64_t)v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void *libIOAccessoryManagerLibrary(void)"));
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("Daemon-iOS-Bridging-Header.h"), 93, CFSTR("%s"), v5);

    __break(1u);
    goto LABEL_7;
  }
  v3 = v5;
  if (v5)
LABEL_7:
    free(v3);
  result = dlsym(v2, "IOAccessoryManagerGetServiceWithPrimaryPort");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1007D6600 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1004F4F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004F5248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[7] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v4);
  v2[9] = swift_task_alloc(v4);
  v2[10] = swift_task_alloc(v4);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F52F0, static AirDropActor.shared, 0);
}

uint64_t sub_1004F52F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  sub_10022E534(*(_QWORD *)(v0 + 40), v1);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 2)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_1002443C8(*(_QWORD *)(v0 + 80), type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10022E534(v5, v4);
    swift_beginAccess(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints, v0 + 16, 33, 0);
    sub_10045DA0C(v3, v4);
    swift_endAccess(v0 + 16);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 80);
  }
  sub_1002443C8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F53E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C44E0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C44E0);
  if (qword_1007B3E58 != -1)
    swift_once(&qword_1007B3E58, sub_1002E9E60);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004F5474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for NWEndpoint(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints) = &_swiftEmptySetSingleton;
  v32 = a1;
  v16 = UUID.uuidString.getter(v13);
  v18 = v17;
  *(_QWORD *)(v2 + 16) = v16;
  *(_QWORD *)(v2 + 24) = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  sub_1004FB77C((uint64_t)v10, v16, v18, (uint64_t)v15);
  sub_10000D0F0((uint64_t)v10, &qword_1007B7280);
  v30 = v12;
  v31 = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID, v15, v11);
  *v7 = nw_endpoint_create_application_service("com.apple.AirDrop", v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for NWEndpoint.opaque(_:), v4);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint, v7, v4);
  if (qword_1007B4210 != -1)
    swift_once(&qword_1007B4210, sub_1004F53E4);
  v19 = type metadata accessor for Logger(0);
  sub_100221DF8(v19, (uint64_t)qword_1007C44E0);
  v20 = swift_retain_n(v2, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v34 = v24;
    *(_DWORD *)v23 = 136315138;
    v25 = *(_QWORD *)(v2 + 16);
    v26 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain(v26);
    v33 = sub_100228BD8(v25, v26, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v23 + 4);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Creating NearFieldDevice %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_release_n(v2, 2);
  }

  v27 = v31;
  v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v28(v32, v31);
  v28((uint64_t)v15, v27);
  return v2;
}

unint64_t sub_1004F57E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v1);
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v1);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000010;
}

uint64_t sub_1004F5884()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint;
  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1004F5914()
{
  return type metadata accessor for SDAirDropDiscoveredNearFieldDevice(0);
}

uint64_t type metadata accessor for SDAirDropDiscoveredNearFieldDevice(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C4528;
  if (!qword_1007C4528)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredNearFieldDevice);
  return result;
}

uint64_t sub_1004F5958(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_1005DB3C8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for NWEndpoint(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_1004F59F8()
{
  return sub_1004F57E8();
}

uint64_t sub_1004F5A18@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint, (uint64_t (*)(_QWORD))&type metadata accessor for NWEndpoint, a1);
}

uint64_t sub_1004F5A2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_100008384(&qword_1007B7760);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F5ADC, static AirDropActor.shared, 0);
}

uint64_t sub_1004F5ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  sub_10022E534(*(_QWORD *)(v0 + 40), v2);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 2)
  {
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    sub_1002443C8(*(_QWORD *)(v0 + 72), type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints, v0 + 16, 33, 0);
    sub_100472B6C(v5, v3);
    swift_endAccess(v0 + 16);
    sub_10000D0F0(v3, &qword_1007B7760);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v0 + 72), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v6 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F5BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003488E0(&OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, a1);
}

uint64_t sub_1004F5BD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F5C38, static AirDropActor.shared, 0);
}

uint64_t sub_1004F5C38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)(**(_QWORD **)(v0 + 40)
                + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_1004F5C98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C45EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  return sub_1004F5248(a1);
}

uint64_t sub_1004F5CE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C45F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  return sub_1004F5A2C(a1);
}

unint64_t sub_1004F5D38(uint64_t a1)
{
  unint64_t result;

  result = sub_1004F5D5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1004F5D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007C45E0;
  if (!qword_1007C45E0)
  {
    v1 = type metadata accessor for SDAirDropDiscoveredNearFieldDevice(255);
    result = swift_getWitnessTable(&unk_1005DB434, v1);
    atomic_store(result, &qword_1007C45E0);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropClassroomRunnerFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary31SDAirDropClassroomRunnerFactory);
}

uint64_t sub_1004F5DC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;

  v2[6] = a1;
  v2[7] = v1;
  v3 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007C33D0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v2[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[14] = v8;
  v2[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v2[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[18] = v11;
  v2[19] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CancellationError(0);
  v2[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[21] = v13;
  v2[22] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDropSend.Failure(0);
  v2[23] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[24] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[25] = swift_task_alloc(v16);
  v2[26] = swift_task_alloc(v16);
  v17 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2[27] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[28] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[29] = swift_task_alloc(v19);
  v2[30] = swift_task_alloc(v19);
  v2[31] = swift_task_alloc(v19);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v2[32] = static AirDropActor.shared;
  v20 = (_QWORD *)swift_task_alloc(dword_1007C0AC4);
  v2[33] = v20;
  *v20 = v2;
  v20[1] = sub_1004F5FE0;
  return sub_100433000(0, 0xF000000000000000);
}

uint64_t sub_1004F5FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 256);
  v4 = *(_QWORD *)(*v2 + 264);
  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v6 = sub_1004F6384;
  else
    v6 = sub_1004F604C;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1004F604C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[34];
  v2 = v0[7];
  v3 = swift_task_alloc(32);
  v0[36] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
  v0[37] = v4;
  *v4 = v0;
  v4[1] = sub_1004F60D4;
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0[31], v0[34], &unk_1007C4720, v3, v0[27]);
}

uint64_t sub_1004F60D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  const char *v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[32];
    v5 = sub_1004F6734;
  }
  else
  {
    v6 = v2[36];
    v7 = (const char *)v2[34];
    v8 = v2[32];
    swift_bridgeObjectRelease(v7);
    swift_task_dealloc(v6);
    v5 = sub_1004F6154;
    v4 = v8;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1004F6154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 32))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F6230()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 256);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_1004F6288, v1, 0);
}

uint64_t sub_1004F6288()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  swift_errorRelease(*(_QWORD *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F6384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = v0[35];
  v0[5] = v1;
  v0[39] = v1;
  v2 = v0[22];
  v3 = v0[20];
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v2, v0 + 5, v4, v3, 0))
  {
    v6 = v0[21];
    v5 = v0[22];
    v7 = v0[20];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 104))(v0[26], enum case for SFAirDropSend.Failure.cancelled(_:), v0[23]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[5]);
  }
  else
  {
    swift_errorRelease(v0[5]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }
  v9 = v0[29];
  v8 = v0[30];
  v11 = v0[27];
  v10 = v0[28];
  v40 = v0[25];
  v35 = v0[23];
  v36 = v0[26];
  v33 = v0[19];
  v34 = v0[24];
  v44 = v0[18];
  v12 = v0[16];
  v46 = v0[17];
  v13 = v0[15];
  v14 = v0[12];
  v38 = v0[14];
  v39 = v0[13];
  v37 = v0[11];
  v41 = v0[7];
  v42 = v0[10];
  v47 = v0[6];
  v15 = v41 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v43 = v0[9];
  v45 = v0[8];
  v16 = swift_beginAccess(v41 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer, v0 + 2, 0, 0);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16);
  v18 = v17(v8, v15, v11, v16);
  SFAirDropSend.Transfer.id.getter(v18);
  v19 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v19(v8, v11);
  v20 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v9, v15, v11);
  SFAirDropSend.Transfer.startDate.getter(v20);
  v19(v9, v11);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v12, v13);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  v21(v14, v36, v35);
  v22 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  v23 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104))(v14, v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v23);
  v25 = SFAirDropSend.Transfer.Metrics.result.setter(v14);
  static Date.now.getter(v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v39);
  SFAirDropSend.Transfer.Metrics.endDate.setter(v37);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v40, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v35);
  LOBYTE(v22) = static SFAirDropSend.Failure.== infix(_:_:)(v36, v40);
  v26 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v0[40] = v26;
  v26(v40, v35);
  v27 = *(_QWORD *)(v41 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v41
                                             + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
  if ((v22 & 1) != 0)
    v29 = 5;
  else
    v29 = 4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, ObjectType, v27);
  v30 = v42 + *(int *)(sub_100008384(&qword_1007B8858) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v42, v33, v46);
  v21(v30, v36, v35);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v42, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v45);
  sub_1002BC504(v42, v47);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v45);
  v31 = (_QWORD *)swift_task_alloc(dword_1007B8834);
  v0[41] = v31;
  *v31 = v0;
  v31[1] = sub_1004F6230;
  return sub_1002BB76C();
}

uint64_t sub_1004F6734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease(*(const char **)(v0 + 272));
  swift_task_dealloc(v1);
  v2 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 312) = v2;
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  swift_errorRetain(v2);
  v5 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v3, v0 + 40, v5, v4, 0))
  {
    v7 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 104))(*(_QWORD *)(v0 + 208), enum case for SFAirDropSend.Failure.cancelled(_:), *(_QWORD *)(v0 + 184));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_errorRelease(*(_QWORD *)(v0 + 40));
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 40));
    swift_errorRetain(v2);
    SFAirDropSend.Failure.init(_:)(v2);
  }
  v10 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 224);
  v41 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 184);
  v37 = *(_QWORD *)(v0 + 208);
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(_QWORD *)(v0 + 192);
  v45 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 128);
  v47 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 96);
  v39 = *(_QWORD *)(v0 + 112);
  v40 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 88);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 80);
  v48 = *(_QWORD *)(v0 + 48);
  v16 = v42 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v44 = *(_QWORD *)(v0 + 72);
  v46 = *(_QWORD *)(v0 + 64);
  v17 = swift_beginAccess(v42 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer, v0 + 16, 0, 0);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16);
  v19 = v18(v9, v16, v12, v17);
  SFAirDropSend.Transfer.id.getter(v19);
  v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v20(v9, v12);
  v21 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v10, v16, v12);
  SFAirDropSend.Transfer.startDate.getter(v21);
  v20(v10, v12);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v13, v14);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v22(v15, v37, v36);
  v23 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  v24 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v15, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v24);
  v26 = SFAirDropSend.Transfer.Metrics.result.setter(v15);
  static Date.now.getter(v26);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v40);
  SFAirDropSend.Transfer.Metrics.endDate.setter(v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v41, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v36);
  LOBYTE(v23) = static SFAirDropSend.Failure.== infix(_:_:)(v37, v41);
  v27 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  *(_QWORD *)(v0 + 320) = v27;
  v27(v41, v36);
  v28 = *(_QWORD *)(v42 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v42
                                             + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
  if ((v23 & 1) != 0)
    v30 = 5;
  else
    v30 = 4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v30, ObjectType, v28);
  v31 = v43 + *(int *)(sub_100008384(&qword_1007B8858) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v43, v34, v47);
  v22(v31, v37, v36);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v43, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v46);
  sub_1002BC504(v43, v48);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v46);
  v32 = (_QWORD *)swift_task_alloc(dword_1007B8834);
  *(_QWORD *)(v0 + 328) = v32;
  *v32 = v0;
  v32[1] = sub_1004F6230;
  return sub_1002BB76C();
}

uint64_t sub_1004F6AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(dword_1007C472C);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000D12C;
  return sub_1004F6B68(a1, a2, a4);
}

uint64_t sub_1004F6B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v5 = sub_100008384(&qword_1007C4330);
  v4[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007C33D0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v4[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[18] = v8;
  v4[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v4[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[22] = v11;
  v4[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v4[24] = v12;
  v4[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v4[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v4[27] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[28] = v15;
  v4[29] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v4[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v4[31] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[32] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[33] = swift_task_alloc(v19);
  v4[34] = swift_task_alloc(v19);
  v20 = sub_100008384(&qword_1007BA480);
  v4[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008384(&qword_1007BA488);
  v4[36] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v4[37] = v22;
  v4[38] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v4[39] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v4[40] = v24;
  v4[41] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SFAirDropSend.Transfer(0);
  v4[42] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v4[43] = v26;
  v27 = *(_QWORD *)(v26 + 64);
  v4[44] = v27;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[45] = swift_task_alloc(v28);
  v4[46] = swift_task_alloc(v28);
  v4[47] = swift_task_alloc(v28);
  v29 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v4[48] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v4[49] = v30;
  v4[50] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SFAirDrop.Progress(0);
  v4[51] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v4[52] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[53] = swift_task_alloc(v33);
  v4[54] = swift_task_alloc(v33);
  v34 = sub_100008384(&qword_1007B6BD8);
  v4[55] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v4[56] = v35;
  v4[57] = swift_task_alloc((*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SFAirDropSend.Request(0);
  v4[58] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v4[59] = v37;
  v4[60] = swift_task_alloc((*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = _s10AskRequestVMa(0);
  v4[61] = v38;
  v4[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v38 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100008384(&qword_1007B7760);
  v4[63] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v39 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[64] = v40;
  v41 = *(_QWORD *)(v40 - 8);
  v4[65] = v41;
  v42 = (*(_QWORD *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[66] = swift_task_alloc(v42);
  v4[67] = swift_task_alloc(v42);
  v4[68] = swift_task_alloc(v42);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v43 = static AirDropActor.shared;
  v4[69] = static AirDropActor.shared;
  return swift_task_switch(sub_1004F6F54, v43, 0);
}

uint64_t sub_1004F6F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 112)
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  v5 = swift_retain();
  CurrentValueSubject.value.getter(v5);
  swift_release(v4);
  v6 = *(const char **)(v0 + 64);
  sub_100298F30((uint64_t)v6, v3);
  v7 = swift_bridgeObjectRelease(v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 48))(v3, 1, v2, v7) == 1)
  {
    v8 = sub_10000D0F0(*(_QWORD *)(v0 + 504), &qword_1007B7760);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 544);
    v10 = *(_QWORD *)(v0 + 536);
    v11 = *(_QWORD *)(v0 + 512);
    sub_100221DB4(*(_QWORD *)(v0 + 504), v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10022E534(v9, v10);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 3)
    {
      v12 = *(_QWORD *)(v0 + 96);
      v13 = **(void ***)(v0 + 536);
      *(_QWORD *)(v0 + 560) = v13;
      if (*(_QWORD *)(v12 + 16))
      {
        v14 = *(_QWORD *)(v0 + 104);
        v15 = *(_QWORD *)(v0 + 112);
        v16 = *(const char **)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls);
        *(_QWORD *)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls) = v12;
        swift_bridgeObjectRelease(v16);
        type metadata accessor for SDAirDropContentHandlerUtilities();
        *(_QWORD *)(v0 + 568) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
        swift_bridgeObjectRetain((const char *)v12);
        v18 = SFAirDropSend.Request.requestSource.getter(v17);
        v20 = v19;
        *(_QWORD *)(v0 + 576) = v19;
        v21 = (_QWORD *)swift_task_alloc(dword_1007BA884);
        *(_QWORD *)(v0 + 584) = v21;
        *v21 = v0;
        v21[1] = sub_1004F739C;
        return sub_100324F20(v14, v18, v20, *(_QWORD *)(v0 + 544));
      }
      sub_1002443C8(*(_QWORD *)(v0 + 544), type metadata accessor for SDAirDropDiscoveredEndpoint);

    }
    else
    {
      v23 = *(_QWORD *)(v0 + 536);
      sub_1002443C8(*(_QWORD *)(v0 + 544), type metadata accessor for SDAirDropDiscoveredEndpoint);
      v8 = sub_1002443C8(v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
  }
  v24 = Logger.logObject.getter(v8);
  v25 = static os_log_type_t.error.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Missing classroom endpoint or sendable urls", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = type metadata accessor for SFAirDropSend.Failure(0);
  v28 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v27, v28, 0, 0);
  v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, enum case for SFAirDropSend.Failure.badRequest(_:), v27);
  swift_willThrow(v30);
  v31 = *(_QWORD *)(v0 + 536);
  v32 = *(_QWORD *)(v0 + 528);
  v34 = *(_QWORD *)(v0 + 496);
  v33 = *(_QWORD *)(v0 + 504);
  v35 = *(_QWORD *)(v0 + 480);
  v36 = *(_QWORD *)(v0 + 456);
  v38 = *(_QWORD *)(v0 + 424);
  v37 = *(_QWORD *)(v0 + 432);
  v39 = *(_QWORD *)(v0 + 400);
  v40 = *(_QWORD *)(v0 + 376);
  v41 = *(_QWORD *)(v0 + 368);
  v42 = *(_QWORD *)(v0 + 360);
  v43 = *(_QWORD *)(v0 + 328);
  v44 = *(_QWORD *)(v0 + 304);
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 240);
  v49 = *(_QWORD *)(v0 + 232);
  v50 = *(_QWORD *)(v0 + 208);
  v51 = *(_QWORD *)(v0 + 200);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(_QWORD *)(v0 + 160);
  v54 = *(_QWORD *)(v0 + 152);
  v55 = *(_QWORD *)(v0 + 128);
  v56 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 544));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F739C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD **)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 584);
  v5[74] = a1;
  v5[75] = a2;
  v5[76] = a3;
  v5[77] = v3;
  swift_task_dealloc(v6);
  v7 = (const char *)v5[72];
  v8 = v5[69];
  swift_bridgeObjectRelease(v7);
  if (v3)
    v9 = sub_1004F8600;
  else
    v9 = sub_1004F7420;
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_1004F7420()
{
  _QWORD *v0;
  const char *v1;
  _QWORD *v2;
  const char *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  const char *v18;

  v1 = (const char *)v0[74];
  if (v1)
  {
    v2 = (_QWORD *)v0[76];
    v3 = (const char *)v0[75];
    sub_10031C05C(v0[74], (uint64_t)v3, (uint64_t)v2);
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v1).n128_u64[0];
    swift_bridgeObjectRelease(v3, v4);
  }
  else
  {
    v2 = _swiftEmptyArrayStorage;
  }
  v6 = v0[59];
  v5 = v0[60];
  v7 = v0[58];
  v8 = v0[14];
  v18 = (const char *)v0[13];
  v9 = v8 + v0[71];
  swift_beginAccess(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_mediaConversionDestinations, v0 + 2, 33, 0);
  sub_10034334C((uint64_t)v2);
  swift_endAccess(v0 + 2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  sub_1002B0AF0();
  v11 = v10;
  v13 = v12;
  v14 = dword_1007C24C4;
  v15 = *(id *)(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  swift_bridgeObjectRetain(v18);
  v16 = (_QWORD *)swift_task_alloc(v14);
  v0[78] = v16;
  *v16 = v0;
  v16[1] = sub_1004F7590;
  return sub_100494D0C(v0[62], v0[60], v11, v13, (uint64_t)v15, (uint64_t)v18, v0[74], v0[75]);
}

uint64_t sub_1004F7590()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 624);
  *(_QWORD *)(*v1 + 632) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1004F87CC;
  else
    v4 = sub_1004F75F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 552), 0);
}

uint64_t sub_1004F75F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSArray v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  Class isa;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  __n128 v24;
  void (*v25)(uint64_t, char *, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 112);
  type metadata accessor for URL(0);
  v3 = v1;
  v4.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (*(_QWORD *)(v2
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_bundleIdentifier
                 + 8))
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  v6 = *(_QWORD *)(v0 + 496) + *(int *)(*(_QWORD *)(v0 + 488) + 56);
  v7 = *(_QWORD *)(v6 + 8);
  if (v7 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    v9 = *(_QWORD *)v6;
    sub_10022E4A8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AA0(v9, v7);
  }
  v10 = *(void **)(v0 + 560);
  v11 = objc_msgSend(v10, "operationToSendItems:fromBundleIdentifier:description:previewImageData:", v4.super.isa, v5, 0, isa);
  *(_QWORD *)(v0 + 640) = v11;

  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 432);
    v76 = *(_QWORD *)(v0 + 440);
    v14 = *(_QWORD *)(v0 + 408);
    v15 = *(_QWORD *)(v0 + 416);
    v16 = *(_QWORD *)(v0 + 344);
    v72 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD **)(v0 + 328);
    v60 = *(_QWORD *)(v0 + 336);
    v63 = *(_QWORD *)(v0 + 376);
    v65 = *(_QWORD *)(v0 + 320);
    v67 = *(_QWORD *)(v0 + 312);
    v69 = *(_QWORD *)(v0 + 368);
    v18 = *(void **)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v13, enum case for SFAirDrop.Progress.notStarted(_:), v14);
    v19 = swift_allocObject(&unk_10072D528, 24, 7);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = v18;
    sub_100008384((uint64_t *)&unk_1007B6820);
    withProgressTask<A, B>(_:initialProgress:operation:)(0x6F6F727373616C43, 0xEE00646E6553206DLL);
    swift_release(v19);
    v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(_QWORD *)(v0 + 648) = v21;
    v21(v13, v14);
    objc_msgSend(v11, "addTarget:selector:forOperationEvents:", v20, "operationStartedWithOperation:", 1);
    objc_msgSend(v11, "addTarget:selector:forOperationEvents:", v20, "operationMadeProgressWithOperation:", 8);
    objc_msgSend(v11, "addTarget:selector:forOperationEvents:", v20, "operationEndedWithOperation:", 6);
    objc_msgSend(*(id *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue], "addOperation:", v11);
    v22 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    *(_QWORD *)(v0 + 656) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    v23 = &v20[v22];
    v24 = swift_beginAccess(&v20[v22], v0 + 40, 0, 0);
    v25 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v16 + 16);
    *(_QWORD *)(v0 + 664) = v25;
    v25(v63, v23, v60, v24);
    *v17 = 0x662E657261757173;
    v17[1] = 0xEB000000006C6C69;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v65 + 104))(v17, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v67);
    v26 = swift_allocObject(&unk_10072D550, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v20);
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v69, v63, v60);
    v27 = *(unsigned __int8 *)(v16 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = swift_allocObject(&unk_10072D578, v28 + v72, v27 | 7);
    *(_QWORD *)(v29 + 16) = v26;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v29 + v28, v69, v60);
    SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0xD000000000000013, 0x800000010061F6D0, v17, 0, sub_1004FA668, v29);
    v30 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    *(_QWORD *)(v0 + 672) = v30;
    v30(v63, v60);
    SFProgressTask.makeAsyncIterator()(v76);
    *(_DWORD *)(v0 + 712) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
    v31 = static AirDropActor.shared;
    v32 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v33 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 680) = v33;
    *v33 = v0;
    v33[1] = sub_1004F7D00;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 280), v31, v32, *(_QWORD *)(v0 + 288), v0 + 72);
  }
  else
  {
    v35 = Logger.logObject.getter(v12);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to start catalyst send", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }
    v38 = *(void **)(v0 + 560);
    v39 = *(_QWORD *)(v0 + 544);
    v40 = *(_QWORD *)(v0 + 496);

    v41 = type metadata accessor for SFAirDropSend.Failure(0);
    v42 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v41, v42, 0, 0);
    v44 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, enum case for SFAirDropSend.Failure.badRequest(_:), v41);
    swift_willThrow(v44);

    sub_1002443C8(v40, _s10AskRequestVMa);
    sub_1002443C8(v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v45 = *(_QWORD *)(v0 + 536);
    v46 = *(_QWORD *)(v0 + 528);
    v48 = *(_QWORD *)(v0 + 496);
    v47 = *(_QWORD *)(v0 + 504);
    v49 = *(_QWORD *)(v0 + 480);
    v50 = *(_QWORD *)(v0 + 456);
    v52 = *(_QWORD *)(v0 + 424);
    v51 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 400);
    v54 = *(_QWORD *)(v0 + 376);
    v55 = *(_QWORD *)(v0 + 368);
    v56 = *(_QWORD *)(v0 + 360);
    v57 = *(_QWORD *)(v0 + 328);
    v58 = *(_QWORD *)(v0 + 304);
    v59 = *(_QWORD *)(v0 + 280);
    v61 = *(_QWORD *)(v0 + 272);
    v62 = *(_QWORD *)(v0 + 264);
    v64 = *(_QWORD *)(v0 + 240);
    v66 = *(_QWORD *)(v0 + 232);
    v68 = *(_QWORD *)(v0 + 208);
    v70 = *(_QWORD *)(v0 + 200);
    v71 = *(_QWORD *)(v0 + 184);
    v73 = *(_QWORD *)(v0 + 160);
    v74 = *(_QWORD *)(v0 + 152);
    v75 = *(_QWORD *)(v0 + 128);
    v77 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 544));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004F7D00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 680));
  if (v0)
    v3 = sub_1004F8998;
  else
    v3 = sub_1004F7D64;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 552), 0);
}

uint64_t sub_1004F7D64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v1 = v0[51];
  v2 = v0[52];
  v3 = v0[35];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v6 = v0[68];
    v7 = v0[66];
    v8 = v0[64];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
    sub_10022E534(v6, v7);
    v9 = (char *)&loc_1004F7E58 + *((int *)qword_1004F80E0 + swift_getEnumCaseMultiPayload(v7, v8));
    __asm { BR              X10 }
  }
  (*(void (**)(_QWORD, _QWORD))(v0[37] + 8))(v0[38], v0[36]);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[86] = v4;
  *v4 = v0;
  v4[1] = sub_1004F80F0;
  return SFProgressTask.finalValue.getter(v0 + 10, v0[55]);
}

uint64_t sub_1004F7E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  sub_100221DB4(*(_QWORD *)(v0 + 528), v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v5 = sub_1002B107C();
  v6 = UUID.uuidString.getter(v5);
  v23 = v7;
  v24 = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v28 = *(_DWORD *)(v0 + 712);
  v31 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v8 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 424);
  v10 = *(_QWORD *)(v0 + 408);
  v25 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 360);
  v29 = *(_QWORD *)(v0 + 336);
  v30 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
  v12 = *(uint64_t **)(v0 + 272);
  v13 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = (int *)sub_100008384((uint64_t *)&unk_1007C3410);
  v16 = (char *)v12 + v15[12];
  v17 = (uint64_t *)((char *)v12 + v15[16]);
  v18 = (char *)v12 + v15[20];
  *v12 = v24;
  v12[1] = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, v9, v10);
  *v17 = 0;
  v17[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v18, v27, v26);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v12, v28, v13);
  sub_1002BC504((uint64_t)v12, v11);
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v12, v13);
  v30(v11, v29);
  v31(v9, v10);
  v19 = static AirDropActor.shared;
  v20 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v21 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 680) = v21;
  *v21 = v0;
  v21[1] = sub_1004F7D00;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 280), v19, v20, *(_QWORD *)(v0 + 288), v0 + 72);
}

uint64_t sub_1004F80F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 688);
  *(_QWORD *)(*v1 + 696) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 552);
    v5 = sub_1004F8BD0;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 552);
    swift_bridgeObjectRelease(*(const char **)(v2 + 80));
    v5 = sub_1004F8164;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1004F8164()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (void (*)(uint64_t, uint64_t))v0[84];
  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[83];
  v4 = v0[46];
  v3 = v0[47];
  v5 = v0[42];
  v27 = v0[32];
  v28 = v0[31];
  v23 = v0[22];
  v24 = v0[33];
  v6 = v0[20];
  v7 = v0[19];
  v21 = v0[18];
  v8 = v0[16];
  v22 = v0[17];
  v19 = v0[23];
  v20 = v0[15];
  v9 = v0[14] + v0[82];
  v25 = v0[21];
  v26 = v0[11];
  v10 = v2(v3, v9, v5);
  SFAirDropSend.Transfer.id.getter(v10);
  v1(v3, v5);
  v11 = v2(v4, v9, v5);
  SFAirDropSend.Transfer.startDate.getter(v11);
  v1(v4, v5);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v6, v7);
  v12 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:);
  v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v8, v12, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  v15 = SFAirDropSend.Transfer.Metrics.result.setter(v8);
  static Date.now.getter(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
  SFAirDropSend.Transfer.Metrics.endDate.setter(v20);
  v16 = (_QWORD *)(v24 + *(int *)(sub_100008384((uint64_t *)&unk_1007BCFD0) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v19, v25);
  *v16 = 0;
  v16[1] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v24, enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:), v28);
  sub_1002BC504(v24, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v28);
  v17 = (_QWORD *)swift_task_alloc(dword_1007B8834);
  v0[88] = v17;
  *v17 = v0;
  v17[1] = sub_1004F8378;
  return sub_1002BB76C();
}

uint64_t sub_1004F8378()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 552);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 704));
  return swift_task_switch(sub_1004F83D0, v1, 0);
}

uint64_t sub_1004F83D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 544);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 528);
  v16 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  v12 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 432);
  v19 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 384);
  v20 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 360);
  v23 = *(_QWORD *)(v0 + 328);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v11);
  sub_1002443C8(v13, _s10AskRequestVMa);
  sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc(v2);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v13);
  swift_task_dealloc(v17);
  swift_task_dealloc(v12);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v5);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v7);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F8600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 544);

  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 504);
  v6 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 432);
  v10 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 376);
  v13 = *(_QWORD *)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 272);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 544));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F87CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 544);

  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 504);
  v6 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 432);
  v10 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 376);
  v13 = *(_QWORD *)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 272);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 544));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F8998()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 560);
  v37 = *(_QWORD *)(v0 + 496);
  v39 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 448);
  v35 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 440);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v35, v3);
  sub_1002443C8(v37, _s10AskRequestVMa);
  sub_1002443C8(v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v10 = *(_QWORD *)(v0 + 536);
  v11 = *(_QWORD *)(v0 + 528);
  v13 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 504);
  v14 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 400);
  v20 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 360);
  v23 = *(_QWORD *)(v0 + 328);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 184);
  v33 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 128);
  v38 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 544));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F8BD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 440);
  v8 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 384);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1002443C8(v3, _s10AskRequestVMa);
  sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v10 = *(_QWORD *)(v0 + 536);
  v11 = *(_QWORD *)(v0 + 528);
  v13 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 504);
  v14 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 424);
  v16 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 400);
  v20 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 360);
  v23 = *(_QWORD *)(v0 + 328);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 184);
  v33 = *(_QWORD *)(v0 + 160);
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(_QWORD *)(v0 + 128);
  v36 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 544));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F8DE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = a2;
  v3 = sub_100008384(&qword_1007B6C20);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F8E74, static AirDropActor.shared, 0);
}

uint64_t sub_1004F8E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_100008384(&qword_1007B5B20);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v0 + 16, 33, 0);
  sub_1004FA698(v1, v6);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F8F38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint8_t *v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  _BYTE v29[24];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B5B20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for SFAirDrop.Progress(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = Logger.logObject.getter(v10);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    v28 = v9;
    v16 = v8;
    v17 = v4;
    v18 = v5;
    v19 = v2;
    v20 = v7;
    v21 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Classroom send progress", v15, 2u);
    v22 = v21;
    v7 = v20;
    v2 = v19;
    v5 = v18;
    v4 = v17;
    v8 = v16;
    v9 = v28;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = objc_msgSend(a1, "totalUnitCount");
  v24 = objc_msgSend(a1, "completedUnitCount");
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = v23;
  v12[16] = 0;
  *((_QWORD *)v12 + 3) = v24;
  *((_QWORD *)v12 + 4) = 0;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for SFAirDrop.Progress.transferring(_:), v8);
  v25 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  v26 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v29, 32, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v25, 1, v4, v26))
  {
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    return swift_endAccess(v29);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v25, v4);
    swift_endAccess(v29);
    SFProgressContinuation.yield(_:)(v12, v4);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  }
}

__n128 sub_1004F918C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  const char *v8;
  id v9;
  void *v10;
  __n128 result;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  const char *v21;
  _BYTE v22[24];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B5B20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(const char **)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls);
  if (!v8)
    goto LABEL_4;
  v9 = objc_msgSend(a1, "error", swift_bridgeObjectRetain((const char *)*(_QWORD *)(v2+ OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls)).n128_f64[0]);
  if (v9)
  {
    v10 = v9;
    swift_bridgeObjectRelease(v8);

LABEL_4:
    v20 = objc_msgSend(a1, "error");
    sub_1004F93B0((uint64_t)v20);

    return result;
  }
  v12 = Logger.logObject.getter(0);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Classroom send succeeded", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                             + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(2, ObjectType, v15);
  v17 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  v18 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v22, 0, 0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v17, 1, v4, v18))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
    v21 = v8;
    SFProgressContinuation.finish(with:)(&v21, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return swift_bridgeObjectRelease(v8);
}

void sub_1004F93B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  id v43;
  id v44;
  _QWORD v45[3];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B5B20);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v45[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.logObject.getter(v6);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Classroom send failed", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  if (a1
    && (v45[0] = a1,
        swift_errorRetain(a1),
        v12 = sub_100008384(&qword_1007B5A60),
        v13 = sub_100491920(),
        (swift_dynamicCast(&v44, v45, v12, v13, 6) & 1) != 0))
  {
    v14 = v44;
    v15 = objc_msgSend(v44, "code");
    if (v15 == (id)18)
    {
      v32 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(5, ObjectType, v32);
      v34 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      v35 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v45, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v34, 1, v4, v35))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v34, v4);
        v36 = type metadata accessor for SFAirDropSend.Failure(0);
        v37 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
        v22 = swift_allocError(v36, v37, 0, 0);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v36);
        goto LABEL_13;
      }
    }
    else if (v15 == (id)404)
    {
      v16 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      v17 = swift_getObjectType(*(_QWORD *)(v2
                                          + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(4, v17, v16);
      v18 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      v19 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v45, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v18, 1, v4, v19))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v18, v4);
        v20 = type metadata accessor for CancellationError(0);
        v21 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
        v22 = swift_allocError(v20, v21, 0, 0);
        CancellationError.init()();
LABEL_13:
        SFProgressContinuation.fail(with:)(v22, v4);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v31 = v22;
        goto LABEL_14;
      }
    }
    else
    {
      v39 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      v40 = swift_getObjectType(*(_QWORD *)(v2
                                          + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(4, v40, v39);
      v41 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      v42 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v45, 0, 0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v41, 1, v4, v42))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v41, v4);
        v43 = v14;
        SFProgressContinuation.fail(with:)(v43, v4);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        return;
      }
    }

  }
  else
  {
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
    v24 = swift_getObjectType(*(_QWORD *)(v2
                                        + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(4, v24, v23);
    v25 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
    v26 = swift_beginAccess(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, v45, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v25, 1, v4, v26))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v25, v4);
      v27 = type metadata accessor for SFAirDropSend.Failure(0);
      v28 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      v29 = swift_allocError(v27, v28, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v30, enum case for SFAirDropSend.Failure.badResponse(_:), v27);
      SFProgressContinuation.fail(with:)(v29, v4);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v31 = v29;
LABEL_14:
      swift_errorRelease(v31);
    }
  }
}

uint64_t sub_1004F98D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1004F98EC, 0, 0);
}

uint64_t sub_1004F98EC()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F9950, static AirDropActor.shared, 0);
}

uint64_t sub_1004F9950()
{
  uint64_t v0;

  sub_1004F8F38(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004F9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1004F99AC, 0, 0);
}

uint64_t sub_1004F99AC()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1004F9A10, static AirDropActor.shared, 0);
}

uint64_t sub_1004F9A10()
{
  uint64_t v0;
  __n128 v1;

  v1 = sub_1004F918C((void *)*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1004F9A54(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v9 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject(a4, 48, 7);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a3;
  v14 = a3;
  v15 = a1;
  v16 = v14;
  v17 = sub_100252EC0((uint64_t)v11, a5, (uint64_t)v13);

  return swift_release(v17);
}

uint64_t sub_1004F9B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  __n128 v41;
  uint8_t *v42;
  uint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[24];
  char v55[24];

  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropSend.Transfer(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + 16;
  swift_beginAccess(v14, v55, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v14, v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = v10;
    v19 = v13;
    v20 = v8;
    v21 = v6;
    v22 = v7;
    v23 = a2;
    v24 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue));

    objc_msgSend(v24, "cancelAllOperations");
    a2 = v23;
    v7 = v22;
    v6 = v21;
    v8 = v20;
    v13 = v19;
    v10 = v18;
  }
  swift_beginAccess(v14, v54, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v14, v25);
  if (result)
  {
    v27 = (void *)result;
    v28 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v13, result + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v11);

    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v48 = v11;
      v33 = swift_slowAlloc(12, -1);
      v46 = v32;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc(32, -1);
      v47 = v35;
      v53 = v35;
      *(_DWORD *)v34 = 136315138;
      v44 = v34 + 4;
      v45 = v34;
      SFAirDropSend.Transfer.id.getter(v35);
      v36 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v37 = v50;
      v38 = dispatch thunk of CustomStringConvertible.description.getter(v50, v36);
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v37);
      v52 = sub_100228BD8(v38, (unint64_t)v40, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v44);
      v41 = swift_bridgeObjectRelease(v40);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v41);
      v42 = v45;
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v46, "Transfer %s was cancelled.", v45, 0xCu);
      v43 = v47;
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v13, v48);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v11);
    }
  }
  return result;
}

__n128 sub_1004F9EC8()
{
  uint64_t v0;
  double v1;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue));
  sub_10000D0F0(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, &qword_1007B6C20);
  *(_QWORD *)&v1 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_bundleIdentifier
                                                                     + 8)).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls), v1);
}

uint64_t sub_1004F9F84()
{
  return _s15ClassroomRunnerCMa_0(0);
}

uint64_t _s15ClassroomRunnerCMa_0(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C46D8;
  if (!qword_1007C46D8)
    return swift_getSingletonMetadata(a1, &_s15ClassroomRunnerCMn_0);
  return result;
}

void sub_1004F9FC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1004FA058(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1005DB4A0;
    v4[3] = &unk_1005DB4B8;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 464);
  }
}

void sub_1004FA058(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007C46E8)
  {
    v2 = sub_10021FF9C(&qword_1007B5B20);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, &qword_1007C46E8);
  }
}

uint64_t sub_1004FA0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1007C46F4);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000D12C;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1004F99AC, 0, 0);
}

uint64_t sub_1004FA118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1007C4704);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000D098;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1004F98EC, 0, 0);
}

id sub_1004FA178(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12)
{
  char *v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a7;
  v56 = a8;
  v45 = a4;
  v46 = a5;
  v51 = a1;
  v52 = a2;
  v53 = a10;
  v54 = a9;
  v50 = a11;
  v47 = a12;
  v48 = a6;
  v49 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDropSend.Transfer(0);
  v41 = *(_QWORD *)(v16 - 8);
  v17 = v41;
  __chkstk_darwin(v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SFAirDropSend.Request(0);
  v21 = *(_QWORD *)(v20 - 8);
  v42 = v20;
  v43 = v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = &v12[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation];
  v25 = sub_100008384(&qword_1007B5B20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_QWORD *)&v12[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls] = 0;
  v26 = objc_allocWithZone((Class)NSOperationQueue);
  v27 = v12;
  v28 = objc_msgSend(v26, "init");
  *(_QWORD *)&v27[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue] = v28;
  objc_msgSend(v28, "setQualityOfService:", 25);
  v29 = &v27[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_bundleIdentifier];
  v30 = v46;
  *(_QWORD *)v29 = v45;
  *((_QWORD *)v29 + 1) = v30;

  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a3, v20);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v32 = v48;
  v33 = v16;
  v31(v19, v48, v16);
  v34 = v44;
  v35 = (uint64_t)v15;
  v36 = v15;
  v37 = v47;
  v38 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v36, v47, v49);
  v39 = sub_1002BDFA0(v51, v52, (uint64_t)v23, (uint64_t)v19, v55, v56, v54, v53, v50, v35);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v38);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(a3, v42);
  return v39;
}

uint64_t sub_1004FA3F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = v1;
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting classroom send", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  ObjectType = swift_getObjectType(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(1, ObjectType, v6);
}

uint64_t sub_1004FA4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 24);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C471C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  v8 = (_QWORD *)swift_task_alloc(dword_1007C472C);
  v7[2] = v8;
  *v8 = v7;
  v8[1] = sub_10000D12C;
  return sub_1004F6B68(a1, a2, v6);
}

uint64_t sub_1004FA558()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FA57C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C4734);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D12C;
  return sub_1004F8DE8(a1, v4);
}

uint64_t sub_1004FA5D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FA5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004FA668()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropSend.Transfer(0) - 8) + 80);
  return sub_1004F9B48(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1004FA698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B6C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004FA6E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unsigned int *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t);
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  char v39;
  void (*v40)(char *, _QWORD, uint64_t);
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  const char *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v80 = a1;
  v79 = type metadata accessor for NWInterface.InterfaceSubtype(0);
  v1 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v3 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NWInterface.InterfaceType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007C4768);
  __chkstk_darwin(v8);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NWPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWConnection.currentPath.getter(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007C4768);
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100221DF8(v16, (uint64_t)qword_1007C4740);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Connection does not have a current path", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    goto LABEL_7;
  }
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v78 = v11;
  v22(v15, v10, v11);
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v23(v7, enum case for NWInterface.InterfaceType.cellular(_:), v4);
  v24 = NWPath.usesInterfaceType(_:)(v7);
  v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v7, v4);
  v26 = v15;
  if ((v24 & 1) != 0)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007C4740);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Current path is using a cellular interface type", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
    v21 = (unsigned int *)&enum case for SFNWInterfaceType.cellular(_:);
    goto LABEL_33;
  }
  v23(v7, enum case for NWInterface.InterfaceType.wiredEthernet(_:), v4);
  v32 = NWPath.usesInterfaceType(_:)(v7);
  v33 = ((uint64_t (*)(char *, uint64_t))v25)(v7, v4);
  if ((v32 & 1) != 0)
  {
    if ((NWPath.isDirect.getter(v33) & 1) != 0)
    {
      if (qword_1007B4218 != -1)
        swift_once(&qword_1007B4218, sub_1004FD16C);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100221DF8(v34, (uint64_t)qword_1007C4740);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Current path is using a direct wired interface type", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
      v21 = (unsigned int *)&enum case for SFNWInterfaceType.directWired(_:);
    }
    else
    {
      if (qword_1007B4218 != -1)
        swift_once(&qword_1007B4218, sub_1004FD16C);
      v49 = type metadata accessor for Logger(0);
      v50 = sub_100221DF8(v49, (uint64_t)qword_1007C4740);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Current path is using a wired interface type", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
      v21 = (unsigned int *)&enum case for SFNWInterfaceType.wired(_:);
    }
    goto LABEL_33;
  }
  v23(v7, enum case for NWInterface.InterfaceType.wifi(_:), v4);
  v39 = NWPath.usesInterfaceType(_:)(v7);
  v25(v7, v4);
  if ((v39 & 1) == 0)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v57 = type metadata accessor for Logger(0);
    v58 = sub_100221DF8(v57, (uint64_t)qword_1007C4740);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v59, v60))
      goto LABEL_50;
    v61 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v61 = 0;
    v62 = "Current path is using an unknown interface subtype";
    goto LABEL_49;
  }
  v40 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v41 = v79;
  v40(v3, enum case for NWInterface.InterfaceSubtype.wifiAWDL(_:), v79);
  v42 = NWPath.usesInterfaceSubtype(_:)(v3);
  v43 = *(void (**)(char *, uint64_t))(v1 + 8);
  v43(v3, v41);
  if ((v42 & 1) != 0)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100221DF8(v44, (uint64_t)qword_1007C4740);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Current path is using an AWDL interface subtype", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
    v21 = (unsigned int *)&enum case for SFNWInterfaceType.awdl(_:);
    goto LABEL_33;
  }
  v40(v3, enum case for NWInterface.InterfaceSubtype.wifiInfrastructure(_:), v41);
  v63 = NWPath.usesInterfaceSubtype(_:)(v3);
  v64 = ((uint64_t (*)(char *, uint64_t))v43)(v3, v41);
  if ((v63 & 1) == 0)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v70 = type metadata accessor for Logger(0);
    v71 = sub_100221DF8(v70, (uint64_t)qword_1007C4740);
    v59 = Logger.logObject.getter(v71);
    v60 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v59, v60))
      goto LABEL_50;
    v61 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v61 = 0;
    v62 = "Current path is using an unknown WiFi interface subtype";
LABEL_49:
    _os_log_impl((void *)&_mh_execute_header, v59, v60, v62, v61, 2u);
    swift_slowDealloc(v61, -1, -1);
LABEL_50:

    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
LABEL_7:
    v21 = (unsigned int *)&enum case for SFNWInterfaceType.other(_:);
    goto LABEL_33;
  }
  if ((NWPath.isDirect.getter(v64) & 1) != 0)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v65 = type metadata accessor for Logger(0);
    v66 = sub_100221DF8(v65, (uint64_t)qword_1007C4740);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Current path is using a local WiFi interface subtype", v69, 2u);
      swift_slowDealloc(v69, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
    v21 = (unsigned int *)&enum case for SFNWInterfaceType.localWiFi(_:);
  }
  else
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v72 = type metadata accessor for Logger(0);
    v73 = sub_100221DF8(v72, (uint64_t)qword_1007C4740);
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Current path is using a WiFi interface subtype", v76, 2u);
      swift_slowDealloc(v76, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v78);
    v21 = (unsigned int *)&enum case for SFNWInterfaceType.wifi(_:);
  }
LABEL_33:
  v54 = *v21;
  v55 = type metadata accessor for SFNWInterfaceType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v80, v54, v55);
}

uint64_t sub_1004FB050()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (_QWORD *)swift_slowAlloc(16, -1);
  *v0 = 0;
  v0[1] = 0;
  sub_1002B0D88();
  v2 = v1;
  nw_endpoint_set_agent_identifier();
  swift_unknownObjectRelease(v2);
  return swift_slowDealloc(v0, -1, -1);
}

void sub_1004FB0A0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t application_service_with_alias;
  uint64_t v29;
  uint64_t v30;
  NSObject *oslog;
  uint64_t v32;
  uint64_t v33[2];

  if (a2 && a4 && a6)
  {
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(0xE000000000000000);
    v33[0] = 0x70706F7264726961;
    v33[1] = 0xEB000000003A6F72;
    v12._countAndFlagsBits = a3;
    v12._object = a4;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = a5;
    v14._object = a6;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    String.append(_:)(v16);
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007C4740);
    v18 = swift_bridgeObjectRetain_n(0xEB000000003A6F72, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v33[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain(0xEB000000003A6F72);
      v32 = sub_100228BD8(0x70706F7264726961, 0xEB000000003A6F72, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v21 + 4);
      swift_bridgeObjectRelease_n(0xEB000000003A6F72, 3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Setting Internet fallback endpoint with alias: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(0xEB000000003A6F72, 2);
    }
    v27 = String.utf8CString.getter(0x70706F7264726961, 0xEB000000003A6F72);
    swift_bridgeObjectRelease(0xEB000000003A6F72);
    application_service_with_alias = nw_endpoint_create_application_service_with_alias("com.apple.airdrop_pro", v27 + 32);
    v29 = swift_release(v27);
    v30 = NWConnection.nw.getter(v29);
    nw_connection_set_internet_fallback_endpoint(v30, application_service_with_alias);
    swift_unknownObjectRelease(application_service_with_alias);
    swift_unknownObjectRelease(v30);
  }
  else
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100221DF8(v23, (uint64_t)qword_1007C4740);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "Cannot set Internet fallback endpoint", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

void sub_1004FB418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _QWORD v13[4];

  v13[2] = a6;
  v13[3] = a7;
  v13[1] = a5;
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10022E534(v7, (uint64_t)v11);
  v12 = (char *)sub_1004FB4F8 + 4 * byte_1005DB4E0[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }
}

uint64_t sub_1004FB4F8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_10050242C(v0 & 1, 0);
  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v2;
}

const char *SFAirDrop.quicServiceType.unsafeMutableAddressor()
{
  return "_asquic._udp";
}

const char *SFAirDrop.domain.unsafeMutableAddressor()
{
  return "local";
}

SecTrustRef sub_1004FB6D8()
{
  NSObject *v0;
  NSObject *v1;
  NSObject *v2;
  sec_protocol_metadata_t v3;
  NSObject *v4;
  SecTrustRef v5;

  v0 = NWConnection.nw.getter();
  v1 = nw_protocol_copy_tls_definition();
  v2 = nw_connection_copy_protocol_metadata(v0, v1);
  swift_unknownObjectRelease(v0);
  swift_unknownObjectRelease(v1);
  if (!v2)
    return 0;
  v3 = nw_tls_copy_sec_protocol_metadata(v2);
  v4 = sec_protocol_metadata_copy_sec_trust();
  swift_unknownObjectRelease(v3);
  if (!v4)
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v5 = sec_trust_copy_ref(v4);
  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(v2);
  return v5;
}

uint64_t sub_1004FB77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a4;
  v37 = sub_100008384(&qword_1007BD538);
  __chkstk_darwin(v37);
  v36[1] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SHA256(0);
  v36[2] = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SHA256Digest(0);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  __chkstk_darwin(v9);
  v42 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.Encoding(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2;
  v45 = a3;
  sub_100370F28(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    swift_bridgeObjectRetain(a3);
    v22 = sub_10000D0F0((uint64_t)v17, &qword_1007B7280);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    v23 = swift_bridgeObjectRetain(a3);
    v24._countAndFlagsBits = UUID.uuidString.getter(v23);
    object = v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    a2 = v44;
    a3 = v45;
  }
  static String.Encoding.utf8.getter(v22);
  String.data(using:allowLossyConversion:)(v14, 0, a2, a3);
  v27 = v26;
  swift_bridgeObjectRelease(a3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v27 >> 60 != 15)
  {
    v35 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
    dispatch thunk of HashFunction.init()(v41, v35);
    __asm { BR              X10 }
  }
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100221DF8(v28, (uint64_t)qword_1007C4740);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to create combined UUID string", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  return UUID.init()(v33);
}

uint64_t sub_1004FBDB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t application_service;
  uint64_t v21;
  uint64_t v22;
  uint64_t device_id;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t device_name;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t device_model;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t contact_id;
  uint64_t v36;
  NSObject *v37;
  NSObject *v38;
  nw_txt_record_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v44;

  v44 = a2;
  v3 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v44 - v12;
  v14 = NWEndpoint.endpointUUID()(v11);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  v18 = v10;
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v18, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_1004FB77C((uint64_t)v5, v15, v17, (uint64_t)v13);
  swift_bridgeObjectRelease(v17);
  sub_10000D0F0((uint64_t)v5, &qword_1007B7280);
  application_service = nw_endpoint_create_application_service("com.apple.AirDrop", v13);
  v21 = NWEndpoint.nw.getter(application_service);
  if (!v21)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21;
  device_id = nw_endpoint_get_device_id();
  v24 = swift_unknownObjectRelease(v22);
  if (device_id)
    v24 = nw_endpoint_set_device_id(application_service, device_id);
  v25 = NWEndpoint.nw.getter(v24);
  if (!v25)
    goto LABEL_18;
  v26 = v25;
  device_name = nw_endpoint_get_device_name();
  v28 = swift_unknownObjectRelease(v26);
  if (device_name)
    v28 = nw_endpoint_set_device_name(application_service, device_name);
  v29 = NWEndpoint.nw.getter(v28);
  if (!v29)
    goto LABEL_19;
  v30 = v29;
  device_model = nw_endpoint_get_device_model();
  v32 = swift_unknownObjectRelease(v30);
  if (device_model)
    v32 = nw_endpoint_set_device_model(application_service, device_model);
  v33 = NWEndpoint.nw.getter(v32);
  if (!v33)
    goto LABEL_20;
  v34 = v33;
  contact_id = nw_endpoint_get_contact_id();
  v36 = swift_unknownObjectRelease(v34);
  if (contact_id)
    v36 = nw_endpoint_set_contact_id(application_service, contact_id);
  v37 = NWEndpoint.nw.getter(v36);
  if (!v37)
LABEL_21:
    __break(1u);
  v38 = v37;
  v39 = nw_endpoint_copy_txt_record(v37);
  swift_unknownObjectRelease(v38);
  if (v39)
  {
    nw_endpoint_set_txt_record(application_service, v39);
    swift_unknownObjectRelease(v39);
  }
  v40 = v44;
  *v44 = application_service;
  v41 = enum case for NWEndpoint.opaque(_:);
  v42 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v40, v41, v42);
  return ((uint64_t (*)(char *, uint64_t))v19)(v13, v6);
}

uint64_t sub_1004FC098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t application_service;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  const char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  const char *v65;
  uint64_t result;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v76 = a1;
  v2 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v74 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SFAirDrop.TXTRecord(0);
  v82 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  __chkstk_darwin(v4);
  v80 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for NWEndpoint(0);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v78 = (uint64_t *)((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  __chkstk_darwin(v7);
  v68 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B7280);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v67 - v17;
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = SFAirDropReceive.AskRequest.senderID.getter(v21);
  v26 = v25;
  UUID.init(uuidString:)(v24, v25);
  v27 = swift_bridgeObjectRelease(v26);
  v71 = v10;
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v77 = v1;
  v75 = (char *)v9;
  v28(v12, v1, v9, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    v29 = v68;
    v30 = SFAirDropReceive.AskRequest.id.getter();
    v31 = SFAirDrop.TransferIdentifier.stringValue.getter(v30);
    v32 = v20;
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v29, v70);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v16, 1, 1, v19);
    sub_1004FB77C((uint64_t)v16, v31, v34, (uint64_t)v23);
    v35 = (const char *)v34;
    v20 = v32;
    swift_bridgeObjectRelease(v35);
    sub_10000D0F0((uint64_t)v16, &qword_1007B7280);
    (*(void (**)(char *, char *))(v71 + 8))(v12, v75);
    sub_10000D0F0((uint64_t)v18, &qword_1007B7280);
  }
  else
  {
    (*(void (**)(char *, char *))(v71 + 8))(v12, v75);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
  }
  v75 = v23;
  application_service = nw_endpoint_create_application_service("com.apple.AirDrop", v23);
  v38 = v78;
  v37 = v79;
  *v78 = application_service;
  v39 = v81;
  v40 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v37 + 104))(v38, enum case for NWEndpoint.opaque(_:), v81);
  v41 = NWEndpoint.nw.getter(v40);
  v42 = v80;
  if (v41)
  {
    v43 = v41;
    if ((SFAirDropReceive.AskRequest.senderIsMe.getter(v41) & 1) != 0)
    {
      v44 = v74;
      (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v74, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v73);
      SFAirDrop.TXTRecord.init(deviceRelationship:)(v44);
      v45 = SFAirDrop.TXTRecord.addToEndpoint(_:)(v43);
      v46 = SFAirDropReceive.AskRequest.senderComputerName.getter(v45);
      v48 = v47;
      v49 = String.utf8CString.getter(v46, v47);
      swift_bridgeObjectRelease(v48);
      nw_endpoint_set_device_name(v43, v49 + 32);
      v50 = swift_release(v49);
      v51 = SFAirDropReceive.AskRequest.senderModelName.getter(v50);
      v53 = v52;
      v54 = String.utf8CString.getter(v51, v52);
      swift_bridgeObjectRelease(v53);
      nw_endpoint_set_device_model(v43, v54 + 32);
    }
    else
    {
      v71 = v20;
      v55 = v19;
      v56 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
      if (v57)
      {
        v58 = v56;
        v59 = v57;
        v60 = v74;
        (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v74, enum case for SFAirDrop.DeviceRelationship.contact(_:), v73);
        SFAirDrop.TXTRecord.init(deviceRelationship:)(v60);
        SFAirDrop.TXTRecord.addToEndpoint(_:)(v43);
        v54 = String.utf8CString.getter(v58, v59);
        swift_bridgeObjectRelease(v59);
        nw_endpoint_set_contact_id(v43, v54 + 32);
      }
      else
      {
        v61 = v74;
        (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v74, enum case for SFAirDrop.DeviceRelationship.stranger(_:), v73);
        SFAirDrop.TXTRecord.init(deviceRelationship:)(v61);
        v62 = SFAirDrop.TXTRecord.addToEndpoint(_:)(v43);
        v63 = SFAirDropReceive.AskRequest.senderComputerName.getter(v62);
        v65 = v64;
        v54 = String.utf8CString.getter(v63, v64);
        swift_bridgeObjectRelease(v65);
        nw_endpoint_set_device_name(v43, v54 + 32);
      }
      v19 = v55;
      v20 = v71;
    }
    swift_unknownObjectRelease(v43);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v42, v83);
    swift_release(v54);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v37 + 32))(v76, v38, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v75, v19);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010061F730, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 928, 0);
    __break(1u);
  }
  return result;
}

BOOL sub_1004FC650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *contact_id;
  unint64_t device_model;
  unint64_t device_name;
  const char *v11;
  const char *v12;
  const char *v13;
  double v14;
  double v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for NWEndpoint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = NWEndpoint.nw.getter(v3);
  if (v6)
  {
    v7 = v6;
    contact_id = (const char *)nw_endpoint_get_contact_id();
    device_model = nw_endpoint_get_device_model(v7);
    device_name = nw_endpoint_get_device_name(v7);
    if (contact_id)
    {
      String.init(cString:)(contact_id);
      contact_id = v11;
    }
    if (device_model)
    {
      String.init(cString:)(device_model);
      device_model = (unint64_t)v12;
    }
    if (device_name)
    {
      String.init(cString:)(device_name);
      device_name = (unint64_t)v13;
    }
    swift_unknownObjectRelease(v7);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(contact_id).n128_u64[0];
    *(_QWORD *)&v15 = swift_bridgeObjectRelease((const char *)device_model, v14).n128_u64[0];
    swift_bridgeObjectRelease((const char *)device_name, v15);
    return contact_id || (device_model | device_name) != 0;
  }
  else
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007C4740);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v0, v1);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v28 = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = NWEndpoint.debugDescription.getter();
      v25 = (const char *)v24;
      v27 = sub_100228BD8(v23, v24, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v21 + 4);
      v26 = swift_bridgeObjectRelease(v25);
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v5, v1, v26);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Could not convert endpoint %s to nwEndpoint!", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }

    return 0;
  }
}

uint64_t sub_1004FC8DC(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_10072D948, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  swift_unknownObjectRetain(a2);
  swift_unknownObjectRetain(a3);
  v7(a2, a3, sub_1003CB53C, v9);
  swift_release(v6);
  swift_release(v9);
  swift_unknownObjectRelease(a3);
  return swift_unknownObjectRelease(a2);
}

const char *SFAirDrop.serviceType.unsafeMutableAddressor()
{
  return "_airdrop._tcp.";
}

uint64_t sub_1004FC990()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  __n128 v23;
  int v24;
  int v25;
  __n128 v26;
  char *v27;
  int v28;
  uint64_t result;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  char v36;
  char v37;
  int v38;
  int v39;
  void (*v40)(char *, uint64_t);
  unsigned __int8 v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  __n128 v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned __int8 v51;
  unint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unsigned int v55;
  char v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[3];

  v57 = type metadata accessor for NWTXTRecord(0);
  v0 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v2 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NWBrowser.Result.Metadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007C4880);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NWTXTRecord.Entry(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v58 = (char *)&v57 - v16;
  NWBrowser.Result.metadata.getter(v15);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v17 == enum case for NWBrowser.Result.Metadata.bonjour(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v18 = v6;
    v19 = v57;
    (*(void (**)(char *, char *, uint64_t))(v0 + 32))(v2, v18, v57);
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("flags"));
    v22 = v21;
    NWTXTRecord.getEntry(for:)(v20);
    v23 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v0 + 8))(v2, v19, v23);
  }
  else
  {
    v24 = v17;
    v25 = enum case for NWBrowser.Result.Metadata.none(_:);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    if (v24 != v25)
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v26);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10000D0F0((uint64_t)v9, &qword_1007C4880);
    return 0;
  }
  v27 = v58;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v58, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v27, v10);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v28 != enum case for NWTXTRecord.Entry.string(_:))
  {
    v38 = v28;
    v39 = enum case for NWTXTRecord.Entry.data(_:);
    v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v40(v27, v10);
    if (v38 == v39)
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
      sub_100225AB4(*(_QWORD *)v14, *((_QWORD *)v14 + 1));
    }
    else
    {
      v40(v14, v10);
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
  result = *(_QWORD *)v14;
  v30 = (const char *)*((_QWORD *)v14 + 1);
  v31 = ((unint64_t)v30 >> 56) & 0xF;
  v32 = *(_QWORD *)v14 & 0xFFFFFFFFFFFFLL;
  if (((unint64_t)v30 & 0x2000000000000000) != 0)
    v33 = ((unint64_t)v30 >> 56) & 0xF;
  else
    v33 = *(_QWORD *)v14 & 0xFFFFFFFFFFFFLL;
  if (!v33)
  {
    v47 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v14 + 1));
LABEL_69:
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v27, v10, v47);
    return 0;
  }
  if (((unint64_t)v30 & 0x1000000000000000) != 0)
  {
    v35 = sub_1002B738C(result, *((_QWORD *)v14 + 1), 10);
    v37 = v56;
    goto LABEL_47;
  }
  if (((unint64_t)v30 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v34 = (unsigned __int8 *)(((unint64_t)v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v34 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, *((_QWORD *)v14 + 1));
    v35 = (unint64_t)sub_1002B727C(v34, v32, 10);
    v37 = v36 & 1;
LABEL_47:
    v47 = swift_bridgeObjectRelease(v30, v57);
    if ((v37 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v27, v10, v47);
      return v35;
    }
    goto LABEL_69;
  }
  v59[0] = *(_QWORD *)v14;
  v59[1] = (unint64_t)v30 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v31)
    {
      if (v31 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        v35 = (BYTE1(result) - 48);
        if (v31 == 2)
          goto LABEL_46;
        if ((BYTE2(result) - 48) <= 9u)
        {
          v35 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          v44 = v31 - 3;
          if (v44)
          {
            v45 = (unsigned __int8 *)v59 + 3;
            while (1)
            {
              v46 = *v45 - 48;
              if (v46 > 9)
                goto LABEL_43;
              if (!is_mul_ok(v35, 0xAuLL))
                goto LABEL_43;
              v42 = __CFADD__(10 * v35, v46);
              v35 = 10 * v35 + v46;
              if (v42)
                goto LABEL_43;
              v37 = 0;
              ++v45;
              if (!--v44)
                goto LABEL_47;
            }
          }
          goto LABEL_46;
        }
      }
      goto LABEL_43;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v31 && (result - 48) <= 9u)
      {
        v35 = (result - 48);
        if (v31 == 1)
          goto LABEL_46;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v35 = 10 * (result - 48) + (BYTE1(result) - 48);
          v48 = v31 - 2;
          if (v48)
          {
            v49 = (unsigned __int8 *)v59 + 2;
            while (1)
            {
              v50 = *v49 - 48;
              if (v50 > 9)
                goto LABEL_43;
              if (!is_mul_ok(v35, 0xAuLL))
                goto LABEL_43;
              v42 = __CFADD__(10 * v35, v50);
              v35 = 10 * v35 + v50;
              if (v42)
                goto LABEL_43;
              v37 = 0;
              ++v49;
              if (!--v48)
                goto LABEL_47;
            }
          }
          goto LABEL_46;
        }
      }
LABEL_43:
      v35 = 0;
LABEL_44:
      v37 = 1;
      goto LABEL_47;
    }
    if (v31)
    {
      if (v31 != 1)
      {
        v41 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v35 = 0;
          v42 = v41 == 0;
          v43 = -(uint64_t)v41;
          if (!v42)
            goto LABEL_44;
          if (v31 == 2)
          {
            v37 = 0;
            v35 = v43;
            goto LABEL_47;
          }
          v51 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v43, 0xAuLL))
          {
            v52 = 10 * v43;
            v35 = v52 - v51;
            if (v52 >= v51)
            {
              v53 = v31 - 3;
              if (v53)
              {
                v54 = (unsigned __int8 *)v59 + 3;
                while (1)
                {
                  v55 = *v54 - 48;
                  if (v55 > 9)
                    goto LABEL_43;
                  if (!is_mul_ok(v35, 0xAuLL))
                    goto LABEL_43;
                  v42 = 10 * v35 >= v55;
                  v35 = 10 * v35 - v55;
                  if (!v42)
                    goto LABEL_43;
                  v37 = 0;
                  ++v54;
                  if (!--v53)
                    goto LABEL_47;
                }
              }
LABEL_46:
              v37 = 0;
              goto LABEL_47;
            }
          }
        }
      }
      goto LABEL_43;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_1004FCF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t, __n128);
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  char v20;
  __n128 v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t, __n128);

  v0 = type metadata accessor for NWInterface(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007C4790);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = NWBrowser.Result.interfaces.getter(v5);
  v9 = *(_QWORD *)(v8 + 16);
  v25 = v8;
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v11 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v1 + 16);
    v26 = *(_QWORD *)(v1 + 72);
    v27 = v11;
    v12 = swift_bridgeObjectRetain((const char *)v8);
    while (1)
    {
      v27(v7, v10, v0, v12);
      v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v13)(v7, 0, 1, v0);
      v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0);
      v15 = v14 != 1;
      if (v14 == 1)
        break;
      v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
      v17 = NWInterface.name.getter(v16);
      v19 = v18;
      if (v17 == 0x306C647761 && v18 == (const char *)0xE500000000000000)
      {
        v22 = swift_bridgeObjectRelease((const char *)0xE500000000000000);
        (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v22);
        v15 = 1;
        break;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0x306C647761, 0xE500000000000000, 0);
      v21 = swift_bridgeObjectRelease(v19);
      (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v21);
      if ((v20 & 1) != 0)
        break;
      v10 += v26;
      if (!--v9)
        goto LABEL_10;
    }
  }
  else
  {
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1 + 56);
    v12 = swift_bridgeObjectRetain((const char *)v8);
LABEL_10:
    v13(v7, 1, 1, v0, v12);
    v15 = 0;
  }
  swift_bridgeObjectRelease_n(v25, 2);
  return v15;
}

uint64_t sub_1004FD16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C4740);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4740);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void *SFAirDrop.port.unsafeMutableAddressor()
{
  return &static SFAirDrop.port;
}

uint64_t static SFAirDrop.port.getter()
{
  return 8770;
}

const char *SFAirDrop.localIdentity.unsafeMutableAddressor()
{
  return "airdrop";
}

uint64_t static SFAirDrop.localIdentity.getter()
{
  return 0x706F7264726961;
}

uint64_t static SFAirDrop.domain.getter()
{
  return 0x6C61636F6CLL;
}

uint64_t static SFAirDrop.serviceType.getter()
{
  return 0x706F72647269615FLL;
}

uint64_t static SFAirDrop.quicServiceType.getter()
{
  return 0x2E6369757173615FLL;
}

void *SFAirDrop.dataUsageBundleID.unsafeMutableAddressor()
{
  return &static SFAirDrop.dataUsageBundleID;
}

unint64_t static SFAirDrop.dataUsageBundleID.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1004FD2B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = nw_interface_create_with_name("awdl0");
  if (v2)
  {
    swift_unknownObjectRelease(v2);
    v2 = nw_interface_create_with_name("awdl0");
    if (v2)
      goto LABEL_13;
    __break(1u);
  }
  if (IsAppleInternalBuild(v2, v3))
  {
    v4 = nw_interface_create_with_name("en0");
    if (v4)
    {
      swift_unknownObjectRelease(v4);
      if (!nw_interface_create_with_name("en0"))
      {
        __break(1u);
        goto LABEL_8;
      }
LABEL_13:
      NWInterface.init(_:)();
      v11 = type metadata accessor for NWInterface(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
    }
  }
LABEL_8:
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100221DF8(v5, (uint64_t)qword_1007C4740);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to initialize nw_interface, defaulting to loopback", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = nw_interface_create_with_name("lo0");
  if (result)
    goto LABEL_13;
  __break(1u);
  return result;
}

uint64_t sub_1004FD418(uint64_t a1, uint64_t a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t (*)(), uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_10072D920, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = swift_unknownObjectRetain(a2);
  v5(v8, sub_1003805C8, v7);
  swift_release(v4);
  swift_release(v7);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1004FD4A4(NSObject *a1, _BYTE *a2, void (*a3)(NSObject *, uint64_t))
{
  uint64_t result;
  NSObject *v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint32_t v12;

  result = nw_protocol_options_is_quic(a1);
  if ((_DWORD)result && (*a2 & 1) == 0)
  {
    v7 = nw_quic_copy_sec_protocol_options(a1);
    sub_10031AF00();
    v8 = (void *)static NSUserDefaults.airdrop.getter();
    v9 = SFAirDropUserDefaults.finalALPN.getter();

    if ((v9 & 1) != 0)
      sec_protocol_options_clear_tls_application_protocols(v7);
    sec_protocol_options_add_tls_application_protocol(v7, "h3");
    type metadata accessor for SFAirDropUserDefaults(0, v10);
    v11 = (void *)static SFAirDropUserDefaults.shared.getter();
    v12 = SFAirDropUserDefaults.quicIdleTimeout.getter();

    nw_quic_set_idle_timeout(a1, v12);
    a3(a1, 1);
    result = swift_unknownObjectRelease(v7);
    *a2 = 1;
  }
  return result;
}

BOOL sub_1004FD578(char *a1, char *a2)
{
  return dword_1005DB6B8[*a1] == dword_1005DB6B8[*a2];
}

Swift::Int sub_1004FD59C()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(dword_1005DB6B8[v1]);
  return Hasher._finalize()();
}

void sub_1004FD5E8()
{
  char *v0;

  Hasher._combine(_:)(dword_1005DB6B8[*v0]);
}

Swift::Int sub_1004FD61C()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(dword_1005DB6B8[v1]);
  return Hasher._finalize()();
}

uint64_t sub_1004FD664@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1005039F0(*a1);
  *a2 = result;
  return result;
}

void sub_1004FD68C(_DWORD *a1@<X8>)
{
  char *v1;

  *a1 = dword_1005DB6B8[*v1];
}

uint64_t sub_1004FD6A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch(sub_1004FD6BC, 0, 0);
}

uint64_t sub_1004FD6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[6];
  v2 = swift_task_alloc(32);
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 8;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v3;
  v4 = sub_100008384(&qword_1007C4898);
  *v3 = v0;
  v3[1] = sub_1004FD770;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000014, 0x800000010061F960, sub_100504230, v2, v4);
}

uint64_t sub_1004FD770()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004FD8E4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_1004FD7DC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004FD7DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    v2 = type metadata accessor for SFAirDropSend.Failure(0);
    v3 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v2, v3, 0, 0);
    v5 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, enum case for SFAirDropSend.Failure.badResponse(_:), v2);
    swift_willThrow(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 16);
    Data.withUnsafeBytes<A, B>(_:)(sub_1002202E0, 0, v7, *(_QWORD *)(v0 + 24), &type metadata for Int, &type metadata for Int);
    sub_100225AA0(v7, v1);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_1004FD8E4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FD918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return swift_task_switch(sub_1004FD934, 0, 0);
}

uint64_t sub_1004FD934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C4740);
  *(_QWORD *)(v0 + 152) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v6 = 134217984;
    *(_QWORD *)(v0 + 120) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v6 + 4);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting data stream, expecting %ld", v6, 0xCu);
    swift_slowDealloc(v6, -1, -1);
  }

  *(_OWORD *)(v0 + 88) = xmmword_1005D9960;
  v7 = *(_QWORD *)(v0 + 144);
  if (*(_QWORD *)(v0 + 128) >= *(_QWORD *)(v0 + 136))
    v8 = *(_QWORD *)(v0 + 136);
  else
    v8 = *(_QWORD *)(v0 + 128);
  v9 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 160) = v9;
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 168) = v10;
  v11 = sub_100008384(&qword_1007C4898);
  *v10 = v0;
  v10[1] = sub_1004FDAEC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 64, 0, 0, 0xD000000000000014, 0x800000010061F960, sub_100503AEC, v9, v11);
}

uint64_t sub_1004FDAEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004FE08C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 160));
    v4 = sub_1004FDB58;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004FDB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = v1 + 88;
  v4 = *(_QWORD *)(v1 + 72);
  if (v4 >> 60 != 15)
  {
    sub_100244404(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
    sub_100244404(v2, v4);
    v5 = sub_10022E4A8(v2, v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v26 = v24;
      *(_DWORD *)v8 = 136315138;
      sub_10022E4A8(v2, v4);
      v9 = Data.description.getter(v2, v4);
      v11 = v10;
      sub_100225AA0(v2, v4);
      *(_QWORD *)(v8 + 4) = sub_100228BD8(v9, (unint64_t)v11, &v26);
      swift_bridgeObjectRelease(v11);
      sub_100225AA0(v2, v4);
      sub_100225AA0(v2, v4);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received %s bytes", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {
      sub_100225AA0(v2, v4);
      sub_100225AA0(v2, v4);
    }

    Data.append(_:)(v2, v4);
    __asm { BR              X9 }
  }
  v12 = Logger.logObject.getter(a1);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v25 = *(_QWORD *)(v1 + 128);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(32, -1);
    v26 = v15;
    *(_DWORD *)v14 = 136315394;
    swift_beginAccess(v1 + 88, v1 + 16, 0, 0);
    v16 = *(_QWORD *)(v1 + 88);
    v17 = *(_QWORD *)(v1 + 96);
    sub_10022E4A8(v16, v17);
    v18 = Data.description.getter(v16, v17);
    v20 = v19;
    v21 = v17;
    v3 = v1 + 88;
    sub_100225AB4(v16, v21);
    *(_QWORD *)(v1 + 104) = sub_100228BD8(v18, (unint64_t)v20, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 104, v1 + 112, v14 + 4);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v14 + 12) = 2048;
    *(_QWORD *)(v1 + 112) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 112, v1 + 120, v14 + 14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received %s bytes of total %ld", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  v22 = swift_beginAccess(v3, v1 + 40, 0, 0);
  return (*(uint64_t (**)(_QWORD, _QWORD, __n128))(v1 + 8))(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), v22);
}

uint64_t sub_1004FE08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  __n128 v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 160);
  swift_errorRelease(*(_QWORD *)(v0 + 176));
  v2 = swift_task_dealloc(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v14 = *(_QWORD *)(v0 + 128);
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(32, -1);
    v15 = v6;
    *(_DWORD *)v5 = 136315394;
    swift_beginAccess(v0 + 88, v0 + 16, 0, 0);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    sub_10022E4A8(v7, v8);
    v9 = Data.description.getter(v7, v8);
    v11 = v10;
    sub_100225AB4(v7, v8);
    *(_QWORD *)(v0 + 104) = sub_100228BD8(v9, (unint64_t)v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v5 + 4);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v5 + 12) = 2048;
    *(_QWORD *)(v0 + 112) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v5 + 14);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received %s bytes of total %ld", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }

  v12 = swift_beginAccess(v0 + 88, v0 + 40, 0, 0);
  return (*(uint64_t (**)(_QWORD, _QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v12);
}

void sub_1004FE268(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v5 = sub_100008384(&qword_1007C48A0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = NWConnection.nw.getter(v8);
  if ((a3 & 0x8000000000000000) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  }
  else
  {
    if (!HIDWORD(a3))
    {
      v10 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
      v11 = *(unsigned __int8 *)(v6 + 80);
      v12 = (v11 + 16) & ~v11;
      v13 = swift_allocObject(&unk_10072D970, v12 + v7, v11 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      aBlock[4] = sub_100503B00;
      v16 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1004FE56C;
      aBlock[3] = &unk_10072D988;
      v14 = _Block_copy(aBlock);
      swift_release(v16);
      nw_connection_receive(v10, a3, a3, v14);
      swift_unknownObjectRelease(v10);
      _Block_release(v14);
      return;
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  }
  __break(1u);
}

uint64_t sub_1004FE448(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  NSObject *v5;
  CFErrorRef v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CFErrorRef *v11;
  uint64_t v12;
  id v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  if (a4)
  {
    v5 = swift_unknownObjectRetain(a4);
    v6 = nw_error_copy_cf_error(v5);
    type metadata accessor for CFError(0);
    v8 = v7;
    v9 = sub_100220D78(&qword_1007C4760, (uint64_t (*)(uint64_t))type metadata accessor for CFError, (uint64_t)&protocol conformance descriptor for CFErrorRef);
    v10 = swift_allocError(v8, v9, 0, 0);
    *v11 = v6;
    v21 = v10;
    v12 = sub_100008384(&qword_1007C48A0);
    CheckedContinuation.resume(throwing:)(&v21, v12);
    return swift_unknownObjectRelease(a4);
  }
  else
  {
    if (a1)
    {
      v20 = a1;
      v15 = a1;
      v16 = swift_dynamicCast(&v21, &v20, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Data, 6);
      v17 = v21;
      v18 = v22;
      if (!v16)
      {
        v17 = 0;
        v18 = 0xC000000000000000;
      }
    }
    else
    {
      v17 = 0;
      v18 = 0xF000000000000000;
    }
    v21 = v17;
    v22 = v18;
    v23 = a3 & 1;
    v19 = sub_100008384(&qword_1007C48A0);
    return CheckedContinuation.resume(returning:)(&v21, v19);
  }
}

void sub_1004FE56C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t, uint64_t);
  id v11;

  v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  swift_retain(v9);
  v11 = a2;
  swift_unknownObjectRetain(a3);
  swift_unknownObjectRetain(a5);
  v10(a2, a3, a4, a5);
  swift_release(v9);
  swift_unknownObjectRelease(a5);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_1004FE604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch(sub_1004FE66C, 0, 0);
}

void sub_1004FE66C()
{
  __asm { BR              X12 }
}

uint64_t sub_1004FE6C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = v2[8];
  v2[4] = BYTE6(v1);
  v4 = sub_100455718(a1, (uint64_t)(v2 + 5));
  v6 = v5;
  v2[9] = v4;
  v2[10] = v5;
  v7 = swift_task_alloc(48);
  v2[11] = v7;
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v6;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v2[12] = v8;
  *v8 = v2;
  v8[1] = sub_1004FE7CC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000016, 0x800000010061F980, sub_100503B88, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1004FE7CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004FEE00;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 88));
    v4 = sub_1004FE884;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_1004FE884()
{
  __asm { BR              X10 }
}

uint64_t sub_1004FE8DC()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  Class isa;
  id v6;
  int64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  void *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  if (!BYTE6(v0))
  {
LABEL_12:
    sub_100225AB4(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  v3 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 112) = swift_slowAlloc(*(_QWORD *)(v2 + 56), -1);
  v4 = objc_allocWithZone((Class)NSInputStream);
  sub_10022E4A8(v3, v0);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithData:", isa);
  *(_QWORD *)(v2 + 120) = v6;
  sub_100225AB4(v3, v0);

  objc_msgSend(v6, "open");
  if (!objc_msgSend(v6, "hasBytesAvailable")
    || (v7 = (int64_t)objc_msgSend(*(id *)(v2 + 120), "read:maxLength:", *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 56)), v7 < 1))
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007C4740);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Finished sending stream", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(void **)(v2 + 120);

    objc_msgSend(v20, "close");
    swift_slowDealloc(v21, -1, -1);

    goto LABEL_12;
  }
  v8 = v7;
  v9 = *(const void **)(v2 + 112);
  if ((unint64_t)v7 <= 0xE)
  {
    *(_QWORD *)((char *)v1 + 6) = 0;
    *v1 = 0;
    *(_BYTE *)(v2 + 30) = v7;
    memcpy(v1, v9, v7);
    v13 = *(_QWORD *)(v2 + 16);
    v14 = *(unsigned int *)(v2 + 24) | ((unint64_t)*(unsigned __int8 *)(v2 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + 29) << 40) | ((unint64_t)*(unsigned __int8 *)(v2 + 30) << 48);
  }
  else
  {
    v10 = type metadata accessor for __DataStorage(0);
    swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    v11 = __DataStorage.init(bytes:length:)(v9, v8);
    v12 = v11;
    if (v8 >= 0x7FFFFFFF)
    {
      v23 = type metadata accessor for Data.RangeReference(0);
      v13 = swift_allocObject(v23, 32, 7);
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = v8;
      v14 = v12 | 0x8000000000000000;
    }
    else
    {
      v13 = v8 << 32;
      v14 = v11 | 0x4000000000000000;
    }
  }
  *(_QWORD *)(v2 + 128) = v13;
  *(_QWORD *)(v2 + 136) = v14;
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v24 = type metadata accessor for Logger(0);
  sub_100221DF8(v24, (uint64_t)qword_1007C4740);
  sub_10022E4A8(v13, v14);
  v25 = sub_10022E4A8(v13, v14);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v38 = v29;
    *(_DWORD *)v28 = 136315138;
    sub_10022E4A8(v13, v14);
    v30 = Data.description.getter(v13, v14);
    v32 = v31;
    sub_100225AB4(v13, v14);
    *(_QWORD *)(v28 + 4) = sub_100228BD8(v30, (unint64_t)v32, &v38);
    swift_bridgeObjectRelease(v32);
    sub_100225AB4(v13, v14);
    sub_100225AB4(v13, v14);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Sending data chunk %s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    sub_100225AB4(v13, v14);
    sub_100225AB4(v13, v14);
  }

  v33 = *(void **)(v2 + 120);
  v34 = *(_QWORD *)(v2 + 64);
  sub_10022E4A8(v13, v14);
  v35 = objc_msgSend(v33, "hasBytesAvailable") ^ 1;
  v36 = swift_task_alloc(48);
  *(_QWORD *)(v2 + 144) = v36;
  *(_QWORD *)(v36 + 16) = v13;
  *(_QWORD *)(v36 + 24) = v14;
  *(_BYTE *)(v36 + 32) = v35;
  *(_QWORD *)(v36 + 40) = v34;
  v37 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v2 + 152) = v37;
  *v37 = v2;
  v37[1] = sub_1004FEE68;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v37, 0, 0, 0xD000000000000016, 0x800000010061F980, sub_1005041C8, v36, (char *)&type metadata for () + 8);
}

uint64_t sub_1004FEE00()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  sub_100225AB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004FEE68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004FF3D4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 144));
    v4 = sub_1004FEF20;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004FEF20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  int64_t v4;
  unint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 120);
  sub_100225AB4(v1, v2);
  sub_100225AB4(v1, v2);
  if (objc_msgSend(v3, "hasBytesAvailable")
    && (v4 = (int64_t)objc_msgSend(*(id *)(v0 + 120), "read:maxLength:", *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56)), v4 >= 1))
  {
    v5 = v4;
    v6 = *(const void **)(v0 + 112);
    if ((unint64_t)v4 <= 0xE)
    {
      *(_QWORD *)(v0 + 22) = 0;
      *(_QWORD *)(v0 + 16) = 0;
      *(_BYTE *)(v0 + 30) = v4;
      memcpy((void *)(v0 + 16), v6, v4);
      v10 = *(_QWORD *)(v0 + 16);
      v11 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 29) << 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48);
    }
    else
    {
      v7 = type metadata accessor for __DataStorage(0);
      swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
      v8 = __DataStorage.init(bytes:length:)(v6, v5);
      v9 = v8;
      if (v5 >= 0x7FFFFFFF)
      {
        v20 = type metadata accessor for Data.RangeReference(0);
        v10 = swift_allocObject(v20, 32, 7);
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)(v10 + 24) = v5;
        v11 = v9 | 0x8000000000000000;
      }
      else
      {
        v10 = v5 << 32;
        v11 = v8 | 0x4000000000000000;
      }
    }
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v11;
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v21 = type metadata accessor for Logger(0);
    sub_100221DF8(v21, (uint64_t)qword_1007C4740);
    sub_10022E4A8(v10, v11);
    v22 = sub_10022E4A8(v10, v11);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v35 = v26;
      *(_DWORD *)v25 = 136315138;
      sub_10022E4A8(v10, v11);
      v27 = Data.description.getter(v10, v11);
      v29 = v28;
      sub_100225AB4(v10, v11);
      *(_QWORD *)(v25 + 4) = sub_100228BD8(v27, (unint64_t)v29, &v35);
      swift_bridgeObjectRelease(v29);
      sub_100225AB4(v10, v11);
      sub_100225AB4(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Sending data chunk %s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      sub_100225AB4(v10, v11);
      sub_100225AB4(v10, v11);
    }

    v30 = *(void **)(v0 + 120);
    v31 = *(_QWORD *)(v0 + 64);
    sub_10022E4A8(v10, v11);
    v32 = objc_msgSend(v30, "hasBytesAvailable") ^ 1;
    v33 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 144) = v33;
    *(_QWORD *)(v33 + 16) = v10;
    *(_QWORD *)(v33 + 24) = v11;
    *(_BYTE *)(v33 + 32) = v32;
    *(_QWORD *)(v33 + 40) = v31;
    v34 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 152) = v34;
    *v34 = v0;
    v34[1] = sub_1004FEE68;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v34, 0, 0, 0xD000000000000016, 0x800000010061F980, sub_1005041C8, v33, (char *)&type metadata for () + 8);
  }
  else
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C4740);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Finished sending stream", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v18 = *(_QWORD *)(v0 + 112);
    v17 = *(void **)(v0 + 120);

    objc_msgSend(v17, "close");
    swift_slowDealloc(v18, -1, -1);

    sub_100225AB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004FF3D4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  sub_100225AB4(v2, v1);
  sub_100225AB4(v2, v1);

  sub_100225AB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004FF464(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  NSObject *v24;
  NSObject *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  LODWORD(v6) = a4;
  v10 = sub_100008384((uint64_t *)&unk_1007B5A00);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v35 = v12;
  v36 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007C4740);
  sub_100244404(a2, a3);
  v14 = sub_100244404(a2, a3);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  v17 = a3 >> 60;
  if (os_log_type_enabled(v15, v16))
  {
    v31[1] = a5;
    v33 = v10;
    v34 = v6;
    v18 = swift_slowAlloc(18, -1);
    v19 = swift_slowAlloc(32, -1);
    aBlock[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v32 = a1;
    v31[0] = a3 >> 60;
    if (a3 >> 60 == 15)
    {
      v6 = 0x800000010061F9A0;
      v20 = 0xD000000000000015;
    }
    else
    {
      v20 = Data.description.getter(a2, a3);
      v6 = v22;
    }
    v37 = sub_100228BD8(v20, v6, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock, v18 + 4);
    swift_bridgeObjectRelease((const char *)v6);
    sub_100225AA0(a2, a3);
    sub_100225AA0(a2, a3);
    *(_WORD *)(v18 + 12) = 1024;
    LOBYTE(v6) = v34;
    LODWORD(v37) = v34 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4, v18 + 14);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Calling send %s - done: %{BOOL}d", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    a1 = v32;
    v10 = v33;
    v17 = v31[0];
  }
  else
  {
    sub_100225AA0(a2, a3);
    sub_100225AA0(a2, a3);

  }
  v23 = NWConnection.nw.getter(v21);
  if (v17 <= 0xE)
  {
    sub_1004FF7EC(a2, a3);
    v24 = v25;
  }
  else
  {
    v24 = 0;
  }
  v26 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v36, a1, v10);
  v27 = *(unsigned __int8 *)(v11 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = swift_allocObject(&unk_10072D9C0, v28 + v35, v27 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v28, v26, v10);
  aBlock[4] = (uint64_t)sub_1004FFDFC;
  v39 = v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100424770;
  aBlock[3] = (uint64_t)&unk_10072D9D8;
  v30 = _Block_copy(aBlock);
  swift_release(v39);
  nw_connection_send(v23, v24, _nw_content_context_default_message, v6 & 1, v30);
  _Block_release(v30);
  swift_unknownObjectRelease(v23);

}

void sub_1004FF7EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[3];
  _QWORD aBlock[5];
  uint64_t v15;

  v4 = type metadata accessor for DispatchData(0);
  v13[1] = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for DispatchData.Deallocator(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)v13 - v8);
  v10 = swift_allocObject(&unk_10072D628, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  aBlock[4] = LongHash.storage.getter;
  v15 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072D640;
  v11 = _Block_copy(aBlock);
  *v9 = 0;
  v9[1] = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for DispatchData.Deallocator.custom(_:), v5);
  v12 = v15;
  sub_10022E4A8(a1, a2);
  swift_release(v12);
  __asm { BR              X9 }
}

uint64_t sub_1004FF960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 - 136) = v4;
  *(_WORD *)(v8 - 128) = v5;
  *(_BYTE *)(v8 - 126) = BYTE2(v5);
  *(_BYTE *)(v8 - 125) = BYTE3(v5);
  *(_BYTE *)(v8 - 124) = BYTE4(v5);
  *(_BYTE *)(v8 - 123) = BYTE5(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v0, v3, v2);
  v9 = DispatchData.init(bytesNoCopy:deallocator:)(v8 - 136, v8 - 136 + BYTE6(v5), v0);
  v10 = *(_QWORD *)(v8 - 152);
  v11 = ((uint64_t (*)(uint64_t))DispatchData._bridgeToObjectiveC())(v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
  return v11;
}

void sub_1004FFBB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, NSObject *a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v11 = sub_100008384((uint64_t *)&unk_1007B5A00);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = NWConnection.nw.getter(v14);
  if (a4 >> 60 == 15)
  {
    v16 = 0;
  }
  else
  {
    sub_1004FF7EC(a3, a4);
    v16 = v17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_10072D5D8, v19 + v13, v18 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + v19, (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_1004FFDFC;
  v23 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100424770;
  aBlock[3] = &unk_10072D5F0;
  v21 = _Block_copy(aBlock);
  swift_release(v23);
  nw_connection_send(v15, v16, a5, a6 & 1, v21);
  _Block_release(v21);
  swift_unknownObjectRelease(v15);

}

uint64_t sub_1004FFD34(uint64_t a1)
{
  NSObject *v2;
  CFErrorRef v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CFErrorRef *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (a1)
  {
    v2 = swift_unknownObjectRetain(a1);
    v3 = nw_error_copy_cf_error(v2);
    type metadata accessor for CFError(0);
    v5 = v4;
    v6 = sub_100220D78(&qword_1007C4760, (uint64_t (*)(uint64_t))type metadata accessor for CFError, (uint64_t)&protocol conformance descriptor for CFErrorRef);
    v7 = swift_allocError(v5, v6, 0, 0);
    *v8 = v3;
    v12 = v7;
    v9 = sub_100008384((uint64_t *)&unk_1007B5A00);
    CheckedContinuation.resume(throwing:)(&v12, v9);
    return swift_unknownObjectRelease(a1);
  }
  else
  {
    v11 = sub_100008384((uint64_t *)&unk_1007B5A00);
    return CheckedContinuation.resume(returning:)(v11, v11);
  }
}

uint64_t sub_1004FFDF0()
{
  return sub_10031B818((uint64_t *)&unk_1007B5A00);
}

uint64_t sub_1004FFE00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004FFE10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004FFE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 72) = a4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_BYTE *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = a3;
  *(_QWORD *)(v6 + 48) = a1;
  return swift_task_switch(sub_1004FFE3C, 0, 0);
}

void sub_1004FFE3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = 0;
  swift_beginAccess(v0 + 40, v0 + 16, 1, 0);
  __asm { BR              X11 }
}

uint64_t sub_1004FFE9C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = BYTE6(a1);
  v5 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v3 + 88) = BYTE6(a1);
  if (BYTE6(a1) <= v5)
    __asm { BR              X11 }
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007C4740);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    if (__OFSUB__(v5, *v2))
    {
LABEL_11:
      __break(1u);
      JUMPOUT(0x1005000C4);
    }
    v11 = v10;
    *(_QWORD *)(v10 + 4) = v5 - *v2;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sending %ld bytes", (uint8_t *)v10, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }

  if (v5 < *v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v12 = v4 <= v5;
  v13 = *(_QWORD *)(v3 + 80);
  v14 = *(_BYTE *)(v3 + 136);
  v15 = *(_QWORD *)(v3 + 48);
  v16 = Data._Representation.subscript.getter();
  v18 = v17;
  *(_QWORD *)(v3 + 96) = v16;
  *(_QWORD *)(v3 + 104) = v17;
  v19 = swift_task_alloc(64);
  *(_QWORD *)(v3 + 112) = v19;
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_QWORD *)(v19 + 40) = v15;
  *(_BYTE *)(v19 + 48) = v12 & v14;
  v20 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v3 + 120) = v20;
  *v20 = v3;
  v20[1] = sub_1005000F4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v20, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_100322C94, v19, (char *)&type metadata for () + 8);
}

uint64_t sub_1005000F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100500464;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 112));
    v4 = sub_100500160;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_100500160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[11];
  v2 = v0[9];
  sub_100225AB4(v0[12], v0[13]);
  if (v1 > v2)
  {
    v3 = v0[9];
    v4 = v0[5];
    if (!__OFADD__(v4, v3))
    {
      v0[5] = v4 + v3;
      __asm { BR              X13 }
    }
    __break(1u);
    JUMPOUT(0x100500410);
  }
  __asm { BR              X0 }
}

uint64_t sub_100500464()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  sub_100225AB4(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005004A8(uint64_t a1, uint64_t a2)
{
  return sub_100501120(a1, a2, &qword_1007C4788, (uint64_t)&unk_10072D678, (uint64_t)sub_100501920, (uint64_t)&unk_10072D690);
}

void sub_1005004CC(void **a1, NSObject *a2, char a3, NSObject *a4)
{
  NSObject *v6;
  CFErrorRef v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CFErrorRef *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  NSObject *v23;
  nw_protocol_metadata_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  const char *v31;
  void **v32;
  void **v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  nw_protocol_metadata_t v46;
  uint64_t v47;
  const char *v48;
  void **v49;
  void **aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void *v53;
  uint64_t (*v54)();
  uint64_t v55;
  void **v56;
  const char *v57;

  if (!a2)
  {
    v15 = type metadata accessor for SFAirDropReceive.Failure(0);
    v16 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v17 = swift_allocError(v15, v16, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v18, enum case for SFAirDropReceive.Failure.badRequest(_:), v15);
    aBlock = (void **)v17;
    v19 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v19);
    return;
  }
  if (a4)
  {
    swift_unknownObjectRetain(a2);
    v6 = swift_unknownObjectRetain(a4);
    v7 = nw_error_copy_cf_error(v6);
    type metadata accessor for CFError(0);
    v9 = v8;
    v10 = sub_100220D78(&qword_1007C4760, (uint64_t (*)(uint64_t))type metadata accessor for CFError, (uint64_t)&protocol conformance descriptor for CFErrorRef);
    v11 = swift_allocError(v9, v10, 0, 0);
    *v12 = v7;
    aBlock = (void **)v11;
    v13 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v13);
    swift_unknownObjectRelease(a2);
    v14 = a4;
LABEL_18:
    swift_unknownObjectRelease(v14);
    return;
  }
  v22 = swift_unknownObjectRetain(a2);
  v23 = nw_protocol_copy_http_definition(v22);
  v24 = nw_content_context_copy_protocol_metadata(a2, v23);
  swift_unknownObjectRelease(v23);
  if (!v24)
  {
LABEL_17:
    v36 = type metadata accessor for SFAirDropReceive.Failure(0);
    v37 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v38 = swift_allocError(v36, v37, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v39, enum case for SFAirDropReceive.Failure.badRequest(_:), v36);
    aBlock = (void **)v38;
    v40 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v40);
    v14 = a2;
    goto LABEL_18;
  }
  v25 = nw_http_metadata_copy_request(v24);
  if (!v25)
  {
    swift_unknownObjectRelease(v24);
    goto LABEL_17;
  }
  v26 = v25;
  v56 = 0;
  v57 = 0;
  v27 = swift_allocObject(&unk_10072D6C8, 24, 7);
  *(_QWORD *)(v27 + 16) = &v56;
  v28 = swift_allocObject(&unk_10072D6F0, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_100501944;
  *(_QWORD *)(v28 + 24) = v27;
  v54 = sub_100287F38;
  v55 = v28;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_100500974;
  v53 = &unk_10072D708;
  v29 = _Block_copy(&aBlock);
  v30 = v55;
  swift_retain(v28);
  swift_release(v30);
  nw_http_request_access_path(v26, v29);
  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 88, 588, 54, 1);
  swift_release(v28);
  if ((v29 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v31 = v57;
    if (v57)
    {
      v32 = v56;
      if (a1)
      {
        v49 = a1;
        swift_bridgeObjectRetain(v57);
        v33 = a1;
        v34 = swift_dynamicCast(&aBlock, &v49, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Data, 6);
        if (v34)
          a1 = aBlock;
        else
          a1 = 0;
        if (v34)
          v35 = v51;
        else
          v35 = 0xC000000000000000;
      }
      else
      {
        swift_bridgeObjectRetain(v57);
        v35 = 0xC000000000000000;
      }
      aBlock = v32;
      v51 = (uint64_t)v31;
      v52 = (uint64_t (*)(uint64_t, uint64_t))a1;
      v53 = (void *)v35;
      v54 = (uint64_t (*)())v24;
      LOBYTE(v55) = a3 & 1;
      swift_unknownObjectRetain(v24);
      swift_bridgeObjectRetain(v31);
      sub_10022E4A8((uint64_t)a1, v35);
      swift_unknownObjectRetain(v24);
      v47 = sub_100008384(&qword_1007C4788);
      CheckedContinuation.resume(returning:)(&aBlock, v47);
      swift_bridgeObjectRelease(v31);
      swift_unknownObjectRelease(v26);
      swift_unknownObjectRelease(v24);
      swift_unknownObjectRelease(a2);
      sub_100225AB4((uint64_t)a1, v35);
      v46 = v24;
    }
    else
    {
      v41 = type metadata accessor for SFAirDropReceive.Failure(0);
      v42 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v43 = swift_allocError(v41, v42, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v44, enum case for SFAirDropReceive.Failure.badRequest(_:), v41);
      aBlock = (void **)v43;
      v45 = sub_100008384(&qword_1007C4788);
      CheckedContinuation.resume(throwing:)(&aBlock, v45);
      swift_unknownObjectRelease(v26);
      swift_unknownObjectRelease(v24);
      v46 = a2;
    }
    swift_unknownObjectRelease(v46);
    v48 = v57;
    swift_release(v27);
    swift_bridgeObjectRelease(v48);
  }
}

uint64_t sub_100500974(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

void sub_100500998(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v5 = sub_100008384(&qword_1007C4788);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = NWConnection.nw.getter(v8);
  if ((a3 & 0x8000000000000000) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  }
  else
  {
    if (!HIDWORD(a3))
    {
      v10 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
      v11 = *(unsigned __int8 *)(v6 + 80);
      v12 = (v11 + 16) & ~v11;
      v13 = swift_allocObject(&unk_10072D740, v12 + v7, v11 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      aBlock[4] = sub_100501978;
      v16 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1004FE56C;
      aBlock[3] = &unk_10072D758;
      v14 = _Block_copy(aBlock);
      swift_release(v16);
      nw_connection_receive(v10, 0, a3, v14);
      swift_unknownObjectRelease(v10);
      _Block_release(v14);
      return;
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  }
  __break(1u);
}

void sub_100500B78(void **a1, NSObject *a2, char a3, NSObject *a4)
{
  NSObject *v6;
  CFErrorRef v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CFErrorRef *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  NSObject *v23;
  nw_protocol_metadata_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  unint64_t v36;
  void **v37;
  int v38;
  uint64_t v39;
  nw_protocol_metadata_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  void **v52;
  void **aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;
  uint64_t v59;
  const char *v60;

  if (!a2)
  {
    v15 = type metadata accessor for SFAirDropReceive.Failure(0);
    v16 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v17 = swift_allocError(v15, v16, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v18, enum case for SFAirDropReceive.Failure.badRequest(_:), v15);
    aBlock = (void **)v17;
    v19 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v19);
    return;
  }
  if (a4)
  {
    swift_unknownObjectRetain(a2);
    v6 = swift_unknownObjectRetain(a4);
    v7 = nw_error_copy_cf_error(v6);
    type metadata accessor for CFError(0);
    v9 = v8;
    v10 = sub_100220D78(&qword_1007C4760, (uint64_t (*)(uint64_t))type metadata accessor for CFError, (uint64_t)&protocol conformance descriptor for CFErrorRef);
    v11 = swift_allocError(v9, v10, 0, 0);
    *v12 = v7;
    aBlock = (void **)v11;
    v13 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v13);
    swift_unknownObjectRelease(a2);
    v14 = a4;
LABEL_18:
    swift_unknownObjectRelease(v14);
    return;
  }
  v22 = swift_unknownObjectRetain(a2);
  v23 = nw_protocol_copy_http_definition(v22);
  v24 = nw_content_context_copy_protocol_metadata(a2, v23);
  swift_unknownObjectRelease(v23);
  if (!v24)
  {
LABEL_17:
    v41 = type metadata accessor for SFAirDropReceive.Failure(0);
    v42 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v43 = swift_allocError(v41, v42, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v44, enum case for SFAirDropReceive.Failure.badRequest(_:), v41);
    aBlock = (void **)v43;
    v45 = sub_100008384(&qword_1007C4788);
    CheckedContinuation.resume(throwing:)(&aBlock, v45);
    v14 = a2;
    goto LABEL_18;
  }
  v25 = nw_http_metadata_copy_request(v24);
  if (!v25)
  {
    swift_unknownObjectRelease(v24);
    goto LABEL_17;
  }
  v26 = v25;
  v59 = 0;
  v60 = 0;
  v27 = swift_allocObject(&unk_10072D790, 24, 7);
  *(_QWORD *)(v27 + 16) = &v59;
  v28 = swift_allocObject(&unk_10072D7B8, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_1005041C4;
  *(_QWORD *)(v28 + 24) = v27;
  v57 = sub_1004F5244;
  v58 = v28;
  aBlock = _NSConcreteStackBlock;
  v54 = 1107296256;
  v55 = sub_100500974;
  v56 = &unk_10072D7D0;
  v29 = _Block_copy(&aBlock);
  v30 = v58;
  swift_retain(v28);
  swift_release(v30);
  nw_http_request_access_path(v26, v29);
  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v28, "", 88, 621, 54, 1);
  swift_release(v28);
  if ((v29 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v31 = v60;
    if (v60)
    {
      v32 = v59;
      swift_bridgeObjectRetain(v60);
      v33 = sub_100501058(v32, v31);
      v35 = v34;
      v36 = 0xC000000000000000;
      if (a1)
      {
        v52 = a1;
        v37 = a1;
        v38 = swift_dynamicCast(&aBlock, &v52, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Data, 6);
        if (v38)
          a1 = aBlock;
        else
          a1 = 0;
        if (v38)
          v36 = v54;
      }
      aBlock = (void **)v33;
      v54 = (uint64_t)v35;
      v55 = (uint64_t (*)(uint64_t, uint64_t))a1;
      v56 = (void *)v36;
      v57 = (uint64_t (*)())v24;
      LOBYTE(v58) = a3 & 1;
      swift_unknownObjectRetain(v24);
      swift_bridgeObjectRetain(v35);
      sub_10022E4A8((uint64_t)a1, v36);
      swift_unknownObjectRetain(v24);
      v39 = sub_100008384(&qword_1007C4788);
      CheckedContinuation.resume(returning:)(&aBlock, v39);
      swift_bridgeObjectRelease(v35);
      swift_unknownObjectRelease(v26);
      swift_unknownObjectRelease(v24);
      swift_unknownObjectRelease(a2);
      sub_100225AB4((uint64_t)a1, v36);
      v40 = v24;
    }
    else
    {
      v46 = type metadata accessor for SFAirDropReceive.Failure(0);
      v47 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v48 = swift_allocError(v46, v47, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v49, enum case for SFAirDropReceive.Failure.badRequest(_:), v46);
      aBlock = (void **)v48;
      v50 = sub_100008384(&qword_1007C4788);
      CheckedContinuation.resume(throwing:)(&aBlock, v50);
      swift_unknownObjectRelease(v26);
      swift_unknownObjectRelease(v24);
      v40 = a2;
    }
    swift_unknownObjectRelease(v40);
    v51 = v60;
    swift_release(v27);
    swift_bridgeObjectRelease(v51);
  }
}

uint64_t sub_100501024(uint64_t result, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    v3 = String.init(cString:)(result);
    v4 = a2[1];
    *a2 = v3;
    a2[1] = v5;
    return swift_bridgeObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100501058(uint64_t a1, const char *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[2];

  if (((unint64_t)a2 & 0x1000000000000000) != 0)
    goto LABEL_8;
  if (((unint64_t)a2 & 0x2000000000000000) != 0)
  {
    v6[0] = a1;
    v6[1] = (unint64_t)a2 & 0xFFFFFFFFFFFFFFLL;
    v3 = v6;
    goto LABEL_6;
  }
  if ((a1 & 0x1000000000000000) == 0)
  {
LABEL_8:
    _StringGuts._slowWithCString<A>(_:)(v6, sub_1005015E0, 0, a1, a2, &type metadata for String);
    swift_bridgeObjectRelease(a2);
    return v6[0];
  }
  v3 = (_QWORD *)(((unint64_t)a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_6:
  v4 = String.init(cString:)(v3);
  swift_bridgeObjectRelease(a2);
  return v4;
}

uint64_t sub_1005010FC(uint64_t a1, uint64_t a2)
{
  return sub_100501120(a1, a2, &qword_1007C4878, (uint64_t)&unk_10072D880, (uint64_t)sub_1005037F8, (uint64_t)&unk_10072D898);
}

uint64_t sub_100501120(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[5];
  uint64_t v21;

  v10 = sub_100008384(a3);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = NWConnection.nw.getter(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(a4, v16 + v12, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = a5;
  v21 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004FE56C;
  aBlock[3] = a6;
  v18 = _Block_copy(aBlock);
  swift_release(v21);
  nw_connection_receive_message(v14, v18);
  _Block_release(v18);
  return swift_unknownObjectRelease(v14);
}

uint64_t sub_100501254(void *a1, NSObject *a2, uint64_t a3, NSObject *a4)
{
  NSObject *v6;
  CFErrorRef v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CFErrorRef *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  NSObject *v23;
  nw_protocol_metadata_t v24;
  uint64_t v25;
  uint64_t v26;
  int status_code;
  char v28;
  char v29;
  unint64_t v30;
  id v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;

  if (!a2)
  {
    v15 = type metadata accessor for SFAirDropReceive.Failure(0);
    v16 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v17 = swift_allocError(v15, v16, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v18, enum case for SFAirDropReceive.Failure.badRequest(_:), v15);
    v40 = (void *)v17;
    v19 = sub_100008384(&qword_1007C4878);
    return CheckedContinuation.resume(throwing:)(&v40, v19);
  }
  if (a4)
  {
    swift_unknownObjectRetain(a2);
    v6 = swift_unknownObjectRetain(a4);
    v7 = nw_error_copy_cf_error(v6);
    type metadata accessor for CFError(0);
    v9 = v8;
    v10 = sub_100220D78(&qword_1007C4760, (uint64_t (*)(uint64_t))type metadata accessor for CFError, (uint64_t)&protocol conformance descriptor for CFErrorRef);
    v11 = swift_allocError(v9, v10, 0, 0);
    *v12 = v7;
    v40 = (void *)v11;
    v13 = sub_100008384(&qword_1007C4878);
    CheckedContinuation.resume(throwing:)(&v40, v13);
    swift_unknownObjectRelease(a2);
    v14 = a4;
  }
  else
  {
    v22 = swift_unknownObjectRetain(a2);
    v23 = nw_protocol_copy_http_definition(v22);
    v24 = nw_content_context_copy_protocol_metadata(a2, v23);
    swift_unknownObjectRelease(v23);
    if (v24)
    {
      v25 = nw_http_metadata_copy_response(v24);
      if (v25)
      {
        v26 = v25;
        status_code = nw_http_response_get_status_code();
        v28 = sub_1005039F0(status_code);
        if (v28 == 13)
          v29 = 3;
        else
          v29 = v28;
        v30 = 0xC000000000000000;
        if (a1)
        {
          v39 = a1;
          v31 = a1;
          v32 = swift_dynamicCast(&v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Data, 6);
          if (v32)
            a1 = v40;
          else
            a1 = 0;
          if (v32)
            v30 = v41;
        }
        LOBYTE(v40) = v29;
        v41 = (unint64_t)a1;
        v42 = v30;
        sub_10022E4A8((uint64_t)a1, v30);
        v33 = sub_100008384(&qword_1007C4878);
        CheckedContinuation.resume(returning:)(&v40, v33);
        swift_unknownObjectRelease(v24);
        swift_unknownObjectRelease(a2);
        sub_100225AB4((uint64_t)a1, v30);
        v14 = v26;
        return swift_unknownObjectRelease(v14);
      }
      swift_unknownObjectRelease(v24);
    }
    v34 = type metadata accessor for SFAirDropReceive.Failure(0);
    v35 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v36 = swift_allocError(v34, v35, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v37, enum case for SFAirDropReceive.Failure.badRequest(_:), v34);
    v40 = (void *)v36;
    v38 = sub_100008384(&qword_1007C4878);
    CheckedContinuation.resume(throwing:)(&v40, v38);
    v14 = a2;
  }
  return swift_unknownObjectRelease(v14);
}

uint64_t sub_10050151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for DispatchData.Deallocator(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a3);
  return DispatchData.init(bytesNoCopy:deallocator:)(a1, a2, v8);
}

uint64_t sub_1005015BC()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005015E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = String.init(cString:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10050160C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = __DataStorage._bytes.getter();
  v5 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = __DataStorage._length.getter();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  v12 = type metadata accessor for SHA256(0);
  v13 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  return dispatch thunk of HashFunction.update(bufferPointer:)(v5, v11, v12, v13);
}

uint64_t sub_1005016D0(_QWORD *a1)
{
  size_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  size_t v20;
  unint64_t v21;
  size_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = type metadata accessor for SHA256Digest(0);
  __chkstk_darwin(v3);
  (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 16))((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_100220D78((unint64_t *)&unk_1007C4778, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest, (uint64_t)&protocol conformance descriptor for SHA256Digest);
  dispatch thunk of Sequence.makeIterator()(v3);
  result = sub_100008384(&qword_1007BD538);
  v7 = *(_QWORD *)((char *)a1 + *(int *)(result + 36));
  v8 = v30;
  if (!v7 || (v9 = v31, v10 = *(_QWORD *)(v30 + 16), v31 == v10))
  {
    result = swift_bridgeObjectRelease(v30);
    v1 = 0;
    a1 = _swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  if ((v31 & 0x8000000000000000) == 0)
  {
    if (v31 < *(_QWORD *)(v30 + 16))
    {
      v1 = 0;
      a1 = _swiftEmptyArrayStorage;
      v11 = v7 - 1;
      v12 = &_swiftEmptyArrayStorage[4];
      v13 = v10 - 1;
      v29 = v13;
      while (1)
      {
        v14 = *(_BYTE *)(v8 + v9 + 32);
        if (!v1)
        {
          v15 = a1[3];
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1)
            v17 = 1;
          else
            v17 = v16;
          v18 = sub_100008384(&qword_1007B52C0);
          v19 = (_QWORD *)swift_allocObject(v18, v17 + 32, 7);
          v20 = 2 * j__malloc_size(v19) - 64;
          v19[2] = v17;
          v19[3] = v20;
          v21 = (unint64_t)(v19 + 4);
          v22 = a1[3] >> 1;
          if (a1[2])
          {
            if (v19 != a1 || v21 >= (unint64_t)a1 + v22 + 32)
              memmove(v19 + 4, a1 + 4, v22);
            a1[2] = 0;
          }
          v12 = (_BYTE *)(v21 + v22);
          v1 = (v20 >> 1) - v22;
          result = swift_release(a1);
          a1 = v19;
          v13 = v29;
        }
        v24 = __OFSUB__(v1--, 1);
        if (v24)
          break;
        *v12 = v14;
        if (!v11 || v13 == v9)
          goto LABEL_26;
        ++v9;
        ++v12;
        --v11;
        if (v9 >= *(_QWORD *)(v8 + 16))
          goto LABEL_25;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    result = swift_bridgeObjectRelease(v8);
LABEL_27:
    v25 = a1[3];
    if (v25 < 2)
      return (uint64_t)a1;
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v1);
    v27 = v26 - v1;
    if (!v24)
    {
      a1[2] = v27;
      return (uint64_t)a1;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100501914()
{
  return sub_10031B818(&qword_1007C4788);
}

uint64_t sub_100501920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100503B14(a1, a2, a3, a4, &qword_1007C4788, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005004CC);
}

uint64_t sub_100501934()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100501944(uint64_t a1)
{
  uint64_t v1;

  return sub_100501024(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10050195C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10050196C()
{
  return sub_10031B818(&qword_1007C4788);
}

uint64_t sub_100501978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100503B14(a1, a2, a3, a4, &qword_1007C4788, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100500B78);
}

uint64_t sub_10050198C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050199C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

int64_t sub_1005019AC(int64_t result, int64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _BOOL4 v9;
  BOOL v10;
  uint64_t v11;
  int64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t *v15;
  uint64_t v16;
  BOOL v17;
  int64_t v18;
  BOOL v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;

  v5 = result;
  v6 = 0;
  v7 = 32;
  v8 = result;
  while (1)
  {
    v9 = v8 <= a2;
    if (a3 > 0)
      v9 = v8 >= a2;
    if (v9)
      break;
    v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10)
      v8 = (v8 >> 63) ^ 0x8000000000000000;
    v7 += 8;
    v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    v11 = sub_100008384(&qword_1007B5410);
    v12 = (int64_t *)swift_allocObject(v11, v7, 7);
    result = j__malloc_size(v12);
    v13 = result - 32;
    if (result < 32)
      v13 = result - 25;
    v14 = v13 >> 3;
    v12[2] = v6;
    v12[3] = 2 * v14;
    v15 = v12 + 4;
    v16 = v14 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v16 -= v6;
    while (1)
    {
      v17 = v5 <= a2;
      if (a3 > 0)
        v17 = v5 >= a2;
      if (v17)
        break;
      if (__OFADD__(v5, a3))
        v18 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      else
        v18 = v5 + a3;
      *v15++ = v5;
      v5 = v18;
      if (!--v6)
        goto LABEL_23;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v12 = _swiftEmptyArrayStorage;
  v15 = &_swiftEmptyArrayStorage[4];
  v16 = _swiftEmptyArrayStorage[3] >> 1;
  if (v6)
    goto LABEL_15;
  v18 = result;
LABEL_23:
  v19 = v18 <= a2;
  if (a3 > 0)
    v19 = v18 >= a2;
  if (!v19)
  {
    v20 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v21 = v18 + a3;
      if (__OFADD__(v18, a3))
      {
        v21 = v20;
        if (!v16)
          goto LABEL_32;
        v21 = v20;
      }
      else if (!v16)
      {
LABEL_32:
        v22 = v12[3];
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_58;
        v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1)
          v24 = 1;
        else
          v24 = v23;
        v25 = sub_100008384(&qword_1007B5410);
        v26 = (int64_t *)swift_allocObject(v25, 8 * v24 + 32, 7);
        v27 = j__malloc_size(v26);
        v28 = v27 - 32;
        if (v27 < 32)
          v28 = v27 - 25;
        v29 = v28 >> 3;
        v26[2] = v24;
        v26[3] = 2 * (v28 >> 3);
        v30 = (unint64_t)(v26 + 4);
        v31 = (unint64_t)v12[3] >> 1;
        if (v12[2])
        {
          if (v26 != v12 || v30 >= (unint64_t)&v12[v31 + 4])
            memmove(v26 + 4, v12 + 4, 8 * v31);
          v12[2] = 0;
        }
        v15 = (int64_t *)(v30 + 8 * v31);
        v16 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        result = swift_release(v12);
        v12 = v26;
        v20 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      v10 = __OFSUB__(v16--, 1);
      if (v10)
        goto LABEL_57;
      *v15++ = v18;
      v33 = v21 <= a2;
      if (a3 > 0)
        v33 = v21 >= a2;
      v18 = v21;
    }
    while (!v33);
  }
  v34 = v12[3];
  if (v34 < 2)
    return (int64_t)v12;
  v35 = v34 >> 1;
  v10 = __OFSUB__(v35, v16);
  v36 = v35 - v16;
  if (!v10)
  {
    v12[2] = v36;
    return (int64_t)v12;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_100501C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *application_service_quic_using_identity;
  NSObject *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  xpc_object_t empty;
  size_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *options;
  NSObject *v28;
  NSObject *v29;
  uint64_t result;
  Swift::String v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t v34;
  NSObject *v35;
  void **aBlock;
  unint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void *v39;
  uint64_t (*v40)();
  uint64_t v41;
  char v42;

  v2 = type metadata accessor for String.Encoding(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    application_service_quic_using_identity = nw_parameters_create_application_service_quic_using_identity(a1);
  else
    application_service_quic_using_identity = nw_parameters_create_application_service_quic(v4);
  v8 = application_service_quic_using_identity;
  if (!application_service_quic_using_identity)
    goto LABEL_19;
  nw_parameters_set_prohibit_constrained(application_service_quic_using_identity, 1);
  aBlock = (void **)0xD00000000000001BLL;
  v37 = 0x800000010061F6F0;
  v9 = swift_unknownObjectRetain(v8);
  static String.Encoding.utf8.getter(v9);
  v10 = sub_100221E10();
  v11 = StringProtocol.cString(using:)(v6, &type metadata for String, v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease(v37);
  if (v11)
    v12 = v11 + 32;
  else
    v12 = 0;
  nw_parameters_set_source_application_by_bundle_id(v8, v12);
  swift_unknownObjectRelease(v8);
  swift_bridgeObjectRelease(v11);
  nw_parameters_set_include_peer_to_peer(v8, 1);
  v13 = swift_unknownObjectRetain(v8);
  nw_parameters_set_attach_protocol_listener(v13, 1);
  nw_parameters_set_server_mode(v8, 1);
  swift_unknownObjectRelease(v8);
  if ((sub_1003EF9D0() & 1) != 0)
  {
    nw_parameters_set_local_only(v8, 0);
  }
  else
  {
    if (a1)
      nw_parameters_set_required_interface_subtype(v8, 1002);
    nw_parameters_set_multipath_service(v8, nw_multipath_service_disabled);
  }
  type metadata accessor for SFAirDropUserDefaults(0, v14);
  v15 = (void *)static SFAirDropUserDefaults.shared.getter();
  v16 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

  if ((v16 & 1) == 0)
  {
    nw_parameters_set_prohibit_expensive(v8, 1);
    empty = xpc_array_create_empty();
    v18 = XPC_ARRAY_APPEND.getter();
    xpc_array_set_uint64(empty, v18, 2uLL);
    nw_parameters_set_prohibited_interface_types(v8, empty);
    swift_unknownObjectRelease(empty);
  }
  v42 = 0;
  v19 = nw_parameters_copy_default_protocol_stack(v8);
  v20 = swift_allocObject(&unk_10072D808, 24, 7);
  *(_QWORD *)(v20 + 16) = &v42;
  v21 = swift_allocObject(&unk_10072D830, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1005037BC;
  *(_QWORD *)(v21 + 24) = v20;
  v40 = sub_1004F5244;
  v41 = v21;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100379274;
  v39 = &unk_10072D848;
  v22 = _Block_copy(&aBlock);
  v23 = v41;
  swift_retain(v21);
  swift_release(v23);
  nw_protocol_stack_iterate_application_protocols(v19, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v21, "", 88, 366, 66, 1);
  swift_release(v21);
  if ((v22 & 1) != 0)
  {
    __break(1u);
LABEL_19:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000034, 0x800000010061F830, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 338, 0);
    goto LABEL_21;
  }
  if (v42 == 1)
  {
    type metadata accessor for NWParameters(0);
    v24 = swift_unknownObjectRetain(v8);
    v25 = NWParameters.__allocating_init(_:)(v24);
    v26 = NWParameters.preferNoProxies.setter(1);
    options = nw_http3_create_options(v26);
    v28 = NWParameters.nw.getter();
    v29 = nw_parameters_copy_default_protocol_stack(v28);
    swift_unknownObjectRelease(v28);
    nw_protocol_stack_prepend_application_protocol(v29, options);
    swift_release(v20);
    swift_unknownObjectRelease(v19);
    swift_unknownObjectRelease(v8);
    swift_unknownObjectRelease(options);
    swift_unknownObjectRelease(v29);
    return v25;
  }
  aBlock = 0;
  v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(75);
  v31._countAndFlagsBits = 0xD00000000000003ALL;
  v31._object = (void *)0x800000010061F8A0;
  String.append(_:)(v31);
  v35 = v19;
  v32 = sub_100008384(&qword_1007C4808);
  _print_unlocked<A, B>(_:_:)(&v35, &aBlock, v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v33._countAndFlagsBits = 0x74656D6172617020;
  v33._object = (void *)0xED0000203A737265;
  String.append(_:)(v33);
  v35 = v8;
  v34 = sub_100008384(&qword_1007C4870);
  _print_unlocked<A, B>(_:_:)(&v35, &aBlock, v34, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v37, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 381, 0);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1005020B0(uint64_t a1)
{
  NSObject *v2;
  nw_parameters_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  void *object;
  uint64_t v29;
  Swift::String v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v2 = NWConnection.nw.getter(a1);
  v3 = nw_connection_copy_parameters(v2);
  v4 = swift_unknownObjectRelease(v2);
  v5 = NWConnection.nw.getter(v4);
  v6 = nw_connection_create_with_connection(v5, v3);
  swift_unknownObjectRelease(v5);
  if (!v6)
  {
    _StringGuts.grow(_:)(55);
    v25._countAndFlagsBits = 0xD000000000000035;
    v25._object = (void *)0x800000010061F9C0;
    String.append(_:)(v25);
    v27._countAndFlagsBits = NWConnection.debugDescription.getter(v26);
    object = v27._object;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 73, 0);
LABEL_11:
    __break(1u);
    return result;
  }
  v7 = swift_unknownObjectRetain(v6);
  v8 = NWConnection.__allocating_init(_:)(v7);
  if (!v8)
  {
    _StringGuts.grow(_:)(38);
    v29 = swift_bridgeObjectRelease(0xE000000000000000);
    v30._countAndFlagsBits = NWConnection.debugDescription.getter(v29);
    v31 = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v31);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000024, 0x800000010061FA00, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 76, 0);
    goto LABEL_11;
  }
  v9 = v8;
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007C4740);
  swift_retain_n(v9, 2);
  v11 = swift_retain_n(a1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v33 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = NWConnection.debugDescription.getter(v15);
    v18 = v17;
    v32 = sub_100228BD8(v16, v17, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 4);
    swift_release_n(v9, 2);
    v19 = swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    v20 = NWConnection.debugDescription.getter(v19);
    v22 = v21;
    v32 = sub_100228BD8(v20, v21, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 14);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Created connection %s from existing connection %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
    swift_unknownObjectRelease(v6);

    v23 = (uint64_t)v3;
  }
  else
  {

    swift_unknownObjectRelease(v3);
    swift_release_n(a1, 2);
    swift_release_n(v9, 2);
    v23 = v6;
  }
  swift_unknownObjectRelease(v23);
  return v9;
}

uint64_t sub_10050242C(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *application_service_quic_using_identity;
  NSObject *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  xpc_object_t empty;
  size_t v19;
  xpc_object_t v20;
  size_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  xpc_object_t v27;
  size_t v28;
  xpc_object_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *options;
  NSObject *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  Swift::String v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  NSObject *v50;
  void **aBlock;
  unint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  void *v54;
  uint64_t (*v55)();
  uint64_t v56;
  char v57;

  v4 = type metadata accessor for String.Encoding(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
    application_service_quic_using_identity = nw_parameters_create_application_service_quic_using_identity(a2);
  else
    application_service_quic_using_identity = nw_parameters_create_application_service_quic(v6);
  v10 = application_service_quic_using_identity;
  if (!application_service_quic_using_identity)
    goto LABEL_18;
  nw_parameters_set_prohibit_constrained(application_service_quic_using_identity, 1);
  aBlock = (void **)0xD00000000000001BLL;
  v52 = 0x800000010061F6F0;
  v11 = swift_unknownObjectRetain(v10);
  static String.Encoding.utf8.getter(v11);
  v12 = sub_100221E10();
  v13 = StringProtocol.cString(using:)(v8, &type metadata for String, v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  swift_bridgeObjectRelease(v52);
  if (v13)
    v14 = v13 + 32;
  else
    v14 = 0;
  nw_parameters_set_source_application_by_bundle_id(v10, v14);
  swift_unknownObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  nw_parameters_set_include_peer_to_peer(v10, 1);
  if ((sub_1003EF9D0() & 1) != 0)
  {
    if ((a1 & 1) == 0)
      nw_parameters_set_local_only(v10, 0);
  }
  else
  {
    nw_parameters_set_required_interface_subtype(v10, 1002);
    nw_parameters_set_multipath_service(v10, nw_multipath_service_disabled);
  }
  type metadata accessor for SFAirDropUserDefaults(0, v15);
  v16 = (void *)static SFAirDropUserDefaults.shared.getter();
  v17 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

  if ((v17 & 1) == 0)
  {
    nw_parameters_set_prohibit_expensive(v10, 1);
    empty = xpc_array_create_empty();
    v19 = XPC_ARRAY_APPEND.getter();
    xpc_array_set_uint64(empty, v19, 2uLL);
    nw_parameters_set_prohibited_interface_types(v10, empty);
    swift_unknownObjectRelease(empty);
  }
  v20 = xpc_array_create_empty();
  v21 = XPC_ARRAY_APPEND.getter();
  xpc_array_set_uint64(v20, v21, 0x3EAuLL);
  nw_parameters_set_preferred_interface_subtypes(v10, v20);
  v57 = 0;
  v22 = nw_parameters_copy_default_protocol_stack(v10);
  v23 = swift_allocObject(&unk_10072DA10, 24, 7);
  *(_QWORD *)(v23 + 16) = &v57;
  v24 = swift_allocObject(&unk_10072DA38, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_100503C3C;
  *(_QWORD *)(v24 + 24) = v23;
  v55 = sub_1004F5244;
  v56 = v24;
  aBlock = _NSConcreteStackBlock;
  v52 = 1107296256;
  v53 = sub_100379274;
  v54 = &unk_10072DA50;
  v25 = _Block_copy(&aBlock);
  v26 = v56;
  swift_retain(v24);
  swift_release(v26);
  nw_protocol_stack_iterate_application_protocols(v22, v25);
  _Block_release(v25);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v24, "", 88, 145, 66, 1);
  swift_release(v24);
  if ((v25 & 1) != 0)
  {
    __break(1u);
LABEL_18:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000034, 0x800000010061F830, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 112, 0);
    goto LABEL_20;
  }
  if (v57 == 1)
  {
    v27 = xpc_array_create(0, 0);
    v28 = XPC_ARRAY_APPEND.getter();
    xpc_array_set_string(v27, v28, "com.apple.rapport.browse");
    v29 = xpc_array_create(0, 0);
    v30 = XPC_ARRAY_APPEND.getter();
    xpc_array_set_string(v29, v30, "RapportBrowseAgent");
    nw_parameters_set_preferred_netagent_classes(v10, v27, v29);
    type metadata accessor for NWParameters(0);
    v31 = swift_unknownObjectRetain(v10);
    v32 = NWParameters.__allocating_init(_:)(v31);
    v33 = NWParameters.preferNoProxies.setter(1);
    options = nw_http3_create_options(v33);
    v35 = ((uint64_t (*)(void))NWParameters.nw.getter)();
    v36 = nw_parameters_copy_default_protocol_stack(v35);
    swift_unknownObjectRelease(v35);
    nw_protocol_stack_prepend_application_protocol(v36, options);
    swift_unknownObjectRelease(options);
    v37 = swift_unknownObjectRelease(v36);
    v38 = NWParameters.nw.getter(v37);
    nw_parameters_set_server_mode(v38, 0);
    v39 = swift_unknownObjectRelease(v38);
    v40 = NWParameters.nw.getter(v39);
    v41 = AirDropID.getter();
    v43 = v42;
    v44 = String.utf8CString.getter(v41, v42);
    swift_bridgeObjectRelease(v43);
    nw_parameters_set_account_id(v40, v44 + 32);
    swift_release(v23);
    swift_unknownObjectRelease(v22);
    swift_unknownObjectRelease(v27);
    swift_unknownObjectRelease(v29);
    swift_unknownObjectRelease(v40);
    swift_release(v44);
    swift_unknownObjectRelease(v20);
    swift_unknownObjectRelease(v10);
    return v32;
  }
  aBlock = 0;
  v52 = 0xE000000000000000;
  _StringGuts.grow(_:)(75);
  v46._countAndFlagsBits = 0xD00000000000003ALL;
  v46._object = (void *)0x800000010061F8A0;
  String.append(_:)(v46);
  v50 = v22;
  v47 = sub_100008384(&qword_1007C4808);
  _print_unlocked<A, B>(_:_:)(&v50, &aBlock, v47, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v48._countAndFlagsBits = 0x74656D6172617020;
  v48._object = (void *)0xED0000203A737265;
  String.append(_:)(v48);
  v50 = v10;
  v49 = sub_100008384(&qword_1007C4870);
  _print_unlocked<A, B>(_:_:)(&v50, &aBlock, v49, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v52, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 160, 0);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10050298C(NSObject *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *options;
  uint64_t v32;
  NSObject *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void **aBlock;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;

  v45 = a6;
  v46 = a2;
  v49 = a3;
  v11 = type metadata accessor for NWInterface.InterfaceSubtype(0);
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NWProtocolTCP.Options(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter(0);
  v16 = type metadata accessor for NWProtocolTLS.Options(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = NWProtocolTLS.Options.init()();
  v18 = ((uint64_t (*)(void))dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter)();
  sec_protocol_options_set_peer_authentication_required(v18, 0);
  v19 = swift_unknownObjectRelease(v18);
  v20 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v19);
  v54 = a4;
  v55 = a5;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_1004FC8DC;
  v53 = &unk_10072D8C0;
  v21 = _Block_copy(&aBlock);
  v22 = v55;
  swift_retain(a5);
  swift_release(v22);
  sec_protocol_options_set_verify_block(v20, v21, a1);
  _Block_release(v21);
  v23 = swift_unknownObjectRelease(v20);
  v24 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v23);
  v54 = v45;
  v55 = a7;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_1004FD418;
  v53 = &unk_10072D8E8;
  v25 = _Block_copy(&aBlock);
  v26 = v55;
  swift_retain(a7);
  swift_release(v26);
  sec_protocol_options_set_challenge_block(v24, v25, a1);
  _Block_release(v25);
  v27 = swift_unknownObjectRelease(v24);
  v28 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v27);
  sec_protocol_options_set_nw_protocol_joining_context(v28, v46);
  swift_unknownObjectRelease(v28);
  type metadata accessor for NWParameters(0);
  swift_retain(v17);
  swift_retain(v15);
  v29 = NWParameters.__allocating_init(tls:tcp:)(v17, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v13, enum case for NWInterface.InterfaceSubtype.wifiAWDL(_:), v48);
  NWParameters.requiredInterfaceSubtype.setter(v13);
  NWParameters.allowLocalEndpointReuse.setter(1);
  NWParameters.includePeerToPeer.setter(1);
  v30 = NWParameters.preferNoProxies.setter(1);
  options = nw_http_messaging_create_options(v30);
  v32 = nw_http1_set_idle_timeout(options, 30);
  v33 = NWParameters.nw.getter(v32);
  v34 = nw_parameters_copy_default_protocol_stack(v33);
  swift_unknownObjectRelease(v33);
  nw_protocol_stack_prepend_application_protocol(v34, options);
  swift_unknownObjectRelease(options);
  v35 = swift_unknownObjectRelease(v34);
  v36 = NWParameters.nw.getter(v35);
  nw_parameters_set_server_mode(v36, 0);
  v37 = swift_unknownObjectRelease(v36);
  if ((v49 & 1) != 0)
  {
    v38 = NWParameters.nw.getter(v37);
    v39 = AirDropID.getter();
    v41 = v40;
    v42 = String.utf8CString.getter(v39, v40);
    swift_bridgeObjectRelease(v41);
    nw_parameters_set_account_id(v38, v42 + 32);
    swift_unknownObjectRelease(v38);
    swift_release(v42);
  }
  swift_release(v15);
  swift_release(v17);
  return v29;
}

void sub_100502CB0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  const char *v9;
  uint32_t v10;
  uint32_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint32_t v24;
  uint32_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint32_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[4];
  int out_token;
  uint64_t v48[2];

  v2 = type metadata accessor for String.Encoding(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[0] = 0xD000000000000027;
  v48[1] = 0x800000010061F930;
  static String.Encoding.utf8.getter(v4);
  v7 = sub_100221E10();
  v8 = StringProtocol.cString(using:)(v6, &type metadata for String, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  out_token = -1;
  if (v8)
    v9 = (const char *)(v8 + 32);
  else
    v9 = 0;
  v10 = notify_register_check(v9, &out_token);
  if (v10)
  {
    v11 = v10;
    swift_bridgeObjectRelease(v8);
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C4740);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(18, -1);
      v17 = swift_slowAlloc(32, -1);
      v48[0] = v17;
      *(_DWORD *)v16 = 136315394;
      v45 = sub_100228BD8(0xD000000000000027, 0x800000010061F930, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v16 + 4);
      *(_WORD *)(v16 + 12) = 1024;
      LODWORD(v45) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v16 + 14);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to registered check for notification %s with status %u", (uint8_t *)v16, 0x12u);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    return;
  }
  if (out_token == -1)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100221DF8(v18, (uint64_t)qword_1007C4740);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v48[0] = v23;
      *(_DWORD *)v22 = 136315138;
      v45 = sub_100228BD8(0xD000000000000027, 0x800000010061F930, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v22 + 4);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to registered check token for notification %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }

  }
  v24 = notify_set_state(out_token, a1 & 1);
  if (v24)
  {
    v25 = v24;
    swift_bridgeObjectRelease(v8);
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100221DF8(v26, (uint64_t)qword_1007C4740);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (!os_log_type_enabled(v28, v29))
      goto LABEL_27;
    v30 = swift_slowAlloc(18, -1);
    v31 = swift_slowAlloc(32, -1);
    v48[0] = v31;
    *(_DWORD *)v30 = 136315394;
    v45 = sub_100228BD8(0xD000000000000027, 0x800000010061F930, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v30 + 4);
    *(_WORD *)(v30 + 12) = 1024;
    LODWORD(v45) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v30 + 14);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to set state for notification %s with status %u", (uint8_t *)v30, 0x12u);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    v32 = v31;
LABEL_26:
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v30, -1, -1);
LABEL_27:

    notify_cancel(out_token);
    return;
  }
  v33 = notify_post(v9);
  swift_bridgeObjectRelease(v8);
  if (v33)
  {
    if (qword_1007B4218 != -1)
      swift_once(&qword_1007B4218, sub_1004FD16C);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100221DF8(v34, (uint64_t)qword_1007C4740);
    v28 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.error.getter(v28);
    if (!os_log_type_enabled(v28, v36))
      goto LABEL_27;
    v30 = swift_slowAlloc(18, -1);
    v37 = swift_slowAlloc(32, -1);
    v48[0] = v37;
    *(_DWORD *)v30 = 136315394;
    v45 = sub_100228BD8(0xD000000000000027, 0x800000010061F930, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v30 + 4);
    *(_WORD *)(v30 + 12) = 1024;
    LODWORD(v45) = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v30 + 14);
    _os_log_impl((void *)&_mh_execute_header, v28, v36, "Failed to post notification %s with status %u", (uint8_t *)v30, 0x12u);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    v32 = v37;
    goto LABEL_26;
  }
  if (qword_1007B4218 != -1)
    swift_once(&qword_1007B4218, sub_1004FD16C);
  v38 = type metadata accessor for Logger(0);
  v39 = sub_100221DF8(v38, (uint64_t)qword_1007C4740);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc(18, -1);
    v43 = swift_slowAlloc(32, -1);
    v48[0] = v43;
    *(_DWORD *)v42 = 136315394;
    v45 = sub_100228BD8(0xD000000000000027, 0x800000010061F930, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v42 + 4);
    *(_WORD *)(v42 + 12) = 1024;
    LODWORD(v45) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v42 + 14);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Posted notification %s for cellular interface in use %{BOOL}d", (uint8_t *)v42, 0x12u);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);
  }

}

uint64_t sub_100503444(__SecIdentity *a1)
{
  sec_identity_t v1;
  NSString v2;
  __SecIdentity *SelfSignedIdentity;
  sec_identity_t v4;
  uint64_t result;

  if (a1)
  {
    v1 = sec_identity_create(a1);
    if (v1)
      return (uint64_t)v1;
  }
  v2 = String._bridgeToObjectiveC()();
  SelfSignedIdentity = (__SecIdentity *)_CFHTTPServerCreateSelfSignedIdentity();

  if (SelfSignedIdentity)
  {
    v4 = sec_identity_create(SelfSignedIdentity);
    if (v4)
    {
      v1 = v4;

      return (uint64_t)v1;
    }
  }
  else
  {
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x800000010061F7F0, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 278, 0);
  __break(1u);
  return result;
}

uint64_t sub_100503508(__SecIdentity *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *options;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v30;

  v2 = sub_100008384((uint64_t *)&unk_1007BD908);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4790);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NWProtocolTCP.Options(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter(0);
  v10 = type metadata accessor for NWProtocolTLS.Options(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = NWProtocolTLS.Options.init()();
  v12 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v11);
  v13 = sub_100503444(a1);
  sec_protocol_options_set_local_identity(v12, v13);
  swift_unknownObjectRelease(v12);
  v14 = swift_unknownObjectRelease(v13);
  v15 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v14);
  sec_protocol_options_set_peer_authentication_optional(v15, 1);
  swift_unknownObjectRelease(v15);
  type metadata accessor for NWParameters(0);
  swift_retain(v11);
  swift_retain(v9);
  v16 = NWParameters.__allocating_init(tls:tcp:)(v11, v9);
  NWParameters.allowLocalEndpointReuse.setter(1);
  sub_1004FD2B4((uint64_t)v7);
  NWParameters.requiredInterface.setter(v7);
  sub_100008384((uint64_t *)&unk_1007C4798);
  NWEndpoint.Host.init(stringLiteral:)(0x302E302E302E30, 0xE700000000000000);
  NWEndpoint.Port.init(integerLiteral:)(8770);
  v17 = enum case for NWEndpoint.hostPort(_:);
  v18 = type metadata accessor for NWEndpoint(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v4, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v4, 0, 1, v18);
  NWParameters.requiredLocalEndpoint.setter(v4);
  v20 = NWParameters.preferNoProxies.setter(1);
  v21 = NWParameters.nw.getter(v20);
  nw_parameters_set_attach_protocol_listener(v21, 1);
  v22 = swift_unknownObjectRelease(v21);
  v23 = NWParameters.nw.getter(v22);
  nw_parameters_set_server_mode(v23, 1);
  v24 = swift_unknownObjectRelease(v23);
  options = nw_http_messaging_create_options(v24);
  v26 = nw_http1_set_idle_timeout(options, 30);
  v27 = NWParameters.nw.getter(v26);
  v28 = nw_parameters_copy_default_protocol_stack(v27);
  swift_unknownObjectRelease(v27);
  nw_protocol_stack_prepend_application_protocol(v28, options);
  swift_release(v9);
  swift_release(v11);
  swift_unknownObjectRelease(options);
  swift_unknownObjectRelease(v28);
  return v16;
}

uint64_t sub_1005037AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005037BC(NSObject *a1)
{
  uint64_t v1;

  return sub_1004FD4A4(a1, *(_BYTE **)(v1 + 16), (void (*)(NSObject *, uint64_t))&nw_quic_set_disable_spin_bit);
}

uint64_t sub_1005037DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005037EC()
{
  return sub_10031B818(&qword_1007C4878);
}

uint64_t sub_1005037F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100503B14(a1, a2, a3, a4, &qword_1007C4878, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100501254);
}

uint64_t sub_10050380C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSString v8;
  __SecIdentity *SelfSignedIdentity;
  sec_identity_t v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v0 = sub_100008384(&qword_1007C4790);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NWProtocolTCP.Options(0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter(0);
  v5 = type metadata accessor for NWProtocolTLS.Options(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = NWProtocolTLS.Options.init()();
  v7 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v6);
  v8 = String._bridgeToObjectiveC()();
  SelfSignedIdentity = (__SecIdentity *)_CFHTTPServerCreateSelfSignedIdentity();

  if (SelfSignedIdentity)
  {
    v10 = sec_identity_create(SelfSignedIdentity);
    if (v10)
    {
      v11 = v10;

      sec_protocol_options_set_local_identity(v7, v11);
      swift_unknownObjectRelease(v7);
      v12 = swift_unknownObjectRelease(v11);
      v13 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v12);
      sec_protocol_options_set_peer_authentication_optional(v13, 1);
      swift_unknownObjectRelease(v13);
      type metadata accessor for NWParameters(0);
      swift_retain(v6);
      swift_retain(v4);
      v14 = NWParameters.__allocating_init(tls:tcp:)(v6, v4);
      NWParameters.allowLocalEndpointReuse.setter(1);
      sub_1004FD2B4((uint64_t)v2);
      NWParameters.requiredInterface.setter(v2);
      swift_release(v4);
      swift_release(v6);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x800000010061F7F0, "DaemoniOSLibrary/Network+SFAirDrop.swift", 40, 2, 278, 0);
  __break(1u);
  return result;
}

uint64_t sub_1005039F0(int a1)
{
  uint64_t result;

  if (a1 > 399)
  {
    switch(a1)
    {
      case 400:
        result = 3;
        break;
      case 401:
        result = 4;
        break;
      case 402:
      case 404:
      case 405:
      case 406:
      case 407:
      case 408:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 416:
        return 13;
      case 403:
        result = 5;
        break;
      case 409:
        result = 6;
        break;
      case 417:
        result = 7;
        break;
      default:
        switch(a1)
        {
          case 500:
            result = 8;
            break;
          case 501:
            result = 9;
            break;
          case 503:
            result = 10;
            break;
          case 504:
            result = 11;
            break;
          case 507:
            result = 12;
            break;
          default:
            return 13;
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 100:
        return 0;
      case 200:
        return 1;
      case 204:
        return 2;
      default:
        return 13;
    }
  }
  return result;
}

uint64_t sub_100503AC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100503AEC(uint64_t a1)
{
  uint64_t v1;

  sub_1004FE268(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100503AF4()
{
  return sub_10031B818(&qword_1007C48A0);
}

uint64_t sub_100503B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100503B14(a1, a2, a3, a4, &qword_1007C48A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1004FE448);
}

uint64_t sub_100503B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(a5) - 8) + 80);
  return a6(a1, a2, a3, a4, v6 + ((v11 + 16) & ~v11));
}

void sub_100503B88(uint64_t a1)
{
  uint64_t v1;

  sub_1004FF464(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100503B98()
{
  return sub_10031B818((uint64_t *)&unk_1007B5A00);
}

uint64_t sub_100503BA4(uint64_t a1)
{
  sub_100008384((uint64_t *)&unk_1007B5A00);
  return sub_1004FFD34(a1);
}

uint64_t sub_100503BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100503C2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100503C3C(NSObject *a1)
{
  uint64_t v1;

  return sub_1004FD4A4(a1, *(_BYTE **)(v1 + 16), (void (*)(NSObject *, uint64_t))&nw_quic_connection_set_disable_spin_bit);
}

uint64_t sub_100503C5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for SDNWHTTPResponseError()
{
  return &type metadata for SDNWHTTPResponseError;
}

uint64_t destroy for SDNWHTTPResponse(uint64_t a1)
{
  return sub_100225AB4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s16DaemoniOSLibrary16SDNWHTTPResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_10022E4A8(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for SDNWHTTPResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_10022E4A8(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_100225AB4(v5, v6);
  return a1;
}

uint64_t assignWithTake for SDNWHTTPResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100225AB4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPResponse(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF4 && a1[24])
    return (*(_DWORD *)a1 + 244);
  v3 = *a1;
  v4 = v3 >= 0xD;
  v5 = v3 - 13;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNWHTTPResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 244;
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 12;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPResponse()
{
  return &type metadata for SDNWHTTPResponse;
}

uint64_t destroy for SDNWHTTPMessage(uint64_t a1)
{
  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  sub_100225AB4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  const char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(const char **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain(v4);
  sub_10022E4A8(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_unknownObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  const char *v4;
  const char *v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(const char **)(a2 + 8);
  v5 = *(const char **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)&v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  sub_10022E4A8(v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  sub_100225AB4(v9, v10);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_unknownObjectRetain(v11);
  swift_unknownObjectRelease(v12);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(const char **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_100225AB4(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNWHTTPMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPMessage()
{
  return &type metadata for SDNWHTTPMessage;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPStatusCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNWHTTPStatusCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1005040FC + 4 * byte_1005DB503[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100504130 + 4 * byte_1005DB4FE[v4]))();
}

uint64_t sub_100504130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100504138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100504140);
  return result;
}

uint64_t sub_10050414C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100504154);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100504158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100504160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPStatusCode()
{
  return &type metadata for SDNWHTTPStatusCode;
}

unint64_t sub_100504180()
{
  unint64_t result;

  result = qword_1007C48C0;
  if (!qword_1007C48C0)
  {
    result = swift_getWitnessTable(&unk_1005DB68C, &type metadata for SDNWHTTPStatusCode);
    atomic_store(result, (unint64_t *)&qword_1007C48C0);
  }
  return result;
}

uint64_t sub_100504234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v26[24];

  v3 = sub_100008384(&qword_1007C03E0);
  __chkstk_darwin(v3);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for SDAirDropServerConnection(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (uint64_t *)&v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v26[-v11 - 8];
  v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess(v13, v26, 0, 0);
  sub_100221F28(v13, (uint64_t)v5, &qword_1007C03E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100221DF8(v14, (uint64_t)qword_1007C48D0);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "UPLOAD connection is not active", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    v19 = enum case for SFNWInterfaceType.other(_:);
    v20 = type metadata accessor for SFNWInterfaceType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a1, v19, v20);
  }
  else
  {
    sub_100221DB4((uint64_t)v5, (uint64_t)v12, type metadata accessor for SDAirDropServerConnection);
    sub_100244384((uint64_t)v12, (uint64_t)v10, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload(v10, v6) > 1)
    {
      v22 = *v10;
      v23 = (char *)v10 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
      v24 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    }
    else
    {
      v22 = *v10;
    }
    sub_1004FA6E0(a1);
    swift_release(v22);
    return sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropServerConnection);
  }
}

uint64_t sub_1005044D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  v5 = sub_100008384(&qword_1007C03E0);
  v4[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropMessage(0);
  v4[25] = v6;
  v4[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SDAirDropServerConnection(0);
  v4[27] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[28] = v8;
  v4[29] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v4[30] = static AirDropActor.shared;
  return swift_task_switch(sub_1005045B8, v9, 0);
}

uint64_t sub_1005045B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  __SecTrust *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t (*v32)();
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  Class isa;
  id v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  unint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  void *v93;
  unint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;

  v1 = *(void **)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  if (objc_msgSend(v1, "screenStateSupportsAirDrop"))
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C48D0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received DISCOVER request", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 176);

    sub_100244384(v9, v7, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload(v7, v8) > 1)
    {
      v22 = *(uint64_t **)(v0 + 232);
      v10 = *v22;
      v23 = (char *)v22 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
      v24 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    }
    else
    {
      v10 = **(_QWORD **)(v0 + 232);
    }
    v25 = sub_1004FB6D8();
    *(_QWORD *)(v0 + 248) = v25;
    v26 = swift_release(v10);
    if (!v25)
    {
      v31 = (_QWORD *)swift_task_alloc(dword_1007C49DC);
      *(_QWORD *)(v0 + 368) = v31;
      v32 = sub_1005054E4;
      goto LABEL_38;
    }
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "TLS SecTrust present, continue DISCOVER", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }
    v30 = *(_QWORD *)(v0 + 168);

    if (v30 >> 60 == 15)
    {
      v31 = (_QWORD *)swift_task_alloc(dword_1007C49DC);
      *(_QWORD *)(v0 + 352) = v31;
      v32 = sub_10050542C;
LABEL_38:
      *v31 = v0;
      v31[1] = v32;
      return sub_10050D3D4(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176));
    }
    v33 = sub_100244404(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Sender record data present, continue DISCOVER", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    isa = Data._bridgeToObjectiveC()().super.isa;
    v38 = sub_10004FF2C(isa, v25, 0);

    if (!v38)
    {
      v31 = (_QWORD *)swift_task_alloc(dword_1007C49DC);
      *(_QWORD *)(v0 + 336) = v31;
      v32 = sub_10050536C;
      goto LABEL_38;
    }
    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Validated record data, continue DISCOVER", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);

    v47 = sub_10038FBF4();
    v49 = v48;
    *(_QWORD *)(v0 + 256) = v47;
    *(_QWORD *)(v0 + 264) = v48;
    sub_1003915B0(v45, v46, v25);
    LOBYTE(v45) = v50;
    v51 = sub_100391308(v25);
    if ((v45 & 1) == 0 || (v51 & 1) != 0)
    {
      v64 = objc_msgSend(v1, "copyMyAppleIDSecIdentity");

      if (!v64 || (v65 = sub_10038E348(v107, (uint64_t)v40, v25), (v65 & 1) == 0))
      {
        swift_bridgeObjectRelease(v40);
        v31 = (_QWORD *)swift_task_alloc(dword_1007C49DC);
        *(_QWORD *)(v0 + 320) = v31;
        v32 = sub_100505294;
        goto LABEL_38;
      }
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Sender trusted, finish DISCOVER", v68, 2u);
        swift_slowDealloc(v68, -1, -1);
      }
      v69 = *(_QWORD *)(v0 + 184);

      v70 = objc_msgSend(*(id *)(v69 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_nearbyAgent), "idSelfIdentity");
      *(_QWORD *)(v0 + 272) = v70;
      v71 = objc_msgSend((id)objc_opt_self(PFMediaCapabilities), "capabilitiesForCurrentDevice");
      v72 = objc_msgSend(v71, "opaqueRepresentation");

      if (v72)
      {
        v103 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v72);
        v106 = v73;

      }
      else
      {
        v103 = 0;
        v106 = 0xF000000000000000;
      }
      v74 = objc_msgSend(v1, "someComputerName");
      if (v74)
      {
        v75 = v74;
        v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
        v104 = v77;
        v105 = v76;

      }
      else
      {
        v104 = 0;
        v105 = 0;
      }
      v78 = objc_msgSend(v1, "modelName");
      if (v78)
      {
        v79 = v78;
        v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v102 = v81;

      }
      else
      {
        v80 = 0;
        v102 = 0;
      }
      v101 = v80;
      if (v70)
      {
        v82 = objc_msgSend(v70, "deviceIRKData");
        if (v82)
        {
          v83 = v82;
          v99 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v100 = v84;

        }
        else
        {
          v99 = 0;
          v100 = 0xF000000000000000;
        }
        v92 = objc_msgSend(v70, "edPKData");
        if (v92)
        {
          v93 = v92;
          v88 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v92);
          v90 = v94;

        }
        else
        {
          v88 = 0;
          v90 = 0xF000000000000000;
        }
        v95 = objc_msgSend(v70, "idsDeviceID");
        if (v95)
        {
          v96 = v95;
          v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
          v87 = v97;

        }
        else
        {
          v86 = 0;
          v87 = 0;
        }
        v89 = v99;
        v85 = objc_msgSend(v70, "featureFlags");
        v91 = v100;
      }
      else
      {
        v85 = 0;
        v86 = 0;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        v90 = 0xF000000000000000;
        v91 = 0xF000000000000000;
      }
      *(_QWORD *)(v0 + 16) = v103;
      *(_QWORD *)(v0 + 24) = v106;
      *(_QWORD *)(v0 + 32) = v105;
      *(_QWORD *)(v0 + 40) = v104;
      *(_QWORD *)(v0 + 48) = v47;
      *(_QWORD *)(v0 + 56) = v49;
      *(_QWORD *)(v0 + 64) = v101;
      *(_QWORD *)(v0 + 72) = v102;
      *(_QWORD *)(v0 + 80) = v89;
      *(_QWORD *)(v0 + 88) = v91;
      *(_QWORD *)(v0 + 96) = v88;
      *(_QWORD *)(v0 + 104) = v90;
      *(_QWORD *)(v0 + 112) = v86;
      *(_QWORD *)(v0 + 120) = v87;
      *(_QWORD *)(v0 + 128) = v85;
      *(_BYTE *)(v0 + 136) = 0;
      *(_QWORD *)(v0 + 144) = v107;
      *(_QWORD *)(v0 + 152) = v40;
      v98 = static AirDropActor.shared;
      *(_QWORD *)(v0 + 280) = static AirDropActor.shared;
      sub_100244404((uint64_t)v47, v49);
      return swift_task_switch(sub_100504F64, v98, 0);
    }
    else
    {
      swift_bridgeObjectRelease(v40);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.error.getter(v53);
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Sender is blocked, finish DISCOVER", v55, 2u);
        swift_slowDealloc(v55, -1, -1);
      }
      v57 = *(_QWORD *)(v0 + 160);
      v56 = *(_QWORD *)(v0 + 168);

      v58 = type metadata accessor for SFAirDropReceive.Failure(0);
      v59 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      swift_allocError(v58, v59, 0, 0);
      v61 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v60, enum case for SFAirDropReceive.Failure.declined(_:), v58);
      swift_willThrow(v61);
      sub_100225AA0((uint64_t)v47, v49);
      sub_100225AA0(v57, v56);

      v62 = *(_QWORD *)(v0 + 208);
      v63 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 232));
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100221DF8(v11, (uint64_t)qword_1007C48D0);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Screen is off, rejecting DISCOVER", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 224);
    v18 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 176);

    sub_100244384(v19, v18, type metadata accessor for SDAirDropServerConnection);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
    v20 = (_QWORD *)swift_task_alloc(dword_1007C49D4);
    *(_QWORD *)(v0 + 376) = v20;
    *v20 = v0;
    v20[1] = sub_100505550;
    return sub_10050D018(*(_QWORD *)(v0 + 192));
  }
}

uint64_t sub_100504F64()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[25];
  v1 = (void *)v0[26];
  memmove(v1, v0 + 2, 0x90uLL);
  swift_storeEnumTagMultiPayload(v1, v2, 3);
  sub_100321728(v0 + 2);
  v3 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
  v0[36] = v3;
  *v3 = v0;
  v3[1] = sub_100504FEC;
  return sub_1004A0474(v0[26]);
}

uint64_t sub_100504FEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 280);
  sub_1002443C8(*(_QWORD *)(v2 + 208), type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_100505160;
  else
    v5 = sub_10050506C;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10050506C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;

  Strong = swift_unknownObjectWeakLoadStrong(v2[23] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  v2[38] = Strong;
  if (!Strong)
    return swift_task_switch(sub_100505204, v2[30], 0);
  v4 = v2[23] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
  v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v2[39] = v5;
  *v5 = v2;
  v5[1] = sub_100505108;
  return sub_1002DE698(v4, 0);
}

uint64_t sub_100505108()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_100505204, *(_QWORD *)(v1 + 240), 0);
}

uint64_t sub_100505160()
{
  uint64_t v0;

  return swift_task_switch(sub_100505174, *(_QWORD *)(v0 + 240), 0);
}

uint64_t sub_100505174()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(void **)(v0 + 272);
  v4 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  sub_1003217E0((uint64_t *)(v0 + 16));

  sub_100225AA0(v3, v1);
  sub_100225AA0(v6, v5);

  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100505204()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(void **)(v0 + 272);
  v4 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  sub_1003217E0((uint64_t *)(v0 + 16));

  sub_100225AA0(v3, v1);
  sub_100225AA0(v6, v5);

  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100505294()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 328) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100505718;
  else
    v4 = sub_1005052F8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 240), 0);
}

uint64_t sub_1005052F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  sub_100225AA0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  sub_100225AA0(v2, v3);

  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050536C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 336);
  *(_QWORD *)(*v1 + 344) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005056B4;
  else
    v4 = sub_1005053D0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 240), 0);
}

uint64_t sub_1005053D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 248);
  sub_100225AA0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));

  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050542C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100505658;
  else
    v4 = sub_100505490;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 240), 0);
}

uint64_t sub_100505490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005054E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD **)v0;
  v6 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  v2 = v1[29];
  v3 = v1[26];
  v4 = v1[24];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return ((uint64_t (*)(void))v6[1])();
}

uint64_t sub_100505550()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*v1 + 376);
  v3 = *v1;
  *(_QWORD *)(v3 + 384) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v4 = *(_QWORD *)(v3 + 240);
    sub_10000D0F0(*(_QWORD *)(v3 + 192), &qword_1007C03E0);
    return swift_task_switch(sub_100505604, v4, 0);
  }
  else
  {
    sub_10000D0F0(*(_QWORD *)(v3 + 192), &qword_1007C03E0);
    v6 = *(_QWORD *)(v3 + 208);
    v7 = *(_QWORD *)(v3 + 192);
    swift_task_dealloc(*(_QWORD *)(v3 + 232));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_100505604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100505658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005056B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 248);
  sub_100225AA0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));

  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100505718()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  sub_100225AA0(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  sub_100225AA0(v2, v3);

  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050578C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = type metadata accessor for SFPlatform(0);
  v3[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[12] = v5;
  v3[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C03E0);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B7DE8);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100505868, static AirDropActor.shared, 0);
}

uint64_t sub_100505868()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BOOL4 v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t **v31;
  uint64_t v32;
  uint64_t (*v33)();

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[9];
  v4 = v0[10];
  sub_100244384(v0[8], v2, _s12HelloRequestVMa);
  v5 = _s12HelloRequestVMa(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
  v6 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest, v0 + 2, 33, 0);
  sub_10023A084(v2, v6, &qword_1007B7DE8);
  swift_endAccess(v0 + 2);
  sub_100244384(v3, v1, type metadata accessor for SDAirDropServerConnection);
  v7 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 0, 1, v7);
  v8 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection, v0 + 5, 33, 0);
  sub_10023A084(v1, v8, &qword_1007C03E0);
  swift_endAccess(v0 + 5);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007C48D0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received HELLO request", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  type metadata accessor for SFAirDropUserDefaults(0, v14);
  v15 = (void *)static SFAirDropUserDefaults.shared.getter();
  v16 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  v22 = 0;
  if ((v16 & 1) != 0)
  {
    v19 = v0[12];
    v18 = v0[13];
    v20 = v0[11];
    static SFPlatform.macOS.getter(v17);
    v21 = static SFPlatform.isPlatform(_:)(v18);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    if ((v21 & 1) == 0)
      v22 = 1;
  }
  v23 = v0[8];
  v24 = v22 | 4;
  v25 = *(int *)(v5 + 24);
  v26 = *(unsigned __int8 *)(v23 + v25);
  if ((v26 & 1) != 0)
  {
    v28 = v0[12];
    v27 = v0[13];
    v29 = v0[11];
    static SFPlatform.macOS.getter(v17);
    v30 = static SFPlatform.isPlatform(_:)(v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    if ((v30 & 1) == 0)
      v24 = v22 | 6;
    v26 = *(unsigned __int8 *)(v23 + v25);
  }
  v31 = (uint64_t **)swift_task_alloc(dword_1007C49EC);
  v0[16] = (uint64_t)v31;
  if ((_DWORD)v26 == 2)
  {
    v32 = v24;
    v33 = sub_100513884;
  }
  else
  {
    v32 = v24 | (unint64_t)(v26 << 32);
    v33 = sub_100505B44;
  }
  *v31 = v0;
  v31[1] = (uint64_t *)v33;
  return sub_1005135AC(v32, v0[9]);
}

uint64_t sub_100505B44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD **)v0;
  v6 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  v3 = v1[14];
  v2 = v1[15];
  v4 = v1[13];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return ((uint64_t (*)(void))v6[1])();
}

uint64_t sub_100505BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[19] = v8;
  v3[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.AskProgress(0);
  v3[21] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[22] = v10;
  v3[23] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007C49F8);
  v3[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[25] = v12;
  v3[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007C03E8);
  v3[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007B7E48);
  v3[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007C03E0);
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007B7DF8);
  v3[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v17 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return swift_task_switch(sub_100505D60, v17, 0);
}

uint64_t sub_100505D60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t **v28;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t **v52;

  v1 = v0[29];
  v2 = v0[30];
  v3 = v0[12];
  v4 = v0[13];
  sub_100244384(v0[11], v2, _s10AskRequestVMa);
  v5 = _s10AskRequestVMa(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
  v6 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest, v0 + 2, 33, 0);
  sub_10023A084(v2, v6, &qword_1007B7DF8);
  swift_endAccess(v0 + 2);
  sub_100244384(v3, v1, type metadata accessor for SDAirDropServerConnection);
  v7 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 0, 1, v7);
  v8 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection, v0 + 5, 33, 0);
  sub_10023A084(v1, v8, &qword_1007C03E0);
  swift_endAccess(v0 + 5);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v9 = type metadata accessor for Logger(0);
  v0[32] = v9;
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007C48D0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received ASK request", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v14 = v0[13];

  Strong = swift_unknownObjectWeakLoadStrong(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, v15);
  v0[33] = Strong;
  if (Strong)
  {
    v17 = v0[28];
    sub_100221F28(v0[11] + *(int *)(v5 + 20), v17, &qword_1007B7E48);
    v18 = type metadata accessor for SFAirDrop.TransferType(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
    v21 = v0[28];
    if (v20 == 1)
    {
      sub_10000D0F0(v0[28], &qword_1007B7E48);
    }
    else
    {
      SFAirDrop.TransferType.exchangeType.getter();
      v31 = v30;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
      if (v31)
      {
        v32 = v0[27];
        v33 = v0[13];
        swift_bridgeObjectRelease(v31);
        v34 = _s15ExchangeRequestVMa(0);
        SFProgressContinuation.init(_:initialProgress:file:line:)(0x20544341544E4F43, 0xEF74736575716572, v35, 0xD00000000000005ELL, 0x800000010061FB90, 246, (char *)&type metadata for () + 8, v34);
        v36 = sub_100008384(&qword_1007C03F8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v32, 0, 1, v36);
        v37 = v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
        swift_beginAccess(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation, v0 + 8, 33, 0);
        sub_10023A084(v32, v37, &qword_1007C03E8);
        swift_endAccess(v0 + 8);
      }
    }
    v39 = v0[25];
    v38 = v0[26];
    v41 = v0[23];
    v40 = v0[24];
    v42 = v0[21];
    v43 = v0[22];
    v44 = v0[13];
    v45 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation;
    v0[34] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation;
    v46 = v44 + v45;
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    v0[35] = (uint64_t)v47;
    v47(v38, v46, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v41, enum case for SFAirDrop.AskProgress.waitingForAskResponse(_:), v42);
    SFProgressContinuation.yield(_:)(v41, v40);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v48 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v0[36] = (uint64_t)v48;
    v48(v38, v40);
    v49 = v44 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id;
    v50 = *(_QWORD *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
    v51 = *(_QWORD *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_endpointService);
    v52 = (uint64_t **)swift_task_alloc(dword_1007C244C);
    v0[37] = (uint64_t)v52;
    *v52 = v0;
    v52[1] = (uint64_t *)sub_10050626C;
    return sub_100499C60(v0[20], v49, v50, v0[12], v51);
  }
  else
  {
    v22 = Logger.logObject.getter(0);
    v23 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Nil delegate when handling askRequest", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    v26 = v0[15];
    v25 = v0[16];
    v27 = v0[14];

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v25, enum case for SFAirDropReceive.AskResponse.error(_:), v27);
    v28 = (uint64_t **)swift_task_alloc(dword_1007C4A04);
    v0[43] = (uint64_t)v28;
    *v28 = v0;
    v28[1] = (uint64_t *)sub_100506698;
    return sub_10050D8E8(v0[16], v0[12]);
  }
}

uint64_t sub_10050626C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 296));
  v2 = static AirDropActor.shared;
  *(_QWORD *)(v1 + 304) = static AirDropActor.shared;
  return swift_task_switch(sub_1005062C8, v2, 0);
}

uint64_t sub_1005062C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t Strong;
  uint64_t **v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  Strong = swift_unknownObjectWeakLoadStrong(v2[33] + 16, a2);
  v2[39] = Strong;
  if (Strong)
  {
    v4 = (uint64_t **)swift_task_alloc(dword_1007C08BC);
    v2[40] = (uint64_t)v4;
    *v4 = v2;
    v4[1] = (uint64_t *)sub_10050642C;
    return sub_10042D174(v2[17], v2[13], v2[20]);
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v6 = sub_100221DF8(v2[32], (uint64_t)qword_1007B9950);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing delegate for start receive", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v10 = v2[17];
    v11 = v2[14];
    v12 = v2[15];

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v10, enum case for SFAirDropReceive.AskResponse.error(_:), v11);
    return swift_task_switch(sub_1005064C0, v2[31], 0);
  }
}

uint64_t sub_10050642C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 320));
  return swift_task_switch(sub_100506484, v1, 0);
}

uint64_t sub_100506484()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 312));
  return swift_task_switch(sub_1005064C0, *(_QWORD *)(v0 + 248), 0);
}

uint64_t sub_1005064C0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 280))(v2, *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 272), v3);
  SFProgressContinuation.finish(with:)(v4, v3);
  v1(v2, v3);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C4A04);
  *(_QWORD *)(v0 + 328) = v5;
  *v5 = v0;
  v5[1] = sub_100506558;
  return sub_10050D8E8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));
}

uint64_t sub_100506558()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100506864;
  else
    v4 = sub_1005065BC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 248), 0);
}

uint64_t sub_1005065BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v4, *(_QWORD *)(v0 + 144));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100506698()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v4 = *(_QWORD *)(v3 + 248);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 + 120) + 8))(*(_QWORD *)(v3 + 128), *(_QWORD *)(v3 + 112));
    return swift_task_switch(sub_1005067BC, v4, 0);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 232);
    v7 = *(_QWORD *)(v3 + 240);
    v9 = *(_QWORD *)(v3 + 216);
    v8 = *(_QWORD *)(v3 + 224);
    v10 = *(_QWORD *)(v3 + 208);
    v11 = *(_QWORD *)(v3 + 184);
    v12 = *(_QWORD *)(v3 + 160);
    v13 = *(_QWORD *)(v3 + 128);
    v14 = *(_QWORD *)(v3 + 136);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 120) + 8))(v13, *(_QWORD *)(v3 + 112));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_1005067BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100506864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100506940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = sub_100008384(&qword_1007C1CF8);
  v3[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.Failure(0);
  v3[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[30] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[31] = swift_task_alloc(v7);
  v3[32] = swift_task_alloc(v7);
  v8 = sub_100008384(&qword_1007C4330);
  v3[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SDAirDropServerConnection(0);
  v3[34] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[35] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v11);
  v3[37] = swift_task_alloc(v11);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C03E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[38] = swift_task_alloc(v12);
  v3[39] = swift_task_alloc(v12);
  v3[40] = swift_task_alloc(v12);
  v3[41] = swift_task_alloc(v12);
  v3[42] = swift_task_alloc(v12);
  v13 = sub_100008384(&qword_1007B7E08);
  v3[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007B7DF8);
  v3[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDrop.AskProgress(0);
  v3[45] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[46] = v16;
  v3[47] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008384(&qword_1007C4A40);
  v3[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384(&qword_1007C4A48);
  v3[49] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[50] = v19;
  v3[51] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008384(&qword_1007C49F8);
  v3[52] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[53] = v21;
  v3[54] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100008384(&qword_1007C4A50);
  v3[55] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v3[56] = v23;
  v3[57] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008384(&qword_1007B7DE8);
  v3[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v24 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v25 = static AirDropActor.shared;
  v3[59] = static AirDropActor.shared;
  return swift_task_switch(sub_100506BFC, v25, 0);
}

uint64_t sub_100506BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  char *v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  const char *v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  os_log_t loga;
  NSObject *log;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  const char *v120;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  *(_QWORD *)(v0 + 480) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received UPLOAD request", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 216);

  v8 = v7 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest;
  swift_beginAccess(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest, v0 + 16, 0, 0);
  sub_100221F28(v8, v6, &qword_1007B7DE8);
  v9 = _s12HelloRequestVMa(0);
  LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9);
  v10 = sub_10000D0F0(v6, &qword_1007B7DE8);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  if ((_DWORD)v8 == 1)
  {
    if (v13)
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "No HELLO request present", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    v15 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 216);

    v17 = v16 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
    swift_beginAccess(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest, v0 + 40, 0, 0);
    sub_100221F28(v17, v15, &qword_1007B7DF8);
    v18 = _s10AskRequestVMa(0);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v15, 1, v18);
    v19 = sub_10000D0F0(v15, &qword_1007B7DF8);
    if ((_DWORD)v17 == 1)
    {
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "No ASK request before UPLOAD", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }
      v23 = *(_QWORD *)(v0 + 232);
      v24 = *(_QWORD *)(v0 + 240);

      v25 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      swift_allocError(v23, v25, 0, 0);
      v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v26, enum case for SFAirDropReceive.Failure.badRequest(_:), v23);
      swift_willThrow(v27);
      v28 = *(_QWORD *)(v0 + 456);
      v29 = *(_QWORD *)(v0 + 432);
      v30 = *(_QWORD *)(v0 + 408);
      v32 = *(_QWORD *)(v0 + 376);
      v31 = *(_QWORD *)(v0 + 384);
      v34 = *(_QWORD *)(v0 + 344);
      v33 = *(_QWORD *)(v0 + 352);
      v36 = *(_QWORD *)(v0 + 328);
      v35 = *(_QWORD *)(v0 + 336);
      v101 = *(_QWORD *)(v0 + 320);
      v102 = *(_QWORD *)(v0 + 312);
      v103 = *(_QWORD *)(v0 + 304);
      v105 = *(_QWORD *)(v0 + 296);
      loga = *(os_log_t *)(v0 + 288);
      v109 = *(_QWORD *)(v0 + 264);
      v111 = *(_QWORD *)(v0 + 256);
      v114 = *(_QWORD *)(v0 + 248);
      v116 = *(_QWORD *)(v0 + 224);
      swift_task_dealloc(*(_QWORD *)(v0 + 464));
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v31);
      swift_task_dealloc(v32);
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v35);
      swift_task_dealloc(v36);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      swift_task_dealloc(v105);
      swift_task_dealloc(loga);
      swift_task_dealloc(v109);
      swift_task_dealloc(v111);
      swift_task_dealloc(v114);
      swift_task_dealloc(v116);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v49 = *(_QWORD *)(v0 + 336);
      v50 = *(_QWORD *)(v0 + 344);
      v51 = *(_QWORD *)(v0 + 280);
      v112 = *(_QWORD *)(v0 + 272);
      v53 = *(_QWORD *)(v0 + 208);
      v52 = *(char **)(v0 + 216);
      v54 = *(_QWORD *)(v0 + 200);
      sub_100244384(v54, v50, _s13UploadRequestVMa);
      v55 = (int *)_s13UploadRequestVMa(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v55 - 1) + 56))(v50, 0, 1, v55);
      v56 = (uint64_t)&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
      swift_beginAccess(&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest], v0 + 64, 33, 0);
      sub_10023A084(v50, v56, &qword_1007B7E08);
      swift_endAccess(v0 + 64);
      v57 = &v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
      *(_QWORD *)v57 = *(_QWORD *)(v54 + v55[5]);
      v57[8] = 0;
      sub_100244384(v53, v49, type metadata accessor for SDAirDropServerConnection);
      v58 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56);
      *(_QWORD *)(v0 + 496) = v58;
      v58(v49, 0, 1, v112);
      v59 = (uint64_t)&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection];
      swift_beginAccess(&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection], v0 + 88, 33, 0);
      sub_10023A084(v49, v59, &qword_1007C03E0);
      swift_endAccess(v0 + 88);
      v60 = v55[10];
      v61 = (uint64_t *)(v54 + v55[9]);
      v62 = *v61;
      v63 = (char *)v61[1];
      v65 = *(_QWORD *)(v54 + v60);
      v64 = *(char **)(v54 + v60 + 8);
      swift_bridgeObjectRetain_n(v64, 2);
      v66 = v52;
      swift_bridgeObjectRetain_n(v63, 2);
      v67 = Logger.logObject.getter(v66);
      v68 = static os_log_type_t.default.getter();
      v69 = os_log_type_enabled(v67, v68);
      v70 = *(char **)(v0 + 216);
      if (v69)
      {
        v106 = v68;
        log = v67;
        v110 = v64;
        v115 = v65;
        v117 = v0 + 184;
        v71 = v62;
        v72 = v63;
        v73 = swift_slowAlloc(32, -1);
        v104 = swift_slowAlloc(96, -1);
        v118 = v104;
        *(_DWORD *)v73 = 136315650;
        v74 = *(_QWORD *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
        v75 = *(const char **)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8];
        swift_bridgeObjectRetain(v75);
        *(_QWORD *)(v0 + 168) = sub_100228BD8(v74, (unint64_t)v75, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v73 + 4);
        swift_bridgeObjectRelease(v75);

        *(_WORD *)(v73 + 12) = 2080;
        v113 = v71;
        v76 = v72;
        if (!v72)
        {
          v71 = 0xD000000000000015;
          v119 = 0;
          v120 = (const char *)0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v120);
          v76 = (const char *)0x8000000100612DF0;
        }
        swift_bridgeObjectRetain(v72);
        *(_QWORD *)(v0 + 176) = sub_100228BD8(v71, (unint64_t)v76, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v117, v73 + 14);
        swift_bridgeObjectRelease(v76);
        swift_bridgeObjectRelease_n(v72, 2);
        *(_WORD *)(v73 + 22) = 2080;
        v65 = v115;
        v77 = v115;
        v64 = (char *)v110;
        v78 = v110;
        if (!v110)
        {
          v77 = 0xD000000000000015;
          v119 = 0;
          v120 = (const char *)0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v120);
          v78 = (const char *)0x8000000100612DF0;
        }
        swift_bridgeObjectRetain(v110);
        *(_QWORD *)(v0 + 184) = sub_100228BD8(v77, (unint64_t)v78, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v117, v0 + 192, v73 + 24);
        swift_bridgeObjectRelease(v78);
        swift_bridgeObjectRelease_n(v110, 2);
        _os_log_impl((void *)&_mh_execute_header, log, v106, "Receiver extracted IDS session ID %s, pseudonym: %s, push token: %s from upload request", (uint8_t *)v73, 0x20u);
        swift_arrayDestroy(v104, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v73, -1, -1);

        v63 = (char *)v72;
        v62 = v113;
      }
      else
      {

        swift_bridgeObjectRelease_n(v63, 2);
        swift_bridgeObjectRelease_n(v64, 2);

      }
      v79 = *(_QWORD *)(v0 + 328);
      v80 = *(_QWORD *)(v0 + 272);
      v81 = *(_QWORD *)(v0 + 280);
      v82 = *(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
      swift_beginAccess(v82, v0 + 112, 0, 0);
      sub_100221F28(v82, v79, &qword_1007C03E0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80) == 1)
      {
        v83 = sub_10000D0F0(*(_QWORD *)(v0 + 328), &qword_1007C03E0);
        v84 = Logger.logObject.getter(v83);
        v85 = static os_log_type_t.error.getter(v84);
        if (os_log_type_enabled(v84, v85))
        {
          v86 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v86 = 0;
          _os_log_impl((void *)&_mh_execute_header, v84, v85, "ASK connection no longer exists to set Internet fallback endpoint", v86, 2u);
          swift_slowDealloc(v86, -1, -1);
        }

      }
      else
      {
        v88 = *(_QWORD *)(v0 + 288);
        v89 = *(_QWORD *)(v0 + 296);
        v90 = *(_QWORD *)(v0 + 272);
        sub_100221DB4(*(_QWORD *)(v0 + 328), v89, type metadata accessor for SDAirDropServerConnection);
        sub_100244384(v89, v88, type metadata accessor for SDAirDropServerConnection);
        if (swift_getEnumCaseMultiPayload(v88, v90) > 1)
        {
          v92 = *(uint64_t **)(v0 + 288);
          v91 = *v92;
          v93 = (char *)v92 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
          v94 = type metadata accessor for UUID(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v93, v94);
        }
        else
        {
          v91 = **(_QWORD **)(v0 + 288);
        }
        v95 = *(_QWORD *)(v0 + 296);
        sub_1004FB0A0(*(_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID), *(void **)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8), v62, v63, v65, v64);
        swift_release(v91);
        v87 = sub_1002443C8(v95, type metadata accessor for SDAirDropServerConnection);
      }
      v96 = *(_QWORD *)(v0 + 264);
      v97 = *(_QWORD *)(v0 + 216);
      static Date.now.getter(v87);
      v98 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v96, 0, 1, v98);
      v99 = v97 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
      swift_beginAccess(v99, v0 + 136, 33, 0);
      sub_10023A084(v96, v99, &qword_1007C4330);
      swift_endAccess(v0 + 136);
      v100 = (_QWORD *)swift_task_alloc(dword_1007C4A5C);
      *(_QWORD *)(v0 + 504) = v100;
      *v100 = v0;
      v100[1] = sub_10050813C;
      return sub_10050EB10(*(_QWORD *)(v0 + 200));
    }
  }
  else
  {
    if (v13)
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "HELLO request present", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }
    v40 = *(_QWORD *)(v0 + 424);
    v39 = *(_QWORD *)(v0 + 432);
    v42 = *(_QWORD *)(v0 + 408);
    v41 = *(_QWORD *)(v0 + 416);
    v43 = *(_QWORD *)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 400);
    v45 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v45 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v41);
    SFProgressContinuation.task.getter(v41);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    SFProgressTask.makeAsyncIterator()(v43);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    *(_DWORD *)(v0 + 560) = enum case for SFAirDrop.AskProgress.notStarted(_:);
    v46 = static AirDropActor.shared;
    v47 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v48 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 488) = v48;
    *v48 = v0;
    v48[1] = sub_1005077D4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 384), v46, v47, *(_QWORD *)(v0 + 440), v0 + 192);
  }
}

uint64_t sub_1005077D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 488));
  if (v0)
    v3 = sub_1005082C0;
  else
    v3 = sub_100507838;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 472), 0);
}

uint64_t sub_100507838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  char *v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  os_log_type_t v73;
  NSObject *log;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
    goto LABEL_14;
  v4 = *(_DWORD *)(v0 + 560);
  v5 = *(_QWORD *)(v0 + 376);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v5, v2);
  if ((_DWORD)v6 == v4)
  {
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Waiting for ASK before UPLOAD", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = static AirDropActor.shared;
    v11 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v12 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 488) = v12;
    *v12 = v0;
    v12[1] = sub_1005077D4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 384), v10, v11, *(_QWORD *)(v0 + 440), v0 + 192);
  }
  if ((_DWORD)v6 != enum case for SFAirDrop.AskProgress.waitingForAskResponse(_:))
  {
    if ((_DWORD)v6 != enum case for SFAirDrop.AskProgress.askResponseReceived(_:))
      return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 360));
    v14 = Logger.logObject.getter(v6);
    v15 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v14, v15))
      goto LABEL_13;
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "ASK response sent, proceeding with UPLOAD";
    goto LABEL_12;
  }
  v14 = Logger.logObject.getter(v6);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "Received ASK request, proceeding pipelined with UPLOAD";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }
LABEL_13:

LABEL_14:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  v18 = *(_QWORD *)(v0 + 336);
  v19 = *(_QWORD *)(v0 + 344);
  v20 = *(_QWORD *)(v0 + 280);
  v76 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 208);
  v21 = *(char **)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 200);
  sub_100244384(v23, v19, _s13UploadRequestVMa);
  v24 = (int *)_s13UploadRequestVMa(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v24 - 1) + 56))(v19, 0, 1, v24);
  v25 = (uint64_t)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
  swift_beginAccess(&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest], v0 + 64, 33, 0);
  sub_10023A084(v19, v25, &qword_1007B7E08);
  swift_endAccess(v0 + 64);
  v26 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
  *(_QWORD *)v26 = *(_QWORD *)(v23 + v24[5]);
  v26[8] = 0;
  sub_100244384(v22, v18, type metadata accessor for SDAirDropServerConnection);
  v27 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56);
  *(_QWORD *)(v0 + 496) = v27;
  v27(v18, 0, 1, v76);
  v28 = (uint64_t)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection];
  swift_beginAccess(&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection], v0 + 88, 33, 0);
  sub_10023A084(v18, v28, &qword_1007C03E0);
  swift_endAccess(v0 + 88);
  v29 = v24[10];
  v30 = (uint64_t *)(v23 + v24[9]);
  v31 = *v30;
  v32 = (char *)v30[1];
  v34 = *(_QWORD *)(v23 + v29);
  v33 = *(char **)(v23 + v29 + 8);
  swift_bridgeObjectRetain_n(v33, 2);
  v35 = v21;
  swift_bridgeObjectRetain_n(v32, 2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  v38 = os_log_type_enabled(v36, v37);
  v39 = *(char **)(v0 + 216);
  if (v38)
  {
    v73 = v37;
    log = v36;
    v75 = v33;
    v78 = v34;
    v79 = v0 + 184;
    v40 = v31;
    v41 = v32;
    v42 = swift_slowAlloc(32, -1);
    v72 = swift_slowAlloc(96, -1);
    v80 = v72;
    *(_DWORD *)v42 = 136315650;
    v43 = *(_QWORD *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
    v44 = *(const char **)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8];
    swift_bridgeObjectRetain(v44);
    *(_QWORD *)(v0 + 168) = sub_100228BD8(v43, (unint64_t)v44, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v42 + 4);
    swift_bridgeObjectRelease(v44);

    *(_WORD *)(v42 + 12) = 2080;
    v77 = v40;
    v45 = v41;
    if (!v41)
    {
      v40 = 0xD000000000000015;
      v81 = 0;
      v82 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v82);
      v45 = (const char *)0x8000000100612DF0;
    }
    swift_bridgeObjectRetain(v41);
    *(_QWORD *)(v0 + 176) = sub_100228BD8(v40, (unint64_t)v45, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v79, v42 + 14);
    swift_bridgeObjectRelease(v45);
    v46 = v41;
    swift_bridgeObjectRelease_n(v41, 2);
    *(_WORD *)(v42 + 22) = 2080;
    v34 = v78;
    v47 = v78;
    v33 = (char *)v75;
    v48 = v75;
    if (!v75)
    {
      v47 = 0xD000000000000015;
      v81 = 0;
      v82 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v82);
      v48 = (const char *)0x8000000100612DF0;
    }
    swift_bridgeObjectRetain(v75);
    *(_QWORD *)(v0 + 184) = sub_100228BD8(v47, (unint64_t)v48, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, v0 + 192, v42 + 24);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease_n(v75, 2);
    _os_log_impl((void *)&_mh_execute_header, log, v73, "Receiver extracted IDS session ID %s, pseudonym: %s, push token: %s from upload request", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy(v72, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v42, -1, -1);

    v49 = v0 + 112;
    v31 = v77;
    v32 = (char *)v46;
  }
  else
  {

    swift_bridgeObjectRelease_n(v32, 2);
    swift_bridgeObjectRelease_n(v33, 2);

    v49 = v0 + 112;
  }
  v50 = *(_QWORD *)(v0 + 328);
  v51 = *(_QWORD *)(v0 + 272);
  v52 = *(_QWORD *)(v0 + 280);
  v53 = *(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
  swift_beginAccess(v53, v49, 0, 0);
  sub_100221F28(v53, v50, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51) == 1)
  {
    v54 = sub_10000D0F0(*(_QWORD *)(v0 + 328), &qword_1007C03E0);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "ASK connection no longer exists to set Internet fallback endpoint", v57, 2u);
      swift_slowDealloc(v57, -1, -1);
    }

  }
  else
  {
    v59 = *(_QWORD *)(v0 + 288);
    v60 = *(_QWORD *)(v0 + 296);
    v61 = *(_QWORD *)(v0 + 272);
    sub_100221DB4(*(_QWORD *)(v0 + 328), v60, type metadata accessor for SDAirDropServerConnection);
    sub_100244384(v60, v59, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload(v59, v61) > 1)
    {
      v63 = *(uint64_t **)(v0 + 288);
      v62 = *v63;
      v64 = (char *)v63 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
      v65 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
    }
    else
    {
      v62 = **(_QWORD **)(v0 + 288);
    }
    v66 = *(_QWORD *)(v0 + 296);
    sub_1004FB0A0(*(_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID), *(void **)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8), v31, v32, v34, v33);
    swift_release(v62);
    v58 = sub_1002443C8(v66, type metadata accessor for SDAirDropServerConnection);
  }
  v67 = *(_QWORD *)(v0 + 264);
  v68 = *(_QWORD *)(v0 + 216);
  static Date.now.getter(v58);
  v69 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v67, 0, 1, v69);
  v70 = v68 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
  swift_beginAccess(v70, v0 + 136, 33, 0);
  sub_10023A084(v67, v70, &qword_1007C4330);
  swift_endAccess(v0 + 136);
  v71 = (_QWORD *)swift_task_alloc(dword_1007C4A5C);
  *(_QWORD *)(v0 + 504) = v71;
  *v71 = v0;
  v71[1] = sub_10050813C;
  return sub_10050EB10(*(_QWORD *)(v0 + 200));
}

uint64_t sub_10050813C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(*v1 + 504);
  v3 = *v1;
  *(_QWORD *)(v3 + 512) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100508408, *(_QWORD *)(v3 + 472), 0);
  v5 = *(_QWORD *)(v3 + 456);
  v6 = *(_QWORD *)(v3 + 432);
  v7 = *(_QWORD *)(v3 + 408);
  v8 = *(_QWORD *)(v3 + 376);
  v9 = *(_QWORD *)(v3 + 384);
  v11 = *(_QWORD *)(v3 + 344);
  v10 = *(_QWORD *)(v3 + 352);
  v12 = *(_QWORD *)(v3 + 336);
  v14 = *(_QWORD *)(v3 + 328);
  v15 = *(_QWORD *)(v3 + 320);
  v16 = *(_QWORD *)(v3 + 312);
  v17 = *(_QWORD *)(v3 + 304);
  v18 = *(_QWORD *)(v3 + 296);
  v19 = *(_QWORD *)(v3 + 288);
  v20 = *(_QWORD *)(v3 + 264);
  v21 = *(_QWORD *)(v3 + 256);
  v22 = *(_QWORD *)(v3 + 248);
  v13 = *(_QWORD *)(v3 + 224);
  swift_task_dealloc(*(_QWORD *)(v3 + 464));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1005082C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100508408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0[64];
  v0[20] = v1;
  v2 = v0[29];
  v3 = v0[30];
  v4 = v0[28];
  swift_errorRetain(v1);
  v5 = sub_100008384(&qword_1007B5A60);
  v6 = swift_dynamicCast(v4, v0 + 20, v5, v2, 6);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  if (v6)
  {
    v8 = v0[31];
    v9 = v0[32];
    v10 = v0[29];
    v11 = v0[30];
    v12 = v0[28];
    v7(v12, 0, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v12, v10);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v0[65] = v13;
    v13(v8, v9, v10);
    LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v8, v10);
    v14 = enum case for SFAirDropReceive.Failure.insufficientStorage(_:);
    v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v0[66] = v15;
    v15(v8, v10);
    v16 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[62];
    v17 = v0[34];
    v18 = v0[26];
    if ((_DWORD)v12 == v14)
    {
      v19 = v0[40];
      sub_100244384(v18, v19, type metadata accessor for SDAirDropServerConnection);
      v16(v19, 0, 1, v17);
      v20 = (_QWORD *)swift_task_alloc(dword_1007C4A6C);
      v0[67] = v20;
      *v20 = v0;
      v20[1] = sub_100508654;
      return sub_10050F500(v0[40]);
    }
    v29 = v0[39];
    sub_100244384(v18, v29, type metadata accessor for SDAirDropServerConnection);
    v16(v29, 0, 1, v17);
    v30 = (_QWORD *)swift_task_alloc(dword_1007C4A64);
    v0[68] = v30;
    *v30 = v0;
    v30[1] = sub_1005086EC;
    v28 = v0[39];
  }
  else
  {
    v22 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[62];
    v23 = v0[38];
    v24 = v0[34];
    v25 = v0[28];
    v26 = v0[26];
    v7(v25, 1, 1, v0[29]);
    sub_10000D0F0(v25, &qword_1007C1CF8);
    sub_100244384(v26, v23, type metadata accessor for SDAirDropServerConnection);
    v22(v23, 0, 1, v24);
    v27 = (_QWORD *)swift_task_alloc(dword_1007C4A64);
    v0[69] = v27;
    *v27 = v0;
    v27[1] = sub_100508784;
    v28 = v0[38];
  }
  return sub_10050F0A0(v28);
}

uint64_t sub_100508654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 536));
  v3 = *(_QWORD *)(v2 + 472);
  v4 = *(_QWORD *)(v2 + 320);
  if (v0)
    swift_errorRelease(v0);
  sub_10000D0F0(v4, &qword_1007C03E0);
  return swift_task_switch(sub_100513878, v3, 0);
}

uint64_t sub_1005086EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 544));
  v3 = *(_QWORD *)(v2 + 472);
  v4 = *(_QWORD *)(v2 + 312);
  if (v0)
  {
    swift_errorRelease(v0);
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_10050895C;
  }
  else
  {
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_100513878;
  }
  return swift_task_switch(v5, v3, 0);
}

uint64_t sub_100508784()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 552));
  v3 = *(_QWORD *)(v2 + 472);
  v4 = *(_QWORD *)(v2 + 304);
  if (v0)
  {
    swift_errorRelease(v0);
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_100513874;
  }
  else
  {
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_10050881C;
  }
  return swift_task_switch(v5, v3, 0);
}

uint64_t sub_10050881C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_willThrow();
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050895C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v5, v6, 0, 0);
  v8 = v2(v7, v4, v5);
  swift_willThrow(v8);
  swift_errorRelease(v3);
  v1(v4, v5);
  v9 = *(_QWORD *)(v0 + 456);
  v10 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 384);
  v15 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD *)(v0 + 352);
  v17 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 336);
  v19 = *(_QWORD *)(v0 + 320);
  v20 = *(_QWORD *)(v0 + 312);
  v21 = *(_QWORD *)(v0 + 304);
  v22 = *(_QWORD *)(v0 + 296);
  v23 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 264);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100508B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = sub_100008384(&qword_1007C03F8);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v3[16] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C03E0);
  v3[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007C03A8);
  v3[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100508BE4, static AirDropActor.shared, 0);
}

uint64_t sub_100508BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received EXCHANGE request", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);

  sub_100244384(v11, v7, _s15ExchangeRequestVMa);
  v12 = _s15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
  v13 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest;
  swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest, v0 + 16, 33, 0);
  sub_10023A084(v7, v13, &qword_1007C03A8);
  swift_endAccess(v0 + 16);
  sub_100244384(v10, v6, type metadata accessor for SDAirDropServerConnection);
  v14 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  v15 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection, v0 + 40, 33, 0);
  sub_10023A084(v6, v15, &qword_1007C03E0);
  swift_endAccess(v0 + 40);
  v16 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  v17 = swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation, v0 + 64, 0, 0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v16, 1, v25, v17))
  {
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v16, v20);
    SFProgressContinuation.finish(with:)(v21, v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v22 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100508E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 136) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v3 + 104) = a2;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 168) = v5;
  *(_OWORD *)(v3 + 184) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v3 + 200) = *(_QWORD *)(a1 + 80);
  v6 = type metadata accessor for SDAirDropMessage(0);
  *(_QWORD *)(v3 + 208) = v6;
  *(_QWORD *)(v3 + 216) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C03E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 224) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 232) = swift_task_alloc(v7);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 240) = static AirDropActor.shared;
  return swift_task_switch(sub_100508F64, v8, 0);
}

uint64_t sub_100508F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received IDENTITY-SHARE request", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 104);
  v16 = *(_OWORD *)(v0 + 120);
  v17 = *(_OWORD *)(v0 + 184);
  v14 = *(_OWORD *)(v0 + 152);
  v15 = *(_OWORD *)(v0 + 136);
  v13 = *(_OWORD *)(v0 + 168);

  *(_OWORD *)(v0 + 16) = v16;
  *(_OWORD *)(v0 + 32) = v15;
  *(_OWORD *)(v0 + 48) = v14;
  *(_OWORD *)(v0 + 64) = v13;
  *(_OWORD *)(v0 + 80) = v17;
  *(_QWORD *)(v0 + 96) = v7;
  sub_100244384(v8, v6, type metadata accessor for SDAirDropServerConnection);
  v9 = type metadata accessor for SDAirDropServerConnection(0);
  *(_QWORD *)(v0 + 248) = v9;
  v10 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  *(_QWORD *)(v0 + 256) = v10;
  v10(v6, 0, 1, v9);
  v11 = (_QWORD *)swift_task_alloc(dword_1007C4A14);
  *(_QWORD *)(v0 + 264) = v11;
  *v11 = v0;
  v11[1] = sub_100509114;
  return sub_10050B870(v0 + 16, 0, 0xF000000000000000, 0, 0, *(_QWORD *)(v0 + 232));
}

uint64_t sub_100509114()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  v4 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  sub_10000D0F0(v4, &qword_1007C03E0);
  if (v0)
  {
    v5 = *(_QWORD *)(v2 + 240);
    v6 = sub_10050951C;
  }
  else
  {
    v5 = static AirDropActor.shared;
    *(_QWORD *)(v2 + 280) = static AirDropActor.shared;
    v6 = sub_1005091A4;
  }
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1005091A4()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[26];
  v1 = (_OWORD *)v0[27];
  *v1 = xmmword_1005D9960;
  swift_storeEnumTagMultiPayload(v1, v2, 11);
  v3 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
  v0[36] = v3;
  *v3 = v0;
  v3[1] = sub_10050920C;
  return sub_1004A0474(v0[27]);
}

uint64_t sub_10050920C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  v4 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  sub_1002443C8(v4, type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_1005093A8;
  else
    v5 = sub_10050928C;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 280), 0);
}

uint64_t sub_10050928C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  *(_QWORD *)(v2 + 304) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v2 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
    *(_QWORD *)(v2 + 312) = v5;
    *v5 = v2;
    v5[1] = sub_10050933C;
    return sub_1002DE698(v4, 0);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 224);
    v8 = *(_QWORD *)(v2 + 216);
    swift_task_dealloc(*(_QWORD *)(v2 + 232));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10050933C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = (_QWORD *)*v0;
  v2 = *(_QWORD *)(*v0 + 304);
  v7 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  swift_unknownObjectRelease(v2);
  v4 = v1[28];
  v3 = v1[29];
  v5 = v1[27];
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1005093A8()
{
  uint64_t v0;

  return swift_task_switch(sub_1005093BC, *(_QWORD *)(v0 + 240), 0);
}

uint64_t sub_1005093BC()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t **v4;

  v0[40] = v0[37];
  v1 = v0[31];
  v2 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[32];
  v3 = v0[28];
  sub_100244384(v0[13], v3, type metadata accessor for SDAirDropServerConnection);
  v2(v3, 0, 1, v1);
  v4 = (uint64_t **)swift_task_alloc(dword_1007C49D4);
  v0[41] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10050944C;
  return sub_10050D018(v0[28]);
}

uint64_t sub_10050944C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  v4 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  sub_10000D0F0(v4, &qword_1007C03E0);
  if (v0)
    v5 = sub_1005095AC;
  else
    v5 = sub_1005094CC;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 240), 0);
}

uint64_t sub_1005094CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 320));
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050951C()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t **v4;

  v0[40] = v0[34];
  v1 = v0[31];
  v2 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[32];
  v3 = v0[28];
  sub_100244384(v0[13], v3, type metadata accessor for SDAirDropServerConnection);
  v2(v3, 0, 1, v1);
  v4 = (uint64_t **)swift_task_alloc(dword_1007C49D4);
  v0[41] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10050944C;
  return sub_10050D018(v0[28]);
}

uint64_t sub_1005095AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  swift_errorRelease(*(_QWORD *)(v0 + 320));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100509608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for SDAirDropMessage(0);
  v3[8] = v4;
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropServerConnection(0);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[11] = v6;
  v3[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007C03E0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  v3[14] = static AirDropActor.shared;
  return swift_task_switch(sub_1005096E8, v8, 0);
}

uint64_t sub_1005096E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received ERROR request", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[13];
  v7 = v0[10];
  v8 = v0[11];
  v9 = v0[6];
  v10 = v0[7];

  sub_100244384(v9, v6, type metadata accessor for SDAirDropServerConnection);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v11 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection;
  swift_beginAccess(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection, v0 + 2, 33, 0);
  sub_10023A084(v6, v11, &qword_1007C03E0);
  swift_endAccess(v0 + 2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = v0[5];
    v13 = v12 + *(int *)(_s12ErrorRequestVMa(0) + 20);
    v14 = type metadata accessor for CodableError(0);
    v15 = sub_100220D78(&qword_1007B7F40, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
    v16 = swift_allocError(v14, v15, 0, 0);
    v0[17] = v16;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v17, v13, v14);
    v18 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
    v0[18] = v18;
    *v18 = v0;
    v18[1] = sub_100509ACC;
    return sub_10050A37C(v16);
  }
  else
  {
    v21 = v0[8];
    v20 = (_OWORD *)v0[9];
    sub_100244384(v11, v0[12], type metadata accessor for SDAirDropServerConnection);
    *v20 = xmmword_1005D9960;
    swift_storeEnumTagMultiPayload(v20, v21, 13);
    v22 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
    v0[15] = v22;
    *v22 = v0;
    v22[1] = sub_100509974;
    return sub_1004A0474(v0[9]);
  }
}

uint64_t sub_100509974()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  sub_1002443C8(v5, type metadata accessor for SDAirDropMessage);
  sub_1002443C8(v4, type metadata accessor for SDAirDropServerConnection);
  if (v0)
    v6 = sub_100509B48;
  else
    v6 = sub_100509A08;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 112), 0);
}

uint64_t sub_100509A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[5];
  v2 = v1 + *(int *)(_s12ErrorRequestVMa(0) + 20);
  v3 = type metadata accessor for CodableError(0);
  v4 = sub_100220D78(&qword_1007B7F40, (uint64_t (*)(uint64_t))&type metadata accessor for CodableError, (uint64_t)&protocol conformance descriptor for CodableError);
  v5 = swift_allocError(v3, v4, 0, 0);
  v0[17] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, v2, v3);
  v7 = (_QWORD *)swift_task_alloc(dword_1007C4A0C);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_100509ACC;
  return sub_10050A37C(v5);
}

uint64_t sub_100509ACC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 96);
  v2 = *(_QWORD *)(*v0 + 104);
  v4 = *(_QWORD *)(*v0 + 72);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  swift_errorRelease(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100509B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100509B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  unsigned int *v42;
  void (*v43)(unsigned int *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v2 = v1;
  v4 = sub_100008384(&qword_1007C03F8);
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  __chkstk_darwin(v4);
  v76 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B5B20);
  v82 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C49F8);
  v79 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v85 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007C4A80);
  __chkstk_darwin(v11);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NWError(0);
  v86 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v77 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v78 = (char *)&v73 - v17;
  v18 = sub_100008384(&qword_1007C04F0);
  v83 = *(_QWORD *)(v18 - 8);
  v84 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v20 = type metadata accessor for Logger(0);
  sub_100221DF8(v20, (uint64_t)qword_1007C48D0);
  swift_errorRetain(a1);
  v21 = swift_errorRetain(a1);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter();
  v24 = os_log_type_enabled(v22, v23);
  v80 = v9;
  if (v24)
  {
    v74 = v14;
    v25 = swift_slowAlloc(12, -1);
    v75 = v8;
    v26 = (uint8_t *)v25;
    v73 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v26 = 138412290;
    swift_errorRetain(a1);
    v27 = v6;
    v28 = v2;
    v29 = a1;
    v30 = _swift_stdlib_bridgeErrorToNSError(a1);
    v89 = v30;
    v14 = v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v26 + 4);
    v31 = v73;
    *v73 = v30;
    a1 = v29;
    v2 = v28;
    v6 = v27;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Receive handler error %@", v26, 0xCu);
    v32 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v31, 1, v32);
    swift_slowDealloc(v31, -1, -1);
    v33 = v26;
    v8 = v75;
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v34 = v83;
  v35 = v84;
  v36 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v81, v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation, v84);
  SFProgressContinuation.fail(with:)(a1, v35);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  v89 = a1;
  swift_errorRetain(a1);
  v37 = sub_100008384(&qword_1007B5A60);
  v38 = swift_dynamicCast(v13, &v89, v37, v14, 6);
  v39 = v86;
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
  if ((v38 & 1) != 0)
  {
    v40(v13, 0, 1, v14);
    v41 = v78;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v78, v13, v14);
    v42 = (unsigned int *)v77;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v77, v41, v14);
    if ((*(unsigned int (**)(unsigned int *, uint64_t))(v39 + 88))(v42, v14) == enum case for NWError.posix(_:))
    {
      v43 = *(void (**)(unsigned int *, uint64_t))(v39 + 96);
      v44 = v14;
      v43(v42, v14);
      v45 = *v42;
      v46 = POSIXErrorCode.rawValue.getter(v45);
      if (v46 == POSIXErrorCode.rawValue.getter(89)
        || (v47 = POSIXErrorCode.rawValue.getter(v45), v47 == POSIXErrorCode.rawValue.getter(54))
        || (v48 = POSIXErrorCode.rawValue.getter(v45), v48 == POSIXErrorCode.rawValue.getter(96))
        || (v49 = POSIXErrorCode.rawValue.getter(v45), v49 == POSIXErrorCode.rawValue.getter(57)))
      {
        v50 = type metadata accessor for CancellationError(0);
        v51 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
        a1 = swift_allocError(v50, v51, 0, 0);
        CancellationError.init()();
      }
      else
      {
        swift_errorRetain(a1);
      }
      v53 = v79;
      v52 = v80;
      v54 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v85, v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v80);
      swift_errorRetain(a1);
      SFProgressContinuation.cancel(_:)(a1, v52);
      swift_errorRelease(a1);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
      v55 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v8, v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v6);
      swift_errorRetain(a1);
      SFProgressContinuation.cancel(_:)(a1, v6);
      swift_errorRelease(a1);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v6);
      v56 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
      swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation, &v89, 32, 0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v56, 1, v88))
      {
        (*(void (**)(char *, uint64_t))(v86 + 8))(v78, v44);
        swift_endAccess(&v89);
        return swift_errorRelease(a1);
      }
      else
      {
        v69 = v87;
        v70 = v76;
        v71 = v56;
        v72 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v76, v71, v88);
        swift_endAccess(&v89);
        swift_errorRetain(a1);
        SFProgressContinuation.cancel(_:)(a1, v72);
        swift_errorRelease(a1);
        swift_errorRelease(a1);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v72);
        return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v78, v44);
      }
    }
    v58 = v14;
    v59 = *(void (**)(char *, uint64_t))(v39 + 8);
    v59(v41, v58);
    v59((char *)v42, v58);
  }
  else
  {
    v40(v13, 1, 1, v14);
    sub_10000D0F0((uint64_t)v13, &qword_1007C4A80);
  }
  v60 = v79;
  v61 = v80;
  v62 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v85, v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v80);
  SFProgressContinuation.cancel(_:)(a1, v61);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
  v63 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v8, v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v6);
  SFProgressContinuation.cancel(_:)(a1, v6);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v6);
  v64 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation, &v89, 0, 0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v64, 1, v88);
  if (!(_DWORD)result)
  {
    v65 = v87;
    v66 = v76;
    v67 = v64;
    v68 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v76, v67, v88);
    SFProgressContinuation.cancel(_:)(a1, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v66, v68);
  }
  return result;
}

uint64_t sub_10050A37C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[22] = a1;
  v2[23] = v1;
  v3 = sub_100008384(&qword_1007C04F0);
  v2[24] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[25] = v4;
  v2[26] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropServerConnection(0);
  v2[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[28] = v6;
  v2[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[30] = static AirDropActor.shared;
  return swift_task_switch(sub_10050A468, v7, 0);
}

uint64_t sub_10050A468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C48D0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 176);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    if (v6)
    {
      swift_errorRetain(v1);
      v6 = _swift_stdlib_bridgeErrorToNSError(v1);
      *(_QWORD *)(v0 + 168) = v6;
      v9 = v0 + 168;
      v10 = v0 + 176;
    }
    else
    {
      v9 = v0 + 160;
      *(_QWORD *)(v0 + 160) = 0;
      v10 = v0 + 168;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v9, v10, v7 + 4);
    *v8 = v6;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Receive handler stop - error: %@", v7, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v8, 1, v11);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 184);
  if (*(_QWORD *)(v0 + 176))
  {
    swift_errorRetain(v1);
    sub_100509B90(v1);
    v15 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
    swift_beginAccess(v15, v0 + 112, 0, 0);
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v16(v15, 1, v12))
    {
      v17 = *(_QWORD *)(v0 + 232);
      sub_100244384(v15, v17, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(1);
      sub_1002443C8(v17, type metadata accessor for SDAirDropServerConnection);
    }
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess(v19, v0 + 136, 0, 0);
    if (!v16(v19, 1, v18))
    {
      v20 = *(_QWORD *)(v0 + 232);
      sub_100244384(v19, v20, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(1);
      sub_1002443C8(v20, type metadata accessor for SDAirDropServerConnection);
    }
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
    swift_beginAccess(v22, v0 + 88, 0, 0);
    if (v16(v22, 1, v21))
    {
      swift_errorRelease(v1);
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 232);
      sub_100244384(v22, v35, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(1);
      swift_errorRelease(v1);
      sub_1002443C8(v35, type metadata accessor for SDAirDropServerConnection);
    }
  }
  else
  {
    v23 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
    swift_beginAccess(v23, v0 + 16, 0, 0);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v24(v23, 1, v12))
    {
      v25 = *(_QWORD *)(v0 + 232);
      sub_100244384(v23, v25, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(1);
      sub_1002443C8(v25, type metadata accessor for SDAirDropServerConnection);
    }
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess(v27, v0 + 40, 0, 0);
    if (!v24(v27, 1, v26))
    {
      v28 = *(_QWORD *)(v0 + 232);
      sub_100244384(v27, v28, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(0);
      sub_1002443C8(v28, type metadata accessor for SDAirDropServerConnection);
    }
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
    swift_beginAccess(v30, v0 + 64, 0, 0);
    if (!v24(v30, 1, v29))
    {
      v31 = *(_QWORD *)(v0 + 232);
      sub_100244384(v30, v31, type metadata accessor for SDAirDropServerConnection);
      sub_1004A0010(0);
      sub_1002443C8(v31, type metadata accessor for SDAirDropServerConnection);
    }
    v33 = *(_QWORD *)(v0 + 200);
    v32 = *(_QWORD *)(v0 + 208);
    v34 = *(_QWORD *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation, v34);
    *(_BYTE *)(v0 + 272) = 1;
    SFProgressContinuation.finish(with:)(v0 + 272, v34);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  }
  v36 = *(_QWORD *)(v0 + 184);
  v37 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter;
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter;
  v38 = *(_QWORD *)(v36 + v37);
  *(_QWORD *)(v0 + 256) = v38;
  if (v38)
  {
    v39 = dword_1007B5994;
    swift_retain(v38);
    v40 = (_QWORD *)swift_task_alloc(v39);
    *(_QWORD *)(v0 + 264) = v40;
    *v40 = v0;
    v40[1] = sub_10050AA20;
    return sub_1002351D0();
  }
  else
  {
    v42 = *(_QWORD *)(v0 + 232);
    v43 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v36 + v37) = 0;
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10050AA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 256);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 240);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 264));
  swift_release(v1);
  return swift_task_switch(sub_10050AAB4, v2, 0);
}

uint64_t sub_10050AAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v2 + v1);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v2 + v1) = 0;
  swift_release(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050AB3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2[8] = a1;
  v2[9] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C03E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  v4 = type metadata accessor for CodableError(0);
  v2[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[13] = v5;
  v2[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Failure(0);
  v2[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[16] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v8);
  v2[18] = swift_task_alloc(v8);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v2[19] = static AirDropActor.shared;
  return swift_task_switch(sub_10050AC3C, v9, 0);
}

uint64_t sub_10050AC3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  const char *v18;
  uint64_t v19;
  const char *v21;
  char v22;
  double v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = v0[17];
  v2 = v0[18];
  v3 = v0[15];
  v4 = v0[16];
  v5 = v0[8];
  swift_errorRetain(v5);
  SFAirDropReceive.Failure.init(_:)(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  v8 = v0[16];
  v9 = v0[17];
  v10 = v0[15];
  if (v6 != enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    (*(void (**)(_QWORD, uint64_t, __n128))(v8 + 8))(v0[17], v10, v7);
    goto LABEL_9;
  }
  v12 = v0[13];
  v11 = v0[14];
  v13 = v0[12];
  (*(void (**)(_QWORD, uint64_t))(v8 + 96))(v0[17], v10);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v9, v13);
  v15 = CodableError.domain.getter(v14);
  v17 = v16;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("NearbyPeerPaymentError"));
  if (v15 == v19 && v17 == v18)
  {
    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    v21 = v18;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
    v24 = swift_bridgeObjectRelease(v17, v23);
    if ((v22 & 1) == 0)
    {
      (*(void (**)(_QWORD, _QWORD, __n128))(v0[13] + 8))(v0[14], v0[12], v24);
LABEL_9:
      v25 = v0[10];
      v26 = v0[9] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
      swift_beginAccess(v26, v0 + 2, 0, 0);
      sub_100221F28(v26, v25, &qword_1007C03E0);
      v27 = (_QWORD *)swift_task_alloc(dword_1007C49D4);
      v0[21] = v27;
      *v27 = v0;
      v27[1] = sub_10050AF84;
      return sub_10050D018(v0[10]);
    }
  }
  v29 = v0[11];
  v30 = v0[9] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
  swift_beginAccess(v30, v0 + 5, 0, 0);
  sub_100221F28(v30, v29, &qword_1007C03E0);
  v31 = (_QWORD *)swift_task_alloc(dword_1007C4A2C);
  v0[20] = v31;
  *v31 = v0;
  v31[1] = sub_10050AE60;
  return sub_1005100CC(v0[11]);
}

uint64_t sub_10050AE60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  v3 = *(_QWORD *)(v2 + 152);
  v4 = *(_QWORD *)(v2 + 88);
  if (v0)
  {
    swift_errorRelease(v0);
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_100513888;
  }
  else
  {
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_10050AEF8;
  }
  return swift_task_switch(v5, v3, 0);
}

uint64_t sub_10050AEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(v2, *(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050AF84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 168));
  v3 = *(_QWORD *)(v2 + 152);
  v4 = *(_QWORD *)(v2 + 80);
  if (v0)
  {
    swift_errorRelease(v0);
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_10051388C;
  }
  else
  {
    sub_10000D0F0(v4, &qword_1007C03E0);
    v5 = sub_10050B01C;
  }
  return swift_task_switch(v5, v3, 0);
}

uint64_t sub_10050B01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(v2, *(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050B098(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[7] = v3;
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007C03E0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropServerConnection(0);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v2[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[13] = static AirDropActor.shared;
  return swift_task_switch(sub_10050B174, v7, 0);
}

uint64_t sub_10050B174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100221F28(v4, v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 72), &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C48D0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No exchange connection for exchange response!", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = type metadata accessor for SFAirDropReceive.Failure(0);
    v11 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v10, v11, 0, 0);
    v13 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, enum case for SFAirDropReceive.Failure.badRequest(_:), v10);
    swift_willThrow(v13);
    v15 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 40);
    sub_100221DB4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96), type metadata accessor for SDAirDropServerConnection);
    sub_100244384(v19, v17, _s16ExchangeResponseVMa);
    swift_storeEnumTagMultiPayload(v17, v18, 9);
    v20 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
    *(_QWORD *)(v0 + 112) = v20;
    *v20 = v0;
    v20[1] = sub_10050B3D0;
    return sub_1004A0474(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_10050B3D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 104);
  sub_1002443C8(*(_QWORD *)(v2 + 64), type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_10050B754;
  else
    v5 = sub_10050B450;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10050B450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 48) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  *(_QWORD *)(v2 + 128) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v2 + 48) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
    *(_QWORD *)(v2 + 136) = v5;
    *v5 = v2;
    v5[1] = sub_10050B5D8;
    return sub_1002DE698(v4, 0);
  }
  else
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C48D0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Cancelling EXCHANGE connection", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v12 = *(_QWORD *)(v2 + 96);
    v14 = *(_QWORD *)(v2 + 64);
    v13 = *(_QWORD *)(v2 + 72);

    sub_1004A0010(0);
    sub_1002443C8(v12, type metadata accessor for SDAirDropServerConnection);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10050B5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10050B638, v2, 0);
}

uint64_t sub_10050B638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling EXCHANGE connection", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);

  sub_1004A0010(0);
  sub_1002443C8(v6, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050B754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling EXCHANGE connection", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 96);

  sub_1004A0010(0);
  sub_1002443C8(v6, type metadata accessor for SDAirDropServerConnection);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v7 + 232) = a6;
  *(_QWORD *)(v7 + 240) = v6;
  *(_QWORD *)(v7 + 216) = a4;
  *(_QWORD *)(v7 + 224) = a5;
  *(_QWORD *)(v7 + 200) = a2;
  *(_QWORD *)(v7 + 208) = a3;
  *(_QWORD *)(v7 + 192) = a1;
  sub_10051382C(a1, v7 + 104);
  v8 = *(_OWORD *)(v7 + 128);
  *(_OWORD *)(v7 + 248) = *(_OWORD *)(v7 + 112);
  v9 = *(_OWORD *)(v7 + 144);
  *(_OWORD *)(v7 + 264) = v8;
  *(_OWORD *)(v7 + 280) = v9;
  v10 = *(_QWORD *)(v7 + 176);
  *(_QWORD *)(v7 + 296) = *(_QWORD *)(v7 + 160);
  *(_QWORD *)(v7 + 304) = v10;
  v11 = sub_100008384(&qword_1007C03E0);
  *(_QWORD *)(v7 + 312) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SDAirDropServerConnection(0);
  *(_QWORD *)(v7 + 320) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 328) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 336) = swift_task_alloc(v14);
  *(_QWORD *)(v7 + 344) = swift_task_alloc(v14);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  *(_QWORD *)(v7 + 352) = static AirDropActor.shared;
  return swift_task_switch(sub_10050B970, v15, 0);
}

uint64_t sub_10050B970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  const char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_10051382C(*(_QWORD *)(v0 + 192), v0 + 16);
  v1 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 360) = v1;
  if (!v1)
    goto LABEL_4;
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(const char **)(v0 + 24);
  v8 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 384) = v8;
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 424) = v9;
  sub_100221F28(v5, v4, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 312), &qword_1007C03E0);
LABEL_4:
    v10 = type metadata accessor for SFAirDropReceive.Failure(0);
    v11 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v10, v11, 0, 0);
    v13 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, enum case for SFAirDropReceive.Failure.badRequest(_:), v10);
    swift_willThrow(v13);
LABEL_5:
    v14 = *(_QWORD *)(v0 + 336);
    v15 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v17 = *(_QWORD *)(v0 + 224);
  sub_100221DB4(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 344), type metadata accessor for SDAirDropServerConnection);
  if (v17)
  {
    sub_10031B134(*(_QWORD **)(v0 + 192), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
    if (v6)
    {
      v19 = *(_QWORD *)(v0 + 216);
      v18 = *(const char **)(v0 + 224);
      if (((unint64_t)v6 & 0x2000000000000000) != 0)
        v20 = ((unint64_t)v6 >> 56) & 0xF;
      else
        v20 = v7 & 0xFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain(v6);
      if (v20)
      {
        *(_QWORD *)(v0 + 600) = v18;
        *(_QWORD *)(v0 + 592) = v6;
        *(_QWORD *)(v0 + 584) = v6;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v6);
        if (v18)
        {
          v46 = (char *)&dword_1007B9E58 + dword_1007B9E58;
          v21 = (_QWORD *)swift_task_alloc(unk_1007B9E5C);
          *(_QWORD *)(v0 + 608) = v21;
          *v21 = v0;
          v21[1] = sub_10050CE04;
          __asm { BR              X8; sub_1002F0408 }
        }
        swift_bridgeObjectRelease(v6);
        if (qword_1007B4220 != -1)
          swift_once(&qword_1007B4220, sub_10050CF88);
        v38 = type metadata accessor for Logger(0);
        v39 = sub_100221DF8(v38, (uint64_t)qword_1007C48D0);
        v33 = Logger.logObject.getter(v39);
        v34 = static os_log_type_t.error.getter(v33);
        if (!os_log_type_enabled(v33, v34))
          goto LABEL_28;
        v35 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v35 = 0;
        v36 = "Missing appleID/contactID for IDENTITY-SHARE";
LABEL_27:
        _os_log_impl((void *)&_mh_execute_header, v33, v34, v36, v35, 2u);
        swift_slowDealloc(v35, -1, -1);
LABEL_28:
        v40 = *(_QWORD *)(v0 + 344);
        v41 = *(_QWORD **)(v0 + 192);

        v42 = type metadata accessor for SFAirDropReceive.Failure(0);
        v43 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        swift_allocError(v42, v43, 0, 0);
        v45 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v44, enum case for SFAirDropReceive.Failure.badRequest(_:), v42);
        swift_willThrow(v45);
        sub_10031B134(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
        sub_1002443C8(v40, type metadata accessor for SDAirDropServerConnection);
        swift_bridgeObjectRelease(v6);
        goto LABEL_5;
      }
      swift_bridgeObjectRetain(v18);
    }
    else
    {
      v18 = *(const char **)(v0 + 224);
      swift_bridgeObjectRetain(v18);
      v19 = *(_QWORD *)(v0 + 216);
    }
    *(_QWORD *)(v0 + 544) = v6;
    *(_QWORD *)(v0 + 536) = v18;
    *(_QWORD *)(v0 + 528) = v19;
    v30 = *(_QWORD *)(v0 + 208);
    if (v30 >> 60 == 15)
    {
      swift_bridgeObjectRelease(v18);
      if (qword_1007B4220 != -1)
        swift_once(&qword_1007B4220, sub_10050CF88);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_100221DF8(v31, (uint64_t)qword_1007C48D0);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter(v33);
      if (!os_log_type_enabled(v33, v34))
        goto LABEL_28;
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      v36 = "Missing vCardData to resolve missing appleID";
      goto LABEL_27;
    }
    sub_100244404(*(_QWORD *)(v0 + 200), v30);
    v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v37 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 552) = v37;
    *v37 = v0;
    v37[1] = sub_10050CA80;
    return v47(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), 0, 0);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 296);
    v23 = *(const char **)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 280);
    v24 = *(_QWORD *)(v0 + 288);
    v27 = *(_QWORD *)(v0 + 264);
    v26 = *(_QWORD *)(v0 + 272);
    v28 = *(const char **)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 432) = *(_QWORD *)(*(_QWORD *)(v0 + 240)
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
    swift_bridgeObjectRetain(v28);
    sub_100244404(v29, v27);
    sub_10022E4A8(v26, v25);
    sub_10022E4A8(v24, v22);
    swift_bridgeObjectRetain(v23);
    return swift_task_switch(sub_10050BEA0, 0, 0);
  }
}

uint64_t sub_10050BEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v25[2];
  uint64_t v26;

  if (*(_QWORD *)(v0 + 376) >> 60 == 15)
  {
    v1 = *(_QWORD *)(v0 + 352);
    v2 = sub_10050C080;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 336);
    v4 = *(_QWORD *)(v0 + 320);
    sub_100244384(*(_QWORD *)(v0 + 344), v3, type metadata accessor for SDAirDropServerConnection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v4);
    if (EnumCaseMultiPayload)
    {
      v6 = *(void **)(v0 + 432);
      v8 = *(_QWORD *)(v0 + 368);
      v7 = *(_QWORD *)(v0 + 376);
      v9 = *(_QWORD *)(v0 + 352);
      if (EnumCaseMultiPayload == 1)
      {
        v10 = *(_QWORD *)(v0 + 336);
        sub_10022E4A8(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376));
        sub_1002443C8(v10, type metadata accessor for SDAirDropServerConnection);
        *(_QWORD *)(v0 + 480) = sub_100390090(v6);
        *(_QWORD *)(v0 + 488) = v11;
        *(_QWORD *)(v0 + 496) = v12;
        sub_100225AA0(v8, v7);
        v2 = sub_10050C628;
      }
      else
      {
        v18 = *(uint64_t **)(v0 + 336);
        v19 = *v18;
        sub_10022E4A8(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376));
        swift_release(v19);
        v20 = (char *)v18 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
        *(_QWORD *)(v0 + 504) = sub_100390090(v6);
        *(_QWORD *)(v0 + 512) = v21;
        *(_QWORD *)(v0 + 520) = v22;
        sub_100225AA0(v8, v7);
        v23 = type metadata accessor for UUID(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v20, v23);
        v2 = sub_10050C854;
      }
    }
    else
    {
      v13 = *(void **)(v0 + 432);
      v15 = *(_QWORD *)(v0 + 368);
      v14 = *(_QWORD *)(v0 + 376);
      v9 = *(_QWORD *)(v0 + 352);
      v16 = **(_QWORD **)(v0 + 336);
      sub_10022E4A8(v15, v14);
      sub_10039052C(v13, (uint64_t *)v25);
      v17 = v25[1];
      *(_OWORD *)(v0 + 440) = v25[0];
      *(_OWORD *)(v0 + 456) = v17;
      *(_QWORD *)(v0 + 472) = v26;
      swift_release(v16);
      sub_100225AA0(v15, v14);
      v2 = sub_10050C2A4;
    }
    v1 = v9;
  }
  return swift_task_switch(v2, v1, 0);
}

uint64_t sub_10050C080()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 528) = 0u;
  v1 = *(_QWORD *)(v0 + 208);
  if (v1 >> 60 == 15)
  {
    swift_bridgeObjectRelease(0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007C48D0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Missing vCardData to resolve missing appleID", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD **)(v0 + 192);

    v9 = type metadata accessor for SFAirDropReceive.Failure(0);
    v10 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v9, v10, 0, 0);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v9);
    swift_willThrow(v12);
    sub_10031B134(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_1002443C8(v7, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease(0);
    v13 = *(_QWORD *)(v0 + 336);
    v14 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100244404(*(_QWORD *)(v0 + 200), v1);
    v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v16 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 552) = v16;
    *v16 = v0;
    v16[1] = sub_10050CA80;
    return v17(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), 0, 0);
  }
}

uint64_t sub_10050C2A4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 448);
  *(_QWORD *)&v2 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 472)).n128_u64[0];
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 456);
    v3 = *(const char **)(v0 + 464);
    v5 = *(const char **)(v0 + 448);
    v6 = ((unint64_t)v5 >> 56) & 0xF;
    if (((unint64_t)v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 440) & 0xFFFFFFFFFFFFLL;
    v7 = *(const char **)(v0 + 224);
    if (v6)
    {
      *(_QWORD *)(v0 + 600) = v3;
      *(_QWORD *)(v0 + 592) = v5;
      *(_QWORD *)(v0 + 584) = v5;
      swift_bridgeObjectRetain(v7, v2);
      swift_bridgeObjectRetain(v5);
      if (v3)
      {
        v28 = (char *)&dword_1007B9E58 + dword_1007B9E58;
        v8 = (_QWORD *)swift_task_alloc(unk_1007B9E5C);
        *(_QWORD *)(v0 + 608) = v8;
        *v8 = v0;
        v8[1] = sub_10050CE04;
        __asm { BR              X8; sub_1002F0408 }
      }
      swift_bridgeObjectRelease(v5);
      if (qword_1007B4220 != -1)
        swift_once(&qword_1007B4220, sub_10050CF88);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100221DF8(v18, (uint64_t)qword_1007C48D0);
      v12 = Logger.logObject.getter(v19);
      v13 = static os_log_type_t.error.getter(v12);
      if (!os_log_type_enabled(v12, v13))
        goto LABEL_20;
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      v15 = "Missing appleID/contactID for IDENTITY-SHARE";
      goto LABEL_19;
    }
    swift_bridgeObjectRetain(v7, v2);
  }
  else
  {
    v5 = 0;
    v4 = *(_QWORD *)(v0 + 456);
    v3 = *(const char **)(v0 + 464);
  }
  *(_QWORD *)(v0 + 544) = v5;
  *(_QWORD *)(v0 + 536) = v3;
  *(_QWORD *)(v0 + 528) = v4;
  v9 = *(_QWORD *)(v0 + 208);
  if (v9 >> 60 != 15)
  {
    sub_100244404(*(_QWORD *)(v0 + 200), v9);
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v16 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 552) = v16;
    *v16 = v0;
    v16[1] = sub_10050CA80;
    return v29(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), 0, 0);
  }
  swift_bridgeObjectRelease(v3, v2);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C48D0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    v15 = "Missing vCardData to resolve missing appleID";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }
LABEL_20:
  v20 = *(_QWORD *)(v0 + 344);
  v21 = *(_QWORD **)(v0 + 192);

  v22 = type metadata accessor for SFAirDropReceive.Failure(0);
  v23 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v22, v23, 0, 0);
  v25 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, enum case for SFAirDropReceive.Failure.badRequest(_:), v22);
  swift_willThrow(v25);
  sub_10031B134(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v20, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease(v5);
  v26 = *(_QWORD *)(v0 + 336);
  v27 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050C628()
{
  uint64_t v0;
  double v1;
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)&v1 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 496)).n128_u64[0];
  v3 = *(_QWORD *)(v0 + 480);
  v2 = *(const char **)(v0 + 488);
  *(_QWORD *)(v0 + 544) = 0;
  *(_QWORD *)(v0 + 536) = v2;
  *(_QWORD *)(v0 + 528) = v3;
  v4 = *(_QWORD *)(v0 + 208);
  if (v4 >> 60 == 15)
  {
    swift_bridgeObjectRelease(v2, v1);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C48D0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing vCardData to resolve missing appleID", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 344);
    v11 = *(_QWORD **)(v0 + 192);

    v12 = type metadata accessor for SFAirDropReceive.Failure(0);
    v13 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v12, v13, 0, 0);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, enum case for SFAirDropReceive.Failure.badRequest(_:), v12);
    swift_willThrow(v15);
    sub_10031B134(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_1002443C8(v10, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease(0);
    v16 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100244404(*(_QWORD *)(v0 + 200), v4);
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v19 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 552) = v19;
    *v19 = v0;
    v19[1] = sub_10050CA80;
    return v20(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), 0, 0);
  }
}

uint64_t sub_10050C854()
{
  uint64_t v0;
  double v1;
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)&v1 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 520)).n128_u64[0];
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(const char **)(v0 + 512);
  *(_QWORD *)(v0 + 544) = 0;
  *(_QWORD *)(v0 + 536) = v2;
  *(_QWORD *)(v0 + 528) = v3;
  v4 = *(_QWORD *)(v0 + 208);
  if (v4 >> 60 == 15)
  {
    swift_bridgeObjectRelease(v2, v1);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C48D0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing vCardData to resolve missing appleID", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 344);
    v11 = *(_QWORD **)(v0 + 192);

    v12 = type metadata accessor for SFAirDropReceive.Failure(0);
    v13 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v12, v13, 0, 0);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, enum case for SFAirDropReceive.Failure.badRequest(_:), v12);
    swift_willThrow(v15);
    sub_10031B134(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_1002443C8(v10, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease(0);
    v16 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100244404(*(_QWORD *)(v0 + 200), v4);
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v19 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 552) = v19;
    *v19 = v0;
    v19[1] = sub_10050CA80;
    return v20(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), 0, 0);
  }
}

uint64_t sub_10050CA80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 552);
  *(_QWORD *)(v4 + 560) = a1;
  *(_QWORD *)(v4 + 568) = a2;
  *(_QWORD *)(v4 + 576) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = *(_QWORD *)(v4 + 352);
    swift_bridgeObjectRelease(*(const char **)(v4 + 536));
    v7 = sub_10050CD78;
    v8 = v6;
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 352);
    v7 = sub_10050CB04;
  }
  return swift_task_switch(v7, v8, 0);
}

uint64_t sub_10050CB04()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  double v3;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;

  v1 = *(const char **)(v0 + 568);
  v2 = *(const char **)(v0 + 544);
  sub_100225AA0(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  *(_QWORD *)&v3 = swift_bridgeObjectRelease(v2).n128_u64[0];
  if (v1)
  {
    v1 = *(const char **)(v0 + 568);
    v4 = *(_QWORD *)(v0 + 536);
    *(_QWORD *)(v0 + 600) = v4;
    *(_QWORD *)(v0 + 592) = v1;
    *(_QWORD *)(v0 + 584) = v1;
    swift_bridgeObjectRetain(v1, v3);
    if (v4)
    {
      v21 = (char *)&dword_1007B9E58 + dword_1007B9E58;
      v6 = (_QWORD *)swift_task_alloc(unk_1007B9E5C);
      *(_QWORD *)(v0 + 608) = v6;
      *v6 = v0;
      v6[1] = sub_10050CE04;
      __asm { BR              X8; sub_1002F0408 }
    }
    swift_bridgeObjectRelease(v1, v5);
  }
  else
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 536), v3);
  }
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100221DF8(v7, (uint64_t)qword_1007C48D0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Missing appleID/contactID for IDENTITY-SHARE", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }
  v12 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD **)(v0 + 192);

  v14 = type metadata accessor for SFAirDropReceive.Failure(0);
  v15 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v14, v15, 0, 0);
  v17 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, enum case for SFAirDropReceive.Failure.badRequest(_:), v14);
  swift_willThrow(v17);
  sub_10031B134(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v12, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease(v1);
  v18 = *(_QWORD *)(v0 + 336);
  v19 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050CD78()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(const char **)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD **)(v0 + 192);
  sub_100225AA0(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  sub_10031B134(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v2, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease(v1);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050CE04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  double v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 608);
  *(_QWORD *)(*(_QWORD *)v1 + 616) = v0;
  swift_task_dealloc(v3);
  v4 = (const char *)v2[75];
  v5 = (const char *)v2[73];
  v6 = v2[44];
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v5).n128_u64[0];
  swift_bridgeObjectRelease(v4, v7);
  if (v0)
    v8 = sub_10050CF08;
  else
    v8 = sub_10050CE88;
  return swift_task_switch(v8, v6, 0);
}

uint64_t sub_10050CE88()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(const char **)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  sub_10031B134(*(_QWORD **)(v0 + 192), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v2, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050CF08()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(const char **)(v0 + 592);
  v2 = *(_QWORD *)(v0 + 344);
  sub_10031B134(*(_QWORD **)(v0 + 192), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v2, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050CF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C48D0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C48D0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10050D018(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100008384(&qword_1007C03E0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_10050D0D0, v6, 0);
}

uint64_t sub_10050D0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  sub_100221F28(*(_QWORD *)(v0 + 16), v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 32), &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C48D0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100221DB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    v11 = (_QWORD *)swift_task_alloc(dword_1007C26CC);
    *(_QWORD *)(v0 + 72) = v11;
    *v11 = v0;
    v11[1] = sub_10050D258;
    return sub_1004A0960();
  }
}

uint64_t sub_10050D258()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = (uint64_t (*)(uint64_t, uint64_t))sub_100513890;
  else
    v4 = sub_10050D2BC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), 0);
}

uint64_t sub_10050D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  *(_QWORD *)(v2 + 88) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
    *(_QWORD *)(v2 + 96) = v5;
    *v5 = v2;
    v5[1] = sub_10050D374;
    return sub_1002DE698(v4, 0);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v2 + 56), type metadata accessor for SDAirDropServerConnection);
    v7 = *(_QWORD *)(v2 + 32);
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10050D374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10051387C, v2, 0);
}

uint64_t sub_10050D3D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[22] = v3;
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v2[24] = static AirDropActor.shared;
  return swift_task_switch(sub_10050D464, v4, 0);
}

uint64_t sub_10050D464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending non-contact response, finish DISCOVER", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 160);

  v7 = *(void **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  if ((sub_10038E610() & 1) != 0
    && (v8 = objc_msgSend(v7, "someComputerName")) != 0)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v13 = objc_msgSend((id)objc_opt_self(PFMediaCapabilities), "capabilitiesForCurrentDevice");
  v14 = objc_msgSend(v13, "opaqueRepresentation");

  if (v14)
  {
    v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 16) = v15;
  *(_QWORD *)(v0 + 24) = v17;
  *(_QWORD *)(v0 + 32) = v10;
  *(_QWORD *)(v0 + 40) = v12;
  *(_OWORD *)(v0 + 48) = xmmword_1005CF260;
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 88) = xmmword_1005DB6F0;
  *(_QWORD *)(v0 + 104) = 0xF000000000000000;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  *(_QWORD *)(v0 + 144) = 0;
  *(_QWORD *)(v0 + 152) = 0;
  v18 = static AirDropActor.shared;
  *(_QWORD *)(v0 + 200) = static AirDropActor.shared;
  return swift_task_switch(sub_10050D658, v18, 0);
}

uint64_t sub_10050D658()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[22];
  v1 = (void *)v0[23];
  memmove(v1, v0 + 2, 0x90uLL);
  swift_storeEnumTagMultiPayload(v1, v2, 3);
  sub_100321728(v0 + 2);
  v3 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
  v0[26] = v3;
  *v3 = v0;
  v3[1] = sub_10050D6E0;
  return sub_1004A0474(v0[23]);
}

uint64_t sub_10050D6E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  v4 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  sub_1002443C8(v4, type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_10050D854;
  else
    v5 = sub_10050D760;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 200), 0);
}

uint64_t sub_10050D760(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;

  Strong = swift_unknownObjectWeakLoadStrong(v2[20] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  v2[28] = Strong;
  if (!Strong)
    return swift_task_switch(sub_10050D8A8, v2[24], 0);
  v4 = v2[20] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
  v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v2[29] = v5;
  *v5 = v2;
  v5[1] = sub_10050D7FC;
  return sub_1002DE698(v4, 0);
}

uint64_t sub_10050D7FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 224);
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_10050D8A8, *(_QWORD *)(v1 + 192), 0);
}

uint64_t sub_10050D854()
{
  uint64_t v0;

  return swift_task_switch(sub_10050D868, *(_QWORD *)(v0 + 192), 0);
}

uint64_t sub_10050D868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  sub_1003217E0((uint64_t *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050D8A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  sub_1003217E0((uint64_t *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050D8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_100008384(&qword_1007B7DF8);
  v3[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s10AskRequestVMa(0);
  v3[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[10] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v7);
  v3[12] = swift_task_alloc(v7);
  v3[13] = swift_task_alloc(v7);
  v8 = type metadata accessor for SDAirDropMessage(0);
  v3[14] = v8;
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7E48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v9);
  v3[17] = swift_task_alloc(v9);
  v3[18] = swift_task_alloc(v9);
  v10 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
  v3[19] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[20] = v11;
  v3[21] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v3[22] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[23] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[24] = swift_task_alloc(v14);
  v3[25] = swift_task_alloc(v14);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v3[26] = static AirDropActor.shared;
  return swift_task_switch(sub_10050DA84, v15, 0);
}

uint64_t sub_10050DA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  const char *v63;
  const char *v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  const char *v70;
  void *v71;
  id v72;
  void *v73;
  const char *v74;
  const char *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  const char *v82;
  unint64_t v83;
  void *v84;
  char v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104);
  v5(v1, enum case for SFAirDropReceive.AskResponse.decline(_:), v2);
  v6 = sub_100220D78(&qword_1007C4A30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v1, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v1, v2);
  if ((v4 & 1) != 0)
    goto LABEL_4;
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 40);
  v5(v8, enum case for SFAirDropReceive.AskResponse.error(_:), v9);
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v9, v6);
  v7(v8, v9);
  if ((v10 & 1) != 0
    || (v11 = *(_QWORD *)(v0 + 200),
        v12 = *(_QWORD *)(v0 + 176),
        v13 = *(_QWORD *)(v0 + 40),
        v5(v11, enum case for SFAirDropReceive.AskResponse.mixedTypes(_:), v12),
        v14 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v11, v12, v6),
        v7(v11, v12),
        (v14 & 1) != 0))
  {
LABEL_4:
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007C48D0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "User did not accept request, invalidating connection", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v20 = *(_QWORD *)(v0 + 48);

    v21 = type metadata accessor for SFAirDropReceive.Failure(0);
    v22 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v21, v22, 0, 0);
    v24 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, enum case for SFAirDropReceive.Failure.declined(_:), v21);
    swift_willThrow(v24);
    sub_10050E9B8(v20);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 128);
    v32 = *(_QWORD *)(v0 + 96);
    v31 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 88);
    v93 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v36 = *(_QWORD *)(v0 + 184);
  v35 = *(_QWORD *)(v0 + 192);
  v37 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 16))(v35, *(_QWORD *)(v0 + 40), v37);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v35, v37);
  v39 = *(_QWORD *)(v0 + 192);
  if (v38 == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    v40 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 168);
    v42 = *(_QWORD *)(v0 + 152);
    v43 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 96))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    v44 = sub_100008384(&qword_1007B68D0);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v41, v39 + *(int *)(v44 + 48), v42);
    *(_BYTE *)(v43 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia) = SFAirDropReceive.AcceptContext.shouldExtractMedia.getter(v45) & 1;
    v46 = SFAirDropReceive.AcceptContext.customPayload.getter();
    v48 = v47;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
    v49 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v39, v49);
  }
  else
  {
    v7(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    v46 = 0;
    v48 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 216) = v46;
  *(_QWORD *)(v0 + 224) = v48;
  v51 = *(_QWORD *)(v0 + 72);
  v50 = *(_QWORD *)(v0 + 80);
  v52 = *(_QWORD *)(v0 + 56);
  v53 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  *(_QWORD *)(v0 + 232) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  v54 = v52 + v53;
  v55 = swift_beginAccess(v52 + v53, v0 + 16, 0, 0);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v50 + 48);
  *(_QWORD *)(v0 + 240) = v56;
  if (v56(v54, 1, v51, v55))
    goto LABEL_17;
  v57 = *(_QWORD *)(v0 + 144);
  sub_100221F28(v54 + *(int *)(*(_QWORD *)(v0 + 72) + 20), v57, &qword_1007B7E48);
  v58 = type metadata accessor for SFAirDrop.TransferType(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58);
  v61 = *(_QWORD *)(v0 + 144);
  if ((_DWORD)v60 == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 144), &qword_1007B7E48);
LABEL_17:
    v67 = *(_QWORD *)(v0 + 56);
    v65 = *(_QWORD *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID);
    v66 = *(const char **)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8);
    swift_bridgeObjectRetain(v66);
    sub_1004BF048();
    v91 = v68;
    v64 = v69;
    v90 = sub_1004C3B20();
    v63 = v70;
    goto LABEL_18;
  }
  v62 = SFAirDrop.TransferType.isOnlyExchange.getter(v60);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v58);
  if ((v62 & 1) == 0)
    goto LABEL_17;
  v90 = 0;
  v91 = 0;
  v63 = 0;
  v64 = 0;
  v65 = 0;
  v66 = 0;
LABEL_18:
  *(_QWORD *)(v0 + 256) = v64;
  *(_QWORD *)(v0 + 264) = v66;
  *(_QWORD *)(v0 + 248) = v63;
  v71 = *(void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  v72 = objc_msgSend(v71, "computerName");
  if (v72)
  {
    v73 = v72;
    v88 = v65;
    v89 = v64;
    v92 = v46;
    v94 = v48;
    v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
    v75 = v74;

    *(_QWORD *)(v0 + 272) = v75;
    v76 = objc_msgSend(v71, "modelName");
    if (v76)
    {
      v77 = v76;
      v79 = *(_QWORD *)(v0 + 112);
      v78 = *(_QWORD *)(v0 + 120);
      v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
      v82 = v81;

      *(_QWORD *)(v0 + 280) = v82;
      v83 = sub_10031AF00();
      v84 = (void *)static NSUserDefaults.airdrop.getter(v83);
      v85 = SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter();

      *(_QWORD *)v78 = v87;
      *(_QWORD *)(v78 + 8) = v75;
      *(_QWORD *)(v78 + 16) = v80;
      *(_QWORD *)(v78 + 24) = v82;
      *(_BYTE *)(v78 + 32) = v85 & 1;
      *(_QWORD *)(v78 + 40) = v88;
      *(_QWORD *)(v78 + 48) = v66;
      *(_QWORD *)(v78 + 56) = v91;
      *(_QWORD *)(v78 + 64) = v89;
      *(_QWORD *)(v78 + 72) = v90;
      *(_QWORD *)(v78 + 80) = v63;
      *(_QWORD *)(v78 + 88) = v92;
      *(_QWORD *)(v78 + 96) = v94;
      swift_storeEnumTagMultiPayload(v78, v79, 5);
      sub_100244404(v92, v94);
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRetain(v66);
      swift_bridgeObjectRetain(v89);
      sub_100244404(v92, v94);
      v86 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
      *(_QWORD *)(v0 + 288) = v86;
      *v86 = v0;
      v86[1] = sub_10050E11C;
      return sub_1004A0474(*(_QWORD *)(v0 + 120));
    }
  }
  else
  {
    sub_100225AA0(v46, v48);
    __break(1u);
  }
  result = sub_100225AA0(v92, v94);
  __break(1u);
  return result;
}

uint64_t sub_10050E11C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 208);
  sub_1002443C8(*(_QWORD *)(v2 + 120), type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_10050E898;
  else
    v5 = sub_10050E19C;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10050E19C()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  const char *v16;
  const char *v17;
  const char *v18;
  const char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t Strong;
  uint64_t v51;
  _QWORD *v52;
  const char *v54;
  const char *v55;
  const char *v56;
  const char *v57;
  const char *v58;
  unint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_100221F28(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 232), v2, &qword_1007B7DF8);
  if (v1(v2, 1, v3) != 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 72);
    sub_100221DB4(*(_QWORD *)(v0 + 64), v4, _s10AskRequestVMa);
    v6 = *(_QWORD *)(v4 + *(int *)(v5 + 48));
    v7 = *(_QWORD *)(v0 + 104);
    if (v6)
    {
      v8 = *(_QWORD *)(v6 + 16);
      sub_100244384(v7, *(_QWORD *)(v0 + 96), _s10AskRequestVMa);
      if (v8)
      {
        sub_1002443C8(*(_QWORD *)(v0 + 96), _s10AskRequestVMa);
LABEL_6:
        v9 = *(_QWORD *)(v0 + 88);
        sub_100244384(*(_QWORD *)(v0 + 104), v9, _s10AskRequestVMa);
        sub_1002443C8(v9, _s10AskRequestVMa);
LABEL_7:
        if (qword_1007B4220 != -1)
          swift_once(&qword_1007B4220, sub_10050CF88);
        v10 = type metadata accessor for Logger(0);
        v11 = sub_100221DF8(v10, (uint64_t)qword_1007C48D0);
        v12 = Logger.logObject.getter(v11);
        v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "Staring decompression adapter", v14, 2u);
          swift_slowDealloc(v14, -1, -1);
        }
        v16 = *(const char **)(v0 + 272);
        v15 = *(const char **)(v0 + 280);
        v18 = *(const char **)(v0 + 256);
        v17 = *(const char **)(v0 + 264);
        v19 = *(const char **)(v0 + 248);
        v21 = *(_QWORD *)(v0 + 216);
        v20 = *(_QWORD *)(v0 + 224);
        v22 = *(_QWORD *)(v0 + 104);

        *(_QWORD *)&v23 = swift_bridgeObjectRelease(v16).n128_u64[0];
        *(_QWORD *)&v24 = swift_bridgeObjectRelease(v15, v23).n128_u64[0];
        *(_QWORD *)&v25 = swift_bridgeObjectRelease(v19, v24).n128_u64[0];
        *(_QWORD *)&v26 = swift_bridgeObjectRelease(v18, v25).n128_u64[0];
        swift_bridgeObjectRelease(v17, v26);
        sub_100225AA0(v21, v20);
        sub_100225AA0(v21, v20);
        sub_1002443C8(v22, _s10AskRequestVMa);
        goto LABEL_28;
      }
      v27 = *(_QWORD *)(v0 + 136);
      v28 = *(_QWORD *)(v0 + 72);
      sub_100221F28(*(_QWORD *)(v0 + 96) + *(int *)(v28 + 20), v27, &qword_1007B7E48);
      v29 = type metadata accessor for SFAirDrop.TransferType(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v27, 1, v29);
      v33 = *(_QWORD *)(v0 + 136);
      v34 = *(_QWORD *)(v0 + 96);
      if (v32 == 1)
      {
        sub_1002443C8(*(_QWORD *)(v0 + 96), _s10AskRequestVMa);
        sub_10000D0F0(v33, &qword_1007B7E48);
      }
      else
      {
        SFAirDrop.TransferType.exchangeType.getter();
        v36 = v35;
        sub_1002443C8(v34, _s10AskRequestVMa);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
        if (v36)
        {
          swift_bridgeObjectRelease(v36);
          goto LABEL_6;
        }
      }
      v37 = *(_QWORD *)(v0 + 128);
      v38 = *(_QWORD *)(v0 + 88);
      sub_100244384(*(_QWORD *)(v0 + 104), v38, _s10AskRequestVMa);
      sub_100221F28(v38 + *(int *)(v28 + 20), v37, &qword_1007B7E48);
      v39 = v31(v37, 1, v29);
      v40 = *(_QWORD *)(v0 + 128);
      v41 = *(_QWORD *)(v0 + 88);
      if ((_DWORD)v39 == 1)
      {
        sub_1002443C8(*(_QWORD *)(v0 + 88), _s10AskRequestVMa);
        sub_10000D0F0(v40, &qword_1007B7E48);
      }
      else
      {
        v42 = SFAirDrop.TransferType.isCustom.getter(v39);
        sub_1002443C8(v41, _s10AskRequestVMa);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v40, v29);
        if ((v42 & 1) != 0)
          goto LABEL_7;
      }
      v7 = *(_QWORD *)(v0 + 104);
    }
    sub_1002443C8(v7, _s10AskRequestVMa);
    goto LABEL_21;
  }
  sub_10000D0F0(*(_QWORD *)(v0 + 64), &qword_1007B7DF8);
LABEL_21:
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100221DF8(v43, (uint64_t)qword_1007C48D0);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "No files to receive or exchanges", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }
  v48 = *(_QWORD *)(v0 + 56);

  Strong = swift_unknownObjectWeakLoadStrong(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, v49);
  *(_QWORD *)(v0 + 304) = Strong;
  if (Strong)
  {
    v51 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    v52 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
    *(_QWORD *)(v0 + 312) = v52;
    *v52 = v0;
    v52[1] = sub_10050E71C;
    return sub_1002DE698(v51, 0);
  }
  v54 = *(const char **)(v0 + 272);
  v55 = *(const char **)(v0 + 280);
  v57 = *(const char **)(v0 + 256);
  v56 = *(const char **)(v0 + 264);
  v58 = *(const char **)(v0 + 248);
  v60 = *(_QWORD *)(v0 + 216);
  v59 = *(_QWORD *)(v0 + 224);
  sub_100225AA0(v60, v59);
  *(_QWORD *)&v61 = swift_bridgeObjectRelease(v54).n128_u64[0];
  *(_QWORD *)&v62 = swift_bridgeObjectRelease(v55, v61).n128_u64[0];
  *(_QWORD *)&v63 = swift_bridgeObjectRelease(v56, v62).n128_u64[0];
  *(_QWORD *)&v64 = swift_bridgeObjectRelease(v57, v63).n128_u64[0];
  swift_bridgeObjectRelease(v58, v64);
  sub_100225AA0(v60, v59);
LABEL_28:
  v65 = *(_QWORD *)(v0 + 192);
  v66 = *(_QWORD *)(v0 + 200);
  v67 = *(_QWORD *)(v0 + 168);
  v69 = *(_QWORD *)(v0 + 136);
  v68 = *(_QWORD *)(v0 + 144);
  v71 = *(_QWORD *)(v0 + 120);
  v70 = *(_QWORD *)(v0 + 128);
  v73 = *(_QWORD *)(v0 + 96);
  v72 = *(_QWORD *)(v0 + 104);
  v74 = *(_QWORD *)(v0 + 88);
  v75 = *(_QWORD *)(v0 + 64);
  sub_10050E9B8(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v66);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050E71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10050E77C, v2, 0);
}

uint64_t sub_10050E77C()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(const char **)(v0 + 272);
  v2 = *(const char **)(v0 + 280);
  v4 = *(const char **)(v0 + 256);
  v3 = *(const char **)(v0 + 264);
  v5 = *(const char **)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  sub_100225AA0(v7, v6);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v2, v8).n128_u64[0];
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v3, v9).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v4, v10).n128_u64[0];
  swift_bridgeObjectRelease(v5, v11);
  sub_100225AA0(v7, v6);
  v12 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 64);
  sub_10050E9B8(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050E898()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  const char *v3;
  const char *v4;
  const char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = *(const char **)(v0 + 272);
  v2 = *(const char **)(v0 + 280);
  v4 = *(const char **)(v0 + 256);
  v3 = *(const char **)(v0 + 264);
  v5 = *(const char **)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 48);
  sub_100225AA0(v7, v6);
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v2, v9).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v3, v10).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100225AA0(v7, v6);
  sub_10050E9B8(v8);
  v13 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050E9B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v2 = type metadata accessor for SDAirDropServerConnection(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100244384(a1, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload(v4, v2))
    return sub_1002443C8((uint64_t)v4, type metadata accessor for SDAirDropServerConnection);
  swift_release(*v4);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100221DF8(v7, (uint64_t)qword_1007C48D0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Cancelling ASK connection", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  return sub_1004A0010(0);
}

uint64_t sub_10050EB10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v2[10] = v5;
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7DF8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s10AskRequestVMa(0);
  v2[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[14] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v9);
  v2[16] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_10050EC24, v10, 0);
}

uint64_t sub_10050EC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100221F28(v4, v3, &qword_1007B7DF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 96), &qword_1007B7DF8);
    v5 = type metadata accessor for SFAirDropReceive.Failure(0);
    v6 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0, 0);
    v8 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, enum case for SFAirDropReceive.Failure.badRequest(_:), v5);
    swift_willThrow(v8);
    v28 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 88);
    v29 = *(_QWORD *)(v0 + 96);
    v31 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 48);
    sub_100221DB4(*(_QWORD *)(v0 + 96), v10, _s10AskRequestVMa);
    sub_100244384(v10, v9, _s10AskRequestVMa);
    sub_100244384(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity, v11, type metadata accessor for SDAirDropServerConnectionIdentity);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
    v15 = *(_QWORD *)(v0 + 88);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      v17 = 3145728;
    }
    else
    {
      sub_1002443C8(*(_QWORD *)(v0 + 88), type metadata accessor for SDAirDropServerConnectionIdentity);
      v17 = 0x20000;
    }
    v18 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(char **)(v0 + 48);
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(v19, &v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID], *(_QWORD *)(v0 + 56));
    v21 = &v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate], v22);
    v24 = *((_QWORD *)v21 + 1);
    v25 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = v20;
    v27 = sub_1002330B8(v18, v17, v19, v20, (uint64_t)&off_10072DD48, Strong, v24);
    *(_QWORD *)(v0 + 144) = v27;
    v33 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter);
    *(_QWORD *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter) = v27;
    swift_retain(v27);
    swift_release(v34);
    LOBYTE(v34) = *(_BYTE *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia);
    v35 = (_QWORD *)swift_task_alloc(dword_1007B59B4);
    *(_QWORD *)(v0 + 152) = v35;
    *v35 = v0;
    v35[1] = sub_10050EF2C;
    return sub_100233E1C(*(_QWORD *)(v0 + 40), v34);
  }
}

uint64_t sub_10050EF2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10050F018;
  else
    v4 = sub_10050EF90;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_10050EF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 144));
  sub_1002443C8(v2, _s10AskRequestVMa);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050F018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 144));
  sub_1002443C8(v1, _s10AskRequestVMa);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050F0A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100008384(&qword_1007C03E0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_10050F158, v6, 0);
}

uint64_t sub_10050F158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  sub_100221F28(*(_QWORD *)(v0 + 16), v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 32), &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C48D0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100221DB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    v11 = (_QWORD *)swift_task_alloc(dword_1007C26E4);
    *(_QWORD *)(v0 + 72) = v11;
    *v11 = v0;
    v11[1] = sub_10050F2E0;
    return sub_1004A1130();
  }
}

uint64_t sub_10050F2E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10050F4AC;
  else
    v4 = sub_10050F344;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), 0);
}

uint64_t sub_10050F344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, a2);
  *(_QWORD *)(v2 + 88) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    v5 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
    *(_QWORD *)(v2 + 96) = v5;
    *v5 = v2;
    v5[1] = sub_10050F3FC;
    return sub_1002DE698(v4, 0);
  }
  else
  {
    sub_1002443C8(*(_QWORD *)(v2 + 56), type metadata accessor for SDAirDropServerConnection);
    v7 = *(_QWORD *)(v2 + 32);
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_10050F3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10050F45C, v2, 0);
}

uint64_t sub_10050F45C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1002443C8(*(_QWORD *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050F4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050F500(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100008384(&qword_1007C03E0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_10050F5B8, v6, 0);
}

uint64_t sub_10050F5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  sub_100221F28(*(_QWORD *)(v0 + 16), v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 32), &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C48D0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100221DB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    v11 = (_QWORD *)swift_task_alloc(dword_1007C26DC);
    *(_QWORD *)(v0 + 72) = v11;
    *v11 = v0;
    v11[1] = sub_10050D258;
    return sub_1004A0EB4();
  }
}

uint64_t sub_10050F740()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[8] = v0;
  v2 = sub_100008384(&qword_1007B7E48);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100008384(&qword_1007B7DF8);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s10AskRequestVMa(0);
  v1[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[12] = v5;
  v1[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropMessage(0);
  v1[14] = v6;
  v1[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007C03E0);
  v1[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SDAirDropServerConnection(0);
  v1[17] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[18] = v9;
  v1[19] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_10050F88C, v10, 0);
}

uint64_t sub_10050F88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100221F28(v4, v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 128), &qword_1007C03E0);
    v5 = type metadata accessor for SFAirDropReceive.Failure(0);
    v6 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0, 0);
    v8 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, enum case for SFAirDropReceive.Failure.incompleteTransfer(_:), v5);
    swift_willThrow(v8);
    v10 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = *(_OWORD **)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 112);
    sub_100221DB4(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152), type metadata accessor for SDAirDropServerConnection);
    *v15 = xmmword_1005D9960;
    swift_storeEnumTagMultiPayload(v15, v16, 7);
    v17 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
    *(_QWORD *)(v0 + 168) = v17;
    *v17 = v0;
    v17[1] = sub_10050FA5C;
    return sub_1004A0474(*(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_10050FA5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  sub_1002443C8(*(_QWORD *)(v2 + 120), type metadata accessor for SDAirDropMessage);
  if (v0)
    v5 = sub_10050FF88;
  else
    v5 = sub_10050FADC;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10050FADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess(v4, v0 + 40, 0, 0);
  sub_100221F28(v4, v3, &qword_1007B7DF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    sub_100221DB4(*(_QWORD *)(v0 + 80), v5, _s10AskRequestVMa);
    sub_100221F28(v5 + *(int *)(v6 + 20), v7, &qword_1007B7E48);
    v8 = type metadata accessor for SFAirDrop.TransferType(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    v11 = *(_QWORD *)(v0 + 72);
    if (v10 == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 72), &qword_1007B7E48);
    }
    else
    {
      SFAirDrop.TransferType.exchangeType.getter();
      v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
      if (v14)
      {
        v15 = *(_QWORD *)(v0 + 104);
        swift_bridgeObjectRelease(v14);
        v16 = v15;
LABEL_10:
        sub_1002443C8(v16, _s10AskRequestVMa);
        goto LABEL_11;
      }
    }
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate, v12);
    *(_QWORD *)(v0 + 184) = Strong;
    if (Strong)
    {
      v18 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
      v19 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
      *(_QWORD *)(v0 + 192) = v19;
      *v19 = v0;
      v19[1] = sub_10050FDCC;
      return sub_1002DE698(v18, 0);
    }
    v16 = *(_QWORD *)(v0 + 104);
    goto LABEL_10;
  }
  sub_10000D0F0(*(_QWORD *)(v0 + 80), &qword_1007B7DF8);
LABEL_11:
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100221DF8(v21, (uint64_t)qword_1007C48D0);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Cancelling UPLOAD connection", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }
  v26 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 72);
  v30 = *(_QWORD *)(v0 + 80);

  sub_1004A0010(0);
  sub_1002443C8(v26, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050FDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10050FE2C, v2, 0);
}

uint64_t sub_10050FE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1002443C8(*(_QWORD *)(v0 + 104), _s10AskRequestVMa);
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling UPLOAD connection", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);

  sub_1004A0010(0);
  sub_1002443C8(v6, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050FF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling UPLOAD connection", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 152);

  sub_1004A0010(0);
  sub_1002443C8(v6, type metadata accessor for SDAirDropServerConnection);
  v8 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005100CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100008384(&qword_1007C03E0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100510184, v6, 0);
}

uint64_t sub_100510184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  sub_100221F28(*(_QWORD *)(v0 + 16), v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 32), &qword_1007C03E0);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C48D0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_100221DB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    v11 = (_QWORD *)swift_task_alloc(dword_1007C26D4);
    *(_QWORD *)(v0 + 72) = v11;
    *v11 = v0;
    v11[1] = sub_10050D258;
    return sub_1004A0C40();
  }
}

uint64_t sub_10051030C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_100008384(&qword_1007B7E08);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s13UploadRequestVMa(0);
  v2[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[14] = v5;
  v2[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C03E0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SDAirDropServerConnection(0);
  v2[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[18] = v8;
  v2[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return swift_task_switch(sub_100510410, v9, 0);
}

uint64_t sub_100510410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100221F28(v4, v3, &qword_1007C03E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 128), &qword_1007C03E0);
    v5 = type metadata accessor for SFAirDropReceive.Failure(0);
    v6 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0, 0);
    v8 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, enum case for SFAirDropReceive.Failure.incompleteTransfer(_:), v5);
    swift_willThrow(v8);
LABEL_5:
    v20 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 96);
  sub_100221DB4(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152), type metadata accessor for SDAirDropServerConnection);
  v13 = v12 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest;
  swift_beginAccess(v13, v0 + 40, 0, 0);
  sub_100221F28(v13, v11, &qword_1007B7E08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v14 = *(_QWORD *)(v0 + 152);
    sub_10000D0F0(*(_QWORD *)(v0 + 96), &qword_1007B7E08);
    v15 = type metadata accessor for SFAirDropReceive.Failure(0);
    v16 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v15, v16, 0, 0);
    v18 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, enum case for SFAirDropReceive.Failure.badRequest(_:), v15);
    swift_willThrow(v18);
    sub_1002443C8(v14, type metadata accessor for SDAirDropServerConnection);
    goto LABEL_5;
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 104);
  sub_100221DB4(*(_QWORD *)(v0 + 96), v23, _s13UploadRequestVMa);
  v25 = (_QWORD *)(v23 + *(int *)(v24 + 28));
  *(_QWORD *)(v0 + 168) = *v25;
  v26 = v25[1];
  *(_QWORD *)(v0 + 176) = v26;
  if (v26 >> 60 != 15)
    __asm { BR              X9 }
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 120) + *(int *)(*(_QWORD *)(v0 + 104) + 32)) & 1) != 0)
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100221DF8(v31, (uint64_t)qword_1007C48D0);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Received all file data from initial request, awaiting decompression", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    v36 = (_QWORD *)swift_task_alloc(dword_1007C4A9C);
    *(_QWORD *)(v0 + 208) = v36;
    *v36 = v0;
    v36[1] = sub_100510C08;
    return sub_100511A64(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v27 = sub_100220D78(&qword_1007B5998, type metadata accessor for SDAirDropReceiveCompressionAdapter, (uint64_t)&unk_1005CF218);
    *(_QWORD *)(v0 + 232) = v27;
    *(_QWORD *)(v0 + 240) = 0;
    v28 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0);
    v29 = dispatch thunk of Actor.unownedExecutor.getter(v28, v27);
    *(_QWORD *)(v0 + 248) = v29;
    *(_QWORD *)(v0 + 256) = v30;
    return swift_task_switch(sub_100510D7C, v29, v30);
  }
}

uint64_t sub_100510A20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005118B8;
  else
    v4 = sub_100510A84;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 160), 0);
}

uint64_t sub_100510A84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;

  v1 = v0[23];
  sub_100225AA0(v0[21], v0[22]);
  if ((*(_BYTE *)(v0[15] + *(int *)(v0[13] + 32)) & 1) != 0)
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100221DF8(v7, (uint64_t)qword_1007C48D0);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received all file data from initial request, awaiting decompression", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = (_QWORD *)swift_task_alloc(dword_1007C4A9C);
    v0[26] = v12;
    *v12 = v0;
    v12[1] = sub_100510C08;
    return sub_100511A64(v0[10]);
  }
  else
  {
    v2 = sub_100220D78(&qword_1007B5998, type metadata accessor for SDAirDropReceiveCompressionAdapter, (uint64_t)&unk_1005CF218);
    v0[29] = v2;
    v0[30] = v1;
    v3 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, v2);
    v0[31] = v4;
    v0[32] = v5;
    return swift_task_switch(sub_100510D7C, v4, v5);
  }
}

uint64_t sub_100510C08()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 208);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    v2[28] = v0;
    return swift_task_switch(sub_100510CFC, v2[20], 0);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1007B5AFC);
    v2[27] = v6;
    *v6 = v4;
    v6[1] = sub_100510C94;
    return sub_100236694();
  }
}

uint64_t sub_100510C94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 216));
  if (v0)
  {
    *(_QWORD *)(v2 + 224) = v0;
    v3 = *(_QWORD *)(v2 + 160);
    v4 = sub_100510CFC;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 160);
    v4 = sub_100513880;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_100510CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  sub_1002443C8(*(_QWORD *)(v0 + 120), _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100510D7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[29];
  v2 = v0[10];
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[33] = v3;
  *v3 = v0;
  v3[1] = sub_100510E14;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 45, v2, v1, 0xD000000000000014, 0x8000000100612650, sub_10023B434, v0[10], &type metadata for Bool);
}

uint64_t sub_100510E14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100511008;
  else
    v4 = sub_100510E74;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 248), *(_QWORD *)(v2 + 256));
}

uint64_t sub_100510E74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  *(_BYTE *)(v0 + 361) = *(_BYTE *)(v0 + 360);
  return swift_task_switch(sub_100510E90, v1, 0);
}

uint64_t sub_100510E90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;

  if ((*(_BYTE *)(v0 + 361) & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1007C26F4);
    *(_QWORD *)(v0 + 280) = v1;
    *v1 = v0;
    v1[1] = sub_10051109C;
    return sub_1004A14FC();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 240);
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C48D0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v8 = 134217984;
      *(_QWORD *)(v0 + 64) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v8 + 4);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received %ld total bytes, awaiting decompression", v8, 0xCu);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = (_QWORD *)swift_task_alloc(dword_1007C4A9C);
    *(_QWORD *)(v0 + 336) = v9;
    *v9 = v0;
    v9[1] = sub_1005116C4;
    return sub_100511A64(*(_QWORD *)(v0 + 80));
  }
}

uint64_t sub_100511008()
{
  uint64_t v0;

  return swift_task_switch(sub_10051101C, *(_QWORD *)(v0 + 160), 0);
}

uint64_t sub_10051101C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  sub_1002443C8(*(_QWORD *)(v0 + 120), _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051109C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 280);
  *(_QWORD *)(v5 + 288) = a1;
  *(_QWORD *)(v5 + 296) = a2;
  *(_BYTE *)(v5 + 362) = a3;
  *(_QWORD *)(v5 + 304) = v3;
  swift_task_dealloc(v6);
  if (v3)
    v7 = sub_100511944;
  else
    v7 = sub_100511110;
  return swift_task_switch(v7, *(_QWORD *)(v5 + 160), 0);
}

uint64_t sub_100511110()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;

  v1 = v0[37];
  if (v1 >> 60 != 15)
    __asm { BR              X9 }
  sub_100225AA0(v0[36], v0[37]);
  v2 = v0[30];
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C48D0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v0[8] = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9, v7 + 4);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received %ld total bytes, awaiting decompression", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc(dword_1007C4A9C);
  v0[42] = v8;
  *v8 = v0;
  v8[1] = sub_1005116C4;
  return sub_100511A64(v0[10]);
}

uint64_t sub_1005114B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 328) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005119C4;
  else
    v4 = sub_10051151C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 160), 0);
}

uint64_t sub_10051151C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(v0 + 362);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  sub_100225AA0(v2, v3);
  sub_100225AA0(v2, v3);
  v4 = *(_QWORD *)(v0 + 312);
  if (v1 == 1)
  {
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007C48D0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v9 = 134217984;
      *(_QWORD *)(v0 + 64) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v9 + 4);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received %ld total bytes, awaiting decompression", v9, 0xCu);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = (_QWORD *)swift_task_alloc(dword_1007C4A9C);
    *(_QWORD *)(v0 + 336) = v10;
    *v10 = v0;
    v10[1] = sub_1005116C4;
    return sub_100511A64(*(_QWORD *)(v0 + 80));
  }
  else
  {
    *(_QWORD *)(v0 + 240) = v4;
    v12 = *(_QWORD *)(v0 + 232);
    v13 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, v12);
    *(_QWORD *)(v0 + 248) = v14;
    *(_QWORD *)(v0 + 256) = v15;
    return swift_task_switch(sub_100510D7C, v14, v15);
  }
}

uint64_t sub_1005116C4()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 336);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    v2[44] = v0;
    return swift_task_switch(sub_100511838, v2[20], 0);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1007B5AFC);
    v2[43] = v6;
    *v6 = v4;
    v6[1] = sub_100511750;
    return sub_100236694();
  }
}

uint64_t sub_100511750()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 344));
  if (v0)
  {
    *(_QWORD *)(v2 + 352) = v0;
    v3 = *(_QWORD *)(v2 + 160);
    v4 = sub_100511838;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 160);
    v4 = sub_1005117B8;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005117B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  sub_1002443C8(v3, _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100511838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  sub_1002443C8(*(_QWORD *)(v0 + 120), _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005118B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  sub_100225AA0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  sub_1002443C8(v2, _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100511944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  sub_1002443C8(*(_QWORD *)(v0 + 120), _s13UploadRequestVMa);
  sub_1002443C8(v1, type metadata accessor for SDAirDropServerConnection);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005119C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 120);
  sub_100225AA0(v1, v2);
  sub_100225AA0(v1, v2);
  sub_1002443C8(v4, _s13UploadRequestVMa);
  sub_1002443C8(v3, type metadata accessor for SDAirDropServerConnection);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100511A64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_100008384(&qword_1007C4A48);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C49F8);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v2[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v2[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[14] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v9);
  v2[16] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_100511B60, v10, 0);
}

uint64_t sub_100511B60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v3);
  SFProgressContinuation.task.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_100511C04;
  return SFProgressTask.finalValue.getter(v0[16], v0[7]);
}

uint64_t sub_100511C04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  v5 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 72);
  v6 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_100511FA0;
  else
    v7 = sub_100511C90;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_100511C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  void (*v6)(_QWORD, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 128), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  v5 = enum case for SFAirDropReceive.AskResponse.accept(_:);
  v6 = *(void (**)(_QWORD, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 160) = v6;
  if (v4 == v5)
  {
    v7 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    v6(*(_QWORD *)(v0 + 128), v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v7, v8);
    v10 = v7 + *(int *)(sub_100008384(&qword_1007B68D0) + 48);
    v11 = type metadata accessor for SFAirDropReceive.AcceptContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    if (qword_1007B4220 != -1)
      swift_once(&qword_1007B4220, sub_10050CF88);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007C48D0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "ASK declined, cancelling receive compression adapter", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0);
    v23 = sub_100220D78(&qword_1007B5998, type metadata accessor for SDAirDropReceiveCompressionAdapter, (uint64_t)&unk_1005CF218);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, v23);
    return swift_task_switch(sub_100511EB8, v24, v25);
  }
}

uint64_t sub_100511EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 40);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropReceiveCompressionAdapter_zipper), "stop");
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropReceiveCompressionAdapter_downloadDestinationProvider, v0 + 16, 0, 0);
  return swift_task_switch(sub_100511F34, v1, 0);
}

uint64_t sub_100511F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(v0 + 160))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100511FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005122C0()
{
  return type metadata accessor for SDAirDropReceiveHandler(0);
}

uint64_t type metadata accessor for SDAirDropReceiveHandler(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C4988;
  if (!qword_1007C4988)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropReceiveHandler);
  return result;
}

void sub_100512304(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[21];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;

  v2 = type metadata accessor for SFAirDrop.TransferIdentifier(319);
  if (v3 <= 0x3F)
  {
    v28[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for UUID(319);
    if (v5 <= 0x3F)
    {
      v28[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for SDAirDropServerConnectionIdentity(319);
      if (v7 <= 0x3F)
      {
        v28[2] = *(_QWORD *)(v6 - 8) + 64;
        v28[3] = &unk_1005DB758;
        v28[4] = &unk_1005DB758;
        v28[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[9] = (char *)&value witness table for Builtin.NativeObject + 64;
        v28[10] = &unk_1005DB770;
        sub_100512578(319);
        if (v9 <= 0x3F)
        {
          v28[11] = *(_QWORD *)(v8 - 8) + 64;
          sub_100272FA4(319);
          if (v11 <= 0x3F)
          {
            v28[12] = *(_QWORD *)(v10 - 8) + 64;
            sub_1005125DC(319);
            if (v13 <= 0x3F)
            {
              v28[13] = *(_QWORD *)(v12 - 8) + 64;
              sub_100512634();
              if (v15 <= 0x3F)
              {
                v28[14] = *(_QWORD *)(v14 - 8) + 64;
                sub_100260B1C(319, &qword_1007B7CE0, _s12HelloRequestVMa);
                if (v17 <= 0x3F)
                {
                  v28[15] = *(_QWORD *)(v16 - 8) + 64;
                  sub_100260B1C(319, &qword_1007B7CF8, _s10AskRequestVMa);
                  if (v19 <= 0x3F)
                  {
                    v28[16] = *(_QWORD *)(v18 - 8) + 64;
                    sub_100260B1C(319, &qword_1007B7D10, _s13UploadRequestVMa);
                    if (v21 <= 0x3F)
                    {
                      v28[17] = *(_QWORD *)(v20 - 8) + 64;
                      sub_100260B1C(319, &qword_1007C49B0, _s15ExchangeRequestVMa);
                      if (v23 <= 0x3F)
                      {
                        v28[18] = *(_QWORD *)(v22 - 8) + 64;
                        sub_100260B1C(319, (unint64_t *)&qword_1007BC3D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
                        if (v25 <= 0x3F)
                        {
                          v28[19] = *(_QWORD *)(v24 - 8) + 64;
                          v28[20] = &unk_1005DB788;
                          sub_100260B1C(319, &qword_1007C49B8, type metadata accessor for SDAirDropServerConnection);
                          if (v27 <= 0x3F)
                          {
                            v29 = *(_QWORD *)(v26 - 8) + 64;
                            v30 = v29;
                            v31 = v29;
                            v32 = v29;
                            v33 = v29;
                            v34 = &unk_1005DB7A0;
                            v35 = &unk_1005DB7B8;
                            swift_updateClassMetadata2(a1, 256, 28, v28, a1 + 80);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100512578(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1007C4998)
  {
    v2 = type metadata accessor for SFAirDrop.AskProgress(255);
    v3 = type metadata accessor for SFAirDropReceive.AskResponse(255);
    v4 = type metadata accessor for SFProgressContinuation(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1007C4998);
  }
}

void sub_1005125DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007C49A0)
  {
    v2 = sub_10021FF9C(&qword_1007C03F8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007C49A0);
  }
}

void sub_100512634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1007C49A8)
  {
    v0 = type metadata accessor for SFProgressContinuation(0, &type metadata for SDAirDropReceiveHandler.State, &type metadata for SDAirDropReceiveHandler.State);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1007C49A8);
  }
}

uint64_t storeEnumTagSinglePayload for SDAirDropReceiveHandler.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005126D8 + 4 * byte_1005DB705[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10051270C + 4 * byte_1005DB700[v4]))();
}

uint64_t sub_10051270C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100512714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10051271CLL);
  return result;
}

uint64_t sub_100512728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100512730);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100512734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10051273C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveHandler.State()
{
  return &type metadata for SDAirDropReceiveHandler.State;
}

unint64_t sub_10051275C()
{
  unint64_t result;

  result = qword_1007C49C0;
  if (!qword_1007C49C0)
  {
    result = swift_getWitnessTable(&unk_1005DB818, &type metadata for SDAirDropReceiveHandler.State);
    atomic_store(result, &qword_1007C49C0);
  }
  return result;
}

uint64_t sub_1005127A0()
{
  return sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
}

uint64_t sub_1005127CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id;
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100512814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = sub_100008384(&qword_1007B5B20);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDrop.Progress(0);
  v4[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1005128D4, static AirDropActor.shared, 0);
}

uint64_t sub_1005128D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes;
  v4 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 8) = v4;
  *(_BYTE *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 24) = v6;
  (*(void (**)(void))(v2 + 104))();
  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v7 = *(void **)(v0 + 64);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C48D0);
  v9 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 48);
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(32, -1);
    v27 = v13;
    *(_DWORD *)v12 = 134218242;
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4);
    *(_WORD *)(v12 + 12) = 2080;
    if ((*(_BYTE *)(v3 + 8) & 1) != 0)
    {
      v14 = 0x800000010061FC60;
      v15 = 0xD000000000000019;
    }
    else
    {
      *(_QWORD *)(v0 + 24) = *(_QWORD *)v3;
      v17 = sub_100287E70();
      v15 = BinaryInteger.description.getter(&type metadata for Int, v17);
      v14 = v18;
    }
    v19 = *(void **)(v0 + 64);
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v15, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v12 + 14);
    swift_bridgeObjectRelease(v14);

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Decompression progress copied: %ld total: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 64);

  }
  v21 = *(_QWORD *)(v0 + 104);
  v20 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v24);
  SFProgressContinuation.yield(_:)(v20, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v23);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100512B94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_100008384(&qword_1007B5B20);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100512C2C, v5, 0);
}

uint64_t sub_100512C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Decompression finished, sending UPLOAD response", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc(dword_1007C4AB4);
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_100512D28;
  return sub_10050F740();
}

uint64_t sub_100512D28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_100512D98, *(_QWORD *)(v2 + 64), 0);
  swift_task_dealloc(*(_QWORD *)(v2 + 56));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100512D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v3);
  *(_QWORD *)(v0 + 16) = v4;
  SFProgressContinuation.finish(with:)(v0 + 16, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100512E1C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  objc_class *ObjectType;
  uint64_t v101;
  objc_super v102;
  char v103[9];

  v12 = v11;
  v87 = a8;
  v85 = a7;
  v83 = a6;
  v81 = a5;
  v80 = a4;
  v78 = a2;
  v101 = a1;
  v84 = a11;
  v86 = a10;
  v82 = a9;
  ObjectType = (objc_class *)swift_getObjectType(v11);
  v14 = type metadata accessor for SFAirDrop.Progress(0);
  v96 = *(_QWORD *)(v14 - 8);
  v97 = v14;
  __chkstk_darwin(v14);
  v94 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007B5B20);
  v98 = *(_QWORD *)(v16 - 8);
  v99 = v16;
  __chkstk_darwin(v16);
  v95 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFAirDrop.AskProgress(0);
  v90 = *(_QWORD *)(v18 - 8);
  v91 = v18;
  __chkstk_darwin(v18);
  v89 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008384(&qword_1007C49F8);
  v92 = *(_QWORD *)(v20 - 8);
  v93 = v20;
  __chkstk_darwin(v20);
  v88 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100008384(&qword_1007C04F0);
  v77 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v76 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate];
  *((_QWORD *)v27 + 1) = 0;
  swift_unknownObjectWeakInit(v27, 0);
  v28 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
  *((_QWORD *)v28 + 1) = 0;
  swift_unknownObjectWeakInit(v28, 0);
  v29 = (uint64_t *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
  v30 = v12;
  v31 = UUID.init()(v30);
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  *v29 = v32;
  v29[1] = v34;
  v35 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation];
  v36 = sub_100008384(&qword_1007C03F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest];
  v38 = _s12HelloRequestVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  v39 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest];
  v40 = _s10AskRequestVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  v41 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
  v42 = _s13UploadRequestVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v43 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest];
  v44 = _s15ExchangeRequestVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 1, 1, v44);
  v45 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart];
  v46 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter] = 0;
  v47 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection];
  v48 = type metadata accessor for SDAirDropServerConnection(0);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v49(v47, 1, 1, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection], 1, 1, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection], 1, 1, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection], 1, 1, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection], 1, 1, v48);
  v50 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
  *(_QWORD *)v50 = 0;
  v50[8] = 1;
  v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia] = 0;
  v51 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id];
  v52 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v75 = *(_QWORD *)(v52 - 8);
  v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 16))(v51, v101, v52);
  UUID.init()(v53);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID], v26, v23);
  v54 = v78;
  sub_100244384(v78, (uint64_t)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity], type metadata accessor for SDAirDropServerConnectionIdentity);
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus] = a3;
  v55 = v80;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_nearbyAgent] = v80;
  v56 = v81;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_endpointService] = v81;
  v57 = v83;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_pseudonymService] = v83;
  v58 = v85;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_queue] = v85;
  *((_QWORD *)v27 + 1) = v82;
  swift_unknownObjectWeakAssign(v27, v87);
  *((_QWORD *)v28 + 1) = v84;
  swift_unknownObjectWeakAssign(v28, v86);
  v103[0] = 0;
  v59 = a3;
  v60 = v55;
  v61 = v56;
  swift_retain(v57);
  v62 = v58;
  v63 = v76;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD000000000000013, 0x800000010061FBF0, v103, 0xD00000000000005ELL, 0x800000010061FB90, 101, &type metadata for SDAirDropReceiveHandler.State, &type metadata for SDAirDropReceiveHandler.State);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation], v63, v79);
  v64 = v89;
  v65 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, enum case for SFAirDrop.AskProgress.notStarted(_:), v91);
  v66 = type metadata accessor for SFAirDropReceive.AskResponse(0);
  v67 = v88;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0x69746E6F436B7341, 0xEF6E6F697461756ELL, v64, 0xD00000000000005ELL, 0x800000010061FB90, 102, v65, v66);
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation], v67, v93);
  v68 = v97;
  v69 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v94, enum case for SFAirDrop.Progress.notStarted(_:), v97);
  v70 = sub_100008384((uint64_t *)&unk_1007B6820);
  v71 = v95;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD000000000000014, 0x800000010061FC10, v69, 0xD00000000000005ELL, 0x800000010061FB90, 103, v68, v70);
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation], v71, v99);

  v102.receiver = v30;
  v102.super_class = ObjectType;
  v72 = objc_msgSendSuper2(&v102, "init");
  sub_1002443C8(v54, type metadata accessor for SDAirDropServerConnectionIdentity);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v101, v52);
  return v72;
}

uint64_t sub_1005135AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v2[6] = static AirDropActor.shared;
  return swift_task_switch(sub_10051363C, v4, 0);
}

uint64_t sub_10051363C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_1007B4220 != -1)
    swift_once(&qword_1007B4220, sub_10050CF88);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C48D0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending HELLO response", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[4];
  v6 = v0[5];
  v8 = v0[2];

  *(_DWORD *)v6 = v8;
  *(_BYTE *)(v6 + 4) = BYTE4(v8);
  swift_storeEnumTagMultiPayload(v6, v7, 1);
  v9 = (_QWORD *)swift_task_alloc(dword_1007C26C4);
  v0[7] = v9;
  *v9 = v0;
  v9[1] = sub_100513764;
  return sub_1004A0474(v0[5]);
}

uint64_t sub_100513764()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 40);
  v4 = *v1;
  *(_QWORD *)(v4 + 64) = v0;
  swift_task_dealloc(v2);
  sub_1002443C8(v3, type metadata accessor for SDAirDropMessage);
  if (v0)
    return swift_task_switch(sub_1005137F8, *(_QWORD *)(v4 + 48), 0);
  swift_task_dealloc(*(_QWORD *)(v4 + 40));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1005137F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051382C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007C1AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SDAirDropPeerPaymentReceiver()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary28SDAirDropPeerPaymentReceiver);
}

uint64_t sub_1005138B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch(sub_1005138CC, 0, 0);
}

uint64_t sub_1005138CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_10021E744((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  Date.timeIntervalSinceReferenceDate.getter();
  Double.write<A>(to:)(v0 + 80, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 40) = &type metadata for String;
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  sub_10022138C((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_10046B5EC((_OWORD *)(v0 + 48), 0x6144706F6F426673, (const char *)0xED000079654B6574, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 112) = v2;
  swift_bridgeObjectRelease((const char *)0x8000000000000000);
  v6 = objc_msgSend(objc_allocWithZone((Class)sub_100008384(&qword_1007C4B58)), "init");
  *(_QWORD *)(v0 + 120) = v6;
  v7 = (_QWORD *)swift_task_alloc(96);
  *(_QWORD *)(v0 + 128) = v7;
  v7[2] = v6;
  v7[3] = 0;
  v7[4] = 0;
  v7[5] = 0xD00000000000001BLL;
  v7[6] = 0x800000010061FCF0;
  v7[7] = 0xD00000000000002ELL;
  v7[8] = 0x800000010061FCC0;
  v7[9] = v2;
  v7[10] = 0;
  v7[11] = v1;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 136) = v8;
  v9 = sub_100008384(&qword_1007B6440);
  *v8 = v0;
  v8[1] = sub_100513A9C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 152, 0, 0, 0xD00000000000006ALL, 0x8000000100612060, sub_100513B64, v7, v9);
}

uint64_t sub_100513A9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  void *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100513B20;
  }
  else
  {
    v6 = *(void **)(v2 + 120);
    v5 = *(_QWORD *)(v2 + 128);
    swift_bridgeObjectRelease(*(const char **)(v2 + 112));

    swift_task_dealloc(v5);
    v4 = sub_1002C2BC8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100513B20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100513B64(uint64_t a1)
{
  _QWORD *v1;
  double result;

  *(_QWORD *)&result = sub_1005265AC(a1, (_QWORD *)v1[2], (void *)v1[3], (void *)v1[4], v1[5], (const char *)v1[6], (_QWORD *)v1[7], (const char *)v1[8], v1[9], v1[10], v1[11]).n128_u64[0];
  return result;
}

uint64_t sub_100513BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C4B60);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4B60);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100513C30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[4] = a1;
  v2[5] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[6] = swift_task_alloc(v3);
  v2[7] = swift_task_alloc(v3);
  v2[8] = swift_task_alloc(v3);
  v2[9] = swift_task_alloc(v3);
  v4 = type metadata accessor for URL(0);
  v2[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[11] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v6);
  v2[13] = swift_task_alloc(v6);
  v2[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[16] = v8;
  v2[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100513D50, static AirDropActor.shared, 0);
}

void sub_100513D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  __n128 v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD, uint64_t);
  void *v32;
  id v33;
  NSURL *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  double v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  const char *v96;
  __n128 v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  void (*v99)(uint64_t, uint64_t);
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v2 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v3, v2, v5, v8);
  v11 = *(_QWORD *)(v1 + 128);
  v10 = *(_QWORD *)(v1 + 136);
  v12 = *(_QWORD *)(v1 + 120);
  if (v7 != 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 120));
    goto LABEL_6;
  }
  v13 = SFAirDropReceive.AskRequest.files.getter(v9);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = swift_bridgeObjectRelease((const char *)v13);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
  if (v14)
  {
LABEL_6:
    v23 = 0;
LABEL_7:
    v25 = *(_QWORD *)(v1 + 104);
    v24 = *(_QWORD *)(v1 + 112);
    v26 = *(_QWORD *)(v1 + 96);
    v28 = *(_QWORD *)(v1 + 64);
    v27 = *(_QWORD *)(v1 + 72);
    v30 = *(_QWORD *)(v1 + 48);
    v29 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 136));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    (*(void (**)(uint64_t))(v1 + 8))(v23);
    return;
  }
  v17 = *(_QWORD *)(v1 + 80);
  v18 = *(_QWORD *)(v1 + 88);
  v19 = *(_QWORD *)(v1 + 72);
  v20 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v16);
  sub_100298F1C((uint64_t)v20, v19);
  v21 = swift_bridgeObjectRelease(v20);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  if (v22(v19, 1, v17, v21) == 1)
  {
    sub_100232FE8(*(_QWORD *)(v1 + 72));
    goto LABEL_35;
  }
  v31 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 88) + 32);
  v31(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  v32 = (void *)objc_opt_self(LSApplicationWorkspace);
  v33 = objc_msgSend(v32, "defaultWorkspace");
  if (!v33)
    goto LABEL_39;
  v35 = v33;
  URL._bridgeToObjectiveC()(v34);
  v37 = v36;
  v38 = objc_msgSend(v35, "applicationsAvailableForOpeningURL:", v36);

  if (!v38)
    goto LABEL_22;
  v40 = sub_1005151B4();
  v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v40);

  if (!((unint64_t)v41 >> 62))
  {
    if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_21:
    *(_QWORD *)&v39 = swift_bridgeObjectRelease((const char *)v41).n128_u64[0];
    goto LABEL_22;
  }
  if (v41 < 0)
    v53 = v41;
  else
    v53 = v41 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v41);
  v54 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease((const char *)v41);
  if (!v54)
    goto LABEL_21;
LABEL_12:
  if ((v41 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v42 = *(id *)(v41 + 32);
      goto LABEL_15;
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
LABEL_15:
  v43 = v42;
  v44 = objc_msgSend(v42, "bundleIdentifier", swift_bridgeObjectRelease((const char *)v41).n128_f64[0]);

  if (v44)
  {
    v45 = *(_QWORD *)(v1 + 112);
    v46 = *(_QWORD *)(v1 + 80);
    v47 = *(_QWORD *)(v1 + 88);
    v48 = *(_QWORD *)(v1 + 40);
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v51 = v50;

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    v52 = *(const char **)(v48 + 24);
    *(_QWORD *)(v48 + 16) = v49;
    *(_QWORD *)(v48 + 24) = v51;
    swift_bridgeObjectRelease(v52);
    goto LABEL_35;
  }
LABEL_22:
  v55 = objc_msgSend(v32, "defaultWorkspace", v39);
  if (v55)
  {
    v57 = v55;
    URL._bridgeToObjectiveC()(v56);
    v59 = v58;
    v60 = objc_msgSend(v57, "URLOverrideForURL:", v58);

    if (v60)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

      v61 = 0;
    }
    else
    {
      v61 = 1;
    }
    v62 = *(_QWORD *)(v1 + 80);
    v64 = *(_QWORD *)(v1 + 56);
    v63 = *(_QWORD *)(v1 + 64);
    v65 = *(_QWORD *)(v1 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 88) + 56))(v64, v61, 1, v62);
    sub_1003417A8(v64, v63);
    sub_100330F1C(v63, v65);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v22)(v65, 1, v62) == 1)
    {
      sub_100232FE8(*(_QWORD *)(v1 + 48));
    }
    else
    {
      v66 = *(_QWORD *)(v1 + 104);
      v67 = *(_QWORD *)(v1 + 80);
      v68 = *(_QWORD *)(v1 + 88);
      v69 = v31(v66, *(_QWORD *)(v1 + 48), v67);
      v70 = URL.scheme.getter(v69);
      v72 = v71;
      v73 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v73(v66, v67);
      if (v72)
      {
        v74 = *(_QWORD *)(v1 + 112);
        v75 = *(_QWORD *)(v1 + 80);
        v76 = *(_QWORD *)(v1 + 40);
        sub_100232FE8(*(_QWORD *)(v1 + 64));
        v73(v74, v75);
        v77 = *(const char **)(v76 + 24);
        *(_QWORD *)(v76 + 16) = v70;
        *(_QWORD *)(v76 + 24) = v72;
        swift_bridgeObjectRelease(v77);
        goto LABEL_35;
      }
    }
    if (qword_1007B4228 != -1)
      swift_once(&qword_1007B4228, sub_100513BA0);
    v78 = *(_QWORD *)(v1 + 112);
    v80 = *(_QWORD *)(v1 + 88);
    v79 = *(_QWORD *)(v1 + 96);
    v81 = *(_QWORD *)(v1 + 80);
    v82 = type metadata accessor for Logger(0);
    sub_100221DF8(v82, (uint64_t)qword_1007C4B60);
    v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v79, v78, v81);
    v84 = Logger.logObject.getter(v83);
    v85 = static os_log_type_t.error.getter(v84);
    v86 = os_log_type_enabled(v84, v85);
    v87 = *(_QWORD *)(v1 + 112);
    v89 = *(_QWORD *)(v1 + 88);
    v88 = *(_QWORD *)(v1 + 96);
    v90 = *(_QWORD *)(v1 + 80);
    v91 = *(_QWORD *)(v1 + 64);
    if (v86)
    {
      v104 = *(_QWORD *)(v1 + 64);
      v102 = *(_QWORD *)(v1 + 88);
      v92 = (uint8_t *)swift_slowAlloc(12, -1);
      v103 = swift_slowAlloc(32, -1);
      v105 = v103;
      *(_DWORD *)v92 = 136315138;
      v93 = sub_1003B9EDC();
      v94 = dispatch thunk of CustomStringConvertible.description.getter(v90, v93);
      v96 = (const char *)v95;
      *(_QWORD *)(v1 + 24) = sub_100228BD8(v94, v95, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v92 + 4);
      v97 = swift_bridgeObjectRelease(v96);
      v98 = *(void (**)(uint64_t, uint64_t, __n128))(v102 + 8);
      v98(v88, v90, v97);
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "Failed to get item type from url. {url: %s}", v92, 0xCu);
      swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      swift_slowDealloc(v92, -1, -1);

      sub_100232FE8(v104);
      ((void (*)(uint64_t, uint64_t))v98)(v87, v90);
    }
    else
    {

      v99 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v99(v88, v90);
      sub_100232FE8(v91);
      v99(v87, v90);
    }
LABEL_35:
    v100 = objc_allocWithZone((Class)LSApplicationRecord);
    v101 = sub_100528FF4(0xD000000000000012, 0x8000000100611230, 1);
    if (v101)
    {

      v23 = 1;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_10051450C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v6 = type metadata accessor for URL(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v8);
  v5[13] = swift_task_alloc(v8);
  v5[14] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[15] = swift_task_alloc(v9);
  v5[16] = swift_task_alloc(v9);
  v5[17] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100514628, static AirDropActor.shared, 0);
}

id sub_100514628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  const char *v51;
  __n128 v52;
  void (*v53)(uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  NSURL *v58;
  void *v59;
  void *v60;
  id result;
  NSURL *v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  const char *v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  os_log_type_t type;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v1 = 0xD000000000000014;
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = sub_100008384((uint64_t *)&unk_1007B86C0);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1005CD2A0;
  v10 = *(_QWORD *)(v6 + 16);
  v9 = *(const char **)(v6 + 24);
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_100299AB0();
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v9;
  swift_bridgeObjectRetain(v9);
  v11 = String.init(format:_:)(0xD00000000000004ELL, 0x800000010061FE30, v8);
  v13 = v12;
  URL.init(string:)(v11, v12);
  swift_bridgeObjectRelease(v13);
  sub_100330F1C(v3, v2);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v14(v2, 1, v5) == 1)
  {
    sub_100232FE8(*(_QWORD *)(v0 + 128));
    if (qword_1007B4228 != -1)
      swift_once(&qword_1007B4228, sub_100513BA0);
    v15 = *(_QWORD *)(v0 + 72);
    v16 = type metadata accessor for Logger(0);
    sub_100221DF8(v16, (uint64_t)qword_1007C4B60);
    v17 = swift_bridgeObjectRetain_n(v15, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (!os_log_type_enabled(v18, v19))
    {
      v55 = *(_QWORD *)(v0 + 136);
      v56 = *(_QWORD *)(v0 + 72);

      swift_bridgeObjectRelease_n(v56, 2);
LABEL_22:
      v96 = v55;
      goto LABEL_23;
    }
    v20 = *(_QWORD *)(v0 + 72);
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v110 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    if (v23)
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v26 + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 72)+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), *(_QWORD *)(v0 + 80));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v25);
      v27 = v14(v24, 1, v25);
      if ((_DWORD)v27 != 1)
      {
        v28 = *(_QWORD *)(v0 + 120);
        v29 = *(_QWORD *)(v0 + 80);
        v30 = *(_QWORD *)(v0 + 88);
        v1 = URL.description.getter(v27);
        v32 = v31;
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
LABEL_21:
        v55 = *(_QWORD *)(v0 + 136);
        v97 = *(_QWORD *)(v0 + 72);
        *(_QWORD *)(v0 + 16) = sub_100228BD8(v1, (unint64_t)v32, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v21 + 4);
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease_n(v97, 2);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to build app store search URL with item: %s", v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v26 + 56))(*(_QWORD *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 80));
    }
    sub_100232FE8(*(_QWORD *)(v0 + 120));
    v32 = (const char *)0x8000000100619120;
    goto LABEL_21;
  }
  v108 = v0 + 48;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80));
  if (qword_1007B4228 != -1)
    swift_once(&qword_1007B4228, sub_100513BA0);
  v34 = *(_QWORD *)(v0 + 104);
  v33 = *(_QWORD *)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 88);
  v37 = type metadata accessor for Logger(0);
  sub_100221DF8(v37, (uint64_t)qword_1007C4B60);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v39 = v38(v34, v33, v36);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.default.getter(v40);
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v0 + 104);
  v45 = *(_QWORD *)(v0 + 80);
  v44 = *(_QWORD *)(v0 + 88);
  if (v42)
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v106 = v38;
    v47 = swift_slowAlloc(32, -1);
    v110 = v47;
    *(_DWORD *)v46 = 136315138;
    v48 = sub_1003B9EDC();
    v49 = dispatch thunk of CustomStringConvertible.description.getter(v45, v48);
    v51 = (const char *)v50;
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v49, v50, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, v0 + 56, v46 + 4);
    v52 = swift_bridgeObjectRelease(v51);
    v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    v53(v43, v45, v52);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Launching app store with URL: %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    v54 = v47;
    v38 = v106;
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    ((void (*)(_QWORD, _QWORD))v53)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  }

  v57 = (void *)objc_opt_self(SDAirDropHandler);
  URL._bridgeToObjectiveC()(v58);
  v60 = v59;
  objc_msgSend(v57, "logReceiverBundleID:forURL:", 0, v59);

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v63 = result;
    URL._bridgeToObjectiveC()(v62);
    v65 = v64;
    *(_QWORD *)(v0 + 24) = 0;
    v66 = objc_msgSend(v63, "openURL:configuration:error:", v64, 0, v0 + 24);

    v67 = *(void **)(v0 + 24);
    if (v66)
    {
      v68 = *(_QWORD *)(v0 + 136);
      v69 = *(_QWORD *)(v0 + 112);
      v70 = *(_QWORD *)(v0 + 80);
      v71 = v67;

      ((void (*)(uint64_t, uint64_t))v53)(v69, v70);
      sub_100232FE8(v68);
      v72 = 1;
LABEL_24:
      v99 = *(_QWORD *)(v0 + 128);
      v98 = *(_QWORD *)(v0 + 136);
      v101 = *(_QWORD *)(v0 + 112);
      v100 = *(_QWORD *)(v0 + 120);
      v103 = *(_QWORD *)(v0 + 96);
      v102 = *(_QWORD *)(v0 + 104);
      **(_BYTE **)(v0 + 56) = v72;
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    v73 = *(_QWORD *)(v0 + 112);
    v74 = *(_QWORD *)(v0 + 96);
    v75 = *(_QWORD *)(v0 + 80);
    v76 = v67;
    v77 = _convertNSErrorToError(_:)(v67);

    swift_willThrow(v78);
    v38(v74, v73, v75);
    swift_errorRetain(v77);
    v79 = swift_errorRetain(v77);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.error.getter(v80);
    v82 = os_log_type_enabled(v80, v81);
    v83 = *(_QWORD *)(v0 + 136);
    v84 = *(_QWORD *)(v0 + 112);
    v85 = *(_QWORD *)(v0 + 96);
    v86 = *(_QWORD *)(v0 + 80);
    if (v82)
    {
      v109 = *(_QWORD *)(v0 + 136);
      v87 = swift_slowAlloc(22, -1);
      v104 = (uint64_t *)swift_slowAlloc(8, -1);
      v107 = swift_slowAlloc(32, -1);
      v110 = v107;
      *(_DWORD *)v87 = 136315394;
      type = v81;
      v88 = sub_1003B9EDC();
      v89 = dispatch thunk of CustomStringConvertible.description.getter(v86, v88);
      v90 = v86;
      v92 = (const char *)v91;
      *(_QWORD *)(v0 + 32) = sub_100228BD8(v89, v91, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v87 + 4);
      v93 = swift_bridgeObjectRelease(v92);
      v53(v85, v90, v93);
      *(_WORD *)(v87 + 12) = 2112;
      swift_errorRetain(v77);
      v94 = _swift_stdlib_bridgeErrorToNSError(v77);
      *(_QWORD *)(v0 + 40) = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v108, v87 + 14);
      *v104 = v94;
      swift_errorRelease(v77);
      swift_errorRelease(v77);
      _os_log_impl((void *)&_mh_execute_header, v80, type, "Failed to launch app store with URL %s: %@", (uint8_t *)v87, 0x16u);
      v95 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v104, 1, v95);
      swift_slowDealloc(v104, -1, -1);
      swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v107, -1, -1);
      swift_slowDealloc(v87, -1, -1);

      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v90);
      v96 = v109;
    }
    else
    {

      swift_errorRelease(v77);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v85, v86);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v86);
      v96 = v83;
    }
LABEL_23:
    sub_100232FE8(v96);
    v72 = 0;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedLinkType);
}

uint64_t sub_100514EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType();
  result = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0xE000000000000000;
  *a1 = result;
  return result;
}

uint64_t sub_100514F30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C4BA4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_100513C30(a1);
}

uint64_t sub_100514F84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *v1;
  v6 = 0;
  v4 = swift_allocObject(&unk_10072DE58, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x707041206E65704FLL, 0xEE0065726F745320, &v6, &unk_1007C4C70, v4, 0xD000000000000071, 0x800000010061FDB0, 70, &type metadata for Double, &type metadata for Bool);
}

void sub_100515050(uint64_t a1, char a2)
{
  NSString v2;
  uint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    v2 = String._bridgeToObjectiveC()();
    v4 = (id)SFLocalizedStringForKey(v2, v3);

    if (v4)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return;
    }
    __break(1u);
  }
  v5 = String._bridgeToObjectiveC()();
  v4 = (id)SFLocalizedStringForKey(v5, v6);

  if (v4)
    goto LABEL_5;
  __break(1u);
}

uint64_t sub_10051510C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100515138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007C4C6C);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D12C;
  return sub_10051450C(a1, a2, a3, v9, v8);
}

unint64_t sub_1005151B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B5520;
  if (!qword_1007B5520)
  {
    v1 = objc_opt_self(LSApplicationProxy);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B5520);
  }
  return result;
}

uint64_t sub_1005151F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C4C78);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4C78);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100515280(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10051535C, static AirDropActor.shared, 0);
}

void sub_10051535C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char **v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
LABEL_46:
    v46 = 0;
LABEL_47:
    v50 = *(_QWORD *)(v1 + 48);
    v49 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    (*(void (**)(uint64_t))(v1 + 8))(v46);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = 0;
  v53 = v10;
  v54 = v10 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v10 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v10 + 56);
  v55 = (unint64_t)(63 - v13) >> 6;
  v15 = &selRef_addEntriesFromDictionary_;
  v52 = v9;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v11 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v10 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
      goto LABEL_42;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 32))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 32));
    sub_10032E6EC(&off_10071C5C0);
    if (!v24)
    {
      (*(void (**)(_QWORD, _QWORD))(v8 + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
      swift_release(v10);
      goto LABEL_46;
    }
    v25 = v24;
    v26 = *(void **)(v9 + 16);
    if (v26)
    {
      v56 = v11;
      v27 = v24;
      v28 = v26;
      v29 = objc_msgSend(v28, v15[406]);
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

      }
      else
      {
        v31 = 0;
        v33 = 0;
      }
      v34 = objc_msgSend(v27, v15[406]);
      if (v34)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

        if (!v33)
          goto LABEL_36;
        if (!v38)
          goto LABEL_43;
        v39 = *(_QWORD *)(v1 + 48);
        v51 = *(_QWORD *)(v1 + 32);
        if (v31 == v36 && v33 == v38)
        {
          *(_QWORD *)&v40 = swift_bridgeObjectRetain(v33).n128_u64[0];
          swift_bridgeObjectRelease(v38, v40);

          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v39, v51);
          swift_bridgeObjectRelease_n(v33, 2);
          v9 = v52;
          v10 = v53;
          v15 = &selRef_addEntriesFromDictionary_;
          v11 = v56;
        }
        else
        {
          v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v36, v38, 0);
          *(_QWORD *)&v44 = swift_bridgeObjectRetain(v33).n128_u64[0];
          swift_bridgeObjectRelease(v38, v44);

          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v39, v51);
          swift_bridgeObjectRelease_n(v33, 2);
          v9 = v52;
          v10 = v53;
          v15 = &selRef_addEntriesFromDictionary_;
          v11 = v56;
          if ((v43 & 1) == 0)
          {
            v45 = v53;
LABEL_44:
            swift_release(v45);
            goto LABEL_45;
          }
        }
      }
      else
      {
        if (v33)
        {
LABEL_43:
          v47 = *(_QWORD *)(v1 + 48);
          v48 = *(_QWORD *)(v1 + 32);
          swift_bridgeObjectRetain(v33);

          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v47, v48);
          swift_bridgeObjectRelease_n(v33, 2);
          v45 = v53;
          goto LABEL_44;
        }
        v38 = 0;
LABEL_36:
        v41 = *(_QWORD *)(v1 + 48);
        v42 = *(_QWORD *)(v1 + 32);

        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v41, v42);
        v9 = v52;
        v10 = v53;
        v15 = &selRef_addEntriesFromDictionary_;
        v11 = v56;
        if (v38)
        {
          swift_release(v53);
          swift_bridgeObjectRelease(v38);
LABEL_45:
          swift_arrayDestroy(&unk_10071C5E0, 3, &type metadata for String);
          goto LABEL_46;
        }
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v8 + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
      v16 = *(void **)(v9 + 16);
      *(_QWORD *)(v9 + 16) = v25;

    }
  }
  v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v19 >= v55)
    goto LABEL_41;
  v20 = *(_QWORD *)(v54 + 8 * v19);
  ++v11;
  if (v20)
    goto LABEL_21;
  v11 = v19 + 1;
  if (v19 + 1 >= v55)
    goto LABEL_41;
  v20 = *(_QWORD *)(v54 + 8 * v11);
  if (v20)
    goto LABEL_21;
  v11 = v19 + 2;
  if (v19 + 2 >= v55)
    goto LABEL_41;
  v20 = *(_QWORD *)(v54 + 8 * v11);
  if (v20)
  {
LABEL_21:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_22;
  }
  v21 = v19 + 3;
  if (v21 >= v55)
  {
LABEL_41:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
LABEL_42:
    swift_release(v10);
    swift_arrayDestroy(&unk_10071C5E0, 3, &type metadata for String);
    v46 = 1;
    goto LABEL_47;
  }
  v20 = *(_QWORD *)(v54 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v55)
      goto LABEL_41;
    v20 = *(_QWORD *)(v54 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_21;
  }
LABEL_49:
  __break(1u);
}

void sub_100515830(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  double v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  const char *v51;
  const char *v52;
  __n128 v53;
  uint8_t *v54;
  uint64_t v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63[56];

  v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v2 + 16);
  if (v13)
  {
    v14 = objc_msgSend(v13, "localizedName");
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v19 = SFAirDropReceive.AskRequest.urlItems.getter(v18);
    v20 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRelease((const char *)v19);
    v21 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v21, v63);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x54495F4546494C49;
    v23 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xEA00000000004D45;
    *(_QWORD *)(inited + 48) = v20;
    v61 = 0x545F4E5245444F4DLL;
    v62 = 0xEF524546534E4152;
    *(_QWORD *)&v24 = swift_bridgeObjectRetain((const char *)0xEA00000000004D45).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v24);
    v25._countAndFlagsBits = 95;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 0x54495F4546494C49;
    v26._object = (void *)0xEA00000000004D45;
    String.append(_:)(v26);
    swift_bridgeObjectRelease((const char *)0xEA00000000004D45);
    if (v20 > 1)
    {
      v27._countAndFlagsBits = 0x4C4152554C505FLL;
      v27._object = (void *)0xE700000000000000;
      String.append(_:)(v27);
    }
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v28._countAndFlagsBits = 0x4C4154495041435FLL;
      v28._object = (void *)0xEC00000044455A49;
      String.append(_:)(v28);
    }
    v29._countAndFlagsBits = 0x545845545FLL;
    v29._object = (void *)0xE500000000000000;
    String.append(_:)(v29);
    v30 = (const char *)v62;
    swift_setDeallocating(inited);
    v31 = *(_QWORD *)(inited + 16);
    v32 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v23, v31, v32);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v35 = (id)SFLocalizedStringForKey(v33, v34);

    if (v35)
    {
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      v39 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v40 = swift_allocObject(v39, 112, 7);
      *(_OWORD *)(v40 + 16) = xmmword_1005CF250;
      *(_QWORD *)(v40 + 56) = &type metadata for Int;
      *(_QWORD *)(v40 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v40 + 32) = v20;
      *(_QWORD *)(v40 + 96) = &type metadata for String;
      *(_QWORD *)(v40 + 104) = sub_100299AB0();
      *(_QWORD *)(v40 + 72) = v15;
      *(_QWORD *)(v40 + 80) = v17;
      static String.localizedStringWithFormat(_:_:)(v36, v38, v40);
      *(_QWORD *)&v41 = swift_bridgeObjectRelease(v38).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v40, v41);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1007B4230 != -1)
      swift_once(&qword_1007B4230, sub_1005151F0);
    v42 = type metadata accessor for Logger(0);
    sub_100221DF8(v42, (uint64_t)qword_1007C4C78);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v59 = v46;
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = swift_slowAlloc(32, -1);
      v58 = v48;
      v61 = v48;
      *(_DWORD *)v47 = 136315138;
      v56 = v47 + 4;
      v57 = v47;
      SFAirDropReceive.AskRequest.id.getter(v48);
      v49 = sub_1002232C0();
      v50 = dispatch thunk of CustomStringConvertible.description.getter(v5, v49);
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v60 = sub_100228BD8(v50, (unint64_t)v52, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v56);
      v53 = swift_bridgeObjectRelease(v52);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v53);
      v54 = v57;
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v59, "Asked for localizedDescription for iLife link which doesn't have a handling app. Transfer ID: %s", v57, 0xCu);
      v55 = v58;
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }

  }
}

uint64_t type metadata accessor for SDAirDropContentHandleriLifeLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropContentHandleriLifeLinks);
}

uint64_t sub_100515D1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriLifeLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100515D50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C4CBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_100515280(a1);
}

void sub_100515DA0(uint64_t a1, char a2)
{
  sub_100515830(a1, a2);
}

void destroy for SDAirDropContactHashManagerContext(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);
  sub_10022E75C((_QWORD *)(a1 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 48));

}

uint64_t initializeWithCopy for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  __int128 v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_unknownObjectRetain(v4);
  v8(a1 + 8, v5, v7);
  v9 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 48) = v9;
  v10 = (void *)a2[8];
  v11 = (void *)a2[9];
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  swift_unknownObjectRetain(v9);
  v12 = v10;
  v13 = v11;
  return a1;
}

uint64_t *assignWithCopy for SDAirDropContactHashManagerContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  sub_10023D490(a1 + 1, a2 + 1);
  v6 = a2[6];
  v7 = a2[7];
  v8 = a1[6];
  a1[6] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[7] = v7;
  v9 = (void *)a2[8];
  v10 = (void *)a1[8];
  a1[8] = (uint64_t)v9;
  v11 = v9;

  v12 = (void *)a2[9];
  v13 = (void *)a1[9];
  a1[9] = (uint64_t)v12;
  v14 = v12;

  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 initializeWithTake for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t *assignWithTake for SDAirDropContactHashManagerContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  sub_10022E75C(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v5 = a2[6];
  v6 = a1[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_unknownObjectRelease(v6);
  v7 = (void *)a1[8];
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);

  v8 = (void *)a1[9];
  a1[9] = a2[9];

  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropContactHashManagerContext()
{
  return &type metadata for SDAirDropContactHashManagerContext;
}

double sub_100516088@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  id v5;
  NSString *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t ObjCClassFromMetadata;
  double result;

  *(_QWORD *)a1 = objc_msgSend(objc_allocWithZone((Class)CUSystemMonitor), "init");
  v2 = type metadata accessor for SDContactStore();
  v3 = (_QWORD *)swift_allocObject(v2, 40, 7);
  v4 = (void *)CNContactStoreMeContactDidChangeNotification;
  v3[2] = CNContactStoreDidChangeNotification;
  v3[3] = v4;
  v5 = objc_allocWithZone((Class)CNContactStore);
  v6 = CNContactStoreDidChangeNotification;
  v7 = v4;
  v3[4] = objc_msgSend(v5, "init");
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = &off_10072A800;
  *(_QWORD *)(a1 + 8) = v3;
  v8 = type metadata accessor for SDAirDropHashStoreCDB();
  v9 = swift_allocObject(v8, 50, 7);
  v10 = sub_100516214();
  v11 = objc_allocWithZone((Class)CUKeyValueStoreReader);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  *(_QWORD *)(v9 + 16) = objc_msgSend(v11, "initWithKeyType:valueType:", ObjCClassFromMetadata, ObjCClassFromMetadata);
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v9 + 40) = &_swiftEmptySetSingleton;
  *(_WORD *)(v9 + 48) = 0;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = &protocol witness table for SDAirDropHashStoreCDB;
  *(_QWORD *)(a1 + 64) = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  *(_QWORD *)(a1 + 72) = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  result = 5.0;
  *(_OWORD *)(a1 + 80) = xmmword_1005DB970;
  return result;
}

unint64_t sub_100516214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B42F0;
  if (!qword_1007B42F0)
  {
    v1 = objc_opt_self(NSData);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B42F0);
  }
  return result;
}

uint64_t sub_100516250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C4D78);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4D78);
  if (qword_1007B3E98 != -1)
    swift_once(&qword_1007B3E98, sub_1002E9F80);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8298);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1005162E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v12 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000015, 0x80000001005DB9B0, v9, v6, v3, 0);
  qword_1007C4D90 = result;
  return result;
}

uint64_t sub_1005164B4()
{
  uint64_t v0;

  v0 = type metadata accessor for URL(0);
  sub_100221E9C(v0, qword_1007C4D98);
  sub_100221DF8(v0, (uint64_t)qword_1007C4D98);
  if (qword_1007B4250 != -1)
    swift_once(&qword_1007B4250, sub_100516548);
  sub_100221DF8(v0, (uint64_t)qword_1007C4DB0);
  return URL.appendingPathComponent(_:)(97, 0xE100000000000000);
}

uint64_t sub_100516548(uint64_t a1)
{
  return sub_100516584(a1, qword_1007C4DB0, 4409432, 0xE300000000000000);
}

uint64_t sub_100516560(uint64_t a1)
{
  return sub_100516584(a1, qword_1007C4DC8, 0xD000000000000013, 0x800000010061FFF0);
}

uint64_t sub_100516584(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for URL(0);
  sub_100221E9C(v7, a2);
  sub_100221DF8(v7, (uint64_t)a2);
  if (qword_1007B4268 != -1)
    swift_once(&qword_1007B4268, sub_1005166F4);
  sub_100221DF8(v7, (uint64_t)qword_1007C4DE8);
  return URL.appendingPathComponent(_:)(a3, a4);
}

void sub_100516624()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  v3 = sub_100008384(&qword_1007C4E38);
  Optional.unwrap(_:file:line:)(&qword_1007C4DE0, sub_1005166D8, 0, "DaemoniOSLibrary/SDXPCHelperImageCache.swift", 44, 2, 23, v3);

}

unint64_t sub_1005166D8()
{
  return 0xD00000000000002ELL;
}

void sub_1005166F4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  const char *v4;
  const char *v5;

  v0 = type metadata accessor for URL(0);
  sub_100221E9C(v0, qword_1007C4DE8);
  sub_100221DF8(v0, (uint64_t)qword_1007C4DE8);
  v1 = sub_10019BA08();
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    URL.init(fileURLWithPath:)(v3, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_100516780()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1007B4250 != -1)
    swift_once(&qword_1007B4250, sub_100516548);
  v0 = type metadata accessor for URL(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4DB0);
  sub_1005169AC(v1);
}

void sub_1005169AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSURL *v13;
  void *v14;
  void *v15;
  unsigned int v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  const char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  __n128 v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  char v61[8];
  uint64_t v62;
  id v63;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  v59 = v3;
  v4 = __chkstk_darwin(v2);
  v57 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - v6;
  v8 = type metadata accessor for CocoaError.Code(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v13);
  v15 = v14;
  v63 = 0;
  v16 = objc_msgSend(v12, "removeItemAtURL:error:", v14, &v63);

  v17 = v63;
  if (v16)
  {
    v18 = v63;
  }
  else
  {
    v19 = v63;
    v20 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v21);
    v22 = swift_errorRetain(v20);
    static CocoaError.fileNoSuchFile.getter(v22);
    v23 = sub_100220D78(&qword_1007C4E40, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    LOBYTE(v19) = static _ErrorCodeProtocol.~= infix(_:_:)(v11, v20, v8, v23);
    swift_errorRelease(v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((v19 & 1) != 0)
    {
      swift_errorRelease(v20);
      v24 = v58;
      if (qword_1007B4238 != -1)
        swift_once(&qword_1007B4238, sub_100516250);
      v25 = type metadata accessor for Logger(0);
      sub_100221DF8(v25, (uint64_t)qword_1007C4D78);
      v26 = v59;
      v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16))(v7, a1, v24);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(12, -1);
        v31 = (void *)swift_slowAlloc(32, -1);
        v63 = v31;
        *(_DWORD *)v30 = 136315138;
        v32 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v33 = dispatch thunk of CustomStringConvertible.description.getter(v24, v32);
        v35 = (const char *)v34;
        v62 = sub_100228BD8(v33, v34, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v30 + 4);
        v36 = swift_bridgeObjectRelease(v35);
        (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v7, v24, v36);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "removeFileIfExists - Doesn't exist: %s", v30, 0xCu);
        swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v30, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v24);
      }

    }
    else
    {
      v37 = v58;
      if (qword_1007B4238 != -1)
        swift_once(&qword_1007B4238, sub_100516250);
      v38 = type metadata accessor for Logger(0);
      sub_100221DF8(v38, (uint64_t)qword_1007C4D78);
      v39 = v59;
      v40 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, a1, v37);
      swift_errorRetain(v20);
      v41 = swift_errorRetain(v20);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc(22, -1);
        v56 = (void *)swift_slowAlloc(64, -1);
        v63 = v56;
        *(_DWORD *)v44 = 136315394;
        v45 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v46 = dispatch thunk of CustomStringConvertible.description.getter(v37, v45);
        v48 = (const char *)v47;
        v62 = sub_100228BD8(v46, v47, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v44 + 4);
        v49 = swift_bridgeObjectRelease(v48);
        (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v40, v37, v49);
        *(_WORD *)(v44 + 12) = 2080;
        swift_getErrorValue(v20, v61, v60);
        v50 = Error.localizedDescription.getter(v60[1], v60[2]);
        v52 = (const char *)v51;
        v62 = sub_100228BD8(v50, v51, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v44 + 14);
        swift_bridgeObjectRelease(v52);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "removeFileIfExists - couldn't delete %s:\n%s", (uint8_t *)v44, 0x16u);
        v53 = v56;
        swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        swift_slowDealloc(v44, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v37);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
      }

      swift_willThrow(v54);
    }
  }
}

void sub_100516F84()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1007B4238 != -1)
    swift_once(&qword_1007B4238, sub_100516250);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4D78);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "purgeAvatars", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  if (qword_1007B4248 != -1)
    swift_once(&qword_1007B4248, sub_1005164B4);
  v5 = type metadata accessor for URL(0);
  v6 = sub_100221DF8(v5, (uint64_t)qword_1007C4D98);
  sub_1005169AC(v6);
}

void sub_100517224(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSURL *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  const char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  void (*v48)(char *, const char *, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v54;
  void *v55;
  uint8_t *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v8);
  v63 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100517B0C(a1, (uint64_t)a2);
  v62 = v10;
  v12 = v11;
  if (qword_1007B4238 != -1)
    swift_once(&qword_1007B4238, sub_100516250);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100221DF8(v13, (uint64_t)qword_1007C4D78);
  swift_bridgeObjectRetain_n(a2, 2);
  v15 = swift_bridgeObjectRetain_n(v12, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = os_log_type_enabled(v16, v17);
  v60 = v7;
  v61 = v14;
  v58 = a1;
  if (v18)
  {
    v19 = swift_slowAlloc(22, -1);
    v20 = (void *)swift_slowAlloc(64, -1);
    v66 = v20;
    *(_DWORD *)v19 = 136315394;
    swift_bridgeObjectRetain(a2);
    v64 = sub_100228BD8(a1, (unint64_t)a2, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v19 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain(v12);
    v64 = sub_100228BD8((uint64_t)v62, (unint64_t)v12, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v19 + 14);
    swift_bridgeObjectRelease_n(v12, 3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "evictContactIdentifier: %s, compressed: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  v21 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (qword_1007B4248 != -1)
    swift_once(&qword_1007B4248, sub_1005164B4);
  v59 = sub_100221DF8(v4, (uint64_t)qword_1007C4D98);
  URL._bridgeToObjectiveC()(v22);
  v24 = v23;
  v66 = 0;
  v25 = objc_msgSend(v21, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v23, 0, 0, &v66);

  v26 = v66;
  if (v25)
  {
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v4);

    v28 = (const char *)sub_10051BD08(v27, (uint64_t)v62, (uint64_t)v12);
    swift_bridgeObjectRelease(v12);
    v29 = swift_bridgeObjectRetain_n(v28, 2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v62 = (const char *)swift_slowAlloc(32, -1);
      v66 = (id)v62;
      LODWORD(v57) = v32;
      *(_DWORD *)v33 = 136315138;
      v56 = v33 + 4;
      swift_bridgeObjectRetain(v28);
      v35 = Array.description.getter(v34, v4);
      v37 = v36;
      swift_bridgeObjectRelease(v28);
      v64 = sub_100228BD8(v35, (unint64_t)v37, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v56);
      swift_bridgeObjectRelease_n(v28, 2);
      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v57, "Removing URLs: %s", v33, 0xCu);
      v38 = v62;
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v28, 2);
    }
    v42 = (uint64_t)v60;
    v43 = *((_QWORD *)v28 + 2);
    v44 = v63;
    if (v43)
    {
      v57 = a2;
      v45 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v62 = v28;
      v46 = &v28[v45];
      v47 = *(_QWORD *)(v5 + 72);
      v48 = *(void (**)(char *, const char *, uint64_t))(v5 + 16);
      while (1)
      {
        v48(v44, v46, v4);
        v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v49(v44, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v44, 1, v4) == 1)
          break;
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v42, v44, v4);
        sub_1005169AC(v42);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v42, v4);
        v46 += v47;
        --v43;
        v44 = v63;
        if (!v43)
        {
          v28 = v62;
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease(v62);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_19:
      v49(v44, 1, 1, v4);
      swift_bridgeObjectRelease(v28);
    }
  }
  else
  {
    v39 = v26;
    swift_bridgeObjectRelease(v12);
    v40 = _convertNSErrorToError(_:)(v39);

    swift_willThrow(v41);
    v50 = swift_bridgeObjectRetain_n(a2, 2);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter(v51);
    if (os_log_type_enabled(v51, v52))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = (void *)swift_slowAlloc(32, -1);
      v66 = v55;
      *(_DWORD *)v54 = 136315138;
      swift_bridgeObjectRetain(a2);
      v64 = sub_100228BD8(v58, (unint64_t)a2, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v54 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to remove specific contactID: %s, removing all", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    sub_1005169AC(v59);
    swift_errorRelease(v40);
  }
}

void sub_100517B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  _QWORD v18[7];

  v17[6] = 0;
  v4 = type metadata accessor for SHA256(0);
  v17[4] = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SHA256Digest(0);
  v17[5] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for String.Encoding(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v8);
  v11 = String.data(using:allowLossyConversion:)(v10, 0, a1, a2);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v18[5] = v11;
  v18[6] = v13;
  v14 = sub_100008384(&qword_1007B5220);
  Optional.unwrap(_:file:line:)(v18, sub_10051B238, 0, "DaemoniOSLibrary/SDXPCHelperImageCache.swift", 44, 2, 296, v14);
  sub_100225AA0(v11, v13);
  v15 = v18[1];
  v16 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v4, v16);
  __asm { BR              X10 }
}

uint64_t sub_100517CCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  double v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v7 - 144) = v0;
  *(_WORD *)(v7 - 136) = v1;
  *(_BYTE *)(v7 - 134) = BYTE2(v1);
  *(_BYTE *)(v7 - 133) = BYTE3(v1);
  *(_BYTE *)(v7 - 132) = BYTE4(v1);
  *(_BYTE *)(v7 - 131) = BYTE5(v1);
  dispatch thunk of HashFunction.update(bufferPointer:)(v7 - 144, v7 - 144 + BYTE6(v1), v4, v6);
  sub_100225AB4(v0, v1);
  ((void (*)(uint64_t, uint64_t))dispatch thunk of HashFunction.finalize())(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 176) + 8))(v5, v4);
  *(_QWORD *)(v7 - 120) = v2;
  v8 = sub_100220D78(&qword_1007BD540, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest, (uint64_t)&protocol conformance descriptor for SHA256Digest);
  *(_QWORD *)(v7 - 112) = v8;
  v9 = sub_100244348((_QWORD *)(v7 - 144));
  v10 = *(_QWORD *)(v7 - 168);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16))(v9, v3, v2);
  sub_10023A834((_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 120));
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)((_QWORD *)(v7 - 104), sub_1004744BC, 0, &type metadata for Data._Representation, v2, v8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v2);
  v11 = *(_QWORD *)(v7 - 104);
  v12 = *(_QWORD *)(v7 - 96);
  sub_10022E75C((_QWORD *)(v7 - 144));
  v13 = Data.base64EncodedString(options:)(0);
  v14 = sub_1004312F0(5, v13._countAndFlagsBits, (unint64_t)v13._object);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  *(_QWORD *)&v21 = swift_bridgeObjectRelease((const char *)v13._object).n128_u64[0];
  v22 = swift_bridgeObjectRetain(v20, v21);
  v23 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const char *, __n128))Substring.distance(from:to:))(v14, v16, v14, v16, v18, v20, v22);
  swift_bridgeObjectRelease(v20);
  if (v23 != 5)
  {
    if (qword_1007B4238 != -1)
      swift_once(&qword_1007B4238, sub_100516250);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007C4D78);
    v25 = swift_bridgeObjectRetain_n(v20, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.fault.getter();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      *(_QWORD *)(v7 - 168) = v12;
      v29 = swift_slowAlloc(12, -1);
      *(_DWORD *)(v7 - 184) = v28;
      v30 = (_DWORD *)v29;
      v31 = swift_slowAlloc(32, -1);
      *(_QWORD *)(v7 - 176) = v31;
      *(_QWORD *)(v7 - 144) = v31;
      *(_QWORD *)(v7 - 160) = v11;
      *v30 = 136315138;
      *(_QWORD *)(v7 - 200) = v30 + 1;
      *(_QWORD *)(v7 - 192) = v30;
      swift_bridgeObjectRetain(v20);
      v32 = static String._fromSubstring(_:)(v14, v16, v18, v20);
      v34 = v33;
      swift_bridgeObjectRelease(v20);
      v35 = v32;
      v12 = *(_QWORD *)(v7 - 168);
      *(_QWORD *)(v7 - 104) = sub_100228BD8(v35, (unint64_t)v34, (uint64_t *)(v7 - 144));
      v11 = *(_QWORD *)(v7 - 160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 - 104, v7 - 96, *(_QWORD *)(v7 - 200));
      swift_bridgeObjectRelease_n(v20, 2);
      swift_bridgeObjectRelease(v34);
      v36 = *(uint8_t **)(v7 - 192);
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)*(_DWORD *)(v7 - 184), "Failed to form valid lossyContactID, unexpected hash length: %s", v36, 0xCu);
      *(_QWORD *)(v7 - 184) = v26;
      v37 = *(_QWORD *)(v7 - 176);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v20, 2);
    }
  }
  v38 = static String._fromSubstring(_:)(v14, v16, v18, v20);
  swift_bridgeObjectRelease(v20);
  sub_100225AB4(v11, v12);
  sub_100225AB4(v0, v1);
  return v38;
}

uint64_t sub_1005181B8(CGImage *a1, uint64_t a2, const char *a3, const char *a4)
{
  return sub_1005183A8(a1, a2, a3, a4);
}

uint64_t sub_1005183A8(CGImage *a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  CGImage *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v4;
  v28 = a2;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4238 != -1)
    swift_once(&qword_1007B4238, sub_100516250);
  v13 = type metadata accessor for Logger(0);
  sub_100221DF8(v13, (uint64_t)qword_1007C4D78);
  v14 = swift_bridgeObjectRetain_n(a3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v25 = v12;
    v17 = swift_slowAlloc(12, -1);
    v26 = a1;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v27 = v10;
    v24 = v9;
    v20 = v19;
    v31 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain(a3);
    v29 = sub_100228BD8(v28, (unint64_t)a3, &v31);
    v12 = v25;
    v5 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v18 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v21 = v20;
    v9 = v24;
    v10 = v27;
    swift_slowDealloc(v21, -1, -1);
    v22 = v18;
    a1 = v26;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  result = sub_1005196D8();
  if (!v5)
  {
    sub_10051A210(v28, a3, a4, (uint64_t)v12);
    sub_10051B088(a1, (uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t static SDXPCHelperImageCache.cacheIsEmpty()()
{
  id v0;
  uint64_t v1;
  __n128 v2;
  const char *v3;
  const char *v4;
  NSString v5;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (qword_1007B4250 != -1)
    swift_once(&qword_1007B4250, sub_100516548);
  v1 = type metadata accessor for URL(0);
  sub_100221DF8(v1, (uint64_t)qword_1007C4DB0);
  URL.path.getter(v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  LODWORD(v4) = objc_msgSend(v0, "fileExistsAtPath:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  return v4 ^ 1;
}

uint64_t sub_100518804(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v3;
  CGImageRef ImageAtIndex;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSURL *v16;
  const __CFURL *v17;
  const __CFURL *v18;
  CGImageSource *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  CGImage *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CGImage *v40;
  uint64_t v41;
  CGImage *v42;
  void (*v43)(char *, uint64_t);
  os_log_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  CGImage *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v44 - v13;
  sub_1005196D8();
  if (!v3)
  {
    sub_10051A210(a1, a2, a3, (uint64_t)v14);
    URL._bridgeToObjectiveC()(v16);
    v18 = v17;
    v19 = CGImageSourceCreateWithURL(v17, 0);

    if (v19)
    {
      ImageAtIndex = CGImageSourceCreateImageAtIndex(v19, 0, 0);

      if (qword_1007B4238 != -1)
        swift_once(&qword_1007B4238, sub_100516250);
      v20 = type metadata accessor for Logger(0);
      sub_100221DF8(v20, (uint64_t)qword_1007C4D78);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      swift_bridgeObjectRetain_n(a2, 2);
      v48 = ImageAtIndex;
      v21 = Logger.logObject.getter(v48);
      v22 = static os_log_type_t.default.getter(v21);
      v46 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc(32, -1);
        v47 = a1;
        v24 = v23;
        v45 = swift_slowAlloc(96, -1);
        v51 = v45;
        *(_DWORD *)v24 = 136315650;
        v44 = v21;
        swift_bridgeObjectRetain(a2);
        v49 = sub_100228BD8(v47, (unint64_t)a2, &v51);
        v47 = (uint64_t)ImageAtIndex;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 4);
        swift_bridgeObjectRelease_n(a2, 3);
        *(_WORD *)(v24 + 12) = 2080;
        v25 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v26 = dispatch thunk of CustomStringConvertible.description.getter(v8, v25);
        v28 = (const char *)v27;
        v49 = sub_100228BD8(v26, v27, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 14);
        v29 = swift_bridgeObjectRelease(v28);
        v30 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
        v30(v12, v8, v29);
        *(_WORD *)(v24 + 22) = 2080;
        v49 = v47;
        v31 = sub_100008384(&qword_1007C4E30);
        v32 = Optional.debugDescription.getter(v31);
        v34 = (const char *)v33;
        v49 = sub_100228BD8(v32, v33, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 24);
        v35 = v48;

        swift_bridgeObjectRelease(v34);
        v36 = v44;
        v37 = v45;
        swift_arrayDestroy(v45, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v24, -1, -1);

        ((void (*)(char *, uint64_t))v30)(v14, v8);
        return v47;
      }
      else
      {
        v42 = v48;

        v43 = *(void (**)(char *, uint64_t))(v9 + 8);
        v43(v12, v8);
        swift_bridgeObjectRelease_n(a2, 2);
        v43(v14, v8);
      }
    }
    else
    {
      v38 = type metadata accessor for SDXPCHelperImageCache.CacheError(0);
      v39 = sub_100220D78(&qword_1007C4E28, type metadata accessor for SDXPCHelperImageCache.CacheError, (uint64_t)&unk_1005DB9F4);
      swift_allocError(v38, v39, 0, 0);
      ImageAtIndex = v40;
      (*(void (**)(CGImage *, char *, uint64_t))(v9 + 16))(v40, v14, v8);
      v41 = swift_storeEnumTagMultiPayload(ImageAtIndex, v38, 2);
      swift_willThrow(v41);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return (uint64_t)ImageAtIndex;
}

uint64_t static SDXPCHelperImageCache.cacheCount()()
{
  return sub_100518CD8();
}

uint64_t sub_100518CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  NSURL *v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  id v33;
  NSURL *v34;
  void *v35;
  void *v36;
  id v37;
  char *v38;
  char *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  _QWORD v52[2];
  id v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  unint64_t v60;
  char *v61;
  void (*v62)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v63;

  v1 = v0;
  v2 = sub_100008384((uint64_t *)&unk_1007B5200);
  v3 = __chkstk_darwin(v2);
  v55 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (uint64_t)v52 - v5;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v58 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v54 = (char *)v52 - v12;
  v13 = __chkstk_darwin(v11);
  v61 = (char *)v52 - v14;
  __chkstk_darwin(v13);
  v57 = (char *)v52 - v15;
  v16 = objc_opt_self(NSFileManager);
  v17 = (unint64_t)objc_msgSend((id)v16, "defaultManager");
  if (qword_1007B4250 != -1)
    goto LABEL_40;
  while (1)
  {
    sub_100221DF8(v7, (uint64_t)qword_1007C4DB0);
    URL._bridgeToObjectiveC()(v18);
    v20 = v19;
    v63 = 0;
    v21 = objc_msgSend((id)v17, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v19, 0, 0, &v63);

    v22 = v63;
    if (!v21)
    {
      v32 = v22;
LABEL_37:
      _convertNSErrorToError(_:)(v32);

      return swift_willThrow(v51);
    }
    v52[1] = v1;
    v53 = (id)v16;
    v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v7);

    v63 = (char *)_swiftEmptyArrayStorage;
    v60 = *(_QWORD *)(v1 + 16);
    if (v60)
    {
      v16 = 0;
      v56 = v6;
      v23 = v57;
      v59 = (_QWORD *)v1;
      while (v16 < *(_QWORD *)(v1 + 16))
      {
        v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v24 = *(_QWORD *)(v8 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v6, v1 + v17 + v24 * v16, v7);
        v25 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56);
        v25(v6, 0, 1, v7);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          goto LABEL_18;
        v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
        v27 = v26(v23, v6, v7);
        if ((URL.hasDirectoryPath.getter(v27) & 1) != 0)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
        }
        else
        {
          v26(v61, (uint64_t)v23, v7);
          v28 = v63;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v63);
          v62 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100229810(0, *((_QWORD *)v28 + 2) + 1, 1);
            v28 = v63;
          }
          v31 = *((_QWORD *)v28 + 2);
          v30 = *((_QWORD *)v28 + 3);
          if (v31 >= v30 >> 1)
          {
            sub_100229810(v30 > 1, v31 + 1, 1);
            v28 = v63;
          }
          *((_QWORD *)v28 + 2) = v31 + 1;
          v26(&v28[v17 + v31 * v24], (uint64_t)v61, v7);
          v63 = v28;
          v25 = v62;
          v6 = v56;
          v23 = v57;
        }
        ++v16;
        v1 = (uint64_t)v59;
        if (v60 == v16)
          goto LABEL_17;
      }
      __break(1u);
      goto LABEL_39;
    }
    v25 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56);
LABEL_17:
    v25(v6, 1, 1, v7);
LABEL_18:
    v62 = v25;
    swift_bridgeObjectRelease((const char *)v1);
    sub_100232FE8(v6);
    v59 = v63;
    v33 = objc_msgSend(v53, "defaultManager");
    if (qword_1007B4248 != -1)
      swift_once(&qword_1007B4248, sub_1005164B4);
    sub_100221DF8(v7, (uint64_t)qword_1007C4D98);
    URL._bridgeToObjectiveC()(v34);
    v36 = v35;
    v63 = 0;
    v37 = objc_msgSend(v33, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v35, 0, 0, &v63);

    v38 = v63;
    if (!v37)
    {
      v32 = v38;
      swift_release(v59);
      goto LABEL_37;
    }
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v7);

    v63 = (char *)_swiftEmptyArrayStorage;
    v39 = v54;
    v1 = (uint64_t)v55;
    v40 = v62;
    v61 = *(char **)(v16 + 16);
    if (!v61)
      break;
    v17 = 0;
    v60 = v16;
    while (v17 < *(_QWORD *)(v16 + 16))
    {
      v41 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v6 = *(_QWORD *)(v8 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v1, v16 + v41 + v6 * v17, v7);
      v40(v1, 0, 1, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v1, 1, v7) == 1)
        goto LABEL_34;
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
      v43 = v42(v39, v1, v7);
      if ((URL.hasDirectoryPath.getter(v43) & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v7);
      }
      else
      {
        v42(v58, (uint64_t)v39, v7);
        v44 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
        {
          sub_100229810(0, *((_QWORD *)v44 + 2) + 1, 1);
          v44 = v63;
        }
        v46 = *((_QWORD *)v44 + 2);
        v45 = *((_QWORD *)v44 + 3);
        if (v46 >= v45 >> 1)
        {
          sub_100229810(v45 > 1, v46 + 1, 1);
          v44 = v63;
        }
        *((_QWORD *)v44 + 2) = v46 + 1;
        v42(&v44[v41 + v46 * v6], (uint64_t)v58, v7);
        v63 = v44;
        v39 = v54;
        v1 = (uint64_t)v55;
        v40 = v62;
      }
      ++v17;
      v16 = v60;
      if (v61 == (char *)v17)
        goto LABEL_33;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once(&qword_1007B4250, sub_100516548);
  }
LABEL_33:
  v40(v1, 1, 1, v7);
LABEL_34:
  swift_bridgeObjectRelease((const char *)v16);
  sub_100232FE8(v1);
  v47 = v63;
  v48 = v59[2];
  swift_release(v59);
  v49 = *((_QWORD *)v47 + 2);
  swift_release(v47);
  result = v48 + v49;
  if (__OFADD__(v48, v49))
    __break(1u);
  return result;
}

id SDXPCHelperImageCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id SDXPCHelperImageCache.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return objc_msgSendSuper2(&v2, "init");
}

id SDXPCHelperImageCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100519438()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  NSURL *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (qword_1007B4250 != -1)
    swift_once(&qword_1007B4250, sub_100516548);
  v1 = type metadata accessor for URL(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C4DB0);
  URL._bridgeToObjectiveC()(v3);
  v5 = v4;
  v17 = 0;
  v6 = objc_msgSend(v0, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v4, 0, 0, &v17);

  v7 = (id)v17;
  if (v6)
  {
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v1);

    v9 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRelease((const char *)v8);
    if (qword_1007B4238 != -1)
      swift_once(&qword_1007B4238, sub_100516250);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100221DF8(v10, (uint64_t)qword_1007C4D78);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(28, -1);
      *(_DWORD *)v14 = 134218496;
      v17 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v14 + 4);
      *(_WORD *)(v14 + 12) = 2048;
      v17 = 500;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v14 + 14);
      *(_WORD *)(v14 + 22) = 1024;
      LODWORD(v17) = v9 > 0x1F4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, (char *)&v17 + 4, v14 + 24);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{BOOL}d", (uint8_t *)v14, 0x1Cu);
      swift_slowDealloc(v14, -1, -1);
    }

    if (v9 >= 0x1F5)
      sub_1005169AC(v2);
  }
  else
  {
    v15 = v7;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow(v16);
  }
}

uint64_t sub_1005196D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  NSString v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  double v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  void *v49;
  void *v50;
  NSString v51;
  NSString v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  NSURL *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t inited;
  uint64_t v70;
  NSString *v71;
  NSString *v72;
  const char *v73;
  Class v74;
  double v75;
  id v76;
  id v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  id v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  NSObject *v86;
  Class isa;
  char *v88;
  __int128 v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD v99[3];
  char v100[8];
  id v101;
  const char *v102;
  uint64_t v103;
  _BYTE v104[72];

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v6);
  v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLResourceValues(0);
  isa = v8[-1].isa;
  __chkstk_darwin(v8);
  v97 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4258 != -1)
LABEL_46:
    swift_once(&qword_1007B4258, sub_100516560);
  v10 = sub_100221DF8(v2, (uint64_t)qword_1007C4DC8);
  v11 = v1;
  sub_1005169AC(v10);
  if (v1)
  {
    swift_errorRelease(v1);
    v11 = 0;
  }
  v98 = v11;
  v95 = v5;
  v94 = v3;
  v96 = v2;
  if (qword_1007B4260 != -1)
    swift_once(&qword_1007B4260, sub_100516624);
  v12 = (void *)qword_1007C4DE0;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "stringForKey:", v13);

  if (v14)
  {
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v18 = String._bridgeToObjectiveC()();
  v19 = MGGetStringAnswer();
  if (!v19)
    __break(1u);
  v20 = (void *)v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  v5 = (const char *)&type metadata for Any;
  if (!v17
    || (v21 != v15 || v17 != v23) && (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v15, v17, 0) & 1) == 0)
  {
    v92 = v21;
    if (qword_1007B4238 != -1)
      swift_once(&qword_1007B4238, sub_100516250);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_100221DF8(v29, (uint64_t)qword_1007C4D78);
    swift_bridgeObjectRetain(v17);
    v31 = swift_bridgeObjectRetain_n(v23, 2);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      *(_QWORD *)&v89 = "Key should encode to UTF8.";
      LODWORD(v88) = v33;
      v90 = v32;
      v91 = v30;
      v34 = swift_slowAlloc(22, -1);
      v35 = swift_slowAlloc(64, -1);
      v103 = v35;
      *(_DWORD *)v34 = 136315394;
      swift_bridgeObjectRetain(v23);
      v101 = (id)sub_100228BD8(v92, (unint64_t)v23, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v34 + 4);
      swift_bridgeObjectRelease_n(v23, 3);
      *(_WORD *)(v34 + 12) = 2080;
      v36 = v17;
      v37 = v15;
      if (!v17)
      {
        v101 = 0;
        v102 = (const char *)0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v102);
        v37 = 0xD000000000000015;
        v36 = (const char *)0x8000000100612DF0;
      }
      swift_bridgeObjectRetain(v17);
      v101 = (id)sub_100228BD8(v37, (unint64_t)v36, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v34 + 14);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease(v36);
      v38 = v90;
      _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v88, "currentBuild(%s) != lastBuildUpdate(%s), purging.", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease_n(v23, 2);
    }
    v28 = &qword_1007B4000;
    if (qword_1007B4250 != -1)
      swift_once(&qword_1007B4250, sub_100516548);
    v39 = sub_100221DF8(v96, (uint64_t)qword_1007C4DB0);
    v40 = v98;
    sub_1005169AC(v39);
    if (v40)
    {
      swift_bridgeObjectRelease(v23);
      swift_errorRetain(v40);
      v41 = swift_errorRetain(v40);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(12, -1);
        v45 = (void *)swift_slowAlloc(32, -1);
        v101 = v45;
        *(_DWORD *)v44 = 136315138;
        swift_getErrorValue(v40, v100, v99);
        v46 = Error.localizedDescription.getter(v99[1], v99[2]);
        v48 = (const char *)v47;
        v103 = sub_100228BD8(v46, v47, (uint64_t *)&v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104, v44 + 4);
        swift_bridgeObjectRelease(v48);
        swift_errorRelease(v40);
        swift_errorRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Couldn't purge for bundle version change: %s", v44, 0xCu);
        swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
        v49 = v45;
        v28 = &qword_1007B4000;
        swift_slowDealloc(v49, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        v25 = swift_errorRelease(v40);
        v98 = 0;
        v26 = v95;
        v3 = v96;
        v27 = v94;
        v5 = (const char *)&type metadata for Any;
        goto LABEL_30;
      }
      swift_errorRelease(v40);
      swift_errorRelease(v40);
      swift_errorRelease(v40);

      v98 = 0;
    }
    else
    {
      v98 = 0;
      v50 = (void *)qword_1007C4DE0;
      v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      v52 = String._bridgeToObjectiveC()();
      objc_msgSend(v50, "setObject:forKey:", v51, v52);

    }
    v26 = v95;
    v3 = v96;
    v27 = v94;
    v5 = (const char *)&type metadata for Any;
    goto LABEL_30;
  }
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v23).n128_u64[0];
  swift_bridgeObjectRelease(v17, v24);
  v26 = v95;
  v3 = v96;
  v27 = v94;
  v28 = &qword_1007B4000;
LABEL_30:
  URLResourceValues.init()(v25);
  URLResourceValues.isExcludedFromBackup.setter(1);
  v53 = sub_100008384(&qword_1007B5318);
  v54 = *(_QWORD *)(v27 + 72);
  v55 = *(unsigned __int8 *)(v27 + 80);
  v56 = (v55 + 32) & ~v55;
  v57 = swift_allocObject(v53, v56 + 2 * v54, v55 | 7);
  *(_OWORD *)(v57 + 16) = xmmword_1005CF250;
  v95 = (const char *)v57;
  v58 = v57 + v56;
  if (v28[74] != -1)
    swift_once(&qword_1007B4250, sub_100516548);
  v86 = v8;
  v59 = sub_100221DF8(v3, (uint64_t)qword_1007C4DB0);
  v8 = *(NSObject **)(v27 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v58, v59, v3);
  v92 = v54;
  v91 = v58;
  v60 = v58 + v54;
  v2 = (uint64_t)v93;
  if (qword_1007B4248 != -1)
    swift_once(&qword_1007B4248, sub_1005164B4);
  v61 = sub_100221DF8(v3, (uint64_t)qword_1007C4D98);
  v90 = v8;
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v60, v61, v3);
  v62 = 0;
  v63 = 0;
  v89 = xmmword_1005CD2A0;
  v88 = (char *)&type metadata for Any + 8;
  while (1)
  {
    v1 = v62;
    if (v63 >= *((_QWORD *)v95 + 2))
    {
      __break(1u);
      goto LABEL_46;
    }
    ((void (*)(uint64_t, unint64_t, uint64_t))v90)(v2, v91 + v63 * v92, v3);
    v8 = *(NSObject **)(v27 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(v2, 0, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v2, 1, v3) == 1)
      goto LABEL_41;
    (*(void (**)(const char *, uint64_t, uint64_t))(v27 + 32))(v26, v2, v3);
    v64 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v65);
    v67 = v66;
    v68 = sub_100008384(&qword_1007C1940);
    inited = swift_initStackObject(v68, v104);
    *(_OWORD *)(inited + 16) = v89;
    *(_QWORD *)(inited + 32) = NSFileProtectionKey;
    type metadata accessor for FileProtectionType(0);
    *(_QWORD *)(inited + 64) = v70;
    *(_QWORD *)(inited + 40) = NSFileProtectionCompleteUnlessOpen;
    v71 = NSFileProtectionKey;
    v72 = NSFileProtectionCompleteUnlessOpen;
    v73 = (const char *)sub_10021F914(inited);
    type metadata accessor for FileAttributeKey(0);
    v5 = v26;
    sub_100220D78(&qword_1007B4C80, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1005CE808);
    v74 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v75 = swift_bridgeObjectRelease(v73).n128_u64[0];
    v101 = 0;
    LODWORD(v73) = objc_msgSend(v64, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v67, 1, v74, &v101, v75);

    v76 = v101;
    if (!(_DWORD)v73)
    {
      v82 = v101;
      swift_bridgeObjectRelease(v95);
      _convertNSErrorToError(_:)(v76);

      swift_willThrow(v83);
      (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
      return (*((uint64_t (**)(char *, NSObject *, __n128))isa + 1))(v97, v86, v84);
    }
    v77 = v101;
    v78 = v98;
    URL.setResourceValues(_:)(v97, v79);
    v26 = v5;
    if (v78)
      break;
    v98 = 0;
    v27 = v94;
    v3 = v96;
    (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
    v62 = 1;
    v63 = 1;
    v2 = (uint64_t)v93;
    if ((v1 & 1) != 0)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v93, 1, 1, v3);
LABEL_41:
      v80 = swift_bridgeObjectRelease(v95);
      return (*((uint64_t (**)(char *, NSObject *, __n128))isa + 1))(v97, v86, v80);
    }
  }
  (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
  v84 = swift_bridgeObjectRelease(v95);
  return (*((uint64_t (**)(char *, NSObject *, __n128))isa + 1))(v97, v86, v84);
}

void sub_10051A210(uint64_t a1@<X0>, const char *a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  unint64_t v46;

  v41 = a1;
  v39 = a4;
  v40 = type metadata accessor for URL(0);
  v37 = *(_QWORD *)(v40 - 8);
  v6 = __chkstk_darwin(v40);
  v36 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v38 = (char *)v31 - v8;
  v9 = type metadata accessor for SHA256(0);
  v31[0] = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v32 = type metadata accessor for SHA256Digest(0);
  v31[2] = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v31[1] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.Encoding(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (uint64_t)a3;
  v35 = a3;
  swift_bridgeObjectRetain(a3);
  sub_10051B254(&v43);
  v42 = v43;
  v15 = sub_100008384((uint64_t *)&unk_1007BD6A0);
  v33 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v15;
  v16 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v15, v33);
  v18 = v17;
  v43 = v41;
  v44 = a2;
  swift_bridgeObjectRetain(a2);
  v19._countAndFlagsBits = 124;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = v16;
  v20._object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease((const char *)v18);
  v21 = v43;
  v22 = v44;
  static String.Encoding.utf8.getter(v23);
  v24 = String.data(using:allowLossyConversion:)(v14, 0, v21, v22);
  v26 = v25;
  v27 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v27);
  v45 = v24;
  v46 = v26;
  v28 = sub_100008384(&qword_1007B5220);
  Optional.unwrap(_:file:line:)(&v43, sub_10051B238, 0, "DaemoniOSLibrary/SDXPCHelperImageCache.swift", 44, 2, 272, v28);
  sub_100225AA0(v24, v26);
  v29 = v44;
  v30 = sub_100220D78((unint64_t *)&unk_1007BD690, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v9, v30);
  __asm { BR              X10 }
}

void sub_10051AA68(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  __n128 v23;
  uint64_t v24;
  uint8_t *v25;
  id v26;
  int v27;
  id v28;
  unsigned __int8 v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint8_t *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v33 - v9;
  if (qword_1007B4238 != -1)
    goto LABEL_11;
  while (1)
  {
    v11 = type metadata accessor for Logger(0);
    sub_100221DF8(v11, (uint64_t)qword_1007C4D78);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12 = v37(v10, a1, v4);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v36 = a1;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc(32, -1);
      v35 = v2;
      v18 = v17;
      v39 = v17;
      v34 = v8;
      *(_DWORD *)v16 = 136315138;
      v33 = v16 + 4;
      v19 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v20 = dispatch thunk of CustomStringConvertible.description.getter(v4, v19);
      v22 = (const char *)v21;
      v38 = sub_100228BD8(v20, v21, &v39);
      v8 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v33);
      v23 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v23);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "markPurgeable: %s", v16, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      v24 = v18;
      v2 = v35;
      swift_slowDealloc(v24, -1, -1);
      v25 = v16;
      a1 = v36;
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }

    sub_100221EDC(0, &qword_1007C4E48, NSFileHandle_ptr);
    v37(v8, a1, v4);
    v26 = sub_10051ADEC((uint64_t)v8);
    if (v2)
      break;
    v2 = v26;
    v27 = objc_msgSend(v26, "fileDescriptor");
    v39 = 67585;
    sub_10051AF00(&v39, v27, a1, &v38);
    v39 = 0;
    v29 = objc_msgSend(v2, "closeAndReturnError:", &v39);
    v30 = v39;
    if ((v29 & 1) != 0)
    {
      v28 = (id)v39;

      return;
    }
    v31 = (id)v39;
    a1 = _convertNSErrorToError(_:)(v30);

    swift_willThrow(v32);
    swift_unexpectedError(a1, "DaemoniOSLibrary/SDXPCHelperImageCache.swift", 44, 1, 171);
    __break(1u);
LABEL_11:
    swift_once(&qword_1007B4238, sub_100516250);
  }
}

id sub_10051ADEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14;

  v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v5 = v4;
  v14 = 0;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "fileHandleForReadingFromURL:error:", v4, &v14);

  v7 = v14;
  if (v6)
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow();
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_10051AF00(void *a1, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  int v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v16;
  id v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;

  result = ffsctl(a2, 0xC0084A44uLL, a1, 0);
  if ((_DWORD)result)
  {
    v7 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSPOSIXErrorDomain);
    v9 = v8;
    v10 = v7;
    v11 = sub_100008384((uint64_t *)&unk_1007C4210);
    inited = swift_initStackObject(v11, &v22);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorKey);
    *(_QWORD *)(inited + 40) = v13;
    v14 = type metadata accessor for URL(0);
    *(_QWORD *)(inited + 72) = v14;
    v15 = sub_100244348((_QWORD *)(inited + 48));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v15, a3, v14);
    v16 = (const char *)sub_10021E744(inited);
    v17 = objc_allocWithZone((Class)NSError);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(v17, "initWithDomain:code:userInfo:", v18, v10, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    result = swift_willThrow(v21);
    *a4 = v20;
  }
  return result;
}

void sub_10051B088(CGImage *a1, uint64_t a2)
{
  uint64_t v2;
  NSURL *v5;
  const __CFURL *v6;
  const __CFURL *v7;
  CGImageDestination *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1005169AC(a2);
  if (!v2)
  {
    sub_100519438();
    URL._bridgeToObjectiveC()(v5);
    v7 = v6;
    v8 = CGImageDestinationCreateWithURL(v6, kUTTypePNG, 1uLL, 0);

    if (v8)
    {
      CGImageDestinationAddImage(v8, a1, 0);
      if (CGImageDestinationFinalize(v8))
      {
        sub_10051AA68(a2);
      }
      else
      {
        v15 = type metadata accessor for SDXPCHelperImageCache.CacheError(0);
        v16 = sub_100220D78(&qword_1007C4E28, type metadata accessor for SDXPCHelperImageCache.CacheError, (uint64_t)&unk_1005DB9F4);
        swift_allocError(v15, v16, 0, 0);
        v18 = v17;
        v19 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a2, v19);
        v20 = swift_storeEnumTagMultiPayload(v18, v15, 1);
        swift_willThrow(v20);
      }

    }
    else
    {
      v9 = type metadata accessor for SDXPCHelperImageCache.CacheError(0);
      v10 = sub_100220D78(&qword_1007C4E28, type metadata accessor for SDXPCHelperImageCache.CacheError, (uint64_t)&unk_1005DB9F4);
      swift_allocError(v9, v10, 0, 0);
      v12 = v11;
      v13 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
      v14 = swift_storeEnumTagMultiPayload(v12, v9, 0);
      swift_willThrow(v14);
    }
  }
}

unint64_t sub_10051B238()
{
  return 0xD00000000000001ALL;
}

void sub_10051B254(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_1003A9B48(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_10051B2BC(v4);
  *a1 = v2;
}

void sub_10051B2BC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  const char *v101;
  double v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  _QWORD *v111;
  Swift::Int v112;
  Swift::Int v113;
  Swift::Int v114;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_10051B9A4(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v112 = v4;
  v109 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v111 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v103 = *v109;
      while (1)
      {
        v104 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v103)
          goto LABEL_161;
        v100 = (char *)v101;
        v105 = *(_QWORD *)&v101[16 * v104 + 32];
        v106 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_10051BA70((char *)(v103 + 16 * v105), (char *)(v103 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v103 + 16 * v106, __dst);
        if (v1)
          goto LABEL_116;
        if (v106 < v105)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_1003A9300((uint64_t)v100);
        if (v104 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v107 = &v100[16 * v104 + 32];
        *(_QWORD *)v107 = v105;
        *((_QWORD *)v107 + 1) = v106;
        v108 = *((_QWORD *)v100 + 2);
        if (v12 > v108)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v108 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v108 - 1;
        v12 = v108 - 1;
        if (v108 <= 2)
          goto LABEL_117;
      }
    }
    v111 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v111 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v110 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v113 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v110 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v112)
      {
        if (__OFADD__(v13, v112))
          goto LABEL_155;
        if (v13 + v112 >= v3)
          v36 = v3;
        else
          v36 = v13 + v112;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1003A8EEC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_1003A8EEC((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v113;
    if (v9 >= v113)
    {
      v8 = v111;
      goto LABEL_120;
    }
  }
  v114 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_10051BA70((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v114;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  *(_QWORD *)&v102 = swift_bridgeObjectRelease(v101).n128_u64[0];
  v111[2] = 0;
  swift_bridgeObjectRelease((const char *)v111, v102);
}

uint64_t sub_10051B9A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10051BA70(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v15, *(_QWORD *)v4, v16, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_1003A9258((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10051BD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  unint64_t v22;
  char v23;
  __n128 v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  char *v38;

  v35 = a2;
  v36 = a3;
  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v34 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v38 = (char *)_swiftEmptyArrayStorage;
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v30 = (char *)&v28 - v12;
    v31 = v6;
    v13 = 0;
    v32 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v15 = *(_QWORD *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + v14 + v15 * v13, v7);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        goto LABEL_15;
      v16 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
      v17 = v30;
      v18 = v16(v30, v6, v7);
      v19 = URL.absoluteString.getter(v18);
      v21 = v20;
      v37[2] = v19;
      v37[3] = v20;
      v37[0] = v35;
      v37[1] = v36;
      v22 = sub_100221E10();
      v23 = StringProtocol.contains<A>(_:)(v37, &type metadata for String, &type metadata for String, v22, v22);
      v24 = swift_bridgeObjectRelease(v21);
      if ((v23 & 1) != 0)
      {
        ((void (*)(char *, char *, uint64_t, __n128))v16)(v34, v17, v7, v24);
        v25 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        {
          sub_100229810(0, *((_QWORD *)v25 + 2) + 1, 1);
          v25 = v38;
        }
        v27 = *((_QWORD *)v25 + 2);
        v26 = *((_QWORD *)v25 + 3);
        if (v27 >= v26 >> 1)
        {
          sub_100229810(v26 > 1, v27 + 1, 1);
          v25 = v38;
        }
        *((_QWORD *)v25 + 2) = v27 + 1;
        result = v16(&v25[v14 + v27 * v15], v34, v7);
        v38 = v25;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      }
      ++v13;
      a1 = v32;
      v6 = v31;
      if (v33 == v13)
      {
        v29(v31, 1, 1, v7);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_15:
    swift_bridgeObjectRelease((const char *)a1);
    sub_100232FE8((uint64_t)v6);
    return (uint64_t)v38;
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC5evict17contactIdentifierySS_tFZ_0(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4240 != -1)
    swift_once(&qword_1007B4240, sub_1005162E0);
  v11 = swift_allocObject(&unk_10072DFF0, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  aBlock[4] = sub_10051CC74;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072E008;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008384((uint64_t *)&unk_1007B6410);
  v16 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v4, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC05clearE8WithSyncyySbFZ_0(char a1)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  BOOL v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void **aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void *v28;
  uint64_t v29;

  isEscapingClosureAtFileLocation = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  __chkstk_darwin(isEscapingClosureAtFileLocation);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4238 != -1)
    swift_once(&qword_1007B4238, sub_100516250);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007C4D78);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 67109120;
    LODWORD(aBlock) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v13 + 4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "clearCacheWithSync: %{BOOL}d", v13, 8u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = qword_1007B4240 == -1;
  if ((a1 & 1) == 0)
    goto LABEL_10;
  if (qword_1007B4240 != -1)
    swift_once(&qword_1007B4240, sub_1005162E0);
  v15 = qword_1007C4D90;
  v16 = swift_allocObject(&unk_10072E090, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_100516780;
  *(_QWORD *)(v16 + 24) = 0;
  v28 = sub_10044C074;
  v29 = v16;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1005477CC;
  v27 = &unk_10072E0A8;
  v4 = (char *)_Block_copy(&aBlock);
  v5 = v29;
  swift_retain();
  swift_release(v5);
  dispatch_sync(v15, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 92, 49, 34, 1);
  result = swift_release(v16);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_10:
    if (!v14)
      swift_once(&qword_1007B4240, sub_1005162E0);
    v28 = sub_100516780;
    v29 = 0;
    aBlock = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_10025BBB4;
    v27 = &unk_10072E058;
    v18 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v18);
    v23 = _swiftEmptyArrayStorage;
    v19 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_100008384((uint64_t *)&unk_1007B6410);
    v21 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, isEscapingClosureAtFileLocation, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, isEscapingClosureAtFileLocation);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release(v29);
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC12purgeAvatarsyyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD aBlock[6];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4240 != -1)
    swift_once(&qword_1007B4240, sub_1005162E0);
  aBlock[4] = sub_100516F84;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072E030;
  v7 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v7);
  v13 = _swiftEmptyArrayStorage;
  v8 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v9 = sub_100008384((uint64_t *)&unk_1007B6410);
  v10 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v13, v9, v10, v0, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v2, v7);
  _Block_release(v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC03setD0_6forKey10contactIDsySo10CGImageRefa_SSSaySSGtFZ_0(void *a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4240 != -1)
    swift_once(&qword_1007B4240, sub_1005162E0);
  v25 = qword_1007C4D90;
  v16 = (_QWORD *)swift_allocObject(&unk_10072DFA0, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_10051CC2C;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072DFB8;
  v17 = _Block_copy(aBlock);
  v18 = a1;
  *(_QWORD *)&v19 = swift_bridgeObjectRetain(a3).n128_u64[0];
  swift_bridgeObjectRetain(a4, v19);
  static DispatchQoS.unspecified.getter(v20);
  v26 = _swiftEmptyArrayStorage;
  v21 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100008384((uint64_t *)&unk_1007B6410);
  v23 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v28);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC11imageForKey_10contactIDsSo10CGImageRefaSgSS_SaySSGtFZ_0(uint64_t a1, const char *a2, const char *a3)
{
  return sub_100518804(a1, a2, a3);
}

uint64_t type metadata accessor for SDXPCHelperImageCache()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary21SDXPCHelperImageCache);
}

uint64_t type metadata accessor for SDXPCHelperImageCache.CacheError(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C4EC0;
  if (!qword_1007C4EC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDXPCHelperImageCache.CacheError);
  return result;
}

uint64_t sub_10051CBF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10051CC2C()
{
  uint64_t v0;

  return sub_1005181B8(*(CGImage **)(v0 + 16), *(_QWORD *)(v0 + 24), *(const char **)(v0 + 32), *(const char **)(v0 + 40));
}

uint64_t sub_10051CC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10051CC48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10051CC50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10051CC74()
{
  uint64_t v0;

  sub_100517224(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24));
}

uint64_t sub_10051CC7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_10051CC8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_10051CD94(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 2)
  {
    v4 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

uint64_t sub_10051CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_10051CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10051CED0(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_10051CED0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDXPCHelperImageCache.CacheError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10051CF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_10051CF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10051CED0(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_10051CFFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10051D084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C4EF8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C4EF8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10051D114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v13 = sub_10021FF50();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000038, 0x8000000100620160, v9, v6, v3, 0);
  qword_1007C4F10 = result;
  return result;
}

uint64_t sub_10051D2D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[7] = swift_task_alloc(v5);
  v2[8] = swift_task_alloc(v5);
  v6 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[10] = v7;
  v2[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10051D398, static AirDropActor.shared, 0);
}

uint64_t sub_10051D398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t result;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  int v41;
  NSString v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  NSString v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *loga;
  os_log_t log;

  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v3, v2, v5, v8);
  v11 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v12 = *(_QWORD *)(v1 + 72);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
    if (!v14)
    {
      v16 = objc_allocWithZone((Class)LSApplicationRecord);
      v17 = 0;
      v18 = sub_100528FF4(0xD000000000000019, 0x80000001006200B0, 1);
      v30 = *(_QWORD *)(v1 + 48);
      v31 = *(_QWORD *)(v1 + 32);
      v32 = *(void **)(v31 + 16);
      v60 = v31;
      *(_QWORD *)(v31 + 16) = v18;

      result = SFAirDropReceive.AskRequest.items.getter();
      v34 = 0;
      v58 = result + 56;
      v63 = v30;
      log = (os_log_t)result;
      v35 = -1;
      v36 = -1 << *(_BYTE *)(result + 32);
      if (-v36 < 64)
        v35 = ~(-1 << -(char)v36);
      v37 = v35 & *(_QWORD *)(result + 56);
      v61 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos;
      v62 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
      v59 = (unint64_t)(63 - v36) >> 6;
      while (1)
      {
        if (v37)
        {
          v44 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v45 = v44 | (v34 << 6);
        }
        else
        {
          v46 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
            __break(1u);
            swift_once(&qword_1007B4270, sub_10051D084);
            v19 = type metadata accessor for Logger(0);
            sub_100221DF8(v19, (uint64_t)qword_1007C4EF8);
            swift_errorRetain(v17);
            v20 = swift_errorRetain(v17);
            v21 = Logger.logObject.getter(v20);
            v22 = static os_log_type_t.error.getter(v21);
            if (os_log_type_enabled(v21, v22))
            {
              loga = v21;
              v23 = (uint8_t *)swift_slowAlloc(12, -1);
              v24 = (uint64_t *)swift_slowAlloc(8, -1);
              *(_DWORD *)v23 = 138412290;
              swift_errorRetain(v17);
              v25 = _swift_stdlib_bridgeErrorToNSError(v17);
              *(_QWORD *)(v34 - 8) = v25;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v34 - 8, v34, v23 + 4);
              *v24 = v25;
              swift_errorRelease(v17);
              swift_errorRelease(v17);
              _os_log_impl((void *)&_mh_execute_header, loga, v22, "Failed to get Photos application: %@", v23, 0xCu);
              v26 = sub_100008384(&qword_1007B4C30);
              swift_arrayDestroy(v24, 1, v26);
              swift_slowDealloc(v24, -1, -1);
              swift_slowDealloc(v23, -1, -1);

              swift_errorRelease(v17);
            }
            else
            {
              swift_errorRelease(v17);
              swift_errorRelease(v17);
              swift_errorRelease(v17);

            }
            break;
          }
          if (v46 >= v59)
            goto LABEL_33;
          v47 = *(_QWORD *)(v58 + 8 * v46);
          ++v34;
          if (!v47)
          {
            v34 = v46 + 1;
            if (v46 + 1 >= v59)
              goto LABEL_33;
            v47 = *(_QWORD *)(v58 + 8 * v34);
            if (!v47)
            {
              v34 = v46 + 2;
              if (v46 + 2 >= v59)
                goto LABEL_33;
              v47 = *(_QWORD *)(v58 + 8 * v34);
              if (!v47)
              {
                v48 = v46 + 3;
                if (v48 >= v59)
                {
LABEL_33:
                  swift_release(log);
                  v27 = 1;
                  goto LABEL_8;
                }
                v47 = *(_QWORD *)(v58 + 8 * v48);
                if (!v47)
                {
                  while (1)
                  {
                    v34 = v48 + 1;
                    if (__OFADD__(v48, 1))
                      break;
                    if (v34 >= v59)
                      goto LABEL_33;
                    v47 = *(_QWORD *)(v58 + 8 * v34);
                    ++v48;
                    if (v47)
                      goto LABEL_28;
                  }
                  __break(1u);
                  return result;
                }
                v34 = v48;
              }
            }
          }
LABEL_28:
          v37 = (v47 - 1) & v47;
          v45 = __clz(__rbit64(v47)) + (v34 << 6);
        }
        v50 = *(_QWORD *)(v1 + 56);
        v49 = *(_QWORD *)(v1 + 64);
        v51 = *(_QWORD *)(v1 + 40);
        (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v49, (char *)log[6].isa + *(_QWORD *)(v30 + 72) * v45, v51);
        v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v50, v49, v51);
        SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v52);
        v54 = v53;
        v55 = String._bridgeToObjectiveC()();
        v17 = SFIsPhotosAssetBundle(v55);

        if ((_DWORD)v17)
        {
          swift_bridgeObjectRelease(v54);
          SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter(v56);
          if (!v57)
          {
            (*(void (**)(_QWORD, _QWORD))(v30 + 8))(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 40));
LABEL_35:
            swift_release(log);
            break;
          }
          v54 = v57;
        }
        v38 = *(_QWORD *)(v1 + 56);
        v39 = *(_QWORD *)(v1 + 40);
        v40 = String._bridgeToObjectiveC()();
        v41 = SFIsImage(v40);

        v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v54);
        v43 = SFIsVideo(v42);

        v30 = v63;
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v38, v39);
        *(_BYTE *)(v60 + v62) = (*(_BYTE *)(v60 + v62) | v41) & 1;
        *(_BYTE *)(v60 + v61) = (*(_BYTE *)(v60 + v61) | v43) & 1;
        if (((v41 | v43 | v17) & 1) == 0)
          goto LABEL_35;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 72));
  }
  v27 = 0;
LABEL_8:
  v29 = *(_QWORD *)(v1 + 56);
  v28 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v27);
}

void sub_10051D8D0(uint64_t a1, int a2)
{
  unint64_t v2;
  unint64_t v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  NSString v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  int v32;
  NSString v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  const char *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  Swift::String v76;
  Swift::String v77;
  BOOL v78;
  char v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  NSString v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  const char *v100;
  double v101;
  _BYTE v102[12];
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int64_t v107;
  __int128 v108;
  _BYTE v109[80];
  _BYTE v110[56];
  uint64_t v111;
  unint64_t v112;
  _BYTE v113[44];

  v3 = v2;
  LODWORD(v4) = a2;
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v102[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v7);
  v12 = &v102[-v11];
  v13 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) == 1
    && *(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) == 1)
  {
    v103 = (int)v4;
    v14 = SFAirDropReceive.AskRequest.items.getter(v10);
    v104 = 0;
    v105 = 0;
    v15 = 0;
    *(_QWORD *)&v108 = v14;
    v16 = 1 << *(_BYTE *)(v14 + 32);
    v17 = -1;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    v18 = *(_QWORD *)(v14 + 56);
    v106 = v14 + 56;
    v3 = v17 & v18;
    v107 = (unint64_t)(v16 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v3)
        {
          v19 = __clz(__rbit64(v3));
          v3 &= v3 - 1;
          v20 = v19 | (v15 << 6);
        }
        else
        {
          v21 = v15 + 1;
          if (__OFADD__(v15, 1))
          {
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          if (v21 >= v107)
            goto LABEL_45;
          v22 = *(_QWORD *)(v106 + 8 * v21);
          ++v15;
          if (!v22)
          {
            v15 = v21 + 1;
            if (v21 + 1 >= v107)
              goto LABEL_45;
            v22 = *(_QWORD *)(v106 + 8 * v15);
            if (!v22)
            {
              v15 = v21 + 2;
              if (v21 + 2 >= v107)
                goto LABEL_45;
              v22 = *(_QWORD *)(v106 + 8 * v15);
              if (!v22)
              {
                v23 = v21 + 3;
                if (v23 >= v107)
                {
LABEL_45:
                  swift_release(v108);
                  v64 = sub_100008384(&qword_1007B7600);
                  inited = swift_initStackObject(v64, v109);
                  *(_QWORD *)(inited + 32) = 0x4F544F4850;
                  v66 = inited + 32;
                  v108 = xmmword_1005CF250;
                  *(_OWORD *)(inited + 16) = xmmword_1005CF250;
                  v67 = v105;
                  *(_QWORD *)(inited + 40) = 0xE500000000000000;
                  *(_QWORD *)(inited + 48) = v67;
                  *(_QWORD *)(inited + 56) = 0x4F45444956;
                  *(_QWORD *)(inited + 64) = 0xE500000000000000;
                  v68 = v104;
                  *(_QWORD *)(inited + 72) = v104;
                  v111 = 0x545F4E5245444F4DLL;
                  v112 = 0xEF524546534E4152;
                  *(_QWORD *)&v69 = swift_bridgeObjectRetain((const char *)0xE500000000000000).n128_u64[0];
                  swift_bridgeObjectRetain((const char *)inited, v69);
                  v70._countAndFlagsBits = 95;
                  v70._object = (void *)0xE100000000000000;
                  String.append(_:)(v70);
                  v71._countAndFlagsBits = 0x4F544F4850;
                  v71._object = (void *)0xE500000000000000;
                  String.append(_:)(v71);
                  swift_bridgeObjectRelease((const char *)0xE500000000000000);
                  if (v67 > 1)
                  {
                    v72._countAndFlagsBits = 0x4C4152554C505FLL;
                    v72._object = (void *)0xE700000000000000;
                    String.append(_:)(v72);
                  }
                  v73 = *(_QWORD *)(inited + 56);
                  v74 = *(char **)(inited + 64);
                  v75 = *(_QWORD *)(inited + 72);
                  swift_bridgeObjectRetain(v74);
                  v76._countAndFlagsBits = 95;
                  v76._object = (void *)0xE100000000000000;
                  String.append(_:)(v76);
                  v77._countAndFlagsBits = v73;
                  v77._object = v74;
                  String.append(_:)(v77);
                  swift_bridgeObjectRelease(v74);
                  v78 = v75 < 2;
                  v79 = v103;
                  if (!v78)
                  {
                    v80._countAndFlagsBits = 0x4C4152554C505FLL;
                    v80._object = (void *)0xE700000000000000;
                    String.append(_:)(v80);
                  }
                  swift_bridgeObjectRelease((const char *)inited);
                  if ((v79 & 1) != 0)
                  {
                    v81._countAndFlagsBits = 0x4C4154495041435FLL;
                    v81._object = (void *)0xEC00000044455A49;
                    String.append(_:)(v81);
                  }
                  v82._countAndFlagsBits = 0x545845545FLL;
                  v82._object = (void *)0xE500000000000000;
                  String.append(_:)(v82);
                  v83 = (const char *)v112;
                  swift_setDeallocating(inited);
                  v84 = *(_QWORD *)(inited + 16);
                  v85 = sub_100008384(&qword_1007B7608);
                  swift_arrayDestroy(v66, v84, v85);
                  v86 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v83);
                  v88 = (id)SFLocalizedStringForKey(v86, v87);

                  if (v67 <= 1)
                  {
                    if (v68 >= 2)
                    {
                      if (!v88)
                        goto LABEL_68;
                      v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      v59 = v93;

                      v94 = sub_100008384((uint64_t *)&unk_1007B86C0);
                      v61 = swift_allocObject(v94, 72, 7);
                      *(_OWORD *)(v61 + 16) = xmmword_1005CD2A0;
                      *(_QWORD *)(v61 + 56) = &type metadata for Int;
                      *(_QWORD *)(v61 + 64) = &protocol witness table for Int;
                      *(_QWORD *)(v61 + 32) = v68;
                      v62 = v92;
                      goto LABEL_44;
                    }
                    if (!v88)
                      goto LABEL_70;
                    v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                    v100 = v99;

                    static String.localizedStringWithFormat(_:_:)(v98, v100, _swiftEmptyArrayStorage);
                    swift_bridgeObjectRelease(v100, v101);
                  }
                  else
                  {
                    if (v68 < 2)
                    {
                      if (!v88)
                        goto LABEL_69;
                      v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      v59 = v96;

                      v97 = sub_100008384((uint64_t *)&unk_1007B86C0);
                      v61 = swift_allocObject(v97, 72, 7);
                      *(_OWORD *)(v61 + 16) = xmmword_1005CD2A0;
                      *(_QWORD *)(v61 + 56) = &type metadata for Int;
                      *(_QWORD *)(v61 + 64) = &protocol witness table for Int;
                      *(_QWORD *)(v61 + 32) = v67;
                      v62 = v95;
                    }
                    else
                    {
                      if (!v88)
                        goto LABEL_67;
                      v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      v59 = v90;

                      v91 = sub_100008384((uint64_t *)&unk_1007B86C0);
                      v61 = swift_allocObject(v91, 112, 7);
                      *(_OWORD *)(v61 + 16) = v108;
                      *(_QWORD *)(v61 + 56) = &type metadata for Int;
                      *(_QWORD *)(v61 + 64) = &protocol witness table for Int;
                      *(_QWORD *)(v61 + 32) = v67;
                      *(_QWORD *)(v61 + 96) = &type metadata for Int;
                      *(_QWORD *)(v61 + 104) = &protocol witness table for Int;
                      *(_QWORD *)(v61 + 72) = v68;
                      v62 = v89;
                    }
LABEL_44:
                    static String.localizedStringWithFormat(_:_:)(v62, v59, v61);
                    *(_QWORD *)&v63 = swift_bridgeObjectRelease(v59).n128_u64[0];
                    swift_bridgeObjectRelease((const char *)v61, v63);
                  }
                  return;
                }
                v22 = *(_QWORD *)(v106 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    v15 = v23 + 1;
                    if (__OFADD__(v23, 1))
                      goto LABEL_64;
                    if (v15 >= v107)
                      goto LABEL_45;
                    v22 = *(_QWORD *)(v106 + 8 * v15);
                    ++v23;
                    if (v22)
                      goto LABEL_22;
                  }
                }
                v15 = v23;
              }
            }
          }
LABEL_22:
          v3 = (v22 - 1) & v22;
          v20 = __clz(__rbit64(v22)) + (v15 << 6);
        }
        (*(void (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16))(v12, *(_QWORD *)(v108 + 48) + *(_QWORD *)(v6 + 72) * v20, v5);
        v24 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v9, v12, v5);
        v13 = SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v24);
        v26 = v25;
        v27 = String._bridgeToObjectiveC()();
        v28 = SFIsPhotosAssetBundle(v27);

        if (v28)
          break;
LABEL_26:
        v4 = String._bridgeToObjectiveC()();
        v32 = SFIsImage(v4);

        if (v32)
        {
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
          swift_bridgeObjectRelease(v26);
          v35 = __OFADD__(v105++, 1);
          if (v35)
          {
            __break(1u);
            goto LABEL_34;
          }
        }
        else
        {
          v33 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v26);
          v34 = SFIsVideo(v33);

          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
          if (v34)
          {
            v35 = __OFADD__(v104++, 1);
            if (v35)
              goto LABEL_65;
          }
        }
      }
      swift_bridgeObjectRelease(v26);
      v30 = SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter(v29);
      if (v31)
      {
        v13 = v30;
        v26 = v31;
        goto LABEL_26;
      }
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
LABEL_34:
  v36 = SFAirDropReceive.AskRequest.files.getter(v10);
  v37 = *(_QWORD *)(v36 + 16);
  swift_bridgeObjectRelease((const char *)v36);
  if (*(_BYTE *)(v3 + v13) == 1)
  {
    v38 = sub_100008384(&qword_1007B7600);
    v39 = swift_initStackObject(v38, v110);
    *(_OWORD *)(v39 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v39 + 32) = 0x4F544F4850;
    v40 = v39 + 32;
    *(_QWORD *)(v39 + 40) = 0xE500000000000000;
    *(_QWORD *)(v39 + 48) = v37;
    v111 = 0x545F4E5245444F4DLL;
    v112 = 0xEF524546534E4152;
    *(_QWORD *)&v41 = swift_bridgeObjectRetain((const char *)0xE500000000000000).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v39, v41);
    v42._countAndFlagsBits = 95;
    v42._object = (void *)0xE100000000000000;
    String.append(_:)(v42);
    v43 = 1414482000;
  }
  else
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) != 1)
      return;
    v44 = sub_100008384(&qword_1007B7600);
    v39 = swift_initStackObject(v44, v113);
    *(_OWORD *)(v39 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v39 + 32) = 0x4F45444956;
    v40 = v39 + 32;
    *(_QWORD *)(v39 + 40) = 0xE500000000000000;
    *(_QWORD *)(v39 + 48) = v37;
    v111 = 0x545F4E5245444F4DLL;
    v112 = 0xEF524546534E4152;
    *(_QWORD *)&v45 = swift_bridgeObjectRetain((const char *)0xE500000000000000).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v39, v45);
    v46._countAndFlagsBits = 95;
    v46._object = (void *)0xE100000000000000;
    String.append(_:)(v46);
    v43 = 1162103126;
  }
  v47._countAndFlagsBits = v43 & 0xFFFF0000FFFFFFFFLL | 0x4F00000000;
  v47._object = (void *)0xE500000000000000;
  String.append(_:)(v47);
  swift_bridgeObjectRelease((const char *)0xE500000000000000);
  if (v37 > 1)
  {
    v48._countAndFlagsBits = 0x4C4152554C505FLL;
    v48._object = (void *)0xE700000000000000;
    String.append(_:)(v48);
  }
  swift_bridgeObjectRelease((const char *)v39);
  if ((v4 & 1) != 0)
  {
    v49._countAndFlagsBits = 0x4C4154495041435FLL;
    v49._object = (void *)0xEC00000044455A49;
    String.append(_:)(v49);
  }
  v50._countAndFlagsBits = 0x545845545FLL;
  v50._object = (void *)0xE500000000000000;
  String.append(_:)(v50);
  v51 = (const char *)v112;
  swift_setDeallocating(v39);
  v52 = *(_QWORD *)(v39 + 16);
  v53 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v40, v52, v53);
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v51);
  v56 = (id)SFLocalizedStringForKey(v54, v55);

  if (v56)
  {
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;

    v60 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v61 + 56) = &type metadata for Int;
    *(_QWORD *)(v61 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v61 + 32) = v37;
    v62 = v57;
    goto LABEL_44;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t sub_10051E268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v9 = type metadata accessor for URL(0);
  v6[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[12] = v10;
  v6[13] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_10072E1C0, 32, 7);
  v6[14] = v11;
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v12 = qword_1007B3D98;
  swift_retain();
  if (v12 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  v6[15] = static AirDropActor.shared;
  return swift_task_switch(sub_10051E330, v13, 0);
}

uint64_t sub_10051E330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[16] = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "sharedPhotoLibrary");
  if (qword_1007B4278 != -1)
    swift_once(&qword_1007B4278, sub_10051D114);
  v1 = v0[15];
  v2 = type metadata accessor for SDAirDropDownloadDestinationProvideriOS();
  v0[17] = swift_initStackObject(v2, v0 + 2);
  return swift_task_switch(sub_10051E3CC, v1, 0);
}

uint64_t sub_10051E3CC()
{
  uint64_t *v0;
  uint64_t **v1;

  v1 = (uint64_t **)swift_task_alloc(dword_1007B43C4);
  v0[18] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10051E420;
  return sub_10021DDA8(v0[13], v0[8]);
}

uint64_t sub_10051E420()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 120);
  if (v0)
  {
    swift_release(*(_QWORD *)(v2 + 112));
    v5 = sub_10051E624;
  }
  else
  {
    v5 = sub_10051E498;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10051E498()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = v0[16];
  v3 = v0[13];
  v2 = v0[14];
  v5 = v0[9];
  v4 = v0[10];
  v6 = static AirDropActor.shared;
  v7 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v8 = (_QWORD *)swift_task_alloc(64);
  v0[20] = v8;
  v8[2] = v5;
  v8[3] = v1;
  v8[4] = v4;
  v8[5] = v3;
  v8[6] = sub_100522164;
  v8[7] = v2;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[21] = v9;
  v10 = sub_100008384((uint64_t *)&unk_1007B6820);
  *v9 = v0;
  v9[1] = sub_10051E5A4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 4, v6, v7, 0xD000000000000027, 0x8000000100613990, sub_100522194, v8, v10);
}

uint64_t sub_10051E5A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = v2[20];
  v5 = v2[15];
  swift_release(v2[14]);
  swift_task_dealloc(v4);
  if (v0)
    v6 = sub_10051E704;
  else
    v6 = sub_10051E67C;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_10051E624()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  swift_willThrow();

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051E67C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(void (**)(uint64_t *))(v0 + 48);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD **)(v0 + 40);
  v9 = 0x3FF0000000000000;
  v5(&v9);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *v6 = v7;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051E704()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  v2 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  swift_willThrow(v1);

  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051E76C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  void **aBlock;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  _QWORD *v52;

  v41 = a4;
  v42 = a7;
  v39 = a6;
  v46 = a3;
  v43 = a1;
  v45 = sub_100008384(&qword_1007C5128);
  v9 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v40 = v10;
  v44 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B4270 != -1)
    swift_once(&qword_1007B4270, sub_10051D084);
  v15 = type metadata accessor for Logger(0);
  sub_100221DF8(v15, (uint64_t)qword_1007C4EF8);
  swift_bridgeObjectRetain((const char *)a2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v19 = 134217984;
    aBlock = *(void ***)(a2 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v48, v19 + 4);
    swift_bridgeObjectRelease((const char *)a2);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "PHPhotoLibrary preparing import of %ld items", v19, 0xCu);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease((const char *)a2);
  }
  v20 = swift_allocObject(&unk_10072E1E8, 24, 7);
  *(_QWORD *)(v20 + 16) = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v11);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_10072E210, v23 + 16, v21 | 7);
  v25 = v41;
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v22], v14, v11);
  v26 = &v24[v23];
  v27 = v42;
  *(_QWORD *)v26 = v39;
  *((_QWORD *)v26 + 1) = v27;
  v51 = sub_10052226C;
  v52 = v24;
  aBlock = _NSConcreteStackBlock;
  v48 = 1107296256;
  v49 = sub_10025BBB4;
  v50 = &unk_10072E228;
  v28 = _Block_copy(&aBlock);
  v29 = v52;
  swift_bridgeObjectRetain((const char *)a2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(v29);
  v30 = v44;
  v31 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v44, v43, v45);
  v32 = *(unsigned __int8 *)(v9 + 80);
  v33 = (v32 + 24) & ~v32;
  v34 = (v40 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_10072E260, v34 + 8, v32 | 7);
  *(_QWORD *)(v35 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v35 + v33, v30, v31);
  *(_QWORD *)(v35 + v34) = v20;
  v51 = sub_100522364;
  v52 = (_QWORD *)v35;
  aBlock = _NSConcreteStackBlock;
  v48 = 1107296256;
  v49 = sub_10051F048;
  v50 = &unk_10072E278;
  v36 = _Block_copy(&aBlock);
  v37 = v52;
  swift_bridgeObjectRetain((const char *)a2);
  swift_retain();
  swift_release(v37);
  objc_msgSend(v46, "performChanges:completionHandler:", v28, v36);
  _Block_release(v36);
  _Block_release(v28);
  return swift_release(v20);
}

__n128 sub_10051EB30(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, void (*a5)(double), uint64_t a6)
{
  uint64_t v7;
  _QWORD *v8;
  double v9;
  const char *v10;
  _BYTE v12[24];

  v7 = a1 + 16;
  v8 = sub_10051F6C8(a3, a4, a5, a6);
  *(_QWORD *)&v9 = swift_beginAccess(v7, v12, 1, 0).n128_u64[0];
  v10 = *(const char **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  return swift_bridgeObjectRelease(v10, v9);
}

uint64_t sub_10051EB9C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char **v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  const char **v19;
  uint64_t v20;
  const char *v21;
  double v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;

  if ((a1 & 1) == 0)
  {
    if (qword_1007B4270 != -1)
      swift_once(&qword_1007B4270, sub_10051D084);
    v14 = type metadata accessor for Logger(0);
    sub_100221DF8(v14, (uint64_t)qword_1007C4EF8);
    swift_bridgeObjectRetain((const char *)a3);
    swift_errorRetain(a2);
    swift_bridgeObjectRetain((const char *)a3);
    v15 = swift_errorRetain(a2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(22, -1);
      v19 = (const char **)swift_slowAlloc(8, -1);
      v20 = swift_slowAlloc(32, -1);
      v37 = v20;
      *(_DWORD *)v18 = 138412546;
      if (a2)
      {
        swift_errorRetain(a2);
        v21 = (const char *)_swift_stdlib_bridgeErrorToNSError(a2);
        v36 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4);
      }
      else
      {
        v36 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4);
        v21 = 0;
      }
      *v19 = v21;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      *(_WORD *)(v18 + 12) = 2080;
      v26 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain((const char *)a3);
      v28 = Array.description.getter(v27, v26);
      v30 = v29;
      swift_bridgeObjectRelease((const char *)a3);
      v36 = (const char *)sub_100228BD8(v28, (unint64_t)v30, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 14);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "PHPhotoLibrary performChanges failed with error %@ for items %s", (uint8_t *)v18, 0x16u);
      v31 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v19, 1, v31);
      swift_slowDealloc(v19, -1, -1);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      v25 = a2;
      if (a2)
        goto LABEL_18;
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      swift_bridgeObjectRelease_n(a3, 2);
      v25 = a2;
      if (a2)
      {
LABEL_18:
        v37 = v25;
        swift_errorRetain(a2);
        v35 = sub_100008384(&qword_1007C5128);
        return CheckedContinuation.resume(throwing:)(&v37, v35);
      }
    }
    v32 = type metadata accessor for SFAirDropReceive.Failure(0);
    v33 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v25 = swift_allocError(v32, v33, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v32);
    goto LABEL_18;
  }
  if (qword_1007B4270 != -1)
    swift_once(&qword_1007B4270, sub_10051D084);
  v7 = (const char **)(a5 + 16);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C4EF8);
  swift_bridgeObjectRetain((const char *)a3);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v12 = 134217984;
    v37 = *(_QWORD *)(a3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v12 + 4);
    swift_bridgeObjectRelease((const char *)a3);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "PHPhotoLibrary performChanges reported success for %ld items", v12, 0xCu);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease((const char *)a3);
  }
  *(_QWORD *)&v22 = swift_beginAccess(v7, &v37, 0, 0).n128_u64[0];
  v36 = *v7;
  swift_bridgeObjectRetain(v36, v22);
  v23 = sub_100008384(&qword_1007C5128);
  return CheckedContinuation.resume(returning:)(&v36, v23);
}

void sub_10051F048(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_10051F0A8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v7;

  v3 = *(void **)(v1 + 16);
  v7 = 0;
  v4 = swift_allocObject(&unk_10072E350, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = v3;
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, &v7, &unk_1007B9780, v4, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
}

uint64_t sub_10051F168(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[24];

  v65 = a2;
  v68 = a1;
  v4 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - v14;
  v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v61 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  __chkstk_darwin(v16);
  v60 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384(&qword_1007B7280);
  v19 = __chkstk_darwin(v18);
  v63 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v59 = (char *)&v58 - v21;
  v22 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100221F28(a3, (uint64_t)v24, (uint64_t *)&unk_1007C5DE0);
  v25 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    v27 = sub_10000D0F0((uint64_t)v24, (uint64_t *)&unk_1007C5DE0);
LABEL_15:
    v42 = v68;
    SFAirDropReceive.Transfer.receiveID.getter(v27);
    v43 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v9, 1, 1, v43);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v4);
    v44 = v6;
    v45 = v15;
    v66 = v15;
    v46 = (uint64_t)v9;
    v47 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v48 = v69;
    v49 = v13;
    v50 = v13;
    v51 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v50, v45, v70);
    v52 = *(unsigned __int8 *)(v5 + 80);
    v53 = (v52 + 16) & ~v52;
    v54 = *(unsigned __int8 *)(v48 + 80);
    v55 = (v44 + v54 + v53) & ~v54;
    v56 = swift_allocObject(&unk_10072E328, v55 + v67, v52 | v54 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v56 + v53, v47, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v56 + v55, v49, v51);
    v57 = static Task<>.noThrow(priority:operation:)(v46, &unk_1007C5148, v56, (char *)&type metadata for () + 8);
    swift_release(v57);
    swift_release(v56);
    sub_10000D0F0(v46, &qword_1007B68A0);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v66, v51);
  }
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v26 + 88))(v24, v25) != enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    v27 = (*(uint64_t (**)(_QWORD *, uint64_t))(v26 + 8))(v24, v25);
    goto LABEL_15;
  }
  (*(void (**)(_QWORD *, uint64_t))(v26 + 96))(v24, v25);
  v28 = (const char *)v24[1];
  if (*v24 == 0xD000000000000034 && v28 == (const char *)0x80000001006133A0)
  {
    swift_bridgeObjectRelease((const char *)0x80000001006133A0);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(*v24, v24[1], 0xD000000000000034, 0x80000001006133A0, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) == 0)
      goto LABEL_15;
  }
  if ((v65 & 1) == 0)
    goto LABEL_15;
  if (qword_1007B4270 != -1)
    swift_once(&qword_1007B4270, sub_10051D084);
  v30 = type metadata accessor for Logger(0);
  v31 = sub_100221DF8(v30, (uint64_t)qword_1007C4EF8);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Photos transfer succeeded with moveToApp selected; not cleaning up until Share Sheet is done",
      v34,
      2u);
    swift_slowDealloc(v34, -1, -1);
  }

  v35 = v60;
  v37 = SFAirDropReceive.Transfer.id.getter(v36);
  v38 = (uint64_t)v59;
  SFAirDrop.TransferIdentifier.id.getter(v37);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v62);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v38, 0, 1, v70);
  v39 = v63;
  sub_10022E718(v38, v63, &qword_1007B7280);
  v40 = v64 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID, v71, 33, 0);
  sub_1005229F4(v39, v40);
  return swift_endAccess(v71);
}

_QWORD *sub_10051F6C8(_QWORD *a1, uint64_t a2, void (*a3)(double), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSURL *baseURL;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  const char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  double v69;
  unint64_t v70;
  __int128 v71;
  Class isa;
  BOOL v73;
  Class v74;
  void (*v75)(char *, _QWORD, uint64_t, uint64_t);
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  NSString *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(NSURL *, char *, uint64_t);
  uint64_t v87;
  uint64_t inited;
  NSURLResourceKey v89;
  NSString *v90;
  const char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  void *reserved;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  const char *v111;
  __n128 v112;
  void (*v113)(void *, uint64_t, __n128);
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  void *v117;
  uint64_t v118;
  void (*v119)(void *, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  const char *v124;
  const char *v125;
  NSString v126;
  uint64_t v127;
  id v128;
  NSURL *v129;
  void *v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  char v136;
  char *v137;
  Class v138;
  void *v139;
  void *v140;
  id v141;
  id v142;
  _QWORD *v143;
  char *v144;
  id v145;
  unint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  const char *v152;
  const char *v153;
  NSString v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  void (*v158)(char *, NSURL *, uint64_t);
  char *v159;
  uint64_t v160;
  NSURL *v161;
  void *v162;
  const char *v163;
  const char *v164;
  NSString v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  const char *v180;
  __n128 v181;
  void *v182;
  id v183;
  id v184;
  void *v185;
  char v186;
  _QWORD *result;
  void *v188;
  uint64_t v189;
  const char *v190;
  const char *v191;
  char *v192;
  __n128 v193;
  unint64_t v194;
  unint64_t v195;
  _QWORD *v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  const char *v201;
  const char *v202;
  NSString v203;
  char *v204;
  uint64_t v205;
  id v206;
  void *v207;
  void *v208;
  uint64_t v209;
  void *v210;
  char v211;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v213;
  unint64_t v214;
  _QWORD *v215;
  id v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  NSObject *v221;
  os_log_type_t v222;
  char *v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  const char *v229;
  __n128 v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  NSObject *v237;
  os_log_type_t v238;
  uint8_t *v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  const char *v244;
  __n128 v245;
  id v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  NSObject *v253;
  os_log_type_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  const char *v259;
  char *v260;
  __n128 v261;
  uint64_t v262;
  char *v263;
  uint64_t *v264;
  os_log_t v265;
  uint64_t v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  NSString v270;
  id v271;
  void *v272;
  id v273;
  uint64_t v274;
  const char *v275;
  const char *v276;
  unint64_t v277;
  unint64_t v278;
  _QWORD *v279;
  _QWORD *v280;
  NSString v281;
  NSString *v282;
  uint64_t v283;
  const char *v284;
  const char *v285;
  uint64_t v286;
  __n128 v287;
  uint64_t v288;
  uint64_t v289;
  NSURL *v290;
  objc_class *v291;
  uint64_t v292;
  _QWORD *v293;
  char *v294;
  char v295;
  unint64_t v296;
  unint64_t v297;
  _QWORD *v298;
  unint64_t v299;
  uint64_t v300;
  uint64_t v301;
  double v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  os_log_t v311;
  uint64_t *v312;
  void *v313;
  _QWORD *v314;
  id v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  uint64_t v326;
  __int128 v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  uint64_t v334;
  void (*v335)(double);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  char *v341;
  _QWORD *v342;
  const char *v343;
  _QWORD *v344;
  _QWORD *v345;
  char *v346;
  char *v347;
  unint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  __int128 v354;
  NSURL v355;
  unint64_t v356;
  char *v357;
  __int128 v358;
  NSURLResourceKey v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  NSString **v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  char v368;
  id v369;
  char v370[8];
  NSURL v371;

  v336 = a4;
  v335 = a3;
  v326 = a2;
  v5 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v5);
  v341 = (char *)&v309 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = type metadata accessor for URLResourceValues(0);
  v351 = *(_QWORD *)(v352 - 8);
  __chkstk_darwin(v352);
  v360 = (char *)&v309 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_100008384(&qword_1007B5538);
  __chkstk_darwin(v350);
  v349 = (char *)&v309 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v338 = type metadata accessor for UTType(0);
  v337 = *(_QWORD *)(v338 - 8);
  v9 = __chkstk_darwin(v338);
  v333 = (char *)&v309 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v353 = (char *)&v309 - v12;
  __chkstk_darwin(v11);
  v339 = (char *)&v309 - v13;
  v14 = (objc_class *)sub_100008384(&qword_1007B9928);
  v361 = *((_QWORD *)v14 - 1);
  __chkstk_darwin(v14);
  v347 = (char *)&v309 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384((uint64_t *)&unk_1007B5200);
  v17 = __chkstk_darwin(v16);
  v320 = (char *)&v309 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v332 = (char *)&v309 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v309 - v21;
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v316 = (char *)&v309 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v355._reserved = (char *)&v309 - v28;
  v29 = __chkstk_darwin(v27);
  v322 = (char *)&v309 - v30;
  v31 = __chkstk_darwin(v29);
  v321 = (char *)&v309 - v32;
  v33 = __chkstk_darwin(v31);
  v323 = (char *)&v309 - v34;
  v35 = __chkstk_darwin(v33);
  v329 = (char *)&v309 - v36;
  v37 = __chkstk_darwin(v35);
  v325 = (char *)&v309 - v38;
  v39 = __chkstk_darwin(v37);
  v324 = (char *)&v309 - v40;
  v41 = __chkstk_darwin(v39);
  v319 = (char *)&v309 - v42;
  v43 = __chkstk_darwin(v41);
  v331 = (char *)&v309 - v44;
  v45 = __chkstk_darwin(v43);
  v330 = (char *)&v309 - v46;
  v47 = __chkstk_darwin(v45);
  v328 = (char *)&v309 - v48;
  v49 = __chkstk_darwin(v47);
  baseURL = (NSURL *)((char *)&v309 - v50);
  __chkstk_darwin(v49);
  v346 = (char *)&v309 - v52;
  v53 = sub_100008384(&qword_1007B9930);
  v54 = __chkstk_darwin(v53);
  v363 = (NSString **)((char *)&v309 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v54);
  v57 = (uint64_t *)((char *)&v309 - v56);
  v58 = type metadata accessor for UUID(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = __chkstk_darwin(v58);
  v62 = (char *)&v309 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = UUID.init()(v60);
  v334 = UUID.uuidString.getter(v63);
  v343 = v64;
  v65 = v62;
  v66 = v24;
  v67 = v23;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v58);
  v68 = a1[2];
  v359 = NSURLContentTypeKey;
  v317 = &v368;
  v69 = (double)(uint64_t)(v68 + 1);
  v355._clients = a1;
  swift_bridgeObjectRetain((const char *)a1);
  v355._urlString = 0;
  v70 = 0;
  v365 = 0;
  *((_QWORD *)&v71 + 1) = 2;
  v358 = xmmword_1005CD2A0;
  v348 = 0x80000001006200F0;
  *(_QWORD *)&v71 = 136315138;
  v327 = v71;
  v318 = (char *)&type metadata for Any + 8;
  *(_QWORD *)&v71 = 136315394;
  v354 = v71;
  v345 = _swiftEmptyArrayStorage;
  v342 = _swiftEmptyArrayStorage;
  v344 = _swiftEmptyArrayStorage;
  isa = v14;
  v355.super.isa = v14;
  v362 = v66;
  v355._baseURL = baseURL;
  v356 = v68;
  v357 = v22;
  v366 = v23;
  v73 = v68 == 0;
  if (!v68)
    goto LABEL_6;
LABEL_2:
  if (v73)
  {
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
  }
  v74 = isa;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v22, (char *)v355._clients+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v70, v67);
  v364 = v70 + 1;
  v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56);
  v75(v22, 0, 1, v67);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v22, 1, v67) != 1)
  {
    v76 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v77 = v346;
    v76(v346, v22, v67);
    v78 = &v347[*((int *)isa + 12)];
    v76(v78, v77, v67);
    v79 = (NSString *)((char *)v355._urlString + 1);
    if (!__OFADD__(v355._urlString, 1))
    {
      v80 = (char *)v363 + *((int *)isa + 12);
      *v363 = v355._urlString;
      v76(v80, v78, v67);
      v81 = 0;
      v355._urlString = v79;
      v66 = v362;
      goto LABEL_8;
    }
    goto LABEL_114;
  }
  while (1)
  {
    sub_10000D0F0((uint64_t)v22, (uint64_t *)&unk_1007B5200);
    v81 = 1;
LABEL_8:
    v82 = v361;
    v83 = (uint64_t)v363;
    (*(void (**)(NSString **, uint64_t, uint64_t, Class))(v361 + 56))(v363, v81, 1, v74);
    sub_10022E718(v83, (uint64_t)v57, &qword_1007B9930);
    if ((*(unsigned int (**)(char *, uint64_t, Class))(v82 + 48))((char *)v57, 1, v74) == 1)
    {
      *(_QWORD *)&v302 = swift_bridgeObjectRelease(v343).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v355._clients, v302);
      v303 = type metadata accessor for TaskPriority(0);
      v304 = (uint64_t)v341;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v303 - 8) + 56))(v341, 1, 1, v303);
      v305 = (_QWORD *)swift_allocObject(&unk_10072E2D8, 40, 7);
      v306 = v345;
      v305[2] = v340;
      v305[3] = v306;
      v305[4] = v344;
      v307 = swift_allocObject(&unk_10072E300, 32, 7);
      *(_QWORD *)(v307 + 16) = &unk_1007C5140;
      *(_QWORD *)(v307 + 24) = v305;
      swift_retain();
      v308 = static Task<>.noThrow(priority:operation:)(v304, &unk_1007B65D0, v307, (char *)&type metadata for () + 8);
      swift_release(v308);
      swift_release(v307);
      sub_10000D0F0(v304, &qword_1007B68A0);
      return v342;
    }
    v84 = v67;
    v85 = *v57;
    v86 = *(void (**)(NSURL *, char *, uint64_t))(v66 + 32);
    v86(baseURL, (char *)v57 + *((int *)v74 + 12), v84);
    v87 = sub_100008384(&qword_1007B6D20);
    inited = swift_initStackObject(v87, v370);
    *(_OWORD *)(inited + 16) = v358;
    v89 = v359;
    *(_QWORD *)(inited + 32) = v359;
    v90 = v89;
    v91 = (const char *)sub_100282EF4(inited);
    swift_setDeallocating(inited);
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy(inited + 32, 1, v92);
    v93 = v360;
    v94 = v365;
    URL.resourceValues(forKeys:)(v91);
    if (!v94)
      break;
    v95 = v94;
    swift_bridgeObjectRelease(v91);
    v365 = 0;
    v98 = v57;
    v67 = v366;
    reserved = v355._reserved;
    if (qword_1007B4270 != -1)
      swift_once(&qword_1007B4270, sub_10051D084);
    v100 = type metadata accessor for Logger(0);
    sub_100221DF8(v100, (uint64_t)qword_1007C4EF8);
    v101 = v362;
    (*(void (**)(void *, NSURL *, uint64_t))(v362 + 16))(reserved, baseURL, v67);
    swift_errorRetain(v95);
    v102 = swift_errorRetain(v95);
    v103 = Logger.logObject.getter(v102);
    v104 = static os_log_type_t.error.getter(v103);
    if (os_log_type_enabled(v103, v104))
    {
      v105 = swift_slowAlloc(22, -1);
      v106 = (uint64_t *)swift_slowAlloc(8, -1);
      v107 = (void *)swift_slowAlloc(32, -1);
      v369 = v107;
      *(_DWORD *)v105 = v354;
      v108 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v109 = dispatch thunk of CustomStringConvertible.description.getter(v366, v108);
      v111 = (const char *)v110;
      *(_QWORD *)(v105 + 4) = sub_100228BD8(v109, v110, (uint64_t *)&v369);
      v112 = swift_bridgeObjectRelease(v111);
      v113 = *(void (**)(void *, uint64_t, __n128))(v101 + 8);
      v113(reserved, v366, v112);
      *(_WORD *)(v105 + 12) = 2112;
      swift_errorRetain(v95);
      v114 = _swift_stdlib_bridgeErrorToNSError(v95);
      *(_QWORD *)(v105 + 14) = v114;
      *v106 = v114;
      swift_errorRelease(v95);
      swift_errorRelease(v95);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Could not get UTType for URL %s: %@", (uint8_t *)v105, 0x16u);
      v115 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v106, 1, v115);
      v116 = v106;
      baseURL = v355._baseURL;
      swift_slowDealloc(v116, -1, -1);
      swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
      v117 = v107;
      v67 = v366;
      swift_slowDealloc(v117, -1, -1);
      v118 = v105;
      isa = v355.super.isa;
      swift_slowDealloc(v118, -1, -1);

      swift_errorRelease(v95);
      ((void (*)(NSURL *, uint64_t))v113)(baseURL, v67);
    }
    else
    {

      swift_errorRelease(v95);
      swift_errorRelease(v95);
      v119 = *(void (**)(void *, uint64_t))(v101 + 8);
      v119(reserved, v67);
      swift_errorRelease(v95);
      v119(baseURL, v67);
    }
    v22 = v357;
    v66 = v101;
    v57 = v98;
LABEL_18:
    v68 = v356;
    v70 = v364;
    v73 = v364 >= v356;
    if (v364 != v356)
      goto LABEL_2;
LABEL_6:
    v75 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56);
    v75(v22, 1, 1, v67);
    v364 = v68;
    v74 = isa;
  }
  swift_bridgeObjectRelease(v91);
  v96 = (uint64_t)v349;
  URLResourceValues.contentType.getter(v97);
  (*(void (**)(char *, uint64_t))(v351 + 8))(v93, v352);
  Optional.tryUnwrap(_:file:line:)(0x79545455656C6966, 0xEA00000000006570, 0xD000000000000064, v348, 376, v350);
  sub_10000D0F0(v96, &qword_1007B5538);
  v120 = v337;
  v121 = v339;
  v122 = v338;
  v123 = (*(uint64_t (**)(char *, char *, uint64_t))(v337 + 32))(v339, v353, v338);
  UTType.identifier.getter(v123);
  v125 = v124;
  v126 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v125);
  LODWORD(v125) = SFIsPhotosAssetBundle(v126);

  if ((_DWORD)v125)
  {
    v128 = objc_allocWithZone((Class)PFAssetBundle);
    v129 = v355._baseURL;
    URL._bridgeToObjectiveC()(&v371);
    v131 = v130;
    v132 = objc_msgSend(v128, "initWithAssetBundleAtURL:", v130);

    if (v132)
    {
      v133 = objc_msgSend((id)objc_opt_self(PHAssetCreationRequest), "creationRequestForAssetFromAssetBundle:", v132);
      sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
      v134 = v132;
      v135 = (void *)static NSUserDefaults.airdrop.getter(v134);
      v136 = SFAirDropUserDefaults.moveToAppEnabled.getter();

      v137 = v339;
      v138 = v355.super.isa;
      if ((v136 & 1) != 0)
      {
        URL._bridgeToObjectiveC()(&v355);
        v140 = v139;
        v369 = 0;
        v141 = objc_msgSend(v134, "writeDowngradedRepresentationToDirectory:error:", v139, &v369);

        v142 = v369;
        v315 = v133;
        if (v141)
        {
          v143 = v57;
          v144 = v330;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v141);
          v145 = v142;

          (*(void (**)(char *, char *, uint64_t))(v362 + 16))(v331, v144, v366);
          if ((swift_isUniquelyReferenced_nonNull_native(v345) & 1) == 0)
            v345 = (_QWORD *)sub_100227A54(0, v345[2] + 1, 1, (unint64_t)v345);
          v147 = v345[2];
          v146 = v345[3];
          v57 = v143;
          if (v147 >= v146 >> 1)
            v345 = (_QWORD *)sub_100227A54(v146 > 1, v147 + 1, 1, (unint64_t)v345);
          v94 = 0;
          v148 = v345;
          v345[2] = v147 + 1;
          v149 = (unint64_t)v148
               + ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80))
               + *(_QWORD *)(v362 + 72) * v147;
          v150 = v362;
          v151 = v366;
          v86((NSURL *)v149, v331, v366);

          (*(void (**)(char *, uint64_t))(v150 + 8))(v330, v151);
        }
        else
        {
          v314 = v57;
          v246 = v369;
          v247 = _convertNSErrorToError(_:)(v142);

          swift_willThrow(v248);
          if (qword_1007B4270 != -1)
            swift_once(&qword_1007B4270, sub_10051D084);
          v94 = 0;
          v249 = type metadata accessor for Logger(0);
          sub_100221DF8(v249, (uint64_t)qword_1007C4EF8);
          v250 = v316;
          v251 = v366;
          (*(void (**)(char *, NSURL *, uint64_t))(v362 + 16))(v316, v355._baseURL, v366);
          swift_errorRetain(v247);
          v252 = swift_errorRetain(v247);
          v253 = Logger.logObject.getter(v252);
          v254 = static os_log_type_t.error.getter(v253);
          LODWORD(v365) = v254;
          if (os_log_type_enabled(v253, v254))
          {
            v255 = swift_slowAlloc(22, -1);
            v312 = (uint64_t *)swift_slowAlloc(8, -1);
            v313 = (void *)swift_slowAlloc(32, -1);
            v369 = v313;
            *(_DWORD *)v255 = v354;
            v310 = v255 + 4;
            v256 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v311 = v253;
            v257 = dispatch thunk of CustomStringConvertible.description.getter(v251, v256);
            v259 = (const char *)v258;
            v367 = sub_100228BD8(v257, v258, (uint64_t *)&v369);
            v260 = v317;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v367, v317, v310);
            v261 = swift_bridgeObjectRelease(v259);
            (*(void (**)(char *, uint64_t, __n128))(v362 + 8))(v250, v251, v261);
            *(_WORD *)(v255 + 12) = 2112;
            swift_errorRetain(v247);
            v262 = _swift_stdlib_bridgeErrorToNSError(v247);
            v367 = v262;
            v263 = v260;
            v94 = 0;
            v138 = v355.super.isa;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v367, v263, v255 + 14);
            v264 = v312;
            *v312 = v262;
            swift_errorRelease(v247);
            swift_errorRelease(v247);
            v265 = v311;
            _os_log_impl((void *)&_mh_execute_header, v311, (os_log_type_t)v365, "Failed to downgrade asset bundle %s with error: %@", (uint8_t *)v255, 0x16u);
            v266 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v264, 1, v266);
            swift_slowDealloc(v264, -1, -1);
            v267 = v313;
            swift_arrayDestroy(v313, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v267, -1, -1);
            v268 = v255;
            v137 = v339;
            swift_slowDealloc(v268, -1, -1);

            swift_errorRelease(v247);
          }
          else
          {

            swift_errorRelease(v247);
            (*(void (**)(char *, uint64_t))(v362 + 8))(v250, v251);
            swift_errorRelease(v247);
            swift_errorRelease(v247);

          }
          v57 = v314;
        }
        goto LABEL_88;
      }

LABEL_60:
      goto LABEL_89;
    }
    v365 = 0;
    v314 = v57;
    v138 = v355.super.isa;
    if (qword_1007B4270 != -1)
      swift_once(&qword_1007B4270, sub_10051D084);
    v168 = type metadata accessor for Logger(0);
    sub_100221DF8(v168, (uint64_t)qword_1007C4EF8);
    v169 = v362;
    v170 = v328;
    v171 = v366;
    v172 = (*(uint64_t (**)(char *, NSURL *, uint64_t))(v362 + 16))(v328, v129, v366);
    v173 = Logger.logObject.getter(v172);
    v174 = static os_log_type_t.error.getter(v173);
    if (os_log_type_enabled(v173, v174))
    {
      v175 = swift_slowAlloc(12, -1);
      v176 = (void *)swift_slowAlloc(32, -1);
      v369 = v176;
      *(_DWORD *)v175 = v327;
      v177 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v178 = dispatch thunk of CustomStringConvertible.description.getter(v171, v177);
      v180 = (const char *)v179;
      *(_QWORD *)(v175 + 4) = sub_100228BD8(v178, v179, (uint64_t *)&v369);
      v181 = swift_bridgeObjectRelease(v180);
      (*(void (**)(char *, uint64_t, __n128))(v169 + 8))(v170, v171, v181);
      _os_log_impl((void *)&_mh_execute_header, v173, v174, "PFAssetBundle initWithAssetBundleAtURL(%s) returned nil", (uint8_t *)v175, 0xCu);
      swift_arrayDestroy(v176, 1, v318);
      swift_slowDealloc(v176, -1, -1);
      swift_slowDealloc(v175, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v169 + 8))(v170, v171);
    }

    v216 = 0;
    v137 = v339;
    v57 = v314;
LABEL_79:
    v94 = v365;
    v269 = v85 + 1;
    if (__OFADD__(v85, 1))
      goto LABEL_115;
    goto LABEL_104;
  }
  UTType.identifier.getter(v127);
  v153 = v152;
  v154 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v153);
  LODWORD(v153) = SFIsLivePhotos(v154);

  if (!(_DWORD)v153)
  {
    UTType.identifier.getter(v155);
    v164 = v163;
    v165 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v164);
    LODWORD(v164) = SFIsVideo(v165);

    v166 = v333;
    v167 = (*(uint64_t (**)(char *, char *, uint64_t))(v120 + 16))(v333, v121, v122);
    LODWORD(v365) = (_DWORD)v164;
    if ((_DWORD)v164)
    {
      v137 = v121;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v166, v122);
    }
    else
    {
      UTType.identifier.getter(v167);
      v200 = v166;
      v202 = v201;
      v203 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v202);
      LODWORD(v202) = SFIsImage(v203);

      v204 = v200;
      v137 = v339;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v204, v122);
      if (!(_DWORD)v202)
      {
        v365 = 0;
        v231 = v57;
        if (qword_1007B4270 != -1)
          swift_once(&qword_1007B4270, sub_10051D084);
        v232 = type metadata accessor for Logger(0);
        sub_100221DF8(v232, (uint64_t)qword_1007C4EF8);
        v233 = v362;
        v234 = v323;
        v235 = v366;
        v236 = (*(uint64_t (**)(char *, NSURL *, uint64_t))(v362 + 16))(v323, v355._baseURL, v366);
        v237 = Logger.logObject.getter(v236);
        v238 = static os_log_type_t.error.getter(v237);
        if (os_log_type_enabled(v237, v238))
        {
          v239 = (uint8_t *)swift_slowAlloc(12, -1);
          v240 = (void *)swift_slowAlloc(32, -1);
          v369 = v240;
          *(_DWORD *)v239 = v327;
          v315 = v239 + 4;
          v241 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v242 = dispatch thunk of CustomStringConvertible.description.getter(v235, v241);
          v244 = (const char *)v243;
          v367 = sub_100228BD8(v242, v243, (uint64_t *)&v369);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v367, v317, v315);
          v245 = swift_bridgeObjectRelease(v244);
          (*(void (**)(char *, uint64_t, __n128))(v233 + 8))(v323, v235, v245);
          _os_log_impl((void *)&_mh_execute_header, v237, v238, "Not a Photos type %s. Ignoring", v239, 0xCu);
          swift_arrayDestroy(v240, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v240, -1, -1);
          swift_slowDealloc(v239, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v233 + 8))(v234, v235);
        }

        v216 = 0;
        v137 = v339;
        v57 = v231;
        v94 = v365;
        v138 = v355.super.isa;
        v269 = v85 + 1;
        if (__OFADD__(v85, 1))
          goto LABEL_115;
        goto LABEL_104;
      }
    }
    v133 = objc_msgSend((id)objc_opt_self(PHAssetCreationRequest), "creationRequestForAsset");
    v134 = objc_msgSend(objc_allocWithZone((Class)PHAssetResourceCreationOptions), "init");
    if (v133)
    {
      if ((_DWORD)v365)
        v205 = 2;
      else
        v205 = 1;
      v206 = v133;
      URL._bridgeToObjectiveC()(&v371);
      v208 = v207;
      objc_msgSend(v206, "addResourceWithType:fileURL:options:", v205, v207, v134);

      v137 = v339;
    }
    v209 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
    v210 = (void *)static NSUserDefaults.airdrop.getter(v209);
    v211 = SFAirDropUserDefaults.moveToAppEnabled.getter();

    if ((v211 & 1) == 0)
    {

      v138 = v355.super.isa;
      goto LABEL_89;
    }
    (*(void (**)(char *, NSURL *, uint64_t))(v362 + 16))(v329, v355._baseURL, v366);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v345);
    v138 = v355.super.isa;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v345 = (_QWORD *)sub_100227A54(0, v345[2] + 1, 1, (unint64_t)v345);
    v214 = v345[2];
    v213 = v345[3];
    if (v214 >= v213 >> 1)
      v345 = (_QWORD *)sub_100227A54(v213 > 1, v214 + 1, 1, (unint64_t)v345);
    v215 = v345;
    v345[2] = v214 + 1;
    v86((NSURL *)((char *)v215+ ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80))+ *(_QWORD *)(v362 + 72) * v214), v329, v366);
    goto LABEL_60;
  }
  v365 = 0;
  v156 = v57;
  v157 = v362;
  v158 = *(void (**)(char *, NSURL *, uint64_t))(v362 + 16);
  v159 = v332;
  v160 = v366;
  v158(v332, v355._baseURL, v366);
  v75(v159, 0, 1, v160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v159, 1, v160) == 1)
  {
    v162 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v161);
    v162 = v182;
    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v160);
  }
  v137 = v339;
  v138 = v355.super.isa;
  v183 = objc_msgSend(objc_allocWithZone((Class)PFVideoComplement), "initWithBundleAtURL:", v162);

  if (!v183)
  {
    if (qword_1007B4270 != -1)
      swift_once(&qword_1007B4270, sub_10051D084);
    v217 = type metadata accessor for Logger(0);
    sub_100221DF8(v217, (uint64_t)qword_1007C4EF8);
    v218 = v319;
    v219 = v366;
    v220 = ((uint64_t (*)(char *, NSURL *, uint64_t))v158)(v319, v355._baseURL, v366);
    v221 = Logger.logObject.getter(v220);
    v222 = static os_log_type_t.error.getter(v221);
    if (os_log_type_enabled(v221, v222))
    {
      v223 = v218;
      v224 = swift_slowAlloc(12, -1);
      v225 = (void *)swift_slowAlloc(32, -1);
      v369 = v225;
      *(_DWORD *)v224 = v327;
      v226 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v227 = dispatch thunk of CustomStringConvertible.description.getter(v219, v226);
      v229 = (const char *)v228;
      *(_QWORD *)(v224 + 4) = sub_100228BD8(v227, v228, (uint64_t *)&v369);
      v230 = swift_bridgeObjectRelease(v229);
      (*(void (**)(char *, uint64_t, __n128))(v362 + 8))(v223, v219, v230);
      _os_log_impl((void *)&_mh_execute_header, v221, v222, "PFVideoComplement initWithBundleAtURL(%s) returned nil", (uint8_t *)v224, 0xCu);
      swift_arrayDestroy(v225, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v225, -1, -1);
      swift_slowDealloc(v224, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v362 + 8))(v218, v219);
    }

    v216 = 0;
    v137 = v339;
    v57 = v156;
    goto LABEL_79;
  }
  v57 = v156;
  v315 = objc_msgSend((id)objc_opt_self(PHAssetCreationRequest), "creationRequestForAssetFromVideoComplementBundle:", v183);
  sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v184 = v183;
  v185 = (void *)static NSUserDefaults.airdrop.getter(v184);
  v186 = SFAirDropUserDefaults.moveToAppEnabled.getter();

  if ((v186 & 1) == 0)
  {

    v94 = v365;
LABEL_88:
    v133 = v315;
LABEL_89:
    if (v133)
    {
      v216 = v133;
      v270 = String._bridgeToObjectiveC()();
      objc_msgSend(v216, "setImportSessionID:", v270);

      v271 = objc_msgSend(v216, "placeholderForCreatedAsset");
      if (v271)
      {
        v272 = v271;
        v273 = objc_msgSend(v271, "localIdentifier");

        v274 = static String._unconditionallyBridgeFromObjectiveC(_:)(v273);
        v276 = v275;

        swift_bridgeObjectRetain(v276);
        if ((swift_isUniquelyReferenced_nonNull_native(v344) & 1) == 0)
          v344 = sub_100227A68(0, v344[2] + 1, 1, v344);
        v278 = v344[2];
        v277 = v344[3];
        if (v278 >= v277 >> 1)
          v344 = sub_100227A68((_QWORD *)(v277 > 1), v278 + 1, 1, v344);
        v279 = v344;
        v344[2] = v278 + 1;
        v280 = &v279[2 * v278];
        v280[4] = v274;
        v280[5] = v276;
        if (v342[2])
        {
          swift_bridgeObjectRelease(v276);
        }
        else
        {
          v281 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v276);
          v282 = sub_100196324((uint64_t)v281);

          v283 = static String._unconditionallyBridgeFromObjectiveC(_:)(v282);
          v285 = v284;

          v286 = (uint64_t)v320;
          URL.init(string:)(v283, v285);
          v287 = swift_bridgeObjectRelease(v285);
          v288 = v362;
          v289 = v366;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v362 + 48))(v286, 1, v366, v287) != 1)
          {
            v291 = v138;
            v292 = v94;
            v293 = v57;
            v294 = v321;
            v86((NSURL *)v321, (char *)v286, v289);
            (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v322, v294, v289);
            v295 = swift_isUniquelyReferenced_nonNull_native(v342);
            v137 = v339;
            if ((v295 & 1) == 0)
              v342 = (_QWORD *)sub_100227A54(0, v342[2] + 1, 1, (unint64_t)v342);
            v297 = v342[2];
            v296 = v342[3];
            v57 = v293;
            if (v297 >= v296 >> 1)
              v342 = (_QWORD *)sub_100227A54(v296 > 1, v297 + 1, 1, (unint64_t)v342);
            v94 = v292;
            v298 = v342;
            v342[2] = v297 + 1;
            v299 = (unint64_t)v298
                 + ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80))
                 + *(_QWORD *)(v362 + 72) * v297;
            v300 = v362;
            v301 = v366;
            v86((NSURL *)v299, v322, v366);
            (*(void (**)(char *, uint64_t))(v300 + 8))(v321, v301);
            v138 = v291;
            v269 = v85 + 1;
            if (__OFADD__(v85, 1))
              goto LABEL_115;
            goto LABEL_104;
          }
          sub_10000D0F0(v286, (uint64_t *)&unk_1007B5200);
        }
        v137 = v339;
      }
      v269 = v85 + 1;
      if (__OFADD__(v85, 1))
        goto LABEL_115;
    }
    else
    {
      v216 = 0;
      v269 = v85 + 1;
      if (__OFADD__(v85, 1))
        goto LABEL_115;
    }
LABEL_104:
    isa = v138;
    v335((double)v269 / v69);
    v66 = v362;
    (*(void (**)(char *, uint64_t))(v337 + 8))(v137, v338);
    v290 = v355._baseURL;
    v67 = v366;
    (*(void (**)(NSURL *, uint64_t))(v66 + 8))(v355._baseURL, v366);

    baseURL = v290;
    v365 = v94;
    v22 = v357;
    goto LABEL_18;
  }
  result = objc_msgSend(v184, "videoPath");
  v94 = v365;
  if (result)
  {
    v188 = result;
    v189 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v191 = v190;

    v192 = v324;
    URL.init(fileURLWithPath:)(v189, v191);
    v193 = swift_bridgeObjectRelease(v191);
    ((void (*)(char *, char *, uint64_t, __n128))v158)(v325, v192, v366, v193);
    if ((swift_isUniquelyReferenced_nonNull_native(v345) & 1) == 0)
      v345 = (_QWORD *)sub_100227A54(0, v345[2] + 1, 1, (unint64_t)v345);
    v195 = v345[2];
    v194 = v345[3];
    v137 = v339;
    if (v195 >= v194 >> 1)
      v345 = (_QWORD *)sub_100227A54(v194 > 1, v195 + 1, 1, (unint64_t)v345);
    v196 = v345;
    v345[2] = v195 + 1;
    v197 = (unint64_t)v196
         + ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80))
         + *(_QWORD *)(v362 + 72) * v195;
    v198 = v362;
    v199 = v366;
    v86((NSURL *)v197, v325, v366);

    (*(void (**)(char *, uint64_t))(v198 + 8))(v324, v199);
    goto LABEL_88;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005216F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100521764, static AirDropActor.shared, 0);
}

uint64_t sub_100521764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers) = v2;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005217D8()
{
  id *v0;
  double v1;

  sub_10000D0F0((uint64_t)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID, &qword_1007B7280);
  *(_QWORD *)&v1 = swift_bridgeObjectRelease(*(const char **)((char *)v0
                                                            + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers), v1);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100521838()
{
  return type metadata accessor for SDAirDropContentHandlerPhotos(0);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPhotos(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C4F68;
  if (!qword_1007C4F68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropContentHandlerPhotos);
  return result;
}

void sub_10052187C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  sub_100521910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_1005DBA88;
    v4[5] = &unk_1005DBA88;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_100521910(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007B6230)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007B6230);
  }
}

uint64_t sub_100521968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPhotos(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_QWORD *)(v3 + 16) = 0;
  v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  v5 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) = 0;
  *a1 = v3;
  return result;
}

uint64_t sub_100521A14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C4F7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_10051D2D0(a1);
}

void sub_100521A64(uint64_t a1, int a2)
{
  sub_10051D8D0(a1, a2);
}

uint64_t sub_100521A84(uint64_t a1, int a2, uint64_t a3)
{
  return sub_10051F168(a1, a2, a3);
}

uint64_t sub_100521AA4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v19 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_10072E198, v14 + 8, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15 + v12, v9, v6);
  *(_QWORD *)(v15 + v13) = a1;
  *(_QWORD *)(v15 + v14) = v10;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v16 = sub_100008384((uint64_t *)&unk_1007B6820);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x502074726F706D49, 0xED0000736F746F68, &v19, &unk_1007C5120, v15, 0xD000000000000064, 0x80000001006200F0, 284, &type metadata for Double, v16);
}

uint64_t sub_100521C18(uint64_t a1)
{
  return sub_10051F0A8(a1);
}

BOOL sub_100521C38()
{
  _QWORD *v0;

  return *(_QWORD *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers)
                   + 16) > 1uLL;
}

uint64_t sub_100521C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007C5130 + dword_1007C5130);
  v6 = (_QWORD *)swift_task_alloc(unk_1007C5134);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1003B9D1C;
  return v8(a2, a3);
}

uint64_t sub_100521CCC()
{
  NSString v0;
  id v1;
  void *v2;
  NSObject *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  const char *v11;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  id v25;
  uint64_t v26;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(RBSProcessPredicate), "predicateMatchingBundleIdentifier:", v0);

  v2 = (void *)objc_opt_self(RBSProcessHandle);
  v25 = 0;
  v3 = v1;
  v4 = objc_msgSend(v2, "handleForPredicate:error:", v3, &v25);
  v5 = v25;
  if (!v4)
  {
    v14 = v25;
    v15 = _convertNSErrorToError(_:)(v5);

    swift_willThrow(v16);
    if (qword_1007B4270 != -1)
      swift_once(&qword_1007B4270, sub_10051D084);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007C4EF8);
    swift_errorRetain(v15);
    v18 = swift_errorRetain(v15);
    v3 = Logger.logObject.getter(v18);
    v19 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled(v3, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v20 = 138412290;
      swift_errorRetain(v15);
      v22 = (void *)_swift_stdlib_bridgeErrorToNSError(v15);
      v25 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v20 + 4);
      *v21 = v22;
      swift_errorRelease(v15);
      swift_errorRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v3, v19, "Unable to check if Photos is visible: %@", v20, 0xCu);
      v23 = sub_100008384(&qword_1007B4C30);
      v13 = 1;
      swift_arrayDestroy(v21, 1, v23);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      swift_errorRelease(v15);
      return v13 & 1;
    }
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
LABEL_11:

    v13 = 1;
    return v13 & 1;
  }
  v6 = v4;
  v7 = v25;

  v8 = objc_msgSend(v6, "currentState");
  if (!v8
    || (v9 = v8,
        v10 = objc_msgSend(v8, "endowmentNamespaces"),
        v9,
        !v10))
  {

    goto LABEL_11;
  }
  v11 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String, &protocol witness table for String);

  v12 = sub_100455328(0xD00000000000001FLL, 0x80000001006200D0, (uint64_t)v11);
  swift_bridgeObjectRelease(v11);

  v13 = v12 ^ 1;
  return v13 & 1;
}

uint64_t sub_100522020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1005220AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v8 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v3 + v9;
  v12 = *(_QWORD *)(v3 + v10);
  v13 = *(_QWORD *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1007C511C);
  *(_QWORD *)(v4 + 16) = v14;
  *v14 = v4;
  v14[1] = sub_10000D12C;
  return sub_10051E268(a1, a2, a3, v11, v12, v13);
}

uint64_t sub_100522164(double a1)
{
  uint64_t v1;
  uint64_t (*v2)(double *);
  double v4;

  v2 = *(uint64_t (**)(double *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_100522194(uint64_t a1)
{
  uint64_t v1;

  return sub_10051E76C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1005221A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005221C8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 4));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_release(*(_QWORD *)&v0[v6 + 8]);
  return swift_deallocObject(v0, v6 + 16, v5);
}

double sub_10052226C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  char *v3;
  double result;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (char *)v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)&result = sub_10051EB30(v0[2], v0[3], (_QWORD *)v0[4], (uint64_t)v0 + v2, (void (*)(double))*(_QWORD *)v3, *((_QWORD *)v3 + 1)).n128_u64[0];
  return result;
}

uint64_t sub_1005222B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005222C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005222D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = sub_100008384(&qword_1007C5128);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100522364(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_100008384(&qword_1007C5128) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10051EB9C(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005223CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[12] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[13] = v6;
  v3[14] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[16] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v3[17] = v9;
  v3[18] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B68A0);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B7280);
  v3[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v12 = static AirDropActor.shared;
  v3[21] = static AirDropActor.shared;
  return swift_task_switch(sub_1005224DC, v12, 0);
}

uint64_t sub_1005224DC()
{
  _QWORD *v0;
  uint64_t v1;
  const char *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(const char *);

  v1 = v0[10];
  v0[22] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()), "init");
  v2 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs);
  v0[23] = v2;
  v3 = unk_1007C53FC;
  v6 = (uint64_t (*)(const char *))((char *)&dword_1007C53F8 + dword_1007C53F8);
  swift_bridgeObjectRetain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[24] = v4;
  *v4 = v0;
  v4[1] = sub_100522578;
  return v6(v2);
}

uint64_t sub_100522578(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v8;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = v1;
  *(_BYTE *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 168);
    v6 = sub_100522808;
  }
  else
  {
    v7 = *(void **)(v3 + 176);
    v8 = *(_QWORD *)(v3 + 168);
    swift_bridgeObjectRelease(*(const char **)(v3 + 184));

    v6 = sub_100522604;
    v5 = v8;
  }
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_100522604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100221F28(v4, v1, &qword_1007B7280);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  sub_10000D0F0(v1, &qword_1007B7280);
  if ((_DWORD)v2 != 1)
  {
    v6 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v26 = v8;
    v10 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v12, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v13, v11);
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = *(unsigned __int8 *)(v10 + 80);
    v18 = (v28 + v17 + v16) & ~v17;
    v19 = swift_allocObject(&unk_10072E2B0, v18 + v27, v15 | v17 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v19 + v16, v6, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v19 + v18, v26, v11);
    v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_1007BA098, v19, (char *)&type metadata for () + 8);
    swift_release(v19);
    swift_release(v20);
    sub_10000D0F0(v5, &qword_1007B68A0);
  }
  v21 = *(unsigned __int8 *)(v0 + 48);
  v22 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_100522808()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100522884()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005228B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1007C513C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000D12C;
  return sub_1005216F8(v2, v3, v4);
}

uint64_t sub_100522918()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100522940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1005229F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B7280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100522A3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100522A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100522A80);
}

uint64_t sub_100522A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100008384(&qword_1007C4330);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 80) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100522B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100522B1C);
}

uint64_t sub_100522B1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100008384(&qword_1007C4330);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for SDAuthenticationSessionMetrics(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C51C0;
  if (!qword_1007C51C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSessionMetrics);
  return result;
}

void sub_100522BD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[18];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = v4[0];
    v4[5] = v4[0];
    v4[6] = v4[0];
    v4[7] = v4[0];
    v4[8] = v4[0];
    v4[9] = &unk_1005DBB00;
    v4[10] = v4[0];
    v4[11] = v4[0];
    v4[12] = v4[0];
    v4[13] = v4[0];
    v4[14] = &unk_1005DBB18;
    v4[15] = &unk_1005DBB30;
    v4[16] = &unk_1005DBB48;
    v4[17] = &unk_1005DBB48;
    swift_initStructMetadata(a1, 256, 18, v4, a1 + 16);
  }
}

void sub_100522C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  int v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  const char *object;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  const char *v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  const char *v51;
  Swift::String v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  const char *v64;
  Swift::String v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  const char *v77;
  Swift::String v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  const char *v90;
  Swift::String v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  Swift::String v102;
  const char *v103;
  Swift::String v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  void *v115;
  Swift::String v116;
  Swift::String v117;
  uint64_t v118;
  uint64_t v119;
  Swift::String v120;
  const char *v121;
  Swift::String v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  const char *v131;
  const char *v132;
  id v133;
  NSString v134;
  NSString v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v1 = v0;
  v2 = sub_100008384(&qword_1007B54A0);
  v3 = (_QWORD *)swift_allocObject(v2, 48, 7);
  *((_OWORD *)v3 + 1) = xmmword_1005CD2A0;
  v3[4] = UUID.uuidString.getter(v3);
  v3[5] = v4;
  if (qword_1007B4280 != -1)
    swift_once(&qword_1007B4280, sub_1005237C8);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100221DF8(v5, (uint64_t)qword_1007C5150);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Logging metrics", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for SDAuthenticationSessionMetrics(0) + 76));
  if (v10 != 2)
  {
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000016;
    v142 = 0x8000000100619B90;
    if ((v10 & 1) != 0)
      v11 = 1702195828;
    else
      v11 = 0x65736C6166;
    if ((v10 & 1) != 0)
      v12 = (const char *)0xE400000000000000;
    else
      v12 = (const char *)0xE500000000000000;
    v13 = v12;
    String.append(_:)(*(Swift::String *)&v11);
    swift_bridgeObjectRelease(v12);
    v14 = (uint64_t)v141;
    v15 = v142;
    v17 = v3[2];
    v16 = v3[3];
    if (v17 >= v16 >> 1)
      v3 = sub_100227A68((_QWORD *)(v16 > 1), v17 + 1, 1, v3);
    v3[2] = v17 + 1;
    v18 = &v3[2 * v17];
    v18[4] = v14;
    v18[5] = v15;
  }
  v19 = sub_100524370();
  if ((v20 & 1) == 0)
  {
    v21 = v19;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD00000000000001ELL;
    v142 = 0x8000000100619B70;
    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Double;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v23 + 32) = v21;
    v24._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v23);
    object = (const char *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v26._countAndFlagsBits = 115;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    v27 = (uint64_t)v141;
    v28 = v142;
    v30 = v3[2];
    v29 = v3[3];
    if (v30 >= v29 >> 1)
      v3 = sub_100227A68((_QWORD *)(v29 > 1), v30 + 1, 1, v3);
    v3[2] = v30 + 1;
    v31 = &v3[2 * v30];
    v31[4] = v27;
    v31[5] = v28;
  }
  v32 = sub_100524538();
  if ((v33 & 1) == 0)
  {
    v34 = v32;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000029;
    v142 = 0x8000000100619B40;
    v35 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v36 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v36 + 56) = &type metadata for Double;
    *(_QWORD *)(v36 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v36 + 32) = v34;
    v37._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v36);
    v38 = (const char *)v37._object;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(v38);
    v39._countAndFlagsBits = 115;
    v39._object = (void *)0xE100000000000000;
    String.append(_:)(v39);
    v40 = (uint64_t)v141;
    v41 = v142;
    v43 = v3[2];
    v42 = v3[3];
    if (v43 >= v42 >> 1)
      v3 = sub_100227A68((_QWORD *)(v42 > 1), v43 + 1, 1, v3);
    v3[2] = v43 + 1;
    v44 = &v3[2 * v43];
    v44[4] = v40;
    v44[5] = v41;
  }
  v45 = sub_100523A20();
  if ((v46 & 1) == 0)
  {
    v47 = v45;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000018;
    v142 = 0x8000000100619B20;
    v48 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v49 = swift_allocObject(v48, 72, 7);
    *(_OWORD *)(v49 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v49 + 56) = &type metadata for Double;
    *(_QWORD *)(v49 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v49 + 32) = v47;
    v50._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v49);
    v51 = (const char *)v50._object;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v51);
    v52._countAndFlagsBits = 115;
    v52._object = (void *)0xE100000000000000;
    String.append(_:)(v52);
    v53 = (uint64_t)v141;
    v54 = v142;
    v56 = v3[2];
    v55 = v3[3];
    if (v56 >= v55 >> 1)
      v3 = sub_100227A68((_QWORD *)(v55 > 1), v56 + 1, 1, v3);
    v3[2] = v56 + 1;
    v57 = &v3[2 * v56];
    v57[4] = v53;
    v57[5] = v54;
  }
  v58 = sub_100523BF0();
  if ((v59 & 1) == 0)
  {
    v60 = v58;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD00000000000001BLL;
    v142 = 0x8000000100619B00;
    v61 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v62 = swift_allocObject(v61, 72, 7);
    *(_OWORD *)(v62 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v62 + 56) = &type metadata for Double;
    *(_QWORD *)(v62 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v62 + 32) = v60;
    v63._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v62);
    v64 = (const char *)v63._object;
    String.append(_:)(v63);
    swift_bridgeObjectRelease(v64);
    v65._countAndFlagsBits = 115;
    v65._object = (void *)0xE100000000000000;
    String.append(_:)(v65);
    v66 = (uint64_t)v141;
    v67 = v142;
    v69 = v3[2];
    v68 = v3[3];
    if (v69 >= v68 >> 1)
      v3 = sub_100227A68((_QWORD *)(v68 > 1), v69 + 1, 1, v3);
    v3[2] = v69 + 1;
    v70 = &v3[2 * v69];
    v70[4] = v66;
    v70[5] = v67;
  }
  v71 = sub_100523DC0();
  if ((v72 & 1) == 0)
  {
    v73 = v71;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD00000000000001CLL;
    v142 = 0x8000000100619AE0;
    v74 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v75 = swift_allocObject(v74, 72, 7);
    *(_OWORD *)(v75 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v75 + 56) = &type metadata for Double;
    *(_QWORD *)(v75 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v75 + 32) = v73;
    v76._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v75);
    v77 = (const char *)v76._object;
    String.append(_:)(v76);
    swift_bridgeObjectRelease(v77);
    v78._countAndFlagsBits = 115;
    v78._object = (void *)0xE100000000000000;
    String.append(_:)(v78);
    v79 = (uint64_t)v141;
    v80 = v142;
    v82 = v3[2];
    v81 = v3[3];
    if (v82 >= v81 >> 1)
      v3 = sub_100227A68((_QWORD *)(v81 > 1), v82 + 1, 1, v3);
    v3[2] = v82 + 1;
    v83 = &v3[2 * v82];
    v83[4] = v79;
    v83[5] = v80;
  }
  v84 = sub_100523F90();
  if ((v85 & 1) == 0)
  {
    v86 = v84;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000019;
    v142 = 0x8000000100619AC0;
    v87 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v88 = swift_allocObject(v87, 72, 7);
    *(_OWORD *)(v88 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v88 + 56) = &type metadata for Double;
    *(_QWORD *)(v88 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v88 + 32) = v86;
    v89._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v88);
    v90 = (const char *)v89._object;
    String.append(_:)(v89);
    swift_bridgeObjectRelease(v90);
    v91._countAndFlagsBits = 115;
    v91._object = (void *)0xE100000000000000;
    String.append(_:)(v91);
    v92 = (uint64_t)v141;
    v93 = v142;
    v95 = v3[2];
    v94 = v3[3];
    if (v95 >= v94 >> 1)
      v3 = sub_100227A68((_QWORD *)(v94 > 1), v95 + 1, 1, v3);
    v3[2] = v95 + 1;
    v96 = &v3[2 * v95];
    v96[4] = v92;
    v96[5] = v93;
  }
  v97 = sub_1005241A0();
  if ((v98 & 1) == 0)
  {
    v99 = v97;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000016;
    v142 = 0x8000000100619AA0;
    v100 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v101 = swift_allocObject(v100, 72, 7);
    *(_OWORD *)(v101 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v101 + 56) = &type metadata for Double;
    *(_QWORD *)(v101 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v101 + 32) = v99;
    v102._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v101);
    v103 = (const char *)v102._object;
    String.append(_:)(v102);
    swift_bridgeObjectRelease(v103);
    v104._countAndFlagsBits = 115;
    v104._object = (void *)0xE100000000000000;
    String.append(_:)(v104);
    v105 = (uint64_t)v141;
    v106 = v142;
    v108 = v3[2];
    v107 = v3[3];
    if (v108 >= v107 >> 1)
      v3 = sub_100227A68((_QWORD *)(v107 > 1), v108 + 1, 1, v3);
    v3[2] = v108 + 1;
    v109 = &v3[2 * v108];
    v109[4] = v105;
    v109[5] = v106;
  }
  v110 = sub_100523858();
  if ((v111 & 1) == 0)
  {
    v112 = v110;
    sub_100523A20();
    if ((v113 & 1) != 0)
      v114 = 0;
    else
      v114 = 0xD000000000000013;
    if ((v113 & 1) != 0)
      v115 = (void *)0xE000000000000000;
    else
      v115 = (void *)0x8000000100619A80;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease((const char *)0xE000000000000000);
    v141 = (_QWORD *)0xD000000000000017;
    v142 = 0x8000000100619A60;
    v116._countAndFlagsBits = v114;
    v116._object = v115;
    String.append(_:)(v116);
    swift_bridgeObjectRelease((const char *)v115);
    v117._countAndFlagsBits = 2112800;
    v117._object = (void *)0xE300000000000000;
    String.append(_:)(v117);
    v118 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v119 = swift_allocObject(v118, 72, 7);
    *(_OWORD *)(v119 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v119 + 56) = &type metadata for Double;
    *(_QWORD *)(v119 + 64) = &protocol witness table for Double;
    *(_QWORD *)(v119 + 32) = v112;
    v120._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v119);
    v121 = (const char *)v120._object;
    String.append(_:)(v120);
    swift_bridgeObjectRelease(v121);
    v122._countAndFlagsBits = 115;
    v122._object = (void *)0xE100000000000000;
    String.append(_:)(v122);
    v123 = (uint64_t)v141;
    v124 = v142;
    v126 = v3[2];
    v125 = v3[3];
    if (v126 >= v125 >> 1)
      v3 = sub_100227A68((_QWORD *)(v125 > 1), v126 + 1, 1, v3);
    v3[2] = v126 + 1;
    v127 = &v3[2 * v126];
    v127[4] = v123;
    v127[5] = v124;
  }
  v141 = v3;
  v128 = sub_100008384((uint64_t *)&unk_1007BD6A0);
  v129 = sub_1002E7428();
  v130 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v128, v129);
  v132 = v131;
  swift_bridgeObjectRelease((const char *)v3);
  v133 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v134 = String._bridgeToObjectiveC()();
  v135 = String._bridgeToObjectiveC()();
  objc_msgSend(v133, "setObject:forKey:", v134, v135);

  swift_bridgeObjectRetain(v132);
  v137 = Logger.logObject.getter(v136);
  v138 = static os_log_type_t.default.getter(v137);
  if (os_log_type_enabled(v137, v138))
  {
    v139 = (uint8_t *)swift_slowAlloc(12, -1);
    v140 = swift_slowAlloc(32, -1);
    v141 = (_QWORD *)v140;
    *(_DWORD *)v139 = 136315138;
    swift_bridgeObjectRetain(v132);
    v143 = sub_100228BD8(v130, (unint64_t)v132, (uint64_t *)&v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144, v139 + 4);
    swift_bridgeObjectRelease_n(v132, 3);
    _os_log_impl((void *)&_mh_execute_header, v137, v138, "%s", v139, 0xCu);
    swift_arrayDestroy(v140, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v140, -1, -1);
    swift_slowDealloc(v139, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v132, 2);
  }
}

uint64_t sub_1005237C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C5150);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C5150);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100523858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  sub_10027ACA0(v0, (uint64_t)v6);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    v15 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v15);
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  v17 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v17 + 20), (uint64_t)v4);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v16(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100523A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v14 + 24), (uint64_t)v6);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v16);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_10027ACA0(v0 + *(int *)(v14 + 28), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100523BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v14 + 32), (uint64_t)v6);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v16);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_10027ACA0(v0 + *(int *)(v14 + 36), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100523DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v14 + 40), (uint64_t)v6);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v16);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_10027ACA0(v0 + *(int *)(v14 + 44), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100523F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  double v21;
  uint64_t v22;
  char v23;
  char v24;
  void (*v25)(char *, uint64_t);
  double v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_100008384(&qword_1007C4330);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v27 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - v13;
  v15 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  if ((*(_BYTE *)(v1 + *(int *)(v15 + 52)) & 1) != 0)
  {
    *(double *)&result = 0.0;
    return result;
  }
  v17 = v15;
  sub_10027ACA0(v1 + *(int *)(v15 + 48), (uint64_t)v7);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v18(v7, 1, v8) == 1)
  {
    v19 = (uint64_t)v7;
LABEL_7:
    sub_1002D4730(v19);
    *(double *)&result = 0.0;
    return result;
  }
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v14, v7, v8);
  sub_10027ACA0(v1 + *(int *)(v17 + 40), (uint64_t)v5);
  if (v18(v5, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v19 = (uint64_t)v5;
    goto LABEL_7;
  }
  v20(v12, v5, v8);
  v21 = Date.timeIntervalSince(_:)(v12);
  v22 = sub_100523DC0();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v12, v8);
  v25(v14, v8);
  v26 = *(double *)&v22;
  if ((v24 & 1) != 0)
    v26 = 0.0;
  *(double *)&result = v21 - v26;
  return result;
}

uint64_t sub_1005241A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v14 + 56), (uint64_t)v6);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v16);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_10027ACA0(v0 + *(int *)(v14 + 60), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100524370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v14 + 64), (uint64_t)v6);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v16);
    return 0;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_10027ACA0(v0, (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v13);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

uint64_t sub_100524538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  double v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = sub_100008384(&qword_1007C4330);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v21 - v12;
  sub_10027ACA0(v0, (uint64_t)v6);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    v15 = (uint64_t)v6;
LABEL_5:
    sub_1002D4730(v15);
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  v17 = type metadata accessor for SDAuthenticationSessionMetrics(0);
  sub_10027ACA0(v0 + *(int *)(v17 + 68), (uint64_t)v4);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v16(v11, v4, v7);
  v19 = Date.timeIntervalSince(_:)(v11);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(_QWORD *)&v19;
}

void sub_100524700(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  Class isa;
  unsigned __int8 v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;

  v17 = *(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  v5 = v17;
  v6 = sub_100008384(&qword_1007C5310);
  Optional.tryUnwrap(_:file:line:)(0xD00000000000002CLL, 0x80000001006202D0, 0xD000000000000065, 0x8000000100620240, 47, v6);

  if (!v3)
  {
    v7 = v16;
    if (a2 >> 60 == 15)
      isa = 0;
    else
      isa = Data._bridgeToObjectiveC()().super.isa;
    v16 = 0;
    v9 = objc_msgSend(v7, "stepSessionWithData:outputData:", isa, &v16);

    v10 = v16;
    if ((v9 & 1) != 0)
    {
      v17 = v16;
      v11 = v16;
      v12 = sub_100008384(&qword_1007C5318);
      Optional.tryUnwrap(_:file:line:)(0x2070657473206F4ELL, 0xEC00000061746164, 0xD000000000000065, 0x8000000100620240, 53, v12);

    }
    else
    {
      v13 = sub_100244304();
      swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0, 0);
      *(_DWORD *)v14 = 10;
      *(_QWORD *)(v14 + 8) = 0xD000000000000017;
      *(_QWORD *)(v14 + 16) = 0x8000000100620300;
      v15 = v10;
      swift_willThrow(v15);

    }
  }
}

id sub_100524914()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  v3 = sub_100008384(&qword_1007C5310);
  Optional.tryUnwrap(_:file:line:)(0xD000000000000033, 0x8000000100620200, 0xD000000000000065, 0x8000000100620240, 65, v3);

  if (!v1)
  {
    v4 = objc_msgSend(v10, "generateSessionToken");
    if (v4)
    {
      v5 = v4;
      v2 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);

    }
    else
    {
      v7 = sub_100244304();
      v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0, 0);
      *(_DWORD *)v9 = 10;
      *(_QWORD *)(v9 + 8) = 0xD00000000000001ELL;
      *(_QWORD *)(v9 + 16) = 0x80000001006202B0;
      swift_willThrow(v8);
    }

  }
  return v2;
}

void sub_100524A50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  const char *v16;
  const char *v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  const char *v25;
  const char *v26;
  double v27;
  NSString v28;
  NSString v29;
  Class isa;
  id v31;
  id v32;
  uint64_t *v33;
  void *v34;
  uint64_t v35;
  NSData v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  const char *v50;
  const char *v51;
  double v52;
  NSString v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  const char *v64;
  const char *v65;
  double v66;
  NSString v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  _QWORD *v75;
  id v76;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type);
  v7 = a2 >> 60;
  if (a2 >> 60 == 15 || v6 != 6)
  {
    LODWORD(v75) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
    v74[0] = a1;
    v76 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    v21 = sub_10023A834((_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v20);
    v74[1] = v74;
    v22 = *(_QWORD *)(v20 - 8);
    __chkstk_darwin(v21);
    v24 = (char *)v74 - v23;
    (*(void (**)(char *))(v22 + 16))((char *)v74 - v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    if (v6 == 7)
    {
      if (v26)
      {
        v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26, v74[0]);
      }
      else
      {
        v28 = 0;
      }
      v31 = v76;
      v33 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
      v35 = v75;
      if (v7 > 0xE)
        v36.super.isa = 0;
      else
        v36.super.isa = Data._bridgeToObjectiveC()().super.isa;
      v37 = objc_msgSend(v31, "aksAuthorizationSessionForDeviceID:attestation:originator:externalACMContext:sessionType:", v28, 1, v35, v36.super.isa, 9, v74[0]);

    }
    else
    {
      if (v26)
      {
        v29 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v27 = swift_bridgeObjectRelease(v26, v74[0]).n128_u64[0];
      }
      else
      {
        v29 = 0;
      }
      v31 = v76;
      v33 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
      v38 = 2;
      if (v6 == 6)
        v38 = 8;
      if (v6 == 4)
        v39 = 7;
      else
        v39 = v38;
      v37 = objc_msgSend(v76, "aksAuthSessionForDeviceID:originator:usingEscrow:attestation:sessionType:", v29, v75, (unint64_t)(v6 - 3) < 2, (unint64_t)(v6 - 3) < 5, v39, v27);

    }
    v40 = v33[255];
    v34 = *(void **)(v3 + v40);
    *(_QWORD *)(v3 + v40) = v37;
  }
  else
  {
    v76 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    v10 = sub_10023A834((_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v9);
    v75 = v74;
    v11 = *(_QWORD *)(v9 - 8);
    __chkstk_darwin(v10);
    v13 = (char *)v74 - v12;
    (*(void (**)(char *))(v11 + 16))((char *)v74 - v12);
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15 = a1;
    sub_10022E4A8(a1, a2);
    v14(v9, v8);
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    if (v17)
    {
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = 0;
    }
    isa = Data._bridgeToObjectiveC()().super.isa;
    v31 = v76;
    v32 = objc_msgSend(v76, "aksAuthSessionForDeviceID:attestation:sessionType:escrowSecret:", v18, 1, 8, isa);
    sub_100225AA0(v15, a2);

    v33 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
    v34 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = v32;
  }

  v41 = *(void **)(v3 + v33[255]);
  if (v41)
  {
    v42 = v41;
    if ((objc_msgSend(v42, "sessionIsValid") & 1) == 0)
    {
      v54 = sub_100244304();
      v55 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v54, 0, 0);
      *(_DWORD *)v56 = 10;
      *(_QWORD *)(v56 + 8) = 0xD000000000000013;
      *(_QWORD *)(v56 + 16) = 0x8000000100620380;
      swift_willThrow(v55);
    }

  }
  else
  {
    v43 = (_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
    v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    v45 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    v46 = sub_10023A834(v43, v44);
    v47 = *(_QWORD *)(v44 - 8);
    __chkstk_darwin(v46);
    v49 = (char *)v74 - v48;
    (*(void (**)(char *))(v47 + 16))((char *)v74 - v48);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
    v51 = v50;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v44);
    if (v51)
    {
      v53 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v51).n128_u64[0];
    }
    else
    {
      v53 = 0;
    }
    v57 = objc_msgSend(v31, "cachedEscrowSecretExistsForDeviceID:", v53, v52, v74[0]);

    if ((v57 & 1) != 0)
    {
      v58 = v43[3];
      v59 = v43[4];
      v60 = sub_10023A834(v43, v58);
      v61 = *(_QWORD *)(v58 - 8);
      __chkstk_darwin(v60);
      v63 = (char *)v74 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v61 + 16))(v63);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v59);
      v65 = v64;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v58);
      if (v65)
      {
        v67 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v66 = swift_bridgeObjectRelease(v65).n128_u64[0];
      }
      else
      {
        v67 = 0;
      }
      v71 = objc_msgSend(v31, "cachedEscrowSecretIsValidForDeviceID:", v67, v66);

      v72 = sub_100244304();
      v69 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v72, 0, 0);
      if ((v71 & 1) != 0)
      {
        *(_DWORD *)v73 = 10;
        *(_QWORD *)(v73 + 8) = 0xD00000000000001DLL;
        *(_QWORD *)(v73 + 16) = 0x8000000100620360;
      }
      else
      {
        *(_DWORD *)v73 = 22;
        *(_QWORD *)(v73 + 8) = 0xD000000000000015;
        *(_QWORD *)(v73 + 16) = 0x8000000100620340;
      }
    }
    else
    {
      v68 = sub_100244304();
      v69 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v68, 0, 0);
      *(_DWORD *)v70 = 10;
      *(_QWORD *)(v70 + 8) = 0xD000000000000015;
      *(_QWORD *)(v70 + 16) = 0x8000000100620320;
    }
    swift_willThrow(v69);
  }
}

void sub_1005250BC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  v3 = sub_100008384(&qword_1007C5310);
  Optional.tryUnwrap(_:file:line:)(0xD00000000000002CLL, 0x80000001006202D0, 0xD000000000000065, 0x8000000100620240, 57, v3);

  if (!v1)
  {
    if ((objc_msgSend(v7, "confirmSession") & 1) == 0)
    {
      v4 = sub_100244304();
      v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0, 0);
      *(_DWORD *)v6 = 10;
      *(_QWORD *)(v6 + 8) = 0xD00000000000001DLL;
      *(_QWORD *)(v6 + 16) = 0x80000001006203A0;
      swift_willThrow(v5);
    }

  }
}

id sub_1005251C4()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  const char *v10;
  double v11;
  NSString v12;
  char **v13;
  id v14;
  uint64_t v16;

  v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
  v5 = sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v4);
  v6 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v16 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if ((v1 & 1) != 0)
  {
    if (v10)
    {
      v12 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }
    else
    {
      v12 = 0;
    }
    v13 = &selRef_deviceEnabledAsKeyForIDSDeviceID_;
  }
  else
  {
    if (v10)
    {
      v12 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }
    else
    {
      v12 = 0;
    }
    v13 = &selRef_deviceEnabledAsKey_;
  }
  v14 = objc_msgSend(v2, *v13, v12, v11);

  return v14;
}

uint64_t sub_100525314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_10022E75C((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100525394()
{
  return type metadata accessor for SDAuthenticationAKSAuthSession(0);
}

uint64_t type metadata accessor for SDAuthenticationAKSAuthSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C5260;
  if (!qword_1007C5260)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationAKSAuthSession);
  return result;
}

uint64_t sub_1005253D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = "(";
    v4[4] = &unk_1005DBBC8;
    v4[5] = &unk_1005DBBE0;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropProgressReportingFactory()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropProgressReportingFactory);
}

uint64_t SFAirDropReceive.Failure.legacyFailureReason.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for SFAirDropReceive.Failure(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_bridgeObjectRelease(*((const char **)v5 + 1));
    v7 = &v5[*(int *)(sub_100008384((uint64_t *)&unk_1007BB610) + 48)];
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    return 1;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.declined(_:))
    return 3;
  if (v6 == enum case for SFAirDropReceive.Failure.askDismissed(_:)
    || v6 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
  {
    return 0;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
    return 3;
  if (v6 == enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    return 2;
  v9 = 1;
  if (v6 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:)
    || v6 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:)
    || v6 == enum case for SFAirDropReceive.Failure.streamError(_:)
    || v6 == enum case for SFAirDropReceive.Failure.askNotHandled(_:)
    || v6 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
    || v6 == enum case for SFAirDropReceive.Failure.badRequest(_:))
  {
    return v9;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:))
    return 3;
  if (v6 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
    return 1;
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
  __break(1u);
  return result;
}

uint64_t sub_1005256D4(uint64_t a1, const char *a2, char a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  const char *v21;
  _QWORD v22[3];
  _BYTE v23[24];

  v21 = a2;
  v6 = sub_100008384(&qword_1007C5440);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v20 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  v15 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x58)) + 16);
  os_unfair_lock_lock(v15);
  v16 = (uint64_t)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x68);
  swift_beginAccess(v16, v23, 0, 0);
  sub_100221F28(v16, (uint64_t)v14, &qword_1007C5440);
  v17 = sub_100008384(&qword_1007C5448);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v12, 1, 1, v17);
  swift_beginAccess(v16, v22, 33, 0);
  sub_10023A084((uint64_t)v12, v16, &qword_1007C5440);
  swift_endAccess(v22);
  os_unfair_lock_unlock(v15);
  sub_100221F28((uint64_t)v14, (uint64_t)v9, &qword_1007C5440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_10000D0F0((uint64_t)v14, &qword_1007C5440);
    return sub_10000D0F0((uint64_t)v9, &qword_1007C5440);
  }
  else
  {
    if ((a3 & 1) != 0)
    {
      v22[0] = a1;
      swift_errorRetain(a1);
      CheckedContinuation.resume(throwing:)(v22, v17);
    }
    else
    {
      v22[0] = a1;
      v22[1] = v21;
      swift_bridgeObjectRetain(v21);
      CheckedContinuation.resume(returning:)(v22, v17);
    }
    sub_10000D0F0((uint64_t)v14, &qword_1007C5440);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
}

uint64_t sub_100525904(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  _BYTE v20[24];

  v5 = sub_100008384(&qword_1007C5408);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v19 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v19 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x58)) + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x68);
  swift_beginAccess(v15, v20, 0, 0);
  sub_100221F28(v15, (uint64_t)v13, &qword_1007C5408);
  v16 = sub_100008384(&qword_1007C5410);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v11, 1, 1, v16);
  swift_beginAccess(v15, v19, 33, 0);
  sub_10023A084((uint64_t)v11, v15, &qword_1007C5408);
  swift_endAccess(v19);
  os_unfair_lock_unlock(v14);
  sub_100221F28((uint64_t)v13, (uint64_t)v8, &qword_1007C5408);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    sub_10000D0F0((uint64_t)v13, &qword_1007C5408);
    return sub_10000D0F0((uint64_t)v8, &qword_1007C5408);
  }
  else
  {
    if ((a2 & 1) != 0)
    {
      v19[0] = a1;
      swift_errorRetain(a1);
      CheckedContinuation.resume(throwing:)(v19, v16);
    }
    else
    {
      LOBYTE(v19[0]) = a1;
      CheckedContinuation.resume(returning:)(v19, v16);
    }
    sub_10000D0F0((uint64_t)v13, &qword_1007C5408);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }
}

uint64_t sub_100525B28(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  _BYTE v20[24];

  v5 = sub_100008384(&qword_1007C5420);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v19 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v19 - v12;
  v14 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x58)) + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x68);
  swift_beginAccess(v15, v20, 0, 0);
  sub_100221F28(v15, (uint64_t)v13, &qword_1007C5420);
  v16 = sub_100008384(&qword_1007C5428);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v11, 1, 1, v16);
  swift_beginAccess(v15, v19, 33, 0);
  sub_10023A084((uint64_t)v11, v15, &qword_1007C5420);
  swift_endAccess(v19);
  os_unfair_lock_unlock(v14);
  sub_100221F28((uint64_t)v13, (uint64_t)v8, &qword_1007C5420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    sub_10000D0F0((uint64_t)v13, &qword_1007C5420);
    return sub_10000D0F0((uint64_t)v8, &qword_1007C5420);
  }
  else
  {
    if ((a2 & 1) != 0)
    {
      v19[0] = a1;
      swift_errorRetain(a1);
      CheckedContinuation.resume(throwing:)(v19, v16);
    }
    else
    {
      LOBYTE(v19[0]) = a1 & 1;
      CheckedContinuation.resume(returning:)(v19, v16);
    }
    sub_10000D0F0((uint64_t)v13, &qword_1007C5420);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }
}

__n128 sub_100525D50(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, const char *a6, _QWORD *a7, const char *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __n128 result;

  sub_100525E08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_1007C5440, &qword_1007C5448, (uint64_t)&unk_10072E4C0, (const char *)sub_100528048, byte_10072E4D8);
  return result;
}

__n128 sub_100525DAC(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, const char *a6, _QWORD *a7, const char *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __n128 result;

  sub_100525E08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_1007C5408, &qword_1007C5410, (uint64_t)&unk_10072E3D0, (const char *)sub_100527EEC, byte_10072E3E8);
  return result;
}

void sub_100525E08(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, const char *a6, _QWORD *a7, const char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t *a13, uint64_t a14, const char *a15, const char *a16)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  const char *v29;
  char *v30;
  id v31;
  const char *v32;
  const char *v33;
  NSString v34;
  NSString v35;
  id v36;
  id v37;
  double v38;
  const char *v39;
  NSDictionary v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t inited;
  const char *v45;
  uint64_t v46;
  id v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  _QWORD *v62;
  id v63;
  id v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  const char *v70;
  uint64_t v71;
  _QWORD *v72;
  const char *v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  id v79;
  uint64_t v80;
  const char *v81;
  _QWORD *v82;
  const char *v83;
  id v84;
  const char *v85;
  id v86;
  const char *v87;
  char v88[40];
  uint64_t aBlock;
  const char *v90[4];
  uint64_t v91;

  v82 = a7;
  v83 = a8;
  v80 = a5;
  v81 = a6;
  v84 = a3;
  v85 = a16;
  v86 = a4;
  v18 = sub_100008384(a12);
  __chkstk_darwin(v18);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (os_unfair_lock_s *)(*(_QWORD *)((char *)a2 + *(_QWORD *)((swift_isaMask & *a2) + 0x58)) + 16);
  os_unfair_lock_lock(v21);
  v22 = sub_100008384(a13);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, a1, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  v24 = (uint64_t)a2 + *(_QWORD *)((swift_isaMask & *a2) + 0x68);
  swift_beginAccess(v24, &aBlock, 33, 0);
  sub_10023A084((uint64_t)v20, v24, a12);
  swift_endAccess(&aBlock);
  os_unfair_lock_unlock(v21);
  v25 = swift_allocObject(a14, 32, 7);
  v26 = v84;
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = v26;
  v90[3] = a15;
  v91 = v25;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v90[0] = (const char *)1107296256;
  v90[1] = (const char *)sub_1002377A0;
  v90[2] = v85;
  v27 = _Block_copy(&aBlock);
  v28 = (void *)objc_opt_self(BSActionResponder);
  v29 = a2;
  v30 = (char *)objc_msgSend(v28, "responderWithHandler:", v27, v80);
  _Block_release(v27);
  swift_release(v91);
  if (!v86)
  {
    v31 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
    v32 = v81;
    swift_bridgeObjectRetain(v81);
    v33 = v83;
    swift_bridgeObjectRetain(v83);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v35 = String._bridgeToObjectiveC()();
    v36 = objc_msgSend(v31, "initWithServiceName:viewControllerClassName:", v34, v35, swift_bridgeObjectRelease(v33).n128_f64[0]);

    v37 = objc_msgSend(objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext), "init");
    if (a9)
    {
      v39 = (const char *)sub_100323054(a9);
      v40.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v39).n128_u64[0];
    }
    else
    {
      v40.super.isa = 0;
    }
    objc_msgSend(v37, "setUserInfo:", v40.super.isa, v38);

    v41 = objc_msgSend(objc_allocWithZone((Class)BSMutableSettings), "init");
    objc_msgSend(v41, "setFlag:forSetting:", 1, a10);
    v42 = objc_msgSend(objc_allocWithZone((Class)BSAction), "initWithInfo:responder:", v41, v30);
    v43 = sub_100008384(&qword_1007B5390);
    inited = swift_initStackObject(v43, v88);
    *(_OWORD *)(inited + 16) = xmmword_1005D1DF0;
    *(_QWORD *)(inited + 32) = v42;
    aBlock = inited;
    specialized Array._endMutation()(inited);
    v45 = (const char *)aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      if (aBlock < 0)
        v50 = aBlock;
      else
        v50 = aBlock & 0xFFFFFFFFFFFFFF8;
      v51 = v42;
      swift_bridgeObjectRetain(v45);
      v52 = _CocoaArrayWrapper.endIndex.getter(v50);
      swift_bridgeObjectRelease(v45);
      if (v52)
        goto LABEL_7;
    }
    else
    {
      v46 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
      v47 = v42;
      if (v46)
      {
LABEL_7:
        sub_10028779C((uint64_t)v45);
        v49 = v48;
        goto LABEL_13;
      }
    }
    v49 = (const char *)&_swiftEmptySetSingleton;
LABEL_13:
    swift_bridgeObjectRelease(v45);
    sub_100527F0C();
    sub_100220D78(&qword_1007C5418, (uint64_t (*)(uint64_t))sub_100527F0C, (uint64_t)&protocol conformance descriptor for NSObject);
    isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setActions:", isa, swift_bridgeObjectRelease(v49).n128_f64[0]);

    if (qword_1007B4030 != -1)
      swift_once(&qword_1007B4030, sub_1003D47FC);
    v86 = v42;
    v54 = type metadata accessor for Logger(0);
    sub_100221DF8(v54, (uint64_t)qword_1007BEAC0);
    v55 = v36;
    v56 = v37;
    v57 = v55;
    v58 = v56;
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v81 = v29;
      v84 = v41;
      v85 = v30;
      v61 = swift_slowAlloc(22, -1);
      v62 = (_QWORD *)swift_slowAlloc(8, -1);
      v83 = (const char *)swift_slowAlloc(32, -1);
      v87 = v83;
      *(_DWORD *)v61 = 138412546;
      aBlock = (uint64_t)v57;
      v63 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v90, v61 + 4);
      v82 = v62;
      *v62 = v57;

      *(_WORD *)(v61 + 12) = 2080;
      v64 = objc_msgSend(v58, "userInfo");
      if (v64)
      {
        v65 = v64;
        v66 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v64, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v67 = swift_bridgeObjectRetain(v66);
        v68 = Dictionary.description.getter(v67, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
        v70 = v69;
        swift_bridgeObjectRelease_n(v66, 2);
      }
      else
      {
        aBlock = 0;
        v90[0] = (const char *)0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v90[0]);
        v70 = (const char *)0x800000010061F3E0;
        v68 = 0xD00000000000002BLL;
      }
      v29 = v81;
      aBlock = sub_100228BD8(v68, (unint64_t)v70, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v90, v61 + 14);

      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "SDAirDropRemoteViewController activating with definition: %@ and userInfo: %s", (uint8_t *)v61, 0x16u);
      v71 = sub_100008384(&qword_1007B4C30);
      v72 = v82;
      swift_arrayDestroy(v82, 1, v71);
      swift_slowDealloc(v72, -1, -1);
      v73 = v83;
      swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      v41 = v84;
      v30 = (char *)v85;
    }
    else
    {

    }
    v74 = objc_msgSend((id)objc_opt_self(SBSRemoteAlertHandle), "newHandleWithDefinition:configurationContext:", v57, v58);
    v75 = *(_QWORD *)((swift_isaMask & *(_QWORD *)v29) + 0x60);
    v76 = *(void **)&v29[v75];
    *(_QWORD *)&v29[v75] = v74;

    v77 = *(void **)&v29[v75];
    if (!v77)
      goto LABEL_27;
    objc_msgSend(v77, "registerObserver:", v29);
    v78 = *(void **)&v29[v75];
    if (a11)
    {
      if (!v78)
      {
LABEL_27:

        v30 = (char *)v41;
        goto LABEL_28;
      }
      objc_msgSend(v78, "registerObserver:", a11);
      v78 = *(void **)&v29[v75];
    }
    if (v78)
    {
      v79 = v78;
      objc_msgSend(v79, "activateWithContext:", 0);

    }
    goto LABEL_27;
  }
LABEL_28:

}

__n128 sub_1005265AC(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, const char *a6, _QWORD *a7, const char *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __n128 result;

  sub_100525E08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_1007C5420, &qword_1007C5428, (uint64_t)&unk_10072E420, (const char *)sub_100527F48, byte_10072E438);
  return result;
}

id sub_100526608(void *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  id result;
  _QWORD *v26;
  _OWORD v27[2];
  _OWORD v28[2];

  if (qword_1007B4030 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BEAC0);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v26 = a2;
    v10 = a3;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    *(_QWORD *)&v28[0] = v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, (char *)v28 + 8, v11 + 4);
    *v12 = v7;

    a3 = v10;
    a2 = v26;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v15 = objc_msgSend(v7, "error");
  if (v15)
  {
    v16 = (uint64_t)v15;
    v17 = v15;
    sub_1005256D4(v16, 0, 1);

  }
  else
  {
    v18 = objc_msgSend(v7, "info");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "objectForSetting:", a3);
      if (v20)
      {
        v21 = v20;
        _bridgeAnyObjectToAny(_:)(v27, v20);
        swift_unknownObjectRelease(v21);
        sub_10022138C(v27, v28);
      }
      else
      {
        memset(v28, 0, sizeof(v28));
      }
      v22 = sub_100008384((uint64_t *)&unk_1007B6890);
      if (swift_dynamicCast(v27, v28, v22, &type metadata for String, 6)
        && (v23 = (const char *)*((_QWORD *)&v27[0] + 1)) != 0)
      {
        v24 = *(_QWORD *)&v27[0];
        swift_bridgeObjectRetain(*((const char **)&v27[0] + 1));
        sub_1005256D4(v24, v23, 0);
        swift_bridgeObjectRelease_n(v23, 2);
      }
      else
      {
        sub_1005256D4(0, 0, 0);
      }

    }
    else
    {
      sub_1005256D4(0, 0, 0);
    }
  }
  result = *(id *)((char *)a2 + *(_QWORD *)((swift_isaMask & *a2) + 0x60));
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

id sub_100526920(void *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id result;
  _QWORD *v21;
  id v22;
  uint64_t v23;

  if (qword_1007B4030 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BEAC0);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v21 = a2;
    v10 = a3;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    v22 = v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4);
    *v12 = v7;

    a3 = v10;
    a2 = v21;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v15 = objc_msgSend(v7, "error", v21, v22);
  if (v15)
  {
    v16 = (uint64_t)v15;
    v17 = v15;
    sub_100525904(v16, 1);

  }
  else
  {
    v18 = objc_msgSend(v7, "info");
    if (v18)
    {
      v19 = v18;
      sub_100525904(objc_msgSend(v18, "BOOLForSetting:", a3), 0);

    }
    else
    {
      sub_100525904(0, 0);
    }
  }
  result = *(id *)((char *)a2 + *(_QWORD *)((swift_isaMask & *a2) + 0x60));
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

id sub_100526B90(void *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  _BOOL8 v23;
  id result;
  _QWORD *v25;
  _OWORD v26[2];
  _OWORD v27[2];

  if (qword_1007B4030 != -1)
    swift_once(&qword_1007B4030, sub_1003D47FC);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007BEAC0);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v25 = a2;
    v10 = a3;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    *(_QWORD *)&v27[0] = v7;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v27, (char *)v27 + 8, v11 + 4);
    *v12 = v7;

    a3 = v10;
    a2 = v25;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v15 = objc_msgSend(v7, "error");
  if (v15)
  {
    v16 = (uint64_t)v15;
    v17 = v15;
    sub_100525B28(v16, 1);

  }
  else
  {
    v18 = objc_msgSend(v7, "info");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "objectForSetting:", a3);
      if (v20)
      {
        v21 = v20;
        _bridgeAnyObjectToAny(_:)(v26, v20);
        swift_unknownObjectRelease(v21);
        sub_10022138C(v26, v27);
      }
      else
      {
        memset(v27, 0, sizeof(v27));
      }
      v22 = sub_100008384((uint64_t *)&unk_1007B6890);
      v23 = swift_dynamicCast(v26, v27, v22, (char *)&type metadata for () + 8, 6) == 0;
      sub_100525B28(v23, 0);

    }
    else
    {
      sub_100525B28(1, 0);
    }
  }
  result = *(id *)((char *)a2 + *(_QWORD *)((swift_isaMask & *a2) + 0x60));
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

uint64_t sub_100526E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C53B8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C53B8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100526F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v7[4] = a6;
  v7[5] = a7;
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_1007C53F8 + dword_1007C53F8);
  v9 = (_QWORD *)swift_task_alloc(unk_1007C53FC);
  v7[6] = v9;
  *v9 = v7;
  v9[1] = sub_100526F68;
  return v11(a5);
}

uint64_t sub_100526F68(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 48);
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100527018;
  }
  else
  {
    *(_BYTE *)(v4 + 64) = a1 & 1;
    v6 = sub_100526FE0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100526FE0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 32))(*(unsigned __int8 *)(v0 + 64), 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100527018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  void (*v15)(_QWORD, uint64_t);
  uint64_t v17;

  if (qword_1007B4288 != -1)
    swift_once(&qword_1007B4288, sub_100526E74);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C53B8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100008384(&qword_1007B5A60);
    v11 = String.init<A>(describing:)(v0 + 16, v10);
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 24) = sub_100228BD8(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4);
    swift_bridgeObjectRelease(v13, v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Move to App Share Sheet failed {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    swift_errorRelease(v7);
  }

  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(void (**)(_QWORD, uint64_t))(v0 + 32);
  swift_errorRetain(v14);
  v15(0, v14);
  swift_errorRelease(v14);
  swift_errorRelease(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100527370(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t type metadata accessor for SDAirDropMoveToAppShareSheet()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary28SDAirDropMoveToAppShareSheet);
}

uint64_t sub_100527424(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[14] = a1;
  v2 = type metadata accessor for SFMoveToAppShareSheetSettings(0);
  v1[15] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[16] = v3;
  v1[17] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[19] = v5;
  v1[20] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384((uint64_t *)&unk_1007B5200);
  v1[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005274FC, 0, 0);
}

uint64_t sub_1005274FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  const char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  const char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, _QWORD, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t inited;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _QWORD *v65;
  uint64_t v66;
  const char *v67;
  uint8_t *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  const char **v81;
  id v82;
  id v83;
  uint64_t v84;

  v1 = v0[14];
  v84 = (uint64_t)_swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(v1 + 16);
  v81 = (const char **)(v0 + 14);
  v3 = v0[19];
  if (v2)
  {
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v82 = *(id *)(v3 + 72);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
    v6 = swift_bridgeObjectRetain((const char *)v1);
    while (1)
    {
      v8 = v0[21];
      v9 = v0[18];
      v5(v8, v4, v9, v6);
      v10 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
      v10(v8, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v8, 1, v9) == 1)
        break;
      v12 = v0[20];
      v11 = v0[21];
      v13 = v0;
      v14 = v0[18];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12, v11, v14);
      URL._bridgeToObjectiveC()(v15);
      v17 = v16;
      v18 = objc_msgSend((id)objc_opt_self(UISUISecurityScopedResource), "scopedResourceWithFileURL:allowedAccess:", v16, 2);

      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v12, v14);
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v21 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
        specialized Array._endMutation()(v7);
      }
      v4 += (uint64_t)v82;
      --v2;
      v0 = v13;
      if (!v2)
        goto LABEL_10;
    }
  }
  else
  {
    v10 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
    v6 = swift_bridgeObjectRetain((const char *)v1);
LABEL_10:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v10)(v0[21], 1, 1, v0[18], v6);
  }
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(*v81).n128_u64[0];
  v23 = v84;
  if ((unint64_t)v84 >> 62)
  {
    if (v84 < 0)
      v41 = v84;
    else
      v41 = v84 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v84, v22);
    v24 = _CocoaArrayWrapper.endIndex.getter(v41);
    v80 = v0;
    if (v24)
      goto LABEL_13;
LABEL_30:
    v27 = (const char *)_swiftEmptyArrayStorage;
    goto LABEL_31;
  }
  v24 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain((const char *)v84, v22);
  v80 = v0;
  if (!v24)
    goto LABEL_30;
LABEL_13:
  v83 = (id)objc_opt_self(NSKeyedArchiver);
  if (v24 < 1)
  {
    __break(1u);
LABEL_39:
    swift_once(&qword_1007B4288, sub_100526E74);
    goto LABEL_34;
  }
  v25 = 0;
  v26 = (id *)(v81 - 2);
  v27 = (const char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v23 & 0xC000000000000001) != 0)
      v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
    else
      v31 = *(id *)(v23 + 8 * v25 + 32);
    v32 = v31;
    *v26 = 0;
    v33 = objc_msgSend(v83, "archivedDataWithRootObject:requiringSecureCoding:error:", v31, 1, v26);
    v34 = *v26;
    if (v33)
    {
      v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v37 = v36;

      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
        v27 = (const char *)sub_10022870C(0, *((_QWORD *)v27 + 2) + 1, 1, (uint64_t)v27);
      v39 = *((_QWORD *)v27 + 2);
      v38 = *((_QWORD *)v27 + 3);
      if (v39 >= v38 >> 1)
        v27 = (const char *)sub_10022870C((_QWORD *)(v38 > 1), v39 + 1, 1, (uint64_t)v27);
      *((_QWORD *)v27 + 2) = v39 + 1;
      v40 = &v27[16 * v39];
      *((_QWORD *)v40 + 4) = v35;
      *((_QWORD *)v40 + 5) = v37;
    }
    else
    {
      v28 = v34;
      v29 = _convertNSErrorToError(_:)(v34);

      swift_willThrow(v30);
      swift_errorRelease(v29);

    }
    ++v25;
  }
  while (v24 != v25);
LABEL_31:
  swift_bridgeObjectRelease_n(v23, 2);
  if (*((_QWORD *)v27 + 2))
  {
    v43 = v80[16];
    v42 = v80[17];
    v44 = v80[15];
    v45 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v43 + 104);
    v46 = v45(v42, enum case for SFMoveToAppShareSheetSettings.reply(_:), v44);
    v47 = SFMoveToAppShareSheetSettings.rawValue.getter(v46);
    v48 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v48(v42, v44);
    v49 = v45(v42, enum case for SFMoveToAppShareSheetSettings.shareSheetSucceeded(_:), v44);
    v50 = SFMoveToAppShareSheetSettings.rawValue.getter(v49);
    v48(v42, v44);
    v51 = sub_100008384((uint64_t *)&unk_1007C4210);
    inited = swift_initStackObject(v51, v80 + 2);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = static SFMoveToAppShareSheetSettings.encodedFiles.getter();
    *(_QWORD *)(inited + 40) = v53;
    *(_QWORD *)(inited + 72) = sub_100008384(&qword_1007C5400);
    *(_QWORD *)(inited + 48) = v27;
    v54 = sub_10021E744(inited);
    v80[22] = v54;
    v55 = objc_msgSend(objc_allocWithZone((Class)sub_100008384(&qword_1007BE700)), "init");
    v80[23] = v55;
    v56 = swift_task_alloc(96);
    v80[24] = v56;
    *(_QWORD *)(v56 + 16) = v55;
    *(_QWORD *)(v56 + 24) = v50;
    *(_OWORD *)(v56 + 32) = xmmword_1005CEE80;
    *(_QWORD *)(v56 + 48) = 0x8000000100612040;
    *(_QWORD *)(v56 + 56) = 0xD000000000000024;
    *(_QWORD *)(v56 + 64) = 0x8000000100620440;
    *(_QWORD *)(v56 + 72) = v54;
    *(_QWORD *)(v56 + 80) = v47;
    *(_QWORD *)(v56 + 88) = 0;
    v57 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v80[25] = v57;
    v58 = sub_100008384(&qword_1007BAAD8);
    *v57 = v80;
    v57[1] = sub_100527CAC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v80 + 27, 0, 0, 0xD00000000000006ALL, 0x8000000100612060, sub_100527E5C, v56, v58);
  }
  swift_bridgeObjectRelease(v27);
  if (qword_1007B4288 != -1)
    goto LABEL_39;
LABEL_34:
  v60 = *v81;
  v61 = type metadata accessor for Logger(0);
  sub_100221DF8(v61, (uint64_t)qword_1007C53B8);
  v62 = swift_bridgeObjectRetain_n(v60, 2);
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.error.getter(v63);
  if (os_log_type_enabled(v63, v64))
  {
    v65 = v80;
    v66 = v80[18];
    v67 = (const char *)v80[14];
    v68 = (uint8_t *)swift_slowAlloc(12, -1);
    v69 = (const char *)swift_slowAlloc(32, -1);
    v84 = (uint64_t)v69;
    *(_DWORD *)v68 = 136315138;
    swift_bridgeObjectRetain(v67);
    v71 = Array.description.getter(v70, v66);
    v73 = v72;
    swift_bridgeObjectRelease(v67);
    v80[13] = sub_100228BD8(v71, (unint64_t)v73, &v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v81 - 1, v81, v68 + 4);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease_n(v67, 2);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Could not create encoded array of security scoped resources for files %s", v68, 0xCu);
    swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v68, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(*v81, 2);

    v65 = v80;
  }
  v74 = type metadata accessor for SFAirDropReceive.Failure(0);
  v75 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v74, v75, 0, 0);
  v77 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v76, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v74);
  swift_willThrow(v77);
  v78 = v65[20];
  v79 = v65[17];
  swift_task_dealloc(v65[21]);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  return ((uint64_t (*)(_QWORD))v65[1])(0);
}

uint64_t sub_100527CAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(*v1 + 200);
  v3 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100527DC4, 0, 0);
  v6 = *(void **)(v3 + 184);
  v5 = *(_QWORD *)(v3 + 192);
  v7 = *(_QWORD *)(v3 + 168);
  v8 = *(_QWORD *)(v3 + 160);
  v9 = *(_QWORD *)(v3 + 136);
  swift_bridgeObjectRelease(*(const char **)(v3 + 176));

  swift_task_dealloc(v5);
  LOBYTE(v5) = *(_BYTE *)(v3 + 216);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v5 & 1);
}

uint64_t sub_100527DC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease(v2);

  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_100527E5C(uint64_t a1)
{
  uint64_t v1;

  sub_100525E08(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(const char **)(v1 + 48), *(_QWORD **)(v1 + 56), *(const char **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), &qword_1007C5408, &qword_1007C5410, (uint64_t)&unk_10072E3D0, (const char *)sub_100527EEC, byte_10072E3E8);
}

uint64_t sub_100527EC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100527EEC(void *a1)
{
  uint64_t v1;

  return sub_100526920(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100527EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100527F04(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100527F0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B72A8;
  if (!qword_1007B72A8)
  {
    v1 = objc_opt_self(BSAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B72A8);
  }
  return result;
}

id sub_100527F48(void *a1)
{
  uint64_t v1;

  return sub_100526B90(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100527F50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100527F74(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_100527370(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100527F7C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100527FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t *v5;
  uint64_t (*v7)(uint64_t);

  v2 = *(_QWORD *)(v0 + 40);
  v3 = swift_task_alloc(dword_1007C5434);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000D12C;
  *(_OWORD *)(v3 + 32) = v4;
  v7 = (uint64_t (*)(uint64_t))((char *)&dword_1007C53F8 + dword_1007C53F8);
  v5 = (uint64_t *)swift_task_alloc(unk_1007C53FC);
  *(_QWORD *)(v3 + 48) = v5;
  *v5 = v3;
  v5[1] = (uint64_t)sub_100526F68;
  return v7(v2);
}

id sub_100528048(void *a1)
{
  uint64_t v1;

  return sub_100526608(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100528068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C5450);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C5450);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1005280F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1005281E8, static AirDropActor.shared, 0);
}

uint64_t sub_1005281E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(_QWORD, unint64_t, _QWORD);
  uint64_t v23;
  const char *v24;
  const char *v25;
  NSString v26;
  NSString v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *type;
  uint64_t v42;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = swift_bridgeObjectRelease((const char *)v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v3, v2, v4, v8);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  if (v7)
  {
    v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = swift_bridgeObjectRelease((const char *)v13);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v15);
    if (v14)
    {
      v17 = 0;
    }
    else
    {
      v18 = SFAirDropReceive.AskRequest.files.getter(v16);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        type = (const char *)v18;
        v20 = *(_QWORD *)(v1 + 80);
        v21 = v18 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        v42 = *(_QWORD *)(v20 + 72);
        v22 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v20 + 16);
        while (1)
        {
          v23 = v22(*(_QWORD *)(v1 + 88), v21, *(_QWORD *)(v1 + 72));
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v23);
          v25 = v24;
          v26 = String._bridgeToObjectiveC()();
          v27 = objc_msgSend(v26, "pathExtension", swift_bridgeObjectRelease(v25).n128_f64[0]);

          if (!v27)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0);
            v29 = v28;
            v27 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v29);
          }
          v30 = *(_QWORD *)(v1 + 88);
          v31 = *(_QWORD *)(v1 + 72);
          v32 = SFIsManagedConfigurationType(v27);

          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, v31);
          if ((v32 & 1) == 0)
            break;
          v21 += v42;
          if (!--v19)
          {
            swift_bridgeObjectRelease(type);
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease(type);
        v17 = 0;
      }
      else
      {
        swift_bridgeObjectRelease((const char *)v18);
LABEL_13:
        v33 = objc_allocWithZone((Class)LSApplicationRecord);
        v34 = sub_100528FF4(0xD000000000000015, 0x8000000100620550, 1);
        v35 = *(_QWORD *)(v1 + 40);
        v36 = *(void **)(v35 + 16);
        *(_QWORD *)(v35 + 16) = v34;

        v17 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    v17 = 0;
  }
  v37 = *(_QWORD *)(v1 + 112);
  v38 = *(_QWORD *)(v1 + 88);
  v39 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v17);
}

uint64_t sub_1005286E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_100008384(&qword_1007B9928);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384((uint64_t *)&unk_1007B5200);
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v4[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[12] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[13] = swift_task_alloc(v10);
  v4[14] = swift_task_alloc(v10);
  v4[15] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[16] = swift_task_alloc(v11);
  v4[17] = swift_task_alloc(v11);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100528840, static AirDropActor.shared, 0);
}

uint64_t sub_100528840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  double v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  const char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  Class isa;
  const char *v56;
  const char *v57;
  NSString v58;
  double v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *);
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85[2];

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = (double)(uint64_t)(v5 + 1);
  swift_bridgeObjectRetain((const char *)v4);
  v7 = 0;
  v77 = 0;
  v78 = 1;
  v82 = v2;
  v83 = v1;
  v80 = v5;
  v81 = v3;
  v8 = v5 == 0;
  if (v5)
    goto LABEL_3;
LABEL_2:
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1 + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 88));
  v9 = v5;
LABEL_5:
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 56);
  sub_100232FE8(*(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v12, 1, 1, v13);
  while (1)
  {
    v23 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 56);
    sub_1002D7474(*(_QWORD *)(v0 + 128), v23);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v23, 1, v24);
    v26 = *(char **)(v0 + 136);
    if (v25 == 1)
      break;
    v84 = v9;
    v27 = *(_QWORD *)(v0 + 112);
    v28 = *(_QWORD *)v26;
    (*(void (**)(uint64_t, char *, _QWORD))(v1 + 32))(v27, &v26[*(int *)(v3 + 48)], *(_QWORD *)(v0 + 88));
    v50 = Data.init(contentsOf:options:)(v27, 0);
    v52 = v51;
    v53 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
    if (!v53)
      goto LABEL_27;
    v54 = v53;
    isa = Data._bridgeToObjectiveC()().super.isa;
    URL.lastPathComponent.getter(isa);
    v57 = v56;
    v58 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    *(_QWORD *)(v0 + 16) = 0;
    v60 = objc_msgSend(v54, "queueFileDataForAcceptance:originalFileName:outError:", isa, v58, v0 + 16, v59);

    v61 = *(void **)(v0 + 16);
    if (v60)
    {
      v62 = v61;

      sub_100225AB4(v50, v52);
    }
    else
    {
      v66 = v61;
      v67 = _convertNSErrorToError(_:)(v61);

      swift_willThrow(v68);
      sub_100225AB4(v50, v52);
      if (qword_1007B4290 != -1)
        swift_once(&qword_1007B4290, sub_100528068);
      v29 = *(_QWORD *)(v0 + 104);
      v30 = *(_QWORD *)(v0 + 112);
      v31 = *(_QWORD *)(v0 + 88);
      v32 = type metadata accessor for Logger(0);
      sub_100221DF8(v32, (uint64_t)qword_1007C5450);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v29, v30, v31);
      swift_errorRetain(v67);
      v33 = swift_errorRetain(v67);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v34);
      v36 = os_log_type_enabled(v34, v35);
      v37 = *(_QWORD *)(v0 + 104);
      v38 = *(_QWORD *)(v0 + 88);
      if (v36)
      {
        v39 = swift_slowAlloc(22, -1);
        v40 = (uint64_t *)swift_slowAlloc(8, -1);
        v79 = swift_slowAlloc(32, -1);
        v85[0] = v79;
        *(_DWORD *)v39 = 136315394;
        v41 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v42 = dispatch thunk of CustomStringConvertible.description.getter(v38, v41);
        v43 = v28;
        v45 = (const char *)v44;
        *(_QWORD *)(v39 + 4) = sub_100228BD8(v42, v44, v85);
        v46 = v45;
        v28 = v43;
        v47 = swift_bridgeObjectRelease(v46);
        (*(void (**)(uint64_t, uint64_t, __n128))(v83 + 8))(v37, v38, v47);
        *(_WORD *)(v39 + 12) = 2112;
        swift_errorRetain(v67);
        v48 = _swift_stdlib_bridgeErrorToNSError(v67);
        *(_QWORD *)(v39 + 14) = v48;
        *v40 = v48;
        swift_errorRelease(v67);
        swift_errorRelease(v67);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to load data or queue file data for acceptance for %s with error: %@", (uint8_t *)v39, 0x16u);
        v49 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v40, 1, v49);
        swift_slowDealloc(v40, -1, -1);
        swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
        v1 = v83;
        swift_slowDealloc(v79, -1, -1);
        swift_slowDealloc(v39, -1, -1);

        swift_errorRelease(v67);
      }
      else
      {
        swift_errorRelease(v67);
        (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v37, v38);
        swift_errorRelease(v67);
        swift_errorRelease(v67);

      }
      v78 = 0;
    }
    v3 = v81;
    v2 = v82;
    v5 = v80;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    v63 = *(_QWORD *)(v0 + 112);
    v64 = *(_QWORD *)(v0 + 88);
    v65 = *(void (**)(uint64_t *))(v0 + 32);
    *(double *)v85 = (double)(v28 + 1) / v6;
    v65(v85);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v63, v64);
    v7 = v84;
    v8 = v84 >= v80;
    if (v84 == v80)
      goto LABEL_2;
LABEL_3:
    if (v8)
      goto LABEL_25;
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v10, *(_QWORD *)(v0 + 48)+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v7, v11);
    v9 = v7 + 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v10, 1, v11) == 1)
      goto LABEL_5;
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v17(v14, *(_QWORD *)(v0 + 80), v15);
    v18 = v16 + *(int *)(v3 + 48);
    v17(v18, v14, v15);
    if (__OFADD__(v77, 1))
      goto LABEL_26;
    v19 = *(_QWORD **)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 56);
    v22 = (char *)v19 + *(int *)(v3 + 48);
    *v19 = v77;
    v17((uint64_t)v22, v18, v20);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v19, 0, 1, v21);
    ++v77;
    v1 = v83;
  }
  v70 = *(_QWORD *)(v0 + 120);
  v69 = *(_QWORD *)(v0 + 128);
  v72 = *(_QWORD *)(v0 + 104);
  v71 = *(_QWORD *)(v0 + 112);
  v73 = *(_QWORD *)(v0 + 72);
  v74 = *(_QWORD *)(v0 + 80);
  v75 = *(_BYTE **)(v0 + 24);
  swift_bridgeObjectRelease(*(const char **)(v0 + 48));
  *v75 = v78 & 1;
  swift_task_dealloc(v26);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v73);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropContentHandlerProfiles()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary31SDAirDropContentHandlerProfiles);
}

uint64_t sub_100528EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerProfiles();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100528EE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C5494);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1005280F8(a1);
}

uint64_t sub_100528F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = 0;
  v2 = swift_allocObject(&unk_10072E578, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x502074726F706D49, 0xEF73656C69666F72, &v4, &unk_1007C5558, v2, 0xD000000000000066, 0x80000001006204E0, 61, &type metadata for Double, &type metadata for Bool);
}

id sub_100528FF4(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v13;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v13 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v13);

  v8 = v13;
  if (v7)
  {
    v9 = v13;
  }
  else
  {
    v10 = v13;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v11);
  }
  return v7;
}

void sub_1005290CC(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0x454C49464F5250;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0xE700000000000000).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x454C49464F5250;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE700000000000000);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100529310()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100529334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc(dword_1007C5554);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000D12C;
  return sub_1005286E0(a1, a2, a3, v8);
}

uint64_t sub_1005293A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100529480, static AirDropActor.shared, 0);
}

void sub_100529480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C6E0);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C700, 2, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriTunesStoreLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary39SDAirDropContentHandleriTunesStoreLinks);
}

uint64_t sub_10052975C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriTunesStoreLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100529790(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C558C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1005293A4(a1);
}

uint64_t sub_1005297E4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  NSURL *v27;
  void *v28;
  void *v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  const char *v37;
  uint64_t *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  NSURL *v42;
  void *v43;
  void *v44;
  void (*v45)(_BYTE *, uint64_t);
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  const char *v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  _BYTE v85[4];
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;

  LODWORD(v2) = a2;
  v3 = sub_100008384((uint64_t *)&unk_1007B5200);
  v4 = __chkstk_darwin(v3);
  v6 = &v85[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v85[-v7];
  v9 = sub_100008384(&qword_1007B51F8);
  __chkstk_darwin(v9);
  v11 = &v85[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v85[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v85[-v18];
  v20 = SFAirDropReceive.AskRequest.senderDisplayName.getter(v17);
  v87 = v21;
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter(v22);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v23 = sub_10000D0F0((uint64_t)v11, &qword_1007B51F8);
    v24 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v23);
    sub_100298F1C((uint64_t)v24, (uint64_t)v6);
    swift_bridgeObjectRelease(v24);
    v25 = type metadata accessor for URL(0);
    v26 = *(_QWORD *)(v25 - 8);
    v28 = 0;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v25) != 1)
    {
      URL._bridgeToObjectiveC()(v27);
      v28 = v29;
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v6, v25);
    }
    v30 = SFiTunesStoreLinkType(v28);

    if (v30 > 5)
    {
LABEL_15:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_RINGTONE");
      v46._countAndFlagsBits = 95;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      v47._countAndFlagsBits = 0xD000000000000011;
      v47._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v47);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_RINGTONE");
      if ((v2 & 1) != 0)
      {
        v48._countAndFlagsBits = 0x4C4154495041435FLL;
        v48._object = (void *)0xEC00000044455A49;
        String.append(_:)(v48);
      }
      v49._countAndFlagsBits = 0x545845545FLL;
      v49._object = (void *)0xE500000000000000;
      String.append(_:)(v49);
      v37 = (const char *)v89;
      v38 = &qword_10071C4C8;
      goto LABEL_33;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v19, v11, v12);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v16, v19, v12);
    v32 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v16, v12);
    if ((_DWORD)v32 == enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.itunesStoreLink(_:))
    {
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v19, v12);
      (*(void (**)(_BYTE *, uint64_t))(v13 + 96))(v16, v12);
      v30 = *((_QWORD *)v16 + 2);
      *(_QWORD *)&v31 = swift_bridgeObjectRelease((const char *)*((_QWORD *)v16 + 1)).n128_u64[0];
    }
    else
    {
      v86 = v2;
      v2 = v20;
      v39 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v32);
      sub_100298F1C((uint64_t)v39, (uint64_t)v8);
      swift_bridgeObjectRelease(v39);
      v40 = type metadata accessor for URL(0);
      v41 = *(_QWORD *)(v40 - 8);
      v43 = 0;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v8, 1, v40) != 1)
      {
        URL._bridgeToObjectiveC()(v42);
        v43 = v44;
        (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v8, v40);
      }
      v30 = SFiTunesStoreLinkType(v43);

      v45 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
      v45(v19, v12);
      v45(v16, v12);
      v20 = v2;
      LOBYTE(v2) = v86;
      if (v30 > 5)
        goto LABEL_15;
    }
  }
  switch(v30)
  {
    case 0uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_RINGTONE", v31);
      v33._countAndFlagsBits = 95;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      v34._countAndFlagsBits = 0xD000000000000011;
      v34._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v34);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_RINGTONE");
      if ((v2 & 1) != 0)
      {
        v35._countAndFlagsBits = 0x4C4154495041435FLL;
        v35._object = (void *)0xEC00000044455A49;
        String.append(_:)(v35);
      }
      v36._countAndFlagsBits = 0x545845545FLL;
      v36._object = (void *)0xE500000000000000;
      String.append(_:)(v36);
      v37 = (const char *)v89;
      v38 = &qword_10071C490;
      break;
    case 1uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("APP_LINK_WITH_TITLE", v31);
      v50._countAndFlagsBits = 95;
      v50._object = (void *)0xE100000000000000;
      String.append(_:)(v50);
      v51._countAndFlagsBits = 0xD000000000000017;
      v51._object = "APP_LINK_WITH_TITLE";
      String.append(_:)(v51);
      swift_bridgeObjectRelease("APP_LINK_WITH_TITLE");
      if ((v2 & 1) != 0)
      {
        v52._countAndFlagsBits = 0x4C4154495041435FLL;
        v52._object = (void *)0xEC00000044455A49;
        String.append(_:)(v52);
      }
      v53._countAndFlagsBits = 0x545845545FLL;
      v53._object = (void *)0xE500000000000000;
      String.append(_:)(v53);
      v37 = (const char *)v89;
      v38 = &qword_10071C378;
      break;
    case 2uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_MUSIC", v31);
      v54._countAndFlagsBits = 95;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      v55._countAndFlagsBits = 0xD000000000000017;
      v55._object = "ITUNES_STORE_LINK_MUSIC";
      String.append(_:)(v55);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_MUSIC");
      if ((v2 & 1) != 0)
      {
        v56._countAndFlagsBits = 0x4C4154495041435FLL;
        v56._object = (void *)0xEC00000044455A49;
        String.append(_:)(v56);
      }
      v57._countAndFlagsBits = 0x545845545FLL;
      v57._object = (void *)0xE500000000000000;
      String.append(_:)(v57);
      v37 = (const char *)v89;
      v38 = &qword_10071C3B0;
      break;
    case 3uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_MOVIE", v31);
      v58._countAndFlagsBits = 95;
      v58._object = (void *)0xE100000000000000;
      String.append(_:)(v58);
      v59._countAndFlagsBits = 0xD000000000000019;
      v59._object = "ITUNES_STORE_LINK_MOVIE";
      String.append(_:)(v59);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_MOVIE");
      if ((v2 & 1) != 0)
      {
        v60._countAndFlagsBits = 0x4C4154495041435FLL;
        v60._object = (void *)0xEC00000044455A49;
        String.append(_:)(v60);
      }
      v61._countAndFlagsBits = 0x545845545FLL;
      v61._object = (void *)0xE500000000000000;
      String.append(_:)(v61);
      v37 = (const char *)v89;
      v38 = &qword_10071C3E8;
      break;
    case 4uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_TV_SHOW", v31);
      v62._countAndFlagsBits = 95;
      v62._object = (void *)0xE100000000000000;
      String.append(_:)(v62);
      v63._countAndFlagsBits = 0xD00000000000001BLL;
      v63._object = "ITUNES_STORE_LINK_TV_SHOW";
      String.append(_:)(v63);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_TV_SHOW");
      if ((v2 & 1) != 0)
      {
        v64._countAndFlagsBits = 0x4C4154495041435FLL;
        v64._object = (void *)0xEC00000044455A49;
        String.append(_:)(v64);
      }
      v65._countAndFlagsBits = 0x545845545FLL;
      v65._object = (void *)0xE500000000000000;
      String.append(_:)(v65);
      v37 = (const char *)v89;
      v38 = &qword_10071C420;
      break;
    case 5uLL:
      v88 = 0x545F4E5245444F4DLL;
      v89 = 0xEF524546534E4152;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_AUDIOBOOK", v31);
      v66._countAndFlagsBits = 95;
      v66._object = (void *)0xE100000000000000;
      String.append(_:)(v66);
      v67._countAndFlagsBits = 0xD00000000000001ALL;
      v67._object = "ITUNES_STORE_LINK_AUDIOBOOK";
      String.append(_:)(v67);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_AUDIOBOOK");
      if ((v2 & 1) != 0)
      {
        v68._countAndFlagsBits = 0x4C4154495041435FLL;
        v68._object = (void *)0xEC00000044455A49;
        String.append(_:)(v68);
      }
      v69._countAndFlagsBits = 0x545845545FLL;
      v69._object = (void *)0xE500000000000000;
      String.append(_:)(v69);
      v37 = (const char *)v89;
      v38 = &qword_10071C458;
      break;
    default:
      goto LABEL_15;
  }
LABEL_33:
  v70 = v38 + 2;
  v71 = *v38;
  v72 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v70, v71, v72);
  v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  v75 = (id)SFLocalizedStringForKey(v73, v74);

  if (!v75)
  {
    __break(1u);
    JUMPOUT(0x10052A160);
  }
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
  v78 = v77;

  v79 = sub_100008384((uint64_t *)&unk_1007B86C0);
  v80 = swift_allocObject(v79, 72, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v80 + 56) = &type metadata for String;
  *(_QWORD *)(v80 + 64) = sub_100299AB0();
  v81 = v87;
  *(_QWORD *)(v80 + 32) = v20;
  *(_QWORD *)(v80 + 40) = v81;
  v82 = static String.localizedStringWithFormat(_:_:)(v76, v78, v80);
  *(_QWORD *)&v83 = swift_bridgeObjectRelease(v78).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v80, v83);
  return v82;
}

void sub_10052A178()
{
  __int128 *v0;
  uint64_t v1;
  __int128 *v2;
  Swift::String v3;
  __int128 v4;
  __int128 v5;
  Swift::String v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  const char *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[536];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  __int128 v40;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[16];
  _BYTE v46[16];
  __int128 v47;
  _BYTE v48[16];
  _BYTE v49[32];
  uint64_t v50;

  v2 = v0;
  sub_10022E718((uint64_t)(v0 + 1), (uint64_t)v49, &qword_1007B54E0);
  sub_10022E718((uint64_t)v49, (uint64_t)v41, &qword_1007B54E0);
  *(_QWORD *)&v34 = 0;
  *((_QWORD *)&v34 + 1) = 0xE000000000000000;
  sub_10052FB60((uint64_t)v49);
  _StringGuts.grow(_:)(60);
  *(_QWORD *)&v40 = 0;
  *((_QWORD *)&v40 + 1) = 0xE000000000000000;
  v3._countAndFlagsBits = 0xD000000000000039;
  v3._object = (void *)0x80000001006206C0;
  String.append(_:)(v3);
  v4 = v0[3];
  v36 = v0[2];
  v37 = v4;
  v38 = v0[4];
  v39 = *((_WORD *)v0 + 40);
  v5 = v0[1];
  v34 = *v0;
  v35 = v5;
  _print_unlocked<A, B>(_:_:)(&v34, &v40, &_s10AskRequestV8FileInfoVN, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 125;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7 = v40;
  v8 = sub_100008384(&qword_1007B54E0);
  Optional.tryUnwrap(_:file:line:)(v7, *((_QWORD *)&v7 + 1), 0xD00000000000005FLL, 0x8000000100620700, 357, v8);
  sub_10052FB88((uint64_t)v49);
  swift_bridgeObjectRelease(*((const char **)&v7 + 1));
  if (!v1)
  {
    v9 = v43;
    v50 = v42;
    sub_10022E718((uint64_t)(v0 + 4), (uint64_t)v48, &qword_1007B54E0);
    sub_10022E718((uint64_t)v48, (uint64_t)v41, &qword_1007B54E0);
    *(_QWORD *)&v34 = 0;
    *((_QWORD *)&v34 + 1) = 0xE000000000000000;
    sub_10052FB60((uint64_t)v48);
    _StringGuts.grow(_:)(63);
    v40 = v34;
    v10._countAndFlagsBits = 0xD00000000000003CLL;
    v10._object = (void *)0x8000000100620760;
    String.append(_:)(v10);
    v11 = v0[3];
    v36 = v0[2];
    v37 = v11;
    v38 = v0[4];
    v39 = *((_WORD *)v0 + 40);
    v12 = v0[1];
    v34 = *v0;
    v35 = v12;
    _print_unlocked<A, B>(_:_:)(&v34, &v40, &_s10AskRequestV8FileInfoVN, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v13._countAndFlagsBits = 125;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14 = (const char *)*((_QWORD *)&v40 + 1);
    Optional.tryUnwrap(_:file:line:)(v40, *((_QWORD *)&v40 + 1), 0xD00000000000005FLL, 0x8000000100620700, 358, v8);
    sub_10052FB88((uint64_t)v48);
    swift_bridgeObjectRelease(v14);
    v31 = v43;
    v32 = v42;
    v15 = sub_100008384((uint64_t *)&unk_1007C31D0);
    inited = swift_initStackObject(v15, v33);
    *(_OWORD *)(inited + 16) = xmmword_1005DBD30;
    *(_QWORD *)&v34 = kSFOperationFileNameKey;
    v17 = kSFOperationFileNameKey;
    v18 = sub_100008384(&qword_1007B5510);
    v19 = sub_10022E644();
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v34, v18, v19);
    v47 = *v2;
    v20 = v47;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_OWORD *)(inited + 72) = v20;
    v30 = v9;
    v21 = (void *)kSFOperationFileSizeKey;
    *(_QWORD *)&v34 = kSFOperationFileSizeKey;
    sub_10052FB60((uint64_t)&v47);
    v22 = v21;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &v34, v18, v19);
    sub_10022E718((uint64_t)(v2 + 3), (uint64_t)v46, &qword_1007C5660);
    *(_QWORD *)(inited + 168) = sub_100008384(&qword_1007C5660);
    sub_10022E718((uint64_t)v46, inited + 144, &qword_1007C5660);
    *(_QWORD *)&v34 = kSFOperationFileTypeKey;
    v23 = kSFOperationFileTypeKey;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 176), &v34, v18, v19);
    *(_QWORD *)(inited + 240) = &type metadata for String;
    *(_QWORD *)(inited + 216) = v50;
    *(_QWORD *)(inited + 224) = v30;
    *(_QWORD *)&v34 = kSFOperationtFileSubTypeKey;
    v24 = kSFOperationtFileSubTypeKey;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 248), &v34, v18, v19);
    sub_10022E718((uint64_t)(v2 + 2), (uint64_t)v45, &qword_1007B54E0);
    *(_QWORD *)(inited + 312) = v8;
    sub_10022E718((uint64_t)v45, inited + 288, &qword_1007B54E0);
    v25 = (void *)kSFOperationFileBomPathKey;
    *(_QWORD *)&v34 = kSFOperationFileBomPathKey;
    sub_10052FB60((uint64_t)v45);
    v26 = v25;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 320), &v34, v18, v19);
    *(_QWORD *)(inited + 384) = &type metadata for String;
    *(_QWORD *)(inited + 360) = v32;
    *(_QWORD *)(inited + 368) = v31;
    *(_QWORD *)&v34 = kSFOperationFileIsDirectoryKey;
    v27 = kSFOperationFileIsDirectoryKey;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 392), &v34, v18, v19);
    v28 = *((_BYTE *)v2 + 80);
    *(_QWORD *)(inited + 456) = &type metadata for Bool;
    *(_BYTE *)(inited + 432) = v28;
    *(_QWORD *)&v34 = kSFOperationConvertMediaFormatsKey;
    v29 = kSFOperationConvertMediaFormatsKey;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 464), &v34, v18, v19);
    sub_10022E718((uint64_t)v2 + 81, (uint64_t)&v44, &qword_1007BAAD8);
    *(_QWORD *)(inited + 528) = sub_100008384(&qword_1007BAAD8);
    sub_10022E718((uint64_t)&v44, inited + 504, &qword_1007BAAD8);
    sub_10021E5F8(inited);
  }
}

uint64_t sub_10052A6B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10052A70C, 0, 0);
}

uint64_t sub_10052A70C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;

  v1 = v0[4];
  v2 = v0[5];
  sub_100244384(v0[2], v2, _s12HelloRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 0);
  sub_10052C154();
  v4 = v3;
  v0[6] = v3;
  sub_10052C718();
  v0[7] = v5;
  v0[8] = v6;
  v7 = v5;
  v8 = v6;
  v9 = v0[3];
  v10 = swift_task_alloc(64);
  v0[9] = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_10052A84C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_10052A84C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005303AC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 72));
    v4 = sub_1005303A4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10052A8B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10052A914, 0, 0);
}

uint64_t sub_10052A914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;

  v1 = v0[4];
  v2 = v0[5];
  sub_100244384(v0[2], v2, _s10AskRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 4);
  sub_10052C154();
  v4 = v3;
  v0[6] = v3;
  sub_10052C718();
  v0[7] = v5;
  v0[8] = v6;
  v7 = v5;
  v8 = v6;
  v9 = v0[3];
  v10 = swift_task_alloc(64);
  v0[9] = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_10052AA54;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_10052AA54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10052AB18;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 72));
    v4 = sub_10052AAC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10052AAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_100225AB4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(v2);
  sub_1002443C8(v1, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052AB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 40);
  sub_100225AB4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(v2);
  swift_task_dealloc(v1);
  sub_1002443C8(v3, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052AB84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10052ABE0, 0, 0);
}

uint64_t sub_10052ABE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;

  v1 = v0[4];
  v2 = v0[5];
  sub_100244384(v0[2], v2, _s15ExchangeRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 8);
  sub_10052C154();
  v4 = v3;
  v0[6] = v3;
  sub_10052C718();
  v0[7] = v5;
  v0[8] = v6;
  v7 = v5;
  v8 = v6;
  v9 = v0[3];
  v10 = swift_task_alloc(64);
  v0[9] = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_10052A84C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_10052AD20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for SDAirDropMessage(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10052AD7C, 0, 0);
}

uint64_t sub_10052AD7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;

  v1 = v0[4];
  v2 = v0[5];
  sub_100244384(v0[2], v2, _s12ErrorRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 12);
  sub_10052C154();
  v4 = v3;
  v0[6] = v3;
  sub_10052C718();
  v0[7] = v5;
  v0[8] = v6;
  v7 = v5;
  v8 = v6;
  v9 = v0[3];
  v10 = swift_task_alloc(64);
  v0[9] = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_10052A84C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_10052AEBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch(sub_10052AED4, 0, 0);
}

uint64_t sub_10052AED4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_10052AF5C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, *(_QWORD *)(v0 + 48), &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10052AF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10052B2DC;
  else
    v3 = sub_10052AFC0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052AFC0()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  Swift::String v11;
  void *object;
  unint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v15 = v14;
    v16 = type metadata accessor for SFAirDropSend.Failure(0);
    v17 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v16, v17, 0, 0);
    v19 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *v15, v16);
    swift_willThrow(v19);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 64);
  sub_10022E4A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v5 = sub_10052D15C(v3, v2);
  sub_100225AB4(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100225AB4(v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007C5648);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    *(_DWORD *)v10 = 136315138;
    v22 = v21;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(0xE000000000000000);
    v23 = 0x6572204F4C4C4548;
    v24 = 0xEF2065736E6F7073;
    *(_DWORD *)(v0 + 72) = v5;
    v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(object);
    v13 = v24;
    *(_QWORD *)(v0 + 40) = sub_100228BD8(v23, v24, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v10 + 4);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received HELLO response {response: %s}", v10, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    sub_100225AB4(v3, v2);
  }
  else
  {
    sub_100225AB4(v3, v2);

  }
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v5 & 0xFFFFFFFFFFLL);
}

uint64_t sub_10052B2DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052B2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return swift_task_switch(sub_10052B300, 0, 0);
}

uint64_t sub_10052B300()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_10052B388;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 120, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, *(_QWORD *)(v0 + 160), &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10052B388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10052B744;
  else
    v3 = sub_10052B3EC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052B3EC()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  unsigned int *v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[72];

  v1 = *(unsigned __int8 *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  if (v1 >= 3)
  {
    v22 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v22 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v23 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v23 = v22;
    v24 = type metadata accessor for SFAirDropSend.Failure(0);
    v25 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v24, v25, 0, 0);
    v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *v23, v24);
    swift_willThrow(v27);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 176);
  sub_10022E4A8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  sub_10052D380(v3, v2);
  sub_100225AB4(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100225AB4(v3, v2);
    v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  v5 = *(_OWORD *)&v41[16];
  v6 = *(_OWORD *)&v41[48];
  *(_OWORD *)(v0 + 80) = *(_OWORD *)&v41[32];
  *(_OWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 112) = *(_QWORD *)&v41[64];
  v7 = v40;
  *(_OWORD *)(v0 + 16) = v39;
  *(_OWORD *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)v41;
  *(_OWORD *)(v0 + 64) = v5;
  v9 = *((_QWORD *)&v39 + 1);
  v8 = v39;
  v34 = *((_QWORD *)&v40 + 1);
  v10 = v40;
  v33 = v41[0];
  v37 = *(_OWORD *)&v41[24];
  v38 = *(_OWORD *)&v41[8];
  v35 = *(_OWORD *)&v41[56];
  v36 = *(_OWORD *)&v41[40];
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v11 = type metadata accessor for Logger(0);
  sub_100221DF8(v11, (uint64_t)qword_1007C5648);
  sub_10031B8C8((_QWORD *)(v0 + 16));
  v12 = sub_10031B8C8((_QWORD *)(v0 + 16));
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v31 = v40;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = *((_QWORD *)&v39 + 1);
    v16 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v39 = v16;
    *(_DWORD *)v15 = 136315138;
    v17 = sub_100497120();
    v19 = v18;
    *(_QWORD *)(v0 + 144) = sub_100228BD8(v17, v18, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v15 + 4);
    swift_bridgeObjectRelease(v19);
    sub_1002A80BC((_QWORD *)(v0 + 16));
    sub_1002A80BC((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Received ASK response {response: %s}", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v20 = v16;
    v9 = v32;
    swift_slowDealloc(v20, -1, -1);
    v21 = v15;
    v10 = v31;
    swift_slowDealloc(v21, -1, -1);

    sub_100225AB4(v3, v2);
  }
  else
  {
    sub_100225AB4(v3, v2);
    sub_1002A80BC((_QWORD *)(v0 + 16));
    sub_1002A80BC((_QWORD *)(v0 + 16));

  }
  v30 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)v30 = v8;
  *(_QWORD *)(v30 + 8) = v9;
  *(_QWORD *)(v30 + 16) = v10;
  *(_QWORD *)(v30 + 24) = v34;
  *(_BYTE *)(v30 + 32) = v33;
  *(_OWORD *)(v30 + 40) = v38;
  *(_OWORD *)(v30 + 56) = v37;
  *(_OWORD *)(v30 + 72) = v36;
  *(_OWORD *)(v30 + 88) = v35;
  v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_10052B744()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052B750(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_10052B768, 0, 0);
}

uint64_t sub_10052B768()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10052B7F0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, *(_QWORD *)(v0 + 40), &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10052B7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1005303A8;
  else
    v3 = sub_10052B854;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052B854()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v11 = v10;
    v12 = type metadata accessor for SFAirDropSend.Failure(0);
    v13 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v12, v13, 0, 0);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *v11, v12);
    swift_willThrow(v15);
    sub_100225AB4(v2, v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1007B4298 != -1)
      swift_once(&qword_1007B4298, sub_10052EF94);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C5648);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received UPLOAD response", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    sub_100225AB4(v2, v3);
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xC000000000000000);
  }
}

uint64_t sub_10052BA14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = a2;
  v3 = _s16ExchangeResponseVMa(0);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10052BA6C, 0, 0);
}

uint64_t sub_10052BA6C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_10052BAF4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, *(_QWORD *)(v0 + 56), &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10052BAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10052BE50;
  else
    v3 = sub_10052BB58;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052BB58()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int *v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v25;
  uint64_t v26;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v17 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v17 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v18 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v18 = v17;
    v19 = type metadata accessor for SFAirDropSend.Failure(0);
    v20 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v19, v20, 0, 0);
    v22 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *v18, v19);
    swift_willThrow(v22);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 80);
  sub_10022E4A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10052D7B0(v3, v2, _s16ExchangeResponseVMa, &qword_1007C1320, (uint64_t)&unk_1005D9B04);
  sub_100225AB4(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100225AB4(v3, v2);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007C5648);
  v8 = sub_100244384(v6, v5, _s16ExchangeResponseVMa);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 64);
  if (v11)
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v26 = v25;
    *(_DWORD *)v13 = 136315138;
    v14 = sub_100479210();
    v16 = v15;
    *(_QWORD *)(v0 + 40) = sub_100228BD8(v14, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v13 + 4);
    swift_bridgeObjectRelease(v16);
    sub_1002443C8(v12, _s16ExchangeResponseVMa);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received EXCHANGE response {response: %s}", v13, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    sub_100225AB4(v3, v2);
  }
  else
  {
    sub_100225AB4(v3, v2);
    sub_1002443C8(v12, _s16ExchangeResponseVMa);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10052BE50()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052BE84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_10052BE9C, 0, 0);
}

uint64_t sub_10052BE9C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10052BF24;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, *(_QWORD *)(v0 + 40), &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10052BF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10052C148;
  else
    v3 = sub_10052BF88;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052BF88()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v11 = v10;
    v12 = type metadata accessor for SFAirDropSend.Failure(0);
    v13 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v12, v13, 0, 0);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *v11, v12);
    swift_willThrow(v15);
    sub_100225AB4(v2, v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1007B4298 != -1)
      swift_once(&qword_1007B4298, sub_10052EF94);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100221DF8(v4, (uint64_t)qword_1007C5648);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received ERROR response", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    sub_100225AB4(v2, v3);
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xC000000000000000);
  }
}

uint64_t sub_10052C148()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10052C154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SDAirDropMessage(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_10052C214 + 4 * byte_1005DBD40[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

NSObject *sub_10052C214()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;

  sub_1002443C8(v0, type metadata accessor for SDAirDropMessage);
  v1 = ((uint64_t (*)(unint64_t, unint64_t))String.utf8CString.getter)(0xD000000000000010, 0x8000000100620660);
  swift_bridgeObjectRelease(0x8000000100620660);
  v2 = nw_content_context_create((const char *)(v1 + 32));
  swift_release(v1);
  sub_10052F390();
  v4 = v3;
  nw_content_context_set_metadata_for_protocol(v2, v3);
  swift_unknownObjectRelease(v4);
  return v2;
}

void sub_10052C418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for SDAirDropMessage(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_10052C4BC + 4 * byte_1005DBD4E[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10052C4BC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1002443C8(v1, _s12HelloRequestVMa);
  return v0;
}

void sub_10052C718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  _QWORD v14[2];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v1 = v0;
  v17 = _s12ErrorRequestVMa(0);
  __chkstk_darwin(v17);
  v19 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s16ExchangeResponseVMa(0);
  __chkstk_darwin(v15);
  v18 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = _s15ExchangeRequestVMa(0);
  __chkstk_darwin(v14[0]);
  v16 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s13UploadRequestVMa(0);
  __chkstk_darwin(v5);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s10AskRequestVMa(0);
  __chkstk_darwin(v7);
  v8 = _s12HelloRequestVMa(0);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for SDAirDropMessage(0);
  __chkstk_darwin(v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v1, (uint64_t)v11, v12);
  v13 = (char *)sub_10052C918 + 4 * word_1005DBD5C[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }
}

uint64_t sub_10052C918()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return 0;
}

unint64_t sub_10052D15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned __int8 v20;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_100453888();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s13HelloResponseVN, a1, a2, &_s13HelloResponseVN, v7);
  if (v2)
  {
    swift_release(v6);
    if (qword_1007B4298 != -1)
      swift_once(&qword_1007B4298, sub_10052EF94);
    v8 = type metadata accessor for Logger(0);
    sub_100221DF8(v8, (uint64_t)qword_1007C5648);
    swift_errorRetain(v2);
    v9 = swift_errorRetain(v2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 138412290;
      swift_errorRetain(v2);
      v14 = _swift_stdlib_bridgeErrorToNSError(v2);
      v18 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
      *v13 = v14;
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
      v15 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v13, 1, v15);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(v2);
      swift_errorRelease(v2);
    }

    return swift_willThrow(v17);
  }
  else
  {
    swift_release(v6);
    return v19 | ((unint64_t)v20 << 32);
  }
}

uint64_t sub_10052D380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_1004536AC();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s11AskResponseVN, a1, a2, &_s11AskResponseVN, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052D598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_100453800();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s15DiscoverRequestVN, a1, a2, &_s15DiscoverRequestVN, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052D7B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v11 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = PropertyListDecoder.init()();
  v13 = a3(0);
  v14 = sub_100220D78(a4, a3, a5);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v13, a1, a2, v13, v14);
  if (!v5)
    return swift_release(v12);
  swift_release(v12);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v15 = type metadata accessor for Logger(0);
  sub_100221DF8(v15, (uint64_t)qword_1007C5648);
  swift_errorRetain(v5);
  v16 = swift_errorRetain(v5);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v19 = 138412290;
    swift_errorRetain(v5);
    v21 = _swift_stdlib_bridgeErrorToNSError(v5);
    v25 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v19 + 4);
    *v20 = v21;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Error decoding SFAirDropMessage %@", v19, 0xCu);
    v22 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v20, 1, v22);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
  }

  return swift_willThrow(v24);
}

uint64_t sub_10052D9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_100453514();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s20IdentityShareRequestVN, a1, a2, &_s20IdentityShareRequestVN, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052DC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_100453778();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s16DiscoverResponseVN, a1, a2, &_s16DiscoverResponseVN, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_10053031C();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&type metadata for SDTempPairingMessage.Response, a1, a2, &type metadata for SDTempPairingMessage.Response, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052E030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListDecoder.init()();
  v7 = sub_100530360();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&type metadata for SDTempPairingMessage.Request, a1, a2, &type metadata for SDTempPairingMessage.Request, v7);
  if (!v2)
    return swift_release(v6);
  swift_release(v6);
  if (qword_1007B4298 != -1)
    swift_once(&qword_1007B4298, sub_10052EF94);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5648);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v2);
    v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_10052E248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10052E260, 0, 0);
}

void sub_10052E260()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)v0[2];
  v3 = v1[3];
  v2 = v1[4];
  sub_10023A834(v1, v3);
  v0[4] = sub_10052F2FC(v3, v2);
  v0[5] = v4;
  __asm { BR              X10 }
}

uint64_t sub_10052E2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C48BC);
  *(_QWORD *)(v1 + 48) = v3;
  *v3 = v1;
  v3[1] = sub_10052E378;
  return sub_1004FE604(v0, v2, BYTE6(v2));
}

uint64_t sub_10052E378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10052E410;
  else
    v3 = sub_10052E3DC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10052E3DC()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052E410()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10052E444(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, unint64_t a6@<X6>, _OWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  const char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _OWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _OWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  const char *v69;
  const char *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  int *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  const char *v95;
  _QWORD *v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  _OWORD *v106;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD *v110;
  Swift::String v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  const char *v116;
  uint64_t v117;
  const char *v118;
  _OWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD *v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;

  v125 = a4;
  v126 = a3;
  v129 = a7;
  v11 = _s12ErrorRequestVMa(0);
  __chkstk_darwin(v11);
  v118 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s15ExchangeRequestVMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = _s13UploadRequestVMa(0);
  __chkstk_darwin(v123);
  v124 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100008384(&qword_1007C5668);
  v17 = __chkstk_darwin(v127);
  v122 = (uint64_t *)((char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __chkstk_darwin(v17);
  v121 = (const char **)((char *)&v112 - v20);
  v21 = __chkstk_darwin(v19);
  v120 = (const char **)((char *)&v112 - v22);
  v23 = __chkstk_darwin(v21);
  v119 = (_OWORD *)((char *)&v112 - v24);
  __chkstk_darwin(v23);
  v128 = (uint64_t)&v112 - v25;
  v26 = _s10AskRequestVMa(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _s12HelloRequestVMa(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0x65766F637369442FLL && a2 == (void *)0xE900000000000072
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x65766F637369442FLL, 0xE900000000000072, a1, a2, 0) & 1) != 0)
  {
    v32 = v136;
    sub_10052D598(a5, a6);
    if (!v32)
    {
      v33 = v129;
      *v129 = v130;
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v33;
      v36 = 2;
LABEL_6:
      swift_storeEnumTagMultiPayload(v35, v34, v36);
    }
  }
  else if (a1 == 0x6F6C6C65482FLL && a2 == (void *)0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6C65482FLL, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v37 = v136;
    sub_10052D7B0(a5, a6, _s12HelloRequestVMa, &qword_1007C13A8, (uint64_t)&unk_1005DBF98);
    if (!v37)
    {
      v38 = v129;
      sub_100221DB4((uint64_t)v31, (uint64_t)v129, _s12HelloRequestVMa);
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v38;
      v36 = 0;
      goto LABEL_6;
    }
  }
  else if (a1 == 1802715439 && a2 == (void *)0xE400000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(1802715439, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v39 = v136;
    sub_10052D7B0(a5, a6, _s10AskRequestVMa, &qword_1007C1368, (uint64_t)&unk_1005DA390);
    if (!v39)
    {
      v40 = v129;
      sub_100221DB4((uint64_t)v28, (uint64_t)v129, _s10AskRequestVMa);
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v40;
      v36 = 4;
      goto LABEL_6;
    }
  }
  else if (a1 == 0x64616F6C70552FLL && a2 == (void *)0xE700000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x64616F6C70552FLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    if (qword_1007B4298 != -1)
      swift_once(&qword_1007B4298, sub_10052EF94);
    v41 = type metadata accessor for Logger(0);
    sub_100221DF8(v41, (uint64_t)qword_1007C5648);
    v42 = sub_10022E4A8(a5, a6);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      *(_DWORD *)swift_slowAlloc(12, -1) = 134217984;
      __asm { BR              X10 }
    }
    sub_100225AB4(a5, a6);

    v48 = (int *)v127;
    v47 = v128;
    v49 = v128 + *(int *)(v127 + 64);
    v50 = v136;
    sub_10052F024(v49, v126, &v130);
    if (!v50)
    {
      v114 = a5;
      v115 = a6;
      v51 = v130;
      v126 = v130;
      v52 = v131;
      v136 = *((_QWORD *)&v131 + 1);
      v116 = (const char *)v131;
      v53 = v132;
      v117 = *((_QWORD *)&v132 + 1);
      v54 = (const char *)v133;
      v55 = v48[20];
      v56 = (_QWORD *)(v47 + v55);
      v57 = v48[24];
      v58 = (_QWORD *)(v47 + v57);
      *(_OWORD *)v47 = v130;
      *(_QWORD *)(v47 + 16) = v52;
      *v56 = *((_QWORD *)&v52 + 1);
      v56[1] = v53;
      v118 = (const char *)v53;
      *v58 = *((_QWORD *)&v53 + 1);
      v58[1] = v54;
      v59 = v119;
      v113 = (uint64_t)v119 + v48[16];
      v60 = v113;
      v61 = (_QWORD *)((char *)v119 + v55);
      v62 = (_QWORD *)((char *)v119 + v57);
      *v119 = v51;
      v127 = *((_QWORD *)&v51 + 1);
      *((_QWORD *)v59 + 2) = v52;
      sub_100453378(v49, v60);
      v63 = v136;
      *v61 = v136;
      v61[1] = v53;
      v64 = v117;
      *v62 = v117;
      v62[1] = v54;
      v65 = v120;
      v119 = (_OWORD *)((char *)v120 + v48[16]);
      v66 = v119;
      v67 = (_QWORD *)((char *)v120 + v48[20]);
      v68 = (_QWORD *)((char *)v120 + v48[24]);
      *v120 = v126;
      v65[1] = *((_QWORD *)&v51 + 1);
      v69 = v116;
      v65[2] = v116;
      sub_100453378(v49, (uint64_t)v66);
      *v67 = v63;
      v70 = v118;
      v67[1] = v118;
      *v68 = v64;
      v68[1] = v54;
      v112 = v54;
      v71 = v121;
      v120 = (_QWORD *)((char *)v121 + v48[16]);
      v72 = v120;
      v73 = (_QWORD *)((char *)v121 + v48[20]);
      v74 = (_QWORD *)((char *)v121 + v48[24]);
      v76 = v126;
      v75 = v127;
      *v121 = v126;
      v71[1] = v75;
      v71[2] = v69;
      sub_100453378(v49, (uint64_t)v72);
      *v73 = v136;
      v73[1] = v70;
      v77 = v70;
      v78 = v117;
      *v74 = v117;
      v74[1] = v54;
      v79 = v122;
      v121 = (uint64_t *)((char *)v122 + v48[16]);
      v80 = v121;
      v81 = (uint64_t *)((char *)v122 + v48[20]);
      v82 = (uint64_t *)((char *)v122 + v48[24]);
      v83 = v76;
      *v122 = v76;
      v84 = v127;
      v85 = v116;
      v79[1] = v127;
      v79[2] = (uint64_t)v85;
      sub_100453378(v49, (uint64_t)v80);
      v86 = v136;
      *v81 = v136;
      v81[1] = v77;
      v87 = v112;
      *v82 = v78;
      v82[1] = v87;
      v88 = v124;
      sub_10022E718(v113, v124, (uint64_t *)&unk_1007B7E50);
      v89 = (int *)v123;
      *(_QWORD *)(v88 + *(int *)(v123 + 20)) = v83;
      v90 = (uint64_t *)(v88 + v89[6]);
      *v90 = v84;
      v90[1] = (uint64_t)v85;
      v91 = (uint64_t *)(v88 + v89[7]);
      v92 = v114;
      v93 = v115;
      *v91 = v114;
      v91[1] = v93;
      *(_BYTE *)(v88 + v89[8]) = v125 & 1;
      v94 = (_QWORD *)(v88 + v89[9]);
      v95 = v118;
      *v94 = v86;
      v94[1] = v95;
      v96 = (_QWORD *)(v88 + v89[10]);
      *v96 = v78;
      v96[1] = v87;
      sub_10022E4A8(v92, v93);
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRetain(v85);
      swift_bridgeObjectRetain(v95);
      sub_10000D0F0((uint64_t)v121, (uint64_t *)&unk_1007B7E50);
      sub_10000D0F0((uint64_t)v120, (uint64_t *)&unk_1007B7E50);
      sub_10000D0F0((uint64_t)v119, (uint64_t *)&unk_1007B7E50);
      v97 = v88;
      v98 = v129;
      sub_100221DB4(v97, (uint64_t)v129, _s13UploadRequestVMa);
      v99 = type metadata accessor for SDAirDropMessage(0);
      swift_storeEnumTagMultiPayload(v98, v99, 6);
      sub_10000D0F0(v128, &qword_1007C5668);
    }
  }
  else if (a1 == 0x676E61686378452FLL && a2 == (void *)0xE900000000000065
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676E61686378452FLL, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v45 = v136;
    sub_10052D7B0(a5, a6, _s15ExchangeRequestVMa, &qword_1007C1330, (uint64_t)&unk_1005D9B7C);
    if (!v45)
    {
      v46 = v129;
      sub_100221DB4((uint64_t)v15, (uint64_t)v129, _s15ExchangeRequestVMa);
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v46;
      v36 = 8;
      goto LABEL_6;
    }
  }
  else if (a1 == 0x7469746E6564492FLL && a2 == (void *)0xEE00657261685379
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7469746E6564492FLL, 0xEE00657261685379, a1, a2, 0) & 1) != 0)
  {
    v100 = v136;
    sub_10052D9E8(a5, a6);
    if (!v100)
    {
      v102 = v133;
      v101 = v134;
      v103 = v135;
      v104 = v131;
      v105 = v132;
      v106 = v129;
      *v129 = v130;
      v106[1] = v104;
      v106[2] = v105;
      v106[3] = v102;
      v106[4] = v101;
      *((_QWORD *)v106 + 10) = v103;
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v106;
      v36 = 10;
      goto LABEL_6;
    }
  }
  else
  {
    if ((a1 != 0x726F7272452FLL || a2 != (void *)0xE600000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0x726F7272452FLL, 0xE600000000000000, a1, a2, 0) & 1) == 0)
    {
      *(_QWORD *)&v130 = 0;
      *((_QWORD *)&v130 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(*((const char **)&v130 + 1));
      *(_QWORD *)&v130 = 0x656C646E61686E55;
      *((_QWORD *)&v130 + 1) = 0xEF20687461502064;
      v111._countAndFlagsBits = a1;
      v111._object = a2;
      String.append(_:)(v111);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v130, *((_QWORD *)&v130 + 1), "DaemoniOSLibrary/Network+SFAirDropMessage.swift", 47, 2, 139, 0);
      __break(1u);
      JUMPOUT(0x10052EF84);
    }
    v107 = v118;
    v108 = v136;
    sub_10052D7B0(a5, a6, _s12ErrorRequestVMa, &qword_1007C12F8, (uint64_t)&unk_1005D8270);
    if (!v108)
    {
      v109 = (uint64_t)v107;
      v110 = v129;
      sub_100221DB4(v109, (uint64_t)v129, _s12ErrorRequestVMa);
      v34 = type metadata accessor for SDAirDropMessage(0);
      v35 = v110;
      v36 = 12;
      goto LABEL_6;
    }
  }
}

uint64_t sub_10052EF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C5648);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C5648);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10052F024(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v6 = sub_100008384((uint64_t *)&unk_1007B7E50);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = 0;
  v38 = 1;
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v35 = 0;
  v36 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v33 = 0;
  v34 = 0;
  v31 = 0;
  v32 = 0;
  v10 = (_QWORD *)swift_allocObject(&unk_10072E628, 56, 7);
  v10[2] = &v37;
  v10[3] = &v35;
  v10[4] = v8;
  v10[5] = &v33;
  v10[6] = &v31;
  v11 = swift_allocObject(&unk_10072E650, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_100530258;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_100530298;
  v30 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100530214;
  aBlock[3] = &unk_10072E668;
  v12 = _Block_copy(aBlock);
  v13 = v30;
  swift_retain(v11);
  swift_release(v13);
  nw_http_metadata_enumerate_headers(a2, v12);
  _Block_release(v12);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v11, "", 95, 333, 52, 1);
  swift_release(v11);
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else if ((v38 & 1) != 0 || (v14 = v36) == 0)
  {
    v21 = type metadata accessor for SFAirDropReceive.Failure(0);
    v22 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v21, v22, 0, 0);
    v24 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, enum case for SFAirDropReceive.Failure.badRequest(_:), v21);
    swift_willThrow(v24);
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v32).n128_u64[0];
    swift_bridgeObjectRelease(v34, v25);
    sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007B7E50);
    v26 = v36;
    swift_release(v10);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v39 = v37;
    v28 = v35;
    sub_100453378((uint64_t)v8, a1);
    v15 = v33;
    v16 = v34;
    v17 = v31;
    v18 = v32;
    swift_bridgeObjectRetain(v14);
    sub_10000D0F0((uint64_t)v8, (uint64_t *)&unk_1007B7E50);
    v19 = v36;
    swift_release(v10);
    swift_bridgeObjectRelease(v19);
    v20 = v28;
    *a3 = v39;
    a3[1] = v20;
    a3[2] = v14;
    a3[3] = v15;
    a3[4] = v16;
    a3[5] = v17;
    a3[6] = v18;
  }
}

uint64_t sub_10052F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  v6 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
  v8 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v3, a1, a2);
  swift_release(v7);
  return v8;
}

void sub_10052F390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = sub_100008384((uint64_t *)&unk_1007B7E50);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  __chkstk_darwin(v2);
  v3 = _s13UploadRequestVMa(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropMessage(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v6, v7);
  v8 = (char *)sub_10052F4CC + 4 * word_1005DBD78[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_10052F4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100225AB4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  v1 = ((uint64_t (*)(uint64_t))nw_http_response_create_well_known)(200);
  v2 = ((uint64_t (*)(void))nw_http_create_metadata_for_response)();
  swift_unknownObjectRelease(v1);
  return v2;
}

uint64_t sub_10052FB60(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_10052FB88(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

void sub_10052FBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, Swift::String *a6, uint64_t a7, Swift::String *a8, Swift::String *a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  const char *v17;
  const char *v18;
  Swift::String v19;
  const char *v20;
  const char *v21;
  Swift::String v22;
  Swift::String v23;
  unint64_t v24;
  char v25;
  double v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  char v32;
  char v33;
  Swift::String v34;
  unint64_t v35;
  char v36;
  double v37;
  const char *v38;
  unint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  uint64_t v42;
  Swift::String v43;
  unint64_t v44;
  unint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  uint64_t v48;
  char v49;
  __n128 v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  Swift::String v56;
  unint64_t v57;
  char v58;
  double v59;
  const char *v60;
  unsigned __int8 *v61;
  unsigned int v62;
  uint64_t v63;
  Swift::String v64;
  double v65;
  char v66;
  double v67;
  const char *object;
  char v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD v72[4];

  v71 = a5;
  v14 = sub_100008384((uint64_t *)&unk_1007B7E50);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.init(cString:)(a1);
  v18 = v17;
  v19 = String.lowercased()();
  swift_bridgeObjectRelease(v18);
  String.init(cString:)(a3);
  v21 = v20;
  v22 = String.lowercased()();
  swift_bridgeObjectRelease(v21);
  v23 = String.lowercased()();
  if (v19._countAndFlagsBits == v23._countAndFlagsBits && v19._object == v23._object)
  {
    v24 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
  }
  else
  {
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, v23._countAndFlagsBits, v23._object, 0);
    v24 = swift_bridgeObjectRelease((const char *)v23._object).n128_u64[0];
    if ((v25 & 1) == 0)
    {
      v34 = String.lowercased()();
      if (v19._countAndFlagsBits == v34._countAndFlagsBits && v19._object == v34._object)
      {
        v35 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
      }
      else
      {
        v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, v34._countAndFlagsBits, v34._object, 0);
        v35 = swift_bridgeObjectRelease((const char *)v34._object).n128_u64[0];
        if ((v36 & 1) == 0)
        {
          v43 = String.lowercased()();
          if (v19._countAndFlagsBits == v43._countAndFlagsBits && v19._object == v43._object)
          {
            v44 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
          }
          else
          {
            v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, v43._countAndFlagsBits, v43._object, 0);
            v44 = swift_bridgeObjectRelease((const char *)v43._object).n128_u64[0];
            if ((v49 & 1) == 0)
            {
              v56 = String.lowercased()();
              if (v19._countAndFlagsBits == v56._countAndFlagsBits && v19._object == v56._object)
              {
                v57 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
              }
              else
              {
                v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, v56._countAndFlagsBits, v56._object, 0);
                v57 = swift_bridgeObjectRelease((const char *)v56._object).n128_u64[0];
                if ((v58 & 1) == 0)
                {
                  v64 = String.lowercased()();
                  if (v19._countAndFlagsBits == v64._countAndFlagsBits && v19._object == v64._object)
                  {
                    swift_bridgeObjectRelease_n(v19._object, 2);
                  }
                  else
                  {
                    v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v19._countAndFlagsBits, v19._object, v64._countAndFlagsBits, v64._object, 0);
                    *(_QWORD *)&v67 = swift_bridgeObjectRelease((const char *)v64._object).n128_u64[0];
                    *(_QWORD *)&v65 = swift_bridgeObjectRelease((const char *)v19._object, v67).n128_u64[0];
                    if ((v66 & 1) == 0)
                    {
                      swift_bridgeObjectRelease((const char *)v22._object, v65);
                      return;
                    }
                  }
                  object = (const char *)a9->_object;
                  *a9 = v22;
                  swift_bridgeObjectRelease(object, v65);
                  return;
                }
              }
              *(_QWORD *)&v59 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v57).n128_u64[0];
              v60 = (const char *)a8->_object;
              *a8 = v22;
              swift_bridgeObjectRelease(v60, v59);
              return;
            }
          }
          v50 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v44);
          SFAirDrop.TransferIdentifier.init(_:)(v22._countAndFlagsBits, v22._object, v50);
          v55 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v16, 0, 1, v55);
          sub_1005302D4((uint64_t)v16, a7);
          return;
        }
      }
      *(_QWORD *)&v37 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v35).n128_u64[0];
      v38 = (const char *)a6->_object;
      *a6 = v22;
      swift_bridgeObjectRelease(v38, v37);
      return;
    }
  }
  *(_QWORD *)&v26 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v24).n128_u64[0];
  v27 = ((unint64_t)v22._object >> 56) & 0xF;
  v28 = v22._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (((uint64_t)v22._object & 0x2000000000000000) != 0)
    v29 = ((unint64_t)v22._object >> 56) & 0xF;
  else
    v29 = v22._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v29)
  {
    swift_bridgeObjectRelease((const char *)v22._object, v26);
    v53 = 0;
    v52 = 1;
LABEL_61:
    v54 = v71;
    *v71 = v53;
    *((_BYTE *)v54 + 8) = v52 & 1;
    return;
  }
  if (((uint64_t)v22._object & 0x1000000000000000) != 0)
  {
    v31 = sub_1002B7290(v22._countAndFlagsBits, (uint64_t)v22._object, 10);
    v33 = v69;
LABEL_58:
    swift_bridgeObjectRelease((const char *)v22._object);
    v52 = v33 & 1;
    if ((v33 & 1) != 0)
      v53 = 0;
    else
      v53 = v31;
    goto LABEL_61;
  }
  if (((uint64_t)v22._object & 0x2000000000000000) == 0)
  {
    if ((v22._countAndFlagsBits & 0x1000000000000000) != 0)
      v30 = (unsigned __int8 *)(((uint64_t)v22._object & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v30 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v22._countAndFlagsBits, v22._object);
    v31 = (uint64_t)sub_1002B7268(v30, v28, 10);
    v33 = v32 & 1;
    goto LABEL_58;
  }
  v72[0] = v22._countAndFlagsBits;
  v72[1] = (uint64_t)v22._object & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v22._countAndFlagsBits) != 43)
  {
    if (LOBYTE(v22._countAndFlagsBits) == 45)
    {
      if (v27)
      {
        if (v27 != 1 && (BYTE1(v22._countAndFlagsBits) - 48) <= 9u)
        {
          if (v27 == 2)
          {
            v33 = 0;
            v31 = -(uint64_t)(BYTE1(v22._countAndFlagsBits) - 48);
            goto LABEL_58;
          }
          if ((BYTE2(v22._countAndFlagsBits) - 48) <= 9u)
          {
            v31 = -10 * (BYTE1(v22._countAndFlagsBits) - 48)
                - (BYTE2(v22._countAndFlagsBits) - 48);
            v51 = v27 - 3;
            if (!v51)
              goto LABEL_57;
            v61 = (unsigned __int8 *)v72 + 3;
            while (1)
            {
              v62 = *v61 - 48;
              if (v62 > 9)
                break;
              v63 = 10 * v31;
              if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
                break;
              v31 = v63 - v62;
              if (__OFSUB__(v63, v62))
                break;
              v33 = 0;
              ++v61;
              if (!--v51)
                goto LABEL_58;
            }
          }
        }
LABEL_40:
        v31 = 0;
        v33 = 1;
        goto LABEL_58;
      }
      __break(1u);
      goto LABEL_83;
    }
    if (!v27 || (LOBYTE(v22._countAndFlagsBits) - 48) > 9u)
      goto LABEL_40;
    v31 = (LOBYTE(v22._countAndFlagsBits) - 48);
    if (v27 != 1)
    {
      if ((BYTE1(v22._countAndFlagsBits) - 48) > 9u)
        goto LABEL_40;
      v31 = 10 * (LOBYTE(v22._countAndFlagsBits) - 48)
          + (BYTE1(v22._countAndFlagsBits) - 48);
      v45 = v27 - 2;
      if (v45)
      {
        v46 = (unsigned __int8 *)v72 + 2;
        while (1)
        {
          v47 = *v46 - 48;
          if (v47 > 9)
            goto LABEL_40;
          v48 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
            goto LABEL_40;
          v31 = v48 + v47;
          if (__OFADD__(v48, v47))
            goto LABEL_40;
          v33 = 0;
          ++v46;
          if (!--v45)
            goto LABEL_58;
        }
      }
    }
LABEL_57:
    v33 = 0;
    goto LABEL_58;
  }
  if (v27)
  {
    if (v27 == 1 || (BYTE1(v22._countAndFlagsBits) - 48) > 9u)
      goto LABEL_40;
    v31 = (BYTE1(v22._countAndFlagsBits) - 48);
    if (v27 != 2)
    {
      if ((BYTE2(v22._countAndFlagsBits) - 48) > 9u)
        goto LABEL_40;
      v31 = 10 * (BYTE1(v22._countAndFlagsBits) - 48)
          + (BYTE2(v22._countAndFlagsBits) - 48);
      v39 = v27 - 3;
      if (v39)
      {
        v40 = (unsigned __int8 *)v72 + 3;
        while (1)
        {
          v41 = *v40 - 48;
          if (v41 > 9)
            goto LABEL_40;
          v42 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63)
            goto LABEL_40;
          v31 = v42 + v41;
          if (__OFADD__(v42, v41))
            goto LABEL_40;
          v33 = 0;
          ++v40;
          if (!--v39)
            goto LABEL_58;
        }
      }
    }
    goto LABEL_57;
  }
LABEL_83:
  __break(1u);
}

uint64_t sub_100530214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4, a5) & 1;
}

uint64_t sub_100530248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100530258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;

  sub_10052FBB0(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(Swift::String **)(v4 + 24), *(_QWORD *)(v4 + 32), *(Swift::String **)(v4 + 40), *(Swift::String **)(v4 + 48));
  return v5 & 1;
}

uint64_t sub_100530288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100530298()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1005302BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005302CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005302D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B7E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10053031C()
{
  unint64_t result;

  result = qword_1007C5678;
  if (!qword_1007C5678)
  {
    result = swift_getWitnessTable(&unk_1005D69D8, &type metadata for SDTempPairingMessage.Response);
    atomic_store(result, &qword_1007C5678);
  }
  return result;
}

unint64_t sub_100530360()
{
  unint64_t result;

  result = qword_1007C5688;
  if (!qword_1007C5688)
  {
    result = swift_getWitnessTable(&unk_1005D6988, &type metadata for SDTempPairingMessage.Request);
    atomic_store(result, &qword_1007C5688);
  }
  return result;
}

uint64_t sub_1005303B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch(sub_1005303C8, 0, 0);
}

uint64_t sub_1005303C8(__n128 a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1 + 2;
  v3 = *(void **)(v1[17] + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_100530468;
  v4 = swift_continuation_init(v1 + 2, 1, a1);
  v1[10] = _NSConcreteStackBlock;
  v5 = v1 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_100531688;
  v5[3] = &unk_10072E690;
  v5[4] = v4;
  objc_msgSend(v3, "generateLocalAttestedLTKIfNeccessaryWithCompletion:", v5);
  return swift_continuation_await(v2);
}

uint64_t sub_100530468()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    v2 = sub_100530574;
  else
    v2 = sub_1005304C8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005304C8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 128) >> 60 != 15)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
  v1 = sub_100244304();
  v2 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v1, 0, 0);
  *(_DWORD *)v3 = 10;
  *(_QWORD *)(v3 + 8) = 0xD000000000000025;
  *(_QWORD *)(v3 + 16) = 0x8000000100620970;
  swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100530574(uint64_t a1)
{
  uint64_t v1;

  swift_willThrow(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1005305B0(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const char *v14;
  const char *v15;
  NSString v16;
  id v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  const char *v40;
  const char *v41;
  double v42;
  NSString v43;
  Swift::String v44;
  const char *object;
  Swift::String v46;
  unint64_t v47;
  const char *v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66[3];
  uint64_t v67;
  id *v68;
  void *v69;
  _OWORD v70[2];
  unint64_t v71;
  const char *v72;
  uint64_t v73;
  void *v74;

  v68 = (id *)a2;
  v66[1] = a3;
  v66[2] = a4;
  v67 = a1;
  v66[0] = *(id *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v5 = objc_msgSend(v66[0], "activeAKSSessions");
  if (!v5)
  {
    __break(1u);
    goto LABEL_23;
  }
  v6 = v5;
  v7 = (_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v10 = sub_10023A834((_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v9);
  v11 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v66 - v12;
  (*(void (**)(char *))(v11 + 16))((char *)v66 - v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
  if (!v14)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v6, "valueForKey:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v70, v17);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    memset(v70, 0, sizeof(v70));
  }
  sub_10022E718((uint64_t)v70, (uint64_t)&v71, (uint64_t *)&unk_1007B6890);
  if (!v73)
  {
    sub_10035BE24((uint64_t)&v71);
    goto LABEL_11;
  }
  v18 = sub_100533150();
  if ((swift_dynamicCast(&v74, &v71, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
  {
LABEL_11:
    v22 = sub_100244304();
    v23 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0, 0);
    *(_DWORD *)v24 = 10;
    *(_QWORD *)(v24 + 8) = 0xD000000000000019;
    *(_QWORD *)(v24 + 16) = 0x80000001006209D0;
    swift_willThrow(v23);
    return;
  }
  v19 = v74;
  v20 = v69;
  v21 = (void *)sub_100531C0C(v67, (unint64_t)v68);
  if (v20)
  {

    return;
  }

  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v19, "finalizeEscrowPairing:", v25);

  if (!v26)
  {
    v69 = v19;
    UUID.uuidString.getter(v27);
    v32 = v31;
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v35 = v7[3];
    v34 = v7[4];
    v36 = sub_10023A834(v7, v35);
    v68 = v66;
    v37 = *(_QWORD *)(v35 - 8);
    __chkstk_darwin(v36);
    v39 = (char *)v66 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v39);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
    if (v41)
    {
      v43 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v42 = swift_bridgeObjectRelease(v41).n128_u64[0];
    }
    else
    {
      v43 = 0;
    }
    v51 = v66[0];
    objc_msgSend(v66[0], "setPairingID:forWatchID:", v33, v43, v42);

    sub_100531F5C();
    v52 = v69;
    v53 = objc_msgSend(v51, "activeAKSSessions");
    if (v53)
    {
      v54 = v53;
      v55 = v7[3];
      v56 = v7[4];
      v57 = sub_10023A834(v7, v55);
      v58 = *(_QWORD *)(v55 - 8);
      __chkstk_darwin(v57);
      v60 = (char *)v66 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v58 + 16))(v60);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
      v63 = v62;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v55);
      v71 = v61;
      v72 = v63;
      v64 = sub_100008384(&qword_1007B54E0);
      v65 = Optional._bridgeToObjectiveC()(v64);
      objc_msgSend(v54, "removeObjectForKey:", v65, swift_bridgeObjectRelease(v63).n128_f64[0]);

      swift_unknownObjectRelease(v65);
      return;
    }
    goto LABEL_24;
  }
  if (v26 == (id)147)
  {
    v28 = sub_100244304();
    v29 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v28, 0, 0);
    *(_DWORD *)v30 = 23;
    *(_QWORD *)(v30 + 8) = 0xD000000000000015;
    *(_QWORD *)(v30 + 16) = 0x8000000100620AF0;
  }
  else
  {
    v71 = 0;
    v72 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(v72);
    v71 = 0xD00000000000002ALL;
    v72 = (const char *)0x8000000100620AC0;
    *(_QWORD *)&v70[0] = v26;
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = (const char *)v44._object;
    String.append(_:)(v44);
    swift_bridgeObjectRelease(object);
    v46._countAndFlagsBits = 41;
    v46._object = (void *)0xE100000000000000;
    String.append(_:)(v46);
    v47 = v71;
    v48 = v72;
    v49 = sub_100244304();
    v29 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v49, 0, 0);
    *(_DWORD *)v50 = 10;
    *(_QWORD *)(v50 + 8) = v47;
    *(_QWORD *)(v50 + 16) = v48;
  }
  swift_willThrow(v29);

}

id sub_100530B30(uint64_t a1, void *a2)
{
  objc_class *v2;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const char *v13;
  const char *v14;
  NSString v15;
  id v16;
  Class v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char **v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  const char *v54;
  const char *v55;
  double v56;
  NSString v57;
  const char *v58;
  const char *v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  const char *v67;
  const char *v68;
  double v69;
  NSString v70;
  id v71;
  Class v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  NSData v76;
  Class v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  const char *v96;
  const char *v97;
  const __CFString *v98;
  __CFString *v99;
  uint64_t v100;
  const char *v101;
  const char *v102;
  os_log_t v103;
  uint64_t v104;
  unint64_t v105;
  Class isa;
  _QWORD v107[2];
  os_log_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  id v114;
  _QWORD *v115;
  unint64_t v116;
  Class v117;
  _OWORD v118[2];
  uint64_t v119;
  const char *v120[3];
  void *v121;

  v114 = *(id *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  result = objc_msgSend(v114, "activeAKSSessions");
  if (!result)
  {
    __break(1u);
    goto LABEL_57;
  }
  v6 = result;
  v117 = v2;
  v8 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v7 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v115 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  v9 = sub_10023A834((objc_class *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v8);
  v10 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v107 - v11;
  (*(void (**)(char *))(v10 + 16))((char *)v107 - v11);
  result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
  if (!v13)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v6, "valueForKey:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)(v118, v16);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    memset(v118, 0, sizeof(v118));
  }
  v17 = v117;
  sub_10022E718((uint64_t)v118, (uint64_t)&v119, (uint64_t *)&unk_1007B6890);
  if (!v120[2])
  {
    sub_10035BE24((uint64_t)&v119);
    goto LABEL_11;
  }
  v18 = sub_100533150();
  if ((swift_dynamicCast(&v121, &v119, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
  {
LABEL_11:
    v22 = sub_100244304();
    v23 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0, 0);
    *(_DWORD *)v24 = 10;
    *(_QWORD *)(v24 + 8) = 0xD000000000000019;
    *(_QWORD *)(v24 + 16) = 0x80000001006209D0;
    swift_willThrow(v23);
    return a2;
  }
  v19 = v121;
  v20 = v116;
  v21 = sub_100531C0C(a1, (unint64_t)a2);
  if (v20)
  {

    return a2;
  }
  a2 = (void *)v21;
  v25 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type);
  if ((unint64_t)(v25 - 1) > 3)
  {
    if (v25 == 8 && !*((_BYTE *)v17 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role))
    {
      if (objc_msgSend(v19, "finalizeRegistration"))
      {
        v31 = sub_100244304();
        v32 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v31, 0, 0);
        *(_DWORD *)v33 = 10;
        *(_QWORD *)(v33 + 8) = 0xD00000000000001FLL;
        *(_QWORD *)(v33 + 16) = 0x8000000100620A80;
        swift_willThrow(v32);

        return a2;
      }
      v113 = v19;
      v49 = v115[3];
      v48 = v115[4];
      v50 = sub_10023A834(v115, v49);
      v51 = *(_QWORD *)(v49 - 8);
      __chkstk_darwin(v50);
      v53 = (char *)v107 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v51 + 16))(v53);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v48);
      v55 = v54;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
      if (v55)
      {
        v57 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v56 = swift_bridgeObjectRelease(v55).n128_u64[0];
      }
      else
      {
        v57 = 0;
      }
      v71 = objc_msgSend(v114, "remoteLTKForDeviceID:", v57, v56);

      v19 = v113;
      v72 = v117;
      if (v71)
      {
        v73 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v71);
        v75 = v74;

        sub_10022E4A8(v73, v75);
        v76.super.isa = Data._bridgeToObjectiveC()().super.isa;
        v116 = v75;
        sub_100225AB4(v73, v75);
      }
      else
      {
        v76.super.isa = 0;
        v73 = 0;
        v116 = 0xF000000000000000;
      }
      v112 = sub_10001D8AC(v76.super.isa);

      if (qword_1007B42A0 != -1)
        swift_once(&qword_1007B42A0, sub_1005315F8);
      v84 = type metadata accessor for Logger(0);
      sub_100221DF8(v84, (uint64_t)qword_1007C56D0);
      v85 = swift_retain_n(v72, 2);
      v86 = Logger.logObject.getter(v85);
      v87 = static os_log_type_t.default.getter(v86);
      if (os_log_type_enabled(v86, (os_log_type_t)v87))
      {
        v108 = v86;
        v110 = v87;
        v111 = v73;
        v88 = swift_slowAlloc(22, -1);
        v109 = swift_slowAlloc(64, -1);
        *(_QWORD *)&v118[0] = v109;
        *(_DWORD *)v88 = 136315394;
        v89 = v115[3];
        v90 = v115[4];
        v91 = sub_10023A834(v115, v89);
        v107[1] = v107;
        v92 = *(_QWORD *)(v89 - 8);
        __chkstk_darwin(v91);
        v94 = (char *)v107 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v92 + 16))(v94);
        v95 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
        v97 = v96;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v89);
        if (!v97)
        {
          v95 = 0xD000000000000015;
          v119 = 0;
          v120[0] = (const char *)0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v120[0]);
          v97 = (const char *)0x8000000100612DF0;
        }
        v119 = sub_100228BD8(v95, (unint64_t)v97, (uint64_t *)v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120, v88 + 4);
        swift_release_n(v117, 2);
        swift_bridgeObjectRelease(v97);
        *(_WORD *)(v88 + 12) = 2080;
        v98 = (id)sub_10001DD10(v112);
        if (v98)
        {
          v99 = (__CFString *)v98;
          v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
          v102 = v101;

        }
        else
        {
          v100 = 0xD000000000000015;
          v119 = 0;
          v120[0] = (const char *)0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v120[0]);
          v102 = (const char *)0x8000000100612DF0;
        }
        v119 = sub_100228BD8(v100, (unint64_t)v102, (uint64_t *)v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120, v88 + 14);
        swift_bridgeObjectRelease(v102);
        v103 = v108;
        _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v110, "Device %s has been registered (peer state is %s)", (uint8_t *)v88, 0x16u);
        v104 = v109;
        swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v88, -1, -1);

        v19 = v113;
        v73 = v111;
      }
      else
      {

        swift_release_n(v72, 2);
      }
      v105 = v116;
      v34 = v114;
      v35 = &selRef__loadPresentableActivitiesForSession_;
      if (v116 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        sub_10022E4A8(v73, v116);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100225AA0(v73, v105);
      }
      sub_10001DB10(isa);

      sub_100225AA0(v73, v105);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_100531F5C();
  if (v25 != 3)
  {
LABEL_21:
    v34 = v114;
    v35 = &selRef__loadPresentableActivitiesForSession_;
    goto LABEL_22;
  }
  v26 = objc_msgSend(v19, "generateEscrowSecret");
  v113 = v19;
  if (v26)
  {
    v27 = v26;
    v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v30 = v29;

    sub_10022E4A8(v28, v30);
    v117 = Data._bridgeToObjectiveC()().super.isa;
    v111 = v28;
    v112 = v30;
    v26 = (id)sub_100225AB4(v28, v30);
  }
  else
  {
    v117 = 0;
    v111 = 0;
    v112 = 0xF000000000000000;
  }
  UUID.uuidString.getter(v26);
  v59 = v58;
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  v62 = v115[3];
  v61 = v115[4];
  v63 = sub_10023A834(v115, v62);
  v116 = (unint64_t)v107;
  v64 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v63);
  v66 = (char *)v107 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v64 + 16))(v66);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v61);
  v68 = v67;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v62);
  if (v68)
  {
    v70 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v68).n128_u64[0];
  }
  else
  {
    v70 = 0;
  }
  v35 = &selRef__loadPresentableActivitiesForSession_;
  v77 = v117;
  v34 = v114;
  v78 = objc_msgSend(v114, "storeEscrowSecret:pairingID:deviceID:requiresUnlock:", v117, v60, v70, 0, v69);

  if ((v78 & 1) == 0)
  {
    if (qword_1007B42A0 != -1)
      swift_once(&qword_1007B42A0, sub_1005315F8);
    v79 = type metadata accessor for Logger(0);
    v80 = sub_100221DF8(v79, (uint64_t)qword_1007C56D0);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.error.getter(v81);
    if (!os_log_type_enabled(v81, v82))
    {
      sub_100225AA0(v111, v112);

      v19 = v113;
      goto LABEL_22;
    }
    v83 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v83 = 0;
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "Error storing escrow secret", v83, 2u);
    swift_slowDealloc(v83, -1, -1);

  }
  sub_100225AA0(v111, v112);
  v19 = v113;
LABEL_22:
  objc_msgSend(v19, "confirmSession");
LABEL_23:
  v113 = v19;
  result = objc_msgSend(v34, v35[433]);
  if (result)
  {
    v36 = result;
    v37 = v115[3];
    v38 = v115[4];
    v39 = sub_10023A834(v115, v37);
    v40 = *(_QWORD *)(v37 - 8);
    __chkstk_darwin(v39);
    v42 = (char *)v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v40 + 16))(v42);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v37);
    v119 = v43;
    v120[0] = v45;
    v46 = sub_100008384(&qword_1007B54E0);
    v47 = Optional._bridgeToObjectiveC()(v46);
    objc_msgSend(v36, "removeObjectForKey:", v47, swift_bridgeObjectRelease(v45).n128_f64[0]);

    swift_unknownObjectRelease(v47);
    return a2;
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1005315F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C56D0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C56D0);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100531688(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v15[2];

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    if (a2)
    {
      v11 = a2;
      v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a2);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0xF000000000000000;
    }
    v15[0] = v12;
    v15[1] = v14;
    sub_10022E718((uint64_t)v15, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_1007B5220);
    return swift_continuation_throwingResume(v3);
  }
}

void sub_100531758()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  const char *v10;
  double v11;
  NSString v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  Swift::String v24;
  const char *object;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[8];
  uint64_t v40;
  const char *v41;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v37 = 0;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v5 = sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  v6 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v37 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  v13 = 0xD000000000000011;
  v14 = objc_msgSend(v2, "aksPairingSessionForDeviceID:originator:errorCode:requiresAttestation:requiresEscrow:", v12, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role), &v37, (unint64_t)(*(_QWORD *)(v1+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type)- 3) < 5, (unint64_t)(*(_QWORD *)(v1+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type)- 3) < 2, v11);

  if (!v14)
  {
    v19 = sub_100244304();
    v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0, 0);
    *(_DWORD *)v21 = 10;
    *(_QWORD *)(v21 + 8) = 0xD000000000000026;
    *(_QWORD *)(v21 + 16) = 0x80000001006209F0;
    swift_willThrow(v20);
    return;
  }
  v15 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v14;
  v16 = v14;

  v17 = v37;
  if (v37 > 147)
  {
    if (v37 == 148)
    {
      v13 = 0xD000000000000012;
      v22 = "Missing remote LTK";
    }
    else
    {
      if (v37 != 149)
        goto LABEL_13;
      v22 = "Missing local LTK";
    }
    v18 = (const char *)((unint64_t)(v22 - 32) | 0x8000000000000000);
    goto LABEL_18;
  }
  if (v37)
  {
    if (v37 == 101)
    {
      v18 = (const char *)0xEB00000000657275;
      v13 = 0x6C69616620534B41;
LABEL_18:
      if (qword_1007B42A0 != -1)
        swift_once(&qword_1007B42A0, sub_1005315F8);
      v29 = type metadata accessor for Logger(0);
      sub_100221DF8(v29, (uint64_t)qword_1007C56D0);
      v30 = swift_bridgeObjectRetain_n(v18, 2);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        v40 = v34;
        *(_DWORD *)v33 = 136315138;
        swift_bridgeObjectRetain(v18);
        v38 = sub_100228BD8(v13, (unint64_t)v18, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v33 + 4);
        swift_bridgeObjectRelease_n(v18, 3);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s", v33, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v18, 2);
      }
      v35 = sub_100244304();
      v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v35, 0, 0);
      *(_DWORD *)v36 = 10;
      *(_QWORD *)(v36 + 8) = v13;
      *(_QWORD *)(v36 + 16) = v18;
      goto LABEL_24;
    }
LABEL_13:
    v40 = 0;
    v41 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease(v41);
    v40 = 0xD00000000000001FLL;
    v41 = (const char *)0x8000000100620A20;
    v38 = v17;
    v39[0] = 0;
    v23 = sub_100008384((uint64_t *)&unk_1007C57D0);
    v24._countAndFlagsBits = String.init<A>(describing:)(&v38, v23);
    object = (const char *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v13 = v40;
    v18 = v41;
    goto LABEL_18;
  }
  if ((objc_msgSend(v16, "sessionIsValid") & 1) == 0)
  {
    v26 = sub_100244304();
    v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0, 0);
    *(_DWORD *)v28 = 10;
    *(_QWORD *)(v28 + 8) = 0xD000000000000013;
    *(_QWORD *)(v28 + 16) = 0x8000000100620380;
LABEL_24:
    swift_willThrow(v27);
  }

}

unint64_t sub_100531C0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  const char *v12;
  const char *v13;
  NSString v14;
  id v15;
  unint64_t v16;
  void *v17;
  Class isa;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void *v32;
  _OWORD v33[2];
  id v34[4];

  v4 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager), "activeAKSSessions", a1);
  if (!v4)
  {
    __break(1u);
LABEL_21:
    __break(1u);
  }
  v5 = v4;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v8 = sub_10023A834((_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v6);
  v9 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - v10;
  (*(void (**)(char *))(v9 + 16))((char *)&v31 - v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v12)
    goto LABEL_21;
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v5, "valueForKey:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(v33, v15);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_10022E718((uint64_t)v33, (uint64_t)v34, (uint64_t *)&unk_1007B6890);
  if (!v34[3])
  {
    sub_10035BE24((uint64_t)v34);
    goto LABEL_11;
  }
  v16 = sub_100533150();
  if ((swift_dynamicCast(&v32, v34, (char *)&type metadata for Any + 8, v16, 6) & 1) == 0)
  {
LABEL_11:
    v19 = sub_100244304();
    v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0, 0);
    *(_DWORD *)v21 = 10;
    *(_QWORD *)(v21 + 8) = 0xD000000000000019;
    *(_QWORD *)(v21 + 16) = 0x80000001006209D0;
    swift_willThrow(v20);
    return a2;
  }
  v17 = v32;
  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v34[0] = 0;
  v22 = objc_msgSend(v17, "stepSessionWithData:outputData:", isa, v34);

  v23 = v34[0];
  a2 = (unint64_t)v23;
  if ((v22 & 1) != 0)
  {
    if (!v23)
    {
      v27 = sub_100244304();
      v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0, 0);
      *(_DWORD *)v29 = 10;
      strcpy((char *)(v29 + 8), "No step data");
      *(_BYTE *)(v29 + 21) = 0;
      *(_WORD *)(v29 + 22) = -5120;
      swift_willThrow(v28);
    }
  }
  else
  {
    v24 = sub_100244304();
    v25 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v24, 0, 0);
    *(_DWORD *)v26 = 10;
    *(_QWORD *)(v26 + 8) = 0xD000000000000017;
    *(_QWORD *)(v26 + 16) = 0x8000000100620300;
    swift_willThrow(v25);

  }
  return a2;
}

void sub_100531F5C()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const char *v10;
  const char *v11;
  NSString v12;
  id v13;
  unint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSData v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const char *v28;
  const char *v29;
  double v30;
  NSString v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  id v40;
  _OWORD v41[2];
  _BYTE v42[24];
  uint64_t v43;
  id v44;

  v40 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v1 = objc_msgSend(v40, "activeAKSSessions");
  if (!v1)
  {
    __break(1u);
    goto LABEL_18;
  }
  v2 = v1;
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v6 = sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  v7 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v38 - v8;
  (*(void (**)(char *))(v7 + 16))((char *)v38 - v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v2, "valueForKey:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)(v41, v13);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    memset(v41, 0, sizeof(v41));
  }
  sub_10022E718((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_1007B6890);
  if (!v43)
  {
    sub_10035BE24((uint64_t)v42);
    goto LABEL_12;
  }
  v14 = sub_100533150();
  if ((swift_dynamicCast(&v44, v42, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_12:
    v32 = sub_100244304();
    v33 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v32, 0, 0);
    *(_DWORD *)v34 = 10;
    *(_QWORD *)(v34 + 8) = 0xD000000000000019;
    *(_QWORD *)(v34 + 16) = 0x80000001006209D0;
    swift_willThrow(v33);
    return;
  }
  v15 = v44;
  v16 = objc_msgSend(v44, "generateSessionToken");
  if (v16)
  {
    v17 = v16;
    v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

    v39 = v18;
    v21.super.isa = Data._bridgeToObjectiveC()().super.isa;
    v23 = v3[3];
    v22 = v3[4];
    v24 = sub_10023A834(v3, v23);
    v38[1] = v38;
    v25 = *(_QWORD *)(v23 - 8);
    __chkstk_darwin(v24);
    v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v27);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    if (v29)
    {
      v31 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
    }
    else
    {
      v31 = 0;
    }
    objc_msgSend(v40, "storeRangingKey:forDeviceID:", v21.super.isa, v31, v30);

    sub_100225AB4(v39, v20);
  }
  else
  {
    v35 = sub_100244304();
    v36 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v35, 0, 0);
    *(_DWORD *)v37 = 10;
    *(_QWORD *)(v37 + 8) = 0xD00000000000001ELL;
    *(_QWORD *)(v37 + 16) = 0x8000000100620AA0;
    swift_willThrow(v36);
  }

}

void sub_1005322E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  const char *v10;
  double v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  v5 = sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  v6 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v22 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(v2, "aksRegistrationSessionForDeviceID:originator:", v12, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role), v11);

  if (v13)
  {
    v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v13;
    v15 = v13;

    if ((objc_msgSend(v15, "sessionIsValid") & 1) == 0)
    {
      v16 = sub_100244304();
      v17 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v16, 0, 0);
      *(_DWORD *)v18 = 10;
      *(_QWORD *)(v18 + 8) = 0xD000000000000013;
      *(_QWORD *)(v18 + 16) = 0x8000000100620380;
      swift_willThrow(v17);
    }

  }
  else
  {
    v19 = sub_100244304();
    v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0, 0);
    *(_DWORD *)v21 = 10;
    *(_QWORD *)(v21 + 8) = 0xD000000000000029;
    *(_QWORD *)(v21 + 16) = 0x80000001006209A0;
    swift_willThrow(v20);
  }
}

uint64_t sub_1005324D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_10022E75C((_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100532558()
{
  return type metadata accessor for SDAuthenticationAKSPairingSession(0);
}

uint64_t type metadata accessor for SDAuthenticationAKSPairingSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C5710;
  if (!qword_1007C5710)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationAKSPairingSession);
  return result;
}

uint64_t sub_10053259C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = "(";
    v4[4] = &unk_1005DBDE0;
    v4[5] = &unk_1005DBDF8;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100532640(char a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  NSString v16;
  unsigned __int8 v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  NSString v37;
  NSString v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (qword_1007B42A0 != -1)
    swift_once(&qword_1007B42A0, sub_1005315F8);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007C56D0);
  v7 = swift_bridgeObjectRetain_n(a3, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v39 = v11;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain(a3);
    v41 = sub_100228BD8(a2, (unint64_t)a3, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v10 + 12) = 2080;
    if ((a1 & 1) != 0)
      v12 = 7955787;
    else
      v12 = 1801678668;
    if ((a1 & 1) != 0)
      v13 = 0xE300000000000000;
    else
      v13 = 0xE400000000000000;
    v41 = sub_100228BD8(v12, v13, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Disabling pairing with %s as %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v14 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (v14)
  {
    v15 = v14;
    if ((a1 & 1) != 0)
    {
      v29 = swift_bridgeObjectRetain_n(a3, 2);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (unint64_t)a3;
        v33 = (uint8_t *)swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        *(_DWORD *)v33 = 136315138;
        v39 = v34;
        swift_bridgeObjectRetain(v32);
        v41 = sub_100228BD8(a2, v32, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v33 + 4);
        swift_bridgeObjectRelease_n(v32, 3);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Removing escrow, ranging, LTKs and pairingID for %s", v33, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
      }
      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "deleteEscrowSecretForDeviceID:", v35);

      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "deleteRangingKeyForDeviceID:", v36);

      v37 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "removeRemoteLTKForDeviceID:", v37);

      v38 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "removePairingRecordForWatchID:", v38);

    }
    else
    {
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v15, "disablePairingWithKeyDevice:", v16);

      if ((v17 & 1) == 0)
      {
        v39 = 0;
        v40 = 0xE000000000000000;
        _StringGuts.grow(_:)(62);
        v18._countAndFlagsBits = 0xD00000000000002BLL;
        v18._object = (void *)0x8000000100620900;
        String.append(_:)(v18);
        v19._countAndFlagsBits = a2;
        v19._object = a3;
        String.append(_:)(v19);
        v20._object = (void *)0x8000000100620930;
        v20._countAndFlagsBits = 0xD000000000000011;
        String.append(_:)(v20);
        v21 = v39;
        v22 = v40;
        v23 = sub_100244304();
        v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0, 0);
        *(_DWORD *)v25 = 10;
        *(_QWORD *)(v25 + 8) = v21;
        *(_QWORD *)(v25 + 16) = v22;
        swift_willThrow(v24);
      }
    }

  }
  else
  {
    v26 = sub_100244304();
    v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0, 0);
    *(_DWORD *)v28 = 10;
    *(_QWORD *)(v28 + 8) = 0xD000000000000025;
    *(_QWORD *)(v28 + 16) = 0x8000000100620850;
    swift_willThrow(v27);
  }
}

uint64_t sub_100532B9C(uint64_t a1, void *a2, unint64_t a3)
{
  NSObject *v3;
  NSObject *v4;
  id v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  Swift::String v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  void *v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t type;
  uint64_t v49;
  NSObject *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = v3;
  v8 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (!v8)
  {
    v18 = sub_100244304();
    v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0, 0);
    *(_DWORD *)v20 = 10;
    *(_QWORD *)(v20 + 8) = 0xD000000000000025;
    *(_QWORD *)(v20 + 16) = 0x8000000100620850;
    swift_willThrow(v19);
    return (uint64_t)v4;
  }
  v10 = v8;
  sub_1003FDBD4(a3, v9);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "pairingIDForWatchID:", v11);

  if (!v12)
  {
    v50 = 0;
    v51 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    v21._object = (void *)0x8000000100620880;
    v21._countAndFlagsBits = 0xD00000000000001DLL;
    String.append(_:)(v21);
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    String.append(_:)(v22);
    v23._countAndFlagsBits = 544432416;
    v23._object = (void *)0xE400000000000000;
    String.append(_:)(v23);
    LOBYTE(v52) = sub_1003FDBD4(a3, v24) & 1;
    _print_unlocked<A, B>(_:_:)(&v52, &v50, &type metadata for SDAuthenticationRole, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v25._countAndFlagsBits = 0x65636976656420;
    v25._object = (void *)0xE700000000000000;
    String.append(_:)(v25);
    v4 = v50;
    v26 = v51;
    v27 = sub_100244304();
    v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0, 0);
    *(_DWORD *)v29 = 1;
    *(_QWORD *)(v29 + 8) = v4;
    *(_QWORD *)(v29 + 16) = v26;
    swift_willThrow(v28);
    goto LABEL_7;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v17 = sub_1003FDBD4(a3, v16);
  sub_100532640(v17 & 1, a1, a2);
  if (v3)
  {
LABEL_4:
    swift_bridgeObjectRelease(v15);
LABEL_7:

    return (uint64_t)v4;
  }
  v31 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationPairingDisable), "init");
  if (!v31)
  {
    v38 = sub_100244304();
    v39 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v38, 0, 0);
    *(_DWORD *)v40 = 10;
    *(_QWORD *)(v40 + 8) = 0xD000000000000020;
    *(_QWORD *)(v40 + 16) = 0x80000001006208A0;
    swift_willThrow(v39);
    goto LABEL_4;
  }
  if (!HIDWORD(a3))
  {
    v32 = v31;
    objc_msgSend(v31, "setType:", a3);
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "setPairingID:", v33);

    if (qword_1007B42A0 != -1)
      swift_once(&qword_1007B42A0, sub_1005315F8);
    v34 = type metadata accessor for Logger(0);
    sub_100221DF8(v34, (uint64_t)qword_1007C56D0);
    swift_bridgeObjectRetain_n(a2, 2);
    v35 = swift_bridgeObjectRetain(v15);
    v4 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v36))
    {
      type = v36;
      v37 = swift_slowAlloc(22, -1);
      v49 = swift_slowAlloc(64, -1);
      *(_DWORD *)v37 = 136315394;
      v50 = v49;
      swift_bridgeObjectRetain(a2);
      v52 = sub_100228BD8(a1, (unint64_t)a2, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v37 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain(v15);
      v52 = sub_100228BD8(v13, v15, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v37 + 14);
      swift_bridgeObjectRelease_n(v15, 3);
      _os_log_impl((void *)&_mh_execute_header, v4, type, "Sending disable message to %s with pairingID: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v15, 2);
      swift_bridgeObjectRelease_n(a2, 2);
    }
    v41 = objc_msgSend(v32, "data");
    if (v41)
    {
      v42 = v41;
      v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      sub_10022E4A8((uint64_t)v4, v44);
      sub_100225AB4((uint64_t)v4, v44);
    }
    else
    {
      v45 = sub_100244304();
      v46 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v45, 0, 0);
      *(_DWORD *)v47 = 10;
      *(_QWORD *)(v47 + 8) = 0xD000000000000028;
      *(_QWORD *)(v47 + 16) = 0x80000001006208D0;
      swift_willThrow(v46);

    }
    return (uint64_t)v4;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
  return result;
}

unint64_t sub_100533150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007C57C8;
  if (!qword_1007C57C8)
  {
    v1 = objc_opt_self(SDAutoUnlockAKSSession);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007C57C8);
  }
  return result;
}

uint64_t sub_10053318C(void *a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  NSString v7;
  id v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  const char *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  id v26;
  void *v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  unint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  const char *v44;
  double v45;
  id v46;
  void *v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;

  v2 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (!v2)
  {
    v12 = sub_100244304();
    v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0, 0);
    *(_DWORD *)v14 = 10;
    *(_QWORD *)(v14 + 8) = 0xD000000000000025;
    *(_QWORD *)(v14 + 16) = 0x8000000100620850;
    swift_willThrow(v13);
    return v15 & 1;
  }
  v3 = v2;
  v4 = sub_1003FE924(objc_msgSend(a1, "type"));
  if ((v5 & 1) != 0)
  {
    v16 = sub_100244304();
    v17 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v16, 0, 0);
    *(_DWORD *)v18 = 10;
    *(_QWORD *)(v18 + 8) = 0xD00000000000001CLL;
    *(_QWORD *)(v18 + 16) = 0x8000000100620B10;
    swift_willThrow(v17);

    return v15 & 1;
  }
  v6 = sub_1003FDBD4(v4, v5);
  v7 = String._bridgeToObjectiveC()();
  if ((v6 & 1) != 0)
  {
    v19 = objc_msgSend(v3, "keyPairingIDForDeviceID:", v7);

    if (v19)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v11 = v20;

    }
    else
    {
      v9 = 0;
      v11 = 0;
    }
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v3, "pairingIDForWatchID:", v21);

    if (v22)
    {
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      if (v11)
      {
LABEL_14:
        swift_bridgeObjectRelease(v25);
        goto LABEL_17;
      }
    }
    else
    {
      v23 = 0;
      v25 = 0;
      if (v11)
        goto LABEL_14;
    }
    v9 = v23;
    v11 = v25;
    goto LABEL_17;
  }
  v8 = objc_msgSend(v3, "pairingIDForWatchID:", v7);

  if (v8)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
LABEL_17:
  v26 = objc_msgSend(a1, "pairingID");
  if (!v26)
  {
    if (v11)
      goto LABEL_24;
LABEL_29:
    if (qword_1007B42A0 != -1)
      swift_once(&qword_1007B42A0, sub_1005315F8);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100221DF8(v34, (uint64_t)qword_1007C56D0);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Successfully matched pairing key for key in aks manager", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    v15 = 1;
    return v15 & 1;
  }
  v27 = v26;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v30 = v29;

  if (!v11)
  {
    if (v30)
    {
      swift_bridgeObjectRelease(v30);
      v32 = 1;
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if (!v30)
  {
LABEL_24:
    v32 = 0;
    goto LABEL_34;
  }
  if (v9 == v28 && v11 == v30)
  {
    v31 = swift_bridgeObjectRelease(v11).n128_u64[0];
LABEL_28:
    swift_bridgeObjectRelease(v30, *(double *)&v31);
    goto LABEL_29;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v28, v30, 0);
  v31 = swift_bridgeObjectRelease(v30).n128_u64[0];
  v32 = 0;
  v30 = v11;
  if ((v33 & 1) != 0)
    goto LABEL_28;
LABEL_34:
  if (qword_1007B42A0 != -1)
    swift_once(&qword_1007B42A0, sub_1005315F8);
  v39 = type metadata accessor for Logger(0);
  sub_100221DF8(v39, (uint64_t)qword_1007C56D0);
  swift_bridgeObjectRetain(v11);
  v40 = a1;
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v54 = v42;
    v43 = swift_slowAlloc(22, -1);
    v52 = swift_slowAlloc(64, -1);
    v57 = v52;
    *(_DWORD *)v43 = 136315394;
    v44 = v11;
    if (v32)
    {
      v9 = 0xD000000000000015;
      v55 = 0;
      v56 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      v44 = (const char *)0x8000000100612DF0;
    }
    swift_bridgeObjectRetain(v11, v52);
    v55 = sub_100228BD8(v9, (unint64_t)v44, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v43 + 4);
    swift_bridgeObjectRelease_n(v11, 2);
    *(_QWORD *)&v45 = swift_bridgeObjectRelease(v44).n128_u64[0];
    *(_WORD *)(v43 + 12) = 2080;
    v46 = objc_msgSend(v40, "pairingID", v45);
    if (v46)
    {
      v47 = v46;
      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v50 = v49;

    }
    else
    {
      v48 = 0xD000000000000015;
      v55 = 0;
      v56 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v56);
      v50 = (const char *)0x8000000100612DF0;
    }
    v55 = sub_100228BD8(v48, (unint64_t)v50, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v43 + 14);

    swift_bridgeObjectRelease(v50);
    _os_log_impl((void *)&_mh_execute_header, v41, v54, "Not disabling (local pairingID: %s, received pairingID: %s)", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v43, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v11, 2);
  }

  v15 = 0;
  return v15 & 1;
}

uint64_t sub_1005337C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C57E0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C57E0);
  if (qword_1007B3EA0 != -1)
    swift_once(&qword_1007B3EA0, sub_1002E9FA4);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D82B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100533858()
{
  void *v0;
  id v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  NSString v26;
  unsigned int v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = objc_msgSend(v0, "retrievePairedPeers");
  if (!v1)
    goto LABEL_40;
  v2 = v1;
  v3 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  v4 = (uint64_t)sub_10038E114((uint64_t)v3);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v4, v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v6)
      goto LABEL_4;
LABEL_20:
    v17 = swift_bridgeObjectRelease((const char *)v4, v7).n128_u64[0];
    goto LABEL_21;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)&v7 = swift_bridgeObjectRetain((const char *)v4, v5).n128_u64[0];
  if (!v6)
    goto LABEL_20;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_39;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v9 = *(id *)(v4 + 8 * i + 32);
    v10 = v9;
    v11 = objc_opt_self(CBPeripheral);
    v12 = swift_dynamicCastObjCClass(v10, v11);
    if (v12)
    {
      v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v16);
    }
    else
    {

    }
  }
  v17 = swift_bridgeObjectRelease((const char *)v4).n128_u64[0];
LABEL_21:
  v19 = swift_bridgeObjectRelease((const char *)v4, *(double *)&v17).n128_u64[0];
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_23;
LABEL_37:
    swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, *(double *)&v19);
    return;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v29 = _swiftEmptyArrayStorage;
  else
    v29 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v19);
  v20 = _CocoaArrayWrapper.endIndex.getter(v29);
  v19 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
  if (!v20)
    goto LABEL_37;
LABEL_23:
  if (v20 < 1)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  for (j = 0; j != v20; ++j)
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, _swiftEmptyArrayStorage);
    else
      v24 = (id)_swiftEmptyArrayStorage[j + 4];
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "hasTag:", v26);

    if (v27)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v22 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v25);
      specialized ContiguousArray._endMutation()(v23);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage);
}

id sub_100533B38()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDB389SetupAgent()), "init");
  static SDB389SetupAgent.shared = (uint64_t)result;
  return result;
}

uint64_t *SDB389SetupAgent.shared.unsafeMutableAddressor()
{
  if (qword_1007B42B0 != -1)
    swift_once(&qword_1007B42B0, sub_100533B38);
  return &static SDB389SetupAgent.shared;
}

id static SDB389SetupAgent.shared.getter()
{
  if (qword_1007B42B0 != -1)
    swift_once(&qword_1007B42B0, sub_100533B38);
  return (id)static SDB389SetupAgent.shared;
}

void *SDB389SetupAgent.queue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue);
  v2 = v1;
  return v1;
}

id sub_100533C60()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389] = 0;
  v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] = 0;
  v1 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue;
  v3 = v0;
  *(_QWORD *)&v0[v2] = (id)CUMainQueue(v3, v4, v5);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx] = 0;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for SDB389SetupAgent();
  return objc_msgSendSuper2(&v7, "init");
}

Swift::Void __swiftcall SDB389SetupAgent.activate()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C57E0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Activate called.", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    v15 = swift_allocObject(&unk_10072E6B8, 24, 7);
    *(_QWORD *)(v15 + 16) = v1;
    aBlock[4] = sub_1005344A4;
    v23 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072E6D0;
    v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v1);
    v21 = _swiftEmptyArrayStorage;
    v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_100008384((uint64_t *)&unk_1007B6410);
    v19 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v18, v19, v2, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release(v23);
  }
  else
  {
    __break(1u);
  }
}

void sub_100533FC0(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  NSString v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE *v25;
  id v26;
  id v27;
  NSString v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *oslog;
  void **aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void *v41;
  void *v42;
  uint64_t v43;

  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C57E0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Activate in queue...", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  if ((a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] & 1) != 0)
  {
    oslog = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Already activated...", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  else
  {
    a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] = 1;
    v11 = IsAppleInternalBuild(v7, v8);
    if ((_DWORD)v11)
    {
      v12 = (void *)objc_opt_self(NSDistributedNotificationCenter);
      v13 = objc_msgSend(v12, "defaultCenter");
      v14 = String._bridgeToObjectiveC()();
      v15 = swift_allocObject(&unk_10072EA78, 24, 7);
      *(_QWORD *)(v15 + 16) = a1;
      v42 = sub_10053A370;
      v43 = v15;
      aBlock = _NSConcreteStackBlock;
      v39 = 1107296256;
      v40 = sub_1004C8208;
      v41 = &unk_10072EA90;
      v16 = _Block_copy(&aBlock);
      v17 = v43;
      v18 = a1;
      swift_release(v17);
      v19 = objc_msgSend(v13, "addObserverForName:object:queue:usingBlock:", v14, 0, 0, v16);
      _Block_release(v16);
      swift_unknownObjectRelease(v19);

      v20 = objc_msgSend(v12, "defaultCenter");
      v21 = String._bridgeToObjectiveC()();
      v22 = swift_allocObject(&unk_10072EAC8, 24, 7);
      *(_QWORD *)(v22 + 16) = v18;
      v42 = sub_10053A378;
      v43 = v22;
      aBlock = _NSConcreteStackBlock;
      v39 = 1107296256;
      v40 = sub_1004C8208;
      v41 = &unk_10072EAE0;
      v23 = _Block_copy(&aBlock);
      v24 = v43;
      v25 = v18;
      swift_release(v24);
      v26 = objc_msgSend(v20, "addObserverForName:object:queue:usingBlock:", v21, 0, 0, v23);
      _Block_release(v23);
      swift_unknownObjectRelease(v26);

      v27 = objc_msgSend(v12, "defaultCenter");
      v28 = String._bridgeToObjectiveC()();
      v29 = swift_allocObject(&unk_10072EB18, 24, 7);
      *(_QWORD *)(v29 + 16) = v25;
      v42 = sub_10053A3A8;
      v43 = v29;
      aBlock = _NSConcreteStackBlock;
      v39 = 1107296256;
      v40 = sub_1004C8208;
      v41 = &unk_10072EB30;
      v30 = _Block_copy(&aBlock);
      v31 = v43;
      v32 = v25;
      swift_release(v31);
      v33 = objc_msgSend(v27, "addObserverForName:object:queue:usingBlock:", v28, 0, 0, v30);
      _Block_release(v30);
      swift_unknownObjectRelease(v33);

    }
    v34 = Logger.logObject.getter(v11);
    v35 = static os_log_type_t.default.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Activated!", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

  }
}

uint64_t sub_100534480()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005344A4()
{
  uint64_t v0;

  sub_100533FC0(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1005344AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005344BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1005344C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id result;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue);
  result = objc_msgSend(objc_allocWithZone((Class)CBCentralManager), "initWithDelegate:queue:", 0, v16);
  if (v16)
  {
    v18 = result;
    static DispatchTime.now()(result);
    + infix(_:_:)(v13, 1.0);
    v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v13, v9);
    v20 = swift_allocObject(&unk_10072EC08, 24, 7);
    *(_QWORD *)(v20 + 16) = v18;
    aBlock[4] = sub_10053A420;
    v34 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072EC20;
    v21 = _Block_copy(aBlock);
    v22 = v18;
    v28 = v9;
    v23 = v22;
    static DispatchQoS.unspecified.getter(v22);
    v32 = _swiftEmptyArrayStorage;
    v24 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_100008384((uint64_t *)&unk_1007B6410);
    v26 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v25, v26, v3, v24);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
    v19(v15, v28);
    return (id)swift_release(v34);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10053475C(void *a1)
{
  id v2;
  NSObject *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  NSObject *oslog;

  v2 = objc_msgSend(a1, "sharedPairingAgent");
  if (!v2)
    goto LABEL_21;
  v3 = v2;
  sub_100533858();
  v5 = (uint64_t)v4;

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease((const char *)v5);
    if (!v6)
      goto LABEL_14;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      goto LABEL_14;
  }
  if (v6 < 1)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    -[NSObject unpairPeer:](v3, "unpairPeer:", v8);

  }
LABEL_14:
  swift_bridgeObjectRelease((const char *)v5);
  objc_msgSend((id)objc_opt_self(NSThread), "sleepForTimeInterval:", 2.0);
  objc_msgSend(a1, "setDelegate:", 0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007C57E0);
  oslog = Logger.logObject.getter(v12);
  v13 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v13, "sharing.unpairAllB389", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
    v15 = v3;
  }
  else
  {
    v15 = oslog;
    oslog = v3;
  }

}

void sub_100534964()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  int *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v2 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  v3 = objc_msgSend(v1, "bleProximityRSSIThresholdForType:device:", 8, v2);

  v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  *(_QWORD *)(v0 + v4[9]) = v3;
  v5 = (void *)objc_opt_self(SDStatusMonitor);
  objc_msgSend(v5, "b389MultiDiscoveryInstructionsDelay");
  v6 = v0 + v4[10];
  *(_QWORD *)v6 = v7;
  *(_BYTE *)(v6 + 8) = 0;
  v8 = objc_msgSend(v5, "sharedMonitor");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "meCard");

    if (v10)
    {
      v11 = objc_msgSend(v10, "givenName");

      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15 = v0 + v4[11];
      swift_bridgeObjectRelease(*(const char **)(v15 + 8));
      *(_QWORD *)v15 = v12;
      *(_QWORD *)(v15 + 8) = v14;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100534ABC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = __chkstk_darwin(v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    v17 = swift_allocObject(a3, 24, 7);
    *(_QWORD *)(v17 + 16) = a2;
    aBlock[4] = a4;
    v25 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = a5;
    v18 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(a2);
    v23 = _swiftEmptyArrayStorage;
    v19 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_100008384((uint64_t *)&unk_1007B6410);
    v21 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, v9, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v11, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    return swift_release(v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100534C94(uint64_t a1, const char *a2, char a3)
{
  int *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v17;

  v5 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007C57E0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  *v7 = a3;
  v13 = type metadata accessor for B389PresentationConfig.Mode(0);
  swift_storeEnumTagMultiPayload(v7, v13, 0);
  *(_DWORD *)&v7[v5[5]] = 0;
  v7[v5[6]] = 0;
  v7[v5[7]] = 0;
  v7[v5[8]] = 0;
  *(_QWORD *)&v7[v5[9]] = -50;
  v14 = &v7[v5[10]];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = &v7[v5[11]];
  *v15 = 0;
  v15[1] = 0;
  *(_OWORD *)&v7[v5[12]] = xmmword_1005CF260;
  sub_100534964();
  sub_100535B18((uint64_t)v7);
  return sub_1002443C8((uint64_t)v7, type metadata accessor for B389PresentationConfig);
}

void SDB389SetupAgent.advertisingB389Found(_:)(void *a1)
{
  int *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  void *v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  const char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  char v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  const char *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  int v80;
  unsigned int v81;
  int v82;
  char v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t v91;
  _BYTE v92[4];
  int v93;
  uint64_t v94;
  uint8_t *v95;
  char *v96;
  uint64_t v97;
  id v98;
  _BYTE *v99;
  _QWORD v100[2];
  uint64_t v101[5];
  __int128 v102;
  __int128 v103;

  v2 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v2);
  v4 = &v92[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v5);
  v7 = &v92[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v92[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v92[-v13];
  v15 = objc_msgSend(a1, "identifier");
  if (v15)
  {
    v16 = v15;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
    v17(v7, v12, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v17(v14, v7, v8);
      v18 = objc_msgSend(a1, "bleDevice");
      if (!v18)
      {
        if (qword_1007B42A8 != -1)
          swift_once(&qword_1007B42A8, sub_1005337C8);
        v30 = type metadata accessor for Logger(0);
        v31 = sub_100221DF8(v30, (uint64_t)qword_1007C57E0);
        v32 = Logger.logObject.getter(v31);
        v33 = static os_log_type_t.error.getter(v32);
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v34 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "bleDevice = nil", v34, 2u);
          swift_slowDealloc(v34, -1, -1);
        }

        goto LABEL_36;
      }
      v19 = v18;
      v20 = objc_msgSend(v18, "advertisementFields");
      if (v20)
      {
        v21 = v20;
        v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v100[0] = 1396863855;
        v100[1] = 0xE400000000000000;
        AnyHashable.init<A>(_:)(v101, v100, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v22 + 16) && (v23 = sub_10045C1D0((uint64_t)v101), (v24 & 1) != 0))
        {
          sub_10022E77C(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v102);
        }
        else
        {
          v102 = 0u;
          v103 = 0u;
        }
        sub_10022E6C0((uint64_t)v101);
        if (*((_QWORD *)&v103 + 1))
        {
          if ((swift_dynamicCast(v100, &v102, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6) & 1) != 0)
          {
            LODWORD(v97) = LOBYTE(v100[0]);
            v100[0] = 1816556399;
            v100[1] = 0xE400000000000000;
            AnyHashable.init<A>(_:)(v101, v100, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v22 + 16))
            {
              v35 = v19;
              v36 = sub_10045C1D0((uint64_t)v101);
              if ((v37 & 1) != 0)
              {
                v38 = v22;
                sub_10022E77C(*(_QWORD *)(v22 + 56) + 32 * v36, (uint64_t)&v102);
LABEL_39:
                sub_10022E6C0((uint64_t)v101);
                if (*((_QWORD *)&v103 + 1))
                {
                  if ((swift_dynamicCast(v100, &v102, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6) & 1) != 0)
                  {
                    v93 = v100[0];
                    strcpy((char *)v100, "engravingData");
                    HIWORD(v100[1]) = -4864;
                    AnyHashable.init<A>(_:)(v101, v100, &type metadata for String, &protocol witness table for String);
                    v54 = *(_QWORD *)(v38 + 16);
                    v94 = v38;
                    if (v54)
                    {
                      v55 = v38;
                      v56 = sub_10045C1D0((uint64_t)v101);
                      v57 = v35;
                      if ((v58 & 1) != 0)
                      {
                        sub_10022E77C(*(_QWORD *)(v55 + 56) + 32 * v56, (uint64_t)&v102);
                      }
                      else
                      {
                        v102 = 0u;
                        v103 = 0u;
                      }
                    }
                    else
                    {
                      v102 = 0u;
                      v103 = 0u;
                      v57 = v35;
                    }
                    sub_10022E6C0((uint64_t)v101);
                    v98 = v57;
                    v99 = v14;
                    if (*((_QWORD *)&v103 + 1))
                    {
                      if ((swift_dynamicCast(v100, &v102, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
                      {
                        v71 = (char *)v100[0];
                        v70 = v100[1];
                        goto LABEL_61;
                      }
                    }
                    else
                    {
                      sub_10000D0F0((uint64_t)&v102, (uint64_t *)&unk_1007B6890);
                    }
                    if (qword_1007B42A8 != -1)
                      swift_once(&qword_1007B42A8, sub_1005337C8);
                    v72 = type metadata accessor for Logger(0);
                    v73 = sub_100221DF8(v72, (uint64_t)qword_1007C57E0);
                    v74 = Logger.logObject.getter(v73);
                    v75 = static os_log_type_t.default.getter(v74);
                    if (os_log_type_enabled(v74, v75))
                    {
                      v76 = (uint8_t *)swift_slowAlloc(2, -1);
                      *(_WORD *)v76 = 0;
                      _os_log_impl((void *)&_mh_execute_header, v74, v75, "bleDevice does not have engraving data", v76, 2u);
                      swift_slowDealloc(v76, -1, -1);
                    }

                    v71 = 0;
                    v70 = 0xF000000000000000;
LABEL_61:
                    v95 = (uint8_t *)v70;
                    *(_QWORD *)&v102 = 1816359791;
                    *((_QWORD *)&v102 + 1) = 0xE400000000000000;
                    AnyHashable.init<A>(_:)(v101, &v102, &type metadata for String, &protocol witness table for String);
                    v77 = v94;
                    if (*(_QWORD *)(v94 + 16) && (v78 = sub_10045C1D0((uint64_t)v101), (v79 & 1) != 0))
                    {
                      sub_10022E77C(*(_QWORD *)(v77 + 56) + 32 * v78, (uint64_t)&v102);
                    }
                    else
                    {
                      v102 = 0u;
                      v103 = 0u;
                    }
                    swift_bridgeObjectRelease((const char *)v77);
                    sub_10022E6C0((uint64_t)v101);
                    v96 = v71;
                    if (*((_QWORD *)&v103 + 1))
                    {
                      if (swift_dynamicCast(v100, &v102, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
                      {
                        v80 = v100[0];
LABEL_70:
                        v81 = v93 & 0x20;
                        if ((v93 & 0x20) != 0)
                          v82 = 99;
                        else
                          v82 = v80;
                        v83 = v97;
                        v84 = (v97 & 0xFE) == 2;
                        v85 = *(int *)(sub_100008384(&qword_1007B70D8) + 48);
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v4, v99, v8);
                        v4[v85] = 0;
                        v86 = type metadata accessor for B389PresentationConfig.Mode(0);
                        swift_storeEnumTagMultiPayload(v4, v86, 1);
                        *(_DWORD *)&v4[v2[5]] = v82;
                        v4[v2[6]] = v81 >> 5;
                        v4[v2[7]] = v83;
                        v4[v2[8]] = v84;
                        *(_QWORD *)&v4[v2[9]] = -50;
                        v87 = &v4[v2[10]];
                        *(_QWORD *)v87 = 0;
                        v87[8] = 1;
                        v88 = &v4[v2[11]];
                        *v88 = 0;
                        v88[1] = 0;
                        v89 = &v4[v2[12]];
                        v91 = (unint64_t)v95;
                        v90 = (uint64_t)v96;
                        *v89 = v96;
                        v89[1] = v91;
                        sub_100244404(v90, v91);
                        sub_100534964();
                        sub_100535B18((uint64_t)v4);

                        sub_100225AA0(v90, v91);
                        sub_1002443C8((uint64_t)v4, type metadata accessor for B389PresentationConfig);
                        goto LABEL_74;
                      }
                    }
                    else
                    {
                      sub_10000D0F0((uint64_t)&v102, (uint64_t *)&unk_1007B6890);
                    }
                    v80 = 0;
                    goto LABEL_70;
                  }
                }
                else
                {
                  sub_10000D0F0((uint64_t)&v102, (uint64_t *)&unk_1007B6890);
                }
                v59 = (const char *)v38;
                if (qword_1007B42A8 != -1)
                  swift_once(&qword_1007B42A8, sub_1005337C8);
                v60 = type metadata accessor for Logger(0);
                sub_100221DF8(v60, (uint64_t)qword_1007C57E0);
                swift_bridgeObjectRetain((const char *)v38);
                v62 = Logger.logObject.getter(v61);
                v63 = static os_log_type_t.error.getter(v62);
                if (os_log_type_enabled(v62, v63))
                {
                  v64 = (uint8_t *)swift_slowAlloc(12, -1);
                  v97 = swift_slowAlloc(32, -1);
                  v101[0] = v97;
                  v99 = v14;
                  *(_DWORD *)v64 = 136315138;
                  v95 = v64 + 4;
                  swift_bridgeObjectRetain((const char *)v38);
                  v96 = (char *)&type metadata for Any + 8;
                  v66 = Dictionary.description.getter(v65, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
                  v68 = v67;
                  swift_bridgeObjectRelease(v59);
                  *(_QWORD *)&v102 = sub_100228BD8(v66, (unint64_t)v68, v101);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, (char *)&v102 + 8, v95);
                  swift_bridgeObjectRelease_n(v59, 2);
                  swift_bridgeObjectRelease(v68);
                  _os_log_impl((void *)&_mh_execute_header, v62, v63, "Couldn't decode flags from advertisementFields: %s", v64, 0xCu);
                  v69 = v97;
                  swift_arrayDestroy(v97, 1, v96);
                  swift_slowDealloc(v69, -1, -1);
                  swift_slowDealloc(v64, -1, -1);

                  goto LABEL_74;
                }
                swift_bridgeObjectRelease_n(v38, 2);

LABEL_36:
                (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
                return;
              }
            }
            else
            {
              v35 = v19;
            }
            v38 = v22;
            v102 = 0u;
            v103 = 0u;
            goto LABEL_39;
          }
        }
        else
        {
          sub_10000D0F0((uint64_t)&v102, (uint64_t *)&unk_1007B6890);
        }
        if (qword_1007B42A8 != -1)
          swift_once(&qword_1007B42A8, sub_1005337C8);
        v44 = type metadata accessor for Logger(0);
        sub_100221DF8(v44, (uint64_t)qword_1007C57E0);
        swift_bridgeObjectRetain((const char *)v22);
        v41 = Logger.logObject.getter(v45);
        v46 = static os_log_type_t.error.getter(v41);
        if (os_log_type_enabled(v41, v46))
        {
          v98 = v19;
          v47 = (const char *)v22;
          v48 = (uint8_t *)swift_slowAlloc(12, -1);
          v49 = swift_slowAlloc(32, -1);
          v101[0] = v49;
          v99 = v14;
          *(_DWORD *)v48 = 136315138;
          v96 = (char *)(v48 + 4);
          swift_bridgeObjectRetain((const char *)v22);
          v97 = (uint64_t)&type metadata for Any + 8;
          v51 = Dictionary.description.getter(v50, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
          v53 = v52;
          swift_bridgeObjectRelease(v47);
          *(_QWORD *)&v102 = sub_100228BD8(v51, (unint64_t)v53, v101);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, (char *)&v102 + 8, v96);
          swift_bridgeObjectRelease_n(v47, 2);
          swift_bridgeObjectRelease(v53);
          _os_log_impl((void *)&_mh_execute_header, v41, v46, "Couldn't decode battery state from advertisementFields: %s", v48, 0xCu);
          swift_arrayDestroy(v49, 1, v97);
          swift_slowDealloc(v49, -1, -1);
          swift_slowDealloc(v48, -1, -1);

LABEL_74:
          (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v99, v8);
          return;
        }
        swift_bridgeObjectRelease_n(v22, 2);
      }
      else
      {
        if (qword_1007B42A8 != -1)
          swift_once(&qword_1007B42A8, sub_1005337C8);
        v39 = type metadata accessor for Logger(0);
        v40 = sub_100221DF8(v39, (uint64_t)qword_1007C57E0);
        v41 = Logger.logObject.getter(v40);
        v42 = static os_log_type_t.error.getter(v41);
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "advertisementFields = nil", v43, 2u);
          swift_slowDealloc(v43, -1, -1);
        }
      }

      goto LABEL_36;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_10000D0F0((uint64_t)v7, &qword_1007B7280);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100221DF8(v25, (uint64_t)qword_1007C57E0);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.error.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "advertisingB389Found with nil UUID", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

}

uint64_t sub_100535B18(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for B389PresentationConfig(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  result = __chkstk_darwin(v9);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    sub_100244384(a1, (uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for B389PresentationConfig);
    v13 = *(unsigned __int8 *)(v10 + 80);
    v14 = (v13 + 24) & ~v13;
    v15 = swift_allocObject(&unk_10072E9D8, v14 + v11, v13 | 7);
    *(_QWORD *)(v15 + 16) = v1;
    sub_10053A1C0((uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
    aBlock[4] = sub_10053A204;
    v25 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072E9F0;
    v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v1);
    v23 = _swiftEmptyArrayStorage;
    v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_100008384((uint64_t *)&unk_1007B6410);
    v19 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v3, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
    return swift_release(v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100535D5C(char *a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  _QWORD *v78;
  uint64_t aBlock[5];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v77 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v73 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v74 = (char *)&v63 - v14;
  v15 = type metadata accessor for B389PresentationConfig(0);
  v16 = a1;
  v17 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
  v18 = __chkstk_darwin(v15);
  __chkstk_darwin(v18);
  v22 = (char *)&v63 - v21;
  if (v16[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] == 1)
  {
    v66 = v20;
    v67 = v19;
    v68 = v9;
    v71 = v16;
    v72 = (id)v10;
    v69 = v7;
    if (qword_1007B42A8 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v23 = type metadata accessor for Logger(0);
    sub_100221DF8(v23, (uint64_t)qword_1007C57E0);
    v24 = sub_100244384((uint64_t)v77, (uint64_t)v22, type metadata accessor for B389PresentationConfig);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    v27 = os_log_type_enabled(v25, v26);
    v70 = v6;
    if (v27)
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v65 = v5;
      v30 = v29;
      aBlock[0] = v29;
      v64 = v11;
      *(_DWORD *)v28 = 136315138;
      v31 = sub_10027F48C();
      v33 = (const char *)v32;
      v81 = sub_100228BD8(v31, v32, aBlock);
      v11 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v28 + 4);
      swift_bridgeObjectRelease(v33);
      sub_1002443C8((uint64_t)v22, type metadata accessor for B389PresentationConfig);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "advertisingB389Found: %s. Debouncing...", v28, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      v34 = v30;
      v5 = v65;
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      sub_1002443C8((uint64_t)v22, type metadata accessor for B389PresentationConfig);
    }

    v39 = v72;
    v40 = v77;
    v41 = *(uint64_t *)((char *)&v77->isa + *(int *)(v15 + 36));
    v42 = type metadata accessor for SDB389BubbleMonitor();
    swift_allocObject(v42, 88, 7);
    v43 = sub_10027E104(v41);
    v44 = v71;
    v45 = *(void **)&v71[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue];
    swift_beginAccess(v43 + 24, &v81, 1, 0);
    v46 = *(void **)(v43 + 24);
    *(_QWORD *)(v43 + 24) = v45;
    v72 = v45;

    sub_10027E180((uint64_t)LongHash.storage.getter, 0);
    if (v45)
    {
      v48 = v73;
      static DispatchTime.now()(v47);
      objc_msgSend((id)objc_opt_self(SDStatusMonitor), "b389MultiDiscoveryDebounce");
      v49 = v74;
      + infix(_:_:)(v48, v50);
      v65 = *(char **)(v11 + 8);
      ((void (*)(char *, id))v65)(v48, v39);
      v51 = v67;
      sub_100244384((uint64_t)v40, v67, type metadata accessor for B389PresentationConfig);
      v52 = *(unsigned __int8 *)(v66 + 80);
      v53 = (v52 + 24) & ~v52;
      v54 = (v17 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      v55 = swift_allocObject(&unk_10072EA28, v54 + 8, v52 | 7);
      *(_QWORD *)(v55 + 16) = v43;
      sub_10053A1C0(v51, v55 + v53);
      *(_QWORD *)(v55 + v54) = v44;
      aBlock[4] = (uint64_t)sub_10053A32C;
      v80 = v55;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10025BBB4;
      aBlock[3] = (uint64_t)&unk_10072EA40;
      v56 = _Block_copy(aBlock);
      swift_retain();
      v57 = v44;
      v58 = v68;
      static DispatchQoS.unspecified.getter(v57);
      v78 = _swiftEmptyArrayStorage;
      v59 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v60 = sub_100008384((uint64_t *)&unk_1007B6410);
      v61 = sub_100273050();
      v62 = v76;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v78, v60, v61, v76, v59);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v49, v58, v5, v56);
      _Block_release(v56);
      swift_release(v43);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v5, v62);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v58, v70);
      ((void (*)(char *, id))v65)(v49, v39);
      swift_release(v80);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    SDB389SetupAgent.activate()();
    if (qword_1007B42A8 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100221DF8(v35, (uint64_t)qword_1007C57E0);
    v77 = Logger.logObject.getter(v36);
    v37 = static os_log_type_t.default.getter(v77);
    if (os_log_type_enabled(v77, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v37, "Device found, but agent not activated.", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

  }
}

uint64_t sub_1005363B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  _BYTE v20[24];

  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 80, v20, 0, 0);
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 16);
  sub_10027EBCC();
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100221DF8(v11, (uint64_t)qword_1007C57E0);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v19 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v15 + 4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Debounce fired. Count: %ld", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }

  sub_100244384(a2, (uint64_t)v9, type metadata accessor for B389PresentationConfig);
  sub_100244384((uint64_t)v9, (uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    sub_1002443C8((uint64_t)v9, type metadata accessor for B389PresentationConfig.Mode);
    v16 = *(int *)(sub_100008384(&qword_1007B70D8) + 48);
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(NSObject *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v9, v6, v17);
    *((_BYTE *)&v9->isa + v16) = v10 > 1;
    swift_storeEnumTagMultiPayload(v9, v4, 1);
  }
  else
  {
    sub_1002443C8((uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100538224(v9, 0, 0);
  return sub_1002443C8((uint64_t)v9, type metadata accessor for B389PresentationConfig);
}

uint64_t SDB389SetupAgent.advertisingB389Lost(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B7280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  result = __chkstk_darwin(v9);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    sub_100370F28(a1, (uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    v13 = *(unsigned __int8 *)(v10 + 80);
    v14 = (v13 + 24) & ~v13;
    v15 = swift_allocObject(&unk_10072E708, v14 + v11, v13 | 7);
    *(_QWORD *)(v15 + 16) = v1;
    sub_1004B4544((uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
    aBlock[4] = sub_1005399F8;
    v25 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072E720;
    v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v1);
    v23 = _swiftEmptyArrayStorage;
    v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_100008384((uint64_t *)&unk_1007B6410);
    v19 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v3, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
    return swift_release(v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10053686C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_100008384(&qword_1007B7280);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated) == 1)
  {
    if (qword_1007B42A8 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v10 = type metadata accessor for Logger(0);
    sub_100221DF8(v10, (uint64_t)qword_1007C57E0);
    v11 = sub_100370F28(a2, (uint64_t)v9);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v23 = v15;
      *(_DWORD *)v14 = 136315138;
      sub_100370F28((uint64_t)v9, (uint64_t)v7);
      v16 = type metadata accessor for UUID(0);
      v17 = *(_QWORD *)(v16 - 8);
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16);
      if ((_DWORD)v18 == 1)
      {
        sub_10000D0F0((uint64_t)v7, &qword_1007B7280);
        v19 = (const char *)0x8000000100620DE0;
        v20 = 0xD000000000000012;
      }
      else
      {
        v20 = UUID.description.getter(v18);
        v19 = v21;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
      }
      v22 = sub_100228BD8(v20, (unint64_t)v19, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v14 + 4);
      swift_bridgeObjectRelease(v19);
      sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Lost UUID: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }
    else
    {
      sub_10000D0F0((uint64_t)v9, &qword_1007B7280);
    }

  }
}

id sub_100536BDC(uint64_t a1, void *a2)
{
  int *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  objc_class *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  objc_class *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v4);
  v6 = ((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for OSSignpostID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)b389_log(v9);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v13 = result;
  swift_unknownObjectRetain(a1);
  v14 = OSSignpostID.init(log:object:)(v13, a1);
  v15 = static os_signpost_type_t.begin.getter(v14);
  result = (id)b389_log(v15);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v16 = result;
  os_signpost(_:dso:log:name:signpostID:)(v15, &_mh_execute_header, result, "ShowNFCPrompt", 13, 2, v11);

  v17 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = a2;
  v18 = a2;

  v6->isa = v18;
  v19 = type metadata accessor for B389PresentationConfig.Mode(0);
  swift_storeEnumTagMultiPayload(v6, v19, 2);
  *(_DWORD *)((char *)&v6->isa + v4[5]) = 0;
  *((_BYTE *)&v6->isa + v4[6]) = 0;
  *((_BYTE *)&v6->isa + v4[7]) = 0;
  *((_BYTE *)&v6->isa + v4[8]) = 0;
  *(Class *)((char *)&v6->isa + v4[9]) = (Class)-50;
  v20 = (char *)v6 + v4[10];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = (Class *)((char *)&v6->isa + v4[11]);
  *v21 = 0;
  v21[1] = 0;
  *(_OWORD *)((char *)&v6->isa + v4[12]) = xmmword_1005CF260;
  v22 = v18;
  sub_100534964();
  sub_100538224(v6, 0, 0);
  v24 = static os_signpost_type_t.end.getter(v23);
  result = (id)b389_log(v24);
  if (result)
  {
    v25 = result;
    os_signpost(_:dso:log:name:signpostID:)(v24, &_mh_execute_header, result, "ShowNFCPrompt", 13, 2, v11);

    sub_1002443C8((uint64_t)v6, type metadata accessor for B389PresentationConfig);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100536E98(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;

  if (a1)
    v6 = _convertErrorToNSError(_:)(a1);
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, double))(a4 + 16))(a4, a2);

}

void sub_100536F40(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  id v16;
  NSString v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  char *v28;
  unsigned int v29;
  void **v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void **v39;
  uint64_t v40;
  unint64_t v41;
  const char *v42;
  uint64_t v43;
  _QWORD v44[3];
  char v45[16];
  void **aBlock;
  uint64_t v47;
  void (*v48)(uint64_t, void *);
  void *v49;
  void *v50;
  _QWORD *v51;

  v6 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig];
  *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig] = a1;
  v7 = a1;

  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent;
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent])
  {
    if (qword_1007B42A8 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007C57E0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureNFCXPCStarted - initialize nfcXPCAgent", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = objc_msgSend(objc_allocWithZone((Class)CUXPCAgent), "init");
    v15 = *(void **)&v3[v8];
    *(_QWORD *)&v3[v8] = v14;
    v16 = v14;

    if (*(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
    {
      objc_msgSend(v16, "setDispatchQueue:");
      v17 = String._bridgeToObjectiveC()();
      objc_msgSend(v16, "setLabel:", v17);

      v18 = (void *)objc_opt_self(NSXPCInterface);
      v19 = objc_msgSend(v18, "interfaceWithProtocol:", &OBJC_PROTOCOL___SDXPCClientInterface);
      objc_msgSend(v16, "setExportedInterface:", v19);

      objc_msgSend(v16, "setExportedObject:", v3);
      v20 = objc_msgSend(v18, "interfaceWithProtocol:", &OBJC_PROTOCOL___SFXPCB389NFCPromptConfigurationReceiving);
      objc_msgSend(v16, "setRemoteObjectInterface:", v20);

      v21 = (_QWORD *)swift_allocObject(&unk_10072E8E8, 40, 7);
      v21[2] = v3;
      v21[3] = a2;
      v21[4] = a3;
      v50 = sub_10053A09C;
      v51 = v21;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v48 = sub_1002377A0;
      v49 = &unk_10072E900;
      v22 = _Block_copy(&aBlock);
      v23 = v51;
      v24 = v3;
      sub_1002845E4(a2, a3);
      swift_release(v23);
      objc_msgSend(v16, "setConnectionStartedHandler:", v22);
      _Block_release(v22);
      v25 = swift_allocObject(&unk_10072E938, 24, 7);
      *(_QWORD *)(v25 + 16) = v24;
      v50 = sub_10053A0A8;
      v51 = (_QWORD *)v25;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v48 = sub_1002377A0;
      v49 = &unk_10072E950;
      v26 = _Block_copy(&aBlock);
      v27 = v51;
      v28 = v24;
      swift_release(v27);
      objc_msgSend(v16, "setConnectionEndedHandler:", v26);
      _Block_release(v26);
      aBlock = 0;
      v29 = objc_msgSend(v16, "activateDirectAndReturnError:", &aBlock);
      v30 = aBlock;
      if (v29)
      {
        v31 = aBlock;
LABEL_11:

        return;
      }
      v32 = aBlock;
      v33 = _convertNSErrorToError(_:)(v30);

      swift_willThrow(v34);
      swift_errorRetain(v33);
      v35 = swift_errorRetain(v33);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(12, -1);
        v39 = (void **)swift_slowAlloc(32, -1);
        aBlock = v39;
        *(_DWORD *)v38 = 136315138;
        swift_getErrorValue(v33, v45, v44);
        v40 = Error.localizedDescription.getter(v44[1], v44[2]);
        v42 = (const char *)v41;
        v43 = sub_100228BD8(v40, v41, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v38 + 4);
        swift_bridgeObjectRelease(v42);
        swift_errorRelease(v33);
        swift_errorRelease(v33);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to activate: %s", v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

        swift_errorRelease(v33);
        goto LABEL_11;
      }

      swift_errorRelease(v33);
      swift_errorRelease(v33);
      swift_errorRelease(v33);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100537464(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  _QWORD *v13;
  uint8_t *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v7 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx];
  *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx] = a1;
  v8 = a1;

  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007C57E0);
  v10 = a2;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = &unk_1007C5000;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v16 = *(void **)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig];
    if (v16)
    {
      v21 = *(_QWORD *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig];
      v17 = v16;
      v13 = (_QWORD *)&unk_1007C5000;
    }
    else
    {
      v21 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14 + 4);
    *v15 = v16;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "connectionStarted. pending: %@", v14, 0xCu);
    v18 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v18);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  v19 = *(void **)&v10[v13[259]];
  if (v19)
  {
    v20 = v19;
    SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(v19, a3, a4);

  }
}

void sub_1005376A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;

  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C57E0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "connectionEnded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx) = 0;

}

void SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  void **v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  void **v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _QWORD *v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  _QWORD v54[2];
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void (*v64)(uint64_t);
  uint64_t v65;

  v4 = v3;
  v56 = a3;
  v57 = a2;
  v6 = type metadata accessor for OSSignpostID(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007C57E0);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v54[1] = v10;
    v55 = v8;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    if (a1)
    {
      aBlock = v11;
      v16 = v11;
    }
    else
    {
      aBlock = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v61, v14 + 4);
    *v15 = a1;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "updateNFCPromptConfig: %@", v14, 0xCu);
    v17 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v8 = v55;
  }
  else
  {

  }
  v18 = (id)b389_log();
  if (!v18)
  {
    __break(1u);
LABEL_33:
    __break(1u);
  }
  v19 = v18;
  swift_unknownObjectRetain(v4);
  v20 = OSSignpostID.init(log:object:)(v19, v4);
  v21 = static os_signpost_type_t.begin.getter(v20);
  v22 = (id)b389_log();
  if (!v22)
    goto LABEL_33;
  v23 = v22;
  os_signpost(_:dso:log:name:signpostID:)(v21, &_mh_execute_header, v22, "UpdateNFCPrompt", 15, 2, v8);

  sub_100536F40(a1, 0, 0);
  v24 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  if (v24)
  {
    v64 = sub_100537E7C;
    v65 = 0;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_1002D6B08;
    v63 = &unk_10072E748;
    v25 = _Block_copy(&aBlock);
    v26 = v24;
    v27 = objc_msgSend(v26, "remoteObjectProxyWithErrorHandler:", v25);
    _Block_release(v25);
    v28 = objc_msgSend(v27, "respondsToSelector:", "b389NFCPromptUpdateConfiguration:");
    if ((v28 & 1) != 0)
      v28 = objc_msgSend(v27, "b389NFCPromptUpdateConfiguration:", v11);
    v29 = static os_signpost_type_t.end.getter(v28);
    v30 = (id)b389_log();
    if (v30)
    {
      v31 = v30;
      os_signpost(_:dso:log:name:signpostID:)(v29, &_mh_execute_header, v30, "UpdateNFCPrompt", 15, 2, v8);

      v32 = v57;
      if (v57)
      {
        if ((objc_msgSend(v27, "respondsToSelector:", "setResponseHandler:") & 1) != 0)
        {
          v33 = v56;
          v64 = (void (*)(uint64_t))v32;
          v65 = v56;
          aBlock = _NSConcreteStackBlock;
          v61 = 1107296256;
          v62 = sub_100538080;
          v63 = &unk_10072E798;
          v34 = _Block_copy(&aBlock);
          sub_1002845E4(v32, v33);
          sub_1002845E4(v32, v33);
          objc_msgSend((id)swift_unknownObjectRetain(v27), "setResponseHandler:", v34);
          _Block_release(v34);
          swift_release(v65);
          sub_1002845F4(v32, v33);
          swift_unknownObjectRelease_n(v27, 2);

          (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
          return;
        }
        v48 = *(void (**)(char *, uint64_t))(v58 + 8);
        v49 = v56;
        swift_retain();
        v48(v8, v59);
        swift_unknownObjectRelease(v27);
        v50 = v32;
        v51 = v49;
      }
      else
      {
        v42 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler;
        v43 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
        if (!v43)
        {
          (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);

          swift_unknownObjectRelease(v27);
          return;
        }
        v44 = v8;
        v45 = *(_QWORD *)(v42 + 8);
        if ((objc_msgSend(v27, "respondsToSelector:", "setResponseHandler:") & 1) != 0)
        {
          v64 = (void (*)(uint64_t))v43;
          v65 = v45;
          aBlock = _NSConcreteStackBlock;
          v61 = 1107296256;
          v62 = sub_100538080;
          v63 = &unk_10072E770;
          v46 = _Block_copy(&aBlock);
          sub_1002845E4(v43, v45);
          swift_unknownObjectRetain(v27);
          sub_1002845E4(v43, v45);
          objc_msgSend(v27, "setResponseHandler:", v46);
          _Block_release(v46);
          v47 = v65;

          swift_release(v47);
          sub_1002845F4(v43, v45);
          swift_unknownObjectRelease_n(v27, 2);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
          return;
        }
        v52 = *(void (**)(char *, uint64_t))(v58 + 8);
        swift_retain();
        v52(v44, v59);
        swift_unknownObjectRelease(v27);
        v50 = v43;
        v51 = v45;
      }
      sub_1002845F4(v50, v51);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v35 = v8;
    v36 = v11;
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v39 = 138412290;
      if (a1)
      {
        aBlock = v36;
        v41 = v36;
      }
      else
      {
        aBlock = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v61, v39 + 4);
      *v40 = a1;

      _os_log_impl((void *)&_mh_execute_header, v37, v38, "No nfcXPCCnx to show config %@", v39, 0xCu);
      v53 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v40, 1, v53);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v59);
  }
}

void sub_100537E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  NSObject *oslog;
  _QWORD v11[3];
  _BYTE v12[8];
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C57E0);
  swift_errorRetain(a1);
  v3 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v12, v11);
      v7 = Error.localizedDescription.getter(v11[1], v11[2]);
      v9 = v8;
    }
    else
    {
      v13 = 0;
      v14 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      v9 = (const char *)0x8000000100612DF0;
      v7 = 0xD000000000000015;
    }
    v13 = sub_100228BD8(v7, (unint64_t)v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v5 + 4);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "remoteObjectProxyWithErrorHandler failed in updateNFCPromptConfig. Error: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

void sub_100538080(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v7;
  void (*v8)(void *, uint64_t, double);
  id v9;

  v8 = *(void (**)(void *, uint64_t, double))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a2;
  v8(a2, a3, a4);
  swift_release(v7);

}

Swift::Void __swiftcall SDB389SetupAgent.dismissNFCPrompt()()
{
  uint64_t v0;
  void *v1;

  SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(0, 0, 0);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = 0;

}

void sub_100538224(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  unsigned int v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  char v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  const char *v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  char **v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint8_t *v48;
  NSObject *v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  NSObject *v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t inited;
  const char *v92;
  Class isa;
  id v94;
  void *v95;
  void *v96;
  void *v97;
  id v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  NSObject *v107;
  uint64_t v108;
  _BYTE v109[112];
  NSObject *v110;
  const char *v111[5];

  v7 = (int *)type metadata accessor for B389PresentationConfig(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v99 - v11;
  v13 = (void *)objc_opt_self(SDStatusMonitor);
  v14 = objc_msgSend(v13, "sharedMonitor");
  if (!v14)
  {
    __break(1u);
LABEL_43:
    __break(1u);
    swift_unexpectedError(v7, "DaemoniOSLibrary/SDB389SetupAgent.swift", 39, 1, 315);
    __break(1u);
    return;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "deviceKeyBagUnlocked");

  if (!v16)
  {
    if (qword_1007B42A8 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007C57E0);
    v107 = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.error.getter(v107);
    if (os_log_type_enabled(v107, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v107, v29, "Device is locked, not showing pairing UI", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
LABEL_23:

    return;
  }
  v107 = a1;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle);
  if (v17)
  {
    v18 = qword_1007B42A8;
    v19 = v17;
    if (v18 != -1)
      swift_once(&qword_1007B42A8, sub_1005337C8);
    v20 = type metadata accessor for Logger(0);
    sub_100221DF8(v20, (uint64_t)qword_1007C57E0);
    v107 = v19;
    v21 = Logger.logObject.getter(v107);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      v110 = v107;
      v25 = v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v23 + 4);
      *v24 = v17;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Existing alert handle: %@", v23, 0xCu);
      v26 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v24, 1, v26);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      return;
    }

    goto LABEL_23;
  }
  v101 = a2;
  v102 = a3;
  v104 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle;
  v105 = v3;
  v106 = v10;
  v111[2] = (const char *)&type metadata for SharingFeatureFlags;
  v111[3] = (const char *)sub_100539FD8();
  LOBYTE(v110) = 0;
  v31 = isFeatureEnabled(_:)(&v110);
  sub_10022E75C(&v110);
  if ((v31 & 1) != 0)
    v32 = 0xD00000000000001DLL;
  else
    v32 = 0xD00000000000001BLL;
  if ((v31 & 1) != 0)
    v33 = (void *)0x8000000100620D90;
  else
    v33 = (void *)0x8000000100620D00;
  v110 = 0;
  v111[0] = (const char *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v111[0]);
  v110 = 0xD000000000000013;
  v111[0] = (const char *)0x8000000100620D20;
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease((const char *)v33);
  v35 = v111[0];
  v36 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v36, "initWithServiceName:viewControllerClassName:", v37, v38, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v40 = &selRef_handleStreamResponse_;
  v41 = objc_msgSend(objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext), "init");
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v42 = type metadata accessor for Logger(0);
  sub_100221DF8(v42, (uint64_t)qword_1007C57E0);
  v43 = sub_100244384((uint64_t)v107, (uint64_t)v12, type metadata accessor for B389PresentationConfig);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter(v44);
  v46 = os_log_type_enabled(v44, v45);
  v103 = v41;
  if (v46)
  {
    v47 = swift_slowAlloc(12, -1);
    v100 = v39;
    v48 = (uint8_t *)v47;
    v49 = swift_slowAlloc(32, -1);
    v110 = v49;
    *(_DWORD *)v48 = 136315138;
    v50 = sub_10027F48C();
    v52 = (const char *)v51;
    v108 = sub_100228BD8(v50, v51, (uint64_t *)&v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109, v48 + 4);
    swift_bridgeObjectRelease(v52);
    sub_1002443C8((uint64_t)v12, type metadata accessor for B389PresentationConfig);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "showUI with options: %s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    v53 = v49;
    v40 = &selRef_handleStreamResponse_;
    swift_slowDealloc(v53, -1, -1);
    v54 = v48;
    v39 = v100;
    swift_slowDealloc(v54, -1, -1);
  }
  else
  {
    sub_1002443C8((uint64_t)v12, type metadata accessor for B389PresentationConfig);
  }

  v55 = (uint64_t)v106;
  v56 = v105;
  sub_100244384((uint64_t)v107, (uint64_t)v106, type metadata accessor for B389PresentationConfig);
  v57 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
  v58 = objc_msgSend(objc_allocWithZone((Class)SFDevice), v40[225]);
  v59 = objc_msgSend(v57, "bleProximityRSSIThresholdForType:device:", 8, v58);

  *(_QWORD *)(v55 + v7[9]) = v59;
  objc_msgSend(v13, "b389MultiDiscoveryInstructionsDelay");
  v60 = v55 + v7[10];
  *(_QWORD *)v60 = v61;
  *(_BYTE *)(v60 + 8) = 0;
  v62 = objc_msgSend(v13, "sharedMonitor");
  v63 = v104;
  if (!v62)
    goto LABEL_43;
  v64 = v62;
  v65 = objc_msgSend(v62, "meCard");

  if (v65)
  {
    v66 = objc_msgSend(v65, "givenName");
    v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v69 = v68;

  }
  else
  {
    v67 = 0;
    v69 = 0;
  }
  v70 = v55 + v7[11];
  swift_bridgeObjectRelease(*(const char **)(v70 + 8));
  *(_QWORD *)v70 = v67;
  *(_QWORD *)(v70 + 8) = v69;
  v71 = *(void **)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  v72 = v103;
  if (v71)
  {
    v73 = v71;
    sub_100536F40(v71, 0, 0);
    v74 = *(void **)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent);
    if (v74)
    {
      v75 = v72;
      v76 = objc_msgSend(v74, "listenerEndpoint");
      if (v76)
      {
        v77 = v76;
        v78 = objc_msgSend(v76, "_endpoint");

      }
      else
      {
        v78 = 0;
      }
      v72 = v75;
    }
    else
    {
      v78 = 0;
    }
    objc_msgSend(v72, "setXpcEndpoint:", v78);
    swift_unknownObjectRelease(v78);
    v79 = (uint64_t *)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
    v80 = *(_QWORD *)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
    v81 = *(_QWORD *)(v56 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler + 8);
    v82 = v101;
    v83 = v102;
    *v79 = v101;
    v79[1] = v83;
    sub_1002845E4(v82, v83);
    sub_1002845F4(v80, v81);

  }
  v84 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v84, *(unsigned int *)(v84 + 48), *(unsigned __int16 *)(v84 + 52));
  v85 = PropertyListEncoder.init()();
  v86 = sub_100220D78((unint64_t *)&unk_1007C5870, type metadata accessor for B389PresentationConfig, (uint64_t)&unk_1005D0080);
  v87 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v55, v7, v86);
  v89 = v88;
  swift_release(v85);
  v90 = sub_100008384((uint64_t *)&unk_1007C31D0);
  inited = swift_initStackObject(v90, v109);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  v110 = 0xD000000000000011;
  v111[0] = (const char *)0x8000000100620D70;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v110, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for Data;
  *(_QWORD *)(inited + 72) = v87;
  *(_QWORD *)(inited + 80) = v89;
  sub_10022E4A8(v87, v89);
  v92 = (const char *)sub_10021E5F8(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v72, "setUserInfo:", isa, swift_bridgeObjectRelease(v92).n128_f64[0]);

  v94 = objc_msgSend((id)objc_opt_self(SBSRemoteAlertHandle), "newHandleWithDefinition:configurationContext:", v39, v72);
  v95 = *(void **)(v56 + v63);
  *(_QWORD *)(v56 + v63) = v94;

  v96 = *(void **)(v56 + v63);
  if (v96 && (objc_msgSend(v96, "sd_addObserver:", v56), (v97 = *(void **)(v56 + v63)) != 0))
  {
    v98 = v97;
    objc_msgSend(v98, "activateWithContext:", 0);

    sub_100225AB4(v87, v89);
  }
  else
  {

    sub_100225AB4(v87, v89);
  }

  sub_1002443C8(v55, type metadata accessor for B389PresentationConfig);
}

id SDB389SetupAgent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDB389SetupAgent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t SDB389SetupAgent.remoteAlertHandleDidActivate(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue))
  {
    v12 = swift_allocObject(&unk_10072E7D0, 24, 7);
    *(_QWORD *)(v12 + 16) = a1;
    aBlock[4] = sub_100539C28;
    v20 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072E7E8;
    v13 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(a1);
    v18 = _swiftEmptyArrayStorage;
    v14 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_100008384((uint64_t *)&unk_1007B6410);
    v16 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v15, v16, v3, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v13);
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return swift_release(v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005392AC(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C57E0);
  v9 = a1;
  v3 = Logger.logObject.getter(v9);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v10 = v9;
    v7 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v5 + 4);
    *v6 = v9;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "remoteAlertHandleDidActivate: %@", v5, 0xCu);
    v8 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

void SDB389SetupAgent.remoteAlertHandle(_:didInvalidateWithError:)(uint64_t a1, uint64_t a2)
{
  sub_100539C30(a2);
}

void sub_1005394B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle) = 0;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389) = 0;

  v3 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent), "invalidate");
  v4 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;

  v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx) = 0;

  v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = 0;

}

void SDB389SetupAgent.remoteAlertHandleDidDeactivate(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void **v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  void **v17;
  void **v18;
  void ***v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void ***v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  void **aBlock;
  _QWORD v38[4];
  uint64_t v39;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007C57E0);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v34 = v7;
  if (v14)
  {
    v15 = swift_slowAlloc(12, -1);
    v33 = v2;
    v16 = (uint8_t *)v15;
    v30 = (void ***)swift_slowAlloc(8, -1);
    *(_DWORD *)v16 = 138412290;
    v32 = v6;
    aBlock = v11;
    v17 = v11;
    v31 = v9;
    v18 = v17;
    v6 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v38, v16 + 4);
    v19 = v30;
    *v30 = v11;

    v9 = v31;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "remoteAlertHandleDidDeactivate: %@", v16, 0xCu);
    v20 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v19, 1, v20);
    swift_slowDealloc(v19, -1, -1);
    v21 = v16;
    v2 = v33;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  v22 = v35;
  if (*(_QWORD *)&v35[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    v23 = swift_allocObject(&unk_10072E820, 24, 7);
    *(_QWORD *)(v23 + 16) = v22;
    v38[3] = sub_10053A464;
    v39 = v23;
    aBlock = _NSConcreteStackBlock;
    v38[0] = 1107296256;
    v38[1] = sub_10025BBB4;
    v38[2] = &unk_10072E838;
    v24 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v22);
    v36 = _swiftEmptyArrayStorage;
    v25 = v9;
    v26 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_100008384((uint64_t *)&unk_1007B6410);
    v28 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v27, v28, v2, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v25, v5, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v6);
    swift_release(v39);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100539958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100008384(&qword_1007B7280) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_1005399F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007B7280) - 8) + 80);
  sub_10053686C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t _s16DaemoniOSLibrary16SDB389SetupAgentC23showNFCPromptWithConfig_15responseHandlerySo06SFB389G13ConfigurationC_ys5Error_pSg_SdSo0L11NFCResponseVtctF_0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    v12 = swift_allocObject(&unk_10072E988, 32, 7);
    *(_QWORD *)(v12 + 16) = v1;
    *(_QWORD *)(v12 + 24) = a1;
    aBlock[4] = sub_10053A0DC;
    v21 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072E9A0;
    v13 = _Block_copy(aBlock);
    v14 = v1;
    static DispatchQoS.unspecified.getter(a1);
    v19 = _swiftEmptyArrayStorage;
    v15 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v16 = sub_100008384((uint64_t *)&unk_1007B6410);
    v17 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v16, v17, v3, v15);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v13);
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return swift_release(v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SDB389SetupAgent()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary16SDB389SetupAgent);
}

void sub_100539C28()
{
  uint64_t v0;

  sub_1005392AC(*(void **)(v0 + 16));
}

void sub_100539C30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[3];
  char v31[8];
  _QWORD *v32;
  uint64_t aBlock;
  const char *v34[4];
  uint64_t v35;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B42A8 != -1)
    swift_once(&qword_1007B42A8, sub_1005337C8);
  v9 = type metadata accessor for Logger(0);
  sub_100221DF8(v9, (uint64_t)qword_1007C57E0);
  swift_errorRetain(a1);
  v10 = swift_errorRetain(a1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v28 = v6;
  if (v13)
  {
    v26 = v3;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (_QWORD *)swift_slowAlloc(32, -1);
    v32 = v15;
    *(_DWORD *)v14 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v31, v30);
      v16 = Error.localizedDescription.getter(v30[1], v30[2]);
      v18 = v17;
    }
    else
    {
      aBlock = 0;
      v34[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v34[0]);
      v18 = (const char *)0x8000000100612DF0;
      v16 = 0xD000000000000015;
    }
    aBlock = sub_100228BD8(v16, (unint64_t)v18, (uint64_t *)&v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34, v14 + 4);
    swift_bridgeObjectRelease(v18);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "remoteAlertHandleDidInvalidateWithError: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v3 = v26;
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
  v19 = v29;
  if (*(_QWORD *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    v20 = swift_allocObject(&unk_10072E898, 24, 7);
    *(_QWORD *)(v20 + 16) = v19;
    v34[3] = (const char *)sub_10053A048;
    v35 = v20;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v34[0] = (const char *)1107296256;
    v34[1] = (const char *)sub_10025BBB4;
    v34[2] = (const char *)&unk_10072E8B0;
    v21 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v19);
    v32 = _swiftEmptyArrayStorage;
    v22 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_100008384((uint64_t *)&unk_1007B6410);
    v24 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v23, v24, v2, v22);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
    swift_release(v35);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100539FD8()
{
  unint64_t result;

  result = qword_1007C5868;
  if (!qword_1007C5868)
  {
    result = swift_getWitnessTable(&unk_1005D676C, &type metadata for SharingFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1007C5868);
  }
  return result;
}

uint64_t sub_10053A01C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10053A040(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  sub_100536E98(a1, a3, a2, *(_QWORD *)(v3 + 16));
}

void sub_10053A048()
{
  sub_1005394B8();
}

uint64_t sub_10053A068()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10053A09C(void *a1)
{
  uint64_t v1;

  sub_100537464(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_10053A0A8(uint64_t a1)
{
  uint64_t v1;

  sub_1005376A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10053A0B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10053A0DC()
{
  uint64_t v0;

  return sub_100536BDC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10053A0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  v1 = type metadata accessor for B389PresentationConfig(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for B389PresentationConfig.Mode(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v7);
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  swift_bridgeObjectRelease(*(const char **)((char *)v6 + *(int *)(v1 + 44) + 8));
  v10 = (uint64_t *)((char *)v6 + *(int *)(v1 + 48));
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_100225AB4(*v10, v11);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10053A1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10053A204()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for B389PresentationConfig(0) - 8) + 80);
  sub_100535D5C(*(char **)(v0 + 16), (v0 + ((v1 + 24) & ~v1)));
}

uint64_t sub_10053A234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = type metadata accessor for B389PresentationConfig(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for B389PresentationConfig.Mode(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v7);
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  swift_bridgeObjectRelease(*(const char **)((char *)v6 + *(int *)(v1 + 44) + 8));
  v10 = (uint64_t *)((char *)v6 + *(int *)(v1 + 48));
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_100225AB4(*v10, v11);
  v12 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;

  return swift_deallocObject(v0, v13, v3 | 7);
}

uint64_t sub_10053A32C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for B389PresentationConfig(0) - 8) + 80);
  return sub_1005363B0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

id sub_10053A370(uint64_t a1)
{
  uint64_t v1;

  return sub_1005344C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10053A378(uint64_t a1)
{
  uint64_t v1;

  return sub_100534ABC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072EBB8, (uint64_t)sub_10053A3FC, (uint64_t)&unk_10072EBD0);
}

uint64_t sub_10053A3A8(uint64_t a1)
{
  uint64_t v1;

  return sub_100534ABC(a1, *(char **)(v1 + 16), (uint64_t)&unk_10072EB68, (uint64_t)sub_10053A3D8, (uint64_t)&unk_10072EB80);
}

uint64_t sub_10053A3D8()
{
  uint64_t v0;

  return sub_100534C94(*(_QWORD *)(v0 + 16), "sharing.fakeB389MultiUI", 1);
}

uint64_t sub_10053A3FC()
{
  uint64_t v0;

  return sub_100534C94(*(_QWORD *)(v0 + 16), "sharing.fakeB389UI", 0);
}

void sub_10053A420()
{
  uint64_t v0;

  sub_10053475C(*(void **)(v0 + 16));
}

uint64_t sub_10053A514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C58E0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C58E0);
  if (qword_1007B3E58 != -1)
    swift_once(&qword_1007B3E58, sub_1002E9E60);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for SDAirDropAgentClientToken()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary25SDAirDropAgentClientToken);
}

uint64_t sub_10053A91C()
{
  return type metadata accessor for SDAirDropAgentClient(0);
}

uint64_t type metadata accessor for SDAirDropAgentClient(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C5960;
  if (!qword_1007C5960)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropAgentClient);
  return result;
}

uint64_t sub_10053A960(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[7];

  v5[0] = "\b";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = &unk_1005DBEB0;
    v5[3] = (char *)&value witness table for Builtin.Int32 + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      v5[5] = &unk_1005DBEC8;
      v5[6] = (char *)&value witness table for () + 64;
      result = swift_updateClassMetadata2(a1, 256, 7, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_10053AA24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10053AA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  objc_class *ObjectType;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t attributed_bundle_identifier;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int pid;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v44;
  uint64_t v45;
  objc_class *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;

  v51 = a4;
  v49 = a3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v50 = type metadata accessor for Date(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4;
  UUID.init()(v14);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id], v13, v10);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_client] = a1;
  v15 = swift_unknownObjectRetain(a1);
  v16 = nw_agent_client_copy_parameters(v15);
  if (v16)
  {
    v17 = v16;
    type metadata accessor for NWParameters(0);
    v18 = swift_unknownObjectRetain(v17);
    v19 = NWParameters.__allocating_init(_:)(v18);
    v20 = NWParameters.nw.getter(v19);
    attributed_bundle_identifier = nw_parameters_get_attributed_bundle_identifier();
    if (attributed_bundle_identifier)
    {
      v22 = String.init(cString:)(attributed_bundle_identifier);
      v24 = v23;
      v25 = swift_unknownObjectRelease(v20);
    }
    else
    {
      v25 = swift_unknownObjectRelease(v20);
      v22 = 0;
      v24 = 0xE000000000000000;
    }
    v36 = (uint64_t *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    *v36 = v22;
    v36[1] = v24;
    v37 = NWParameters.nw.getter(v25);
    pid = nw_parameters_get_pid();
    swift_release(v19);
    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v37);
  }
  else
  {
    v47 = a2;
    if (qword_1007B42B8 != -1)
      swift_once(&qword_1007B42B8, sub_10053A514);
    v26 = type metadata accessor for Logger(0);
    sub_100221DF8(v26, (uint64_t)qword_1007C58E0);
    v27 = v14;
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = swift_slowAlloc(32, -1);
      v53 = v45;
      v46 = ObjectType;
      *(_DWORD *)v30 = 136315138;
      v44 = v30 + 4;
      v31 = sub_1003BB2C0();
      v32 = dispatch thunk of CustomStringConvertible.description.getter(v10, v31);
      v34 = (const char *)v33;
      v52 = sub_100228BD8(v32, v33, &v53);
      ObjectType = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v44);

      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to parse parameters for agent client %s", v30, 0xCu);
      v35 = v45;
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

    }
    pid = 0;
    v39 = &v27[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    *(_QWORD *)v39 = 0;
    *((_QWORD *)v39 + 1) = 0xE000000000000000;
    a2 = v47;
  }
  *(_DWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid] = pid;
  v40 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_browseResponse];
  v41 = v51;
  *(_QWORD *)v40 = v49;
  *((_QWORD *)v40 + 1) = v41;
  v42 = swift_retain();
  Date.init()(v42);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_startTime], v9, v50);
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly] = j__nw_browse_descriptor_get_discover_application_service_endpoints_only(a2);

  v54.receiver = v14;
  v54.super_class = ObjectType;
  return objc_msgSendSuper2(&v54, "init");
}

uint64_t sub_10053AE08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10053AE18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *_s12FeatureFlagsVMa()
{
  return &_s12FeatureFlagsVN;
}

uint64_t _s13HelloResponseVwCP(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s13HelloResponseVwet(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 4) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 4) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s13HelloResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 2;
  }
  return result;
}

ValueMetadata *_s13HelloResponseVMa()
{
  return &_s13HelloResponseVN;
}

_QWORD *sub_10053AEEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10053AF7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10053AFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10053B014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10053B07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10053B0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10053B144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10053B150);
}

uint64_t sub_10053B150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t sub_10053B1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10053B1E0);
}

uint64_t sub_10053B1E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t _s12HelloRequestVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1007C59C8;
  if (!qword_1007C59C8)
    return swift_getSingletonMetadata(a1, &_s12HelloRequestVMn);
  return result;
}

uint64_t sub_10053B294(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for SFAirDrop.TransferIdentifier(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[2] = &unk_1005DBF30;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10053B314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10053C124();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10053B370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10053C124();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10053B3BC(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;

  v22 = a2;
  v3 = sub_100008384(&qword_1007C5AE0);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008384(&qword_1007C5AE8);
  v6 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C5AF0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_10023A834(a1, v13);
  v15 = sub_10053CF30();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s11ContextTypeO10CodingKeysON, &_s11ContextTypeO10CodingKeysON, v15, v13, v14);
  if ((v22 & 1) != 0)
  {
    v24 = 1;
    v17 = sub_10053CF74();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11ContextTypeO21PeerPaymentCodingKeysON, &v24, v9, &_s11ContextTypeO21PeerPaymentCodingKeysON, v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  }
  else
  {
    v23 = 0;
    v16 = sub_10053CFB8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11ContextTypeO17UnknownCodingKeysON, &v23, v9, &_s11ContextTypeO17UnknownCodingKeysON, v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10053B58C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D79615072656570;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_10053B5D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10053C1B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10053B5F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CF30();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053B61C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CF30();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053B644()
{
  return 0;
}

uint64_t sub_10053B650(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CF74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053B678(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CF74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053B6A0@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_10053B6CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CFB8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053B6F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CFB8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053B71C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10053C2B8(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_10053B748(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_10053B3BC(a1, *v1);
}

uint64_t sub_10053B760(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  int v19;
  char v20;

  v3 = v1;
  v5 = sub_100008384(&qword_1007C5A70);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_10053CB40();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12HelloRequestV10CodingKeysON, &_s12HelloRequestV10CodingKeysON, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v13 = sub_10053CC04(&qword_1007BD7A8, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = _s12HelloRequestVMa(0);
    v19 = *(_DWORD *)(v3 + *(int *)(v14 + 20));
    HIBYTE(v18) = 1;
    v15 = sub_10053CAB8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, (char *)&v18 + 7, v5, &_s12FeatureFlagsVN, v15);
    BYTE6(v18) = *(_BYTE *)(v3 + *(int *)(v14 + 24));
    BYTE5(v18) = 2;
    v16 = sub_10053CAFC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)((char *)&v18 + 6, (char *)&v18 + 5, v5, &_s11ContextTypeON, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10053B908@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;

  v27 = a2;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  __chkstk_darwin(v3);
  v32 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100008384(&qword_1007C5A60);
  v5 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s12HelloRequestVMa(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(int *)(v9 + 24);
  v11[v12] = 2;
  v14 = a1[3];
  v13 = a1[4];
  sub_10023A834(a1, v14);
  v15 = sub_10053CB40();
  v30 = v7;
  v16 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12HelloRequestV10CodingKeysON, &_s12HelloRequestV10CodingKeysON, v15, v14, v13);
  if (v16)
    return sub_10022E75C(a1);
  v33 = v12;
  v17 = v5;
  v18 = v28;
  BYTE2(v36) = 0;
  v19 = sub_10053CC04(&qword_1007BD798, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v20 = v31;
  v22 = v29;
  v21 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v29, (char *)&v36 + 2, v31, v29, v19);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v11, v32, v22);
  BYTE1(v36) = 1;
  v23 = sub_10053CA30();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&_s12FeatureFlagsVN, (char *)&v36 + 1, v20, &_s12FeatureFlagsVN, v23);
  *(_DWORD *)&v11[*(int *)(v8 + 20)] = v34;
  v35 = 2;
  v24 = sub_10053CA74();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v36, &_s11ContextTypeON, &v35, v20, &_s11ContextTypeON, v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v31);
  v11[v33] = v36;
  sub_10053CB84((uint64_t)v11, v27);
  sub_10022E75C(a1);
  return sub_10053CBC8((uint64_t)v11);
}

uint64_t sub_10053BBCC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4665727574616566;
  if (*v0 != 1)
    v1 = 0x54747865746E6F63;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_10053BC2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10053C5E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10053BC50(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10053BC5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CB40();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053BC84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053CB40();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053BCAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053B908(a1, a2);
}

uint64_t sub_10053BCC0(_QWORD *a1)
{
  return sub_10053B760(a1);
}

uint64_t sub_10053BCD4(uint64_t a1)
{
  uint64_t v1;
  Swift::String v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t v8;

  _StringGuts.grow(_:)(16);
  v3._countAndFlagsBits = 0x6572204F4C4C4548;
  v3._object = (void *)0xEE00207473657571;
  String.append(_:)(v3);
  v8 = *(unsigned int *)(v1 + *(int *)(a1 + 20));
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  String.append(_:)(v6);
  return HIDWORD(v8);
}

uint64_t sub_10053BD94(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  int v19;

  v5 = sub_100008384(&qword_1007C5A48);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_10053C9EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s13HelloResponseV10CodingKeysON, &_s13HelloResponseV10CodingKeysON, v11, v9, v10);
  v19 = a2;
  v18 = 0;
  v12 = sub_10053CAB8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, &v18, v5, &_s12FeatureFlagsVN, v12);
  if (!v2)
  {
    v17 = BYTE4(a2);
    v16 = 1;
    v13 = sub_10053CAFC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v17, &v16, v5, &_s11ContextTypeON, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10053BED4()
{
  _BYTE *v0;

  if (*v0)
    return 0x54747865746E6F63;
  else
    return 0x4665727574616566;
}

uint64_t sub_10053BF20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10053C750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10053BF44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053C9EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053BF6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053C9EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053BF94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10053C870(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result);
  }
  return result;
}

uint64_t sub_10053BFC4(_QWORD *a1)
{
  unsigned int *v1;

  return sub_10053BD94(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_10053BFE4()
{
  Swift::String v0;
  Swift::String v1;
  void *object;
  Swift::String v3;

  _StringGuts.grow(_:)(17);
  v0._countAndFlagsBits = 0x6572204F4C4C4548;
  v0._object = (void *)0xEF2065736E6F7073;
  String.append(_:)(v0);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  return 0;
}

unint64_t sub_10053C094()
{
  unint64_t result;

  result = qword_1007C5A08;
  if (!qword_1007C5A08)
  {
    result = swift_getWitnessTable(&unk_1005DC068, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A08);
  }
  return result;
}

unint64_t sub_10053C0DC()
{
  unint64_t result;

  result = qword_1007C5A10;
  if (!qword_1007C5A10)
  {
    result = swift_getWitnessTable(&unk_1005DC038, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A10);
  }
  return result;
}

unint64_t sub_10053C124()
{
  unint64_t result;

  result = qword_1007C5A18;
  if (!qword_1007C5A18)
  {
    result = swift_getWitnessTable(&unk_1005DC090, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A18);
  }
  return result;
}

unint64_t sub_10053C16C()
{
  unint64_t result;

  result = qword_1007C5A20;
  if (!qword_1007C5A20)
  {
    result = swift_getWitnessTable(&unk_1005DC0C8, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A20);
  }
  return result;
}

uint64_t sub_10053C1B0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E776F6E6B6E75, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D79615072656570 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease(0xEB00000000746E65);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D79615072656570, 0xEB00000000746E65, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10053C2B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  char v38;

  v34 = sub_100008384(&qword_1007C5AB0);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100008384(&qword_1007C5AB8);
  v3 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C5AC0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_10023A834(a1, v10);
  v12 = sub_10053CF30();
  v13 = v36;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s11ContextTypeO10CodingKeysON, &_s11ContextTypeO10CodingKeysON, v12, v10, v11);
  if (v13)
    goto LABEL_7;
  v14 = v5;
  v15 = v35;
  v31 = a1;
  v36 = v7;
  v16 = KeyedDecodingContainer.allKeys.getter(v6);
  v17 = (const char *)v16;
  v18 = v6;
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v21 = type metadata accessor for DecodingError(0);
    swift_allocError(v21, &protocol witness table for DecodingError, 0, 0);
    v22 = v9;
    v24 = v23;
    sub_100008384(&qword_1007C12E0);
    *v24 = &_s11ContextTypeON;
    v25 = KeyedDecodingContainer.codingPath.getter(v6);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v25, 0xD00000000000002BLL, 0x800000010061BBE0, 0);
    v26 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow(v26);
    v27 = swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v22, v6, v27);
    a1 = v31;
LABEL_7:
    sub_10022E75C(a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v16 + 32);
  if ((v6 & 1) != 0)
  {
    v38 = 1;
    v19 = sub_10053CF74();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11ContextTypeO21PeerPaymentCodingKeysON, &v38, v18, &_s11ContextTypeO21PeerPaymentCodingKeysON, v19);
    v20 = v36;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v34);
  }
  else
  {
    v37 = 0;
    v28 = sub_10053CFB8();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11ContextTypeO17UnknownCodingKeysON, &v37, v18, &_s11ContextTypeO17UnknownCodingKeysON, v28);
    v20 = v36;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v33);
  }
  v30 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v9, v18, v30);
  sub_10022E75C(v31);
  return v6;
}

uint64_t sub_10053C5E4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL)
  {
    v7 = 0xEC0000007367616CLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4665727574616566, 0xEC0000007367616CLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x54747865746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease(0xEB00000000657079);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54747865746E6F63, 0xEB00000000657079, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10053C750(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL)
  {
    v5 = 0xEC0000007367616CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4665727574616566, 0xEC0000007367616CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x54747865746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease(0xEB00000000657079);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54747865746E6F63, 0xEB00000000657079, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10053C870(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v3 = sub_100008384(&qword_1007C5A28);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10023A834(a1, v7);
  v9 = sub_10053C9EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s13HelloResponseV10CodingKeysON, &_s13HelloResponseV10CodingKeysON, v9, v7, v8);
  if (v1)
    return sub_10022E75C(a1);
  BYTE1(v17) = 0;
  v10 = sub_10053CA30();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&_s12FeatureFlagsVN, (char *)&v17 + 1, v3, &_s12FeatureFlagsVN, v10);
  v11 = *(unsigned int *)((char *)&v17 + 2);
  v16 = 1;
  v12 = sub_10053CA74();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v17, &_s11ContextTypeON, &v16, v3, &_s11ContextTypeON, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v17;
  sub_10022E75C(a1);
  return v11 | (v13 << 32);
}

unint64_t sub_10053C9EC()
{
  unint64_t result;

  result = qword_1007C5A30;
  if (!qword_1007C5A30)
  {
    result = swift_getWitnessTable(&unk_1005DC4D0, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A30);
  }
  return result;
}

unint64_t sub_10053CA30()
{
  unint64_t result;

  result = qword_1007C5A38;
  if (!qword_1007C5A38)
  {
    result = swift_getWitnessTable(&unk_1005DC1B8, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A38);
  }
  return result;
}

unint64_t sub_10053CA74()
{
  unint64_t result;

  result = qword_1007C5A40;
  if (!qword_1007C5A40)
  {
    result = swift_getWitnessTable(&unk_1005DC4A8, &_s11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_1007C5A40);
  }
  return result;
}

unint64_t sub_10053CAB8()
{
  unint64_t result;

  result = qword_1007C5A50;
  if (!qword_1007C5A50)
  {
    result = swift_getWitnessTable(&unk_1005DC190, &_s12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_1007C5A50);
  }
  return result;
}

unint64_t sub_10053CAFC()
{
  unint64_t result;

  result = qword_1007C5A58;
  if (!qword_1007C5A58)
  {
    result = swift_getWitnessTable(&unk_1005DC480, &_s11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_1007C5A58);
  }
  return result;
}

unint64_t sub_10053CB40()
{
  unint64_t result;

  result = qword_1007C5A68;
  if (!qword_1007C5A68)
  {
    result = swift_getWitnessTable(&unk_1005DC430, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A68);
  }
  return result;
}

uint64_t sub_10053CB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12HelloRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053CBC8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s12HelloRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10053CC04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SFAirDrop.TransferIdentifier(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s12HelloRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10053CC90 + 4 * byte_1005DBEF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10053CCC4 + 4 * byte_1005DBEF0[v4]))();
}

uint64_t sub_10053CCC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10053CCCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10053CCD4);
  return result;
}

uint64_t sub_10053CCE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10053CCE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10053CCEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10053CCF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12HelloRequestV10CodingKeysOMa()
{
  return &_s12HelloRequestV10CodingKeysON;
}

ValueMetadata *_s13HelloResponseV10CodingKeysOMa()
{
  return &_s13HelloResponseV10CodingKeysON;
}

ValueMetadata *_s11ContextTypeOMa()
{
  return &_s11ContextTypeON;
}

unint64_t sub_10053CD3C()
{
  unint64_t result;

  result = qword_1007C5A78;
  if (!qword_1007C5A78)
  {
    result = swift_getWitnessTable(&unk_1005DC298, &_s11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_1007C5A78);
  }
  return result;
}

unint64_t sub_10053CD84()
{
  unint64_t result;

  result = qword_1007C5A80;
  if (!qword_1007C5A80)
  {
    result = swift_getWitnessTable(&unk_1005DC350, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A80);
  }
  return result;
}

unint64_t sub_10053CDCC()
{
  unint64_t result;

  result = qword_1007C5A88;
  if (!qword_1007C5A88)
  {
    result = swift_getWitnessTable(&unk_1005DC408, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A88);
  }
  return result;
}

unint64_t sub_10053CE14()
{
  unint64_t result;

  result = qword_1007C5A90;
  if (!qword_1007C5A90)
  {
    result = swift_getWitnessTable(&unk_1005DC378, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A90);
  }
  return result;
}

unint64_t sub_10053CE5C()
{
  unint64_t result;

  result = qword_1007C5A98;
  if (!qword_1007C5A98)
  {
    result = swift_getWitnessTable(&unk_1005DC3A0, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5A98);
  }
  return result;
}

unint64_t sub_10053CEA4()
{
  unint64_t result;

  result = qword_1007C5AA0;
  if (!qword_1007C5AA0)
  {
    result = swift_getWitnessTable(&unk_1005DC2C0, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AA0);
  }
  return result;
}

unint64_t sub_10053CEEC()
{
  unint64_t result;

  result = qword_1007C5AA8;
  if (!qword_1007C5AA8)
  {
    result = swift_getWitnessTable(&unk_1005DC2E8, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AA8);
  }
  return result;
}

unint64_t sub_10053CF30()
{
  unint64_t result;

  result = qword_1007C5AC8;
  if (!qword_1007C5AC8)
  {
    result = swift_getWitnessTable(&unk_1005DC750, &_s11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AC8);
  }
  return result;
}

unint64_t sub_10053CF74()
{
  unint64_t result;

  result = qword_1007C5AD0;
  if (!qword_1007C5AD0)
  {
    result = swift_getWitnessTable(&unk_1005DC700, &_s11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AD0);
  }
  return result;
}

unint64_t sub_10053CFB8()
{
  unint64_t result;

  result = qword_1007C5AD8;
  if (!qword_1007C5AD8)
  {
    result = swift_getWitnessTable(&unk_1005DC6B0, &_s11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AD8);
  }
  return result;
}

uint64_t _s11ContextTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10053D048 + 4 * byte_1005DBEFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10053D07C + 4 * byte_1005DBEFA[v4]))();
}

uint64_t sub_10053D07C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10053D084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10053D08CLL);
  return result;
}

uint64_t sub_10053D098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10053D0A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10053D0A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10053D0AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11ContextTypeO10CodingKeysOMa()
{
  return &_s11ContextTypeO10CodingKeysON;
}

ValueMetadata *_s11ContextTypeO17UnknownCodingKeysOMa()
{
  return &_s11ContextTypeO17UnknownCodingKeysON;
}

ValueMetadata *_s11ContextTypeO21PeerPaymentCodingKeysOMa()
{
  return &_s11ContextTypeO21PeerPaymentCodingKeysON;
}

unint64_t sub_10053D0EC()
{
  unint64_t result;

  result = qword_1007C5AF8;
  if (!qword_1007C5AF8)
  {
    result = swift_getWitnessTable(&unk_1005DC688, &_s11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5AF8);
  }
  return result;
}

unint64_t sub_10053D134()
{
  unint64_t result;

  result = qword_1007C5B00;
  if (!qword_1007C5B00)
  {
    result = swift_getWitnessTable(&unk_1005DC5A8, &_s11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B00);
  }
  return result;
}

unint64_t sub_10053D17C()
{
  unint64_t result;

  result = qword_1007C5B08;
  if (!qword_1007C5B08)
  {
    result = swift_getWitnessTable(&unk_1005DC5D0, &_s11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B08);
  }
  return result;
}

unint64_t sub_10053D1C4()
{
  unint64_t result;

  result = qword_1007C5B10;
  if (!qword_1007C5B10)
  {
    result = swift_getWitnessTable(&unk_1005DC558, &_s11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B10);
  }
  return result;
}

unint64_t sub_10053D20C()
{
  unint64_t result;

  result = qword_1007C5B18;
  if (!qword_1007C5B18)
  {
    result = swift_getWitnessTable(&unk_1005DC580, &_s11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B18);
  }
  return result;
}

unint64_t sub_10053D254()
{
  unint64_t result;

  result = qword_1007C5B20;
  if (!qword_1007C5B20)
  {
    result = swift_getWitnessTable(&unk_1005DC5F8, &_s11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B20);
  }
  return result;
}

unint64_t sub_10053D29C()
{
  unint64_t result;

  result = qword_1007C5B28;
  if (!qword_1007C5B28)
  {
    result = swift_getWitnessTable(&unk_1005DC620, &_s11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007C5B28);
  }
  return result;
}

uint64_t sub_10053D2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest;
  v2 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10022E75C((_QWORD *)(v0
                         + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler));

  v3 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject));
  v5 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_10022E75C((_QWORD *)(v0
                         + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager));
  sub_10000D0F0(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation, &qword_1007C0458);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
  return v0;
}

uint64_t sub_10053D3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053D444(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDropReceive.Transfer.State, (void (*)(void))&SFAirDropReceive.Transfer.state.getter, "Transfer changed status %s -> %s", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(state:), a2);
}

uint64_t sub_10053D420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053D444(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDrop.DisplayPriority, (void (*)(void))&SFAirDropReceive.Transfer.displayPriority.getter, "Transfer changed display priority %s -> %s", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(displayPriority:), a2);
}

uint64_t sub_10053D444@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(void)@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(void);
  char *v50;
  const char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;

  v58 = a6;
  v59 = a5;
  v51 = a4;
  v49 = a3;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v50 = (char *)&v46 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - v14;
  v16 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v46 - v22;
  v55 = *(_QWORD *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter(v21);
  v24 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v52 = v23;
  v56 = v16;
  v24(v20, v23, v16);
  v53 = v9;
  v54 = v15;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v57 = a1;
  v26 = v25(v15, a1, v8);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(64, -1);
    v61 = v47;
    *(_DWORD *)v29 = 136315394;
    v30 = v50;
    v46 = v27;
    v49();
    v31 = v48;
    v25(v48, (uint64_t)v30, v8);
    v32 = String.init<A>(describing:)(v31, v8);
    v34 = v33;
    v53 = *(_QWORD *)(v53 + 8);
    ((void (*)(char *, uint64_t))v53)(v30, v8);
    v60 = sub_100228BD8(v32, v34, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v29 + 4);
    swift_bridgeObjectRelease(v34);
    v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    v36 = v56;
    v35(v20, v56);
    *(_WORD *)(v29 + 12) = 2080;
    v37 = v54;
    v25(v30, (uint64_t)v54, v8);
    v38 = String.init<A>(describing:)(v30, v8);
    v40 = v39;
    v60 = sub_100228BD8(v38, v39, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v29 + 14);
    swift_bridgeObjectRelease(v40);
    ((void (*)(char *, uint64_t))v53)(v37, v8);
    v41 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, v28, v51, (uint8_t *)v29, 0x16u);
    v42 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    v36 = v56;
    v35(v20, v56);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v8);
  }
  v43 = v58;
  v44 = v52;
  v59(v57);
  CurrentValueSubject.send(_:)(v43);
  return ((uint64_t (*)(char *, uint64_t))v35)(v44, v36);
}

uint64_t sub_10053D7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053DB74(a1, "Transfer changed cancel action", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(cancelAction:), a2);
}

uint64_t sub_10053D7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  os_log_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a2;
  v46 = sub_100008384(&qword_1007C5E70);
  v4 = __chkstk_darwin(v46);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v41 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v41 - v10;
  v12 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v41 - v18;
  v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter(v17);
  v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v50 = v12;
  v20(v16, v19, v12);
  v48 = a1;
  v21 = sub_100221F28(a1, (uint64_t)v11, &qword_1007C5E70);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc(22, -1);
    v43 = v22;
    v26 = v25;
    v27 = swift_slowAlloc(64, -1);
    v45 = v27;
    v52 = v27;
    *(_DWORD *)v26 = 136315394;
    v42 = v26 + 4;
    v44 = v24;
    SFAirDropReceive.Transfer.activeInterfaceType.getter(v27);
    sub_100221F28((uint64_t)v9, (uint64_t)v6, &qword_1007C5E70);
    v28 = v46;
    v29 = String.init<A>(describing:)(v6, v46);
    v31 = v30;
    sub_10000D0F0((uint64_t)v9, &qword_1007C5E70);
    v51 = sub_100228BD8(v29, (unint64_t)v31, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v42);
    v32 = swift_bridgeObjectRelease(v31);
    v33 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v33(v16, v50, v32);
    *(_WORD *)(v26 + 12) = 2080;
    sub_100221F28((uint64_t)v11, (uint64_t)v9, &qword_1007C5E70);
    v34 = String.init<A>(describing:)(v9, v28);
    v36 = (const char *)v35;
    v51 = sub_100228BD8(v34, v35, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v26 + 14);
    swift_bridgeObjectRelease(v36);
    sub_10000D0F0((uint64_t)v11, &qword_1007C5E70);
    v37 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v44, "Transfer changed active interface type %s -> %s", (uint8_t *)v26, 0x16u);
    v38 = v45;
    swift_arrayDestroy(v45, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    v33 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    ((void (*)(char *, uint64_t))v33)(v16, v50);
    sub_10000D0F0((uint64_t)v11, &qword_1007C5E70);
  }
  v39 = v49;
  SFAirDropReceive.Transfer.update(activeInterfaceType:)(v48);
  CurrentValueSubject.send(_:)(v39);
  return ((uint64_t (*)(char *, uint64_t))v33)(v19, v50);
}

uint64_t sub_10053DB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053DB74(a1, "Transfer changed ask response", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(askResponse:), a2);
}

uint64_t sub_10053DB74@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint8_t *v18;
  uint64_t v20;

  v8 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = CurrentValueSubject.value.getter(v10);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    v17 = a2;
    v18 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  a3(a1);
  CurrentValueSubject.send(_:)(a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_10053DCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3[115] = v2;
  v3[114] = a2;
  v3[113] = a1;
  v4 = type metadata accessor for ContinuousClock(0);
  v3[116] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[117] = v5;
  v3[118] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v3[119] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[120] = v7;
  v3[121] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007C5E40);
  v3[122] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[123] = swift_task_alloc(v9);
  v3[124] = swift_task_alloc(v9);
  v10 = sub_100008384(&qword_1007B6BD0);
  v3[125] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[126] = swift_task_alloc(v11);
  v3[127] = swift_task_alloc(v11);
  v12 = type metadata accessor for Date(0);
  v3[128] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[129] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[130] = swift_task_alloc(v14);
  v3[131] = swift_task_alloc(v14);
  v15 = type metadata accessor for SFAirDrop.TransferType(0);
  v3[132] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[133] = v16;
  v3[134] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[135] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v3[136] = v18;
  v3[137] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[138] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v3[139] = v20;
  v3[140] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v21 = static AirDropActor.shared;
  v3[141] = static AirDropActor.shared;
  return swift_task_switch(sub_10053DE98, v21, 0);
}

uint64_t sub_10053DE98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  const char *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = *(_QWORD *)(v1 + 1120);
  v3 = *(_QWORD *)(v1 + 1112);
  v4 = *(_QWORD *)(v1 + 1104);
  v5 = *(_QWORD *)(v1 + 1096);
  v6 = *(_QWORD *)(v1 + 1088);
  v7 = *(_QWORD *)(v1 + 1080);
  v8 = *(_QWORD *)(v1 + 1072);
  v9 = *(_QWORD *)(v1 + 1064);
  v50 = *(_QWORD *)(v1 + 1056);
  *(_QWORD *)(v1 + 1136) = *(_QWORD *)(*(_QWORD *)(v1 + 920)
                                     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v1 + 1144) = v11;
  v12 = v11(v2, v4);
  SFAirDropReceive.AskRequest.type.getter(v12);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v1 + 1152) = v13;
  v14 = v13(v5, v7);
  v15 = SFAirDrop.TransferType.isFiles.getter(v14);
  v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v1 + 1160) = v16;
  v16(v8, v50);
  if ((v15 & 1) == 0)
    goto LABEL_6;
  v17 = *(_QWORD *)(v1 + 920);
  v18 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(_QWORD *)(v1 + 1168) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  v19 = v17 + v18;
  swift_beginAccess(v17 + v18, v1 + 600, 0, 0);
  sub_100244418(v19, v1 + 216);
  v20 = sub_100008384(&qword_1007C5E20);
  *(_QWORD *)(v1 + 1176) = v20;
  v21 = sub_100008384(&qword_1007C5E28);
  if ((swift_dynamicCast(v1 + 296, v1 + 216, v20, v21, 6) & 1) == 0)
  {
    *(_QWORD *)(v1 + 328) = 0;
    *(_OWORD *)(v1 + 296) = 0u;
    *(_OWORD *)(v1 + 312) = 0u;
    sub_10000D0F0(v1 + 296, (uint64_t *)&unk_1007C5E30);
LABEL_6:
    v36 = *(_QWORD *)(v1 + 1120);
    v51 = *(_QWORD *)(v1 + 1104);
    v37 = *(_QWORD *)(v1 + 968);
    v38 = *(_QWORD *)(v1 + 960);
    v39 = *(_QWORD *)(v1 + 952);
    v40 = *(_QWORD *)(v1 + 912);
    v41 = *(const char **)(v1 + 904);
    v42 = sub_100008384(&qword_1007B5288);
    v43 = *(int *)(v42 + 48);
    v49 = (void (*)(uint64_t, uint64_t))v11;
    v44 = *(int *)(v42 + 64);
    v45 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v37, v40, v45);
    *(_QWORD *)(v37 + v43) = v41;
    *(_QWORD *)(v37 + v44) = 0x3FF0000000000000;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v37, enum case for SFAirDropReceive.Transfer.State.importing(_:), v39);
    swift_bridgeObjectRetain(v41);
    sub_10053D3FC(v37, v36);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    v49(v36, v51);
    v46 = static AirDropActor.shared;
    *(_QWORD *)(v1 + 1208) = static AirDropActor.shared;
    return swift_task_switch(sub_10053E74C, v46, 0);
  }
  v22 = *(_QWORD *)(v1 + 904);
  sub_10000D0F0(v1 + 296, (uint64_t *)&unk_1007C5E30);
  *(_QWORD *)(v1 + 1184) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v23 = swift_bridgeObjectRetain_n(v22, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  v26 = os_log_type_enabled(v24, v25);
  v27 = *(const char **)(v1 + 904);
  if (v26)
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v52 = v29;
    *(_DWORD *)v28 = 136315138;
    v30 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v27);
    v32 = Array.description.getter(v31, v30);
    v34 = v33;
    swift_bridgeObjectRelease(v27);
    *(_QWORD *)(v1 + 896) = sub_100228BD8(v32, (unint64_t)v34, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 896, v1 + 904, v28 + 4);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease_n(v27, 2);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Importing START: {urls: %s}", v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

    v35 = swift_bridgeObjectRelease_n(v27, 2);
  }
  static Date.now.getter(v35);
  sub_100244418(v19, v1 + 336);
  v48 = (_QWORD *)swift_task_alloc(dword_1007C5B8C);
  *(_QWORD *)(v1 + 1192) = v48;
  *v48 = v1;
  v48[1] = sub_10053E2D4;
  return sub_100540ED4(*(_QWORD *)(v1 + 904), v1 + 336, *(_QWORD *)(v1 + 912));
}

uint64_t sub_10053E2D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (_QWORD *)*v2;
  v4 = (_QWORD *)(*v2 + 336);
  v3[87] = v2;
  v3[88] = a1;
  v3[89] = v1;
  v5 = v3[149];
  v3[150] = v1;
  swift_task_dealloc(v5);
  v6 = v3[141];
  sub_10022E75C(v4);
  if (v1)
    v7 = sub_10053ECFC;
  else
    v7 = sub_10053E35C;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10053E35C()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;

  v1 = *(const char **)(v0 + 704);
  v2 = *(_QWORD *)(v0 + 1048);
  v3 = *(_QWORD *)(v0 + 1040);
  swift_bridgeObjectRetain(v1);
  *(_QWORD *)&v5 = sub_1005439C0(v4).n128_u64[0];
  v52 = v1;
  swift_bridgeObjectRelease(v1, v5);
  static Date.now.getter(v6);
  sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v2, v3);
  if ((result & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 1040);
    v9 = *(_QWORD **)(v0 + 1032);
    v10 = *(_QWORD *)(v0 + 1024);
    v46 = *(_QWORD *)(v0 + 1008);
    v47 = *(_QWORD *)(v0 + 1000);
    v48 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 992);
    v12 = *(_QWORD *)(v0 + 984);
    v13 = *(_QWORD *)(v0 + 976);
    v14 = v11 + *(int *)(v13 + 48);
    v15 = (void (*)(uint64_t, uint64_t, uint64_t))v9[2];
    v15(v11, *(_QWORD *)(v0 + 1048), v10);
    v16 = (void (*)(uint64_t, uint64_t, uint64_t))v9[4];
    v16(v14, v8, v10);
    v17 = v12 + *(int *)(v13 + 48);
    v15(v12, v11, v10);
    v15(v17, v14, v10);
    v16(v46, v12, v10);
    v18 = (void (*)(uint64_t, uint64_t))v9[1];
    v18(v17, v10);
    v19 = v12 + *(int *)(v13 + 48);
    v16(v12, v11, v10);
    v16(v19, v14, v10);
    v16(v46 + *(int *)(v47 + 36), v19, v10);
    v18(v12, v10);
    v20 = sub_1002785E0(v46, v48);
    v21 = ClosedRange<>.interval.getter(v20);
    sub_10000D0F0(v48, &qword_1007B6BD0);
    v22 = swift_bridgeObjectRetain_n(v52, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 1048);
    v27 = *(_QWORD *)(v0 + 1024);
    if (v25)
    {
      v50 = *(_QWORD *)(v0 + 1048);
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v53 = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v52);
      v32 = Array.description.getter(v31, v30);
      v49 = v27;
      v34 = v33;
      swift_bridgeObjectRelease(v52);
      *(_QWORD *)(v0 + 832) = sub_100228BD8(v32, (unint64_t)v34, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 832, v0 + 840, v28 + 4);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease_n(v52, 2);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Importing END {importedURLs: %s}", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      v36 = v49;
      v35 = v50;
    }
    else
    {
      swift_bridgeObjectRelease_n(v52, 2);

      v35 = v26;
      v36 = v27;
    }
    v18(v35, v36);
    v37 = *(_QWORD *)(v0 + 1096);
    v38 = *(_QWORD *)(v0 + 1072);
    v39 = *(_QWORD *)(v0 + 1048);
    v40 = *(_QWORD *)(v0 + 1040);
    v41 = *(_QWORD *)(v0 + 1016);
    v42 = *(_QWORD *)(v0 + 1008);
    v43 = *(_QWORD *)(v0 + 992);
    v44 = *(_QWORD *)(v0 + 984);
    v45 = *(_QWORD *)(v0 + 968);
    v51 = *(_QWORD *)(v0 + 944);
    swift_task_dealloc(*(_QWORD *)(v0 + 1120));
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v52, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053E74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(0.4);
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 1216) = v4;
  *v4 = v0;
  v4[1] = sub_10053E7E4;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_10053E7E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1216);
  *(_QWORD *)(*(_QWORD *)v1 + 1224) = v0;
  swift_task_dealloc(v3);
  v4 = v2[118];
  v5 = v2[116];
  v6 = *(void (**)(uint64_t, uint64_t))(v2[117] + 8);
  if (v0)
  {
    v7 = v2[151];
    v6(v4, v5);
    v8 = sub_10053E868;
  }
  else
  {
    v7 = v2[141];
    v6(v4, v5);
    v8 = sub_10053E93C;
  }
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_10053E868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 1096);
  v2 = *(_QWORD *)(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1048);
  v4 = *(_QWORD *)(v0 + 1040);
  v5 = *(_QWORD *)(v0 + 1016);
  v6 = *(_QWORD *)(v0 + 1008);
  v7 = *(_QWORD *)(v0 + 992);
  v8 = *(_QWORD *)(v0 + 984);
  v9 = *(_QWORD *)(v0 + 968);
  v11 = *(_QWORD *)(v0 + 944);
  swift_task_dealloc(*(_QWORD *)(v0 + 1120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053E93C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t DynamicType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v47;

  v1 = swift_retain_n(*(_QWORD *)(v0 + 920), 4);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1160);
    v38 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
    log = v2;
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1144);
    type = v3;
    v5 = *(_QWORD *)(v0 + 1120);
    v6 = *(_QWORD *)(v0 + 1104);
    v7 = *(_QWORD *)(v0 + 1096);
    v8 = *(_QWORD *)(v0 + 1080);
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1056);
    v40 = *(_QWORD *)(v0 + 920);
    v11 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v47 = v41;
    *(_DWORD *)v11 = 136315394;
    v12 = CurrentValueSubject.value.getter(v41);
    SFAirDropReceive.Transfer.askRequest.getter(v12);
    v13 = v4(v5, v6);
    SFAirDropReceive.AskRequest.type.getter(v13);
    v38(v7, v8);
    v14 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v10, v14);
    v17 = v16;
    v39(v9, v10);
    *(_QWORD *)(v0 + 872) = sub_100228BD8(v15, (unint64_t)v17, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 872, v0 + 880, v11 + 4);
    swift_bridgeObjectRelease(v17);
    swift_release_n(v40, 2);
    *(_WORD *)(v11 + 12) = 2080;
    v18 = v40 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v40 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler, v0 + 648, 0, 0);
    sub_100244418(v18, v0 + 56);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = sub_10023A834((_QWORD *)(v0 + 56), v19);
    DynamicType = swift_getDynamicType(v20, v19, 1);
    v22 = *(_QWORD *)(v0 + 88);
    sub_10022E75C((_QWORD *)(v0 + 56));
    *(_QWORD *)(v0 + 792) = DynamicType;
    *(_QWORD *)(v0 + 800) = v22;
    v23 = sub_100008384(&qword_1007B6C08);
    v24 = String.init<A>(describing:)(v0 + 792, v23);
    v26 = (const char *)v25;
    *(_QWORD *)(v0 + 864) = sub_100228BD8(v24, v25, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 864, v0 + 872, v11 + 14);
    swift_bridgeObjectRelease(v26);
    swift_release_n(v40, 2);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Importing SKIP. {type: %s, handler: %s}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {
    v27 = *(_QWORD *)(v0 + 920);

    swift_release_n(v27, 4);
  }
  v28 = *(const char **)(v0 + 904);
  v29 = *(_QWORD *)(v0 + 1120);
  v30 = *(_QWORD *)(v0 + 1096);
  v31 = *(_QWORD *)(v0 + 1072);
  v32 = *(_QWORD *)(v0 + 1048);
  v33 = *(_QWORD *)(v0 + 1040);
  v34 = *(_QWORD *)(v0 + 1016);
  v35 = *(_QWORD *)(v0 + 1008);
  v36 = *(_QWORD *)(v0 + 992);
  v42 = *(_QWORD *)(v0 + 984);
  loga = *(os_log_t *)(v0 + 968);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 944);
  swift_bridgeObjectRetain(v28, v38);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v42);
  swift_task_dealloc(loga);
  swift_task_dealloc(*(_QWORD *)typea);
  return (*(uint64_t (**)(const char *, double))(v0 + 8))(v28, 0.0);
}

uint64_t sub_10053ECFC()
{
  uint64_t *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t **v13;

  v1 = (void (*)(uint64_t, uint64_t))v0[143];
  v2 = v0[140];
  v3 = v0[138];
  v4 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  v0[154] = v4;
  v5 = swift_allocObject(v4, 25, 7);
  v0[155] = v5;
  *(_QWORD *)(v5 + 16) = 0;
  *(_BYTE *)(v5 + 24) = 0;
  v6 = type metadata accessor for SDAirDropContentHandleriCloudDrive(0);
  v0[156] = v6;
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[157] = v7;
  v8 = v7 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  v0[158] = v10;
  v11 = swift_allocObject(v10, 32, 7);
  v0[159] = v11;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0xE000000000000000;
  v12 = CurrentValueSubject.value.getter(v11);
  SFAirDropReceive.Transfer.askRequest.getter(v12);
  v1(v2, v3);
  v13 = (uint64_t **)swift_task_alloc(dword_1007BBC1C);
  v0[160] = (uint64_t)v13;
  *v13 = v0;
  v13[1] = (uint64_t *)sub_10053EE30;
  return sub_100352BB0(v0[137]);
}

uint64_t sub_10053EE30(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1280);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 1152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 1096);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 1080);
  *(_BYTE *)(*(_QWORD *)v1 + 1352) = a1;
  swift_task_dealloc(v2);
  v3(v5, v6);
  return swift_task_switch(sub_10053EEB0, v4, 0);
}

uint64_t sub_10053EEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  if (*(_BYTE *)(v1 + 1352) != 1)
    goto LABEL_4;
  v2 = *(_QWORD *)(v1 + 1232);
  v3 = *(_QWORD *)(v1 + 1176);
  sub_100244418(*(_QWORD *)(v1 + 920) + *(_QWORD *)(v1 + 1168), v1 + 256);
  if (swift_dynamicCast(v1 + 840, v1 + 256, v3, v2, 6))
  {
    a1 = swift_release(*(_QWORD *)(v1 + 840));
LABEL_4:
    v4 = *(void (**)(uint64_t, uint64_t))(v1 + 1144);
    v5 = *(_QWORD *)(v1 + 1120);
    v6 = *(_QWORD *)(v1 + 1104);
    v7 = CurrentValueSubject.value.getter(a1);
    SFAirDropReceive.Transfer.askRequest.getter(v7);
    v4(v5, v6);
    v8 = (_QWORD *)swift_task_alloc(dword_1007BB3F4);
    *(_QWORD *)(v1 + 1304) = v8;
    *v8 = v1;
    v8[1] = sub_10053F660;
    return sub_100340F24(*(_QWORD *)(v1 + 1096));
  }
  v10 = *(_QWORD *)(v1 + 1200);
  swift_errorRetain(v10);
  v11 = swift_errorRetain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v1 + 1200);
  if (v14)
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v16 = 138412290;
    swift_errorRetain(v15);
    v18 = _swift_stdlib_bridgeErrorToNSError(v15);
    *(_QWORD *)(v1 + 888) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 888, v1 + 896, v16 + 4);
    *v17 = v18;
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Import failed with error: {%@}. Switching handler to generic files handler and retrying...", v16, 0xCu);
    v19 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v17, 1, v19);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_errorRelease(v15);
    swift_errorRelease(v15);
  }
  v20 = *(_QWORD *)(v1 + 1240);
  v21 = (_QWORD *)(*(_QWORD *)(v1 + 920) + *(_QWORD *)(v1 + 1168));
  *(_QWORD *)(v1 + 520) = *(_QWORD *)(v1 + 1232);
  *(_QWORD *)(v1 + 528) = &off_100723828;
  *(_QWORD *)(v1 + 496) = v20;
  sub_10026EE60((__int128 *)(v1 + 496), v1 + 376);
  swift_beginAccess(v21, v1 + 624, 33, 0);
  swift_retain(v20);
  sub_10022E75C(v21);
  sub_10026EE60((__int128 *)(v1 + 376), (uint64_t)v21);
  swift_endAccess(v1 + 624);
  sub_100244418((uint64_t)v21, v1 + 16);
  v22 = (_QWORD *)swift_task_alloc(dword_1007C5B8C);
  *(_QWORD *)(v1 + 1288) = v22;
  *v22 = v1;
  v22[1] = sub_10053F1BC;
  return sub_100540ED4(*(_QWORD *)(v1 + 904), v1 + 16, *(_QWORD *)(v1 + 912));
}

uint64_t sub_10053F1BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (_QWORD *)*v2;
  v4 = (_QWORD *)(*v2 + 16);
  v3[90] = v2;
  v3[91] = a1;
  v3[92] = v1;
  v5 = v3[161];
  v3[162] = v1;
  swift_task_dealloc(v5);
  v6 = v3[141];
  sub_10022E75C(v4);
  if (v1)
    v7 = sub_10054079C;
  else
    v7 = sub_10053F244;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10053F244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 1272);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 1240);
  swift_errorRelease(*(_QWORD *)(v0 + 1200));
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  v4 = *(const char **)(v0 + 728);
  v5 = *(_QWORD *)(v0 + 1048);
  v6 = *(_QWORD *)(v0 + 1040);
  swift_bridgeObjectRetain(v4);
  *(_QWORD *)&v8 = sub_1005439C0(v7).n128_u64[0];
  v55 = v4;
  swift_bridgeObjectRelease(v4, v8);
  static Date.now.getter(v9);
  sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v5, v6);
  if ((result & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 1040);
    v12 = *(_QWORD **)(v0 + 1032);
    v13 = *(_QWORD *)(v0 + 1024);
    v49 = *(_QWORD *)(v0 + 1008);
    v50 = *(_QWORD *)(v0 + 1000);
    v51 = *(_QWORD *)(v0 + 1016);
    v14 = *(_QWORD *)(v0 + 992);
    v15 = *(_QWORD *)(v0 + 984);
    v16 = *(_QWORD *)(v0 + 976);
    v17 = v14 + *(int *)(v16 + 48);
    v18 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
    v18(v14, *(_QWORD *)(v0 + 1048), v13);
    v19 = (void (*)(uint64_t, uint64_t, uint64_t))v12[4];
    v19(v17, v11, v13);
    v20 = v15 + *(int *)(v16 + 48);
    v18(v15, v14, v13);
    v18(v20, v17, v13);
    v19(v49, v15, v13);
    v21 = (void (*)(uint64_t, uint64_t))v12[1];
    v21(v20, v13);
    v22 = v15 + *(int *)(v16 + 48);
    v19(v15, v14, v13);
    v19(v22, v17, v13);
    v19(v49 + *(int *)(v50 + 36), v22, v13);
    v21(v15, v13);
    v23 = sub_1002785E0(v49, v51);
    v24 = ClosedRange<>.interval.getter(v23);
    sub_10000D0F0(v51, &qword_1007B6BD0);
    v25 = swift_bridgeObjectRetain_n(v55, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 1048);
    v30 = *(_QWORD *)(v0 + 1024);
    if (v28)
    {
      v53 = *(_QWORD *)(v0 + 1048);
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v56 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v55);
      v35 = Array.description.getter(v34, v33);
      v52 = v30;
      v37 = v36;
      swift_bridgeObjectRelease(v55);
      *(_QWORD *)(v0 + 832) = sub_100228BD8(v35, (unint64_t)v37, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 832, v0 + 840, v31 + 4);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease_n(v55, 2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Importing END {importedURLs: %s}", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v39 = v52;
      v38 = v53;
    }
    else
    {
      swift_bridgeObjectRelease_n(v55, 2);

      v38 = v29;
      v39 = v30;
    }
    v21(v38, v39);
    v40 = *(_QWORD *)(v0 + 1096);
    v41 = *(_QWORD *)(v0 + 1072);
    v42 = *(_QWORD *)(v0 + 1048);
    v43 = *(_QWORD *)(v0 + 1040);
    v44 = *(_QWORD *)(v0 + 1016);
    v45 = *(_QWORD *)(v0 + 1008);
    v46 = *(_QWORD *)(v0 + 992);
    v47 = *(_QWORD *)(v0 + 984);
    v48 = *(_QWORD *)(v0 + 968);
    v54 = *(_QWORD *)(v0 + 944);
    swift_task_dealloc(*(_QWORD *)(v0 + 1120));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v54);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v55, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053F660(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1304);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 1152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 1096);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 1080);
  *(_BYTE *)(*(_QWORD *)v1 + 1353) = a1;
  swift_task_dealloc(v2);
  v3(v5, v6);
  return swift_task_switch(sub_10053F6E0, v4, 0);
}

uint64_t sub_10053F6E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  if (*(_BYTE *)(v1 + 1353) == 1)
  {
    v2 = *(_QWORD *)(v1 + 1200);
    swift_errorRetain(v2);
    v3 = swift_errorRetain(v2);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v1 + 1200);
    if (v6)
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      swift_errorRetain(v7);
      v10 = _swift_stdlib_bridgeErrorToNSError(v7);
      *(_QWORD *)(v1 + 824) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 824, v1 + 832, v8 + 4);
      *v9 = v10;
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Import failed with error: {%@}. Switching handler to iCloud Drive handler and retrying...", v8, 0xCu);
      v11 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_errorRelease(v7);
      swift_errorRelease(v7);
    }
    v18 = *(_QWORD *)(v1 + 1256);
    v19 = (_QWORD *)(*(_QWORD *)(v1 + 920) + *(_QWORD *)(v1 + 1168));
    *(_QWORD *)(v1 + 160) = *(_QWORD *)(v1 + 1248);
    *(_QWORD *)(v1 + 168) = &off_100723240;
    *(_QWORD *)(v1 + 136) = v18;
    sub_10026EE60((__int128 *)(v1 + 136), v1 + 96);
    swift_beginAccess(v19, v1 + 672, 33, 0);
    swift_retain(v18);
    sub_10022E75C(v19);
    sub_10026EE60((__int128 *)(v1 + 96), (uint64_t)v19);
    swift_endAccess(v1 + 672);
    sub_100244418((uint64_t)v19, v1 + 176);
    v20 = (_QWORD *)swift_task_alloc(dword_1007C5B8C);
    *(_QWORD *)(v1 + 1312) = v20;
    *v20 = v1;
    v20[1] = sub_10053F9A0;
    return sub_100540ED4(*(_QWORD *)(v1 + 904), v1 + 176, *(_QWORD *)(v1 + 912));
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v1 + 1144);
    v13 = *(_QWORD *)(v1 + 1120);
    v14 = *(_QWORD *)(v1 + 1104);
    v15 = CurrentValueSubject.value.getter(a1);
    SFAirDropReceive.Transfer.askRequest.getter(v15);
    v12(v13, v14);
    v16 = (_QWORD *)swift_task_alloc(dword_1007BE024);
    *(_QWORD *)(v1 + 1328) = v16;
    *v16 = v1;
    v16[1] = sub_10053FE44;
    return sub_1003B8BD4(*(_QWORD *)(v1 + 1096));
  }
}

uint64_t sub_10053F9A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (_QWORD *)*v2;
  v4 = (_QWORD *)(*v2 + 176);
  v3[93] = v2;
  v3[94] = a1;
  v3[95] = v1;
  v5 = v3[164];
  v3[165] = v1;
  swift_task_dealloc(v5);
  v6 = v3[141];
  sub_10022E75C(v4);
  if (v1)
    v7 = sub_100540A04;
  else
    v7 = sub_10053FA28;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10053FA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 1272);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 1240);
  swift_errorRelease(*(_QWORD *)(v0 + 1200));
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  v4 = *(const char **)(v0 + 752);
  v5 = *(_QWORD *)(v0 + 1048);
  v6 = *(_QWORD *)(v0 + 1040);
  swift_bridgeObjectRetain(v4);
  *(_QWORD *)&v8 = sub_1005439C0(v7).n128_u64[0];
  v55 = v4;
  swift_bridgeObjectRelease(v4, v8);
  static Date.now.getter(v9);
  sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v5, v6);
  if ((result & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 1040);
    v12 = *(_QWORD **)(v0 + 1032);
    v13 = *(_QWORD *)(v0 + 1024);
    v49 = *(_QWORD *)(v0 + 1008);
    v50 = *(_QWORD *)(v0 + 1000);
    v51 = *(_QWORD *)(v0 + 1016);
    v14 = *(_QWORD *)(v0 + 992);
    v15 = *(_QWORD *)(v0 + 984);
    v16 = *(_QWORD *)(v0 + 976);
    v17 = v14 + *(int *)(v16 + 48);
    v18 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
    v18(v14, *(_QWORD *)(v0 + 1048), v13);
    v19 = (void (*)(uint64_t, uint64_t, uint64_t))v12[4];
    v19(v17, v11, v13);
    v20 = v15 + *(int *)(v16 + 48);
    v18(v15, v14, v13);
    v18(v20, v17, v13);
    v19(v49, v15, v13);
    v21 = (void (*)(uint64_t, uint64_t))v12[1];
    v21(v20, v13);
    v22 = v15 + *(int *)(v16 + 48);
    v19(v15, v14, v13);
    v19(v22, v17, v13);
    v19(v49 + *(int *)(v50 + 36), v22, v13);
    v21(v15, v13);
    v23 = sub_1002785E0(v49, v51);
    v24 = ClosedRange<>.interval.getter(v23);
    sub_10000D0F0(v51, &qword_1007B6BD0);
    v25 = swift_bridgeObjectRetain_n(v55, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 1048);
    v30 = *(_QWORD *)(v0 + 1024);
    if (v28)
    {
      v53 = *(_QWORD *)(v0 + 1048);
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v56 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v55);
      v35 = Array.description.getter(v34, v33);
      v52 = v30;
      v37 = v36;
      swift_bridgeObjectRelease(v55);
      *(_QWORD *)(v0 + 832) = sub_100228BD8(v35, (unint64_t)v37, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 832, v0 + 840, v31 + 4);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease_n(v55, 2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Importing END {importedURLs: %s}", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v39 = v52;
      v38 = v53;
    }
    else
    {
      swift_bridgeObjectRelease_n(v55, 2);

      v38 = v29;
      v39 = v30;
    }
    v21(v38, v39);
    v40 = *(_QWORD *)(v0 + 1096);
    v41 = *(_QWORD *)(v0 + 1072);
    v42 = *(_QWORD *)(v0 + 1048);
    v43 = *(_QWORD *)(v0 + 1040);
    v44 = *(_QWORD *)(v0 + 1016);
    v45 = *(_QWORD *)(v0 + 1008);
    v46 = *(_QWORD *)(v0 + 992);
    v47 = *(_QWORD *)(v0 + 984);
    v48 = *(_QWORD *)(v0 + 968);
    v54 = *(_QWORD *)(v0 + 944);
    swift_task_dealloc(*(_QWORD *)(v0 + 1120));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v54);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v55, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053FE44(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1328);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 1152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 1096);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 1080);
  *(_BYTE *)(*(_QWORD *)v1 + 1354) = a1;
  swift_task_dealloc(v2);
  v3(v5, v6);
  return swift_task_switch(sub_10053FEC4, v4, 0);
}

uint64_t sub_10053FEC4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(unsigned __int8 *)(v0 + 1354);
  v2 = *(_QWORD *)(v0 + 1200);
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 1200);
  if (v1 == 1)
  {
    if (v6)
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      swift_errorRetain(v7);
      v10 = _swift_stdlib_bridgeErrorToNSError(v7);
      *(_QWORD *)(v0 + 808) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 808, v0 + 816, v8 + 4);
      *v9 = v10;
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Import failed with error: {%@}. Switching handler to unsupported file type handler and retrying...", v8, 0xCu);
      v11 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_errorRelease(v7);
      swift_errorRelease(v7);
    }
    v17 = *(_QWORD *)(v0 + 1272);
    v18 = (_QWORD *)(*(_QWORD *)(v0 + 920) + *(_QWORD *)(v0 + 1168));
    *(_QWORD *)(v0 + 440) = *(_QWORD *)(v0 + 1264);
    *(_QWORD *)(v0 + 448) = &off_100726060;
    *(_QWORD *)(v0 + 416) = v17;
    sub_10026EE60((__int128 *)(v0 + 416), v0 + 456);
    swift_beginAccess(v18, v0 + 576, 33, 0);
    swift_retain(v17);
    sub_10022E75C(v18);
    sub_10026EE60((__int128 *)(v0 + 456), (uint64_t)v18);
    swift_endAccess(v0 + 576);
    sub_100244418((uint64_t)v18, v0 + 536);
    v19 = (_QWORD *)swift_task_alloc(dword_1007C5B8C);
    *(_QWORD *)(v0 + 1336) = v19;
    *v19 = v0;
    v19[1] = sub_1005402F8;
    return sub_100540ED4(*(_QWORD *)(v0 + 904), v0 + 536, *(_QWORD *)(v0 + 912));
  }
  else
  {
    if (v6)
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 138412290;
      swift_errorRetain(v7);
      v14 = _swift_stdlib_bridgeErrorToNSError(v7);
      *(_QWORD *)(v0 + 856) = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 856, v0 + 864, v12 + 4);
      *v13 = v14;
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Importing END - Failure {%@}", v12, 0xCu);
      v15 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v13, 1, v15);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_errorRelease(v7);
      v16 = swift_errorRelease(v7);
    }
    v21 = *(_QWORD *)(v0 + 1272);
    v22 = *(_QWORD *)(v0 + 1256);
    v23 = *(_QWORD *)(v0 + 1240);
    v24 = *(_QWORD *)(v0 + 1048);
    v25 = *(_QWORD *)(v0 + 1032);
    v26 = *(_QWORD *)(v0 + 1024);
    swift_willThrow(v16);
    swift_release(v23);
    swift_release(v22);
    swift_release(v21);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    v27 = *(_QWORD *)(v0 + 1096);
    v28 = *(_QWORD *)(v0 + 1072);
    v29 = *(_QWORD *)(v0 + 1048);
    v30 = *(_QWORD *)(v0 + 1040);
    v31 = *(_QWORD *)(v0 + 1016);
    v32 = *(_QWORD *)(v0 + 1008);
    v33 = *(_QWORD *)(v0 + 992);
    v34 = *(_QWORD *)(v0 + 984);
    v35 = *(_QWORD *)(v0 + 968);
    v36 = *(_QWORD *)(v0 + 944);
    swift_task_dealloc(*(_QWORD *)(v0 + 1120));
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005402F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (_QWORD *)*v2;
  v4 = (_QWORD *)(*v2 + 536);
  v3[96] = v2;
  v3[97] = a1;
  v3[98] = v1;
  v5 = v3[167];
  v3[168] = v1;
  swift_task_dealloc(v5);
  v6 = v3[141];
  sub_10022E75C(v4);
  if (v1)
    v7 = sub_100540C6C;
  else
    v7 = sub_100540380;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_100540380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 1272);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 1240);
  swift_errorRelease(*(_QWORD *)(v0 + 1200));
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  v4 = *(const char **)(v0 + 776);
  v5 = *(_QWORD *)(v0 + 1048);
  v6 = *(_QWORD *)(v0 + 1040);
  swift_bridgeObjectRetain(v4);
  *(_QWORD *)&v8 = sub_1005439C0(v7).n128_u64[0];
  v55 = v4;
  swift_bridgeObjectRelease(v4, v8);
  static Date.now.getter(v9);
  sub_100220D78((unint64_t *)&unk_1007BCEF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v5, v6);
  if ((result & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 1040);
    v12 = *(_QWORD **)(v0 + 1032);
    v13 = *(_QWORD *)(v0 + 1024);
    v49 = *(_QWORD *)(v0 + 1008);
    v50 = *(_QWORD *)(v0 + 1000);
    v51 = *(_QWORD *)(v0 + 1016);
    v14 = *(_QWORD *)(v0 + 992);
    v15 = *(_QWORD *)(v0 + 984);
    v16 = *(_QWORD *)(v0 + 976);
    v17 = v14 + *(int *)(v16 + 48);
    v18 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
    v18(v14, *(_QWORD *)(v0 + 1048), v13);
    v19 = (void (*)(uint64_t, uint64_t, uint64_t))v12[4];
    v19(v17, v11, v13);
    v20 = v15 + *(int *)(v16 + 48);
    v18(v15, v14, v13);
    v18(v20, v17, v13);
    v19(v49, v15, v13);
    v21 = (void (*)(uint64_t, uint64_t))v12[1];
    v21(v20, v13);
    v22 = v15 + *(int *)(v16 + 48);
    v19(v15, v14, v13);
    v19(v22, v17, v13);
    v19(v49 + *(int *)(v50 + 36), v22, v13);
    v21(v15, v13);
    v23 = sub_1002785E0(v49, v51);
    v24 = ClosedRange<>.interval.getter(v23);
    sub_10000D0F0(v51, &qword_1007B6BD0);
    v25 = swift_bridgeObjectRetain_n(v55, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 1048);
    v30 = *(_QWORD *)(v0 + 1024);
    if (v28)
    {
      v53 = *(_QWORD *)(v0 + 1048);
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v56 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v55);
      v35 = Array.description.getter(v34, v33);
      v52 = v30;
      v37 = v36;
      swift_bridgeObjectRelease(v55);
      *(_QWORD *)(v0 + 832) = sub_100228BD8(v35, (unint64_t)v37, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 832, v0 + 840, v31 + 4);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease_n(v55, 2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Importing END {importedURLs: %s}", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v39 = v52;
      v38 = v53;
    }
    else
    {
      swift_bridgeObjectRelease_n(v55, 2);

      v38 = v29;
      v39 = v30;
    }
    v21(v38, v39);
    v40 = *(_QWORD *)(v0 + 1096);
    v41 = *(_QWORD *)(v0 + 1072);
    v42 = *(_QWORD *)(v0 + 1048);
    v43 = *(_QWORD *)(v0 + 1040);
    v44 = *(_QWORD *)(v0 + 1016);
    v45 = *(_QWORD *)(v0 + 1008);
    v46 = *(_QWORD *)(v0 + 992);
    v47 = *(_QWORD *)(v0 + 984);
    v48 = *(_QWORD *)(v0 + 968);
    v54 = *(_QWORD *)(v0 + 944);
    swift_task_dealloc(*(_QWORD *)(v0 + 1120));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v54);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v55, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10054079C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 1296);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 1296);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 880) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 880, v0 + 888, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Importing END - Failure {%@}", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 1296);

    swift_errorRelease(v11);
    v10 = swift_errorRelease(v11);
  }
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1256);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1048);
  v17 = *(_QWORD *)(v0 + 1032);
  v18 = *(_QWORD *)(v0 + 1024);
  swift_willThrow(v10);
  swift_release(v14);
  swift_release(v13);
  swift_release(v12);
  swift_errorRelease(v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = *(_QWORD *)(v0 + 1096);
  v20 = *(_QWORD *)(v0 + 1072);
  v21 = *(_QWORD *)(v0 + 1048);
  v22 = *(_QWORD *)(v0 + 1040);
  v23 = *(_QWORD *)(v0 + 1016);
  v24 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 992);
  v26 = *(_QWORD *)(v0 + 984);
  v27 = *(_QWORD *)(v0 + 968);
  v29 = *(_QWORD *)(v0 + 944);
  swift_task_dealloc(*(_QWORD *)(v0 + 1120));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100540A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 1320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 1320);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 816) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 816, v0 + 824, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Importing END - Failure {%@}", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 1320);

    swift_errorRelease(v11);
    v10 = swift_errorRelease(v11);
  }
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1256);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1048);
  v17 = *(_QWORD *)(v0 + 1032);
  v18 = *(_QWORD *)(v0 + 1024);
  swift_willThrow(v10);
  swift_release(v14);
  swift_release(v13);
  swift_release(v12);
  swift_errorRelease(v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = *(_QWORD *)(v0 + 1096);
  v20 = *(_QWORD *)(v0 + 1072);
  v21 = *(_QWORD *)(v0 + 1048);
  v22 = *(_QWORD *)(v0 + 1040);
  v23 = *(_QWORD *)(v0 + 1016);
  v24 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 992);
  v26 = *(_QWORD *)(v0 + 984);
  v27 = *(_QWORD *)(v0 + 968);
  v29 = *(_QWORD *)(v0 + 944);
  swift_task_dealloc(*(_QWORD *)(v0 + 1120));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100540C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 1344);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 1344);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 848) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 848, v0 + 856, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Importing END - Failure {%@}", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 1344);

    swift_errorRelease(v11);
    v10 = swift_errorRelease(v11);
  }
  v12 = *(_QWORD *)(v0 + 1272);
  v13 = *(_QWORD *)(v0 + 1256);
  v14 = *(_QWORD *)(v0 + 1240);
  v15 = *(_QWORD *)(v0 + 1200);
  v16 = *(_QWORD *)(v0 + 1048);
  v17 = *(_QWORD *)(v0 + 1032);
  v18 = *(_QWORD *)(v0 + 1024);
  swift_willThrow(v10);
  swift_release(v14);
  swift_release(v13);
  swift_release(v12);
  swift_errorRelease(v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = *(_QWORD *)(v0 + 1096);
  v20 = *(_QWORD *)(v0 + 1072);
  v21 = *(_QWORD *)(v0 + 1048);
  v22 = *(_QWORD *)(v0 + 1040);
  v23 = *(_QWORD *)(v0 + 1016);
  v24 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 992);
  v26 = *(_QWORD *)(v0 + 984);
  v27 = *(_QWORD *)(v0 + 968);
  v29 = *(_QWORD *)(v0 + 944);
  swift_task_dealloc(*(_QWORD *)(v0 + 1120));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100540ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[25] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[26] = v6;
  v4[27] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v4[28] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[29] = v8;
  v4[30] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384((uint64_t *)&unk_1007C5E10);
  v4[31] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[32] = v10;
  v4[33] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v4[34] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[35] = v12;
  v4[36] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v4[37] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[38] = v14;
  v4[39] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v4[40] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[41] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[42] = swift_task_alloc(v17);
  v4[43] = swift_task_alloc(v17);
  v18 = sub_100008384(&qword_1007BE118);
  v4[44] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v4[45] = v19;
  v4[46] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v20 = static AirDropActor.shared;
  v4[47] = static AirDropActor.shared;
  return swift_task_switch(sub_100541074, v20, 0);
}

uint64_t sub_100541074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_100244418(*(_QWORD *)(v0 + 176), v0 + 56);
  v1 = sub_100008384(&qword_1007C5E20);
  v2 = sub_100008384(&qword_1007C5E28);
  if (swift_dynamicCast(v0 + 96, v0 + 56, v1, v2, 6))
  {
    v3 = *(_QWORD *)(v0 + 344);
    v4 = *(_QWORD *)(v0 + 336);
    v5 = *(_QWORD *)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 328);
    v27 = *(_QWORD *)(v0 + 320);
    v6 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 296);
    v35 = *(_QWORD *)(v0 + 352);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 184);
    sub_10026EE60((__int128 *)(v0 + 96), v0 + 16);
    v8 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v28 = sub_10023A834((_QWORD *)(v0 + 16), v8);
    v9 = CurrentValueSubject.value.getter(v28);
    SFAirDropReceive.Transfer.id.getter(v9);
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    *(_QWORD *)(v0 + 384) = v10;
    v11 = v10(v3, v27);
    v12 = CurrentValueSubject.value.getter(v11);
    SFAirDropReceive.Transfer.receiveID.getter(v12);
    v10(v4, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v29, v5, v6, v30, v8, v7);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v6, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v5, v34);
    SFProgressTask.makeAsyncIterator()(v35);
    v13 = static AirDropActor.shared;
    v14 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    *(_QWORD *)(v0 + 392) = v14;
    v15 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 400) = v15;
    *v15 = v0;
    v15[1] = sub_10054135C;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v13, v14, *(_QWORD *)(v0 + 248), v0 + 152);
  }
  else
  {
    v17 = *(const char **)(v0 + 168);
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_QWORD *)(v0 + 128) = 0;
    sub_10000D0F0(v0 + 96, (uint64_t *)&unk_1007C5E30);
    v36 = *(_QWORD *)(v0 + 168);
    v18 = *(_QWORD *)(v0 + 368);
    v20 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 312);
    v22 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRetain(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
  }
}

uint64_t sub_10054135C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 400));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 376);
    v4 = sub_100541A6C;
  }
  else
  {
    *(_DWORD *)(v2 + 148) = enum case for SFAirDropReceive.Transfer.State.importing(_:);
    v3 = *(_QWORD *)(v2 + 376);
    v4 = sub_1005413D0;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005413D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 136);
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 416) = v2;
    *v2 = v0;
    v2[1] = sub_100541600;
    return SFProgressTask.finalValue.getter(v0 + 160, *(_QWORD *)(v0 + 352));
  }
  else
  {
    v16 = *(_DWORD *)(v0 + 148);
    v19 = *(_QWORD *)(v0 + 392);
    v4 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 320);
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v5 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(const char **)(v0 + 168);
    v10 = sub_100008384(&qword_1007B5288);
    v11 = *(int *)(v10 + 48);
    v12 = *(int *)(v10 + 64);
    v13 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v8, v13);
    *(_QWORD *)(v6 + v11) = v9;
    *(_QWORD *)(v6 + v12) = v1;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, v16, v7);
    swift_bridgeObjectRetain(v9);
    sub_10053D3FC(v6, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v18(v4, v17);
    v14 = static AirDropActor.shared;
    v15 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 408) = v15;
    *v15 = v0;
    v15[1] = sub_10054159C;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v14, v19, *(_QWORD *)(v0 + 248), v0 + 152);
  }
}

uint64_t sub_10054159C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 408));
  if (v0)
    v3 = sub_100541A6C;
  else
    v3 = sub_1005413D0;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 376), 0);
}

uint64_t sub_100541600()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 416);
  *(_QWORD *)(*v1 + 424) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100541B50;
  else
    v4 = sub_100541664;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 376), 0);
}

uint64_t sub_100541664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v1 = *(unsigned int *)(v0 + 148);
  v2 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD *)(v0 + 320);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(const char **)(v0 + 168);
  *(_QWORD *)(v0 + 432) = *(_QWORD *)(v0 + 160);
  v8 = sub_100008384(&qword_1007B5288);
  v9 = *(int *)(v8 + 48);
  v10 = *(int *)(v8 + 64);
  v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v3, v6, v11);
  *(_QWORD *)(v3 + v9) = v7;
  *(_QWORD *)(v3 + v10) = 0x3FF0000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, v1, v5);
  swift_bridgeObjectRetain(v7);
  sub_10053D3FC(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v15(v2, v14);
  v12 = static AirDropActor.shared;
  *(_QWORD *)(v0 + 440) = static AirDropActor.shared;
  return swift_task_switch(sub_100541778, v12, 0);
}

uint64_t sub_100541778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(0.4);
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 448) = v4;
  *v4 = v0;
  v4[1] = sub_100541810;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_100541810()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 448);
  v5 = *(_QWORD *)(*v1 + 208);
  v4 = *(_QWORD *)(*v1 + 216);
  v6 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 456) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    v7 = *(_QWORD *)(v2 + 440);
    v8 = sub_100541960;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 376);
    v8 = sub_1005418A0;
  }
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_1005418A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  sub_10022E75C((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100541960()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRelease(*(const char **)(v0 + 432));
  return swift_task_switch(sub_1005419A0, v1, 0);
}

uint64_t sub_1005419A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 216);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100541A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 216);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100541B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 216);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100541C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9[22] = v16;
  v9[23] = v8;
  v9[20] = a7;
  v9[21] = a8;
  v9[18] = a3;
  v9[19] = a4;
  v9[16] = a1;
  v9[17] = a2;
  v10 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  v9[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v9[25] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v9[26] = v12;
  v9[27] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007C4330);
  v9[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007C5DF0);
  v9[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100541D28, static AirDropActor.shared, 0);
}

uint64_t sub_100541D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v36 = *(_QWORD *)(v0 + 208);
  v37 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v40 = *(_QWORD *)(v0 + 192);
  v31 = v4;
  v33 = *(_QWORD *)(v0 + 168);
  v34 = *(const char **)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 160);
  v35 = *(const char **)(v0 + 152);
  v32 = *(const char **)(v0 + 144);
  v30 = *(const char **)(v0 + 136);
  v39 = *(_QWORD *)(v0 + 128);
  v5 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.success(_:);
  v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  v8 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  v9 = swift_beginAccess(v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics, v0 + 56, 33, 0);
  SFAirDropReceive.Transfer.Metrics.result.setter(v2, v9);
  v10 = swift_endAccess(v0 + 56);
  static Date.now.getter(v10);
  v11 = type metadata accessor for Date(0);
  v38 = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v1, 0, 1, v11);
  v12 = swift_beginAccess(v8, v0 + 80, 33, 0);
  SFAirDropReceive.Transfer.Metrics.endDate.setter(v1, v12);
  swift_endAccess(v0 + 80);
  v13 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
  v14 = v3 + v13[12];
  v15 = (_QWORD *)(v3 + v13[16]);
  v16 = v13[20];
  v17 = v13[24];
  v18 = v13[28];
  v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v3, v8, v19);
  v20 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v29 = *(_QWORD *)(v20 - 8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v28(v14, v41, v20);
  *v15 = v33;
  v15[1] = v34;
  *(_QWORD *)(v3 + v16) = v30;
  *(_QWORD *)(v3 + v17) = v32;
  *(_QWORD *)(v3 + v18) = v35;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 104))(v3, enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:), v37);
  *(_QWORD *)&v21 = swift_bridgeObjectRetain(v34).n128_u64[0];
  *(_QWORD *)&v22 = swift_bridgeObjectRetain(v30, v21).n128_u64[0];
  *(_QWORD *)&v23 = swift_bridgeObjectRetain(v32, v22).n128_u64[0];
  swift_bridgeObjectRetain(v35, v23);
  sub_10053D3FC(v3, v39);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v3, v37);
  v24 = v31 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess(v31 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler, v0 + 104, 0, 0);
  sub_100244418(v24, v0 + 16);
  v25 = *(_QWORD *)(v0 + 40);
  v26 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v25);
  v28(v40, v41, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 80))(v39, 1, v40, v25, v26);
  sub_10000D0F0(v40, (uint64_t *)&unk_1007C5DE0);
  sub_10022E75C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_task_dealloc(v38);
  swift_task_dealloc(v3);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10054206C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1[4] = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SFAirDropReceive.Failure(0);
  v1[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[7] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[8] = swift_task_alloc(v5);
  v1[9] = swift_task_alloc(v5);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v1[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v1[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[14] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[15] = swift_task_alloc(v10);
  v1[16] = swift_task_alloc(v10);
  v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v1[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[18] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[19] = swift_task_alloc(v13);
  v1[20] = swift_task_alloc(v13);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v14 = static AirDropActor.shared;
  v1[21] = static AirDropActor.shared;
  return swift_task_switch(sub_1005421CC, v14, 0);
}

uint64_t sub_1005421CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;

  v2 = (_QWORD *)(v1 + 32);
  v3 = v1 + 24;
  v4 = *(_QWORD *)(v1 + 160);
  v5 = *(_QWORD *)(v1 + 136);
  v6 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.state.getter(v10);
  v100 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v100(v4, v5);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8);
  if (v11 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    v12 = *(_QWORD *)(v1 + 128);
    v14 = *(_QWORD *)(v1 + 88);
    v13 = *(_QWORD *)(v1 + 96);
    v15 = *(_QWORD *)(v1 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 112) + 96))(v12, *(_QWORD *)(v1 + 104));
    v16 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
    *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v12 + v16[16] + 8)).n128_u64[0];
    *(_QWORD *)&v18 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v12 + v16[20]), v17).n128_u64[0];
    *(_QWORD *)&v19 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v12 + v16[24]), v18).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)(v12 + v16[28]), v19);
    v21 = SFAirDropReceive.AskRequest.type.getter(v20);
    LOBYTE(v12) = SFAirDrop.TransferType.isOnlyExchange.getter(v21);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    if ((v12 & 1) != 0)
    {
      v22 = 1;
    }
    else
    {
      v35 = sub_10031AF00();
      v36 = (void *)static NSUserDefaults.airdrop.getter(v35);
      v37 = SFAirDropUserDefaults.moveToAppEnabled.getter();

      v22 = v37 ^ 1;
    }
    v38 = *(_QWORD *)(v1 + 128);
    v39 = v38 + v16[12];
    v40 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    v41 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v38, v41);
    if ((v22 & 1) == 0)
      goto LABEL_19;
LABEL_16:
    v61 = *(_QWORD *)(v1 + 32);
    v62 = *(_QWORD *)(v1 + 40);
    v63 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
    v64 = static AirDropActor.shared;
    v65 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v66 = (_QWORD *)swift_allocObject(&unk_10072F1E8, 40, 7);
    v66[2] = v64;
    v66[3] = v65;
    v66[4] = v61;
    swift_retain(v61);
    swift_retain(v64);
    *(_QWORD *)(v1 + 176) = sub_100252EC0(v62, (uint64_t)&unk_1007C5E08, (uint64_t)v66);
    v67 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
    *(_QWORD *)(v1 + 184) = v67;
    *v67 = v1;
    v67[1] = sub_100542B20;
    return Task<>.value.getter();
  }
  if (v11 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    v42 = swift_retain_n(*v2, 2);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = *(_QWORD *)(v1 + 152);
      v92 = *(_QWORD *)(v1 + 136);
      v47 = *(_QWORD *)(v1 + 112);
      v46 = *(_QWORD *)(v1 + 120);
      v48 = *(_QWORD *)(v1 + 104);
      v96 = *(_QWORD *)(v1 + 32);
      type = v44;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v97 = swift_slowAlloc(32, -1);
      v101 = v97;
      *(_DWORD *)v49 = 136315138;
      v50 = CurrentValueSubject.value.getter(v97);
      SFAirDropReceive.Transfer.state.getter(v50);
      v100(v45, v92);
      v51 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
      v52 = dispatch thunk of CustomStringConvertible.description.getter(v48, v51);
      v54 = v53;
      v55 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v55(v46, v48);
      *(_QWORD *)(v1 + 24) = sub_100228BD8(v52, (unint64_t)v54, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v49 + 4);
      swift_release_n(v96, 2);
      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v43, type, "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}", v49, 0xCu);
      swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v49, -1, -1);

    }
    else
    {
      v69 = *(_QWORD *)(v1 + 112);
      swift_release_n(*(_QWORD *)(v1 + 32), 2);

      v55 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    }
    v55(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 104));
    v3 = v1 + 24;
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v1 + 128);
  v25 = *(_QWORD *)(v1 + 64);
  v24 = *(_QWORD *)(v1 + 72);
  v26 = *(_QWORD *)(v1 + 48);
  v27 = *(_QWORD *)(v1 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 112) + 96))(v23, *(_QWORD *)(v1 + 104));
  v28 = sub_100008384(&qword_1007B9BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v24, v23 + *(int *)(v28 + 48), v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v24, v26);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v25, v26);
  if (v29 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    v30 = *(_QWORD *)(v1 + 64);
    v31 = *(_QWORD *)(v1 + 48);
    v32 = *(_QWORD *)(v1 + 56);
    (*(void (**)(_QWORD, uint64_t))(v32 + 8))(*(_QWORD *)(v1 + 72), v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 96))(v30, v31);
    swift_bridgeObjectRelease(*(const char **)(v30 + 8));
    v33 = v30 + *(int *)(sub_100008384((uint64_t *)&unk_1007BB610) + 48);
    v34 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
    goto LABEL_15;
  }
  if (v29 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    v56 = *(_QWORD *)(v1 + 64);
    v57 = *(_QWORD *)(v1 + 48);
    v58 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 56) + 8);
    v58(*(_QWORD *)(v1 + 72), v57);
    v58(v56, v57);
LABEL_15:
    v59 = *(_QWORD *)(v1 + 128);
    v60 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
    goto LABEL_16;
  }
  if (v29 != enum case for SFAirDropReceive.Failure.declined(_:)
    && v29 != enum case for SFAirDropReceive.Failure.askDismissed(_:))
  {
    if (v29 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
    {
LABEL_26:
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 56) + 8))(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 48));
      goto LABEL_15;
    }
    if (v29 != enum case for SFAirDropReceive.Failure.receiverCancelled(_:)
      && v29 != enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    {
      if (v29 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:))
        goto LABEL_26;
      if (v29 != enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
      {
        if (v29 != enum case for SFAirDropReceive.Failure.streamError(_:)
          && v29 != enum case for SFAirDropReceive.Failure.askNotHandled(_:)
          && v29 != enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
          && v29 != enum case for SFAirDropReceive.Failure.badRequest(_:)
          && v29 != enum case for SFAirDropReceive.Failure.moveToAppFailed(_:)
          && v29 != enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
        {
          return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 48));
        }
        goto LABEL_26;
      }
    }
  }
  v90 = *(_QWORD *)(v1 + 128);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 56) + 8))(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 48));
  v91 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
LABEL_19:
  v70 = swift_retain_n(*v2, 2);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = *(_QWORD *)(v1 + 152);
    v93 = *(_QWORD *)(v1 + 136);
    v74 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)typea = *(_QWORD *)(v1 + 112);
    v75 = *(_QWORD *)(v1 + 104);
    v98 = *(_QWORD *)(v1 + 32);
    v99 = v3;
    v76 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = swift_slowAlloc(32, -1);
    v101 = v77;
    *(_DWORD *)v76 = 136315138;
    v78 = CurrentValueSubject.value.getter(v77);
    SFAirDropReceive.Transfer.state.getter(v78);
    v100(v73, v93);
    v79 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v80 = dispatch thunk of CustomStringConvertible.description.getter(v75, v79);
    v82 = v81;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)typea + 8))(v74, v75);
    *(_QWORD *)(v1 + 16) = sub_100228BD8(v80, (unint64_t)v82, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v99, v76 + 4);
    swift_release_n(v98, 2);
    swift_bridgeObjectRelease(v82);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Transer Linger SKIPPED. {transfer.state: %s}", v76, 0xCu);
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v76, -1, -1);
  }
  else
  {
    swift_release_n(*v2, 2);
  }

  v83 = *(_QWORD *)(v1 + 152);
  v85 = *(_QWORD *)(v1 + 120);
  v84 = *(_QWORD *)(v1 + 128);
  v86 = *(_QWORD *)(v1 + 96);
  v88 = *(_QWORD *)(v1 + 64);
  v87 = *(_QWORD *)(v1 + 72);
  v89 = *(_QWORD *)(v1 + 40);
  swift_task_dealloc(*(_QWORD *)(v1 + 160));
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100542B20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  return swift_task_switch(sub_100542B78, v1, 0);
}

uint64_t sub_100542B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100542C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v3[20] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[21] = v6;
  v3[22] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007C4330);
  v3[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007C5DF0);
  v3[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100542D10, static AirDropActor.shared, 0);
}

uint64_t sub_100542D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v27 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v23 = v4;
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 128);
  v5 = type metadata accessor for SFAirDropReceive.Failure(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v22(v1, v4, v5);
  v6 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.failure(_:);
  v7 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v1, v6, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v1, 0, 1, v7);
  v9 = v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  v10 = swift_beginAccess(v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics, v0 + 56, 33, 0);
  SFAirDropReceive.Transfer.Metrics.result.setter(v1, v10);
  v11 = swift_endAccess(v0 + 56);
  static Date.now.getter(v11);
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v28, 0, 1, v12);
  v13 = swift_beginAccess(v9, v0 + 80, 33, 0);
  SFAirDropReceive.Transfer.Metrics.endDate.setter(v28, v13);
  swift_endAccess(v0 + 80);
  v14 = v2 + *(int *)(sub_100008384(&qword_1007B9BB0) + 48);
  v15 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v2, v9, v15);
  v22(v14, v23, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v2, enum case for SFAirDropReceive.Transfer.State.transferFailed(_:), v26);
  sub_10053D3FC(v2, v25);
  v16 = v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess(v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler, v0 + 104, 0, 0);
  sub_100244418(v16, v0 + 16);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 48);
  sub_10023A834((_QWORD *)(v0 + 16), v17);
  v19 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v27, 1, 1, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v18 + 80))(v25, 0, v27, v17, v18);
  sub_10000D0F0(v27, (uint64_t *)&unk_1007C5DE0);
  v20 = sub_10022E75C((_QWORD *)(v0 + 16));
  sub_1005432F8(v20);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v2, v26);
  swift_task_dealloc(v1);
  swift_task_dealloc(v28);
  swift_task_dealloc(v2);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100542FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v36 = a1;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v41 = v35;
    v37 = v1;
    *(_DWORD *)v14 = 136315138;
    v34 = v14 + 4;
    v15 = ((uint64_t (*)(void))SFAirDropReceive.Transfer.id.getter)();
    v16 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v15);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
    v40 = sub_100228BD8(v16, v18, &v41);
    v2 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v34);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Begin Receive OSTransaction and Power Assertion %s", v14, 0xCu);
    v19 = v35;
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v41 = 0;
  v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v20 = swift_bridgeObjectRelease(v42);
  v41 = 0xD000000000000010;
  v42 = 0x8000000100621160;
  v21 = SFAirDropReceive.Transfer.id.getter(v20);
  v22 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v21);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  v26._countAndFlagsBits = 93;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  v27 = v42;
  v28 = String.utf8CString.getter(v41, v42);
  swift_bridgeObjectRelease(v27);
  v29 = os_transaction_create(v28 + 32);
  swift_release(v28);
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = v29;
  swift_unknownObjectRelease(v30);
  result = sub_1000501FC();
  v32 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)v32 = result;
  *(_BYTE *)(v32 + 4) = 0;
  return result;
}

uint64_t sub_1005432F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  IOPMAssertionID v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, uint64_t, uint64_t);
  _QWORD v19[4];

  v2 = v1;
  v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction);
  if (v4)
  {
    v5 = swift_unknownObjectRetain(v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing Receive OSTransaction", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    swift_unknownObjectRelease(v4);

    v9 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = 0;
    a1 = swift_unknownObjectRelease(v9);
  }
  v10 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    v11 = *(_DWORD *)v10;
    if (*(_DWORD *)v10)
    {
      v12 = Logger.logObject.getter(a1);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Clearing Receive Power Assertion", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      IOPMAssertionRelease(v11);
      *(_DWORD *)v10 = 0;
      *(_BYTE *)(v10 + 4) = 1;
    }
  }
  v15 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  v16 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10023A834((_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v15);
  v19[3] = _s10BaseRunnerCMa(0);
  v19[0] = v2;
  v17 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v16 + 24);
  swift_retain(v2);
  v17(v19, v15, v16);
  return sub_10022E75C(v19);
}

uint64_t sub_1005434CC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  v15 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask);
  if (v15)
  {
    swift_retain(*(_QWORD *)(v1
                           + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
    Task.cancel()();
    swift_release(v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_10053D420((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v16 = type metadata accessor for TaskPriority(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v5, 1, 1, v16);
  v18 = swift_allocObject(&unk_10072F198, 24, 7);
  swift_weakInit(v18 + 16, v1);
  v19 = swift_allocObject(&unk_10072F1C0, 32, 7);
  *(double *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_1007C5DC0, v19, (char *)&type metadata for () + 8);
  swift_release(v19);
  sub_10000D0F0((uint64_t)v5, &qword_1007B68A0);
  v21 = *(_QWORD *)(v1 + v14);
  *(_QWORD *)(v1 + v14) = v20;
  swift_retain(v20);
  swift_release(v21);
  v17(v5, 1, 1, v16);
  swift_retain(v20);
  v22 = static Task<>.noThrow(priority:operation:)(v5, &unk_1007C5DD0, v20, (char *)&type metadata for () + 8);
  swift_release_n(v20, 2);
  swift_release(v22);
  return sub_10000D0F0((uint64_t)v5, &qword_1007B68A0);
}

uint64_t sub_100543764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = v0;
  v2 = sub_100008384((uint64_t *)&unk_1007C5BB0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100008384(&qword_1007C0458);
  v7 = __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v20[-v10];
  v12 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  v13 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10023A834((_QWORD *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if ((result & 1) == 0)
  {
    v15 = Logger.logObject.getter(result);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Lock state changed to unlocked", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
    swift_beginAccess(v18, v21, 0, 0);
    sub_100221F28(v18, (uint64_t)v11, &qword_1007C0458);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
    {
      sub_10000D0F0((uint64_t)v11, &qword_1007C0458);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v11, v2);
      v19 = sub_10000D0F0((uint64_t)v11, &qword_1007C0458);
      CheckedContinuation.resume(returning:)(v19, v2);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
    swift_beginAccess(v18, v20, 33, 0);
    sub_1004239B4((uint64_t)v9, v18);
    return swift_endAccess(v20);
  }
  return result;
}

__n128 sub_1005439C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  __n128 result;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  __n128 v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  const char *v58;
  __n128 v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, __n128);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  const char *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  const char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v76;
  const char *v77;
  const char *v78;
  unint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  void (*v83)(char *, const char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  __n128 v92;
  char *v93;
  uint64_t v94;
  const char *v95;
  char *v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_QWORD, _QWORD, _QWORD);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110[3];

  v2 = sub_100008384((uint64_t *)&unk_1007C5E60);
  __chkstk_darwin(v2);
  v93 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for SFSandboxTokenURLPair(0);
  v4 = *(_QWORD *)(v109 - 8);
  v5 = __chkstk_darwin(v109);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v90 = (char *)&v86 - v9;
  __chkstk_darwin(v8);
  v89 = (char *)&v86 - v10;
  v11 = sub_100008384(&qword_1007BA758);
  __chkstk_darwin(v11);
  v96 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for SFSecurityScopedURL(0);
  v100 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v102 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v104 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v97 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v101 = (char *)&v86 - v18;
  __chkstk_darwin(v17);
  v108 = (char *)&v86 - v19;
  v20 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v20);
  v103 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SFPlatform(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter(v24);
  v27 = static SFPlatform.isPlatform(_:)(v26);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  if ((v27 & 1) != 0)
  {
    v88 = v7;
    v29 = (const char *)a1;
    v30 = *(_QWORD *)(a1 + 16);
    if (v30)
    {
      v94 = v4;
      v31 = v104;
      v32 = &v29[(*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80)];
      v99 = *(_QWORD *)(v104 + 72);
      v33 = *(void (**)(_QWORD, _QWORD, _QWORD))(v104 + 16);
      v87 = v29;
      v34 = swift_bridgeObjectRetain(v29);
      v107 = 0;
      v95 = (const char *)_swiftEmptyArrayStorage;
      v34.n128_u64[0] = 136315138;
      v92 = v34;
      v91 = (char *)&type metadata for Any + 8;
      v35 = (uint64_t)v96;
      v36 = v100;
      v37 = v102;
      v38 = v103;
      v106 = v33;
      do
      {
        v33(v38, v32, v14);
        v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v98)(v38, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v38, 1, v14) == 1)
        {
          v4 = v94;
          v76 = v88;
          v79 = swift_bridgeObjectRelease(v87).n128_u64[0];
          goto LABEL_25;
        }
        v41 = v108;
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v108, v38, v14);
        v42 = v101;
        v43 = v41;
        v33 = v106;
        v106(v101, v43, v14);
        v44 = v107;
        SFSecurityScopedURL.init(_:readWrite:)(v42, 0);
        if (v44)
        {
          swift_errorRelease(v44);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v35, 1, 1, v105);
          sub_10000D0F0(v35, &qword_1007BA758);
          v107 = 0;
          v47 = v97;
          v48 = v108;
          if (qword_1007B3F10 != -1)
            swift_once(&qword_1007B3F10, sub_10032539C);
          v49 = type metadata accessor for Logger(0);
          sub_100221DF8(v49, (uint64_t)qword_1007BA738);
          v50 = ((uint64_t (*)(char *, char *, uint64_t))v33)(v47, v48, v14);
          v51 = Logger.logObject.getter(v50);
          v52 = static os_log_type_t.error.getter(v51);
          if (os_log_type_enabled(v51, v52))
          {
            v53 = swift_slowAlloc(12, -1);
            v54 = swift_slowAlloc(32, -1);
            v110[0] = v54;
            *(_DWORD *)v53 = v92.n128_u32[0];
            v55 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v56 = dispatch thunk of CustomStringConvertible.description.getter(v14, v55);
            v58 = (const char *)v57;
            *(_QWORD *)(v53 + 4) = sub_100228BD8(v56, v57, v110);
            v59 = swift_bridgeObjectRelease(v58);
            v60 = v47;
            v61 = v104;
            v62 = *(void (**)(char *, uint64_t, __n128))(v104 + 8);
            v62(v60, v14, v59);
            _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to get security scoped url %s", (uint8_t *)v53, 0xCu);
            swift_arrayDestroy(v54, 1, v91);
            v63 = v54;
            v35 = (uint64_t)v96;
            swift_slowDealloc(v63, -1, -1);
            swift_slowDealloc(v53, -1, -1);

            ((void (*)(char *, uint64_t))v62)(v48, v14);
            v31 = v61;
          }
          else
          {

            v31 = v104;
            v39 = *(void (**)(char *, uint64_t))(v104 + 8);
            v39(v47, v14);
            v39(v48, v14);
          }
          v36 = v100;
          v37 = v102;
          v38 = v103;
          v33 = v106;
        }
        else
        {
          v45 = v105;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v35, 0, 1, v105);
          (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v37, v35, v45);
          v46 = v93;
          static SFSecurityScopedURL.consumeSandboxToken(item:)(v37);
          v107 = 0;
          v64 = v94;
          v65 = v109;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v46, 0, 1, v109);
          v66 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
          v67 = v89;
          v66(v89, v46, v65);
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v90, v67, v65);
          if ((swift_isUniquelyReferenced_nonNull_native(v95) & 1) != 0)
          {
            v38 = v103;
            v68 = v95;
          }
          else
          {
            v68 = (const char *)sub_1002280C0(0, *((_QWORD *)v95 + 2) + 1, 1, (unint64_t)v95);
            v38 = v103;
          }
          v70 = *((_QWORD *)v68 + 2);
          v69 = *((_QWORD *)v68 + 3);
          if (v70 >= v69 >> 1)
            v68 = (const char *)sub_1002280C0(v69 > 1, v70 + 1, 1, (unint64_t)v68);
          *((_QWORD *)v68 + 2) = v70 + 1;
          v71 = v94;
          v72 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
          v95 = v68;
          v73 = &v68[v72 + *(_QWORD *)(v94 + 72) * v70];
          v74 = v109;
          v66((char *)v73, v90, v109);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v89, v74);
          v31 = v104;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v108, v14);
          v37 = v102;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v102, v105);
          v35 = (uint64_t)v96;
        }
        v32 += v99;
        --v30;
      }
      while (v30);
      v4 = v94;
      v76 = v88;
      v78 = v87;
      v75 = v98;
    }
    else
    {
      v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v104 + 56);
      v40 = swift_bridgeObjectRetain(v29);
      v95 = (const char *)_swiftEmptyArrayStorage;
      v76 = v88;
      v78 = v77;
      v38 = v103;
    }
    v75(v38, 1, 1, v14, v40);
    v79 = swift_bridgeObjectRelease(v78).n128_u64[0];
LABEL_25:
    v80 = *((_QWORD *)v95 + 2);
    if (v80)
    {
      v81 = &v95[(*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)];
      v82 = *(_QWORD *)(v4 + 72);
      v83 = *(void (**)(char *, const char *, uint64_t, __n128))(v4 + 16);
      v84 = swift_bridgeObjectRetain(v95, *(double *)&v79);
      v85 = v109;
      do
      {
        v83(v76, v81, v85, v84);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v76, v85);
        v81 += v82;
        --v80;
      }
      while (v80);
      swift_bridgeObjectRelease_n(v95, 2);
    }
    else
    {
      return swift_bridgeObjectRelease(v95, *(double *)&v79);
    }
  }
  return result;
}

uint64_t sub_1005441FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  void (*v38)(char *, uint64_t);
  os_log_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint8_t *v44;
  int v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = _s10BaseRunnerC11FinishTokenVMa(0);
  __chkstk_darwin(v1);
  v49 = (uint64_t)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v42 - v13;
  SFAirDropReceive.Transfer.state.getter(v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v14, v7);
  if (v15 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v16 = (int *)sub_100008384((uint64_t *)&unk_1007BCFB0);
    v17 = &v14[v16[12]];
    *(_QWORD *)&v18 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v14[v16[16] + 8]).n128_u64[0];
    *(_QWORD *)&v19 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v14[v16[20]], v18).n128_u64[0];
    *(_QWORD *)&v20 = swift_bridgeObjectRelease((const char *)*(_QWORD *)&v14[v16[24]], v19).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)&v14[v16[28]], v20);
    v21 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17, v21);
LABEL_5:
    v24 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v14, v24);
  }
  if (v15 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v22 = &v14[*(int *)(sub_100008384(&qword_1007B9BB0) + 48)];
    v23 = type metadata accessor for SFAirDropReceive.Failure(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    goto LABEL_5;
  }
  v48 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v0, v3);
  v26 = v49;
  v27 = sub_100544DC0(v0, v49);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.fault.getter();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v47 = v28;
    v31 = swift_slowAlloc(12, -1);
    v45 = v30;
    v32 = (uint8_t *)v31;
    v33 = swift_slowAlloc(32, -1);
    v46 = v33;
    v51 = v33;
    v44 = v32;
    *(_DWORD *)v32 = 136315138;
    v43 = v32 + 4;
    SFAirDropReceive.Transfer.state.getter(v33);
    v34 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    v35 = dispatch thunk of CustomStringConvertible.description.getter(v7, v34);
    v37 = v36;
    v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v38(v11, v7);
    v50 = sub_100228BD8(v35, (unint64_t)v37, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v43);
    swift_bridgeObjectRelease(v37);
    sub_100544E04(v26);
    v39 = v47;
    v40 = v44;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v45, "Unexpected transfer state in FinishToken.validate {transfer.state: %s}", v44, 0xCu);
    v41 = v46;
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v3);
    return ((uint64_t (*)(char *, uint64_t))v38)(v14, v7);
  }
  else
  {
    sub_100544E04(v26);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
}

uint64_t sub_10054460C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return swift_task_switch(sub_1005446A0, v7, 0);
}

uint64_t sub_1005446A0(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v1 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transfer Linger START", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  ContinuousClock.init()(v5);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v6 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v1 + 104) = v6;
  *v6 = v1;
  v6[1] = sub_1005447AC;
  return v8(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1005447AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v5 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1002BC340;
  else
    v7 = sub_100544838;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 88), 0);
}

uint64_t sub_100544838(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine Linger END", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  swift_task_dealloc(*(_QWORD *)(v1 + 80));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1005448E8(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 48) = a3;
  *(double *)(v3 + 40) = a1;
  v4 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  *(_QWORD *)(v3 + 56) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 72) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007BA070);
  *(_QWORD *)(v3 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v3 + 88) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 96) = v8;
  *(_QWORD *)(v3 + 104) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 112) = static AirDropActor.shared;
  return swift_task_switch(sub_1005449CC, v9, 0);
}

uint64_t sub_1005449CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_100544A60;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_100544A60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  v5 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 104);
  v6 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1002BD990;
  else
    v7 = sub_100544AEC;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 112), 0);
}

uint64_t sub_100544AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v5 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, enum case for SFAirDrop.DisplayPriority.normal(_:), v6);
    sub_10053D420(v5, v4);
    swift_release(v3);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  v9 = *(_QWORD *)(v0 + 80);
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, v8, 1, v10);
  sub_10000D0F0(v9, &qword_1007BA070);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100544C20()
{
  uint64_t v0;

  sub_10053D2F0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100544C44()
{
  return _s10BaseRunnerCMa(0);
}

uint64_t _s10BaseRunnerCMa(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007C5B70, (uint64_t)&_s10BaseRunnerCMn);
}

void sub_100544C60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[11];

  v2 = type metadata accessor for SFAirDropReceive.AskRequest(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = "(";
    v10[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v10[6] = "(";
        sub_100544D54(319);
        if (v9 <= 0x3F)
        {
          v10[7] = *(_QWORD *)(v8 - 8) + 64;
          v10[8] = &unk_1005DC7C8;
          v10[9] = &unk_1005DC7E0;
          v10[10] = &unk_1005DC7C8;
          swift_updateClassMetadata2(a1, 256, 11, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_100544D54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007C5BA8)
  {
    v2 = sub_10021FF9C((uint64_t *)&unk_1007C5BB0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007C5BA8);
  }
}

uint64_t _s10BaseRunnerC11FinishTokenVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007C5ED0, (uint64_t)&_s10BaseRunnerC11FinishTokenVMn);
}

uint64_t sub_100544DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10BaseRunnerC11FinishTokenVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100544E04(uint64_t a1)
{
  uint64_t v2;

  v2 = _s10BaseRunnerC11FinishTokenVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100544E40(uint64_t a1, _QWORD *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, const char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD v49[4];

  v5 = v4;
  v47 = a4;
  v48 = a2;
  v40 = a1;
  v41 = a3;
  v6 = type metadata accessor for Date(0);
  __chkstk_darwin(v6);
  v44 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v12 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  v43 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
  v20 = sub_100008384((uint64_t *)&unk_1007C5BB0);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = 0;
  v22 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)v22 = 0;
  *(_BYTE *)(v22 + 4) = 1;
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask) = 0;
  v23 = v40;
  SFAirDropReceive.Transfer.askRequest.getter(v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest, v18, v15);
  sub_100244418((uint64_t)v48, v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler);
  v24 = v41;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_deviceStatus) = v41;
  v25 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  v26 = type metadata accessor for Logger(0);
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v47, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v23, v11);
  v28 = sub_100008384(&qword_1007C5DB0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = v24;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject) = CurrentValueSubject.init(_:)(v14);
  v30 = v44;
  v31 = v23;
  SFAirDropReceive.Transfer.startDate.getter();
  SFAirDropReceive.Transfer.Metrics.init(startDate:)(v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics, v10, v46);
  v32 = (uint64_t *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager);
  v33 = type metadata accessor for SDAirDropPlatformLockStateManagerSupported();
  v34 = swift_allocObject(v33, 16, 7);
  v32[3] = v33;
  v32[4] = (uint64_t)&off_100727728;
  *v32 = v34;
  sub_100542FE4(v31);
  v35 = *(_QWORD *)(v5
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  v36 = *(_QWORD *)(v5
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10023A834((_QWORD *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v35);
  v49[3] = _s10BaseRunnerCMa(0);
  v49[0] = v5;
  v37 = *(void (**)(_QWORD *, const char *, uint64_t, uint64_t))(v36 + 16);
  swift_retain(v5);
  v37(v49, "lockStateChanged", v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v47, v26);
  sub_10022E75C(v48);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v31, v42);
  sub_10022E75C(v49);
  return v5;
}

uint64_t sub_10054519C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005451C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005451E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(double *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1007C5DBC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D098;
  return sub_1005448E8(v4, a1, v5);
}

uint64_t sub_10054524C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007C5DCC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D12C;
  return sub_1002BD9DC(a1, v1);
}

uint64_t sub_1005452A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005452CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007C5DFC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_10054460C(a1, v4, v5, v6);
}

uint64_t *sub_100545338(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SFAirDropReceive.Transfer(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1005453E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_10054543C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005454B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100545534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005455B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10054562C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100545638);
}

uint64_t sub_100545638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1005456AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005456B8);
}

uint64_t sub_1005456B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_100545734(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SFAirDropReceive.Transfer(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005457B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100545894, static AirDropActor.shared, 0);
}

void sub_100545894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C610);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C630, 1, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriBooksLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary34SDAirDropContentHandleriBooksLinks);
}

uint64_t sub_100545B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriBooksLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100545BA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007C5F3C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1005457B8(a1);
}

void sub_100545BF8(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  double v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  _BYTE v25[56];

  v3 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0x80000001006211C0;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)&v8 = swift_bridgeObjectRetain((const char *)0x80000001006211C0).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0xD000000000000017;
  v10._object = (void *)0x80000001006211C0;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0x80000001006211C0);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49;
    String.append(_:)(v12);
  }
  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  v14 = *(_QWORD *)(inited + 16);
  v15 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v14, v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v23 + 56) = &type metadata for Int;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100545E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v26 - v10;
  result = __chkstk_darwin(v9);
  v14 = (char *)&v26 - v13;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v27 = a2;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v15);
        if (!v24)
        {
          v15 = v23 + 3;
          if (v23 + 3 >= v20)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v15);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_100244384(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * v22, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100221DB4((uint64_t)v14, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10045DA0C((uint64_t)v11, (uint64_t)v8);
    result = sub_1002443C8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release(a1);
    return v27;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100546060(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25[2];
  _QWORD v26[5];

  v2 = a1;
  v25[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = __CocoaSet.makeIterator()(a1);
    v4 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v5 = sub_1002EF0A8();
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v2 = v26[0];
    v23 = v26[1];
    v6 = v26[2];
    v7 = v26[3];
    v8 = v26[4];
  }
  else
  {
    v7 = 0;
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v23 = a1 + 56;
    v6 = ~v9;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v8 = v11 & *(_QWORD *)(a1 + 56);
  }
  v12 = (unint64_t)(v6 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v8)
    {
      v13 = (v8 - 1) & v8;
      v14 = __clz(__rbit64(v8)) | (v7 << 6);
      v15 = v7;
      goto LABEL_31;
    }
    v20 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v20 >= v12)
      goto LABEL_34;
    v21 = *(_QWORD *)(v23 + 8 * v20);
    v15 = v7 + 1;
    if (!v21)
    {
      v15 = v7 + 2;
      if (v7 + 2 >= v12)
        goto LABEL_34;
      v21 = *(_QWORD *)(v23 + 8 * v15);
      if (!v21)
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v12)
          goto LABEL_34;
        v21 = *(_QWORD *)(v23 + 8 * v15);
        if (!v21)
        {
          v15 = v7 + 4;
          if (v7 + 4 >= v12)
            goto LABEL_34;
          v21 = *(_QWORD *)(v23 + 8 * v15);
          if (!v21)
          {
            v15 = v7 + 5;
            if (v7 + 5 >= v12)
              goto LABEL_34;
            v21 = *(_QWORD *)(v23 + 8 * v15);
            if (!v21)
            {
              v22 = v7 + 6;
              while (v12 != v22)
              {
                v21 = *(_QWORD *)(v23 + 8 * v22++);
                if (v21)
                {
                  v15 = v22 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10022E5B4(v2);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v13 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_31:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    if (!v19)
      goto LABEL_34;
    while (1)
    {
      sub_10045E108((Swift::Int *)v25, v19);

      v7 = v15;
      v8 = v13;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v16 = __CocoaSet.Iterator.next()(a1);
      if (v16)
      {
        v17 = v16;
        v24 = v16;
        v18 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
        swift_unknownObjectRetain(v17);
        swift_dynamicCast(v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
        v19 = v25[0];
        swift_unknownObjectRelease(v17);
        v15 = v7;
        v13 = v8;
        if (v19)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

_QWORD *sub_1005462FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v0 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100556420();
  v4 = sub_100569784(1, (uint64_t)v3);
  swift_bridgeObjectRelease(v3);
  v5 = v4[2];
  if (v5)
  {
    v22 = _swiftEmptyArrayStorage;
    sub_100229940(0, v5, 0);
    for (i = (uint64_t)(v4 + 4); ; i += 40)
    {
      sub_100244418(i, (uint64_t)v19);
      v7 = v20;
      v8 = v21;
      sub_10023A834(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
      v9 = type metadata accessor for UUID(0);
      v10 = *(_QWORD *)(v9 - 8);
      result = (_QWORD *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9);
      if ((_DWORD)result == 1)
        break;
      v12 = UUID.uuidString.getter(result);
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
      sub_10022E75C(v19);
      v15 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      {
        sub_100229940(0, v15[2] + 1, 1);
        v15 = v22;
      }
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
      {
        sub_100229940(v16 > 1, v17 + 1, 1);
        v15 = v22;
      }
      v15[2] = v17 + 1;
      v18 = &v15[2 * v17];
      v18[4] = v12;
      v18[5] = v14;
      if (!--v5)
      {
        swift_bridgeObjectRelease(v4);
        return v15;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1005464E4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  const char *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, unint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  int64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  id v112;
  uint64_t v113[5];

  v3 = 0;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
    goto LABEL_112;
  if ((sub_1005549EC() & 1) == 0)
  {
    if (qword_1007B42C0 != -1)
      goto LABEL_113;
    goto LABEL_29;
  }
  v10 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  v11 = v10;
  v110 = a1 & 1;
  if ((a1 & 1) == 0)
  {
    if (v10)
    {
      v12 = objc_msgSend(v10, "enabledAutoUnlockDevices");

      if (v12)
      {
        v109 = v1;
        v13 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
        v14 = sub_1002EF0A8();
        v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

        if ((v15 & 0xC000000000000001) != 0)
        {
          v16 = (uint64_t)&_swiftEmptySetSingleton;
          v113[0] = (uint64_t)&_swiftEmptySetSingleton;
          if (v15 < 0)
            v17 = v15;
          else
            v17 = v15 & 0xFFFFFFFFFFFFFF8;
          v18 = __CocoaSet.makeIterator()(v17);
          v19 = __CocoaSet.Iterator.next()(v18);
          if (v19)
          {
            v105 = 0;
            do
            {
              v111 = v19;
              swift_dynamicCast(&v112, &v111, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
              v21 = objc_msgSend(v112, "type");
              v22 = v112;
              if (v21 == (id)4)
              {
                v23 = v113[0];
                v24 = *(_QWORD *)(v113[0] + 16);
                if (*(_QWORD *)(v113[0] + 24) <= v24)
                {
                  sub_100460784(v24 + 1);
                  v23 = v113[0];
                }
                v20 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v23 + 40));
                v25 = v23 + 56;
                v26 = -1 << *(_BYTE *)(v23 + 32);
                v27 = v20 & ~v26;
                v28 = v27 >> 6;
                if (((-1 << v27) & ~*(_QWORD *)(v23 + 56 + 8 * (v27 >> 6))) != 0)
                {
                  v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v23 + 56 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  v30 = 0;
                  v31 = (unint64_t)(63 - v26) >> 6;
                  do
                  {
                    if (++v28 == v31 && (v30 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_110;
                    }
                    v32 = v28 == v31;
                    if (v28 == v31)
                      v28 = 0;
                    v30 |= v32;
                    v33 = *(_QWORD *)(v25 + 8 * v28);
                  }
                  while (v33 == -1);
                  v29 = __clz(__rbit64(~v33)) + (v28 << 6);
                }
                *(_QWORD *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
                *(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * v29) = v22;
                ++*(_QWORD *)(v23 + 16);
              }
              else
              {

              }
              v19 = __CocoaSet.Iterator.next()(v20);
            }
            while (v19);
LABEL_57:
            v16 = v113[0];
            v3 = v105;
          }
          goto LABEL_58;
        }
        v63 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_100568D08;
LABEL_69:
        v16 = sub_10056888C(v15, v63);
        goto LABEL_70;
      }
      if (qword_1007B42C0 != -1)
        swift_once(&qword_1007B42C0, sub_1005477EC);
      v59 = type metadata accessor for Logger(0);
      v60 = sub_100221DF8(v59, (uint64_t)qword_1007C5FF8);
      v36 = Logger.logObject.getter(v60);
      v37 = static os_log_type_t.error.getter(v36);
      if (!os_log_type_enabled(v36, v37))
        goto LABEL_32;
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      v39 = "No devices enabled to unlock this device";
LABEL_31:
      _os_log_impl((void *)&_mh_execute_header, v36, v37, v39, v38, 2u);
      swift_slowDealloc(v38, -1, -1);
      goto LABEL_32;
    }
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    return;
  }
  if (!v10)
    goto LABEL_116;
  v40 = objc_msgSend(v10, "enabledAutoUnlockLockDevices");

  if (!v40)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v61 = type metadata accessor for Logger(0);
    v62 = sub_100221DF8(v61, (uint64_t)qword_1007C5FF8);
    v36 = Logger.logObject.getter(v62);
    v37 = static os_log_type_t.error.getter(v36);
    if (!os_log_type_enabled(v36, v37))
      goto LABEL_32;
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    v39 = "This device isn't enabled to unlock any other devices";
    goto LABEL_31;
  }
  v109 = v1;
  v41 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
  v42 = sub_1002EF0A8();
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v40, v41, v42);

  if ((v15 & 0xC000000000000001) == 0)
  {
    v63 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_100568B64;
    goto LABEL_69;
  }
  v16 = (uint64_t)&_swiftEmptySetSingleton;
  v113[0] = (uint64_t)&_swiftEmptySetSingleton;
  if (v15 < 0)
    v43 = v15;
  else
    v43 = v15 & 0xFFFFFFFFFFFFFF8;
  v18 = __CocoaSet.makeIterator()(v43);
  v44 = __CocoaSet.Iterator.next()(v18);
  if (!v44)
  {
LABEL_58:
    swift_release(v18);
LABEL_70:
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v64 = type metadata accessor for Logger(0);
    sub_100221DF8(v64, (uint64_t)qword_1007C5FF8);
    v65 = swift_bridgeObjectRetain_n(v16, 2);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.debug.getter();
    v68 = os_log_type_enabled(v66, v67);
    v105 = v3;
    if (v68)
    {
      v69 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = swift_slowAlloc(32, -1);
      v113[0] = v70;
      *(_DWORD *)v69 = 136315138;
      v71 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
      v72 = sub_1002EF0A8();
      v73 = swift_bridgeObjectRetain(v16);
      v74 = Set.description.getter(v73, v71, v72);
      v76 = v75;
      swift_bridgeObjectRelease(v16);
      v112 = (id)sub_100228BD8(v74, v76, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v69 + 4);
      swift_bridgeObjectRelease(v76);
      swift_bridgeObjectRelease_n(v16, 2);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Registering Devices: %s", v69, 0xCu);
      swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1, -1);
      swift_slowDealloc(v69, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v16, 2);
    }

    if ((v16 & 0xC000000000000001) != 0)
    {
      if (v16 < 0)
        v78 = v16;
      else
        v78 = v16 & 0xFFFFFFFFFFFFFF8;
      v79 = __CocoaSet.makeIterator()(v78);
      v80 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
      v81 = sub_1002EF0A8();
      v77 = Set.Iterator.init(_cocoa:)(v113, v79, v80, v81);
      v16 = v113[0];
      v82 = v113[1];
      v83 = v113[2];
      v84 = v113[3];
      v85 = v113[4];
    }
    else
    {
      v84 = 0;
      v86 = -1 << *(_BYTE *)(v16 + 32);
      v82 = v16 + 56;
      v83 = ~v86;
      v87 = -v86;
      if (v87 < 64)
        v88 = ~(-1 << v87);
      else
        v88 = -1;
      v85 = v88 & *(_QWORD *)(v16 + 56);
    }
    v108 = v16 & 0x7FFFFFFFFFFFFFFFLL;
    v106 = v83;
    v89 = (unint64_t)(v83 + 64) >> 6;
    v107 = (char *)&type metadata for Swift.AnyObject + 8;
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_88;
LABEL_85:
    v90 = __CocoaSet.Iterator.next()(v77);
    if (v90)
    {
      v91 = v90;
      v111 = v90;
      v92 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v91);
      swift_dynamicCast(&v112, &v111, v107, v92, 7);
      v93 = v112;
      swift_unknownObjectRelease(v91);
      v94 = v84;
      v95 = v85;
      while (v93)
      {
        v99 = objc_msgSend(v93, "uniqueID", v105, v106);
        if (!v99)
        {
          __break(1u);
          goto LABEL_115;
        }
        v100 = v99;
        v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
        v103 = v102;

        sub_100564758(v110, v101, v103, 0);
        swift_bridgeObjectRelease(v103);

        v84 = v94;
        v85 = v95;
        if (v16 < 0)
          goto LABEL_85;
LABEL_88:
        if (v85)
        {
          v95 = (v85 - 1) & v85;
          v96 = __clz(__rbit64(v85)) | (v84 << 6);
          v94 = v84;
        }
        else
        {
          v94 = v84 + 1;
          if (__OFADD__(v84, 1))
            goto LABEL_111;
          if (v94 >= v89)
            break;
          v97 = *(_QWORD *)(v82 + 8 * v94);
          if (!v97)
          {
            v98 = v84 + 2;
            if (v84 + 2 >= v89)
              break;
            v97 = *(_QWORD *)(v82 + 8 * v98);
            if (v97)
              goto LABEL_97;
            v98 = v84 + 3;
            if (v84 + 3 >= v89)
              break;
            v97 = *(_QWORD *)(v82 + 8 * v98);
            if (v97)
            {
LABEL_97:
              v94 = v98;
            }
            else
            {
              v94 = v84 + 4;
              if (v84 + 4 >= v89)
                break;
              v97 = *(_QWORD *)(v82 + 8 * v94);
              if (!v97)
              {
                v104 = v84 + 5;
                while (v89 != v104)
                {
                  v97 = *(_QWORD *)(v82 + 8 * v104++);
                  if (v97)
                  {
                    v94 = v104 - 1;
                    goto LABEL_98;
                  }
                }
                break;
              }
            }
          }
LABEL_98:
          v95 = (v97 - 1) & v97;
          v96 = __clz(__rbit64(v97)) + (v94 << 6);
        }
        v93 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v96);
      }
    }
    sub_10022E5B4(v16);
    return;
  }
  v105 = 0;
  while (1)
  {
    v111 = v44;
    swift_dynamicCast(&v112, &v111, (char *)&type metadata for Swift.AnyObject + 8, v41, 7);
    v46 = objc_msgSend(v112, "type");
    v47 = v112;
    if (v46 == (id)2)
      break;

LABEL_42:
    v44 = __CocoaSet.Iterator.next()(v45);
    if (!v44)
      goto LABEL_57;
  }
  v48 = v113[0];
  v49 = *(_QWORD *)(v113[0] + 16);
  if (*(_QWORD *)(v113[0] + 24) <= v49)
  {
    sub_100460784(v49 + 1);
    v48 = v113[0];
  }
  v45 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v48 + 40));
  v50 = v48 + 56;
  v51 = -1 << *(_BYTE *)(v48 + 32);
  v52 = v45 & ~v51;
  v53 = v52 >> 6;
  if (((-1 << v52) & ~*(_QWORD *)(v48 + 56 + 8 * (v52 >> 6))) != 0)
  {
    v54 = __clz(__rbit64((-1 << v52) & ~*(_QWORD *)(v48 + 56 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0;
LABEL_56:
    *(_QWORD *)(v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
    *(_QWORD *)(*(_QWORD *)(v48 + 48) + 8 * v54) = v47;
    ++*(_QWORD *)(v48 + 16);
    goto LABEL_42;
  }
  v55 = 0;
  v56 = (unint64_t)(63 - v51) >> 6;
  while (++v53 != v56 || (v55 & 1) == 0)
  {
    v57 = v53 == v56;
    if (v53 == v56)
      v53 = 0;
    v55 |= v57;
    v58 = *(_QWORD *)(v50 + 8 * v53);
    if (v58 != -1)
    {
      v54 = __clz(__rbit64(~v58)) + (v53 << 6);
      goto LABEL_56;
    }
  }
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_29:
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100221DF8(v34, (uint64_t)qword_1007C5FF8);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    v39 = "MacUnlockPhone isn't enabled, not registering";
    goto LABEL_31;
  }
LABEL_32:

}

void sub_100546FD4(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  unsigned int v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[5];
  void *v33;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v6 = sub_1002EF0A8();
    v7 = Set.Iterator.init(_cocoa:)(v32, v4, v5, v6);
    v2 = v32[0];
    v29 = v32[1];
    v8 = v32[2];
    v9 = v32[3];
    v10 = v32[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v28 = (unint64_t)(v8 + 64) >> 6;
  while (1)
  {
    v14 = v9;
    if (v2 < 0)
    {
      v17 = __CocoaSet.Iterator.next()(v7);
      v18 = v17;
      if (!v17)
        goto LABEL_36;
      v31 = v17;
      v19 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v18);
      swift_dynamicCast(&v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
      v20 = v33;
      swift_unknownObjectRelease(v18);
      if (!v20)
        goto LABEL_36;
      goto LABEL_34;
    }
    if (!v10)
      break;
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v16 = v15 | (v9 << 6);
LABEL_33:
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_36;
LABEL_34:
    v24 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
    if (!v24)
      goto LABEL_38;
    v25 = v24;
    v26 = objc_msgSend(v20, "uniqueID");
    v27 = objc_msgSend(v25, *a2, v26);

    if (v27)
      goto LABEL_36;
  }
  v21 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v21 >= v28)
      goto LABEL_36;
    v22 = *(_QWORD *)(v29 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v14 + 2;
      if (v14 + 2 >= v28)
        goto LABEL_36;
      v22 = *(_QWORD *)(v29 + 8 * v9);
      if (!v22)
      {
        v9 = v14 + 3;
        if (v14 + 3 >= v28)
          goto LABEL_36;
        v22 = *(_QWORD *)(v29 + 8 * v9);
        if (!v22)
        {
          v9 = v14 + 4;
          if (v14 + 4 >= v28)
            goto LABEL_36;
          v22 = *(_QWORD *)(v29 + 8 * v9);
          if (!v22)
          {
            v9 = v14 + 5;
            if (v14 + 5 >= v28)
              goto LABEL_36;
            v22 = *(_QWORD *)(v29 + 8 * v9);
            if (!v22)
            {
              v23 = v14 + 6;
              while (v28 != v23)
              {
                v22 = *(_QWORD *)(v29 + 8 * v23++);
                if (v22)
                {
                  v9 = v23 - 1;
                  goto LABEL_32;
                }
              }
LABEL_36:
              sub_10022E5B4(v2);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v10 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v9 << 6);
    goto LABEL_33;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100547314()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _BYTE v26[24];
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (qword_1007B42C0 != -1)
LABEL_32:
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007C5FF8);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    v12 = (char *)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers;
    swift_beginAccess((char *)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers, v26, 0, 0);
    v27 = *(_QWORD *)(*(_QWORD *)v12 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v11 + 4);

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Reporting authenticationStateChanged to %ld observers", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {

    v9 = v8;
  }

  v13 = (uint64_t *)((char *)v8
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers);
  swift_beginAccess(v13, &v27, 0, 0);
  v14 = *v13;
  v0 = (char *)(v14 + 64);
  v15 = 1 << *(_BYTE *)(v14 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v14 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(v14);
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_10;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v18)
      return swift_release(v14);
    v23 = *(_QWORD *)&v0[8 * v22];
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        return swift_release(v14);
      v23 = *(_QWORD *)&v0[8 * v19];
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          return swift_release(v14);
        v23 = *(_QWORD *)&v0[8 * v19];
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v18)
            return swift_release(v14);
          v23 = *(_QWORD *)&v0[8 * v19];
          if (!v23)
            break;
        }
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_10:
    objc_msgSend(*(id *)(*(_QWORD *)(v14 + 56) + 8 * v21), "stateDidChange");
  }
  v24 = v22 + 4;
  if (v24 < v18)
  {
    v23 = *(_QWORD *)&v0[8 * v24];
    if (!v23)
    {
      while (1)
      {
        v19 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_30;
        if (v19 >= v18)
          return swift_release(v14);
        v23 = *(_QWORD *)&v0[8 * v19];
        ++v24;
        if (v23)
          goto LABEL_27;
      }
    }
    v19 = v24;
    goto LABEL_27;
  }
  return swift_release(v14);
}

uint64_t sub_10054763C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StateMetrics(0);
  v12 = v2 + *(int *)(v11 + 32);
  sub_100221F28(v12, (uint64_t)v6, &qword_1007C4330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000D0F0((uint64_t)v6, &qword_1007C4330);
LABEL_4:
    v12 = v2 + *(int *)(v11 + 28);
    return sub_100221F28(v12, a1, &qword_1007C4330);
  }
  v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v14 = Date.timeIntervalSinceNow.getter(v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v14 > 60.0)
    goto LABEL_4;
  return sub_100221F28(v12, a1, &qword_1007C4330);
}

uint64_t sub_1005477AC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1005477CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1005477EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007C5FF8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007C5FF8);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1005478B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id result;
  uint64_t v17;
  _QWORD *v18;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v18 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v13 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  v14 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000020, 0x8000000100621650, v9, v6, v3, 0);
  v15 = objc_allocWithZone((Class)type metadata accessor for SDAuthenticationManager(0));
  result = sub_100547BDC(v14);
  qword_1007D88A8 = (uint64_t)result;
  return result;
}

void sub_100547AF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 32);
  sub_10023A834((_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      v8 = v5 + 32;
      while (1)
      {
        sub_100244418(v8, (uint64_t)&v11);
        v9 = v12;
        v10 = v13;
        sub_10023A834(&v11, v12);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10) & 1) != 0)
          break;
        sub_10022E75C(&v11);
        v8 += 40;
        if (!--v7)
          goto LABEL_6;
      }
      sub_10026EE60(&v11, a1);
    }
    else
    {
LABEL_6:
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    __break(1u);
  }
}

id sub_100547BDC(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  _QWORD *v6;
  NSString v7;
  id v8;
  objc_class *v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  uint64_t v29;
  _QWORD v32[5];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = objc_allocWithZone((Class)IDSService);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithService:", v7);

  if (v8)
  {
    v9 = (objc_class *)type metadata accessor for SDAuthenticationSecurityManager(0);
    v10 = objc_allocWithZone(v9);
    v11 = a1;
    v12 = sub_1002D0C10(v11);
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007C5FF8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Initializing transport manager", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = v11;
    v19 = sub_1004B30D0(v18);

    v32[3] = v9;
    v32[4] = &off_100721258;
    v32[0] = v12;
    v20 = objc_allocWithZone(ObjectType);
    v21 = sub_10026EEE8((uint64_t)v32, (uint64_t)v9);
    __chkstk_darwin(v21);
    v23 = (_QWORD *)((char *)&v32[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v24 + 16))(v23);
    v25 = *v23;
    v26 = v12;
    v27 = v8;
    sub_10056E52C(v18, v25, v19, (uint64_t)v27, v20);
    v8 = v28;

    sub_10022E75C(v32);
  }
  else
  {

  }
  v29 = swift_getObjectType(v6);
  swift_deallocPartialClassInstance(v6, v29, *(unsigned int *)((swift_isaMask & *v6) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v6) + 0x34));
  return v8;
}

id sub_100547E8C()
{
  id result;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSDictionary v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v1 = result;
  v2 = objc_msgSend(result, "awdlInfo");

  if (v2)
  {
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v3 = 0;
  }
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007C5FF8);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    if (v3)
    {
      v10 = Dictionary.description.getter(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v12 = v11;
    }
    else
    {
      v12 = 0x80000001006178A0;
      v10 = 0xD000000000000012;
    }
    v16 = sub_100228BD8(v10, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4);
    swift_bridgeObjectRelease_n(v3, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AWDLInfo = %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    if (!v3)
      goto LABEL_14;
  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
    if (!v3)
    {
LABEL_14:
      v13.super.isa = 0;
      goto LABEL_15;
    }
  }
  v13.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
LABEL_15:
  v14 = sub_1000C7CE0(v13.super.isa);

  if (!v14)
    return 0;
  v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);

  return (id)v15;
}

uint64_t sub_100548144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v10 = a4 & 1;
  sub_100244418(a5, a6);
  sub_100244418(a2, a6 + 40);
  v11 = (int *)type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v12 = a6 + v11[6];
  v13 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a1, v13);
  *(_QWORD *)(a6 + v11[7]) = a3;
  *(_BYTE *)(a6 + v11[8]) = v10;
  return result;
}

uint64_t sub_1005481DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _UNKNOWN **v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  char *v109;
  char *v110;
  uint64_t (*v111)(uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  _QWORD *v118;
  uint64_t v119;
  int *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _UNKNOWN **v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t, uint64_t, uint64_t);
  char *v145;
  char *v146;
  char *v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  int *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _UNKNOWN **v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  char *v173;
  int *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t, uint64_t);
  char *v181;
  char *v182;
  char *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(char *, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t (*v191)(uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  _QWORD *v197;
  uint64_t v198;
  int *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _UNKNOWN **v203;
  _QWORD *v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(char *, uint64_t, uint64_t, uint64_t);
  char *v214;
  char *v215;
  char *v216;
  char v217;
  char *v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  int *v229;
  _QWORD *v230;
  void *v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  char *v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  void (*v245)(char *, uint64_t, uint64_t, uint64_t);
  char *v246;
  unsigned __int8 v247;
  char *v248;
  char *v249;
  id v250;
  id v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  _QWORD *v261;
  id v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  void *v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int *v273;
  uint64_t *v274;
  uint64_t *v275;
  uint64_t *v276;
  _QWORD *v277;
  uint64_t v278;
  int *v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  _UNKNOWN **v283;
  _QWORD *v284;
  _QWORD *v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t *v289;
  _QWORD *v290;
  uint64_t v291;
  int *v292;
  _QWORD *v293;
  uint64_t v294;
  uint64_t v295;
  _UNKNOWN **v296;
  _QWORD *v297;
  _QWORD *v298;
  _QWORD *v299;
  uint64_t result;
  uint64_t v301;
  Swift::String v302;
  void *object;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t *v310;
  char *v311;
  _QWORD *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  char *v329;
  char *v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  char v339[8];
  char v340[8];
  char *v341;
  uint64_t v342;
  _UNKNOWN **v343;
  __int128 v344;
  uint64_t v345;
  _UNKNOWN **v346;

  v326 = a3;
  v334 = (char *)a2;
  v337 = a4;
  v313 = _s15MacApprovePhoneV17InitialKeyContextVMa(0);
  __chkstk_darwin(v313);
  v312 = (uint64_t *)((char *)&v304 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v324 = _s15MacApprovePhoneV4FlowVMa(0);
  __chkstk_darwin(v324);
  v325 = (char *)&v304 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = _s15MacApprovePhoneV18InitialLockContextVMa(0);
  __chkstk_darwin(v317);
  v316 = (uint64_t *)((char *)&v304 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v309 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
  __chkstk_darwin(v309);
  v310 = (uint64_t *)((char *)&v304 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v322 = _s14MacUnlockPhoneV4FlowVMa(0);
  __chkstk_darwin(v322);
  v323 = (char *)&v304 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for UUID(0);
  v333 = *(_QWORD *)(v335 - 8);
  v10 = __chkstk_darwin(v335);
  v330 = (char *)&v304 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v304 - v13;
  v15 = __chkstk_darwin(v12);
  v315 = (char *)&v304 - v16;
  __chkstk_darwin(v15);
  v311 = (char *)&v304 - v17;
  v306 = _s14MacUnlockPhoneV18InitialLockContextVMa(0);
  __chkstk_darwin(v306);
  v308 = (char *)&v304 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = _s10NanoWalletV17InitialKeyContextVMa(0);
  __chkstk_darwin(v319);
  v320 = (char *)&v304 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = _s10NanoWalletV4FlowVMa(0);
  __chkstk_darwin(v328);
  v329 = (char *)&v304 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  v22 = __chkstk_darwin(v21);
  v304 = (uint64_t)&v304 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v336 = (uint64_t)&v304 - v24;
  v25 = sub_100008384(&qword_1007C4330);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v304 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v307 = (char *)&v304 - v30;
  v31 = __chkstk_darwin(v29);
  v305 = (uint64_t)&v304 - v32;
  v33 = __chkstk_darwin(v31);
  v331 = (char *)&v304 - v34;
  v35 = __chkstk_darwin(v33);
  v314 = (uint64_t)&v304 - v36;
  v37 = __chkstk_darwin(v35);
  v318 = (uint64_t)&v304 - v38;
  v39 = __chkstk_darwin(v37);
  v321 = (char *)&v304 - v40;
  __chkstk_darwin(v39);
  v327 = (char *)&v304 - v41;
  v42 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0);
  v43 = __chkstk_darwin(v42);
  v45 = (char *)&v304 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __chkstk_darwin(v43);
  v48 = (char *)&v304 - v47;
  v49 = __chkstk_darwin(v46);
  v51 = (char *)&v304 - v50;
  v52 = __chkstk_darwin(v49);
  v54 = (char *)&v304 - v53;
  __chkstk_darwin(v52);
  v56 = (char *)&v304 - v55;
  v57 = _s10NanoWalletV18InitialLockContextVMa(0);
  v58 = __chkstk_darwin(v57);
  v60 = (uint64_t *)((char *)&v304 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  v332 = v21;
  v61 = (char *)*(int *)(v21 + 28);
  v62 = *(int *)(v21 + 32);
  v63 = *(_QWORD *)&v61[(_QWORD)a1];
  v338 = a1;
  v64 = *((_BYTE *)a1 + v62);
  if (v63 == 7)
  {
    v72 = v330;
    v334 = v28;
    if ((v64 & 1) == 0)
    {
      v166 = v62;
      v167 = v61;
      sub_100221F28(v326, (uint64_t)&v344, &qword_1007C62D8);
      v168 = v338;
      v169 = v333;
      if (v345)
      {
        v170 = sub_100008384(&qword_1007C62F0);
        v171 = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
        v172 = swift_dynamicCast(&v341, &v344, v170, v171, 6);
        v173 = v341;
        if (!v172)
          v173 = 0;
        v331 = v173;
      }
      else
      {
        sub_10000D0F0((uint64_t)&v344, &qword_1007C62D8);
        v331 = 0;
      }
      v235 = v332;
      v236 = v14;
      v237 = *((_BYTE *)v168 + v166);
      sub_100244418((uint64_t)(v168 + 5), (uint64_t)&v344);
      v238 = v335;
      (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v14, (char *)v168 + *(int *)(v235 + 24), v335);
      v239 = *(_QWORD *)&v167[(_QWORD)v168];
      v240 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
      v241 = swift_allocObject(v240, *(unsigned int *)(v240 + 48), *(unsigned __int16 *)(v240 + 52));
      *(_QWORD *)(v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
      v242 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
      if (!v242)
        goto LABEL_56;
      v243 = (uint64_t)v48;
      *(_QWORD *)(v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v242;
      *(_BYTE *)(v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v237;
      sub_10026EE60(&v344, v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
      (*(void (**)(uint64_t, char *, uint64_t))(v169 + 32))(v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v236, v238);
      *(_QWORD *)(v241 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v239;
      v345 = v240;
      v346 = &off_10072E390;
      *(_QWORD *)&v344 = v241;
      v244 = type metadata accessor for Date(0);
      v245 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 56);
      v245(v48, 1, 1, v244);
      v245(&v48[v42[5]], 1, 1, v244);
      v245(&v48[v42[6]], 1, 1, v244);
      v245(&v48[v42[7]], 1, 1, v244);
      v245(&v48[v42[8]], 1, 1, v244);
      v245(&v48[v42[9]], 1, 1, v244);
      v245(&v48[v42[10]], 1, 1, v244);
      v245(&v48[v42[11]], 1, 1, v244);
      v245(&v48[v42[12]], 1, 1, v244);
      v48[v42[13]] = 0;
      v245(&v48[v42[14]], 1, 1, v244);
      v245(&v48[v42[15]], 1, 1, v244);
      v245(&v48[v42[16]], 1, 1, v244);
      v245(&v48[v42[17]], 1, 1, v244);
      v246 = &v48[v42[18]];
      *(_DWORD *)v246 = 0;
      v246[4] = 1;
      v247 = 2;
      v48[v42[19]] = 2;
      v248 = &v48[v42[20]];
      *(_QWORD *)v248 = 0;
      *((_QWORD *)v248 + 1) = 0;
      v249 = &v48[v42[21]];
      *(_QWORD *)v249 = 0;
      *((_QWORD *)v249 + 1) = 0;
      v245(v334, 1, 1, v244);
      v250 = v331;
      if (v331)
      {
        v251 = objc_msgSend(v331, "bundleID");
        if (v251)
        {
          v252 = v251;
          v253 = static String._unconditionallyBridgeFromObjectiveC(_:)(v251);
          v255 = v254;

        }
        else
        {
          v253 = 0;
          v255 = 0;
        }
        v262 = objc_msgSend(v250, "appName");
        if (v262)
        {
          v263 = v262;
          v259 = v255;
          v264 = static String._unconditionallyBridgeFromObjectiveC(_:)(v262);
          v266 = v265;

        }
        else
        {
          v259 = v255;
          v264 = 0;
          v266 = 0;
        }
        v333 = v266;
        v267 = v264;
        v247 = objc_msgSend(v250, "biometricOnly");
        v268 = objc_msgSend(v250, "acmContext");
        if (v268)
        {
          v269 = v268;
          v335 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v268);
          v260 = v270;

        }
        else
        {
          v335 = 0;
          v260 = 0xF000000000000000;
        }
        v261 = v338;
        v258 = v253;
        v256 = v267;
        v257 = v333;
      }
      else
      {
        v335 = 0;
        v256 = 0;
        v257 = 0;
        v258 = 0;
        v259 = 0;
        v260 = 0xF000000000000000;
        v261 = v338;
      }
      v271 = sub_10023B4B4();
      v272 = (uint64_t)v316;
      *v316 = v271;
      sub_10026EE60(&v344, v272 + 8);
      v273 = (int *)v317;
      sub_100221DB4(v243, v272 + *(int *)(v317 + 24), type metadata accessor for SDAuthenticationSessionMetrics);
      sub_10022E718((uint64_t)v334, v272 + v273[7], &qword_1007C4330);
      v274 = (uint64_t *)(v272 + v273[8]);
      *v274 = v258;
      v274[1] = v259;
      v275 = (uint64_t *)(v272 + v273[9]);
      *v275 = v256;
      v275[1] = v257;
      *(_BYTE *)(v272 + v273[10]) = v247;
      v276 = (uint64_t *)(v272 + v273[11]);
      *v276 = v335;
      v276[1] = v260;
      *(_QWORD *)(v272 + v273[12]) = 0;
      *(_BYTE *)(v272 + v273[13]) = 10;
      v342 = (uint64_t)v273;
      v343 = &off_10071E2E8;
      v277 = sub_100244348(&v341);
      v89 = _s15MacApprovePhoneV18InitialLockContextVMa;
      sub_100244384(v272, (uint64_t)v277, _s15MacApprovePhoneV18InitialLockContextVMa);
      v278 = v336;
      sub_100244384((uint64_t)v261, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
      v279 = (int *)v324;
      v345 = v324;
      v346 = &off_10071E300;
      v280 = sub_100244348(&v344);
      v281 = (uint64_t)v325;
      *(_QWORD *)&v325[v279[6]] = _swiftEmptyArrayStorage;
      *(_QWORD *)(v281 + v279[7]) = _swiftEmptyArrayStorage;
      v282 = v342;
      v283 = v343;
      v284 = sub_10023A834(&v341, v342);
      v285 = (_QWORD *)(v281 + v279[5]);
      v285[3] = v282;
      v285[4] = *((_QWORD *)v283[1] + 1);
      v286 = sub_100244348(v285);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(v286, v284, v282);
      sub_100221DB4(v278, v281, type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_100221DB4(v281, (uint64_t)v280, _s15MacApprovePhoneV4FlowVMa);
      sub_10022E75C(&v341);

      v128 = v272;
LABEL_48:
      sub_1002443C8(v128, v89);
      return sub_10026EE60(&v344, v337);
    }
    v73 = type metadata accessor for Date(0);
    v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
    v74(v45, 1, 1, v73);
    v74(&v45[v42[5]], 1, 1, v73);
    v74(&v45[v42[6]], 1, 1, v73);
    v74(&v45[v42[7]], 1, 1, v73);
    v74(&v45[v42[8]], 1, 1, v73);
    v74(&v45[v42[9]], 1, 1, v73);
    v74(&v45[v42[10]], 1, 1, v73);
    v74(&v45[v42[11]], 1, 1, v73);
    v74(&v45[v42[12]], 1, 1, v73);
    v45[v42[13]] = 0;
    v74(&v45[v42[14]], 1, 1, v73);
    v74(&v45[v42[15]], 1, 1, v73);
    v74(&v45[v42[16]], 1, 1, v73);
    v74(&v45[v42[17]], 1, 1, v73);
    v75 = &v45[v42[18]];
    *(_DWORD *)v75 = 0;
    v75[4] = 1;
    v45[v42[19]] = 2;
    v76 = &v45[v42[20]];
    *(_QWORD *)v76 = 0;
    *((_QWORD *)v76 + 1) = 0;
    v77 = &v45[v42[21]];
    *(_QWORD *)v77 = 0;
    *((_QWORD *)v77 + 1) = 0;
    v78 = (char *)v338;
    sub_100244418((uint64_t)(v338 + 5), (uint64_t)&v344);
    v79 = v333;
    v80 = v335;
    (*(void (**)(char *, char *, uint64_t))(v333 + 16))(v72, &v78[*(int *)(v332 + 24)], v335);
    v81 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
    v82 = swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
    *(_QWORD *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
    v83 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
    v84 = (uint64_t)v325;
    v85 = v324;
    if (!v83)
    {
      __break(1u);
      goto LABEL_54;
    }
    *(_QWORD *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v83;
    *(_BYTE *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
    sub_10026EE60(&v344, v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v72, v80);
    *(_QWORD *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 7;
    v345 = v81;
    v346 = &off_10072E390;
    *(_QWORD *)&v344 = v82;
    v86 = v312;
    *v312 = _swiftEmptyArrayStorage;
    v87 = v313;
    sub_100221DB4((uint64_t)v45, (uint64_t)v86 + *(int *)(v313 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
    sub_10026EE60(&v344, (uint64_t)v86 + *(int *)(v87 + 24));
    v342 = v87;
    v343 = &off_10071E358;
    v88 = sub_100244348(&v341);
    v89 = _s15MacApprovePhoneV17InitialKeyContextVMa;
    sub_100244384((uint64_t)v86, (uint64_t)v88, _s15MacApprovePhoneV17InitialKeyContextVMa);
    v90 = v336;
    sub_100244384((uint64_t)v78, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
    v345 = v85;
    v346 = &off_10071E300;
    v91 = sub_100244348(&v344);
    *(_QWORD *)(v84 + *(int *)(v85 + 24)) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v84 + *(int *)(v85 + 28)) = _swiftEmptyArrayStorage;
    v92 = v85;
    v93 = v342;
    v94 = v343;
    v95 = sub_10023A834(&v341, v342);
    v96 = (_QWORD *)(v84 + *(int *)(v92 + 20));
    v96[3] = v93;
    v96[4] = *((_QWORD *)v94[1] + 1);
    v97 = sub_100244348(v96);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v97, v95, v93);
    sub_100221DB4(v90, v84, type metadata accessor for SDAuthenticationCommonOperationInput);
    v98 = _s15MacApprovePhoneV4FlowVMa;
    v99 = v84;
    v100 = (uint64_t)v91;
LABEL_14:
    sub_100221DB4(v99, v100, v98);
    sub_10022E75C(&v341);
    v128 = (uint64_t)v86;
    goto LABEL_48;
  }
  if (v63 == 6)
  {
    if ((*((_BYTE *)a1 + v62) & 1) != 0)
    {
      v329 = v61;
      sub_100221F28(v326, (uint64_t)&v344, &qword_1007C62D8);
      v65 = v338;
      v66 = v335;
      v67 = v62;
      if (v345)
      {
        v68 = sub_100008384(&qword_1007C62F0);
        v69 = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
        v70 = swift_dynamicCast(&v341, &v344, v68, v69, 6);
        v71 = v341;
        if (!v70)
          v71 = 0;
        v330 = v71;
      }
      else
      {
        sub_10000D0F0((uint64_t)&v344, &qword_1007C62D8);
        v330 = 0;
      }
      v207 = v65[8];
      v208 = v65[9];
      sub_10023A834(v65 + 5, v207);
      v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v208 + 8))(v207, v208);
      if (v210)
      {
        v211 = v210;
        sub_10054A47C(v209, v210, (uint64_t)v331);
        swift_bridgeObjectRelease(v211);
        v212 = type metadata accessor for Date(0);
        v213 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 56);
        v213(v51, 1, 1, v212);
        v213(&v51[v42[5]], 1, 1, v212);
        v213(&v51[v42[6]], 1, 1, v212);
        v213(&v51[v42[7]], 1, 1, v212);
        v213(&v51[v42[8]], 1, 1, v212);
        v213(&v51[v42[9]], 1, 1, v212);
        v213(&v51[v42[10]], 1, 1, v212);
        v213(&v51[v42[11]], 1, 1, v212);
        v213(&v51[v42[12]], 1, 1, v212);
        v51[v42[13]] = 0;
        v213(&v51[v42[14]], 1, 1, v212);
        v213(&v51[v42[15]], 1, 1, v212);
        v213(&v51[v42[16]], 1, 1, v212);
        v213(&v51[v42[17]], 1, 1, v212);
        v214 = &v51[v42[18]];
        *(_DWORD *)v214 = 0;
        v214[4] = 1;
        v51[v42[19]] = 2;
        v215 = &v51[v42[20]];
        *(_QWORD *)v215 = 0;
        *((_QWORD *)v215 + 1) = 0;
        v216 = &v51[v42[21]];
        *(_QWORD *)v216 = 0;
        *((_QWORD *)v216 + 1) = 0;
        v217 = *((_BYTE *)v65 + v67);
        sub_100244418((uint64_t)(v65 + 5), (uint64_t)&v344);
        v218 = (char *)v65 + *(int *)(v332 + 24);
        v219 = v333;
        v220 = v65;
        v221 = v315;
        (*(void (**)(char *, char *, uint64_t))(v333 + 16))(v315, v218, v66);
        v222 = *(_QWORD *)&v329[(_QWORD)v220];
        v223 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
        v224 = swift_allocObject(v223, *(unsigned int *)(v223 + 48), *(unsigned __int16 *)(v223 + 52));
        *(_QWORD *)(v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
        v225 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
        if (v225)
        {
          *(_QWORD *)(v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v225;
          *(_BYTE *)(v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v217;
          sub_10026EE60(&v344, v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
          (*(void (**)(uint64_t, char *, uint64_t))(v219 + 32))(v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v221, v66);
          *(_QWORD *)(v224 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v222;
          v345 = v223;
          v346 = &off_10072E390;
          *(_QWORD *)&v344 = v224;
          v226 = v305;
          sub_100221F28((uint64_t)v331, v305, &qword_1007C4330);
          v227 = (uint64_t)v307;
          v213(v307, 1, 1, v212);
          if (v330)
          {
            v228 = objc_msgSend(v330, "authorizationToken");
            v229 = (int *)v309;
            v230 = v338;
            if (v228)
            {
              v231 = v228;
              v232 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v228);
              v234 = v233;

            }
            else
            {
              v232 = 0;
              v234 = 0xF000000000000000;
            }
          }
          else
          {
            v232 = 0;
            v234 = 0xF000000000000000;
            v229 = (int *)v309;
            v230 = v338;
          }
          v287 = sub_1003BBF44();
          v288 = (uint64_t)v310;
          *v310 = v287;
          sub_100221DB4((uint64_t)v51, v288 + v229[5], type metadata accessor for SDAuthenticationSessionMetrics);
          sub_10026EE60(&v344, v288 + v229[6]);
          sub_10022E718(v226, v288 + v229[7], &qword_1007C4330);
          sub_10022E718(v227, v288 + v229[8], &qword_1007C4330);
          v289 = (uint64_t *)(v288 + v229[9]);
          *v289 = v232;
          v289[1] = v234;
          *(_QWORD *)(v288 + v229[10]) = 0;
          *(_BYTE *)(v288 + v229[11]) = 0;
          v342 = (uint64_t)v229;
          v343 = &off_1007265C0;
          v290 = sub_100244348(&v341);
          sub_100244384(v288, (uint64_t)v290, _s14MacUnlockPhoneV17InitialKeyContextVMa);
          v291 = v336;
          sub_100244384((uint64_t)v230, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
          v292 = (int *)v322;
          v345 = v322;
          v346 = &off_100726568;
          v293 = sub_100244348(&v344);
          v294 = (uint64_t)v323;
          *(_QWORD *)&v323[v292[6]] = _swiftEmptyArrayStorage;
          *(_QWORD *)(v294 + v292[7]) = _swiftEmptyArrayStorage;
          v295 = v342;
          v296 = v343;
          v297 = sub_10023A834(&v341, v342);
          v298 = (_QWORD *)(v294 + v292[5]);
          v298[3] = v295;
          v298[4] = *((_QWORD *)v296[1] + 1);
          v299 = sub_100244348(v298);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v295 - 8) + 16))(v299, v297, v295);
          sub_100221DB4(v291, v294, type metadata accessor for SDAuthenticationCommonOperationInput);
          sub_100221DB4(v294, (uint64_t)v293, _s14MacUnlockPhoneV4FlowVMa);
          sub_10022E75C(&v341);

          sub_1002443C8(v288, _s14MacUnlockPhoneV17InitialKeyContextVMa);
          v165 = (uint64_t)v331;
          goto LABEL_51;
        }
        goto LABEL_58;
      }
      goto LABEL_55;
    }
    v129 = (char *)v338;
    v130 = v338[8];
    v131 = v338[9];
    sub_10023A834(v338 + 5, v130);
    v132 = (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 8))(v130, v131);
    v134 = v335;
    if (v133)
    {
      v135 = v133;
      v136 = v314;
      v137 = (uint64_t)v334;
      sub_10054A47C(v132, v133, v314);
      swift_bridgeObjectRelease(v135);
      sub_100244418((uint64_t)(v129 + 40), (uint64_t)&v344);
      v138 = v333;
      v139 = v311;
      (*(void (**)(char *, char *, uint64_t))(v333 + 16))(v311, &v129[*(int *)(v332 + 24)], v134);
      v140 = type metadata accessor for SDAuthenticationAKSAuthSession(0);
      v141 = swift_allocObject(v140, *(unsigned int *)(v140 + 48), *(unsigned __int16 *)(v140 + 52));
      *(_QWORD *)(v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
      v142 = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
      if (v142)
      {
        *(_QWORD *)(v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v142;
        *(_BYTE *)(v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 0;
        sub_10026EE60(&v344, v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
        (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v139, v134);
        *(_QWORD *)(v141 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 6;
        v345 = v140;
        v346 = &off_10072E390;
        *(_QWORD *)&v344 = v141;
        v143 = type metadata accessor for Date(0);
        v144 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56);
        v144(v54, 1, 1, v143);
        v144(&v54[v42[5]], 1, 1, v143);
        v144(&v54[v42[6]], 1, 1, v143);
        v144(&v54[v42[7]], 1, 1, v143);
        v144(&v54[v42[8]], 1, 1, v143);
        v144(&v54[v42[9]], 1, 1, v143);
        v144(&v54[v42[10]], 1, 1, v143);
        v144(&v54[v42[11]], 1, 1, v143);
        v144(&v54[v42[12]], 1, 1, v143);
        v54[v42[13]] = 0;
        v144(&v54[v42[14]], 1, 1, v143);
        v144(&v54[v42[15]], 1, 1, v143);
        v144(&v54[v42[16]], 1, 1, v143);
        v144(&v54[v42[17]], 1, 1, v143);
        v145 = &v54[v42[18]];
        *(_DWORD *)v145 = 0;
        v145[4] = 1;
        v54[v42[19]] = 2;
        v146 = &v54[v42[20]];
        *(_QWORD *)v146 = 0;
        *((_QWORD *)v146 + 1) = 0;
        v147 = &v54[v42[21]];
        *(_QWORD *)v147 = 0;
        *((_QWORD *)v147 + 1) = 0;
        v148 = (_QWORD *)(v137 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
        swift_beginAccess(v137 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager, v340, 0, 0);
        v149 = sub_10023A834(v148, v148[3]);
        v150 = v306;
        v151 = v308;
        v152 = (uint64_t)&v308[*(int *)(v306 + 32)];
        v153 = *v149 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess(v153, v339, 0, 0);
        sub_100221F28(v153, v152, &qword_1007C4330);
        *v151 = _swiftEmptyArrayStorage;
        sub_10026EE60(&v344, (uint64_t)(v151 + 1));
        sub_100221DB4((uint64_t)v54, (uint64_t)v151 + *(int *)(v150 + 24), type metadata accessor for SDAuthenticationSessionMetrics);
        sub_100221F28(v136, (uint64_t)v151 + *(int *)(v150 + 28), &qword_1007C4330);
        v342 = v150;
        v343 = &off_100726550;
        v154 = sub_100244348(&v341);
        sub_100244384((uint64_t)v151, (uint64_t)v154, _s14MacUnlockPhoneV18InitialLockContextVMa);
        v155 = v336;
        sub_100244384((uint64_t)v129, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
        v156 = (int *)v322;
        v345 = v322;
        v346 = &off_100726568;
        v157 = sub_100244348(&v344);
        v158 = v136;
        v159 = (uint64_t)v323;
        *(_QWORD *)&v323[v156[6]] = _swiftEmptyArrayStorage;
        *(_QWORD *)(v159 + v156[7]) = _swiftEmptyArrayStorage;
        v160 = v342;
        v161 = v343;
        v162 = sub_10023A834(&v341, v342);
        v163 = (_QWORD *)(v159 + v156[5]);
        v163[3] = v160;
        v163[4] = *((_QWORD *)v161[1] + 1);
        v164 = sub_100244348(v163);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v164, v162, v160);
        sub_100221DB4(v155, v159, type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_100221DB4(v159, (uint64_t)v157, _s14MacUnlockPhoneV4FlowVMa);
        sub_10022E75C(&v341);
        sub_1002443C8((uint64_t)v151, _s14MacUnlockPhoneV18InitialLockContextVMa);
        v165 = v158;
LABEL_51:
        sub_10000D0F0(v165, &qword_1007C4330);
        return sub_10026EE60(&v344, v337);
      }
      goto LABEL_57;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v101 = (uint64_t)v334;
  if (v63 == 2)
  {
    if ((*((_BYTE *)a1 + v62) & 1) == 0)
    {
      v174 = (int *)v58;
      v175 = v60;
      v176 = type metadata accessor for SDAuthenticationRangingSession(0);
      swift_allocObject(v176, *(unsigned int *)(v176 + 48), *(unsigned __int16 *)(v176 + 52));
      v177 = sub_100362188();
      v345 = v176;
      v346 = &off_1007241F0;
      *(_QWORD *)&v344 = v177;
      v178 = type metadata accessor for Date(0);
      v179 = *(_QWORD *)(v178 - 8);
      v180 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56);
      v180(v56, 1, 1, v178);
      v180(&v56[v42[5]], 1, 1, v178);
      v180(&v56[v42[6]], 1, 1, v178);
      v180(&v56[v42[7]], 1, 1, v178);
      v180(&v56[v42[8]], 1, 1, v178);
      v180(&v56[v42[9]], 1, 1, v178);
      v180(&v56[v42[10]], 1, 1, v178);
      v180(&v56[v42[11]], 1, 1, v178);
      v180(&v56[v42[12]], 1, 1, v178);
      v56[v42[13]] = 0;
      v180(&v56[v42[14]], 1, 1, v178);
      v180(&v56[v42[15]], 1, 1, v178);
      v180(&v56[v42[16]], 1, 1, v178);
      v180(&v56[v42[17]], 1, 1, v178);
      v181 = &v56[v42[18]];
      *(_DWORD *)v181 = 0;
      v181[4] = 1;
      v56[v42[19]] = 2;
      v182 = &v56[v42[20]];
      *(_QWORD *)v182 = 0;
      *((_QWORD *)v182 + 1) = 0;
      v183 = &v56[v42[21]];
      *(_QWORD *)v183 = 0;
      *((_QWORD *)v183 + 1) = 0;
      v180(v327, 1, 1, v178);
      v184 = (_QWORD *)(v101 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
      swift_beginAccess(v101 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager, v340, 0, 0);
      v185 = *sub_10023A834(v184, v184[3])
           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess(v185, v339, 0, 0);
      v186 = v185;
      v187 = v318;
      sub_100221F28(v186, v318, &qword_1007C4330);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v187, 1, v178) == 1)
      {
        v188 = (uint64_t)v321;
        static Date.distantFuture.getter();
        sub_10000D0F0(v187, &qword_1007C4330);
      }
      else
      {
        v189 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
        v188 = (uint64_t)v321;
        v189(v321, v187, v178);
      }
      v180((char *)v188, 0, 1, v178);
      v191 = *(uint64_t (**)(uint64_t))(v101
                                               + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo);
      v190 = *(_QWORD *)(v101 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8);
      v192 = swift_retain(v190);
      v193 = v191(v192);
      v195 = v194;
      swift_release(v190);
      *v175 = sub_10028B6D8();
      sub_10026EE60(&v344, (uint64_t)(v175 + 1));
      sub_100221DB4((uint64_t)v56, (uint64_t)v175 + v174[6], type metadata accessor for SDAuthenticationSessionMetrics);
      sub_10022E718((uint64_t)v327, (uint64_t)v175 + v174[7], &qword_1007C4330);
      sub_10022E718(v188, (uint64_t)v175 + v174[8], &qword_1007C4330);
      v196 = (uint64_t *)((char *)v175 + v174[9]);
      *v196 = v193;
      v196[1] = v195;
      *(_OWORD *)((char *)v175 + v174[10]) = xmmword_1005CF260;
      *(uint64_t *)((char *)v175 + v174[11]) = 0;
      *((_BYTE *)v175 + v174[12]) = 0;
      v342 = (uint64_t)v174;
      v343 = &off_10071FC80;
      v197 = sub_100244348(&v341);
      v89 = _s10NanoWalletV18InitialLockContextVMa;
      sub_100244384((uint64_t)v175, (uint64_t)v197, _s10NanoWalletV18InitialLockContextVMa);
      v198 = v336;
      sub_100244384((uint64_t)v338, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
      v199 = (int *)v328;
      v345 = v328;
      v346 = &off_10071FC98;
      v200 = sub_100244348(&v344);
      v201 = (uint64_t)v329;
      *(_QWORD *)&v329[v199[6]] = _swiftEmptyArrayStorage;
      *(_QWORD *)(v201 + v199[7]) = _swiftEmptyArrayStorage;
      v202 = v342;
      v203 = v343;
      v204 = sub_10023A834(&v341, v342);
      v205 = (_QWORD *)(v201 + v199[5]);
      v205[3] = v202;
      v205[4] = *((_QWORD *)v203[1] + 1);
      v206 = sub_100244348(v205);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v206, v204, v202);
      sub_100221DB4(v198, v201, type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_100221DB4(v201, (uint64_t)v200, _s10NanoWalletV4FlowVMa);
      sub_10022E75C(&v341);
      v128 = (uint64_t)v175;
      goto LABEL_48;
    }
    v102 = type metadata accessor for SDAuthenticationRangingSession(0);
    swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
    v103 = sub_100362188();
    v86 = v320;
    *((_QWORD *)v320 + 4) = v102;
    v86[5] = &off_1007241F0;
    v86[1] = v103;
    v104 = v319;
    v105 = (char *)v86 + *(int *)(v319 + 24);
    v106 = type metadata accessor for Date(0);
    v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56);
    v107(v105, 1, 1, v106);
    v107(&v105[v42[5]], 1, 1, v106);
    v107(&v105[v42[6]], 1, 1, v106);
    v107(&v105[v42[7]], 1, 1, v106);
    v107(&v105[v42[8]], 1, 1, v106);
    v107(&v105[v42[9]], 1, 1, v106);
    v107(&v105[v42[10]], 1, 1, v106);
    v107(&v105[v42[11]], 1, 1, v106);
    v107(&v105[v42[12]], 1, 1, v106);
    v105[v42[13]] = 0;
    v107(&v105[v42[14]], 1, 1, v106);
    v107(&v105[v42[15]], 1, 1, v106);
    v107(&v105[v42[16]], 1, 1, v106);
    v107(&v105[v42[17]], 1, 1, v106);
    v108 = &v105[v42[18]];
    *(_DWORD *)v108 = 0;
    v108[4] = 1;
    v105[v42[19]] = 2;
    v109 = &v105[v42[20]];
    *(_QWORD *)v109 = 0;
    *((_QWORD *)v109 + 1) = 0;
    v110 = &v105[v42[21]];
    *(_QWORD *)v110 = 0;
    *((_QWORD *)v110 + 1) = 0;
    v111 = *(uint64_t (**)(uint64_t))(v101
                                             + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo);
    v112 = *(_QWORD *)(v101 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8);
    v113 = swift_retain(v112);
    v114 = v111(v113);
    v116 = v115;
    swift_release(v112);
    *v86 = _swiftEmptyArrayStorage;
    v117 = (_QWORD *)((char *)v86 + *(int *)(v104 + 28));
    *v117 = v114;
    v117[1] = v116;
    *(_OWORD *)((char *)v86 + *(int *)(v104 + 32)) = xmmword_1005CF260;
    v342 = v104;
    v343 = &off_10071FCF0;
    v118 = sub_100244348(&v341);
    v89 = _s10NanoWalletV17InitialKeyContextVMa;
    sub_100244384((uint64_t)v86, (uint64_t)v118, _s10NanoWalletV17InitialKeyContextVMa);
    v119 = v336;
    sub_100244384((uint64_t)v338, v336, type metadata accessor for SDAuthenticationCommonOperationInput);
    v120 = (int *)v328;
    v345 = v328;
    v346 = &off_10071FC98;
    v121 = sub_100244348(&v344);
    v122 = (uint64_t)v329;
    *(_QWORD *)&v329[v120[6]] = _swiftEmptyArrayStorage;
    *(_QWORD *)(v122 + v120[7]) = _swiftEmptyArrayStorage;
    v123 = v342;
    v124 = v343;
    v125 = sub_10023A834(&v341, v342);
    v126 = (_QWORD *)(v122 + v120[5]);
    v126[3] = v123;
    v126[4] = *((_QWORD *)v124[1] + 1);
    v127 = sub_100244348(v126);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v127, v125, v123);
    sub_100221DB4(v119, v122, type metadata accessor for SDAuthenticationCommonOperationInput);
    v98 = _s10NanoWalletV4FlowVMa;
    v99 = v122;
    v100 = (uint64_t)v121;
    goto LABEL_14;
  }
LABEL_59:
  v301 = v304;
  sub_100244384((uint64_t)v338, v304, type metadata accessor for SDAuthenticationCommonOperationInput);
  *(_QWORD *)&v344 = 0;
  *((_QWORD *)&v344 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(*((_QWORD *)&v344 + 1));
  *(_QWORD *)&v344 = 0xD000000000000022;
  *((_QWORD *)&v344 + 1) = 0x8000000100621750;
  v302._countAndFlagsBits = sub_1003FDAA0(*(_QWORD *)(v301 + *(int *)(v332 + 28)));
  object = v302._object;
  String.append(_:)(v302);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v344, *((_QWORD *)&v344 + 1), "DaemoniOSLibrary/SDAuthenticationManager.swift", 46, 2, 204, 0);
  __break(1u);
  return result;
}

uint64_t sub_10054A47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v7 = sub_100008384((uint64_t *)&unk_1007BD990);
  __chkstk_darwin(v7);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess(v17, v27, 32, 0);
    v18 = *v17;
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain(a2);
      v19 = sub_10045C200(a1, a2);
      if ((v20 & 1) != 0)
      {
        v21 = v19;
        v22 = *(_QWORD *)(v18 + 56);
        v23 = type metadata accessor for RegistrationState(0);
        v24 = *(_QWORD *)(v23 - 8);
        sub_100244384(v22 + *(_QWORD *)(v24 + 72) * v21, (uint64_t)v9, type metadata accessor for RegistrationState);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
      }
      else
      {
        v23 = type metadata accessor for RegistrationState(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
      }
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v23 = type metadata accessor for RegistrationState(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    }
    type metadata accessor for RegistrationState(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v9, 1, v23))
    {
      sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007BD990);
      swift_endAccess(v27);
      v25 = type metadata accessor for Date(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 1, 1, v25);
    }
    else
    {
      sub_100221F28((uint64_t)v9, a3, &qword_1007C4330);
      sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007BD990);
      return swift_endAccess(v27);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10054A6FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10[2];
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  __int128 v14[2];

  sub_100244418(a1, (uint64_t)v14);
  v3 = type metadata accessor for SDAuthenticationSessionExecutor(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  swift_defaultActor_initialize(v4);
  *(_QWORD *)(v4 + 152) = 0x402E000000000000;
  *(_QWORD *)(v4 + 160) = 0;
  v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_responseTimerContinuation;
  v6 = sub_100008384((uint64_t *)&unk_1007B5A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_currentMessage) = 0;
  sub_10026EE60(v14, v4 + 112);
  sub_100244418(v4 + 112, (uint64_t)v11);
  v7 = v12;
  v8 = v13;
  sub_10023A834(v11, v12);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 72))(v10, v7, v8);
  sub_10026EE60(v10, v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  result = sub_10022E75C(v11);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_100727B68;
  *a2 = v4;
  return result;
}

char *sub_10054A81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, char **a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  void (*v19)(char *, uint64_t);
  char *result;
  _QWORD v22[5];

  v14 = type metadata accessor for UUID(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v17 + 16))(v16, a1);
  sub_100244418(a2, (uint64_t)v22);
  v18 = (objc_class *)type metadata accessor for SDAuthenticationPairingLockSession(0);
  objc_allocWithZone(v18);
  v19 = a6;
  swift_bridgeObjectRetain(a4);
  result = sub_1002EA1C4(v19, v16, v22, a3, a4, a5);
  a7[3] = (char *)v18;
  a7[4] = (char *)&off_100721D38;
  *a7 = result;
  return result;
}

void sub_10054A918(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char **a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  char *v16;
  _BYTE v18[40];

  v10 = type metadata accessor for UUID(0);
  __chkstk_darwin(v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  sub_100244418(a2, (uint64_t)v18);
  v14 = (objc_class *)type metadata accessor for SDAuthenticationPairingKeySession(0);
  objc_allocWithZone(v14);
  v15 = a4;
  v16 = sub_1004919E8(v15, v12, (uint64_t)v18, a3);

  a5[3] = (char *)v14;
  a5[4] = (char *)&off_10072A688;
  *a5 = v16;
}

uint64_t sub_10054AA00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  id v18;
  uint64_t result;
  uint64_t v20;

  v12 = type metadata accessor for UUID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, a3);
  v16 = (objc_class *)type metadata accessor for SDAuthenticationLockSession(0);
  objc_allocWithZone(v16);
  v17 = a5;
  sub_10022E4A8(a1, a2);
  v18 = sub_1003EE3C4((uint64_t)v17, a1, a2, (uint64_t)v14, a4);
  result = sub_100225AB4(a1, a2);
  a6[3] = v16;
  a6[4] = &off_100727408;
  *a6 = v18;
  return result;
}

uint64_t sub_10054AAF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  objc_class *v17;
  _BYTE *v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;

  v26 = a5;
  v27 = a4;
  v28 = a6;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v25 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v25 - v14, a3, v9);
  v17 = (objc_class *)type metadata accessor for SDAuthenticationKeySession(0);
  v18 = objc_allocWithZone(v17);
  v19 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  v20 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(_QWORD *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0;
  *(_OWORD *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_1005CF260;
  v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v16(v13, (uint64_t)v15, v9);
  v21 = v26;
  sub_10022E4A8(a1, a2);
  v22 = sub_100278B64((uint64_t)v21, a1, a2, v13, v27);
  sub_100225AB4(a1, a2);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v24 = v28;
  v28[3] = v17;
  v24[4] = &off_100725228;
  *v24 = v22;
  return result;
}

uint64_t sub_10054ACA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  objc_class *v18;
  _BYTE *v19;
  char *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  _QWORD *v31;

  v29 = a4;
  v30 = a2;
  v31 = a5;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v28 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17((char *)&v28 - v15, a3, v7);
  v17(v14, (uint64_t)v16, v7);
  v18 = (objc_class *)type metadata accessor for SDAuthenticationKeySession(0);
  v19 = objc_allocWithZone(v18);
  v20 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  v21 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0;
  *(_OWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_1005CF260;
  v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v17(v11, (uint64_t)v14, v7);
  v22 = v29;
  v23 = v30;
  sub_10022E4A8(a1, v30);
  v24 = sub_100278B64((uint64_t)v22, a1, v23, v11, 0);
  sub_100225AB4(a1, v23);
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v14, v7);
  result = ((uint64_t (*)(char *, uint64_t))v25)(v16, v7);
  v27 = v31;
  v31[3] = v18;
  v27[4] = &off_100725228;
  *v27 = v24;
  return result;
}

id sub_10054AE80()
{
  return sub_10054AE98((SEL *)&selRef_wirelessEnabled);
}

id sub_10054AE8C()
{
  return sub_10054AE98((SEL *)&selRef_bluetoothEnabled);
}

id sub_10054AE98(SEL *a1)
{
  id result;
  void *v3;
  id v4;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, *a1);

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10054AEF4(uint64_t a1)
{
  id result;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  result = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "autoUnlockEligibleDevicesWithCloudPairing:deviceType:", 1, a1);

    if (v4)
    {
      v5 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
      v6 = sub_1002EF0A8();
      v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

      return (id)v7;
    }
    else
    {
      return &_swiftEmptySetSingleton;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10054AFAC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40[3];
  __int128 v41;
  __int128 v42;
  _UNKNOWN **v43;

  v2 = 0xD000000000000015;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10054B4AC();
  sub_10054B68C();
  Date.init()(v7);
  sub_10054B8BC((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10054C088(1);
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "stringForKey:", v9);

  v11 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "idsDeviceForUniqueID:", v10);

    if (v13)
    {
      *((_QWORD *)&v42 + 1) = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
      v43 = &off_10072BAC8;
      *(_QWORD *)&v41 = v13;
    }
    else
    {
      v43 = 0;
      v41 = 0u;
      v42 = 0u;
    }
    v14 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
    swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone], v40, 33, 0);
    sub_10023A084((uint64_t)&v41, (uint64_t)v14, &qword_1007B9E38);
    swift_endAccess(v40);
    sub_100221F28((uint64_t)v14, (uint64_t)&v41, &qword_1007B9E38);
    v15 = *((_QWORD *)&v42 + 1);
    sub_10000D0F0((uint64_t)&v41, &qword_1007B9E38);
    if (v15)
    {
      if (qword_1007B42C0 != -1)
        swift_once(&qword_1007B42C0, sub_1005477EC);
      v16 = type metadata accessor for Logger(0);
      sub_100221DF8(v16, (uint64_t)qword_1007C5FF8);
      v17 = a1;
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v40[0] = v39;
        *(_DWORD *)v20 = 136315138;
        v21 = *((_QWORD *)v14 + 3);
        if (!v21)
          goto LABEL_13;
        v22 = *((_QWORD *)v14 + 4);
        v23 = sub_10023A834(v14, *((_QWORD *)v14 + 3));
        v38[1] = v38;
        v24 = *(_QWORD *)(v21 - 8);
        __chkstk_darwin(v23);
        v26 = (char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v26);
        v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
        v29 = v28;
        v30 = *(void (**)(char *, uint64_t))(v24 + 8);
        v2 = 0xD000000000000015;
        v30(v26, v21);
        if (v29)
        {
          v2 = v27;
        }
        else
        {
LABEL_13:
          *(_QWORD *)&v41 = 0;
          *((_QWORD *)&v41 + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(*((_QWORD *)&v41 + 1));
          v29 = 0x8000000100612DF0;
        }
        *(_QWORD *)&v41 = sub_100228BD8(v2, v29, v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, (char *)&v41 + 8, v20 + 4);
        swift_bridgeObjectRelease(v29);

        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Loaded last mac that unlocked phone %s", v20, 0xCu);
        v31 = v39;
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {

      }
    }
    v32 = *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
    if (v32)
    {
      swift_retain(*(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager]);
      sub_1002C9104();
      swift_release(v32);
    }
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100221DF8(v33, (uint64_t)qword_1007C5FF8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "SDAuthenticationManager started", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

  }
  else
  {

    __break(1u);
  }
}

void sub_10054B4AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  sub_100553810();
  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  if (qword_1007B3DF0 != -1)
    swift_once(&qword_1007B3DF0, sub_1002D46D0);
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "handleStateChanged", qword_1007D80C8, 0);

  v3 = objc_msgSend(v1, "defaultCenter");
  if (qword_1007B3E00 != -1)
    swift_once(&qword_1007B3E00, sub_1002D4788);
  objc_msgSend(v3, "addObserver:selector:name:object:", v0, "handleStateChanged", qword_1007D80D8, 0);

  v4 = objc_msgSend(v1, "defaultCenter");
  if (qword_1007B3E08 != -1)
    swift_once(&qword_1007B3E08, sub_1002D47A0);
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "handleStateChanged", qword_1007D80E0, 0);

  v5 = objc_msgSend(v1, "defaultCenter");
  v6 = v5;
  if (qword_1007B3E10 != -1)
  {
    swift_once(&qword_1007B3E10, sub_1002D47B8);
    v5 = v6;
  }
  objc_msgSend(v5, "addObserver:selector:name:object:", v0, "handleStateChanged", qword_1007D80E8, 0);

}

void sub_10054B68C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;
  int out_token;

  v1 = v0;
  out_token = 0;
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  v2 = static OS_dispatch_queue.main.getter();
  v3 = swift_allocObject(&unk_10072F508, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v15 = sub_10056FAAC;
  v16 = v3;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100366D0C;
  v14 = &unk_10072F520;
  v4 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("postUnlockKeyRequestNotification", &out_token, v2, v4);
  _Block_release(v4);

  v5 = static OS_dispatch_queue.main.getter();
  v6 = swift_allocObject(&unk_10072F508, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  v15 = sub_10056FAB4;
  v16 = v6;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100366D0C;
  v14 = &unk_10072F548;
  v7 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("triggerStateChange", &out_token, v5, v7);
  _Block_release(v7);

  v8 = *(NSObject **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  v9 = swift_allocObject(&unk_10072F508, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  v15 = sub_10056FABC;
  v16 = v9;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100366D0C;
  v14 = &unk_10072F570;
  v10 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("com.apple.sharingd.register", &out_token, v8, v10);
  _Block_release(v10);
}

void sub_10054B8BC(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  void *v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint8_t *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char v83[32];

  v71 = a1;
  v2 = type metadata accessor for Date(0);
  v75 = *(_QWORD *)(v2 - 8);
  v76 = v2;
  __chkstk_darwin(v2);
  v72 = v3;
  v74 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100008384(&qword_1007B94C0);
  v6 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100008384(&qword_1007B94C8);
  __chkstk_darwin(v69);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100008384(&qword_1007C6290);
  __chkstk_darwin(v70);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = v1;
  v18 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v16 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v19 = v18;
  v20 = _dispatchPreconditionTest(_:)(v16);
  v21 = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_9;
  }
  v23 = SFDeviceClassCodeGet(v21, v22);
  if (v23 == 1)
  {
    v24 = v1;
    v25 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream], v83, 0, 0);
    if (*(_QWORD *)(v25 + 24))
    {
      sub_100244418(v25, (uint64_t)&v80);
      if (*((_QWORD *)&v81 + 1))
        goto LABEL_5;
    }
    else
    {
      v48 = *(_OWORD *)(v25 + 16);
      v80 = *(_OWORD *)v25;
      v81 = v48;
      v82 = *(_QWORD *)(v25 + 32);
      if (*((_QWORD *)&v48 + 1))
      {
LABEL_5:
        sub_10022E75C(&v80);
        if (*(_QWORD *)(v25 + 24))
          goto LABEL_6;
        goto LABEL_22;
      }
    }
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v49 = type metadata accessor for Logger(0);
    v50 = sub_100221DF8(v49, (uint64_t)qword_1007C5FF8);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "BioArmInitiator: Creating device stream", v53, 2u);
      v54 = v53;
      v24 = v17;
      swift_slowDealloc(v54, -1, -1);
    }

    v55 = *(_QWORD *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator];
    *((_QWORD *)&v81 + 1) = sub_100008384(&qword_1007C6298);
    v82 = sub_10026E2FC(&qword_1007C62A0, &qword_1007C6298, (uint64_t)&protocol conformance descriptor for AsyncCompactMapSequence<A, B>);
    sub_100244348(&v80);
    v56 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v68);
    swift_retain(v55);
    AsyncStream.init(_:bufferingPolicy:_:)(v56, v8, sub_10056F6B0, v55, v56);
    v57 = sub_10026E2FC(&qword_1007C62A8, &qword_1007B94C8, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
    AsyncCompactMapSequence.init(_:transform:)(v10, &unk_1007B9478, 0, v69, &type metadata for String, v57);
    v58 = sub_100008384(&qword_1007B9470);
    v59 = sub_10026E2FC(&qword_1007C62B0, &qword_1007C6290, (uint64_t)&protocol conformance descriptor for AsyncCompactMapSequence<A, B>);
    AsyncCompactMapSequence.init(_:transform:)(v12, &unk_1007B9468, 0, v70, v58, v59);
    swift_release(v55);
    swift_beginAccess(v25, &v77, 33, 0);
    v60 = *((_QWORD *)&v81 + 1);
    if (*(_QWORD *)(v25 + 24))
    {
      sub_10022E75C((_QWORD *)v25);
      if (v60)
      {
LABEL_18:
        sub_10026EE60(&v80, v25);
        goto LABEL_21;
      }
    }
    else if (*((_QWORD *)&v81 + 1))
    {
      goto LABEL_18;
    }
    v61 = v81;
    *(_OWORD *)v25 = v80;
    *(_OWORD *)(v25 + 16) = v61;
    *(_QWORD *)(v25 + 32) = v82;
LABEL_21:
    swift_endAccess(&v77);
    if (*(_QWORD *)(v25 + 24))
    {
LABEL_6:
      sub_100244418(v25, (uint64_t)&v77);
      if (*((_QWORD *)&v78 + 1))
      {
LABEL_7:
        sub_10026EE60(&v77, (uint64_t)&v80);
        v26 = type metadata accessor for TaskPriority(0);
        v27 = (uint64_t)v73;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v73, 1, 1, v26);
        sub_100244418((uint64_t)&v80, (uint64_t)&v77);
        v29 = v74;
        v28 = v75;
        v30 = v76;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v71, v76);
        v31 = *(unsigned __int8 *)(v28 + 80);
        v32 = (v31 + 72) & ~v31;
        v33 = (v72 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
        v34 = swift_allocObject(&unk_10072F328, v33 + 8, v31 | 7);
        *(_QWORD *)(v34 + 16) = 0;
        *(_QWORD *)(v34 + 24) = 0;
        sub_10026EE60(&v77, v34 + 32);
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v34 + v32, v29, v30);
        *(_QWORD *)(v34 + v33) = v24;
        v35 = v24;
        v36 = sub_100252EC0(v27, (uint64_t)&unk_1007C62C0, v34);
        swift_release(v36);
        sub_10022E75C(&v80);
        return;
      }
      goto LABEL_23;
    }
LABEL_22:
    v62 = *(_OWORD *)(v25 + 16);
    v77 = *(_OWORD *)v25;
    v78 = v62;
    v79 = *(_QWORD *)(v25 + 32);
    if (*((_QWORD *)&v62 + 1))
      goto LABEL_7;
LABEL_23:
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v63 = type metadata accessor for Logger(0);
    v64 = sub_100221DF8(v63, (uint64_t)qword_1007C5FF8);
    v39 = Logger.logObject.getter(v64);
    v65 = static os_log_type_t.error.getter(v39);
    if (!os_log_type_enabled(v39, v65))
      goto LABEL_28;
    v66 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v66 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v65, "BioArmInitiator: device stream is nil. This shouldn't happen", v66, 2u);
    v47 = v66;
    goto LABEL_27;
  }
  v20 = v23;
  if (qword_1007B42C0 != -1)
    goto LABEL_30;
LABEL_9:
  v37 = type metadata accessor for Logger(0);
  v38 = sub_100221DF8(v37, (uint64_t)qword_1007C5FF8);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(12, -1);
    v42 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v80 = v42;
    *(_DWORD *)v41 = 136315138;
    v43 = sub_10056F688(v20);
    v44 = String.init(cString:)(v43);
    v46 = v45;
    *(_QWORD *)&v77 = sub_100228BD8(v44, v45, (uint64_t *)&v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v41 + 4);
    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "BioArmInitiator: Not iPhone. Got %s instead", v41, 0xCu);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    v47 = v41;
LABEL_27:
    swift_slowDealloc(v47, -1, -1);
  }
LABEL_28:

}

void sub_10054C088(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSString v19;
  uint64_t v20;
  int v21;
  id v22;
  NSString v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  int v30;
  id v31;
  void *v32;
  unsigned int v33;
  id v34;
  void *v35;
  uint64_t v36;
  char v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t **v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t *v68;
  uint64_t *v69;
  id v70;
  void *v71;
  id v72;
  double v73;
  NSString v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  uint64_t v103;
  void *v104;
  unsigned __int8 *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _QWORD v114[3];
  int v115;
  _BYTE v116[20];
  _OWORD v117[2];
  unsigned __int8 v118[9];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v113 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v6);
  v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007C4330);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!SFDeviceIsRealityDevice(v10))
    return;
  v111 = v3;
  v118[0] = 0;
  v13 = (void *)objc_opt_self(SDStatusMonitor);
  v14 = objc_msgSend(v13, "sharedMonitor");
  if (!v14)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v15 = v14;
  v16 = (uint64_t)objc_msgSend(v14, "defaultWiFiDevice");

  v108 = v1;
  v106 = v12;
  LODWORD(v109) = a1;
  if (v16)
  {
    _bridgeAnyObjectToAny(_:)(v117, v16);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    memset(v117, 0, sizeof(v117));
  }
  sub_10000D0F0((uint64_t)v117, (uint64_t *)&unk_1007B6890);
  v17 = (void *)objc_opt_self(NSUserDefaults);
  v18 = objc_msgSend(v17, "standardUserDefaults");
  v19 = String._bridgeToObjectiveC()();
  LODWORD(v112) = objc_msgSend(v18, "BOOLForKey:", v19);

  sub_10056F918(4, v20);
  LODWORD(v110) = v21;
  v22 = objc_msgSend(v17, "standardUserDefaults");
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "BOOLForKey:", v23);

  if (v24)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100221DF8(v25, (uint64_t)qword_1007C5FF8);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "pretendClassDUntilNextBioArm is set", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  v30 = sub_10001DDC4();
  v31 = objc_msgSend(v13, "sharedMonitor");
  if (!v31)
    goto LABEL_62;
  v32 = v31;
  v33 = objc_msgSend(v31, "screenOn");

  v34 = objc_msgSend(v13, "sharedMonitor");
  if (!v34)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    return;
  }
  v35 = v34;
  LODWORD(v36) = v110 | v112;
  LODWORD(v110) = v30 ^ 1 | v24;
  LODWORD(v107) = v33 | v109;
  v37 = v109;
  v38 = objc_msgSend(v34, "screenOn");

  v39 = v108;
  v40 = (unsigned __int8 *)(v108 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics);
  swift_beginAccess(v108 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics, v117, 1, 0);
  LOBYTE(v41) = 0;
  v105 = v40;
  *v40 = v38;
  if (v16 && ((v36 ^ 1) & 1) == 0 && ((v110 ^ 1) & 1) == 0)
  {
    v118[0] = 1;
    LOBYTE(v41) = v107;
  }
  LOBYTE(v42) = v37;
  if (qword_1007B42C0 != -1)
    goto LABEL_50;
  while (1)
  {
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100221DF8(v43, (uint64_t)qword_1007C5FF8);
    v45 = v118[0];
    v46 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.default.getter();
    v48 = os_log_type_enabled(v46, v47);
    v112 = v4;
    if (v48)
    {
      v49 = swift_slowAlloc(38, -1);
      *(_DWORD *)v49 = 67110400;
      v115 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 4);
      *(_WORD *)(v49 + 8) = 1024;
      v115 = v16 != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 10);
      *(_WORD *)(v49 + 14) = 1024;
      v115 = v36 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 16);
      *(_WORD *)(v49 + 20) = 1024;
      v115 = (int)v110;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 22);
      *(_WORD *)(v49 + 26) = 1024;
      v115 = v42 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 28);
      *(_WORD *)(v49 + 32) = 1024;
      v4 = v112;
      v115 = v107 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116, v49 + 34);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Advertising for Unlock Class C: %{BOOL}d (wifiDeviceLoaded: %{BOOL}d, enabled: %{BOOL}d, inClassD: %{BOOL}d, ignoreScreenState: %{BOOL}d, screen on: %{BOOL}d", (uint8_t *)v49, 0x26u);
      v50 = v49;
      v39 = v108;
      swift_slowDealloc(v50, -1, -1);
    }

    swift_beginAccess(v118, &v115, 0, 0);
    if (v118[0] == 1)
    {
      v52 = (uint64_t)v106;
      Date.init()(v51);
      v53 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
      v54 = v105;
      swift_beginAccess(v105, v114, 33, 0);
      v55 = type metadata accessor for StateMetrics(0);
      sub_10023A084(v52, (uint64_t)&v54[*(int *)(v55 + 28)], &qword_1007C4330);
      swift_endAccess(v114);
      v56 = 8;
    }
    else
    {
      v56 = 0;
    }
    v57 = objc_msgSend((id)objc_opt_self(SDNearbyAgent), "sharedNearbyAgent");
    objc_msgSend(v57, "unlockUpdateAdvertising:mask:", v56, 8);

    if ((v41 & 1) == 0)
      break;
    v58 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser;
    v59 = *(_QWORD *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser);
    if (v59)
    {
      if (*(_BYTE *)(v59 + 16) == 1)
        break;
    }
    v110 = (id)objc_opt_self(SDAutoUnlockTransport);
    v60 = objc_msgSend(v110, "sharedTransport");
    if (!v60)
      goto LABEL_64;
    v61 = v60;
    v62 = objc_msgSend(v60, "enabledAutoUnlockDevices");

    if (!v62)
      goto LABEL_65;
    v107 = v58;
    v63 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v64 = sub_1002EF0A8();
    v65 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v62, v63, v64);

    v41 = sub_10022942C(v65);
    swift_bridgeObjectRelease(v65);
    v66 = *(void **)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
    if (((unint64_t)v41 & 0x8000000000000000) != 0 || ((unint64_t)v41 & 0x4000000000000000) != 0)
    {
      v88 = v66;
      v89 = swift_retain(v41);
      v16 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_release(v41);
      v104 = v66;
      if (!v16)
      {
LABEL_52:
        swift_release(v41);
        v84 = _swiftEmptyArrayStorage;
LABEL_53:
        v90 = type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
        v91 = swift_allocObject(v90, 48, 7);
        *(_QWORD *)(v91 + 40) = 0;
        v92 = objc_msgSend(objc_allocWithZone((Class)SFService), "init");
        *(_QWORD *)(v91 + 24) = v92;
        v93 = v92;
        v94 = v104;
        objc_msgSend(v93, "setDispatchQueue:", v104);

        *(_QWORD *)(v91 + 32) = v84;
        *(_BYTE *)(v91 + 16) = 0;
        v96 = v107;
        v95 = v108;
        v97 = *(_QWORD *)(v108 + v107);
        *(_QWORD *)(v108 + v107) = v91;
        v98 = swift_release(v97);
        v99 = *(_QWORD *)(v95 + v96);
        if (v99)
        {
          swift_retain(*(_QWORD *)(v95 + v96));
          sub_1002C0FC4();
          v98 = swift_release(v99);
        }
        v100 = (uint64_t)v106;
        Date.init()(v98);
        v101 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 0, 1, v101);
        v102 = v105;
        swift_beginAccess(v105, v114, 33, 0);
        v103 = type metadata accessor for StateMetrics(0);
        sub_10023A084(v100, (uint64_t)&v102[*(int *)(v103 + 32)], &qword_1007C4330);
        swift_endAccess(v114);
        return;
      }
    }
    else
    {
      v16 = (uint64_t)v41[2];
      v67 = v66;
      v104 = v66;
      if (!v16)
        goto LABEL_52;
    }
    v114[0] = _swiftEmptyArrayStorage;
    sub_100229940(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v8, 1, 1, v111);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v39 = 0;
    v109 = (unint64_t)v41 & 0xC000000000000001;
    while (v16 != v39)
    {
      if (v109)
        v68 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v41);
      else
        v68 = v41[v39 + 4];
      v69 = v68;
      v70 = objc_msgSend(v110, "sharedTransport", v104);
      if (!v70)
        goto LABEL_58;
      v71 = v70;
      v72 = objc_msgSend(v69, "uniqueID");
      v74 = v72;
      if (v72)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
        v76 = v75;

        v74 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v73 = swift_bridgeObjectRelease(v76).n128_u64[0];
      }
      v77 = objc_msgSend(v71, "bluetoothIDForIDSID:", v74, v73);

      if (!v77)
        goto LABEL_59;
      v78 = v113;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v77);

      v79 = v78;
      v80 = v111;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v79, v111);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v80);
      v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v80);
      if ((_DWORD)v81 == 1)
        goto LABEL_60;
      v82 = UUID.uuidString.getter(v81);
      v36 = v83;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v80);

      v84 = (_QWORD *)v114[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v114[0]) & 1) == 0)
      {
        sub_100229940(0, v84[2] + 1, 1);
        v84 = (_QWORD *)v114[0];
      }
      v86 = v84[2];
      v85 = v84[3];
      v42 = v86 + 1;
      if (v86 >= v85 >> 1)
      {
        sub_100229940(v85 > 1, v86 + 1, 1);
        v84 = (_QWORD *)v114[0];
      }
      ++v39;
      v84[2] = v42;
      v87 = &v84[2 * v86];
      v87[4] = v82;
      v87[5] = v36;
      v4 = v112;
      if (v16 == v39)
      {
        swift_release(v41);
        goto LABEL_53;
      }
    }
    __break(1u);
LABEL_50:
    swift_once(&qword_1007B42C0, sub_1005477EC);
  }
}

uint64_t sub_10054CB28(id *a1, float a2)
{
  uint64_t v2;
  id v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  BOOL v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;

  v4 = *a1;
  result = (uint64_t)objc_msgSend(*a1, "productVersion");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v6 = (void *)result;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v9 = v8;

  LODWORD(v36) = 0;
  v11 = __chkstk_darwin(v10);
  v30[2] = &v36;
  if (((unint64_t)v9 & 0x1000000000000000) != 0
    || !((unint64_t)v9 & 0x2000000000000000 | v7 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)(&v37, sub_100574128, v30, v7, v9, &type metadata for Bool);
  }
  else
  {
    __chkstk_darwin(v11);
    if (((unint64_t)v9 & 0x2000000000000000) != 0)
    {
      v34 = *(double *)&v7;
      v35 = (const char *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFLL);
      v13 = (v7 > 0x20u || ((0x100003E01uLL >> v7) & 1) == 0)
         && (v12 = (_BYTE *)_swift_stdlib_strtof_clocale(&v34, &v36)) != 0
         && *v12 == 0;
      LOBYTE(v37) = v13;
      swift_bridgeObjectRelease(v9);
      goto LABEL_15;
    }
    if ((v7 & 0x1000000000000000) != 0)
    {
      ((void (*)(double *__return_ptr, unint64_t))sub_100574128)(&v34, ((unint64_t)v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v29 = _StringObject.sharedUTF8.getter(v7, v9);
      ((void (*)(double *__return_ptr, uint64_t))sub_100574128)(&v34, v29);
    }
    LOBYTE(v37) = LOBYTE(v34);
  }
  swift_bridgeObjectRelease(v9);
LABEL_15:
  if ((v37 & 1) != 0)
  {
    if (*(float *)&v36 >= a2)
      return 1;
  }
  else if (a2 <= 0.0)
  {
    return 1;
  }
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v14 = type metadata accessor for Logger(0);
  sub_100221DF8(v14, (uint64_t)qword_1007C5FF8);
  v15 = v4;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v33 = v2;
    v18 = swift_slowAlloc(32, -1);
    v19 = (_QWORD *)swift_slowAlloc(8, -1);
    v32 = swift_slowAlloc(32, -1);
    v36 = v32;
    *(_DWORD *)v18 = 138412802;
    v34 = *(double *)&v15;
    v20 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v18 + 4);
    v31 = v19;
    *v19 = v15;

    *(_WORD *)(v18 + 12) = 2080;
    v21 = objc_msgSend(v20, "productVersion");
    if (v21)
    {
      v22 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;

    }
    else
    {
      v34 = 0.0;
      v35 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v35);
      v25 = (const char *)0x8000000100612DF0;
      v23 = 0xD000000000000015;
    }
    v34 = COERCE_DOUBLE(sub_100228BD8(v23, (unint64_t)v25, &v36));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v18 + 14);

    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v18 + 22) = 2048;
    v34 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v18 + 24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Device not eligible since it is not on a recent enough software version, device: %@, version: %s, required: %f", (uint8_t *)v18, 0x20u);
    v26 = sub_100008384(&qword_1007B4C30);
    v27 = v31;
    swift_arrayDestroy(v31, 1, v26);
    swift_slowDealloc(v27, -1, -1);
    v28 = v32;
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

  }
  return 0;
}

void sub_10054D00C(uint64_t a1, void *a2, NSObject **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  const char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t Strong;
  void *v38;
  Class isa;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  NSObject *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  NSObject *v57;
  NSObject **v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  Class v64;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject **v69;
  uint64_t v70;
  _QWORD v71[4];
  NSObject *v72;
  uint64_t v73[4];

  v6 = v5;
  v69 = a3;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (_QWORD *)((char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  v17 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    v68 = a4;
    v14 = (_QWORD *)sub_1003FEB5C(a1);
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100221DF8(v18, (uint64_t)qword_1007C5FF8);
  v20 = a2;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v66 = a5;
    v24 = v23;
    v25 = (_QWORD *)swift_slowAlloc(8, -1);
    v26 = swift_slowAlloc(32, -1);
    v67 = v6;
    v27 = v26;
    v72 = v26;
    *(_DWORD *)v24 = 136315394;
    v65[1] = v19;
    v28 = sub_1003FDAA0((uint64_t)v14);
    v65[0] = v14;
    v30 = (const char *)v29;
    v70 = sub_100228BD8(v28, v29, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v24 + 4);
    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v24 + 12) = 2112;
    v70 = (uint64_t)v20;
    v31 = v20;
    v14 = (_QWORD *)v65[0];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v24 + 14);
    *v25 = v20;

    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Asked to enable %s for device: %@", (uint8_t *)v24, 0x16u);
    v32 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v25, 1, v32);
    swift_slowDealloc(v25, -1, -1);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    v33 = v27;
    v6 = v67;
    swift_slowDealloc(v33, -1, -1);
    v34 = v24;
    a5 = v66;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {

  }
  if ((unint64_t)v14 - 3 >= 6)
  {
    v35 = sub_10056F370(19, 0, 0xE000000000000000);
    Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v36);
    if (Strong)
    {
      v38 = (void *)Strong;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v38, "manager:didFailToEnableDeviceFor:error:", v6, isa, v35);
      swift_unknownObjectRelease(v38);

      v35 = isa;
    }

  }
  v40 = *(uint64_t (**)(uint64_t))(v6
                                          + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled);
  v41 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled + 8);
  v42 = swift_retain();
  LOBYTE(v40) = v40(v42);
  v43 = swift_release(v41);
  if ((v40 & 1) != 0)
  {
    v44 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
    if (!v44)
    {
      __break(1u);
      return;
    }
    v45 = v44;
    v46 = objc_msgSend(v20, "uniqueID");
    v47 = objc_msgSend(v45, "idsDeviceForUniqueID:", v46);

    if (v47)
    {
      v71[2] = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
      v71[3] = &off_10072BAC8;
      v70 = (uint64_t)v47;
      v48 = v47;
      sub_10054D670(a5, (uint64_t)&v70, (uint64_t)v69, v68, (uint64_t)v14, &v72);
      sub_10022E75C(&v70);
      sub_10023A834(&v72, v73[2]);
      sub_1002EA77C();

      sub_10022E75C(&v72);
      return;
    }
    v53 = v20;
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(12, -1);
      v69 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v56 = 138412290;
      v72 = v53;
      v57 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73, v56 + 4);
      v58 = v69;
      *v69 = v53;

      _os_log_impl((void *)&_mh_execute_header, v54, v55, "IDS device not found for SFAutoUnlock device: %@. Is the device in the same iCloud account?", v56, 0xCu);
      v59 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v58, 1, v59);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v56, -1, -1);
    }
    else
    {

      v54 = v53;
    }

    v52 = 1;
  }
  else
  {
    v49 = Logger.logObject.getter(v43);
    v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Bluetooth is disabled", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    v52 = 17;
  }
  v60 = sub_10056F370(v52, 0, 0xE000000000000000);
  v62 = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v61);
  if (v62)
  {
    v63 = (void *)v62;
    v64 = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v63, "manager:didFailToEnableDeviceFor:error:", v6, v64, v60);
    swift_unknownObjectRelease(v63);

  }
  else
  {

  }
}

uint64_t sub_10054D670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v6;
  char *v7;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, uint64_t, uint64_t);
  char *v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  __int128 v38;
  uint64_t v39;
  _UNKNOWN **v40;
  _BYTE v41[24];
  _QWORD v42[3];
  uint64_t v43;
  _UNKNOWN **v44;

  v7 = v6;
  v36 = a5;
  ObjectType = swift_getObjectType(v6);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(char **)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v16 = v17;
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v14 + 13))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  (*((void (**)(_QWORD *, uint64_t))v14 + 1))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator];
    v19 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator + 8];
    swift_retain(v19);
    v20(a1, a2, a3, a4, v36);
    swift_release(v19);
    v43 = ObjectType;
    v44 = &off_10072F2A8;
    v42[0] = v7;
    v21 = a6[3];
    v22 = a6[4];
    sub_10026EEE8((uint64_t)a6, v21);
    v23 = *(_QWORD *)(*(_QWORD *)(v22 + 8) + 8);
    v24 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 16);
    v25 = v7;
    v24(v42, v21, v23);
    sub_100244418((uint64_t)a6, (uint64_t)v42);
    v14 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
    swift_beginAccess(&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions], v41, 33, 0);
    a6 = *(_QWORD **)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v14);
    *(_QWORD *)v14 = a6;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  a6 = sub_100228208(0, a6[2] + 1, 1, a6);
  *(_QWORD *)v14 = a6;
LABEL_3:
  v28 = a6[2];
  v27 = a6[3];
  if (v28 >= v27 >> 1)
  {
    a6 = sub_100228208((_QWORD *)(v27 > 1), v28 + 1, 1, a6);
    *(_QWORD *)v14 = a6;
  }
  v29 = sub_10026EEE8((uint64_t)v42, v43);
  __chkstk_darwin(v29);
  v31 = (uint64_t *)((char *)&v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  v33 = *v31;
  v39 = type metadata accessor for SDAuthenticationPairingLockSession(0);
  v40 = &off_100721D38;
  *(_QWORD *)&v38 = v33;
  a6[2] = v28 + 1;
  sub_10026EE60(&v38, (uint64_t)&a6[5 * v28 + 4]);
  sub_10022E75C(v42);
  return swift_endAccess(v41);
}

void sub_10054DA14(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  double v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t Strong;
  void *v36;
  Class isa;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  NSString v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  Class v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[4];
  uint64_t v66[5];

  v5 = v4;
  v63 = a4;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = v13;
  v15 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007C5FF8);
  v18 = swift_bridgeObjectRetain_n(a3, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(64, -1);
    v62 = v5;
    v61[0] = v22;
    v66[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v61[1] = v17;
    v23 = (id)SFAuthenticationTypeToString(a1);
    v24 = a1;
    v25 = a2;
    v26 = v23;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v29 = v28;

    a2 = v25;
    a1 = v24;
    v64 = sub_100228BD8(v27, (unint64_t)v29, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v21 + 4);
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain(a3, v30);
    v64 = sub_100228BD8(a2, (unint64_t)a3, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v21 + 14);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Requested enablement of %s for device: %s", (uint8_t *)v21, 0x16u);
    v31 = v61[0];
    swift_arrayDestroy(v61[0], 2, (char *)&type metadata for Any + 8);
    v5 = v62;
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);
  }

  v32 = (char *)sub_1003FEB5C(a1);
  if ((unint64_t)(v32 - 3) >= 6)
  {
    v33 = sub_10056F370(19, 0, 0xE000000000000000);
    Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v34);
    if (Strong)
    {
      v36 = (void *)Strong;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v36, "manager:didFailToEnableDeviceFor:error:", v5, isa, v33);
      swift_unknownObjectRelease(v36);

      v33 = isa;
    }

  }
  v38 = *(uint64_t (**)(uint64_t))(v5
                                          + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled);
  v39 = *(_QWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled + 8);
  v40 = swift_retain();
  LOBYTE(v38) = v38(v40);
  v41 = swift_release(v39);
  if ((v38 & 1) != 0)
  {
    v42 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
    if (!v42)
    {
      __break(1u);
      return;
    }
    v43 = v42;
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend(v43, "idsDeviceForUniqueID:", v44);

    if (v45)
    {
      v65[2] = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
      v65[3] = &off_10072BAC8;
      v64 = (uint64_t)v45;
      v46 = v45;
      sub_10054E060(v63, (uint64_t)&v64, v32, 0, v66);
      sub_10022E75C(&v64);
      sub_10023A834(v66, v66[3]);
      sub_10048A478();

      sub_10022E75C(v66);
      return;
    }
    v51 = swift_bridgeObjectRetain_n(a3, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = swift_slowAlloc(32, -1);
      v66[0] = v55;
      *(_DWORD *)v54 = 136315138;
      swift_bridgeObjectRetain(a3);
      v64 = sub_100228BD8(a2, (unint64_t)a3, v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v54 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a3, 2);
    }

    v50 = 1;
  }
  else
  {
    v47 = Logger.logObject.getter(v41);
    v48 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Bluetooth is disabled", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

    v50 = 17;
  }
  v56 = sub_10056F370(v50, 0, 0xE000000000000000);
  v58 = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v57);
  if (v58)
  {
    v59 = (void *)v58;
    v60 = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v59, "manager:didFailToEnableDeviceFor:error:", v5, v60, v56);
    swift_unknownObjectRelease(v59);

  }
  else
  {

  }
}

uint64_t sub_10054E060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  char *v5;
  char *v6;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  void (*v18)(uint64_t, uint64_t, char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[4];
  int v37;
  __int128 v38;
  uint64_t v39;
  _UNKNOWN **v40;
  _BYTE v41[24];
  _QWORD v42[3];
  uint64_t v43;
  _UNKNOWN **v44;

  v6 = v5;
  v37 = a4;
  ObjectType = swift_getObjectType(v6);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v18 = *(void (**)(uint64_t, uint64_t, char *))&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator];
    v19 = *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator + 8];
    swift_retain(v19);
    v18(a1, a2, a3);
    swift_release(v19);
    v43 = ObjectType;
    v44 = &off_10072F2A8;
    v42[0] = v6;
    v21 = a5[3];
    v20 = a5[4];
    sub_10026EEE8((uint64_t)a5, v21);
    v22 = *(_QWORD *)(*(_QWORD *)(v20 + 8) + 8);
    v23 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v22 + 16);
    v24 = v6;
    v23(v42, v21, v22);
    v26 = a5[3];
    v25 = a5[4];
    sub_10026EEE8((uint64_t)a5, v26);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v25 + 8) + 24))(v37 & 1, v26);
    sub_100244418((uint64_t)a5, (uint64_t)v42);
    a3 = &v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
    swift_beginAccess(&v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions], v41, 33, 0);
    a5 = *(_QWORD **)a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)a3);
    *(_QWORD *)a3 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  a5 = sub_100228348(0, a5[2] + 1, 1, a5);
  *(_QWORD *)a3 = a5;
LABEL_3:
  v29 = a5[2];
  v28 = a5[3];
  if (v29 >= v28 >> 1)
  {
    a5 = sub_100228348((_QWORD *)(v28 > 1), v29 + 1, 1, a5);
    *(_QWORD *)a3 = a5;
  }
  v30 = sub_10026EEE8((uint64_t)v42, v43);
  __chkstk_darwin(v30);
  v32 = (uint64_t *)&v36[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  v34 = *v32;
  v39 = type metadata accessor for SDAuthenticationPairingKeySession(0);
  v40 = &off_10072A688;
  *(_QWORD *)&v38 = v34;
  a5[2] = v29 + 1;
  sub_10026EE60(&v38, (uint64_t)&a5[5 * v29 + 4]);
  sub_10022E75C(v42);
  return swift_endAccess(v41);
}

void sub_10054E404(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  NSString v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint8_t *v50;
  uint64_t v51;
  void *v52;
  Class v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  Class v62;
  id v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  uint64_t (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint8_t *v83;
  uint64_t v84;
  unint64_t v85;
  uint8_t *v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  uint8_t *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t Strong;
  Class isa;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v5 = v4;
  v114 = a4;
  v115 = a1;
  v8 = type metadata accessor for SFPlatform(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v111 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100221DF8(v17, (uint64_t)qword_1007C5FF8);
  v19 = swift_bridgeObjectRetain_n(a3, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v110 = v9;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v109 = swift_slowAlloc(64, -1);
    v117 = v109;
    *(_DWORD *)v23 = 136315394;
    v113 = (id)v18;
    v24 = (id)SFAuthenticationTypeToString(v115);
    v112 = v8;
    v25 = v24;
    v26 = v5;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = a2;
    v29 = a3;
    v31 = v30;

    v32 = v27;
    v5 = v26;
    v116 = sub_100228BD8(v32, v31, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v23 + 4);
    v33 = v31;
    a3 = v29;
    a2 = v28;
    swift_bridgeObjectRelease(v33);
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v116 = sub_100228BD8(v28, (unint64_t)a3, &v117);
    v8 = v112;
    v18 = (uint64_t)v113;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v23 + 14);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Asked to disable %s for IDSDeviceID: %s", (uint8_t *)v23, 0x16u);
    v34 = v109;
    swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v35 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (!v35)
  {
    __break(1u);
    return;
  }
  v36 = v35;
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v36, "idsDeviceForUniqueID:", v37);

  if (v38)
  {
    v39 = sub_1003FEB5C(v115);
    v40 = v39;
    if (v39 - 3 < 6)
    {
      v109 = sub_100532B9C(a2, a3, v39);
      v115 = v64;
      v65 = Logger.logObject.getter(v109);
      v66 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v65, v66))
      {
        v112 = v8;
        v67 = (uint8_t *)swift_slowAlloc(12, -1);
        v113 = (id)v18;
        v68 = v67;
        *(_DWORD *)v67 = 134217984;
        v8 = v112;
        v117 = v40;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v67 + 4);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "Created disable message with type %lu", v68, 0xCu);
        swift_slowDealloc(v68, -1, -1);
      }

      v38 = v38;
      v69 = v109;
      v70 = v115;
      sub_100569E34(v109, v115, v38, 8, v40, v5);

      if (v40 == 5)
      {
        v113 = v38;
        v72 = v111;
        static SFPlatform.macOS.getter(v71);
        v73 = static SFPlatform.isPlatform(_:)(v72);
        v74 = *(uint64_t (**)(char *, uint64_t))(v110 + 8);
        v75 = v74(v72, v8);
        if ((v73 & 1) != 0)
        {
          v76 = sub_10054F1BC(2, "eligible iPhone devices: %s");
          sub_100546FD4(v76, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
          v78 = v77;
          swift_bridgeObjectRelease(v76);
          v80 = Logger.logObject.getter(v79);
          v81 = static os_log_type_t.default.getter();
          v82 = os_log_type_enabled(v80, v81);
          if ((v78 & 1) != 0)
          {
            if (v82)
            {
              v83 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v83 = 0;
              _os_log_impl((void *)&_mh_execute_header, v80, v81, "Found a device that is still unlockable by this mac, leaving enabled as true", v83, 2u);
              swift_slowDealloc(v83, -1, -1);
            }

          }
          else
          {
            if (v82)
            {
              v86 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v86 = 0;
              _os_log_impl((void *)&_mh_execute_header, v80, v81, "Found no phones unlockable by this mac, reporting change to observers", v86, 2u);
              swift_slowDealloc(v86, -1, -1);
            }

            v75 = sub_100547314();
          }
          v72 = v111;
        }
        static SFPlatform.iOS.getter(v75);
        v87 = static SFPlatform.isPlatform(_:)(v72);
        v74(v72, v8);
        if ((v87 & 1) == 0)
        {
          sub_100225AB4(v109, v115);
          v38 = v113;
          goto LABEL_43;
        }
        v88 = sub_10054F1BC(4, "eligible mac devices: %s");
        v89 = sub_100569784(0, v88);
        swift_bridgeObjectRelease(v88);
        v90 = v89[2];
        swift_bridgeObjectRelease(v89);
        v92 = Logger.logObject.getter(v91);
        v93 = static os_log_type_t.default.getter();
        v94 = os_log_type_enabled(v92, v93);
        v38 = v113;
        if (v90)
        {
          if (v94)
          {
            v95 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v95 = 0;
            _os_log_impl((void *)&_mh_execute_header, v92, v93, "Found a mac that can unlock this phone, leaving enabled as true", v95, 2u);
            swift_slowDealloc(v95, -1, -1);
          }
          sub_100225AB4(v109, v115);

          goto LABEL_43;
        }
        if (v94)
        {
          v108 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v108 = 0;
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "Found no macs able to unlock this phone, reporting change to observers", v108, 2u);
          swift_slowDealloc(v108, -1, -1);
        }

        sub_100547314();
        v84 = v109;
        v85 = v115;
      }
      else
      {
        v84 = v69;
        v85 = v70;
      }
      sub_100225AB4(v84, v85);
LABEL_43:
      v96 = swift_bridgeObjectRetain_n(a3, 2);
      v97 = Logger.logObject.getter(v96);
      v98 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = swift_slowAlloc(22, -1);
        v115 = swift_slowAlloc(64, -1);
        v117 = v115;
        *(_DWORD *)v99 = 136315394;
        v100 = sub_1003FDAA0(v40);
        v101 = (unint64_t)a3;
        v103 = v102;
        v116 = sub_100228BD8(v100, v102, &v117);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v99 + 4);
        swift_bridgeObjectRelease(v103);
        *(_WORD *)(v99 + 12) = 2080;
        swift_bridgeObjectRetain(v101);
        v116 = sub_100228BD8(a2, v101, &v117);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v99 + 14);
        swift_bridgeObjectRelease_n(v101, 3);
        _os_log_impl((void *)&_mh_execute_header, v97, v98, "Successfully disabled %s for IDSdeviceID: %s", (uint8_t *)v99, 0x16u);
        v104 = v115;
        swift_arrayDestroy(v115, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v99, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
      }
      Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v105);
      if (!Strong)
        goto LABEL_49;
      v61 = (void *)Strong;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v61, "manager:didDisableAuthenticationFor:", v5, isa);

      goto LABEL_48;
    }
    v47 = Logger.logObject.getter(v39);
    v48 = static os_log_type_t.error.getter(v47);
    v49 = os_log_type_enabled(v47, v48);
    if (v40 == 1)
    {
      if (v49)
      {
        v50 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Pairing for siri is tied to Auto Unlock. Use SFAutoUnlockManager instead", v50, 2u);
LABEL_20:
        swift_slowDealloc(v50, -1, -1);
      }
    }
    else if (v49)
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = swift_slowAlloc(32, -1);
      v117 = v55;
      *(_DWORD *)v50 = 136315138;
      v56 = sub_1003FDAA0(v40);
      v58 = v57;
      v116 = sub_100228BD8(v56, v57, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v50 + 4);
      swift_bridgeObjectRelease(v58);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s does not support pairing. There is nothing to unpair.", v50, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      goto LABEL_20;
    }

    v60 = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v59);
    if (!v60)
    {
LABEL_49:

      return;
    }
    v61 = (void *)v60;
    v62 = UUID._bridgeToObjectiveC()().super.isa;
    v63 = sub_10056F370(1, 0, 0xE000000000000000);
    objc_msgSend(v61, "manager:didFailToDisableDeviceFor:error:", v5, v62, v63);

LABEL_48:
    swift_unknownObjectRelease(v61);
    goto LABEL_49;
  }
  v41 = swift_bridgeObjectRetain_n(a3, 2);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter(v42);
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = swift_slowAlloc(32, -1);
    v117 = v45;
    *(_DWORD *)v44 = 136315138;
    swift_bridgeObjectRetain(a3);
    v116 = sub_100228BD8(a2, (unint64_t)a3, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v44 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "IDS device not found for IDSDeviceID: %s. Is the device in the same iCloud account?", v44, 0xCu);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v51 = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v46);
  if (v51)
  {
    v52 = (void *)v51;
    v53 = UUID._bridgeToObjectiveC()().super.isa;
    v54 = sub_10056F370(1, 0, 0xE000000000000000);
    objc_msgSend(v52, "manager:didFailToDisableDeviceFor:error:", v5, v53, v54);

    swift_unknownObjectRelease(v52);
  }
}

uint64_t sub_10054F1BC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v6 = *(uint64_t (**)(uint64_t))(v2
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices + 8);
  swift_retain(v5);
  v7 = v6(a1);
  swift_release(v5);
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007C5FF8);
  v9 = swift_bridgeObjectRetain_n(v7, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v22 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v15 = sub_1002EF0A8();
    v16 = swift_bridgeObjectRetain(v7);
    v17 = Set.description.getter(v16, v14, v15);
    v19 = v18;
    swift_bridgeObjectRelease(v7);
    v21 = sub_100228BD8(v17, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v12 + 4);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v7;
}

void sub_10054F4A8(uint64_t a1, char *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  __n128 v45;
  void *v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  const char *v54;
  const char *v55;
  id v56;
  void *v57;
  NSString v58;
  id v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD *v64;
  id v65;
  id v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  _BYTE *v70;
  char v71;
  uint64_t (*v72)(_BYTE *, uint64_t);
  uint64_t v73;
  const char *v74;
  int v75;
  int v76;
  uint64_t IsRealityDevice;
  int v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  id v83;
  NSString v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  _BYTE *v94;
  char v95;
  uint64_t v96;
  const char *v97;
  int v98;
  int v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  id v103;
  uint64_t v104;
  uint64_t Strong;
  void *v106;
  NSUUID v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  const char *v113;
  uint8_t *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unsigned __int8 v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  id v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  NSObject *v143;
  os_log_type_t v144;
  uint8_t *v145;
  void (*v146)(_BYTE *, char *, id);
  uint64_t v147;
  id v148;
  _BYTE *v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  char *v165;
  id v166;
  char *v167;
  uint64_t v168;
  _BYTE v169[12];
  int v170;
  _QWORD *v171;
  uint64_t v172;
  void (*v173)(_BYTE *, char *, id);
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE *v178;
  void *v179;
  char *v180;
  _BYTE *v181;
  _BYTE *v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  __int128 v194;
  __int128 v195;
  _UNKNOWN **v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _UNKNOWN **v200;

  v4 = v3;
  v193 = a1;
  ObjectType = swift_getObjectType(v3);
  v8 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v8);
  v183 = &v169[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v184 = sub_100008384(&qword_1007C6400);
  v10 = *(_QWORD *)(v184 - 8);
  v11 = __chkstk_darwin(v184);
  v178 = &v169[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v177 = v12;
  __chkstk_darwin(v11);
  v182 = &v169[-v13];
  v188 = type metadata accessor for SFPlatform(0);
  v185 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v187 = &v169[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for UUID(0);
  v191 = *(_QWORD *)(v15 - 8);
  v192 = (id)v15;
  v16 = __chkstk_darwin(v15);
  v181 = &v169[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v176 = v17;
  __chkstk_darwin(v16);
  v19 = &v169[-v18];
  v20 = type metadata accessor for DispatchPredicate(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v169[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  v175 = v24;
  LOBYTE(v24) = _dispatchPreconditionTest(_:)(v23);
  (*(void (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v24 & 1) != 0)
  {
    v174 = ObjectType;
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100221DF8(v25, (uint64_t)qword_1007C5FF8);
  v28 = v191;
  v27 = v192;
  v173 = *(void (**)(_BYTE *, char *, id))(v191 + 16);
  v173(v19, a2, v192);
  v29 = a3;
  v189 = v26;
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  v32 = os_log_type_enabled(v30, (os_log_type_t)v31);
  v190 = v29;
  if (v32)
  {
    v170 = v31;
    v172 = v10;
    v186 = a2;
    v180 = v4;
    v33 = swift_slowAlloc(32, -1);
    v179 = a3;
    v34 = v33;
    v171 = (_QWORD *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(64, -1);
    v197 = v35;
    *(_DWORD *)v34 = 136315650;
    v36 = v27;
    v37 = (id)SFAuthenticationTypeToString(v193);
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    *(_QWORD *)&v194 = sub_100228BD8(v38, (unint64_t)v40, &v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 8, v34 + 4);
    swift_bridgeObjectRelease(v40);
    *(_WORD *)(v34 + 12) = 2080;
    v41 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v42 = dispatch thunk of CustomStringConvertible.description.getter(v36, v41);
    v44 = (const char *)v43;
    *(_QWORD *)&v194 = sub_100228BD8(v42, v43, &v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 8, v34 + 14);
    v45 = swift_bridgeObjectRelease(v44);
    (*(void (**)(_BYTE *, id, __n128))(v28 + 8))(v19, v36, v45);
    *(_WORD *)(v34 + 22) = 2112;
    v46 = v179;
    if (v179)
    {
      v29 = v190;
      *(_QWORD *)&v194 = v190;
      v47 = v190;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 8, v34 + 24);
    }
    else
    {
      *(_QWORD *)&v194 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 8, v34 + 24);
      v29 = v190;
    }
    v48 = v171;
    *v171 = v46;

    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v170, "Asked to authenticate %s sessionID: %s with options %@", (uint8_t *)v34, 0x20u);
    v49 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v48, 1, v49);
    swift_slowDealloc(v48, -1, -1);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v50 = v34;
    a3 = v46;
    swift_slowDealloc(v50, -1, -1);

    v4 = v180;
    a2 = v186;
    v10 = v172;
  }
  else
  {
    (*(void (**)(_BYTE *, id))(v28 + 8))(v19, v27);

  }
  v51 = sub_1003FEB5C(v193);
  if (a3)
  {
    v52 = objc_msgSend(v29, "idsDeviceID");
    if (v52)
    {
      v53 = v52;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v55 = v54;

      v56 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
      if (!v56)
      {
        __break(1u);
        return;
      }
      v57 = v56;
      v58 = String._bridgeToObjectiveC()();
      v59 = objc_msgSend(v57, "idsDeviceForUniqueID:", v58, swift_bridgeObjectRelease(v55).n128_f64[0]);

      if (v59)
      {
        v60 = v59;
        v61 = Logger.logObject.getter(v60);
        v62 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v61, v62))
        {
          v186 = a2;
          v63 = (uint8_t *)swift_slowAlloc(12, -1);
          v64 = (_QWORD *)swift_slowAlloc(8, -1);
          v193 = v51;
          *(_DWORD *)v63 = 138412290;
          v197 = (uint64_t)v60;
          v65 = v60;
          v192 = v60;
          v66 = v65;
          a2 = v186;
          v51 = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198, v63 + 4);
          *v64 = v59;

          v60 = v192;
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "DeviceID was specified in options, attempting to authenticate with device: %@", v63, 0xCu);
          v67 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v64, 1, v67);
          swift_slowDealloc(v64, -1, -1);
          swift_slowDealloc(v63, -1, -1);
        }
        else
        {

        }
        v199 = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
        v200 = &off_100727E08;
        v197 = (uint64_t)v190;
        v88 = v190;
        v89 = v60;
        sub_10056C098(v51, v89, a2, (uint64_t)&v197, v4);

        sub_10000D0F0((uint64_t)&v197, &qword_1007C62D8);
        return;
      }
      v85 = 0xD000000000000032;
      v86 = 0x8000000100621B60;
      v87 = 1;
      goto LABEL_43;
    }
  }
  if ((unint64_t)(v51 - 3) >= 6)
    v68 = 7;
  else
    v68 = 0x50501010101uLL >> (8 * (v51 - 3));
  v69 = sub_1000C8DEC(v68 & 7);
  if (v69 == 1)
  {
    sub_100547AF0((uint64_t)&v194);
    if (*((_QWORD *)&v195 + 1))
    {
      sub_10026EE60(&v194, (uint64_t)&v197);
      if (a3)
      {
        *((_QWORD *)&v195 + 1) = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
        v196 = &off_100727E08;
        *(_QWORD *)&v194 = v29;
      }
      else
      {
        v196 = 0;
        v194 = 0u;
        v195 = 0u;
      }
      v132 = v29;
      v133 = v199;
      v134 = (uint64_t)v200;
      v135 = sub_10023A834(&v197, v199);
      v136 = v132;
      sub_10056CD50(v51, (uint64_t)v135, (uint64_t)a2, (uint64_t)&v194, v4, v133, v134);
      sub_10022E75C(&v197);
      sub_10000D0F0((uint64_t)&v194, &qword_1007C62D8);
      return;
    }
    v90 = sub_10000D0F0((uint64_t)&v194, &qword_1007B9E38);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v93 = 0;
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "No active watch", v93, 2u);
      swift_slowDealloc(v93, -1, -1);
    }

    v87 = 18;
LABEL_42:
    v85 = 0;
    v86 = 0xE000000000000000;
LABEL_43:
    v103 = sub_10056F370(v87, v85, v86);
    Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v104);
    if (!Strong)
    {

      return;
    }
    v106 = (void *)Strong;
    v107.super.isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v106, "manager:didFailAuthenticationFor:error:", v4, v107.super.isa, v103);
    swift_unknownObjectRelease(v106);

    goto LABEL_60;
  }
  if ((unint64_t)(v51 - 6) < 2)
  {
    v70 = v187;
    static SFPlatform.macOS.getter(v69);
    v71 = static SFPlatform.isPlatform(_:)(v70);
    v72 = *(uint64_t (**)(_BYTE *, uint64_t))(v185 + 8);
    v73 = v72(v70, v188);
    if ((v71 & 1) != 0)
    {
      v74 = (const char *)sub_10054F1BC(2, "eligible iPhone devices: %s");
      sub_100546FD4((uint64_t)v74, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
      v76 = v75;
      swift_bridgeObjectRelease(v74);
    }
    else
    {
      v76 = 0;
    }
    v94 = v187;
    static SFPlatform.iOS.getter(v73);
    v95 = static SFPlatform.isPlatform(_:)(v94);
    v96 = v72(v94, v188);
    if ((v95 & 1) != 0)
    {
      v97 = (const char *)sub_10054F1BC(4, "eligible mac devices: %s");
      sub_100546FD4((uint64_t)v97, (SEL *)&selRef_deviceEnabledAsKey_);
      v99 = v98;
      swift_bridgeObjectRelease(v97);
      if (((v76 | v99) & 1) == 0)
      {
LABEL_39:
        v100 = Logger.logObject.getter(v96);
        v101 = static os_log_type_t.error.getter(v100);
        if (os_log_type_enabled(v100, v101))
        {
          v102 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v102 = 0;
          _os_log_impl((void *)&_mh_execute_header, v100, v101, "Mac Unlock Phone isn't enabled", v102, 2u);
          swift_slowDealloc(v102, -1, -1);
        }

        v87 = 33;
        goto LABEL_42;
      }
    }
    else if ((v76 & 1) == 0)
    {
      goto LABEL_39;
    }
    v179 = a3;
    v193 = v51;
    v180 = v4;
    if (v51 == 7)
    {
      v115 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
      swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone], &v197, 0, 0);
      v117 = *((_QWORD *)v115 + 3);
      if (v117)
      {
        v118 = *((_QWORD *)v115 + 4);
        v119 = sub_10023A834(v115, *((_QWORD *)v115 + 3));
        v120 = *(_QWORD *)(v117 - 8);
        __chkstk_darwin(v119);
        v122 = &v169[-((v121 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(_BYTE *))(v120 + 16))(v122);
        v123 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v117, v118);
        v125 = v124;
        v116 = (*(uint64_t (**)(_BYTE *, uint64_t))(v120 + 8))(v122, v117);
        if (v125)
        {
          v126 = 65538;
          v127 = sub_100008384(&qword_1007B54A0);
          v128 = 7;
          v129 = (_QWORD *)swift_allocObject(v127, 48, 7);
          v130 = 0;
          *((_OWORD *)v129 + 1) = xmmword_1005CD2A0;
          v129[4] = v123;
          v129[5] = v125;
          v131 = 20;
LABEL_66:
          v146 = v173;
          v147 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
          swift_allocObject(v147, 24, 7);
          v148 = v175;
          LOBYTE(v194) = v130;
          v189 = sub_1002C4E48(v148, v126, (uint64_t)v129, v131 | ((unint64_t)v130 << 32));
          v149 = v182;
          sub_1002C4F30(v128);
          v150 = type metadata accessor for TaskPriority(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v183, 1, 1, v150);
          v151 = v178;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v178, v149, v184);
          v146(v181, a2, v192);
          v152 = *(unsigned __int8 *)(v10 + 80);
          v153 = (v152 + 32) & ~v152;
          v154 = (v177 + v153 + 7) & 0xFFFFFFFFFFFFFFF8;
          v155 = (v154 + 15) & 0xFFFFFFFFFFFFFFF8;
          v156 = v191;
          v157 = *(unsigned __int8 *)(v191 + 80);
          v158 = (v157 + v155 + 8) & ~v157;
          v159 = (v176 + v158 + 7) & 0xFFFFFFFFFFFFFFF8;
          v160 = (v159 + 15) & 0xFFFFFFFFFFFFFFF8;
          v161 = swift_allocObject(&unk_10072FA38, v160 + 8, v152 | v157 | 7);
          v162 = v161 + v153;
          *(_QWORD *)(v161 + 16) = 0;
          *(_QWORD *)(v161 + 24) = 0;
          v163 = v184;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v162, v151, v184);
          v164 = v192;
          *(_QWORD *)(v161 + v154) = v193;
          v165 = v180;
          *(_QWORD *)(v161 + v155) = v180;
          (*(void (**)(uint64_t, _BYTE *, id))(v156 + 32))(v161 + v158, v181, v164);
          *(_QWORD *)(v161 + v159) = v179;
          *(_QWORD *)(v161 + v160) = v174;
          v166 = v190;
          v167 = v165;
          v168 = sub_100252AF4((uint64_t)v183, (uint64_t)&unk_1007C6410, v161);
          swift_release(v168);
          swift_release(v189);
          (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v182, v163);
          return;
        }
      }
      v143 = Logger.logObject.getter(v116);
      v144 = static os_log_type_t.error.getter(v143);
      v126 = 65538;
      if (os_log_type_enabled(v143, v144))
      {
        v145 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v145 = 0;
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "No device filter set because no mac listed that performed last unlock", v145, 2u);
        swift_slowDealloc(v145, -1, -1);
      }

      v131 = 0;
      v129 = _swiftEmptyArrayStorage;
      v130 = 1;
    }
    else
    {
      v131 = 0;
      v129 = _swiftEmptyArrayStorage;
      v130 = 1;
      v126 = 2;
    }
    v128 = 5;
    goto LABEL_66;
  }
  if (v51 != 4)
  {
    v80 = Logger.logObject.getter(v69);
    v108 = static os_log_type_t.error.getter(v80);
    if (os_log_type_enabled(v80, v108))
    {
      v109 = (uint8_t *)swift_slowAlloc(12, -1);
      v110 = swift_slowAlloc(32, -1);
      v197 = v110;
      *(_DWORD *)v109 = 136315138;
      v111 = sub_1003FDAA0(v51);
      v113 = (const char *)v112;
      *(_QWORD *)&v194 = sub_100228BD8(v111, v112, &v197);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 8, v109 + 4);
      swift_bridgeObjectRelease(v113);
      _os_log_impl((void *)&_mh_execute_header, v80, v108, "Unhandled authentication type %s was not triggered", v109, 0xCu);
      swift_arrayDestroy(v110, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v110, -1, -1);
      v114 = v109;
LABEL_57:
      swift_slowDealloc(v114, -1, -1);
    }
LABEL_58:

    v140 = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], v139);
    if (!v140)
      return;
    v141 = (void *)v140;
    v107.super.isa = UUID._bridgeToObjectiveC()().super.isa;
    v142 = sub_10056F370(19, 0, 0xE000000000000000);
    objc_msgSend(v141, "manager:didFailAuthenticationFor:error:", v4, v107.super.isa, v142);
    swift_unknownObjectRelease(v141);

LABEL_60:
    return;
  }
  IsRealityDevice = SFDeviceIsRealityDevice(v69);
  v78 = IsRealityDevice;
  v79 = Logger.logObject.getter(IsRealityDevice);
  v80 = v79;
  if (!v78)
  {
    v137 = static os_log_type_t.error.getter(v79);
    if (os_log_type_enabled(v80, v137))
    {
      v138 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v138 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v137, "autool authenticate on iPhone is unsupported. Run the command on the companion device", v138, 2u);
      v114 = v138;
      goto LABEL_57;
    }
    goto LABEL_58;
  }
  v81 = static os_log_type_t.default.getter(v79);
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v82 = 0;
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Manually triggering state change for urgent arming path on companion device", v82, 2u);
    swift_slowDealloc(v82, -1, -1);
  }

  v83 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v84 = String._bridgeToObjectiveC()();
  objc_msgSend(v83, "setBool:forKey:", 1, v84);

  sub_10054C088(1);
}

uint64_t sub_10055060C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[28] = a7;
  v8[29] = a8;
  v8[26] = a5;
  v8[27] = a6;
  v8[25] = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v8[30] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[31] = v10;
  v8[32] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v8[33] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[34] = v12;
  v8[35] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v8[36] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[37] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[38] = v15;
  v8[39] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007C6420);
  v8[40] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[41] = v17;
  v8[42] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005506F4, 0, 0);
}

uint64_t sub_1005506F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C5FF8);
  v0[43] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Beginning scanning for enabled iPhones", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[27];

  v7 = sub_100008384(&qword_1007C6400);
  AsyncThrowingStream.makeAsyncIterator()(v7);
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone;
  v0[44] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone;
  swift_beginAccess(v6 + v8, v0 + 18, 0, 0);
  v9 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  v0[45] = v9;
  *v9 = v0;
  v9[1] = sub_10055086C;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 23, 0, 0, v0[40], v0 + 21);
}

uint64_t sub_10055086C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 360));
  if (v0)
    v2 = sub_100551314;
  else
    v2 = sub_1005508D0;
  return swift_task_switch(v2, 0, 0);
}

id sub_1005508D0()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  id result;
  void *v17;
  id v18;
  unsigned int v19;
  id v20;
  void *v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  Class v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  const char *v43;
  double v44;
  NSObject *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  double v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  Class v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;

  v1 = *(void **)(v0 + 184);
  if (!v1)
  {
    v8 = *(_QWORD *)(v0 + 216);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
    v9 = sub_10056F370(20, 0, 0xE000000000000000);
    Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v10);
    if (Strong)
    {
      v12 = (void *)Strong;
      v13 = *(_QWORD *)(v0 + 216);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v12, "manager:didFailAuthenticationFor:error:", v13, isa, v9);

      swift_unknownObjectRelease(v12);
    }
    else
    {

    }
LABEL_45:
    v84 = *(_QWORD *)(v0 + 312);
    v85 = *(_QWORD *)(v0 + 280);
    v86 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    *(_QWORD *)(v5 + 4) = v2;
    *v6 = v1;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Found %@", (uint8_t *)v5, 0xCu);
    v7 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v6, 1, v7);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {

  }
  v15 = *(_QWORD *)(v0 + 208);
  if (v15 == 7)
  {
    sub_100221F28(*(_QWORD *)(v0 + 216) + *(_QWORD *)(v0 + 352), v0 + 64, &qword_1007B9E38);
    if (!*(_QWORD *)(v0 + 88))
    {
      v25 = sub_10000D0F0(v0 + 64, &qword_1007B9E38);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Could not find mac that previously put phone into assert delay", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }
      v29 = *(_QWORD *)(v0 + 216);

      v30 = sub_10056F370(1, 0, 0xE000000000000000);
      v32 = swift_unknownObjectWeakLoadStrong(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v31);
      if (v32)
      {
        v33 = (void *)v32;
        v34 = *(_QWORD *)(v0 + 216);
        v35 = UUID._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v33, "manager:didFailAuthenticationFor:error:", v34, v35, v30);
        swift_unknownObjectRelease(v33);

      }
      v37 = *(_QWORD *)(v0 + 328);
      v36 = *(_QWORD *)(v0 + 336);
      v38 = *(_QWORD *)(v0 + 320);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
      goto LABEL_45;
    }
    sub_10026EE60((__int128 *)(v0 + 64), v0 + 104);
    v20 = objc_msgSend(v2, "idsDeviceIdentifier");
    if (v20)
    {
      v21 = v20;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v39 = *(_QWORD *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 136);
    sub_10023A834((_QWORD *)(v0 + 104), v39);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    v43 = v42;
    if (v24)
    {
      if (v42)
      {
        if (v22 != v41 || v24 != v42)
        {
          v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v41, v42, 0);
          *(_QWORD *)&v53 = swift_bridgeObjectRelease(v24).n128_u64[0];
          swift_bridgeObjectRelease(v43, v53);
          sub_10022E75C((_QWORD *)(v0 + 104));
          if ((v52 & 1) != 0)
            goto LABEL_36;
          goto LABEL_30;
        }
        *(_QWORD *)&v44 = swift_bridgeObjectRelease(v24).n128_u64[0];
        swift_bridgeObjectRelease(v43, v44);
LABEL_34:
        sub_10022E75C((_QWORD *)(v0 + 104));
        goto LABEL_36;
      }
    }
    else
    {
      if (!v42)
        goto LABEL_34;
      v24 = v42;
    }
    swift_bridgeObjectRelease(v24);
    sub_10022E75C((_QWORD *)(v0 + 104));
    goto LABEL_30;
  }
  if (v15 == 6)
  {
    result = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
    if (!result)
    {
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }
    v17 = result;
    v18 = objc_msgSend(v2, "idsDeviceIdentifier");
    v19 = objc_msgSend(v17, "deviceEnabledAsKeyForIDSDeviceID:", v18);

    if (v19)
    {
LABEL_36:
      result = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
      if (result)
      {
        v54 = result;
        v55 = objc_msgSend(v2, "idsDeviceIdentifier");
        v56 = objc_msgSend(v54, "idsDeviceForUniqueID:", v55);

        if (v56)
        {
          v98 = *(_QWORD *)(v0 + 336);
          v95 = *(_QWORD *)(v0 + 328);
          v57 = *(_QWORD *)(v0 + 312);
          v96 = *(_QWORD *)(v0 + 320);
          v58 = *(_QWORD *)(v0 + 296);
          v59 = *(_QWORD *)(v0 + 304);
          v60 = *(_QWORD *)(v0 + 288);
          v93 = *(_QWORD *)(v0 + 272);
          v94 = *(_QWORD *)(v0 + 264);
          v89 = *(_QWORD *)(v0 + 280);
          v90 = *(_QWORD *)(v0 + 256);
          v92 = *(_QWORD *)(v0 + 248);
          v61 = *(void **)(v0 + 216);
          v87 = *(_QWORD *)(v0 + 208);
          v88 = *(void **)(v0 + 232);
          v91 = *(_QWORD *)(v0 + 240);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 16))(v57, *(_QWORD *)(v0 + 224), v60);
          v62 = *(unsigned __int8 *)(v58 + 80);
          v63 = (v62 + 40) & ~v62;
          v64 = (v59 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
          v65 = (char *)swift_allocObject(&unk_10072FA88, v64 + 8, v62 | 7);
          *((_QWORD *)v65 + 2) = v56;
          *((_QWORD *)v65 + 3) = v61;
          *((_QWORD *)v65 + 4) = v87;
          (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(&v65[v63], v57, v60);
          *(_QWORD *)&v65[v64] = v88;
          *(_QWORD *)(v0 + 48) = sub_1005740E0;
          *(_QWORD *)(v0 + 56) = v65;
          *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
          *(_QWORD *)(v0 + 24) = 1107296256;
          *(_QWORD *)(v0 + 32) = sub_10025BBB4;
          *(_QWORD *)(v0 + 40) = &unk_10072FAA0;
          v66 = _Block_copy((const void *)(v0 + 16));
          v67 = v88;
          v68 = v56;
          static DispatchQoS.unspecified.getter(v61);
          *(_QWORD *)(v0 + 192) = _swiftEmptyArrayStorage;
          v69 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v70 = sub_100008384((uint64_t *)&unk_1007B6410);
          v71 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
          dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 192, v70, v71, v91, v69);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v89, v90, v66);
          _Block_release(v66);

          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v91);
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v89, v94);
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v98, v96);
          swift_release(*(_QWORD *)(v0 + 56));
        }
        else
        {
          v72 = v2;
          v73 = Logger.logObject.getter(v72);
          v74 = static os_log_type_t.error.getter(v73);
          if (os_log_type_enabled(v73, v74))
          {
            v75 = (uint8_t *)swift_slowAlloc(12, -1);
            v97 = (_QWORD *)swift_slowAlloc(8, -1);
            *(_DWORD *)v75 = 138412290;
            *(_QWORD *)(v0 + 176) = v72;
            v76 = v72;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v75 + 4);
            *v97 = v1;

            _os_log_impl((void *)&_mh_execute_header, v73, v74, "Could not find IDS device for discovered device. This shouldn't happen %@", v75, 0xCu);
            v77 = sub_100008384(&qword_1007B4C30);
            swift_arrayDestroy(v97, 1, v77);
            swift_slowDealloc(v97, -1, -1);
            swift_slowDealloc(v75, -1, -1);
          }
          else
          {

          }
          v79 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v78);
          if (v79)
          {
            v80 = (void *)v79;
            v81 = *(_QWORD *)(v0 + 216);
            v82 = UUID._bridgeToObjectiveC()().super.isa;
            v83 = sub_10056F370(10, 0, 0xE000000000000000);
            objc_msgSend(v80, "manager:didFailAuthenticationFor:error:", v81, v82, v83);
            swift_unknownObjectRelease(v80);

          }
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
        }
        goto LABEL_45;
      }
      goto LABEL_47;
    }
  }
LABEL_30:
  v45 = v2;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(12, -1);
    v49 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v48 = 138412290;
    *(_QWORD *)(v48 + 4) = v45;
    *v49 = v1;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%@ not enabled to be unlocked by this device", (uint8_t *)v48, 0xCu);
    v50 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v49, 1, v50);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);
  }
  else
  {

    v46 = v45;
  }

  v51 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 368) = v51;
  *v51 = v0;
  v51[1] = sub_1005512B0;
  return (id)_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 184, 0, 0, *(_QWORD *)(v0 + 320), v0 + 168);
}

uint64_t sub_1005512B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 368));
  if (v0)
    v2 = sub_100551314;
  else
    v2 = sub_1005508D0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100551314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(v1, *(_QWORD *)(v0 + 320));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10055138C(void *a1, void *a2, Swift::UInt a3, char *a4, void *a5)
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  void *v26;
  Swift::UInt v27;
  __int128 v28;
  __int128 v29;
  _UNKNOWN **v30;

  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007C5FF8);
  v11 = a1;
  v12 = a2;
  v13 = v11;
  v14 = (char *)v12;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (!os_log_type_enabled(v15, v16))
  {

    if (a5)
      goto LABEL_5;
LABEL_7:
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    goto LABEL_8;
  }
  v17 = swift_slowAlloc(22, -1);
  v26 = a5;
  v18 = (_QWORD *)swift_slowAlloc(16, -1);
  *(_DWORD *)v17 = 138412546;
  *(_QWORD *)&v28 = v13;
  v27 = a3;
  v19 = v13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 8, v17 + 4);
  *v18 = v13;

  *(_WORD *)(v17 + 12) = 2112;
  v20 = *(void **)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *(_QWORD *)&v28 = v20;
  v21 = v20;
  a3 = v27;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 8, v17 + 14);
  v18[1] = v20;

  _os_log_impl((void *)&_mh_execute_header, v15, v16, "Beginning authentication with %@ on queue %@", (uint8_t *)v17, 0x16u);
  v22 = sub_100008384(&qword_1007B4C30);
  swift_arrayDestroy(v18, 2, v22);
  v23 = v18;
  a5 = v26;
  swift_slowDealloc(v23, -1, -1);
  swift_slowDealloc(v17, -1, -1);

  if (!v26)
    goto LABEL_7;
LABEL_5:
  *((_QWORD *)&v29 + 1) = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
  v30 = &off_100727E08;
  *(_QWORD *)&v28 = a5;
LABEL_8:
  v24 = v13;
  v25 = a5;
  sub_10056C098(a3, v24, a4, (uint64_t)&v28, v14);
  sub_10000D0F0((uint64_t)&v28, &qword_1007C62D8);

}

void sub_1005516D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  const char **v30;
  double v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v41 - v8;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v45 = v1;
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007C5FF8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
  v44 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = v4;
  v21 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v50 = v43;
    *(_DWORD *)v22 = 136315138;
    v42 = v22 + 4;
    v23 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v3, v23);
    v26 = (const char *)v25;
    *(_QWORD *)&v47 = sub_100228BD8(v24, v25, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, (char *)&v47 + 8, v42);
    v27 = swift_bridgeObjectRelease(v26);
    v28 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v28(v9, v3, v27);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "Asked to cancel %s", v22, 0xCu);
    v29 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    ((void (*)(char *, uint64_t))v28)(v9, v3);
  }

  v30 = (const char **)(v45 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  *(_QWORD *)&v31 = swift_beginAccess(v45 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions, v46, 0, 0).n128_u64[0];
  v32 = *v30;
  v33 = *((_QWORD *)*v30 + 2);
  if (v33)
  {
    v34 = (uint64_t)(v32 + 32);
    swift_bridgeObjectRetain(*v30, v31);
    while (1)
    {
      sub_100244418(v34, (uint64_t)&v50);
      v36 = v51;
      v35 = v52;
      sub_10023A834(&v50, v51);
      (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v35 + 8) + 8) + 32))(v36);
      LOBYTE(v35) = static UUID.== infix(_:_:)(v7, a1);
      ((void (*)(char *, uint64_t))v28)(v7, v3);
      if ((v35 & 1) != 0)
        break;
      sub_10022E75C(&v50);
      v34 += 40;
      if (!--v33)
        goto LABEL_12;
    }
    sub_10026EE60(&v50, (uint64_t)&v47);
  }
  else
  {
    swift_bridgeObjectRetain(*v30, v31);
LABEL_12:
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
  }
  swift_bridgeObjectRelease(v32);
  if (*((_QWORD *)&v48 + 1))
  {
    sub_10026EE60(&v47, (uint64_t)&v50);
    sub_10023A834(&v50, v51);
    sub_1003E5E04();
    sub_10022E75C(&v50);
  }
  else
  {
    v37 = sub_10000D0F0((uint64_t)&v47, &qword_1007C63B0);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Could not find session to cancel", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

  }
}

uint64_t sub_100551B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100551B44, 0, 0);
}

uint64_t sub_100551B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  *(_QWORD *)(v0 + 32) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 40) = v3;
  if (!v3)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = dword_1007B8C0C;
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_100551BC4;
  return sub_1002C230C();
}

uint64_t sub_100551BC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100551C38, 0, 0);
  swift_release(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100551C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release(*(_QWORD *)(v0 + 40));
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007C5FF8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not start nearbyInfo advertiser for approve, got error %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    swift_errorRelease(v7);
  }

  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 32));
  v13 = *(_QWORD *)(v0 + 56);
  if (v12)
  {
    swift_retain();
    sub_1002C27D8();
    swift_errorRelease(v13);
    swift_release(v12);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
  }
  v15 = *(_QWORD *)(v0 + 24);
  v14 = *(_QWORD *)(v0 + 32);
  v16 = *(_QWORD *)(v15 + v14);
  *(_QWORD *)(v15 + v14) = 0;
  swift_release(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100551E74(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  unint64_t v35;
  __n128 v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  const char *v73;
  __n128 v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  char v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  int v91;
  uint64_t *v92;
  uint64_t v93;
  os_log_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  char v104;
  char v105[24];
  __int128 v106[2];
  _BYTE v107[24];
  uint64_t v108[5];

  v101 = a2;
  v102 = a4;
  v100 = a3;
  v6 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v6);
  v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v90 - v13;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char **)((char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = v4;
  v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100221DF8(v21, (uint64_t)qword_1007C5FF8);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v14, v102, v8);
  v24 = v101;
  sub_100244404(a1, v101);
  v25 = v100;
  swift_errorRetain(v100);
  sub_100244404(a1, v24);
  v26 = swift_errorRetain(v25);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    v91 = v28;
    v94 = v27;
    v95 = v23;
    v96 = v22;
    v90 = v12;
    v29 = v8;
    v30 = swift_slowAlloc(28, -1);
    v92 = (uint64_t *)swift_slowAlloc(8, -1);
    v93 = swift_slowAlloc(32, -1);
    v108[0] = v93;
    *(_DWORD *)v30 = 136315650;
    v31 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v32 = dispatch thunk of CustomStringConvertible.description.getter(v29, v31);
    v34 = (const char *)v33;
    *(_QWORD *)&v106[0] = sub_100228BD8(v32, v33, v108);
    v35 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 4);
    v36 = swift_bridgeObjectRelease(v34);
    v37 = *(void (**)(char *, uint64_t))(v9 + 8);
    v38 = v29;
    v98 = v37;
    ((void (*)(char *, uint64_t, __n128))v37)(v14, v29, v36);
    *(_WORD *)(v30 + 12) = 1024;
    sub_100225AA0(a1, v35);
    LODWORD(v106[0]) = v35 >> 60 != 15;
    v25 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 4, v30 + 14);
    sub_100225AA0(a1, v35);
    *(_WORD *)(v30 + 18) = 2112;
    if (v25)
    {
      swift_errorRetain(v25);
      v39 = _swift_stdlib_bridgeErrorToNSError(v25);
      *(_QWORD *)&v106[0] = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 20);
    }
    else
    {
      *(_QWORD *)&v106[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 20);
      v39 = 0;
    }
    v12 = v90;
    v42 = v92;
    *v92 = v39;
    swift_errorRelease(v25);
    swift_errorRelease(v25);
    v43 = v94;
    _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v91, "Got approval result for session %s: User approved - %{BOOL}d, error - %@", (uint8_t *)v30, 0x1Cu);
    v44 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v42, 1, v44);
    swift_slowDealloc(v42, -1, -1);
    v45 = v93;
    swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v30, -1, -1);

    v8 = v38;
    v41 = v99;
    v23 = v95;
  }
  else
  {
    v40 = v101;
    sub_100225AA0(a1, v101);
    v98 = *(void (**)(char *, uint64_t))(v9 + 8);
    v98(v14, v8);
    sub_100225AA0(a1, v40);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    v41 = v99;
  }
  v46 = (uint64_t *)(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
  swift_beginAccess(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, v107, 32, 0);
  v47 = *v46;
  if (*(_QWORD *)(*v46 + 16) && (v48 = sub_10045C2DC(v102), (v49 & 1) != 0))
  {
    sub_100244418(*(_QWORD *)(v47 + 56) + 40 * v48, (uint64_t)v106);
    sub_10026EE60(v106, (uint64_t)v108);
    swift_endAccess(v107);
    v103 = 0;
    v104 = 1;
    if (v25)
    {
      type metadata accessor for Code(0);
      v51 = v50;
      *(_QWORD *)&v106[0] = -9;
      swift_errorRetain(v25);
      v52 = sub_100220D78(&qword_1007B4E20, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1005CE84C);
      if ((static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52) & 1) != 0)
        goto LABEL_15;
      *(_QWORD *)&v106[0] = -4;
      swift_errorRetain(v25);
      v53 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52);
      swift_errorRelease(v25);
      if ((v53 & 1) != 0
        || (*(_QWORD *)&v106[0] = -2,
            swift_errorRetain(v25),
            v54 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52),
            swift_errorRelease(v25),
            (v54 & 1) != 0))
      {
LABEL_15:
        v55 = a1;
        v56 = 14;
      }
      else
      {
        *(_QWORD *)&v106[0] = -1;
        swift_errorRetain(v25);
        v89 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52);
        swift_errorRelease(v25);
        v55 = a1;
        if ((v89 & 1) != 0)
          v56 = 32;
        else
          v56 = 31;
      }
      v103 = v56;
      v104 = 0;
      swift_errorRetain(v25);
      v57 = swift_errorRetain(v25);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter(v58);
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(22, -1);
        v61 = v25;
        v62 = (uint64_t *)swift_slowAlloc(16, -1);
        *(_DWORD *)v60 = 138412546;
        swift_errorRetain(v61);
        v63 = _swift_stdlib_bridgeErrorToNSError(v61);
        *(_QWORD *)&v106[0] = v63;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 4);
        *v62 = v63;
        swift_errorRelease(v61);
        swift_errorRelease(v61);
        *(_WORD *)(v60 + 12) = 2112;
        swift_beginAccess(&v103, v105, 0, 0);
        if ((v104 & 1) != 0)
        {
          *(_QWORD *)&v106[0] = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 14);
          v64 = 0;
        }
        else
        {
          v75 = v103;
          type metadata accessor for SFAuthenticationError(0);
          v77 = v76;
          v78 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
          v79 = swift_allocError(v77, v78, 0, 0);
          *v80 = v75;
          v64 = _swift_stdlib_bridgeErrorToNSError(v79);
          *(_QWORD *)&v106[0] = v64;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 14);
        }
        v62[1] = v64;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Sending received error %@ as %@", (uint8_t *)v60, 0x16u);
        v81 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v62, 2, v81);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v60, -1, -1);

        swift_errorRelease(v100);
      }
      else
      {
        swift_errorRelease(v25);
        swift_errorRelease(v25);
        swift_errorRelease(v25);

      }
      a1 = v55;
    }
    swift_beginAccess(&v103, v107, 0, 0);
    v82 = v104;
    if (v104)
      v83 = 0;
    else
      v83 = v103;
    v84 = type metadata accessor for TaskPriority(0);
    v85 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v97, 1, 1, v84);
    sub_100244418((uint64_t)v108, (uint64_t)v106);
    v86 = swift_allocObject(&unk_10072F9E8, 96, 7);
    *(_QWORD *)(v86 + 16) = 0;
    *(_QWORD *)(v86 + 24) = 0;
    sub_10026EE60(v106, v86 + 32);
    v87 = v101;
    *(_QWORD *)(v86 + 72) = a1;
    *(_QWORD *)(v86 + 80) = v87;
    *(_BYTE *)(v86 + 88) = v82 ^ 1;
    *(_DWORD *)(v86 + 92) = v83;
    sub_100244404(a1, v87);
    sub_100244404(a1, v87);
    v88 = sub_100252EC0(v85, (uint64_t)&unk_1007C63E8, v86);
    swift_release(v88);
    sub_100225AA0(a1, v87);
    sub_10022E75C(v108);
  }
  else
  {
    swift_endAccess(v107);
    v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v12, v102, v8);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(12, -1);
      v69 = swift_slowAlloc(32, -1);
      v108[0] = v69;
      *(_DWORD *)v68 = 136315138;
      v70 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v71 = dispatch thunk of CustomStringConvertible.description.getter(v8, v70);
      v73 = (const char *)v72;
      *(_QWORD *)&v106[0] = sub_100228BD8(v71, v72, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v68 + 4);
      v74 = swift_bridgeObjectRelease(v73);
      ((void (*)(char *, uint64_t, __n128))v98)(v12, v8, v74);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "No session found for approval result sessionID %s, dropping report", v68, 0xCu);
      swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v68, -1, -1);
    }
    else
    {
      v98(v12, v8);
    }

  }
}

uint64_t sub_100552954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch(sub_100552970, 0, 0);
}

uint64_t sub_100552970()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  sub_10023A834(*(_QWORD **)(v0 + 56), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24));
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 40) = &type metadata for SDAuthenticationApproveResult;
  *(_QWORD *)(v0 + 48) = &off_100722F58;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = v1 & 1;
  *(_DWORD *)(v0 + 36) = HIDWORD(v1);
  sub_100244404(v3, v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1007BF8C4);
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_100552A18;
  return sub_1003F4174(v0 + 16);
}

uint64_t sub_100552A18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  sub_10000D0F0(v1, (uint64_t *)&unk_1007BFA90);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100552B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  const char *v36;
  __n128 v37;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v43 = a1;
  v44 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = v2;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  v16 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    v41 = v7;
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v17 = type metadata accessor for Logger(0);
  sub_100221DF8(v17, (uint64_t)qword_1007C5FF8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19 = v18(v9, v44, v3);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v40 = v18;
    v24 = v23;
    v46[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v25 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v26 = dispatch thunk of CustomStringConvertible.description.getter(v3, v25);
    v28 = (const char *)v27;
    v45 = sub_100228BD8(v26, v27, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v22 + 4);
    v29 = swift_bridgeObjectRelease(v28);
    v30 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v30(v9, v3, v29);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Added observer for authenticationStateChanged with id: %s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v31 = v24;
    v18 = v40;
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    ((void (*)(char *, uint64_t))v30)(v9, v3);
  }

  v32 = (uint64_t)v41;
  v18(v41, v44, v3);
  v33 = (uint64_t *)(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers);
  swift_beginAccess(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers, v46, 33, 0);
  v34 = v43;
  swift_unknownObjectRetain(v43);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
  v45 = *v33;
  *v33 = 0x8000000000000000;
  sub_10046D898(v34, v32, isUniquelyReferenced_nonNull_native);
  v36 = (const char *)*v33;
  *v33 = v45;
  v37 = swift_bridgeObjectRelease(v36);
  v30((char *)v32, v3, v37);
  return swift_endAccess(v46);
}

uint64_t sub_100552F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v14 = type metadata accessor for Logger(0);
  sub_100221DF8(v14, (uint64_t)qword_1007C5FF8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v30 = a1;
    v20 = v19;
    v32[0] = v19;
    v29 = v2;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v4, v21);
    v24 = (const char *)v23;
    v31 = sub_100228BD8(v22, v23, v32);
    v2 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32, v18 + 4);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v25);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Removed observer for authenticationStateChanged with id: %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v26 = v20;
    a1 = v30;
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers, v32, 33, 0);
  v27 = sub_10026B368(a1);
  swift_endAccess(v32);
  return swift_unknownObjectRelease(v27);
}

uint64_t sub_100553280(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100553320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v6;
  char *v7;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD *);
  char *v25;
  uint64_t v26;
  void (*v27)(_QWORD *__return_ptr, char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(_QWORD *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  _BYTE v39[40];
  _QWORD v40[6];

  v7 = v6;
  v33 = a3;
  v34 = a5;
  v32 = a2;
  v36 = a1;
  v37 = a6;
  ObjectType = swift_getObjectType(v6);
  v35 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SDAuthenticationCommonOperationInput(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)(v19);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD *))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator];
    v23 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator + 8];
    v40[3] = ObjectType;
    v40[4] = &off_10072F2A8;
    v40[0] = v7;
    swift_retain(v23);
    v25 = v7;
    v26 = v36;
    v24(v36, v32, v33, a4 & 1, v40);
    swift_release(v23);
    sub_10022E75C(v40);
    v27 = *(void (**)(_QWORD *__return_ptr, char *, char *, uint64_t))&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator];
    v28 = *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator + 8];
    swift_retain(v28);
    v27(v40, v15, v25, v34);
    swift_release(v28);
    v29 = *(void (**)(_QWORD *))&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator];
    v30 = *(_QWORD *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator + 8];
    swift_retain(v30);
    v31 = v37;
    v29(v40);
    swift_release(v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v35);
    sub_100244418(v31, (uint64_t)v39);
    swift_beginAccess(&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions], v38, 33, 0);
    sub_100395578((uint64_t)v39, (uint64_t)v12);
    swift_endAccess(v38);
    sub_10022E75C(v40);
    return sub_1002443C8((uint64_t)v15, type metadata accessor for SDAuthenticationCommonOperationInput);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005535A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch(sub_1005535C4, 0, 0);
}

uint64_t sub_1005535C4()
{
  uint64_t v0;
  _QWORD *v1;

  sub_10023A834(*(_QWORD **)(v0 + 56), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24));
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  v1 = (_QWORD *)swift_task_alloc(dword_1007BF8C4);
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_100553630;
  return sub_1003F4174(v0 + 16);
}

uint64_t sub_100553630()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0 + 16;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  sub_10000D0F0(v1, (uint64_t *)&unk_1007BFA90);
  return swift_task_switch(sub_100553698, 0, 0);
}

uint64_t sub_100553698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  Class isa;

  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C5FF8);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "started auth session", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 64);

  v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v7, "postNotificationName:object:", CFSTR("SDAuthenticationSessionStarted"), 0);

  if (v6 != 4)
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate, v8);
    if (Strong)
    {
      v10 = (void *)Strong;
      v11 = *(_QWORD *)(v0 + 72);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v10, "manager:didStartAuthenticationFor:", v11, isa);
      swift_unknownObjectRelease(v10);

    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100553810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD *v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  v8 = swift_allocObject(&unk_10072F508, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v0);
  aBlock[4] = sub_10056FAC4;
  v19 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_10072F598;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v8);
  static DispatchQoS.unspecified.getter(v10);
  v17 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_100008384((uint64_t *)&unk_1007B6410);
  v13 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v19);
  return swift_release(v8);
}

void sub_100553A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  id v16;
  void *v17;
  unsigned __int8 v18;
  id v19;
  void *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _DWORD *v31;
  _DWORD *v32;
  _DWORD *v33;
  id v34;
  void *v35;
  id v36;
  NSString v37;
  unsigned int v38;
  uint64_t v39;
  id v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  int v51;
  uint8_t *v52;
  _UNKNOWN **v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  Class isa;
  NSString v72;
  uint64_t v73;
  int v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  __int128 v80;
  __int128 v81;
  _UNKNOWN **v82;
  char v83[24];
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  char v87[32];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v87, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v9);
  if (!Strong)
    return;
  v11 = (char *)Strong;
  v12 = (void *)objc_opt_self(SDStatusMonitor);
  v13 = objc_msgSend(v12, "sharedMonitor");
  if (!v13)
  {
    __break(1u);
    goto LABEL_43;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "deviceKeyBagDisabled");

  v16 = objc_msgSend(v12, "sharedMonitor");
  if (!v16)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "deviceKeyBagUnlocked");

  v19 = objc_msgSend(v12, "sharedMonitor");
  if (!v19)
  {
LABEL_44:
    __break(1u);
    return;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, "screenOn");

  v24 = SFDeviceClassCodeGet(v22, v23);
  if ((_DWORD)v24 == 1)
  {
    v76 = v3;
    v25 = v21 ^ 1;
    if ((v21 ^ 1 | v15) == 1)
    {
      v26 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted;
      if (v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] == 1)
      {
        if (qword_1007B42C0 != -1)
          swift_once(&qword_1007B42C0, sub_1005477EC);
        v27 = type metadata accessor for Logger(0);
        v28 = sub_100221DF8(v27, (uint64_t)qword_1007C5FF8);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (_DWORD *)swift_slowAlloc(14, -1);
          v75 = v26;
          v32 = v31;
          *v31 = 67109376;
          LODWORD(v84[0]) = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v84, (char *)v84 + 4, v31 + 1);
          *((_WORD *)v32 + 4) = 1024;
          LODWORD(v84[0]) = v15;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v84, (char *)v84 + 4, (char *)v32 + 10);
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Dismissing unlock request notification on screen off: %{BOOL}d, passcode disable: %{BOOL}d", (uint8_t *)v32, 0xEu);
          v33 = v32;
          v26 = v75;
          swift_slowDealloc(v33, -1, -1);
        }

        v34 = objc_msgSend((id)objc_opt_self(SDAutoUnlockNotificationsManager), "sharedManager");
        objc_msgSend(v34, "dismissRequestToUnlockNotification");

        *((_BYTE *)&v26->isa + (_QWORD)v11) = 0;
      }
      if (v15)
        sub_100554374();
    }
    if ((v18 & 1) != 0)
    {
      v35 = (void *)objc_opt_self(NSUserDefaults);
      v36 = objc_msgSend(v35, "standardUserDefaults");
      v37 = String._bridgeToObjectiveC()();
      v38 = objc_msgSend(v36, "BOOLForKey:", v37);

      v39 = v76;
      if (v38)
      {
        v40 = objc_msgSend(v35, "standardUserDefaults");
        v41 = String._bridgeToObjectiveC()();
        objc_msgSend(v40, "setBool:forKey:", 0, v41);

        if (qword_1007B42C0 != -1)
          swift_once(&qword_1007B42C0, sub_1005477EC);
        v42 = type metadata accessor for Logger(0);
        v43 = sub_100221DF8(v42, (uint64_t)qword_1007C5FF8);
        v44 = Logger.logObject.getter(v43);
        v45 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v46 = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "Showing notification since phone was unlocked via Oneness", v46, 2u);
          swift_slowDealloc(v46, -1, -1);
        }

        if (qword_1007B3FB0 != -1)
          swift_once(&qword_1007B3FB0, sub_10037C2E8);
        sub_10037DF18();
      }
      if (v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] == 1)
      {
        v47 = (uint64_t)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice];
        swift_beginAccess(&v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice], v83, 0, 0);
        sub_100221F28(v47, (uint64_t)&v80, &qword_1007B9E38);
        if (*((_QWORD *)&v81 + 1))
        {
          sub_10026EE60(&v80, (uint64_t)v84);
          if (qword_1007B42C0 != -1)
            swift_once(&qword_1007B42C0, sub_1005477EC);
          v48 = type metadata accessor for Logger(0);
          sub_100221DF8(v48, (uint64_t)qword_1007C5FF8);
          v49 = sub_100244418((uint64_t)v84, (uint64_t)&v80);
          v50 = Logger.logObject.getter(v49);
          v51 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v50, (os_log_type_t)v51))
          {
            v74 = v51;
            v75 = v50;
            v52 = (uint8_t *)swift_slowAlloc(12, -1);
            v73 = swift_slowAlloc(32, -1);
            v77 = v73;
            *(_DWORD *)v52 = 136315138;
            v54 = *((_QWORD *)&v81 + 1);
            v53 = v82;
            sub_10023A834(&v80, *((uint64_t *)&v81 + 1));
            v55 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v53[1])(v54, v53);
            if (v56)
            {
              v57 = v56;
            }
            else
            {
              v78 = 0;
              v79 = 0xE000000000000000;
              _StringGuts.grow(_:)(17);
              swift_bridgeObjectRelease(v79);
              v55 = 0xD000000000000015;
              v57 = 0x8000000100612DF0;
            }
            v39 = v76;
            v78 = sub_100228BD8(v55, v57, &v77);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v52 + 4);
            swift_bridgeObjectRelease(v57);
            sub_10022E75C(&v80);
            v50 = v75;
            _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v74, "Trying to authenticate with device that previously failed due to expired escrow %s", v52, 0xCu);
            v61 = v73;
            swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v61, -1, -1);
            swift_slowDealloc(v52, -1, -1);
          }
          else
          {
            sub_10022E75C(&v80);
          }

          UUID.init()(v62);
          v63 = objc_msgSend(objc_allocWithZone((Class)SFAuthenticationOptions), "init");
          *((_QWORD *)&v81 + 1) = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
          v82 = &off_100727E08;
          *(_QWORD *)&v80 = v63;
          v64 = v85;
          v65 = v86;
          v66 = sub_10023A834(v84, v85);
          sub_10056CD50(4, (uint64_t)v66, (uint64_t)v5, (uint64_t)&v80, v11, v64, v65);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
          sub_10022E75C(v84);
          sub_10000D0F0((uint64_t)&v80, &qword_1007C62D8);
          v82 = 0;
          v80 = 0u;
          v81 = 0u;
          swift_beginAccess(v47, &v78, 33, 0);
          sub_10023A084((uint64_t)&v80, v47, &qword_1007B9E38);
          swift_endAccess(&v78);
        }
        else
        {
          sub_10000D0F0((uint64_t)&v80, &qword_1007B9E38);
        }
      }
      v67 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v8, 1, 1, v67);
      v68 = &v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
      swift_beginAccess(&v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v84, 33, 0);
      v69 = type metadata accessor for StateMetrics(0);
      sub_10023A084((uint64_t)v8, (uint64_t)&v68[*(int *)(v69 + 24)], &qword_1007C4330);
      swift_endAccess(v84);
      v70 = objc_msgSend(v35, "standardUserDefaults");
      isa = Bool._bridgeToObjectiveC()().super.super.isa;
      v72 = String._bridgeToObjectiveC()();
      objc_msgSend(v70, "setValue:forKey:", isa, v72);

    }
    else
    {
      Date.init()(v24);
      v58 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v8, 0, 1, v58);
      v59 = &v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
      swift_beginAccess(&v11[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v84, 33, 0);
      v60 = type metadata accessor for StateMetrics(0);
      sub_10023A084((uint64_t)v8, (uint64_t)&v59[*(int *)(v60 + 24)], &qword_1007C4330);
      swift_endAccess(v84);
    }
  }
  else if (SFDeviceIsRealityDevice(v24))
  {
    sub_10054C088(0);
  }

}

void sub_100554374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  NSString v42;
  _QWORD v43[4];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_4;
  }
  v8 = sub_100556420();
  v9 = sub_100569784(1, (uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  v10 = sub_10054F1BC(4, "eligible mac devices: %s");
  v11 = sub_100569784(0, v10);
  swift_bridgeObjectRelease(v10);
  v48[0] = (uint64_t)v9;
  sub_100343BE0((uint64_t)v11);
  v3 = v48[0];
  if (!*(_QWORD *)(v48[0] + 16))
  {
    swift_bridgeObjectRelease(v48[0]);
    return;
  }
  if (qword_1007B42C0 != -1)
    goto LABEL_18;
LABEL_4:
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100221DF8(v12, (uint64_t)qword_1007C5FF8);
  v14 = swift_bridgeObjectRetain_n(v3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter();
  v17 = os_log_type_enabled(v15, v16);
  v45 = v13;
  v43[1] = v1;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = v3;
    v20 = swift_slowAlloc(32, -1);
    v48[0] = v20;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain(v19);
    v21 = sub_100008384(&qword_1007B5358);
    v22 = Array.description.getter(v19, v21);
    v24 = v23;
    swift_bridgeObjectRelease(v19);
    v46 = sub_100228BD8(v22, v24, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v18 + 4);
    swift_bridgeObjectRelease_n(v19, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Disabling all pairings as both lock and key device with %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v25 = v20;
    v3 = v19;
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
  }
  v27 = *(_QWORD *)(v3 + 16);
  if (v27)
  {
    v43[0] = v3;
    v28 = v3 + 32;
    *(_QWORD *)&v26 = 136315138;
    v44 = v26;
    v43[2] = "Unknown assertion state";
    v43[3] = (char *)&type metadata for Any + 8;
    while (1)
    {
      sub_100244418(v28, (uint64_t)v48);
      v29 = v49;
      v30 = v50;
      sub_10023A834(v48, v49);
      v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
      if (!v32)
        break;
      v33 = v32;
      sub_100532640(1, v31, v32);
      swift_bridgeObjectRelease(v33);
      v34 = v49;
      v35 = v50;
      sub_10023A834(v48, v49);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
      if (!v37)
        goto LABEL_20;
      v38 = v37;
      sub_100532640(0, v36, v37);
      swift_bridgeObjectRelease(v38);
      sub_10022E75C(v48);
      v28 += 40;
      if (!--v27)
      {
        swift_bridgeObjectRelease(v43[0]);
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v3);
LABEL_16:
    static String._unconditionallyBridgeFromObjectiveC(_:)(SFAuthenticationsDynamicStoreEnabledBioArmPath);
    v40 = v39;
    v41 = String._bridgeToObjectiveC()();
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    sub_1000C85E8(0, v41, v42);

    sub_100547314();
    sub_100556250();
  }
}

uint64_t sub_1005549EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v16;

  v0 = type metadata accessor for SFPlatform(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter(v2);
  v5 = static SFPlatform.isPlatform(_:)(v4);
  v6 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v7 = v6(v4, v0);
  if ((v5 & 1) != 0)
  {
    v8 = sub_10054F1BC(2, "eligible iPhone devices: %s");
    sub_100546FD4(v8, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
    v10 = v9;
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v10 = 0;
  }
  static SFPlatform.iOS.getter(v7);
  v11 = static SFPlatform.isPlatform(_:)(v4);
  v6(v4, v0);
  if ((v11 & 1) != 0)
  {
    v12 = sub_10054F1BC(4, "eligible mac devices: %s");
    sub_100546FD4(v12, (SEL *)&selRef_deviceEnabledAsKey_);
    v14 = v13;
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v14 = 0;
  }
  return (v10 | v14) & 1;
}

uint64_t sub_100554B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  _BYTE v27[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2 + 16, v11);
  if (result)
  {
    v13 = (void *)result;
    v14 = *(id *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);

    aBlock[4] = sub_10056FACC;
    v26 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_10072F5C0;
    v15 = _Block_copy(aBlock);
    v16 = swift_retain(a2);
    static DispatchQoS.unspecified.getter(v16);
    v24 = _swiftEmptyArrayStorage;
    v17 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = v7;
    v18 = v4;
    v19 = v17;
    v20 = sub_100008384((uint64_t *)&unk_1007B6410);
    v21 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v3, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    return swift_release(v26);
  }
  return result;
}

void sub_100554D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007C5FF8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "postUnlockKeyRequestNotification by command line", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_100554E34();

  }
}

void sub_100554E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v8 = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!v8)
  {
    __break(1u);
    return;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "deviceKeyBagLocked");

  if (!v10)
  {
    if (qword_1007B42C0 == -1)
    {
LABEL_10:
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100221DF8(v18, (uint64_t)qword_1007C5FF8);
      v14 = Logger.logObject.getter(v19);
      v15 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v15))
      {
LABEL_13:

        return;
      }
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      v17 = "not posting request to unlock phone because device is already unlocked";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
      swift_slowDealloc(v16, -1, -1);
      goto LABEL_13;
    }
LABEL_20:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_10;
  }
  v11 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted) & 1) != 0)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100221DF8(v12, (uint64_t)qword_1007C5FF8);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v14, v15))
      goto LABEL_13;
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "not posting request to unlock phone because notification has already been posted";
    goto LABEL_12;
  }
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100221DF8(v20, (uint64_t)qword_1007C5FF8);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Posting request to unlock phone", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = objc_msgSend((id)objc_opt_self(SDAutoUnlockNotificationsManager), "sharedManager");
  objc_msgSend(v25, "showRequestToUnlockNotification");

  *(_BYTE *)(v1 + v11) = 1;
}

void sub_100555158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C5FF8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "triggerStateChange by command line", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_100553810();

  }
}

void sub_10055525C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = a2 + 16;
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100221DF8(v3, (uint64_t)qword_1007C5FF8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "register by command line", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v8);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_1005553F0(0x20646E616D6D6F63, 0xEC000000656E696CLL);

  }
  v12 = SFDeviceClassCodeGet(Strong, v10);
  if ((_DWORD)v12 == 1)
  {
    swift_beginAccess(v2, v20, 0, 0);
    v15 = swift_unknownObjectWeakLoadStrong(v2, v14);
    if (!v15)
      return;
    v16 = (void *)v15;
    v17 = 0;
    goto LABEL_13;
  }
  if (SFDeviceClassCodeGet(v12, v13) == 5)
  {
    swift_beginAccess(v2, v20, 0, 0);
    v19 = swift_unknownObjectWeakLoadStrong(v2, v18);
    if (v19)
    {
      v16 = (void *)v19;
      v17 = 1;
LABEL_13:
      sub_1005464E4(v17);

    }
  }
}

double sub_1005553F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24[3];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v12 = type metadata accessor for Logger(0);
  sub_100221DF8(v12, (uint64_t)qword_1007C5FF8);
  v13 = swift_bridgeObjectRetain_n(a2, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v24[0] = v17;
    *(_DWORD *)v16 = 136315138;
    if (a2)
    {
      v18 = a2;
    }
    else
    {
      a1 = 0x676E697373696D3CLL;
      v18 = 0xE90000000000003ELL;
    }
    swift_bridgeObjectRetain(a2);
    v23 = sub_100228BD8(a1, v18, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v16 + 4);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Resetting registration state because: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v19 = sub_10021EEE8((uint64_t)_swiftEmptyArrayStorage);
  v20 = (unint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
  swift_beginAccess(v20, v24, 1, 0);
  v21 = *v20;
  *v20 = v19;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

uint64_t sub_10055568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  v7 = type metadata accessor for Date(0);
  v6[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[31] = v8;
  v6[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v6[33] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[34] = v10;
  v6[35] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v6[36] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[37] = v12;
  v6[38] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B9470);
  v6[39] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[40] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[41] = swift_task_alloc(v15);
  v6[42] = swift_task_alloc(v15);
  v6[43] = swift_task_alloc(v15);
  v6[44] = swift_task_alloc(v15);
  v6[45] = swift_task_alloc(v15);
  v6[46] = swift_task_alloc(v15);
  v16 = sub_100008384(&qword_1007C62C8);
  v6[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005557D0, 0, 0);
}

uint64_t sub_1005557D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  _QWORD *v13;

  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007C5FF8);
  v0[48] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "BioArmInitiator: Waiting to arm next device...", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = (_QWORD *)v0[27];

  v7 = v6[3];
  v8 = v6[4];
  v9 = sub_10023A834(v6, v7);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v10 + 16))(v11, v9, v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8);
  v0[21] = AssociatedTypeWitness;
  v0[22] = swift_getAssociatedConformanceWitness(v8, v7, AssociatedTypeWitness, &protocol requirements base descriptor for AsyncSequence, &associated conformance descriptor for AsyncSequence.AsyncSequence.AsyncIterator: AsyncIteratorProtocol);
  sub_100244348(v0 + 18);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v7, v8);
  swift_task_dealloc(v11);
  sub_10026EEE8((uint64_t)(v0 + 18), v0[21]);
  v13 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[49] = v13;
  *v13 = v0;
  v13[1] = sub_1005559B4;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[47], 0, 0);
}

uint64_t sub_1005559B4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_100555A08, 0, 0);
}

uint64_t sub_100555A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  const char *v74;
  _QWORD *v75;
  uint64_t v76;
  __int128 *v77;
  uint64_t v78;
  void (**aBlock)(uint64_t, uint64_t);
  uint64_t v80;
  os_log_t loga;
  NSObject *log;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  _QWORD *v93;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 312);
  v93 = (_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 320) + 48))(v1, 1, v2) == 1)
  {
LABEL_6:
    v28 = *(_QWORD *)(v0 + 360);
    v27 = *(_QWORD *)(v0 + 368);
    v30 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 352);
    v32 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 336);
    v33 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 280);
    v90 = *(_QWORD *)(v0 + 256);
    sub_10022E75C(v93);
    swift_task_dealloc(v1);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v90);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(int *)(v2 + 48);
  v6 = v3 + v5;
  v7 = (__int128 *)(v1 + v5);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 32);
  v8(v3, v1, *(_QWORD *)(v0 + 240));
  sub_10026EE60(v7, v6);
  v9 = static Date.> infix(_:_:)(v3, v4);
  if ((v9 & 1) != 0)
  {
    v89 = (_QWORD *)(v0 + 64);
    v77 = (__int128 *)(v0 + 104);
    v85 = v6;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "BioArmInitiator: Processing unarmed device!", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 360);
    v14 = *(_QWORD *)(v0 + 368);
    v15 = *(_QWORD *)(v0 + 312);
    v76 = *(_QWORD *)(v0 + 304);
    loga = *(os_log_t *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 280);
    v83 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 264);
    v78 = *(_QWORD *)(v0 + 272);
    v18 = *(_QWORD *)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(void **)(v0 + 232);

    v21 = (__int128 *)(v13 + *(int *)(v15 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v13, v14, v18);
    sub_100244418(v85, (uint64_t)v21);
    sub_10026EE60(v21, (uint64_t)v89);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v13, v18);
    sub_100244418((uint64_t)v89, (uint64_t)v77);
    v22 = swift_allocObject(&unk_10072F350, 64, 7);
    *(_QWORD *)(v22 + 16) = v20;
    sub_10026EE60(v77, v22 + 24);
    *(_QWORD *)(v0 + 48) = sub_10056F800;
    *(_QWORD *)(v0 + 56) = v22;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10025BBB4;
    *(_QWORD *)(v0 + 40) = &unk_10072F368;
    v23 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v20);
    *(_QWORD *)(v0 + 208) = _swiftEmptyArrayStorage;
    v24 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_100008384((uint64_t *)&unk_1007B6410);
    v26 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 208, v25, v26, v17, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v76, v16, v23);
    _Block_release(v23);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v16, v17);
    ((void (*)(uint64_t, uint64_t))loga[1].isa)(v76, v83);
    sub_10022E75C(v89);
    sub_10000D0F0(v14, &qword_1007B9470);
    swift_release(*(_QWORD *)(v0 + 56));
    v1 = *(_QWORD *)(v0 + 376);
    goto LABEL_6;
  }
  v36 = *(_QWORD *)(v0 + 368);
  v37 = *(_QWORD *)(v0 + 352);
  v86 = v8;
  v87 = *(_QWORD *)(v0 + 344);
  v38 = *(_QWORD *)(v0 + 336);
  v91 = *(_QWORD *)(v0 + 328);
  v39 = *(_QWORD *)(v0 + 312);
  v40 = *(_QWORD *)(v0 + 240);
  v41 = v37 + *(int *)(v39 + 48);
  v42 = v6;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v43(v37, v36, v40);
  sub_100244418(v42, v41);
  sub_10022E718(v37, v87, &qword_1007B9470);
  v44 = v38 + *(int *)(v39 + 48);
  v88 = v43;
  v43(v38, v36, v40);
  sub_100244418(v42, v44);
  v45 = sub_10022E718(v38, v91, &qword_1007B9470);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = *(_QWORD *)(v0 + 344);
    v49 = *(_QWORD *)(v0 + 312);
    v50 = swift_slowAlloc(22, -1);
    v51 = swift_slowAlloc(64, -1);
    *(_QWORD *)(v0 + 200) = v51;
    *(_DWORD *)v50 = 136315394;
    v52 = (_QWORD *)(v48 + *(int *)(v49 + 48));
    v53 = v52[3];
    v54 = v52[4];
    sub_10023A834(v52, v53);
    v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
    v92 = v47;
    log = v46;
    v84 = v51;
    if (v56)
    {
      v57 = v56;
    }
    else
    {
      *(_QWORD *)(v0 + 184) = 0;
      *(_QWORD *)(v0 + 192) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(*(const char **)(v0 + 192));
      v57 = (const char *)0x8000000100612DF0;
      v55 = 0xD000000000000015;
    }
    v62 = *(_QWORD *)(v0 + 360);
    v63 = *(_QWORD *)(v0 + 344);
    v64 = *(_QWORD *)(v0 + 328);
    v65 = *(_QWORD *)(v0 + 312);
    v66 = *(_QWORD *)(v0 + 256);
    aBlock = *(void (***)(uint64_t, uint64_t))(v0 + 248);
    v80 = *(_QWORD *)(v0 + 368);
    v67 = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v50 + 4) = sub_100228BD8(v55, (unint64_t)v57, (uint64_t *)(v0 + 200));
    swift_bridgeObjectRelease(v57);
    sub_10000D0F0(v63, &qword_1007B9470);
    *(_WORD *)(v50 + 12) = 2080;
    v68 = *(int *)(v65 + 48);
    v69 = (_QWORD *)(v62 + v68);
    v70 = v64 + v68;
    v88(v62, v64, v67);
    sub_100244418(v70, (uint64_t)v69);
    v86(v66, v62, v67);
    sub_10022E75C(v69);
    v71 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v72 = dispatch thunk of CustomStringConvertible.description.getter(v67, v71);
    v74 = v73;
    aBlock[1](v66, v67);
    *(_QWORD *)(v50 + 14) = sub_100228BD8(v72, (unint64_t)v74, (uint64_t *)(v0 + 200));
    swift_bridgeObjectRelease(v74);
    sub_10000D0F0(v64, &qword_1007B9470);
    _os_log_impl((void *)&_mh_execute_header, log, v92, "BioArmInitiator: Skipping %s since it was yielded before %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    v61 = v80;
  }
  else
  {
    v58 = *(_QWORD *)(v0 + 368);
    v59 = *(_QWORD *)(v0 + 344);
    v60 = *(_QWORD *)(v0 + 328);

    sub_10000D0F0(v60, &qword_1007B9470);
    sub_10000D0F0(v59, &qword_1007B9470);
    v61 = v58;
  }
  sub_10000D0F0(v61, &qword_1007B9470);
  sub_10026EEE8((uint64_t)v93, *(_QWORD *)(v0 + 168));
  v75 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  *(_QWORD *)(v0 + 392) = v75;
  *v75 = v0;
  v75[1] = sub_1005559B4;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(*(_QWORD *)(v0 + 376), 0, 0);
}

uint64_t sub_10055613C(char *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v6);
  v9 = objc_msgSend(objc_allocWithZone((Class)SFAuthenticationOptions), "init");
  v15[3] = sub_100221EDC(0, &qword_1007C62D0, SFAuthenticationOptions_ptr);
  v15[4] = &off_100727E08;
  v15[0] = v9;
  v10 = a2[3];
  v11 = a2[4];
  v12 = sub_10023A834(a2, v10);
  sub_10056CD50(4, (uint64_t)v12, (uint64_t)v8, (uint64_t)v15, a1, v10, v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_10000D0F0((uint64_t)v15, &qword_1007C62D8);
}

uint64_t sub_100556250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1007B42C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B42C0, sub_1005477EC);
LABEL_3:
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007C5FF8);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "BioArmInitiator: Stopping device stream", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
  swift_retain(v13);
  sub_1002C812C();
  swift_release(v13);
  v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream;
  swift_beginAccess(v14, v17, 33, 0);
  if (*(_QWORD *)(v14 + 24))
    sub_10022E75C((_QWORD *)v14);
  *(_QWORD *)(v14 + 32) = 0;
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  return swift_endAccess(v17);
}

void *sub_100556420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26[5];
  void *v27;

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices;
  v2 = *(uint64_t (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices + 8);
  swift_retain(v3);
  v4 = (void *)v2(5);
  swift_release(v3);
  v27 = v4;
  v26[3] = (uint64_t)&type metadata for SharingFeatureFlags;
  v26[4] = sub_100539FD8();
  LOBYTE(v26[0]) = 8;
  LOBYTE(v3) = isFeatureEnabled(_:)(v26);
  sub_10022E75C(v26);
  if ((v3 & 1) != 0)
  {
    v6 = *(uint64_t (**)(uint64_t))v1;
    v5 = *(_QWORD *)(v1 + 8);
    swift_bridgeObjectRetain(v4);
    swift_retain(v5);
    v7 = v6(3);
    swift_release(v5);
    sub_100546060(v7, v4);
    v9 = v8;
    swift_bridgeObjectRelease(v4);
    v27 = v9;
  }
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100221DF8(v10, (uint64_t)qword_1007C5FF8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v26[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_beginAccess(&v27, v25, 0, 0);
    v16 = v27;
    v17 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v18 = sub_1002EF0A8();
    v19 = swift_bridgeObjectRetain(v16);
    v20 = Set.description.getter(v19, v17, v18);
    v22 = v21;
    swift_bridgeObjectRelease(v16);
    v24 = sub_100228BD8(v20, v22, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v14 + 4);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "eligible reality devices: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  swift_beginAccess(&v27, v26, 0, 0);
  return v27;
}

uint64_t sub_1005566B0@<X0>(Swift::UInt a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, unint64_t, char *, Swift::UInt);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, uint64_t, uint64_t);
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _UNKNOWN **v56;
  _BYTE v57[24];
  char v58[24];
  char v59[24];
  char v60[24];
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v5 = v4;
  v53 = a3;
  ObjectType = swift_getObjectType(v4);
  v9 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StateMetrics(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = v19;
  v21 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v21 & 1) != 0)
  {
    v22 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    v23 = *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
    v24 = swift_retain(v23);
    v25 = v22(v24);
    v21 = v26;
    swift_release(v23);
    v28 = *(void (**)(uint64_t, unint64_t, char *, Swift::UInt))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator];
    v27 = *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator + 8];
    swift_retain(v27);
    v51 = v25;
    v28(v25, v21, a2, a1);
    swift_release(v27);
    v62 = ObjectType;
    v63 = &off_10072F2A8;
    v61[0] = v5;
    v29 = a4[3];
    v30 = a4[4];
    sub_10026EEE8((uint64_t)a4, v29);
    v31 = *(_QWORD *)(*(_QWORD *)(v30 + 8) + 8);
    v32 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v31 + 16);
    v33 = v5;
    v32(v61, v29, v31);
    v34 = sub_10023A834(a4, a4[3]);
    v35 = (uint64_t)&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v60, 0, 0);
    sub_100244384(v35, (uint64_t)v14, type metadata accessor for StateMetrics);
    swift_beginAccess(*v34 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v61, 33, 0);
    sub_1003E6CA0(v14, a1);
    swift_endAccess(v61);
    sub_1002443C8((uint64_t)v14, type metadata accessor for StateMetrics);
    v36 = &v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager], v59, 0, 0);
    v37 = *sub_10023A834(v36, *((_QWORD *)v36 + 3))
        + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess(v37, v58, 0, 0);
    sub_100221F28(v37, (uint64_t)v11, &qword_1007C4330);
    v39 = a4[3];
    v38 = a4[4];
    sub_10026EEE8((uint64_t)a4, v39);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 + 8) + 24))(v11, v39);
    sub_100221F28(v53, (uint64_t)v61, &qword_1007B9E38);
    v41 = a4[3];
    v40 = a4[4];
    sub_10026EEE8((uint64_t)a4, v41);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v40 + 8) + 8) + 72))(v61, v41);
    sub_100244418((uint64_t)a4, (uint64_t)v61);
    a2 = &v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions], v57, 33, 0);
    v18 = *(_QWORD **)a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)a2);
    *(_QWORD *)a2 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  v18 = sub_1002284B0(0, v18[2] + 1, 1, v18);
  *(_QWORD *)a2 = v18;
LABEL_3:
  v44 = v18[2];
  v43 = v18[3];
  if (v44 >= v43 >> 1)
  {
    v18 = sub_1002284B0((_QWORD *)(v43 > 1), v44 + 1, 1, v18);
    *(_QWORD *)a2 = v18;
  }
  v45 = sub_10026EEE8((uint64_t)v61, v62);
  __chkstk_darwin(v45);
  v47 = (uint64_t *)((char *)&v51 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v48 + 16))(v47);
  v49 = *v47;
  v55 = type metadata accessor for SDAuthenticationLockSession(0);
  v56 = &off_100727408;
  *(_QWORD *)&v54 = v49;
  v18[2] = v44 + 1;
  sub_10026EE60(&v54, (uint64_t)&v18[5 * v44 + 4]);
  sub_10022E75C(v61);
  swift_endAccess(v57);
  return sub_100225AB4(v51, v21);
}

uint64_t sub_100556B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  char *v4;
  char *v5;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _UNKNOWN **v50;
  _BYTE v51[24];
  char v52[24];
  _QWORD v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v5 = v4;
  v47 = a3;
  ObjectType = swift_getObjectType(v4);
  v10 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  v19 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) != 0)
  {
    v20 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    v21 = *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
    v22 = swift_retain(v21);
    v13 = v20(v22);
    v19 = v23;
    swift_release(v21);
    v25 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator];
    v24 = *(_QWORD *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator + 8];
    swift_retain(v24);
    v25(v13, v19, a2, a1);
    swift_release(v24);
    v54 = ObjectType;
    v55 = &off_10072F2A8;
    v53[0] = v5;
    v27 = *((_QWORD *)a4 + 3);
    v26 = *((_QWORD *)a4 + 4);
    sub_10026EEE8((uint64_t)a4, v27);
    v28 = *(_QWORD *)(*(_QWORD *)(v26 + 8) + 8);
    v29 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v28 + 16);
    v30 = v5;
    v29(v53, v27, v28);
    sub_100221F28(v47, (uint64_t)v53, &qword_1007B9E38);
    v31 = *((_QWORD *)a4 + 3);
    v32 = *((_QWORD *)a4 + 4);
    sub_10026EEE8((uint64_t)a4, v31);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v32 + 8) + 8) + 72))(v53, v31);
    v33 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v52, 0, 0);
    v34 = type metadata accessor for StateMetrics(0);
    sub_100221F28((uint64_t)&v33[*(int *)(v34 + 24)], (uint64_t)v12, &qword_1007C4330);
    v35 = *((_QWORD *)a4 + 3);
    v36 = *((_QWORD *)a4 + 4);
    sub_10026EEE8((uint64_t)a4, v35);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 + 8) + 24))(v12, v35);
    sub_100244418((uint64_t)a4, (uint64_t)v53);
    a4 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
    swift_beginAccess(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions], v51, 33, 0);
    v16 = *(_QWORD **)a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)a4);
    *(_QWORD *)a4 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  v16 = sub_10022849C(0, v16[2] + 1, 1, v16);
  *(_QWORD *)a4 = v16;
LABEL_3:
  v39 = v16[2];
  v38 = v16[3];
  if (v39 >= v38 >> 1)
  {
    v16 = sub_10022849C((_QWORD *)(v38 > 1), v39 + 1, 1, v16);
    *(_QWORD *)a4 = v16;
  }
  v40 = sub_10026EEE8((uint64_t)v53, v54);
  __chkstk_darwin(v40);
  v42 = (uint64_t *)((char *)&v46 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v43 + 16))(v42);
  v44 = *v42;
  v49 = type metadata accessor for SDAuthenticationKeySession(0);
  v50 = &off_100725228;
  *(_QWORD *)&v48 = v44;
  v16[2] = v39 + 1;
  sub_10026EE60(&v48, (uint64_t)&v16[5 * v39 + 4]);
  sub_10022E75C(v53);
  swift_endAccess(v51);
  return sub_100225AB4(v13, v19);
}

void sub_100556F2C(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  Class isa;
  id v25;
  void *v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  const char *v44;
  id v45;
  void *v46;
  NSString v47;
  id v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  _BOOL4 v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  void *v86;
  char *v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  os_log_t v93;
  int v94;
  uint64_t v95;
  id v96;
  id v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t ObjectType;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v5 = v4;
  v103 = a3;
  ObjectType = swift_getObjectType(v4);
  v9 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v9);
  v102 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for UUID(0);
  v106 = *(_QWORD *)(v104 - 8);
  v14 = *(_QWORD *)(v106 + 64);
  v15 = __chkstk_darwin(v104);
  v100 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v105 = (char *)&v91 - v16;
  v17 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v18 = *(v17 - 1);
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)(v20);
  (*(void (**)(_QWORD *, _QWORD *))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v23 = objc_allocWithZone((Class)SDAuthenticationPrePairingRequest);
  sub_10022E4A8(a1, a2);
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(a1, a2);
  v17 = objc_msgSend(v23, "initWithData:", isa);

  if (!v17)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007C5FF8);
    sub_10022E4A8(a1, a2);
    v38 = sub_10022E4A8(a1, a2);
    v34 = Logger.logObject.getter(v38);
    v39 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v108 = v41;
      *(_DWORD *)v40 = 136315138;
      sub_10022E4A8(a1, a2);
      v42 = Data.description.getter(a1, a2);
      v44 = v43;
      sub_100225AB4(a1, a2);
      v107 = sub_100228BD8(v42, (unint64_t)v44, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v40 + 4);
      swift_bridgeObjectRelease(v44);
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v34, v39, "Failed to unwrap SDAuthenticationPrePairingRequest (data: %s", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
    }
LABEL_23:

    return;
  }
  v25 = objc_msgSend(v17, "sessionID");
  if (!v25)
  {
LABEL_6:
    if (qword_1007B42C0 == -1)
    {
LABEL_7:
      v32 = type metadata accessor for Logger(0);
      v33 = sub_100221DF8(v32, (uint64_t)qword_1007C5FF8);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Message does not have a session ID", v36, 2u);
        swift_slowDealloc(v36, -1, -1);

        return;
      }

      goto LABEL_23;
    }
LABEL_37:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_7;
  }
  v26 = v25;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v29 = v28;

  UUID.init(uuidString:)(v27, v29);
  v30 = v106;
  v31 = v104;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v13, 1, v104) == 1)
  {
    swift_bridgeObjectRelease(v29);
    sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
    goto LABEL_6;
  }
  v98 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v99 = v27;
  v98(v105, v13, v31);
  v45 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (v45)
  {
    v46 = v45;
    v47 = String._bridgeToObjectiveC()();
    v48 = objc_msgSend(v46, "idsDeviceForUniqueID:", v47);

    if (v48)
    {
      if (!objc_msgSend(v17, "hasType")
        || (v49 = sub_1003FE924(objc_msgSend(v17, "type")), (v50 & 1) != 0))
      {
        swift_bridgeObjectRelease(v29);
        if (qword_1007B42C0 != -1)
          swift_once(&qword_1007B42C0, sub_1005477EC);
        v64 = type metadata accessor for Logger(0);
        v65 = sub_100221DF8(v64, (uint64_t)qword_1007C5FF8);
        v66 = Logger.logObject.getter(v65);
        v67 = static os_log_type_t.error.getter(v66);
        if (os_log_type_enabled(v66, v67))
        {
          v68 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v68 = 0;
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "Message missing authenticationType", v68, 2u);
          swift_slowDealloc(v68, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v31);
      }
      else
      {
        v103 = v49;
        if (qword_1007B42C0 != -1)
          swift_once(&qword_1007B42C0, sub_1005477EC);
        v51 = type metadata accessor for Logger(0);
        sub_100221DF8(v51, (uint64_t)qword_1007C5FF8);
        v52 = v17;
        swift_bridgeObjectRetain_n(v29, 2);
        v53 = v52;
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.default.getter(v54);
        v56 = v55;
        v57 = os_log_type_enabled(v54, v55);
        v96 = v53;
        v97 = v48;
        if (v57)
        {
          v58 = swift_slowAlloc(22, -1);
          v92 = (_QWORD *)swift_slowAlloc(8, -1);
          v95 = swift_slowAlloc(32, -1);
          v107 = (uint64_t)v53;
          v108 = v95;
          *(_DWORD *)v58 = 138412546;
          v93 = v54;
          v94 = v56;
          v59 = v53;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v58 + 4);
          v60 = v92;
          *v92 = v17;

          v31 = v104;
          *(_WORD *)(v58 + 12) = 2080;
          swift_bridgeObjectRetain(v29);
          v107 = sub_100228BD8(v99, (unint64_t)v29, &v108);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v58 + 14);
          swift_bridgeObjectRelease_n(v29, 3);
          v54 = v93;
          _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v94, "Received %@ for sessionID %s", (uint8_t *)v58, 0x16u);
          v61 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v60, 1, v61);
          swift_slowDealloc(v60, -1, -1);
          v62 = v95;
          swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          v63 = v58;
          v30 = v106;
          swift_slowDealloc(v63, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n(v29, 2);
        }

        v76 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v102, 1, 1, v76);
        v77 = v100;
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v100, v105, v31);
        v78 = *(unsigned __int8 *)(v30 + 80);
        v79 = (v78 + 48) & ~v78;
        v80 = (v14 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        v81 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
        v82 = v31;
        v83 = (v81 + 23) & 0xFFFFFFFFFFFFFFF8;
        v84 = (char *)swift_allocObject(&unk_10072F880, v83 + 8, v78 | 7);
        *((_QWORD *)v84 + 2) = 0;
        *((_QWORD *)v84 + 3) = 0;
        v86 = v97;
        v85 = v98;
        *((_QWORD *)v84 + 4) = v97;
        *((_QWORD *)v84 + 5) = v5;
        v85(&v84[v79], v77, v82);
        *(_QWORD *)&v84[v80] = v103;
        v87 = &v84[v81];
        *(_QWORD *)v87 = v99;
        *((_QWORD *)v87 + 1) = v29;
        *(_QWORD *)&v84[v83] = ObjectType;
        v88 = v86;
        v89 = v5;
        v90 = sub_100252EC0(v102, (uint64_t)&unk_1007C6358, (uint64_t)v84);
        swift_release(v90);

        (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v82);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v29);
      if (qword_1007B42C0 != -1)
        swift_once(&qword_1007B42C0, sub_1005477EC);
      v69 = type metadata accessor for Logger(0);
      sub_100221DF8(v69, (uint64_t)qword_1007C5FF8);
      v70 = swift_bridgeObjectRetain_n(a4, 2);
      v71 = Logger.logObject.getter(v70);
      v72 = static os_log_type_t.error.getter(v71);
      if (os_log_type_enabled(v71, v72))
      {
        v73 = v30;
        v74 = (uint8_t *)swift_slowAlloc(12, -1);
        v75 = swift_slowAlloc(32, -1);
        v108 = v75;
        *(_DWORD *)v74 = 136315138;
        swift_bridgeObjectRetain(a4);
        v107 = sub_100228BD8(v103, (unint64_t)a4, &v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v74 + 4);
        swift_bridgeObjectRelease_n(a4, 3);
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "IDS device not found for IDS ID %s. Is the device in the same iCloud account?", v74, 0xCu);
        swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v75, -1, -1);
        swift_slowDealloc(v74, -1, -1);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v105, v31);
      }
      else
      {

        swift_bridgeObjectRelease_n(a4, 2);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v105, v31);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100557A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8[25] = a8;
  v8[26] = v18;
  v8[23] = a6;
  v8[24] = a7;
  v8[21] = a4;
  v8[22] = a5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v8[27] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[28] = v10;
  v8[29] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v8[30] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[31] = v12;
  v8[32] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v8[33] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[34] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[35] = v15;
  v8[36] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.Encoding(0);
  v8[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100557B3C, 0, 0);
}

void sub_100557B3C()
{
  _QWORD *v0;
  NSString v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSString v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  NSString v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_1005727DC();
  v1 = String._bridgeToObjectiveC()();
  v3 = (id)SFLocalizedStringForKey(v1, v2);

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    v6 = 0x8000000100621A00;
    v4 = 0xD000000000000010;
  }
  v7 = String._bridgeToObjectiveC()();
  v9 = (id)SFLocalizedStringForKey(v7, v8);

  if (!v9)
  {
    __break(1u);
    goto LABEL_16;
  }
  v10 = (void *)v0[21];
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v13 = v12;

  v14 = sub_100008384((uint64_t *)&unk_1007B86C0);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v16 = sub_100299AB0();
  *(_QWORD *)(v15 + 64) = v16;
  *(_QWORD *)(v15 + 32) = v4;
  *(_QWORD *)(v15 + 40) = v6;
  v49 = static String.localizedStringWithFormat(_:_:)(v11, v13, v15);
  v18 = v17;
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v13).n128_u64[0];
  *(_QWORD *)&v20 = swift_bridgeObjectRelease((const char *)v15, v19).n128_u64[0];
  v0[38] = v18;
  v21 = objc_msgSend(v10, "name", v20);
  if (!v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v25 = v24;

  swift_bridgeObjectRelease(v25);
  v26 = ((unint64_t)v25 >> 56) & 0xF;
  if (((unint64_t)v25 & 0x2000000000000000) == 0)
    v26 = v23 & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    v27 = String._bridgeToObjectiveC()();
    v29 = (id)SFLocalizedStringForKey(v27, v28);

    if (v29)
    {
      v30 = (void *)v0[21];
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v33 = v32;

      v34 = swift_allocObject(v14, 72, 7);
      *(_OWORD *)(v34 + 16) = xmmword_1005CD2A0;
      v35 = objc_msgSend(v30, "name");
      if (v35)
      {
        v36 = v35;
        v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v39 = v38;

        *(_QWORD *)(v34 + 56) = &type metadata for String;
        *(_QWORD *)(v34 + 64) = v16;
        *(_QWORD *)(v34 + 32) = v37;
        *(_QWORD *)(v34 + 40) = v39;
        v40 = static String.localizedStringWithFormat(_:_:)(v31, v33, v34);
        v42 = v41;
        *(_QWORD *)&v43 = swift_bridgeObjectRelease(v33).n128_u64[0];
        swift_bridgeObjectRelease((const char *)v34, v43);
LABEL_14:
        v0[39] = v42;
        v48 = swift_task_alloc(dword_1007C630C);
        v0[40] = v48;
        *(_QWORD *)v48 = v0;
        *(_QWORD *)(v48 + 8) = sub_1005585B4;
        *(_BYTE *)(v48 + 584) = 0;
        *(_QWORD *)(v48 + 544) = v42;
        *(_QWORD *)(v48 + 536) = v40;
        *(_QWORD *)(v48 + 528) = v18;
        *(_QWORD *)(v48 + 520) = v49;
        swift_task_switch(sub_100572A90, 0, 0);
        return;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v44 = String._bridgeToObjectiveC()();
  v46 = (id)SFLocalizedStringForKey(v44, v45);

  if (v46)
  {
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v42 = v47;

    goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1005585B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  double v8;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 320);
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = sub_100558A30;
  }
  else
  {
    v7 = (const char *)v4[39];
    *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)v4[38]).n128_u64[0];
    swift_bridgeObjectRelease(v7, v8);
    v6 = sub_100558680;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100558680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 328);
  v2 = *(_QWORD *)(v1 + 296);
  static String.Encoding.utf8.getter(a1);
  v3 = sub_100358394();
  v4 = String.init<A>(bytes:encoding:)(v1 + 88, v2, &type metadata for Data, v3);
  if (v5)
  {
    v6 = v5;
    v43 = *(_QWORD *)(v1 + 328);
    v44 = *(_QWORD *)(v1 + 336);
    v7 = *(_QWORD *)(v1 + 280);
    v35 = *(_QWORD *)(v1 + 288);
    v8 = *(_QWORD *)(v1 + 264);
    v9 = *(_QWORD *)(v1 + 272);
    v39 = *(_QWORD *)(v1 + 256);
    v45 = *(_QWORD *)(v1 + 248);
    v46 = *(_QWORD *)(v1 + 240);
    v40 = *(_QWORD *)(v1 + 232);
    v41 = *(_QWORD *)(v1 + 216);
    v10 = *(void **)(v1 + 176);
    v37 = *(void **)(v1 + 168);
    v38 = *(_QWORD *)(v1 + 192);
    v42 = *(_QWORD *)(v1 + 224);
    v36 = v4;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v35, *(_QWORD *)(v1 + 184), v8);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v12 = (v11 + 24) & ~v11;
    v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
    v15 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject(&unk_10072F8A8, v15 + 8, v11 | 7);
    *(_QWORD *)(v16 + 16) = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v16 + v12, v35, v8);
    *(_QWORD *)(v16 + v13) = v37;
    v17 = (uint64_t *)(v16 + v14);
    *v17 = v36;
    v17[1] = v6;
    *(_QWORD *)(v16 + v15) = v38;
    *(_QWORD *)(v1 + 48) = sub_1005738CC;
    *(_QWORD *)(v1 + 56) = v16;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = 1107296256;
    *(_QWORD *)(v1 + 32) = sub_10025BBB4;
    *(_QWORD *)(v1 + 40) = &unk_10072F8C0;
    v18 = _Block_copy((const void *)(v1 + 16));
    v19 = v10;
    static DispatchQoS.unspecified.getter(v37);
    *(_QWORD *)(v1 + 160) = _swiftEmptyArrayStorage;
    v20 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_100008384((uint64_t *)&unk_1007B6410);
    v22 = sub_10026E2FC((unint64_t *)&qword_1007B6860, (uint64_t *)&unk_1007B6410, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 160, v21, v22, v41, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v39, v40, v18);
    _Block_release(v18);
    sub_100225AB4(v43, v44);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v46);
    swift_release(*(_QWORD *)(v1 + 56));
  }
  else
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100221DF8(v23, (uint64_t)qword_1007C5FF8);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    v27 = os_log_type_enabled(v25, v26);
    v29 = *(_QWORD *)(v1 + 328);
    v28 = *(_QWORD *)(v1 + 336);
    if (v27)
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Could not decode passcode", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
    sub_100225AB4(v29, v28);

  }
  v31 = *(_QWORD *)(v1 + 288);
  v32 = *(_QWORD *)(v1 + 256);
  v33 = *(_QWORD *)(v1 + 232);
  swift_task_dealloc(*(_QWORD *)(v1 + 296));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100558A30()
{
  uint64_t v0;
  const char *v1;
  double v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  NSString v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  NSObject *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  NSObject *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v57;
  os_log_type_t v58;
  _QWORD *v59;
  uint64_t *v60;

  v1 = *(const char **)(v0 + 304);
  *(_QWORD *)&v2 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 312)).n128_u64[0];
  swift_bridgeObjectRelease(v1, v2);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationPairingResponse), "init");
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "setVersion:", 1);
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setSessionID:", v7);

  }
  v60 = (uint64_t *)(v0 + 136);
  v59 = (_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 152) = v3;
  swift_errorRetain(v3);
  v8 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v0 + 64, v0 + 152, v8, &type metadata for SFAuthenticationErrorMessage, 6) & 1) == 0)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v12 = type metadata accessor for Logger(0);
    sub_100221DF8(v12, (uint64_t)qword_1007C5FF8);
    swift_errorRetain(v3);
    v13 = swift_errorRetain(v3);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v16 = 138412290;
      swift_errorRetain(v3);
      v18 = _swift_stdlib_bridgeErrorToNSError(v3);
      *v60 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, v59, v16 + 4);
      *v17 = v18;
      swift_errorRelease(v3);
      swift_errorRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "LA Error: %@", v16, 0xCu);
      v19 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v17, 1, v19);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      swift_errorRelease(v3);
      swift_errorRelease(v3);
    }

    v20 = (void *)_convertErrorToNSError(_:)(v3);
    if (objc_msgSend(v20, "code") == (id)-5)
      v21 = 5;
    else
      v21 = 23;
    v11 = v5;
    objc_msgSend(v11, "setErrorCode:", v21);

    goto LABEL_15;
  }
  v9 = *(const char **)(v0 + 80);
  if (v5)
  {
    v10 = *(unsigned int *)(v0 + 64);
    v11 = v5;
    objc_msgSend(v11, "setErrorCode:", v10);
    swift_bridgeObjectRelease(v9);
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRelease(*(const char **)(v0 + 80));
LABEL_16:
  if (qword_1007B42C0 != -1)
    swift_once(&qword_1007B42C0, sub_1005477EC);
  v22 = (uint64_t *)(v0 + 112);
  v23 = type metadata accessor for Logger(0);
  sub_100221DF8(v23, (uint64_t)qword_1007C5FF8);
  v24 = v5;
  swift_errorRetain(v3);
  v25 = v24;
  v26 = swift_errorRetain(v3);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v58 = v28;
    v57 = (_QWORD *)(v0 + 128);
    v29 = swift_slowAlloc(22, -1);
    v30 = (uint64_t *)swift_slowAlloc(16, -1);
    *(_DWORD *)v29 = 138412546;
    swift_errorRetain(v3);
    v31 = v5;
    v32 = _swift_stdlib_bridgeErrorToNSError(v3);
    *v22 = v32;
    v33 = (_QWORD *)(v0 + 120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v29 + 4);
    *v30 = v32;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    *(_WORD *)(v29 + 12) = 2112;
    if (v31)
    {
      *v57 = v25;
      v34 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, v60, v29 + 14);
      v35 = (uint64_t)v31;
    }
    else
    {
      *v33 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, v57, v29 + 14);
      v35 = 0;
    }
    v5 = v31;
    v30[1] = v35;

    _os_log_impl((void *)&_mh_execute_header, v27, v58, "Reporting error %@ to remote device as %@", (uint8_t *)v29, 0x16u);
    v36 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v30, 2, v36);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
    v22 = (uint64_t *)(v0 + 112);

    if (!v31)
      goto LABEL_28;
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);

    if (!v5)
      goto LABEL_28;
  }
  v37 = objc_msgSend(v25, "data");
  if (v37)
  {
    v38 = v37;
    v39 = *(_QWORD *)(v0 + 192);
    v41 = *(void **)(v0 + 168);
    v40 = *(_QWORD *)(v0 + 176);
    v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v44 = v43;

    v45 = v41;
    sub_100569E34(v42, v44, v45, 4, v39, v40);

    swift_errorRelease(v3);
    sub_100225AB4(v42, v44);
    goto LABEL_34;
  }
LABEL_28:
  v45 = v25;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.error.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v48 = 138412290;
    if (v5)
    {
      *(_QWORD *)(v0 + 104) = v45;
      v50 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v22, v48 + 4);
      v51 = v5;
    }
    else
    {
      *v59 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v59, v0 + 152, v48 + 4);
      v51 = 0;
    }
    *v49 = v51;

    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Could not convert response to data: %@", v48, 0xCu);
    v52 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v49, 1, v52);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    swift_errorRelease(v3);
  }
  else
  {

    swift_errorRelease(v3);
    v45 = v46;
  }
LABEL_34:

  v53 = *(_QWORD *)(v0 + 288);
  v54 = *(_QWORD *)(v0 + 256);
  v55 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10055916C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v13[3] = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
  v13[4] = &off_10072BAC8;
  v13[0] = a3;
  v11 = a3;
  sub_10054D670(a2, (uint64_t)v13, a4, a5, a6, v14);
  sub_10022E75C(v13);
  sub_10023A834(v14, v14[3]);
  sub_1002EA77C();
  return sub_10022E75C(v14);
}

void sub_100559224(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  Class isa;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  Class v24;
  id v25;
  void *v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  __n128 v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  const char *v46;
  id v47;
  void *v48;
  NSString v49;
  NSObject *v50;
  unint64_t v51;
  char v52;
  const char **v53;
  double v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  __int128 *v76;
  NSObject *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _UNKNOWN **v81;
  id v82;
  void *v83;
  uint64_t v84;
  const char *v85;
  const char *v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[5];
  char v96[24];
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  _UNKNOWN **v102;

  v91 = (char *)a3;
  v8 = sub_100008384(&qword_1007B7280);
  v9 = __chkstk_darwin(v8);
  v89 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v87 - v11;
  v94 = type metadata accessor for UUID(0);
  v92 = *(_QWORD *)(v94 - 8);
  v13 = __chkstk_darwin(v94);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v93 = (uint64_t)&v87 - v16;
  v17 = type metadata accessor for DispatchPredicate(0);
  isa = v17[-1].isa;
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = v4;
  v21 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v20 = v21;
  (*((void (**)(_QWORD *, _QWORD, NSObject *))isa + 13))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)(v20);
  (*((void (**)(_QWORD *, NSObject *))isa + 1))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v23 = objc_allocWithZone((Class)SDAuthenticationPairingRequest);
  sub_10022E4A8(a1, a2);
  v24 = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(a1, a2);
  v17 = objc_msgSend(v23, "initWithData:", v24);

  if (!v17)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v39 = type metadata accessor for Logger(0);
    sub_100221DF8(v39, (uint64_t)qword_1007C5FF8);
    sub_10022E4A8(a1, a2);
    v40 = sub_10022E4A8(a1, a2);
    v36 = Logger.logObject.getter(v40);
    v41 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100 = v43;
      *(_DWORD *)v42 = 136315138;
      sub_10022E4A8(a1, a2);
      v44 = Data.description.getter(a1, a2);
      v46 = v45;
      sub_100225AB4(a1, a2);
      *(_QWORD *)&v97 = sub_100228BD8(v44, (unint64_t)v46, (uint64_t *)&v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, (char *)&v97 + 8, v42 + 4);
      swift_bridgeObjectRelease(v46);
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v36, v41, "Failed to unwrap SDAuthenticationPairingRequest (data: %s)", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
    }
    goto LABEL_24;
  }
  v25 = -[NSObject sessionID](v17, "sessionID");
  if (!v25)
  {
LABEL_6:
    if (qword_1007B42C0 == -1)
    {
LABEL_7:
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100221DF8(v34, (uint64_t)qword_1007C5FF8);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Message does not have a session ID", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

LABEL_24:
      return;
    }
LABEL_50:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_7;
  }
  v26 = v25;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v29 = v28;

  UUID.init(uuidString:)(v27, v29);
  v30 = swift_bridgeObjectRelease(v29);
  v31 = v92;
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v92 + 48);
  v33 = v94;
  if (v32(v12, 1, v94, v30) == 1)
  {
    sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v93, v12, v33);
  v47 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (!v47)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    return;
  }
  v48 = v47;
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v48, "idsDeviceForUniqueID:", v49);

  if (v50)
  {
    if (-[NSObject hasType](v17, "hasType"))
    {
      v51 = sub_1003FE924(-[NSObject type](v17, "type"));
      if ((v52 & 1) == 0)
      {
        v91 = (char *)v51;
        v53 = (const char **)(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
        *(_QWORD *)&v54 = swift_beginAccess(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions, v96, 0, 0).n128_u64[0];
        v55 = *v53;
        v56 = *((_QWORD *)*v53 + 2);
        v57 = v93;
        v88 = *v53;
        if (v56)
        {
          v58 = (uint64_t)(v55 + 32);
          swift_bridgeObjectRetain(v55, v54);
          while (1)
          {
            sub_100244418(v58, (uint64_t)&v100);
            v60 = v101;
            v59 = v102;
            sub_10023A834(&v100, v101);
            (*(void (**)(uint64_t))(*((_QWORD *)v59[1] + 1) + 32))(v60);
            LOBYTE(v59) = static UUID.== infix(_:_:)(v15, v57);
            (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v94);
            if ((v59 & 1) != 0)
              break;
            sub_10022E75C(&v100);
            v58 += 40;
            if (!--v56)
              goto LABEL_38;
          }
          sub_10026EE60(&v100, (uint64_t)&v97);
        }
        else
        {
          swift_bridgeObjectRetain(v55, v54);
LABEL_38:
          v99 = 0;
          v97 = 0u;
          v98 = 0u;
        }
        swift_bridgeObjectRelease(v88);
        v74 = v94;
        v75 = v91;
        if (*((_QWORD *)&v98 + 1))
        {
          v76 = &v97;
        }
        else
        {
          sub_10000D0F0((uint64_t)&v97, &qword_1007C6360);
          v101 = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
          v102 = &off_10072BAC8;
          *(_QWORD *)&v100 = v50;
          v77 = v50;
          sub_10054E060(v93, (uint64_t)&v100, v75, 0, v95);
          sub_10022E75C(&v100);
          v76 = (__int128 *)v95;
        }
        sub_10026EE60(v76, (uint64_t)&v100);
        if (v75 != (char *)8)
          goto LABEL_48;
        v78 = v90 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
        swift_beginAccess(v90 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI, v95, 0, 0);
        v79 = v89;
        sub_100221F28(v78, v89, &qword_1007B7280);
        LODWORD(v78) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v32)(v79, 1, v74);
        sub_10000D0F0(v79, &qword_1007B7280);
        if ((_DWORD)v78 != 1)
        {
          v80 = v101;
          v81 = v102;
          sub_10026EEE8((uint64_t)&v100, v101);
          (*((void (**)(uint64_t, uint64_t))v81[1] + 3))(1, v80);
        }
        v82 = -[NSObject uniqueID](v50, "uniqueID");
        if (v82)
        {
          v83 = v82;
          v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v86 = v85;

          sub_100559CA8(v84, (uint64_t)v86);
          swift_bridgeObjectRelease(v86);
LABEL_48:
          sub_10023A834(&v100, v101);
          sub_10048AA90(v17);

          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v93, v74);
          sub_10022E75C(&v100);
          return;
        }
        goto LABEL_52;
      }
    }
    v61 = v93;
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v62 = type metadata accessor for Logger(0);
    v63 = sub_100221DF8(v62, (uint64_t)qword_1007C5FF8);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Message does not have an authentication type", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
      v67 = v64;
      v64 = v50;
    }
    else
    {
      v67 = v17;
      v17 = v50;
    }

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v61, v33);
  }
  else
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v68 = type metadata accessor for Logger(0);
    sub_100221DF8(v68, (uint64_t)qword_1007C5FF8);
    v69 = swift_bridgeObjectRetain_n(a4, 2);
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.error.getter(v70);
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100 = v73;
      *(_DWORD *)v72 = 136315138;
      v31 = v92;
      swift_bridgeObjectRetain(a4);
      *(_QWORD *)&v97 = sub_100228BD8((uint64_t)v91, (unint64_t)a4, (uint64_t *)&v100);
      v33 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, (char *)&v97 + 8, v72 + 4);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "IDS device not found for IDS ID %s. Is the device in the same iCloud account?", v72, 0xCu);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v72, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
    }

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v93, v33);
  }
}

uint64_t sub_100559CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t result;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  v38 = a1;
  v4 = sub_100008384((uint64_t *)&unk_1007BD990);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v35 - v8;
  v10 = type metadata accessor for RegistrationState(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v36 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v37 = (uint64_t)&v35 - v14;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    v23 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID, v40, 32, 0);
    v24 = *v22;
    if (!*(_QWORD *)(*v22 + 16))
    {
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      v28(v9, 1, 1, v10, v23);
      v25 = v38;
LABEL_8:
      sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007BD990);
      swift_endAccess(v40);
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 1, 1, v30);
      v7[*(int *)(v10 + 20)] = 1;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28)(v7, 0, 1, v10);
      swift_beginAccess(v22, v40, 33, 0);
      swift_bridgeObjectRetain(a2);
      sub_1003950CC((uint64_t)v7, v25, a2);
      return swift_endAccess(v40);
    }
    swift_bridgeObjectRetain(a2);
    v25 = v38;
    v26 = sub_10045C200(v38, a2);
    if ((v27 & 1) != 0)
    {
      sub_100244384(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v11 + 72) * v26, (uint64_t)v9, type metadata accessor for RegistrationState);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28)(v9, 0, 1, v10);
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v9, 1, 1, v10);
    }
    v29 = swift_bridgeObjectRelease(a2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v29) == 1)
      goto LABEL_8;
    v31 = v37;
    sub_100221DB4((uint64_t)v9, v37, type metadata accessor for RegistrationState);
    swift_endAccess(v40);
    v32 = v36;
    sub_100221F28(v31, v36, &qword_1007C4330);
    *(_BYTE *)(v32 + *(int *)(v10 + 20)) = 1;
    swift_beginAccess(v22, v40, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    v39 = *v22;
    *v22 = 0x8000000000000000;
    sub_1005695D8(v32, v25, a2, isUniquelyReferenced_nonNull_native, (uint64_t)v7);
    v34 = *v22;
    *v22 = v39;
    swift_bridgeObjectRelease(v34);
    swift_endAccess(v40);
    sub_10000D0F0((uint64_t)v7, (uint64_t *)&unk_1007BD990);
    return sub_1002443C8(v31, type metadata accessor for RegistrationState);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10055A058(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  Class isa;
  id v27;
  void *v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  const char *v47;
  uint8_t *v48;
  double v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  id v63;
  void *v64;
  NSString v65;
  id v66;
  id v67;
  uint64_t v68;
  const char **v69;
  double v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  _UNKNOWN **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  const char *v88;
  uint64_t v89;
  const char **v90;
  double v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  _UNKNOWN **v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  const char *v127;
  __n128 v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  const char *v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  _UNKNOWN **v145;
  char v146[24];
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;

  v132 = a4;
  v131 = a3;
  v7 = sub_100008384((uint64_t *)&unk_1007BD990);
  __chkstk_darwin(v7);
  v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v10);
  v12 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for UUID(0);
  v135 = *(_QWORD *)(v134 - 8);
  v13 = __chkstk_darwin(v134);
  v130 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v130 - v16;
  __chkstk_darwin(v15);
  v136 = (uint64_t)&v130 - v18;
  v19 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v20 = *(v19 - 1);
  __chkstk_darwin(v19);
  v22 = (char **)((char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = v4;
  v23 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(_QWORD *, _QWORD *))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_76;
  }
  v25 = objc_allocWithZone((Class)SDAuthenticationPairingResponse);
  sub_10022E4A8(a1, a2);
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100225AB4(a1, a2);
  v19 = objc_msgSend(v25, "initWithData:", isa);

  if (!v19)
  {
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v40 = type metadata accessor for Logger(0);
    sub_100221DF8(v40, (uint64_t)qword_1007C5FF8);
    sub_10022E4A8(a1, a2);
    v41 = sub_10022E4A8(a1, a2);
    v37 = Logger.logObject.getter(v41);
    v42 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v150 = v44;
      *(_DWORD *)v43 = 136315138;
      sub_10022E4A8(a1, a2);
      v45 = Data.description.getter(a1, a2);
      v47 = v46;
      sub_100225AB4(a1, a2);
      *(_QWORD *)&v147 = sub_100228BD8(v45, (unint64_t)v47, (uint64_t *)&v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, (char *)&v147 + 8, v43 + 4);
      swift_bridgeObjectRelease(v47);
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v37, v42, "Failed to unwrap SDAuthenticationPairingResponse (data: %s)", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      sub_100225AB4(a1, a2);
      sub_100225AB4(a1, a2);
    }
    goto LABEL_18;
  }
  v27 = objc_msgSend(v19, "sessionID");
  if (!v27)
  {
LABEL_6:
    if (qword_1007B42C0 == -1)
    {
LABEL_7:
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100221DF8(v35, (uint64_t)qword_1007C5FF8);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Message does not have a session ID", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

LABEL_18:
      return;
    }
LABEL_76:
    swift_once(&qword_1007B42C0, sub_1005477EC);
    goto LABEL_7;
  }
  v28 = v27;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v31 = v30;

  UUID.init(uuidString:)(v29, v31);
  v32 = swift_bridgeObjectRelease(v31);
  v33 = v135;
  v34 = v134;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v135 + 48))(v12, 1, v134, v32) == 1)
  {
    sub_10000D0F0((uint64_t)v12, &qword_1007B7280);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v136, v12, v34);
  v48 = &v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID];
  *(_QWORD *)&v49 = swift_beginAccess(&v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID], &v150, 32, 0).n128_u64[0];
  v50 = *(_QWORD *)v48;
  if (*(_QWORD *)(v50 + 16))
  {
    v51 = v132;
    swift_bridgeObjectRetain(v132, v49);
    v52 = v131;
    v53 = sub_10045C200(v131, (uint64_t)v51);
    if ((v54 & 1) != 0)
    {
      v55 = v53;
      v56 = *(_QWORD *)(v50 + 56);
      v57 = type metadata accessor for RegistrationState(0);
      v58 = *(_QWORD *)(v57 - 8);
      sub_100244384(v56 + *(_QWORD *)(v58 + 72) * v55, (uint64_t)v9, type metadata accessor for RegistrationState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v9, 0, 1, v57);
    }
    else
    {
      v57 = type metadata accessor for RegistrationState(0);
      v58 = *(_QWORD *)(v57 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v9, 1, 1, v57);
    }
    swift_bridgeObjectRelease(v51);
  }
  else
  {
    v57 = type metadata accessor for RegistrationState(0);
    v58 = *(_QWORD *)(v57 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v9, 1, 1, v57);
    v51 = v132;
    v52 = v131;
  }
  type metadata accessor for RegistrationState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v9, 1, v57))
  {
    sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007BD990);
    swift_endAccess(&v150);
    v59 = 0;
  }
  else
  {
    v59 = v9[*(int *)(v57 + 20)];
    sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007BD990);
    swift_endAccess(&v150);
  }
  v60 = objc_msgSend(v19, "requestArmingUI");
  v61 = objc_msgSend(v19, "hasType");
  v62 = v134;
  if (!v61 || objc_msgSend(v19, "type") != 8 || !(v59 ^ 1 | v60))
  {
    v69 = (const char **)&v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
    *(_QWORD *)&v70 = swift_beginAccess(&v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions], v146, 0, 0).n128_u64[0];
    v71 = *v69;
    v72 = *((_QWORD *)*v69 + 2);
    if (v72)
    {
      v73 = (uint64_t)(v71 + 32);
      swift_bridgeObjectRetain(*v69, v70);
      while (1)
      {
        sub_100244418(v73, (uint64_t)&v150);
        v75 = v151;
        v74 = v152;
        sub_10023A834(&v150, v151);
        (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v74 + 8) + 8) + 32))(v75);
        v76 = static UUID.== infix(_:_:)(v17, v136);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v17, v62);
        if ((v76 & 1) != 0)
          break;
        sub_10022E75C(&v150);
        v73 += 40;
        if (!--v72)
          goto LABEL_37;
      }
      sub_10026EE60(&v150, (uint64_t)&v147);
    }
    else
    {
      swift_bridgeObjectRetain(*v69, v70);
LABEL_37:
      v149 = 0;
      v147 = 0u;
      v148 = 0u;
    }
    swift_bridgeObjectRelease(v71);
    v33 = v135;
    if (*((_QWORD *)&v148 + 1))
    {
      sub_10026EE60(&v147, (uint64_t)&v150);
      if (qword_1007B42C0 != -1)
        swift_once(&qword_1007B42C0, sub_1005477EC);
      v77 = type metadata accessor for Logger(0);
      sub_100221DF8(v77, (uint64_t)qword_1007C5FF8);
      v78 = sub_100244418((uint64_t)&v150, (uint64_t)&v143);
      v79 = Logger.logObject.getter(v78);
      v80 = static os_log_type_t.default.getter(v79);
      if (os_log_type_enabled(v79, v80))
      {
        v81 = (uint8_t *)swift_slowAlloc(12, -1);
        v82 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v138 = v82;
        *(_DWORD *)v81 = 136315138;
        v133 = v81 + 4;
        v84 = *((_QWORD *)&v144 + 1);
        v83 = v145;
        sub_10023A834(&v143, *((uint64_t *)&v144 + 1));
        (*(void (**)(uint64_t))(*((_QWORD *)v83[1] + 1) + 32))(v84);
        v85 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v86 = dispatch thunk of CustomStringConvertible.description.getter(v134, v85);
        v88 = v87;
        (*(void (**)(char *, uint64_t))(v135 + 8))(v17, v134);
        v141 = sub_100228BD8(v86, (unint64_t)v88, (uint64_t *)&v138);
        v62 = v134;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v133);
        swift_bridgeObjectRelease(v88);
        sub_10022E75C(&v143);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Handling with existing lock session: %s", v81, 0xCu);
        swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
        v89 = v82;
        v33 = v135;
        swift_slowDealloc(v89, -1, -1);
        swift_slowDealloc(v81, -1, -1);
      }
      else
      {
        sub_10022E75C(&v143);
      }

      sub_10023A834(&v150, v151);
      sub_1002EBFDC(v19);
    }
    else
    {
      sub_10000D0F0((uint64_t)&v147, &qword_1007C6368);
      v90 = (const char **)&v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
      *(_QWORD *)&v91 = swift_beginAccess(&v133[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions], &v141, 0, 0).n128_u64[0];
      v92 = *v90;
      v93 = *((_QWORD *)*v90 + 2);
      if (v93)
      {
        v94 = (uint64_t)(v92 + 32);
        swift_bridgeObjectRetain(*v90, v91);
        while (1)
        {
          sub_100244418(v94, (uint64_t)&v138);
          v95 = v139;
          v96 = v140;
          sub_10023A834(&v138, v139);
          (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v96 + 8) + 8) + 32))(v95);
          v97 = static UUID.== infix(_:_:)(v17, v136);
          (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v62);
          if ((v97 & 1) != 0)
            break;
          sub_10022E75C(&v138);
          v94 += 40;
          if (!--v93)
            goto LABEL_52;
        }
        sub_10026EE60(&v138, (uint64_t)&v143);
      }
      else
      {
        swift_bridgeObjectRetain(*v90, v91);
LABEL_52:
        v145 = 0;
        v143 = 0u;
        v144 = 0u;
      }
      swift_bridgeObjectRelease(v92);
      v104 = v130;
      if (!*((_QWORD *)&v144 + 1))
      {
        sub_10000D0F0((uint64_t)&v143, &qword_1007C6360);
        if (qword_1007B42C0 != -1)
          swift_once(&qword_1007B42C0, sub_1005477EC);
        v118 = type metadata accessor for Logger(0);
        sub_100221DF8(v118, (uint64_t)qword_1007C5FF8);
        v119 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v104, v136, v62);
        v120 = Logger.logObject.getter(v119);
        v121 = static os_log_type_t.error.getter(v120);
        if (os_log_type_enabled(v120, v121))
        {
          v122 = (uint8_t *)swift_slowAlloc(12, -1);
          v123 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v150 = v123;
          *(_DWORD *)v122 = 136315138;
          v124 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v125 = dispatch thunk of CustomStringConvertible.description.getter(v62, v124);
          v127 = (const char *)v126;
          *(_QWORD *)&v143 = sub_100228BD8(v125, v126, (uint64_t *)&v150);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, (char *)&v143 + 8, v122 + 4);
          v128 = swift_bridgeObjectRelease(v127);
          (*(void (**)(char *, uint64_t, __n128))(v135 + 8))(v104, v62, v128);
          _os_log_impl((void *)&_mh_execute_header, v120, v121, "Could not find existing session for %s", v122, 0xCu);
          swift_arrayDestroy(v123, 1, (char *)&type metadata for Any + 8);
          v129 = v123;
          v33 = v135;
          swift_slowDealloc(v129, -1, -1);
          swift_slowDealloc(v122, -1, -1);

        }
        else
        {

          (*(void (**)(char *, uint64_t))(v33 + 8))(v104, v62);
        }

        goto LABEL_71;
      }
      sub_10026EE60(&v143, (uint64_t)&v150);
      if (qword_1007B42C0 != -1)
        swift_once(&qword_1007B42C0, sub_1005477EC);
      v105 = type metadata accessor for Logger(0);
      sub_100221DF8(v105, (uint64_t)qword_1007C5FF8);
      v106 = sub_100244418((uint64_t)&v150, (uint64_t)&v143);
      v107 = Logger.logObject.getter(v106);
      v108 = static os_log_type_t.default.getter(v107);
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc(12, -1);
        v110 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v138 = v110;
        *(_DWORD *)v109 = 136315138;
        v133 = v109 + 4;
        v112 = *((_QWORD *)&v144 + 1);
        v111 = v145;
        sub_10023A834(&v143, *((uint64_t *)&v144 + 1));
        (*(void (**)(uint64_t))(*((_QWORD *)v111[1] + 1) + 32))(v112);
        v113 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v114 = dispatch thunk of CustomStringConvertible.description.getter(v134, v113);
        v116 = v115;
        (*(void (**)(char *, uint64_t))(v135 + 8))(v17, v134);
        v137 = sub_100228BD8(v114, (unint64_t)v116, (uint64_t *)&v138);
        v62 = v134;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v133);
        swift_bridgeObjectRelease(v116);
        sub_10022E75C(&v143);
        _os_log_impl((void *)&_mh_execute_header, v107, v108, "Handling with existing key session: %s", v109, 0xCu);
        swift_arrayDestroy(v110, 1, (char *)&type metadata for Any + 8);
        v117 = v110;
        v33 = v135;
        swift_slowDealloc(v117, -1, -1);
        swift_slowDealloc(v109, -1, -1);
      }
      else
      {
        sub_10022E75C(&v143);
      }

      sub_10023A834(&v150, v151);
      sub_100490570(v19);
    }

    sub_10022E75C(&v150);
LABEL_71:
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v136, v62);
    return;
  }
  v63 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (v63)
  {
    v64 = v63;
    v65 = String._bridgeToObjectiveC()();
    v66 = objc_msgSend(v64, "idsDeviceForUniqueID:", v65);

    if (v66)
    {
      *((_QWORD *)&v144 + 1) = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
      v145 = &off_10072BAC8;
      *(_QWORD *)&v143 = v66;
      v67 = v66;
      v68 = v136;
      sub_10054D670(v136, (uint64_t)&v143, 0, 0xE000000000000000, 8, &v147);
      sub_10022E75C(&v143);
      sub_10026EE60(&v147, (uint64_t)&v150);
      sub_10023A834(&v150, v151);
      sub_1002EBFDC(v19);

      sub_10022E75C(&v150);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v68, v62);
      return;
    }
    if (qword_1007B42C0 != -1)
      swift_once(&qword_1007B42C0, sub_1005477EC);
    v98 = type metadata accessor for Logger(0);
    sub_100221DF8(v98, (uint64_t)qword_1007C5FF8);
    v99 = swift_bridgeObjectRetain_n(v51, 2);
    v100 = Logger.logObject.getter(v99);
    v101 = static os_log_type_t.error.getter(v100);
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc(12, -1);
      v103 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v147 = v103;
      *(_DWORD *)v102 = 136315138;
      v133 = v102 + 4;
      swift_bridgeObjectRetain(v51);
      *(_QWORD *)&v143 = sub_100228BD8(v52, (unint64_t)v51, (uint64_t *)&v147);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, (char *)&v143 + 8, v133);
      swift_bridgeObjectRelease_n(v51, 3);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "Could not find idsDevice %s for registration", v102, 0xCu);
      swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      swift_slowDealloc(v102, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v51, 2);
    }

    goto LABEL_71;
  }
  __break(1u);
}

