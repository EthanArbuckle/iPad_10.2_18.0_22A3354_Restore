uint64_t sub_1002AAA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, _QWORD);
  uint64_t v36;
  _QWORD *v37;
  NSObject *log;
  void (*v40)(uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  v1 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 456))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 312));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v40 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    v5 = *(_QWORD *)(v0 + 328);
    v6 = *(_QWORD *)(v0 + 312);
    v7 = swift_slowAlloc(22, -1);
    v41 = (uint64_t *)swift_slowAlloc(8, -1);
    v42 = swift_slowAlloc(32, -1);
    v43 = v42;
    *(_DWORD *)v7 = 136315394;
    v8 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    log = v3;
    v9 = v6;
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v8);
    v12 = v11;
    *(_QWORD *)(v0 + 120) = sub_100228BD8(v10, v11, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v7 + 4);
    swift_bridgeObjectRelease(v12);
    v40(v5, v9);
    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain(v1);
    v13 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 112) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v7 + 14);
    *v41 = v13;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "SDAirDropSendService.transfers ERROR {id: %s, error: %@}", (uint8_t *)v7, 0x16u);
    v14 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v41, 1, v14);
    swift_slowDealloc(v41, -1, -1);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    v16 = *(_QWORD *)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 312);
    swift_errorRelease(v1);
    v15(v16, v17);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v18 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 456))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 312));
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
  v23 = *(_QWORD *)(v0 + 336);
  v24 = *(_QWORD *)(v0 + 312);
  if (v21)
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v43 = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v24, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 136) = sub_100228BD8(v28, v29, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v25 + 4);
    swift_bridgeObjectRelease(v30);
    v22(v23, v24);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "SDAirDropSendService.transfers REMOVE {id: %s}", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    v22(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  }

  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 360);
  v34 = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 456))(v33, *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v34, 1, 1, v31);
  v35 = (uint64_t (*)(uint64_t, _QWORD))CurrentValueSubject.value.modify(v0 + 16);
  sub_1003950A8(v34, v33);
  v36 = v35(v0 + 16, 0);
  SFAirDropSend.Request.endpointID.getter(v36);
  v37 = (_QWORD *)swift_task_alloc(dword_1007BDABC);
  *(_QWORD *)(v0 + 552) = v37;
  *v37 = v0;
  v37[1] = sub_1002AA458;
  return sub_100396344(*(_QWORD *)(v0 + 200));
}

uint64_t sub_1002AAF0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007B8130);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v2[16] = static AirDropActor.shared;
  return swift_task_switch(sub_1002AB014, v10, 0);
}

uint64_t sub_1002AB014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  if (qword_1007B3D88 != -1)
    swift_once(&qword_1007B3D88, sub_1002A84A4);
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007B7FF8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 104);
  if (v9)
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v35 = v34;
    *(_DWORD *)v13 = 136315138;
    v14 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    v17 = (const char *)v16;
    *(_QWORD *)(v0 + 24) = sub_100228BD8(v15, v16, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v13 + 4);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v18);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Canceling send transfer %s", v13, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  }

  CurrentValueSubject.value.getter(v19);
  v20 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_10045C244(*(_QWORD *)(v0 + 32)), (v22 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v20 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 88) + 72) * v21, *(_QWORD *)(v0 + 80));
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v24 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, v23, 1, v24);
  v27 = swift_bridgeObjectRelease((const char *)v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v25 + 48))(v26, 1, v24, v27) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 72), &qword_1007B8130);
    sub_10042593C(*(_QWORD *)(v0 + 32));
    v28 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v31 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    SFAirDropSend.Transfer.endpointID.getter(v31);
    v32 = (_QWORD *)swift_task_alloc(dword_1007BDABC);
    *(_QWORD *)(v0 + 136) = v32;
    *v32 = v0;
    v32[1] = sub_1002AB37C;
    return sub_100396344(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_1002AB37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1002AB3F0, v1, 0);
}

uint64_t sub_1002AB3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  sub_10042593C(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AB480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[5] = a4;
  v5 = sub_100008384(&qword_1007B8108);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B8110);
  v4[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return swift_task_switch(sub_1002AB544, v9, 0);
}

uint64_t sub_1002AB544()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v0[2] = *(_QWORD *)(v0[5] + 16);
  v4 = sub_100008384(&qword_1007B8118);
  v5 = sub_10026E2FC(&qword_1007B8120, &qword_1007B8118, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = static AirDropActor.shared;
  v7 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v10 = (char *)&dword_1007BA120 + dword_1007BA120;
  v8 = (_QWORD *)swift_task_alloc(unk_1007BA124);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_1002AB66C;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD *))v10)(v6, v7, v0 + 3);
}

uint64_t sub_1002AB66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002AB6C8, v3, 0);
}

uint64_t sub_1002AB6C8()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    if (qword_1007B3D88 != -1)
      swift_once(&qword_1007B3D88, sub_1002A84A4);
    v2 = type metadata accessor for Logger(0);
    sub_100221DF8(v2, (uint64_t)qword_1007B7FF8);
    v3 = swift_bridgeObjectRetain_n(v1, 2);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v22 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v9 = type metadata accessor for SFAirDropSend.Transfer(0);
      v10 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v11 = swift_bridgeObjectRetain(v1);
      v12 = Dictionary.description.getter(v11, v8, v9, v10);
      v14 = v13;
      swift_bridgeObjectRelease(v1);
      *(_QWORD *)(v0 + 32) = sub_100228BD8(v12, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Send transfers updates in daemon: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1, 2);
    }

    sub_1002F17D0(v1, (uint64_t)&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease(v1);
    v18 = static AirDropActor.shared;
    v19 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v21 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007BA120 + dword_1007BA120);
    v20 = (_QWORD *)swift_task_alloc(unk_1007BA124);
    *(_QWORD *)(v0 + 104) = v20;
    *v20 = v0;
    v20[1] = sub_1002AB66C;
    return v21(v18, v19);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v15, *(_QWORD *)(v0 + 72));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002AB9B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  sub_100232F78(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  swift_release(*(_QWORD *)(v0 + 80));
  sub_10022E75C((_QWORD *)(v0 + 88));

  return v0;
}

uint64_t sub_1002ABA18()
{
  uint64_t v0;

  sub_1002AB9B4();
  return swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for SDAirDropSendService()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary20SDAirDropSendService);
}

uint64_t sub_1002ABA58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002ABA84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007B80FC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1002AB480(a1, v4, v5, v6);
}

_QWORD *sub_1002ABAF0(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  void *v39;
  _QWORD *v40;
  _QWORD v42[2];
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD aBlock[5];
  _QWORD *v50;
  int out_token;

  v7 = v6;
  v47 = a5;
  v48 = (_QWORD *)a6;
  v45 = a3;
  v46 = a4;
  v43 = a1;
  v44 = a2;
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[6] = 0;
  swift_unknownObjectWeakInit(v7 + 5, 0);
  v42[1] = sub_1002741DC();
  static DispatchQoS.default.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v20 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v12, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  v21 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x8000000100614000, v17, v14, v11, 0);
  v7[16] = v21;
  v22 = v43;
  v23 = v44;
  v7[3] = v43;
  v7[4] = v23;
  v25 = v45;
  v24 = v46;
  v7[7] = v45;
  v7[8] = &_swiftEmptyDictionarySingleton;
  v7[9] = v24;
  v26 = v22;
  v27 = v23;
  swift_retain(v25);
  v28 = v24;
  aBlock[0] = sub_10021EC04((uint64_t)_swiftEmptyArrayStorage);
  v29 = sub_100008384(&qword_1007B8118);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v7[2] = CurrentValueSubject.init(_:)(aBlock);
  v30 = type metadata accessor for SDAirDropSendStateMachine();
  swift_allocObject(v30, 80, 7);
  v31 = v26;
  v32 = v27;
  v33 = v28;
  v34 = v21;
  v35 = v47;
  swift_retain(v47);
  v7[10] = sub_100425D54((uint64_t)v34, (uint64_t)v31, (uint64_t)v33, v35, (uint64_t)v32);
  v36 = v48;
  v37 = sub_100244418((uint64_t)v48, (uint64_t)(v7 + 11));
  out_token = 0;
  v38 = static OS_dispatch_queue.main.getter(v37);
  aBlock[4] = sub_1002ABE80;
  v50 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100366D0C;
  aBlock[3] = &unk_100720450;
  v39 = _Block_copy(aBlock);
  v40 = v50;
  swift_retain(v7);
  swift_release(v40);
  notify_register_dispatch("AirDropTransfers", &out_token, v38, v39);
  _Block_release(v39);

  sub_10022E75C(v36);
  return v7;
}

void sub_1002ABE80(uint64_t a1)
{
  uint64_t v1;

  sub_1002A8534(a1, v1);
}

uint64_t sub_1002ABE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002ABE98(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002ABEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_100008384(&qword_1007B6738);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for SFAirDropSend.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002ABF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007B6738) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B8144);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D12C;
  return sub_1002A951C(a1, v9, v10, v11);
}

uint64_t sub_1002AC024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B8168);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B8168);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002AC0B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[17] = v11;
  v2[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002AC1E0, static AirDropActor.shared, 0);
}

uint64_t sub_1002AC1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSURL *v26;
  void *v27;
  void *v28;
  _BOOL8 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  NSObject *log;
  uint64_t *v62;
  uint64_t v63;
  os_log_type_t type;
  uint64_t v65;
  uint64_t v66;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  if ((v6 & 1) == 0)
  {
LABEL_24:
    v29 = 0;
    goto LABEL_31;
  }
  v65 = v1 + 24;
  v8 = *(_QWORD *)(v1 + 104);
  v9 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v10 = v9;
  v11 = 0;
  v12 = v9 + 56;
  v13 = -1;
  v14 = -1 << *(_BYTE *)(v9 + 32);
  if (-v14 < 64)
    v13 = ~(-1 << -(char)v14);
  v15 = v13 & *(_QWORD *)(v9 + 56);
  v16 = (unint64_t)(63 - v14) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v11 << 6);
      goto LABEL_21;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v16)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v16)
        goto LABEL_25;
      v20 = *(_QWORD *)(v12 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v16)
          goto LABEL_25;
        v20 = *(_QWORD *)(v12 + 8 * v11);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 120);
    v23 = *(_QWORD *)(v1 + 96);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v10 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
      goto LABEL_26;
    v24 = *(_QWORD *)(v1 + 112);
    v25 = *(_QWORD *)(v1 + 96);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 120), v25);
    URL._bridgeToObjectiveC()(v26);
    v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    LOBYTE(v24) = SFIsiCloudFamilyLink(v28);

    if ((v24 & 1) == 0)
    {
      swift_release(v10);
      goto LABEL_24;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v16)
  {
LABEL_25:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 120), 1, 1, *(_QWORD *)(v1 + 96));
LABEL_26:
    swift_release(v10);
    sub_1002ACA70();
    v30 = sub_1004A60C0(0xD000000000000010, 0x80000001006140A0, 1);
    v53 = *(_QWORD *)(v1 + 40);
    v54 = *(void **)(v53 + 16);
    *(_QWORD *)(v53 + 16) = v30;

    goto LABEL_30;
  }
  v20 = *(_QWORD *)(v12 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v16)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
  swift_once(&qword_1007B3D90, sub_1002AC024);
  v31 = *(_QWORD *)(v1 + 80);
  v32 = *(_QWORD *)(v1 + 88);
  v33 = *(_QWORD *)(v1 + 72);
  v34 = *(_QWORD *)(v1 + 32);
  v35 = type metadata accessor for Logger(0);
  sub_100221DF8(v35, (uint64_t)qword_1007B8168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v32, v34, v33);
  swift_errorRetain(v10);
  v36 = swift_errorRetain(v10);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.error.getter(v37);
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v1 + 80);
  v41 = *(_QWORD *)(v1 + 88);
  v42 = *(_QWORD *)(v1 + 72);
  if (v39)
  {
    type = v38;
    v43 = *(_QWORD *)(v1 + 64);
    v60 = *(_QWORD *)(v1 + 56);
    v44 = *(_QWORD *)(v1 + 48);
    v45 = swift_slowAlloc(22, -1);
    v62 = (uint64_t *)swift_slowAlloc(8, -1);
    v63 = swift_slowAlloc(32, -1);
    v66 = v63;
    *(_DWORD *)v45 = 136315394;
    log = v37;
    SFAirDropReceive.AskRequest.id.getter();
    v46 = sub_1002232C0();
    v47 = dispatch thunk of CustomStringConvertible.description.getter(v44, v46);
    v49 = v48;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v44);
    *(_QWORD *)(v1 + 16) = sub_100228BD8(v47, v49, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v65, v45 + 4);
    v50 = swift_bridgeObjectRelease(v49);
    (*(void (**)(uint64_t, uint64_t, __n128))(v40 + 8))(v41, v42, v50);
    *(_WORD *)(v45 + 12) = 2112;
    swift_errorRetain(v10);
    v51 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(_QWORD *)(v1 + 24) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v65, v1 + 32, v45 + 14);
    *v62 = v51;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to get iCloud Family app for ask request %s: %@", (uint8_t *)v45, 0x16u);
    v52 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v62, 1, v52);
    swift_slowDealloc(v62, -1, -1);
    swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v45, -1, -1);

    swift_errorRelease(v10);
  }
  else
  {
    swift_errorRelease(v10);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
    swift_errorRelease(v10);
    swift_errorRelease(v10);

  }
LABEL_30:
  v29 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
LABEL_31:
  v56 = *(_QWORD *)(v1 + 112);
  v55 = *(_QWORD *)(v1 + 120);
  v57 = *(_QWORD *)(v1 + 88);
  v58 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v29);
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary40SDAirDropContentHandleriCloudFamilyLinks);
}

uint64_t sub_1002AC778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002AC7AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007B81AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1002AC0B4(a1);
}

uint64_t sub_1002AC800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v5 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = *(void **)(v8 + 16);
  v10 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = v9;
  sub_100323EA0(a1, v9, 1, a2);

  return sub_100223280((uint64_t)v7);
}

void sub_1002AC8D0(uint64_t a1, char a2)
{
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRetain(0xED0000594C494D41);
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  String.append(_:)((Swift::String)xmmword_10071C510);
  swift_bridgeObjectRelease(0xED0000594C494D41);
  if ((a2 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x4C4154495041435FLL;
    v4._object = (void *)0xEC00000044455A49;
    String.append(_:)(v4);
  }
  v5._countAndFlagsBits = 0x545845545FLL;
  v5._object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  v6 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(&xmmword_10071C510, 1, v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xEF524546534E4152);
  v9 = (id)SFLocalizedStringForKey(v7, v8);

  if (v9)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    static String.localizedStringWithFormat(_:_:)(v10, v12, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1002ACA70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BD6C0;
  if (!qword_1007BD6C0)
  {
    v1 = objc_opt_self(LSBundleRecord);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007BD6C0);
  }
  return result;
}

uint64_t *AirDropActor.shared.unsafeMutableAddressor()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return &static AirDropActor.shared;
}

uint64_t sub_1002ACAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for AirDropActor();
  v1 = swift_allocObject(v0, 112, 15);
  result = swift_defaultActor_initialize(v1);
  static AirDropActor.shared = v1;
  return result;
}

uint64_t static AirDropActor.shared.getter()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_retain(static AirDropActor.shared);
}

uint64_t AirDropActor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t AirDropActor.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t AirDropActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1002ACBAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BCF00;
  if (!qword_1007BCF00)
  {
    v1 = type metadata accessor for AirDropActor();
    result = swift_getWitnessTable(&protocol conformance descriptor for AirDropActor, v1);
    atomic_store(result, (unint64_t *)&qword_1007BCF00);
  }
  return result;
}

uint64_t type metadata accessor for AirDropActor()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary12AirDropActor);
}

uint64_t sub_1002ACC10()
{
  uint64_t v0;

  return static GlobalActor.sharedUnownedExecutor.getter(v0);
}

_QWORD *sub_1002ACC18(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_10022995C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, "handle");
      if (v7)
      {
        v8 = v7;
        v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v11 = v10;

      }
      else
      {

        v9 = 0;
        v11 = 0;
      }
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_10022995C(v12 > 1, v13 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002ACDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B8308);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B8308);
  if (qword_1007B3ED0 != -1)
    swift_once(&qword_1007B3ED0, sub_1002EA09C);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8340);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1002ACE34()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  NSString *v4;
  id v5;
  id result;

  v0 = type metadata accessor for SDContactStore();
  v1 = (_QWORD *)swift_allocObject(v0, 40, 7);
  v2 = (void *)CNContactStoreMeContactDidChangeNotification;
  v1[2] = CNContactStoreDidChangeNotification;
  v1[3] = v2;
  v3 = objc_allocWithZone((Class)CNContactStore);
  v4 = CNContactStoreDidChangeNotification;
  v5 = v2;
  result = objc_msgSend(v3, "init");
  v1[4] = result;
  qword_1007D8058 = (uint64_t)v1;
  return result;
}

unint64_t sub_1002ACEBC(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  unint64_t v45;
  const char *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t (*v57)(char *, char *, uint64_t, __n128);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  id v64;
  char *v65;
  Class isa;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  Swift::String v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  double v77;
  id v78;
  uint64_t v79;
  void *v80;
  void *v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;
  Swift::String v88;
  Swift::String v89;
  uint64_t v90;
  unint64_t v91;
  Swift::String v92;
  uint64_t v93;
  id v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::String v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;
  uint64_t v105;
  void *v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  Swift::String v117;
  Swift::String v118;
  void *v119;
  char *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  char *v127;
  id v128;
  void *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  unint64_t v142;
  unint64_t v143;

  v3 = v2;
  v140 = a1;
  v141 = a2;
  v4 = sub_100008384((uint64_t *)&unk_1007B83E8);
  __chkstk_darwin(v4);
  v138 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for PersonNameComponents(0);
  v6 = *(_QWORD *)(v139 - 8);
  v7 = __chkstk_darwin(v139);
  v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v130 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v130 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v130 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v130 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v130 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v130 - v25;
  v27 = v3;
  v28 = objc_msgSend(v3, "contactIdentifier");
  if (v28)
  {
    v29 = v28;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v32 = v31;

    v142 = 0;
    v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease(v143);
    v142 = 0xD000000000000015;
    v143 = 0x8000000100614400;
    v33._countAndFlagsBits = v30;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v32);
    v34 = 10535;
    v35 = 0xE200000000000000;
LABEL_17:
    String.append(_:)(*(Swift::String *)&v34);
    v73 = v142;
    v74 = (void *)v143;
LABEL_18:
    v75 = v140;
    v76 = v141;
    goto LABEL_19;
  }
  v134 = v18;
  v135 = v21;
  v136 = v26;
  v137 = v6;
  v131 = v9;
  v132 = v12;
  v133 = v15;
  v36 = objc_msgSend(v3, "personHandle");
  v37 = v139;
  if (!v36)
  {
LABEL_10:
    v47 = objc_msgSend(v27, "nameComponents");
    if (v47)
    {
      v48 = v47;
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      v50 = v137;
      v49 = (uint64_t)v138;
      v51 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
      v51(v138, v24, v37);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v37);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v49, 1, v37) != 1)
      {
        v52 = v136;
        v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v136, v49, v37);
        PersonNameComponents.givenName.getter(v53);
        v55 = v54;
        v56 = swift_bridgeObjectRelease(v54);
        v57 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v50 + 16);
        v58 = v135;
        v59 = v57(v135, v52, v37, v56);
        if (v55)
        {
          PersonNameComponents.familyName.getter(v59);
          v61 = v60;
          v62 = *(void (**)(char *, uint64_t))(v50 + 8);
          v62(v58, v37);
          swift_bridgeObjectRelease(v61);
          if (v61)
          {
            v64 = objc_msgSend(objc_allocWithZone((Class)NSPersonNameComponentsFormatter), "init");
            v65 = v136;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v67 = objc_msgSend(v64, "stringFromPersonNameComponents:", isa);

            v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
            v70 = v69;

            v142 = 0;
            v143 = 0xE000000000000000;
            _StringGuts.grow(_:)(33);
            swift_bridgeObjectRelease(v143);
            v142 = 0xD00000000000001CLL;
            v143 = 0x8000000100614360;
            v71._countAndFlagsBits = v68;
            v71._object = v70;
            String.append(_:)(v71);
            swift_bridgeObjectRelease(v70);
            v72._countAndFlagsBits = 2697511;
            v72._object = (void *)0xE300000000000000;
            String.append(_:)(v72);
            v73 = v142;
            v74 = (void *)v143;
            v75 = v140;
            v76 = v141;
LABEL_39:
            v62(v65, v139);
            goto LABEL_19;
          }
        }
        else
        {
          v62 = *(void (**)(char *, uint64_t))(v50 + 8);
          v63 = ((uint64_t (*)(char *, uint64_t))v62)(v58, v37);
        }
        v76 = v141;
        v65 = v136;
        v98 = PersonNameComponents.givenName.getter(v63);
        if (v99)
        {
          v100 = v99;
          v142 = 0x3133535028707670;
          v143 = 0xEA00000000002C32;
          String.append(_:)(*(Swift::String *)&v98);
          swift_bridgeObjectRelease(v100);
          v101._countAndFlagsBits = 41;
          v101._object = (void *)0xE100000000000000;
          String.append(_:)(v101);
          v73 = v142;
          v74 = (void *)v143;
          v75 = v140;
          goto LABEL_39;
        }
        v105 = PersonNameComponents.familyName.getter(v98);
        v107 = v106;
        v108 = v134;
        v109 = v139;
        v110 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v134, v65, v139);
        if (v107)
          goto LABEL_36;
        v111 = PersonNameComponents.nickname.getter(v110);
        v112 = v133;
        v108 = v134;
        v105 = v111;
        v107 = v113;
        v114 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v133, v134, v109);
        if (v107)
        {
          v62(v112, v109);
LABEL_36:
          v115 = v108;
LABEL_37:
          v116 = v109;
LABEL_38:
          v62(v115, v116);
          v142 = 0;
          v143 = 0xE000000000000000;
          _StringGuts.grow(_:)(45);
          swift_bridgeObjectRelease(v143);
          v142 = 0x4C494E2874786574;
          v143 = 0xEF202C333353502CLL;
          v117._countAndFlagsBits = v105;
          v117._object = v107;
          String.append(_:)(v117);
          swift_bridgeObjectRelease(v107);
          v118._object = (void *)0x80000001006142A0;
          v118._countAndFlagsBits = 0xD00000000000001CLL;
          String.append(_:)(v118);
          v73 = v142;
          v74 = (void *)v143;
          v75 = v140;
          v65 = v136;
          goto LABEL_39;
        }
        v105 = PersonNameComponents.middleName.getter(v114);
        v107 = v119;
        v120 = v132;
        v121 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v132, v112, v109);
        if (v107)
        {
          v62(v120, v109);
          v62(v112, v109);
          v115 = v134;
          goto LABEL_37;
        }
        v105 = PersonNameComponents.namePrefix.getter(v121);
        v107 = v122;
        v123 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v131, v120, v109);
        if (!v107)
        {
          v124 = PersonNameComponents.nameSuffix.getter(v123);
          if (!v125)
          {
            v128 = objc_msgSend(v27, "displayName");
            v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
            v107 = v129;

            v127 = v131;
            v126 = v139;
            goto LABEL_46;
          }
          v105 = v124;
          v107 = v125;
        }
        v126 = v139;
        v127 = v131;
LABEL_46:
        v62(v127, v126);
        v62(v120, v126);
        v62(v112, v126);
        v115 = v134;
        v116 = v126;
        goto LABEL_38;
      }
    }
    else
    {
      v49 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v138, 1, 1, v37);
    }
    sub_10000D0F0(v49, (uint64_t *)&unk_1007B83E8);
    v142 = 0;
    v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v143).n128_u64[0];
    v142 = 0x4C494E2874786574;
    v143 = 0xEF202C333353502CLL;
    v78 = objc_msgSend(v27, "displayName", v77);
    v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v81 = v80;

    v82._countAndFlagsBits = v79;
    v82._object = v81;
    String.append(_:)(v82);
    swift_bridgeObjectRelease(v81);
    v35 = 0x80000001006142A0;
    v34 = 0xD00000000000001CLL;
    goto LABEL_17;
  }
  v38 = v36;
  v39 = objc_msgSend(v36, "value");
  if (!v39)
  {

    goto LABEL_10;
  }
  v40 = v39;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v43 = v42;

  v44 = objc_msgSend(v38, "type");
  if (!v44)
  {
    v142 = 0;
    v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v88._countAndFlagsBits = 0xD000000000000033;
    v88._object = (void *)0x8000000100614380;
    String.append(_:)(v88);
    v89._countAndFlagsBits = v41;
    v89._object = v43;
    String.append(_:)(v89);
    swift_bridgeObjectRelease(v43);
    v90 = 10537;
    v91 = 0xE200000000000000;
LABEL_23:
    String.append(_:)(*(Swift::String *)&v90);

    v73 = v142;
    v74 = (void *)v143;
    goto LABEL_18;
  }
  if (v44 == (id)1)
  {
    v142 = 0;
    v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(v143);
    v45 = 0xD000000000000019;
    v46 = "pvp(PS520,searchByEmail('";
    goto LABEL_22;
  }
  if (v44 == (id)2)
  {
    v142 = 0;
    v143 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease(v143);
    v45 = 0xD00000000000001FLL;
    v46 = "pvp(PS520,searchByPhoneNumber('";
LABEL_22:
    v142 = v45;
    v143 = (unint64_t)(v46 - 32) | 0x8000000000000000;
    v92._countAndFlagsBits = v41;
    v92._object = v43;
    String.append(_:)(v92);
    swift_bridgeObjectRelease(v43);
    v90 = 2697511;
    v91 = 0xE300000000000000;
    goto LABEL_23;
  }
  if (qword_1007B3DA0 != -1)
    swift_once(&qword_1007B3DA0, sub_1002ACDA4);
  v93 = type metadata accessor for Logger(0);
  sub_100221DF8(v93, (uint64_t)qword_1007B8308);
  v94 = v38;
  v95 = Logger.logObject.getter(v94);
  v96 = static os_log_type_t.error.getter(v95);
  if (os_log_type_enabled(v95, v96))
  {
    v97 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v97 = 134217984;
    v142 = (unint64_t)objc_msgSend(v94, "type");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, &v143, v97 + 4);

    _os_log_impl((void *)&_mh_execute_header, v95, v96, "Invalid INPerson handle type: %ld", v97, 0xCu);
    swift_slowDealloc(v97, -1, -1);

  }
  else
  {

  }
  v75 = v140;
  v142 = 0;
  v143 = 0xE000000000000000;
  _StringGuts.grow(_:)(55);
  v102._countAndFlagsBits = 0xD000000000000033;
  v102._object = (void *)0x8000000100614380;
  String.append(_:)(v102);
  v103._countAndFlagsBits = v41;
  v103._object = v43;
  String.append(_:)(v103);
  swift_bridgeObjectRelease(v43);
  v104._countAndFlagsBits = 10537;
  v104._object = (void *)0xE200000000000000;
  String.append(_:)(v104);

  v73 = v142;
  v74 = (void *)v143;
  v76 = v141;
LABEL_19:
  v142 = 0;
  v143 = 0xE000000000000000;
  _StringGuts.grow(_:)(152);
  v83._countAndFlagsBits = v73;
  v83._object = v74;
  String.append(_:)(v83);
  swift_bridgeObjectRelease(v74);
  v84._countAndFlagsBits = 0xD00000000000005FLL;
  v84._object = (void *)0x80000001006142C0;
  String.append(_:)(v84);
  v85._countAndFlagsBits = v75;
  v85._object = v76;
  String.append(_:)(v85);
  v86._countAndFlagsBits = 0xD000000000000035;
  v86._object = (void *)0x8000000100614320;
  String.append(_:)(v86);
  return v142;
}

uint64_t sub_1002ADA34(uint64_t a1, uint64_t a2, void *aBlock)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v3[2] = _Block_copy(aBlock);
  if (a1)
  {
    v6 = sub_100221EDC(0, &qword_1007B8390, INPerson_ptr);
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a1, v6);
  }
  v3[3] = a1;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v9 = v8;
  v3[4] = v8;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1007B8388 + dword_1007B8388);
  v10 = (_QWORD *)swift_task_alloc(unk_1007B838C);
  v3[5] = v10;
  *v10 = v3;
  v10[1] = sub_1002ADAF8;
  return v12(a1, v7, v9);
}

uint64_t sub_1002ADAF8(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v6 = *(_QWORD *)(*v2 + 32);
  v5 = *(_QWORD *)(*v2 + 40);
  v7 = *v2;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  if (v3)
  {
    v9 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1002ADBB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    if (a2)
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, (char *)&type metadata for Any + 8);
    else
      v10 = 0;
    v11 = v10;
    sub_1002B0AA8((uint64_t)&v11, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume(v3);
  }
}

id sub_1002ADCB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDSuggestionCreationUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDSuggestionCreationUtilities()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary29SDSuggestionCreationUtilities);
}

uint64_t sub_1002ADD04()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002ADD38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1007B834C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000D12C;
  return ((uint64_t (*)(uint64_t, uint64_t, void *))((char *)&dword_1007B8348 + dword_1007B8348))(v2, v3, v4);
}

id sub_1002ADDB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  NSString v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v14;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v14 = 0;
  v9 = objc_msgSend(v4, "initWithBundleIdentifier:requireValid:platform:error:", v8, a3 & 1, a4, &v14);

  v10 = v14;
  if (v9)
  {
    v11 = v14;
  }
  else
  {
    v12 = v14;
    _convertNSErrorToError(_:)(v10);

    swift_willThrow();
  }
  return v9;
}

id sub_1002ADE90(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  NSString v20;
  NSString v21;
  NSString v22;
  uint64_t v23;
  NSArray v24;
  uint64_t v25;
  NSString v26;
  NSString v27;
  void *v28;
  NSString v29;
  void *v30;
  id v31;
  id v33;

  if (a3)
  {
    v20 = String._bridgeToObjectiveC()();
    *(_QWORD *)&a1 = swift_bridgeObjectRelease(a3).n128_u64[0];
    if (a5)
      goto LABEL_3;
  }
  else
  {
    v20 = 0;
    if (a5)
    {
LABEL_3:
      v21 = String._bridgeToObjectiveC()();
      *(_QWORD *)&a1 = swift_bridgeObjectRelease(a5).n128_u64[0];
      if (a7)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v21 = 0;
  if (a7)
  {
LABEL_4:
    v22 = String._bridgeToObjectiveC()();
    *(_QWORD *)&a1 = swift_bridgeObjectRelease(a7).n128_u64[0];
    v23 = a10;
    if (a8)
      goto LABEL_5;
LABEL_10:
    v24.super.isa = 0;
    v25 = a13;
    if (v23)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_9:
  v22 = 0;
  v23 = a10;
  if (!a8)
    goto LABEL_10;
LABEL_5:
  sub_100221EDC(0, &qword_1007B83A8, _PSRecipient_ptr);
  v24.super.isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&a1 = swift_bridgeObjectRelease(a8).n128_u64[0];
  v25 = a13;
  if (v23)
  {
LABEL_6:
    v26 = String._bridgeToObjectiveC()();
    *(_QWORD *)&a1 = swift_bridgeObjectRelease(v23).n128_u64[0];
    goto LABEL_12;
  }
LABEL_11:
  v26 = 0;
LABEL_12:
  if (!v25)
  {
    v27 = 0;
    v28 = a16;
    if (a15)
      goto LABEL_14;
LABEL_16:
    v29 = 0;
    goto LABEL_17;
  }
  v27 = String._bridgeToObjectiveC()();
  *(_QWORD *)&a1 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v28 = a16;
  if (!a15)
    goto LABEL_16;
LABEL_14:
  v29 = String._bridgeToObjectiveC()();
  *(_QWORD *)&a1 = swift_bridgeObjectRelease(a15).n128_u64[0];
LABEL_17:
  v30 = v20;
  v31 = objc_msgSend(v33, "initWithBundleID:conversationIdentifier:groupName:recipients:derivedIntentIdentifier:image:reason:reasonType:score:", v20, v21, v22, v24.super.isa, v26, a11, a1, v27, v29, v28);

  return v31;
}

uint64_t sub_1002AE07C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_10000D098;
  return v6();
}

uint64_t sub_1002AE0D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1007B835C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000D098;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1007B8358 + dword_1007B8358))(v2, v3, v4);
}

uint64_t sub_1002AE14C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_10000D098;
  return v7();
}

uint64_t sub_1002AE1A4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002AE1D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007B836C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1007B8368 + dword_1007B8368))(a1, v4, v5, v6);
}

uint64_t sub_1002AE254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000D0F0(a1, &qword_1007B68A0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1007205E0, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_1007B8380, v16);
}

uint64_t sub_1002AE3A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AE3C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007B837C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D12C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1007B8378 + dword_1007B8378))(a1, v4);
}

id sub_1002AE434(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  NSString v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  uint64_t v42;
  _UNKNOWN **v43;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SDContactStore();
  v42 = v11;
  v43 = &off_10072A800;
  v41[0] = a3;
  swift_retain(a3);
  v12 = objc_msgSend(a4, "customIdentifier");
  if (v12 || (v12 = objc_msgSend(a4, "contactIdentifier")) != 0)
  {
    v13 = v12;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v16 = a2;
    if (a2)
      goto LABEL_10;
  }
  else
  {
    v21 = UUID.init()(0);
    UUID.uuidString.getter(v21);
    v15 = v22;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v16 = a2;
    if (a2)
      goto LABEL_10;
  }
  v17 = objc_msgSend(a4, "personHandle");
  v18 = v17;
  if (v17 && (v19 = objc_msgSend(v17, "value"), v18, v19))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v16 = v20;

  }
  else
  {
    v16 = 0;
  }
LABEL_10:
  swift_bridgeObjectRetain(a2);
  v23 = objc_msgSend(a4, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v25 = v24;

  v26 = *sub_10023A834(v41, v42);
  v39 = v11;
  v40 = &off_10072A800;
  v38[0] = v26;
  swift_retain(v26);
  v27 = objc_msgSend(a4, "contactIdentifier");
  v28 = v27;
  if (v27)
  {
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

    sub_10023A834(v38, v39);
    v28 = (void *)sub_1004925C8(v29, v31);
    swift_bridgeObjectRelease(v31);
  }
  sub_10022E75C(v38);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v33 = 0;
  }
  v34 = objc_allocWithZone((Class)_PSRecipient);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v34, "initWithIdentifier:handle:displayName:contact:", v32, v33, v35, v28, swift_bridgeObjectRelease(v25).n128_f64[0]);

  sub_10022E75C(v41);
  return v36;
}

id sub_1002AE720(uint64_t a1, uint64_t a2)
{
  Class isa;
  Class v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v16;

  sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
  swift_bridgeObjectRetain(a2);
  isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  v4 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v5 = objc_allocWithZone((Class)GDKnosisRequest);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithKGQ:query:limit:offset:", v6, v7, isa, v4);

  v9 = objc_msgSend(objc_allocWithZone((Class)GDXPCKnosisService), "init");
  v16 = 0;
  v10 = objc_msgSend(v9, "executeKGQ:error:", v8, &v16);
  v11 = v16;
  if (v10)
  {
    v12 = v16;
  }
  else
  {
    v13 = v16;
    _convertNSErrorToError(_:)(v11);

    swift_willThrow(v14);
  }

  return v10;
}

uint64_t sub_1002AE8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch(sub_1002AE8E0, 0, 0);
}

uint64_t sub_1002AE8E0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  double v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  Class isa;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;

  v1 = (void *)objc_opt_self(_CDInteractionStore);
  v2 = objc_msgSend(v1, "defaultDatabaseDirectory");
  v4 = v2;
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v4 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v3 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  v7 = objc_msgSend(v1, "storeWithDirectory:readOnly:", v4, 1, v3);

  v0[10] = v7;
  v8 = sub_100008384(&qword_1007B83B0);
  Optional.tryUnwrap(_:file:line:)(0x65726F7473, 0xE500000000000000, 0xD000000000000064, 0x8000000100614180, 97, v8);
  v10 = v0[18];
  v9 = v0[19];
  v11 = v0[17];

  v32 = (id)v0[16];
  v0[20] = v32;
  v12 = objc_allocWithZone((Class)NSSortDescriptor);
  v13 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v12, "initWithKey:ascending:", v13, 0);
  v0[21] = v31;

  v14 = sub_100008384((uint64_t *)&unk_1007B86C0);
  v15 = swift_allocObject(v14, 192, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1005D0680;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_100299AB0();
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v9;
  v16 = v0[19];
  if (v11 >> 62)
  {
    v29 = v0[17];
    if (v29 < 0)
      v30 = v0[17];
    else
      v30 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v29);
    v17 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v17 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
  }
  v18 = v0[17];
  sub_100221EDC(0, &qword_1007B83B8, NSPredicate_ptr);
  *(_QWORD *)(v15 + 96) = &type metadata for Int;
  *(_QWORD *)(v15 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 72) = v17;
  v19 = sub_1002ACC18(v18);
  *(_QWORD *)(v15 + 136) = sub_100008384(&qword_1007B83C0);
  v20 = sub_1002B0A5C();
  *(_QWORD *)(v15 + 112) = v19;
  *(_QWORD *)(v15 + 176) = &type metadata for Int;
  *(_QWORD *)(v15 + 184) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 144) = v20;
  *(_QWORD *)(v15 + 152) = v17;
  v21 = (void *)NSPredicate.init(format:_:)(0xD000000000000081, 0x80000001006141F0, v15);
  v0[22] = v21;
  v22 = sub_100008384(&qword_1007C43F0);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v23 + 56) = sub_100221EDC(0, &qword_1007B83D0, NSSortDescriptor_ptr);
  *(_QWORD *)(v23 + 32) = v31;
  v24 = v21;
  v25 = v31;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v0[23] = isa;
  v27 = swift_bridgeObjectRelease(v23);
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_1002AECC8;
  v0[14] = swift_continuation_init(v0 + 2, 1, v27);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002ADBB8;
  v0[13] = &unk_1007205F8;
  objc_msgSend(v32, "queryInteractionsUsingPredicate:sortDescriptors:limit:completionHandler:", v24, isa, 1, v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1002AECC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 192) = v1;
  if (v1)
    v2 = sub_1002AF4E4;
  else
    v2 = sub_1002AED28;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002AED28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8_t *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void *v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  void *v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t type;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;

  v3 = (uint8_t *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(void **)(v0 + 176);
  v5 = *(void **)(v0 + 184);
  if (v2)
  {
    v6 = (uint64_t)sub_100233CA8(*(_QWORD *)(v0 + 128));
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v6 = 0;
  }
  v70 = v0 + 80;

  if (qword_1007B3DA0 != -1)
    swift_once(&qword_1007B3DA0, sub_1002ACDA4);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007B8308);
  v8 = swift_bridgeObjectRetain_n(v6, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v3 = (uint8_t *)swift_slowAlloc(12, -1);
    v1 = swift_slowAlloc(32, -1);
    v71 = v1;
    *(_DWORD *)v3 = 136315138;
    if (!v6)
    {
      v12 = 0;
      goto LABEL_18;
    }
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v6 >> 62)
      goto LABEL_40;
    v12 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v6);
    if (!v12)
    {
      while (1)
      {
LABEL_14:
        swift_bridgeObjectRelease(v6);
LABEL_18:
        *(_QWORD *)(v0 + 80) = v12;
        v15 = sub_100008384(&qword_1007B83D8);
        v16 = String.init<A>(describing:)(v70, v15);
        v18 = v17;
        *(_QWORD *)(v0 + 80) = sub_100228BD8(v16, v17, &v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v3 + 4);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease_n(v6, 2);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Found interaction %s", v3, 0xCu);
        swift_arrayDestroy(v1, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v1, -1, -1);
        swift_slowDealloc(v3, -1, -1);

        if (!v6)
          goto LABEL_33;
LABEL_19:
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v6 >> 62)
        {
          if (v6 >= 0)
            v42 = v6 & 0xFFFFFFFFFFFFFF8;
          else
            v42 = v6;
          swift_bridgeObjectRetain(v6);
          v9 = _CocoaArrayWrapper.endIndex.getter(v42);
          swift_bridgeObjectRelease(v6);
          if (!v9)
          {
LABEL_32:
            swift_bridgeObjectRelease(v6);
            goto LABEL_33;
          }
        }
        else
        {
          v9 = *(NSObject **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v9)
            goto LABEL_32;
        }
        if ((v6 & 0xC000000000000001) != 0)
          break;
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v19 = *(id *)(v6 + 32);
LABEL_24:
          v20 = v19;
          v21 = objc_msgSend(v19, "derivedIntentIdentifier", swift_bridgeObjectRelease(v6).n128_f64[0]);

          if (!v21)
            goto LABEL_33;
          v22 = *(_QWORD *)(v0 + 152);
          v23 = *(_QWORD *)(v0 + 136);
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
          v26 = v25;

          swift_bridgeObjectRetain_n(v22, 2);
          swift_bridgeObjectRetain_n(v23, 2);
          v27 = swift_bridgeObjectRetain_n(v26, 2);
          v28 = Logger.logObject.getter(v27);
          v29 = static os_log_type_t.default.getter();
          v30 = os_log_type_enabled(v28, v29);
          v31 = *(void **)(v0 + 168);
          v32 = *(_QWORD *)(v0 + 152);
          v33 = *(void **)(v0 + 160);
          if (v30)
          {
            v34 = *(_QWORD *)(v0 + 136);
            v61 = *(_QWORD *)(v0 + 144);
            v68 = *(void **)(v0 + 176);
            v66 = *(void **)(v0 + 168);
            v35 = swift_slowAlloc(32, -1);
            v62 = swift_slowAlloc(96, -1);
            v71 = v62;
            *(_DWORD *)v35 = 136315650;
            v64 = v33;
            swift_bridgeObjectRetain(v26);
            *(_QWORD *)(v0 + 80) = sub_100228BD8(v24, v26, &v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v35 + 4);
            swift_bridgeObjectRelease_n(v26, 3);
            *(_WORD *)(v35 + 12) = 2080;
            type = v29;
            v36 = sub_100221EDC(0, &qword_1007B83A8, _PSRecipient_ptr);
            v37 = swift_bridgeObjectRetain(v34);
            v38 = Array.description.getter(v37, v36);
            v40 = v39;
            swift_bridgeObjectRelease(v34);
            *(_QWORD *)(v0 + 80) = sub_100228BD8(v38, v40, &v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v35 + 14);
            swift_bridgeObjectRelease(v40);
            swift_bridgeObjectRelease_n(v34, 2);
            *(_WORD *)(v35 + 22) = 2080;
            swift_bridgeObjectRetain(v32);
            *(_QWORD *)(v0 + 80) = sub_100228BD8(v61, v32, &v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v35 + 24);
            swift_bridgeObjectRelease_n(v32, 3);
            _os_log_impl((void *)&_mh_execute_header, v28, type, "Found derived intent identifier %s for recipients %s and bundle ID %s", (uint8_t *)v35, 0x20u);
            swift_arrayDestroy(v62, 3, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v62, -1, -1);
            swift_slowDealloc(v35, -1, -1);

          }
          else
          {
            v41 = *(_QWORD *)(v0 + 136);

            swift_bridgeObjectRelease_n(v26, 2);
            swift_bridgeObjectRelease_n(v41, 2);
            swift_bridgeObjectRelease_n(v32, 2);

          }
          return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v24, v26);
        }
        __break(1u);
LABEL_40:
        if (v6 >= 0)
          v59 = v11;
        else
          v59 = v6;
        swift_bridgeObjectRetain(v6);
        result = _CocoaArrayWrapper.endIndex.getter(v59);
        v12 = result;
        if (result)
          goto LABEL_10;
      }
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
      goto LABEL_24;
    }
LABEL_10:
    if ((v6 & 0xC000000000000001) != 0)
    {
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
      goto LABEL_13;
    }
    if (*(_QWORD *)(v11 + 16))
    {
      v14 = *(id *)(v6 + 32);
LABEL_13:
      v12 = (uint64_t)v14;
      goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease_n(v6, 2);

    if (v6)
      goto LABEL_19;
LABEL_33:
    v43 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 152), 2);
    v44 = swift_bridgeObjectRetain_n(v43, 2);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter();
    v47 = os_log_type_enabled(v45, v46);
    v48 = *(void **)(v0 + 168);
    v49 = *(_QWORD *)(v0 + 152);
    v50 = *(void **)(v0 + 160);
    if (v47)
    {
      v51 = *(_QWORD *)(v0 + 136);
      v63 = *(_QWORD *)(v0 + 144);
      v69 = *(void **)(v0 + 176);
      v67 = *(void **)(v0 + 168);
      v52 = swift_slowAlloc(22, -1);
      v65 = swift_slowAlloc(64, -1);
      v71 = v65;
      *(_DWORD *)v52 = 136315394;
      v53 = sub_100221EDC(0, &qword_1007B83A8, _PSRecipient_ptr);
      v54 = swift_bridgeObjectRetain(v51);
      v55 = Array.description.getter(v54, v53);
      v57 = v56;
      swift_bridgeObjectRelease(v51);
      *(_QWORD *)(v0 + 80) = sub_100228BD8(v55, v57, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v52 + 4);
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease_n(v51, 2);
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain(v49);
      *(_QWORD *)(v0 + 80) = sub_100228BD8(v63, v49, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 88, v52 + 14);
      swift_bridgeObjectRelease_n(v49, 3);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "No interaction was found for recipients %s and bundle ID %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v58 = *(_QWORD *)(v0 + 136);

      swift_bridgeObjectRelease_n(v58, 2);
      swift_bridgeObjectRelease_n(v49, 2);

    }
    v24 = 0;
    v26 = 0;
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v24, v26);
  }
  return result;
}

uint64_t sub_1002AF4E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v4 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AF544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  return swift_task_switch(sub_1002AF560, 0, 0);
}

void sub_1002AF560()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t active_platform;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  os_log_type_t type;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  void *v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118[3];

  v2 = (_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 176);
  if (!v1)
    goto LABEL_59;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v96 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v96 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
    v3 = _CocoaArrayWrapper.endIndex.getter(v96);
    if (v3)
      goto LABEL_4;
    goto LABEL_58;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
  if (!v3)
  {
LABEL_58:
    swift_bridgeObjectRelease(v1);
LABEL_59:
    (*(void (**)(_QWORD))(v0 + 8))(0);
    return;
  }
LABEL_4:
  v116 = (void *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(SFShareSheetActivityTypeMessage);
  v8 = v7;
  v9 = *(_QWORD *)(v0 + 192);
  if (v6 == v5 && v8 == v4)
    goto LABEL_11;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v0 + 184), v9, v6, v8, 0);
  swift_bridgeObjectRelease(v8);
  if ((v11 & 1) != 0)
  {
LABEL_12:
    swift_bridgeObjectRelease(v1);
    if (qword_1007B3DA0 != -1)
      swift_once(&qword_1007B3DA0, sub_1002ACDA4);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = type metadata accessor for Logger(0);
    sub_100221DF8(v18, (uint64_t)qword_1007B8308);
    v19 = swift_bridgeObjectRetain_n(v17, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 192);
    if (v22)
    {
      v24 = *(_QWORD *)(v0 + 184);
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v118[0] = v26;
      *(_DWORD *)v25 = 136315138;
      swift_bridgeObjectRetain(v23);
      *(_QWORD *)(v0 + 168) = sub_100228BD8(v24, v23, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v116, v0 + 176, v25 + 4);
      swift_bridgeObjectRelease_n(v23, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Skipping conversion of provided recipients to suggestion for activity %s since SPI will be used instead", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 192), 2);

    }
    goto LABEL_59;
  }
  v13 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(SFShareSheetActivityTypeMail);
  v16 = v15;
  v9 = *(_QWORD *)(v0 + 192);
  if (v14 == v13 && v16 == v12)
  {
LABEL_11:
    swift_bridgeObjectRelease(v9);
    goto LABEL_12;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v0 + 184), v9, v14, v16, 0);
  swift_bridgeObjectRelease(v16);
  if ((v27 & 1) != 0)
    goto LABEL_12;
  v111 = v3;
  v115 = v0 + 152;
  if (qword_1007B3DA0 != -1)
    goto LABEL_61;
LABEL_19:
  v112 = v2 - 10;
  v102 = v2 - 5;
  v28 = *(_QWORD *)(v0 + 192);
  v29 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 200) = sub_100221DF8(v29, (uint64_t)qword_1007B8308);
  swift_bridgeObjectRetain_n(v1, 2);
  v30 = swift_bridgeObjectRetain_n(v28, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter();
  v33 = os_log_type_enabled(v31, v32);
  v34 = *(_QWORD *)(v0 + 192);
  v107 = v1;
  if (v33)
  {
    v109 = *(_QWORD *)(v0 + 184);
    v35 = swift_slowAlloc(22, -1);
    v113 = swift_slowAlloc(64, -1);
    v118[0] = v113;
    *(_DWORD *)v35 = 136315394;
    v36 = sub_100221EDC(0, &qword_1007B8390, INPerson_ptr);
    swift_bridgeObjectRetain(v107);
    v37 = Array.description.getter(v107, v36);
    v39 = v38;
    swift_bridgeObjectRelease(v107);
    v40 = v37;
    v1 = v107;
    *(_QWORD *)(v0 + 152) = sub_100228BD8(v40, v39, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v115, v2 - 2, v35 + 4);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease_n(v107, 2);
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain(v34);
    *(_QWORD *)(v0 + 160) = sub_100228BD8(v109, v34, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 2, v116, v35 + 14);
    swift_bridgeObjectRelease_n(v34, 3);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Converting provided recipients %s for activity type %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1, -1);
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v1, 2);
    swift_bridgeObjectRelease_n(v34, 2);
  }

  v41 = *(_QWORD *)(v0 + 184);
  v42 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 40) = v41;
  *(_QWORD *)(v0 + 48) = v42;
  v43 = swift_bridgeObjectRetain_n(v42, 2);
  active_platform = dyld_get_active_platform(v43);
  v45 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
  v46 = sub_1002ADDB0(v41, v42, 0, active_platform);
  v47 = objc_msgSend(v46, "containingBundleRecord", swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192)).n128_f64[0]);
  if (v47
    && (v48 = v47,
        v49 = objc_msgSend(v47, "bundleIdentifier"),
        v48,
        v49))
  {
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

  }
  else
  {
    v53 = *(_QWORD *)(v0 + 192);

    swift_bridgeObjectRetain(v53);
    v50 = *(_QWORD *)(v0 + 184);
    v52 = *(_QWORD *)(v0 + 192);
  }
  *(_QWORD *)(v0 + 40) = v50;
  *(_QWORD *)(v0 + 48) = v52;
  *v112 = _swiftEmptyArrayStorage;
  if (v111 >= 1)
  {
    v100 = v2 - 9;
    v101 = v2 - 15;
    v98 = v2 - 7;
    v99 = v2 - 8;
    v97 = v2 - 6;
    v115 = *(_QWORD *)(v0 + 176) & 0xC000000000000001;
    swift_beginAccess(v2 - 17, v2 - 20, 0, 0);
    v54 = 0;
    v2 -= 10;
    while (1)
    {
      if (v115)
        v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v1);
      else
        v55 = *(id *)(v1 + 8 * v54 + 32);
      v56 = v55;
      v57 = *(_QWORD *)(v0 + 40);
      v58 = *(void **)(v0 + 48);
      swift_bridgeObjectRetain(v58);
      v116 = v56;
      v59 = sub_1002ACEBC(v57, v58);
      v61 = v60;
      swift_bridgeObjectRelease(v58);
      v110 = sub_1002AE720(v59, v61);
      v62 = objc_msgSend(v110, "answers", swift_bridgeObjectRelease(v61).n128_f64[0]);
      v63 = sub_100221EDC(0, &qword_1007B83A0, GDKnosisAnswer_ptr);
      v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v63);

      if ((unint64_t)v64 >> 62)
      {
        if (v64 < 0)
          v70 = v64;
        else
          v70 = v64 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v64);
        v71 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v64);
        if (!v71)
        {
LABEL_42:
          swift_bridgeObjectRelease(v64);
LABEL_43:
          v114 = 0;
          v69 = 0;
          goto LABEL_44;
        }
      }
      else if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_42;
      }
      if ((v64 & 0xC000000000000001) != 0)
      {
        v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v64);
      }
      else
      {
        if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_61:
          swift_once(&qword_1007B3DA0, sub_1002ACDA4);
          goto LABEL_19;
        }
        v65 = *(id *)(v64 + 32);
      }
      v66 = v65;
      v67 = objc_msgSend(v65, "answerId", swift_bridgeObjectRelease(v64).n128_f64[0]);

      if (!v67)
        goto LABEL_43;
      v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v69 = v68;

LABEL_44:
      v72 = *(_QWORD *)(v0 + 192);
      swift_bridgeObjectRetain_n(v69, 2);
      v73 = v116;
      swift_bridgeObjectRetain_n(v72, 2);
      swift_bridgeObjectRetain_n(v58, 2);
      v74 = v73;
      v75 = Logger.logObject.getter(v74);
      type = static os_log_type_t.default.getter();
      v76 = os_log_type_enabled(v75, type);
      v108 = *(_QWORD *)(v0 + 192);
      if (v76)
      {
        v103 = *(_QWORD *)(v0 + 184);
        v77 = swift_slowAlloc(42, -1);
        v105 = (_QWORD *)swift_slowAlloc(8, -1);
        v104 = swift_slowAlloc(96, -1);
        v118[0] = v104;
        *(_DWORD *)v77 = 136315906;
        *(_QWORD *)(v0 + 56) = v114;
        *(_QWORD *)(v0 + 64) = v69;
        swift_bridgeObjectRetain(v69);
        v78 = sub_100008384(&qword_1007B54E0);
        v79 = String.init<A>(describing:)(v101, v78);
        v81 = v80;
        *(_QWORD *)(v0 + 104) = sub_100228BD8(v79, v80, v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v100, v99, v77 + 4);
        swift_bridgeObjectRelease(v81);
        swift_bridgeObjectRelease_n(v69, 2);
        *(_WORD *)(v77 + 12) = 2112;
        *(_QWORD *)(v0 + 112) = v74;
        v82 = v74;
        v2 = v112;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v99, v98, v77 + 14);
        *v105 = v74;

        *(_WORD *)(v77 + 22) = 2080;
        swift_bridgeObjectRetain(v58);
        *(_QWORD *)(v0 + 120) = sub_100228BD8(v57, (unint64_t)v58, v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v98, v97, v77 + 24);
        swift_bridgeObjectRelease_n(v58, 3);
        *(_WORD *)(v77 + 32) = 2080;
        swift_bridgeObjectRetain(v108);
        *(_QWORD *)(v0 + 128) = sub_100228BD8(v103, v108, v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v102, v77 + 34);
        swift_bridgeObjectRelease_n(v108, 3);
        _os_log_impl((void *)&_mh_execute_header, v75, type, "Found handle %s for recipient %@ with suggestion bundle ID %s for activity type %s", (uint8_t *)v77, 0x2Au);
        v83 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v105, 1, v83);
        swift_slowDealloc(v105, -1, -1);
        swift_arrayDestroy(v104, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        v84 = v77;
        v1 = v107;
        swift_slowDealloc(v84, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v69, 2);

        swift_bridgeObjectRelease_n(v58, 2);
        swift_bridgeObjectRelease_n(v108, 2);
      }

      if (qword_1007B3DA8 != -1)
        swift_once(&qword_1007B3DA8, sub_1002ACE34);
      v85 = qword_1007D8058;
      swift_retain(qword_1007D8058);
      v86 = sub_1002AE434(v114, v69, v85, v74);

      swift_bridgeObjectRelease(v69);
      swift_release(v85);
      v87 = v86;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
      v89 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v88 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v89 >= v88 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
      ++v54;
      v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
      specialized Array._endMutation()(v90);

      if (v111 == v54)
      {
        swift_bridgeObjectRelease(v1);
        v91 = *(_QWORD *)(v0 + 96);
        v92 = *(_QWORD *)(v0 + 40);
        v93 = *(_QWORD *)(v0 + 48);
        *(_QWORD *)(v0 + 208) = v91;
        *(_QWORD *)(v0 + 216) = v93;
        v94 = unk_1007B839C;
        v117 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1007B8398 + dword_1007B8398);
        swift_bridgeObjectRetain(v91);
        swift_bridgeObjectRetain(v93);
        v95 = (_QWORD *)swift_task_alloc(v94);
        *(_QWORD *)(v0 + 224) = v95;
        *v95 = v0;
        v95[1] = sub_1002B04DC;
        v117(v91, v92, v93);
        return;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1002B04DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 224);
  *(_QWORD *)(*(_QWORD *)v3 + 232) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1002B0740;
  }
  else
  {
    v9 = v6[26];
    swift_bridgeObjectRelease(v6[27]);
    swift_bridgeObjectRelease(v9);
    v6[30] = a2;
    v6[31] = a1;
    v8 = sub_1002B0564;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1002B0564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = objc_allocWithZone((Class)_PSSuggestion);
  v8 = sub_1002ADE90(v7, v1, v4, 0, 0, 0, 0, v5, v2, v3, 0, 0x6E61747369737361, 0xE900000000000074, 0x6E61747369737361, 0xE900000000000074, 0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    *(_QWORD *)(v0 + 72) = v8;
    v12 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v11 + 4);
    *v15 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Final created suggestion: %@", v11, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v15, 1, v13);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v8);
}

uint64_t sub_1002B0740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  swift_bridgeObjectRelease(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 232);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v6);
    v9 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 80) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v7 + 4);
    *v8 = v9;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get derived intent identifier: %@", v7, 0xCu);
    v10 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 232);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  v13 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 96);
  v15 = objc_allocWithZone((Class)_PSSuggestion);
  v17 = sub_1002ADE90(v16, v13, v12, 0, 0, 0, 0, v14, 0, 0, 0, 0x6E61747369737361, 0xE900000000000074, 0x6E61747369737361, 0xE900000000000074, 0);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v20 = 138412290;
    *(_QWORD *)(v0 + 72) = v17;
    v22 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v20 + 4);
    *v21 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Final created suggestion: %@", v20, 0xCu);
    v23 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v21, 1, v23);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v17);
}

unint64_t sub_1002B0A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B83C8;
  if (!qword_1007B83C8)
  {
    v1 = sub_10021FF9C(&qword_1007B83C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007B83C8);
  }
  return result;
}

uint64_t sub_1002B0AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B83E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002B0AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v7, v8);
  v9 = (char *)&loc_1002B0C4C + *((int *)qword_1002B0D78 + swift_getEnumCaseMultiPayload(v7, v5));
  __asm { BR              X10 }
}

uint64_t sub_1002B0C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100221DB4(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v5 = sub_1002B107C();
  v6 = UUID.uuidString.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v6;
}

void sub_1002B0D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v6, v7);
  v8 = (char *)&loc_1002B0EAC + dword_1002B106C[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002B0EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1002B1014);
  }
  v4 = v3;
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v4;
}

void sub_1002B1018()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x8000000100614490, "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift", 50, 2, 298, 0);
  __break(1u);
  JUMPOUT(0x1002B106CLL);
}

uint64_t sub_1002B107C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = 0;
  v4 = 0;
  v0 = NWEndpoint.nw.getter();
  if (!v0)
    __break(1u);
  v1 = v0;
  nw_endpoint_get_service_identifier(v0, &v3);
  swift_unknownObjectRelease(v1);
  return UUID.init(uuid:)(v3, BYTE1(v3), BYTE2(v3), BYTE3(v3), BYTE4(v3), BYTE5(v3), BYTE6(v3), HIBYTE(v3), v4);
}

void sub_1002B1120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v6, v7);
  v8 = (char *)&loc_1002B124C + dword_1002B14BC[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002B125C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t contact_id;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;

  sub_100221DB4(v2, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v3 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
  if ((v3 & 0x80000) != 0)
  {
    v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  }
  else
  {
    v4 = NWEndpoint.nw.getter(v3);
    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x1002B14BCLL);
    }
    v5 = v4;
    contact_id = nw_endpoint_get_contact_id();
    swift_unknownObjectRelease(v5);
    if (contact_id)
    {
      String.init(cString:)(contact_id);
      swift_bridgeObjectRelease(v7);
      v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
    }
    else
    {
      v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
    }
  }
  v9 = *v8;
  v10 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v0, v9, v10);
  return sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

uint64_t sub_1002B14CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t device_name;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = type metadata accessor for SFString(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = NWEndpoint.nw.getter(v2);
  if (result)
  {
    v6 = result;
    device_name = nw_endpoint_get_device_name();
    swift_unknownObjectRelease(v6);
    if (!device_name)
      return 0;
    v8 = String.init(cString:)(device_name);
    v10 = v9;
    if ((sub_1002B1734(0x6C46737574617453, 0xEB00000000736761) & 0x4000000000) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for SFString.maybeContact(_:), v0);
      v11 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v12 = swift_allocObject(v11, 72, 7);
      *(_OWORD *)(v12 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v12 + 56) = &type metadata for String;
      *(_QWORD *)(v12 + 64) = sub_100299AB0();
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v10;
      v8 = SFString.format(_:)(v12);
      swift_bridgeObjectRelease(v12);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B1628()
{
  return sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
}

uint64_t sub_1002B1648()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::Bool v3;

  if ((sub_1002B1734(0x6C46737574617453, 0xEB00000000736761) & 0x4000000000) != 0
    || (sub_1002B1734(0x6C46737574617453, 0xEB00000000736761) & 0x8000000000) != 0)
  {
    if ((sub_1002B1734(0x6C46737574617453, 0xEB00000000736761) & 0x4000000000) != 0
      || (sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL) & 8) != 0)
    {
      return 1;
    }
    sub_1002B14CC();
    if (v0)
    {
      v1 = v0;
      v2._countAndFlagsBits = 4408910;
      v2._object = (void *)0xE300000000000000;
      v3 = String.hasPrefix(_:)(v2);
      swift_bridgeObjectRelease(v1);
      return v3;
    }
  }
  return 0;
}

uint64_t sub_1002B1734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unint64_t v19;
  char v20;
  char v21;
  unsigned __int8 v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  unsigned __int8 v31;
  unint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  char v36;
  _QWORD v38[3];

  v4 = sub_100008384(&qword_1007B86B8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NWTXTRecord(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWEndpoint.txtRecord.getter(v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000D0F0((uint64_t)v6, &qword_1007B86B8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  result = NWTXTRecord.subscript.getter(a1, a2);
  if (!v13)
  {
LABEL_62:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  v14 = v13;
  v15 = HIBYTE(v13) & 0xF;
  v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0)
    v17 = v15;
  else
    v17 = result & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease(v14);
    goto LABEL_62;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    v19 = sub_1002B729C(result, v14, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1002B7614);
    v21 = v36;
    goto LABEL_40;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v14);
    v19 = (unint64_t)sub_1002B7614(v18, v16, 10);
    v21 = v20 & 1;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    if ((v21 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return v19;
    }
    goto LABEL_62;
  }
  v38[0] = result;
  v38[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v15)
    {
      if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        v19 = (BYTE1(result) - 48);
        if (v15 == 2)
          goto LABEL_39;
        if ((BYTE2(result) - 48) <= 9u)
        {
          v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          v25 = v15 - 3;
          if (v25)
          {
            v26 = (unsigned __int8 *)v38 + 3;
            while (1)
            {
              v27 = *v26 - 48;
              if (v27 > 9)
                goto LABEL_36;
              if (!is_mul_ok(v19, 0xAuLL))
                goto LABEL_36;
              v23 = __CFADD__(10 * v19, v27);
              v19 = 10 * v19 + v27;
              if (v23)
                goto LABEL_36;
              v21 = 0;
              ++v26;
              if (!--v25)
                goto LABEL_40;
            }
          }
          goto LABEL_39;
        }
      }
      goto LABEL_36;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v15 && (result - 48) <= 9u)
      {
        v19 = (result - 48);
        if (v15 == 1)
          goto LABEL_39;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v19 = 10 * (result - 48) + (BYTE1(result) - 48);
          v28 = v15 - 2;
          if (v28)
          {
            v29 = (unsigned __int8 *)v38 + 2;
            while (1)
            {
              v30 = *v29 - 48;
              if (v30 > 9)
                goto LABEL_36;
              if (!is_mul_ok(v19, 0xAuLL))
                goto LABEL_36;
              v23 = __CFADD__(10 * v19, v30);
              v19 = 10 * v19 + v30;
              if (v23)
                goto LABEL_36;
              v21 = 0;
              ++v29;
              if (!--v28)
                goto LABEL_40;
            }
          }
          goto LABEL_39;
        }
      }
LABEL_36:
      v19 = 0;
LABEL_37:
      v21 = 1;
      goto LABEL_40;
    }
    if (v15)
    {
      if (v15 != 1)
      {
        v22 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v19 = 0;
          v23 = v22 == 0;
          v24 = -(uint64_t)v22;
          if (!v23)
            goto LABEL_37;
          if (v15 == 2)
          {
            v21 = 0;
            v19 = v24;
            goto LABEL_40;
          }
          v31 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v24, 0xAuLL))
          {
            v32 = 10 * v24;
            v19 = v32 - v31;
            if (v32 >= v31)
            {
              v33 = v15 - 3;
              if (v33)
              {
                v34 = (unsigned __int8 *)v38 + 3;
                while (1)
                {
                  v35 = *v34 - 48;
                  if (v35 > 9)
                    goto LABEL_36;
                  if (!is_mul_ok(v19, 0xAuLL))
                    goto LABEL_36;
                  v23 = 10 * v19 >= v35;
                  v19 = 10 * v19 - v35;
                  if (!v23)
                    goto LABEL_36;
                  v21 = 0;
                  ++v34;
                  if (!--v33)
                    goto LABEL_40;
                }
              }
LABEL_39:
              v21 = 0;
              goto LABEL_40;
            }
          }
        }
      }
      goto LABEL_36;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002B1B24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t contact_id;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t device_id;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::UInt64 v25;
  Swift::UInt64 v26;
  uint64_t v27;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B107C();
  v6 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v6);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8 = NWEndpoint.nw.getter(v7);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v9 = v8;
  contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v9);
  if (contact_id)
  {
    v11 = String.init(cString:)(contact_id);
    v13 = v12;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v11, v13);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v14 = sub_1002B14CC();
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v16, v17);
    v18 = swift_bridgeObjectRelease(v17);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v19 = NWEndpoint.nw.getter(v18);
  if (!v19)
    goto LABEL_14;
  v20 = v19;
  device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v20);
  if (device_id)
  {
    v22 = String.init(cString:)(device_id);
    v24 = v23;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v22, v24);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v25 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
  Hasher._combine(_:)(v25);
  v26 = sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL);
  Hasher._combine(_:)(v26);
}

Swift::Int sub_1002B1D60(uint64_t a1, uint64_t a2)
{
  return sub_1002B263C(a1, a2, (void (*)(_QWORD *))sub_1002B1B24);
}

Swift::Int sub_1002B1D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B268C(a1, a2, a3, (void (*)(_QWORD *))sub_1002B1B24);
}

void sub_1002B1D84(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  char *v7;
  Swift::UInt v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v7 = (char *)v2 + v6[6];
  if (v7[8] == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v8 = *(_QWORD *)v7;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v8);
  }
  v9 = (_QWORD *)((char *)v2 + v6[7]);
  v10 = v9[1];
  if (v10)
  {
    v11 = *v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(a1, v11, v10);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v12 = (_QWORD *)((char *)v2 + v6[8]);
  v13 = v12[1];
  if (v13)
  {
    v14 = *v12;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v13);
    String.hash(into:)(a1, v14, v13);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v15 = (_QWORD *)((char *)v2 + v6[9]);
  v16 = v15[1];
  if (v16)
  {
    v17 = *v15;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v16);
    String.hash(into:)(a1, v17, v16);
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v18 = (_QWORD *)((char *)v2 + v6[10]);
  v19 = v18[1];
  if (v19)
  {
    v20 = *v18;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(a1, v20, v19);
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v21 = (_QWORD *)((char *)v2 + v6[11]);
  v22 = v21[1];
  if (v22)
  {
    v23 = *v21;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(a1, v23, v22);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v24 = (_QWORD *)((char *)v2 + v6[12]);
  v25 = v24[1];
  if (v25)
  {
    v26 = *v24;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(a1, v26, v25);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*((_BYTE *)v2 + v6[13]));
  v27 = (_QWORD *)((char *)v2 + v6[14]);
  v28 = v27[1];
  if (v28 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v29 = *v27;
    Hasher._combine(_:)(1u);
    sub_10022E4A8(v29, v28);
    Data.hash(into:)(a1, v29, v28);
    sub_100225AA0(v29, v28);
  }
}

Swift::Int sub_1002B2038(uint64_t a1, uint64_t a2)
{
  return sub_1002B263C(a1, a2, (void (*)(_QWORD *))sub_1002B1D84);
}

Swift::Int sub_1002B2048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B268C(a1, a2, a3, (void (*)(_QWORD *))sub_1002B1D84);
}

uint64_t sub_1002B2054@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_1002B2064()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  Data.hash(into:)(v8, *v0, v0[1]);
  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  v4 = (_QWORD *)((char *)v0 + *(int *)(v1 + 28));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*((_BYTE *)v0 + *(int *)(v1 + 32)));
  return Hasher._finalize()();
}

void sub_1002B2164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v6, v7);
  v8 = (char *)sub_1002B2294 + 4 * byte_1005D0DA0[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002B2294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100221DB4(v2, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  Hasher._combine(_:)(0);
  sub_1002B1B24(v0);
  return sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

void sub_1002B2430(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  Data.hash(into:)(a1, *v2, v2[1]);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = (_QWORD *)((char *)v2 + *(int *)(a2 + 28));
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*((_BYTE *)v2 + *(int *)(a2 + 32)));
}

Swift::Int sub_1002B250C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10);
  Data.hash(into:)(v10, *v2, v2[1]);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v4, v5);
  v6 = (_QWORD *)((char *)v2 + *(int *)(a2 + 28));
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(v10, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*((_BYTE *)v2 + *(int *)(a2 + 32)));
  return Hasher._finalize()();
}

uint64_t sub_1002B2600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UUID.uuidString.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Int sub_1002B2630(uint64_t a1, uint64_t a2)
{
  return sub_1002B263C(a1, a2, (void (*)(_QWORD *))sub_1002B2164);
}

Swift::Int sub_1002B263C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_1002B2680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B268C(a1, a2, a3, (void (*)(_QWORD *))sub_1002B2164);
}

Swift::Int sub_1002B268C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *))
{
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  a4(v6);
  return Hasher._finalize()();
}

void sub_1002B26C8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1002B0AF0();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1002B26F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v1, (uint64_t)v8, v9);
  v10 = (char *)&loc_1002B2850 + dword_1002B2FCC[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

uint64_t sub_1002B2860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  unint64_t v34;
  Swift::String v35;
  char v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  Swift::String v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;

  sub_100221DB4(v0, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  *(_QWORD *)(v5 - 96) = 0;
  *(_QWORD *)(v5 - 88) = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v6 = *(_QWORD *)(v5 - 88);
  *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 96);
  *(_QWORD *)(v5 - 88) = v6;
  v7._object = (void *)0x8000000100614420;
  v7._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v7);
  sub_1002B107C();
  v8 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v8);
  object = v9._object;
  String.append(_:)(v9);
  v11 = swift_bridgeObjectRelease(object);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v2, v11);
  v12._countAndFlagsBits = 544034336;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  sub_1002B2FE0();
  v14 = v13;
  *(_QWORD *)(v5 - 112) = v15;
  *(_QWORD *)(v5 - 104) = v13;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v5 - 112, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 543444256;
  v16._object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  sub_1002B31D4();
  v18 = v17;
  *(_QWORD *)(v5 - 112) = v19;
  *(_QWORD *)(v5 - 104) = v17;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v5 - 112, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 541346080;
  v20._object = (void *)0xE400000000000000;
  String.append(_:)(v20);
  sub_1002B33BC();
  v22 = v21;
  *(_QWORD *)(v5 - 112) = v23;
  *(_QWORD *)(v5 - 104) = v21;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v5 - 112, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v22);
  v24._countAndFlagsBits = 0x2044494320;
  v24._object = (void *)0xE500000000000000;
  String.append(_:)(v24);
  sub_1002B35A4();
  v26 = v25;
  *(_QWORD *)(v5 - 112) = v27;
  *(_QWORD *)(v5 - 104) = v25;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v5 - 112, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v26);
  v28._countAndFlagsBits = 542458144;
  v28._object = (void *)0xE400000000000000;
  String.append(_:)(v28);
  v29 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
  v30 = 1702195828;
  v31 = 0xE400000000000000;
  if ((v29 & 0x4000000000) == 0)
  {
    v32 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
    v33 = (v32 & 0x8000000000) == 0;
    if ((v32 & 0x8000000000) != 0)
      v30 = 1702195828;
    else
      v30 = 0x65736C6166;
    if (v33)
      v31 = 0xE500000000000000;
    else
      v31 = 0xE400000000000000;
  }
  v34 = v31;
  String.append(_:)(*(Swift::String *)&v30);
  swift_bridgeObjectRelease(v31);
  v35._countAndFlagsBits = 541999904;
  v35._object = (void *)0xE400000000000000;
  String.append(_:)(v35);
  v36 = sub_1002B1648();
  v37 = (v36 & 1) == 0;
  if ((v36 & 1) != 0)
    v38 = 1702195828;
  else
    v38 = 0x65736C6166;
  if (v37)
    v39 = 0xE500000000000000;
  else
    v39 = 0xE400000000000000;
  v40 = v39;
  String.append(_:)(*(Swift::String *)&v38);
  swift_bridgeObjectRelease(v39);
  v41._countAndFlagsBits = 541476384;
  v41._object = (void *)0xE400000000000000;
  String.append(_:)(v41);
  *(_QWORD *)(v5 - 112) = sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL);
  type metadata accessor for RPFeatureFlags(0);
  _print_unlocked<A, B>(_:_:)(v5 - 112, v5 - 96, v42, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v43._countAndFlagsBits = 541479712;
  v43._object = (void *)0xE400000000000000;
  String.append(_:)(v43);
  *(_QWORD *)(v5 - 112) = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
  type metadata accessor for RPStatusFlags(0);
  _print_unlocked<A, B>(_:_:)(v5 - 112, v5 - 96, v44, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v45._countAndFlagsBits = 62;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  v46 = *(_QWORD *)(v5 - 96);
  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v46;
}

void sub_1002B2FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v5, v6);
  v7 = (char *)&loc_1002B30C8 + dword_1002B31C4[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1002B30D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v2 = sub_1002B14CC();
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v2;
}

void sub_1002B31D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v5, v6);
  v7 = (char *)&loc_1002B32BC + dword_1002B33AC[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1002B32CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t device_model;

  v2 = sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1002B33ACLL);
  }
  v4 = v3;
  device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease(v4);
  if (device_model)
    device_model = String.init(cString:)(device_model);
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return device_model;
}

void sub_1002B33BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v5, v6);
  v7 = (char *)&loc_1002B34A4 + dword_1002B3594[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1002B34B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t device_id;

  v2 = sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1002B3594);
  }
  v4 = v3;
  device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v4);
  if (device_id)
    device_id = String.init(cString:)(device_id);
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return device_id;
}

void sub_1002B35A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v6, v7);
  v8 = (char *)&loc_1002B36C8 + dword_1002B37E4[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002B36D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t contact_id;

  v2 = sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1002B37E4);
  }
  v4 = v3;
  contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v4);
  if (contact_id)
    contact_id = String.init(cString:)(contact_id);
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return contact_id;
}

void sub_1002B37F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  _QWORD v12[4];

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v12[0] = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v12[1] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v7);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v9, v10);
  v11 = (char *)&loc_1002B397C + *((int *)qword_1002B3B58 + swift_getEnumCaseMultiPayload(v9, v7));
  __asm { BR              X10 }
}

BOOL sub_1002B398C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t contact_id;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  void (*v17)(uint64_t, uint64_t);

  sub_100221DB4(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v5 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
  if ((v5 & 0x80000) != 0)
  {
    v11 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  }
  else
  {
    v6 = NWEndpoint.nw.getter(v5);
    if (!v6)
    {
      __break(1u);
      JUMPOUT(0x1002B3B58);
    }
    v7 = v6;
    contact_id = nw_endpoint_get_contact_id();
    swift_unknownObjectRelease(v7);
    if (contact_id)
    {
      String.init(cString:)(contact_id);
      swift_bridgeObjectRelease(v9);
      v10 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
    }
    else
    {
      v10 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
    }
    v11 = *v10;
  }
  v12 = *(_QWORD *)(v4 - 112);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104);
  v13(v1, v11, v0);
  v14 = *(_QWORD *)(v4 - 104);
  v13(v14, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v0);
  v15 = sub_100220D78(&qword_1007B86E8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.DeviceRelationship, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeviceRelationship);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v4 - 88), v0, v15);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v4 - 96), v0, v15);
  v16 = *(_QWORD *)(v4 - 88) == *(_QWORD *)(v4 - 96);
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v14, v0);
  v17(v1, v0);
  sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v16;
}

unint64_t sub_1002B3B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  unint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v1, (uint64_t)v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload == 2)
  {
    sub_100221DB4((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    v13 = v4[*(int *)(v2 + 36)];
    sub_1002443C8((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0;
  }
  else
  {
    sub_100221DB4((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v13 = ((unint64_t)sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL) >> 4) & 1;
    sub_1002443C8((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }
  return v13;
}

void sub_1002B3D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v22 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v22);
  v21[1] = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v3 = __chkstk_darwin(v23);
  v24 = (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v21 - v5;
  v7 = type metadata accessor for SFAirDrop.DeviceRelationship(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v21 - v12;
  sub_1002B1120();
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v14(v11, enum case for SFAirDrop.DeviceRelationship.contact(_:), v7);
  v15 = sub_100220D78(&qword_1007B86E8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.DeviceRelationship, (uint64_t)&protocol conformance descriptor for SFAirDrop.DeviceRelationship);
  dispatch thunk of RawRepresentable.rawValue.getter(&v27, v7, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v7, v15);
  v17 = v26;
  v16 = v27;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  v18(v13, v7);
  v25 = v1;
  sub_100244384(v1, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (v16 != v17)
  {
    sub_1002B1120();
    v14(v11, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v7);
    dispatch thunk of RawRepresentable.rawValue.getter(&v27, v7, v15);
    dispatch thunk of RawRepresentable.rawValue.getter(&v26, v7, v15);
    v18(v11, v7);
    v18(v13, v7);
  }
  sub_1002443C8((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v19 = v24;
  sub_100244384(v25, v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v20 = (char *)sub_1002B3F80 + 4 * byte_1005D0DA4[swift_getEnumCaseMultiPayload(v19, v23)];
  __asm { BR              X10 }
}

uint64_t sub_1002B3F80()
{
  uint64_t v0;
  uint64_t v1;

  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v0;
}

uint64_t SDAirDropFlags.hashValue.getter(uint64_t result)
{
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t sub_1002B4038()
{
  return sub_100220D78(&qword_1007B4A80, (uint64_t (*)(uint64_t))type metadata accessor for SDAirDropFlags, (uint64_t)&unk_1005CDDA0);
}

uint64_t sub_1002B4064()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*v0 < 0)
    __break(1u);
  return result;
}

void sub_1002B4074()
{
  _QWORD *v0;

  SDAirDropFlags.hash(into:)(*v0);
}

void sub_1002B409C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  SDAirDropFlags.hash(into:)(v1);
}

Swift::Int sub_1002B40C4()
{
  return Hasher._finalize()();
}

uint64_t sub_1002B40DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1002B4118(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NWEndpoint(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1002B414C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B4190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B41D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B4218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002B425C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B4268);
}

uint64_t sub_1002B4268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1002B42A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B42B0);
}

uint64_t sub_1002B42B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NWEndpoint(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007B8450, (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

uint64_t sub_1002B4304(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for NWEndpoint(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_1002B436C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v44);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NWEndpoint(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = (_QWORD *)((char *)v4 + v14);
    v18 = (_QWORD *)((char *)a2 + v14);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)v4 + v21);
    v26 = (_QWORD *)((char *)a2 + v21);
    v48 = v26[1];
    *v25 = *v26;
    v25[1] = v48;
    v27 = a3[10];
    v28 = a3[11];
    v29 = (_QWORD *)((char *)v4 + v27);
    v30 = (_QWORD *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (_QWORD *)((char *)v4 + v28);
    v33 = (_QWORD *)((char *)a2 + v28);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[12];
    v36 = a3[13];
    v37 = (_QWORD *)((char *)v4 + v35);
    v38 = (_QWORD *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *((_BYTE *)v4 + v36) = *((_BYTE *)a2 + v36);
    v40 = a3[14];
    v41 = (char *)v4 + v40;
    v42 = (_QWORD *)((char *)a2 + v40);
    v43 = *(_QWORD *)((char *)a2 + v40 + 8);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v39);
    if (v43 >> 60 == 15)
    {
      *(_OWORD *)v41 = *(_OWORD *)v42;
    }
    else
    {
      v45 = *v42;
      sub_10022E4A8(*v42, v43);
      *(_QWORD *)v41 = v45;
      *((_QWORD *)v41 + 1) = v43;
    }
    v46 = a3[16];
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)v4 + v46) = *((_BYTE *)a2 + v46);
  }
  return v4;
}

void sub_1002B4538(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[12] + 8));
  v6 = (uint64_t *)(a1 + a2[14]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_100225AB4(*v6, v7);
}

_QWORD *sub_1002B4618(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NWEndpoint(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (_QWORD *)((char *)a1 + v13);
  v17 = (_QWORD *)((char *)a2 + v13);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)((char *)a1 + v20);
  v25 = (_QWORD *)((char *)a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[10];
  v28 = a3[11];
  v29 = (_QWORD *)((char *)a1 + v27);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)((char *)a1 + v28);
  v33 = (_QWORD *)((char *)a2 + v28);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[12];
  v36 = a3[13];
  v37 = (_QWORD *)((char *)a1 + v35);
  v38 = (_QWORD *)((char *)a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  v40 = a3[14];
  v46 = (char *)a1 + v40;
  v41 = (_QWORD *)((char *)a2 + v40);
  v42 = *(_QWORD *)((char *)a2 + v40 + 8);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v39);
  if (v42 >> 60 == 15)
  {
    *(_OWORD *)v46 = *(_OWORD *)v41;
  }
  else
  {
    v43 = *v41;
    sub_10022E4A8(*v41, v42);
    *(_QWORD *)v46 = v43;
    *((_QWORD *)v46 + 1) = v42;
  }
  v44 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  return a1;
}

_QWORD *sub_1002B47C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  *v27 = *v28;
  v29 = v28[1];
  v30 = v27[1];
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v34 = v33[1];
  v35 = v32[1];
  v32[1] = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  v36 = a3[11];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  *v37 = *v38;
  v39 = v38[1];
  v40 = v37[1];
  v37[1] = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  v41 = a3[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  *v42 = *v43;
  v44 = v43[1];
  v45 = v42[1];
  v42[1] = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v46 = a3[14];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = *(_QWORD *)((char *)a2 + v46 + 8);
  if (*(_QWORD *)((char *)a1 + v46 + 8) >> 60 != 15)
  {
    if (v49 >> 60 != 15)
    {
      v51 = *v48;
      sub_10022E4A8(v51, v49);
      v52 = *v47;
      v53 = v47[1];
      *v47 = v51;
      v47[1] = v49;
      sub_100225AB4(v52, v53);
      goto LABEL_8;
    }
    sub_10023D5F8((uint64_t)v47);
    goto LABEL_6;
  }
  if (v49 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    goto LABEL_8;
  }
  v50 = *v48;
  sub_10022E4A8(v50, v49);
  *v47 = v50;
  v47[1] = v49;
LABEL_8:
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_1002B4A0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  v15 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  v17 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_QWORD *sub_1002B4AF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (_QWORD *)((char *)a1 + v13);
  v17 = (_QWORD *)((char *)a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  v20 = v16[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = v22[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease(v26);
  v27 = a3[9];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  v32 = v28[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease(v32);
  v33 = a3[10];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  v38 = v34[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease(v38);
  v39 = a3[11];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  v44 = v40[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease(v44);
  v45 = a3[12];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  v50 = v46[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease(v50);
  v51 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = *(_QWORD *)((char *)a1 + v51 + 8);
  if (v54 >> 60 != 15)
  {
    v55 = v53[1];
    if (v55 >> 60 != 15)
    {
      v56 = *v52;
      *v52 = *v53;
      v52[1] = v55;
      sub_100225AB4(v56, v54);
      goto LABEL_6;
    }
    sub_10023D5F8((uint64_t)v52);
  }
  *(_OWORD *)v52 = *(_OWORD *)v53;
LABEL_6:
  v57 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  return a1;
}

uint64_t sub_1002B4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B4CA4);
}

uint64_t sub_1002B4CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for NWEndpoint(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1002B4D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B4D2C);
}

uint64_t sub_1002B4D2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for NWEndpoint(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007B84E0, (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
}

uint64_t sub_1002B4DB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_1005D0E40;
  result = type metadata accessor for NWEndpoint(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1005D0E58;
    v4[3] = &unk_1005D0E70;
    v4[4] = &unk_1005D0E70;
    v4[5] = &unk_1005D0E70;
    v4[6] = &unk_1005D0E70;
    v4[7] = &unk_1005D0E70;
    v4[8] = &unk_1005D0E70;
    v4[9] = &unk_1005D0E88;
    v4[10] = &unk_1005D0EA0;
    v4[11] = &unk_1005D0E88;
    v4[12] = &unk_1005D0E88;
    swift_initStructMetadata(a1, 256, 13, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002B4E5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1002B4EBC + 4 * byte_1005D0DA8[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007B8648, (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
}

void sub_1002B518C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v7 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v8 = a1 + v7[5];
      v9 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[7] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[10] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[11] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v7[12] + 8));
      v10 = (uint64_t *)(a1 + v7[14]);
      v11 = v10[1];
      if (v11 >> 60 != 15)
        sub_100225AB4(*v10, v11);
      break;
    case 2u:
      sub_100225AB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v4 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v5 = a1 + v4[5];
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_unknownObjectRelease(*(_QWORD *)(a1 + v4[6]));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[7] + 8));
      break;
    case 3u:

      break;
    default:
      return;
  }
}

void sub_1002B5338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1002B538C + 4 * byte_1005D0DB0[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_1002B538C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_1002B5628(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_1002443C8(result, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v5 = (char *)&loc_1002B5694 + 4 * byte_1005D0DB4[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007B85B8, (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint);
}

_OWORD *sub_1002B597C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
    v14 = v13[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    v18 = v13[6];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
    *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
    *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
    *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
    *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
    *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
    *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
    *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
    *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
    *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_OWORD *sub_1002B5B88(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  if (a1 != a2)
  {
    sub_1002443C8((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v14 = v13[5];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = v13[6];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[8] = v20[8];
      *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
      *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
      *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
      *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
      *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
      *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
      *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
      *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
      *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
      *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002B5DAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  result = type metadata accessor for NWEndpoint(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 4, v6);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1002B5E54(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_10022E4A8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v15;
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    swift_unknownObjectRetain(v15);
    swift_bridgeObjectRetain(v18);
  }
  return a1;
}

double sub_1002B5F34(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  sub_100225AB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + a2[6]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_1002B5FA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_10022E4A8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v14;
  v15 = (uint64_t *)((char *)a1 + v13);
  v16 = (uint64_t *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  swift_unknownObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t *sub_1002B6058(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a2;
  v7 = a2[1];
  sub_10022E4A8(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100225AB4(v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[6];
  v15 = *(uint64_t *)((char *)a2 + v14);
  v16 = *(uint64_t *)((char *)a1 + v14);
  *(uint64_t *)((char *)a1 + v14) = v15;
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRelease(v16);
  v17 = a3[7];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_1002B6138(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t *sub_1002B61CC(uint64_t *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100225AB4(v6, v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_unknownObjectRelease(v13);
  v14 = a3[7];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = v15[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

uint64_t sub_1002B6288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B6294);
}

uint64_t sub_1002B6294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1002B6314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B6320);
}

uint64_t sub_1002B6320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1002B639C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1005D0EF8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1005D0F10;
    v4[3] = &unk_1005D0E70;
    v4[4] = &unk_1005D0E88;
    v4[5] = &unk_1005D0E88;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

void *sub_1002B6430()
{
  return &protocol witness table for String;
}

uint64_t sub_1002B643C()
{
  return sub_100220D78(&qword_1007B8690, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint, (uint64_t)&unk_1005D0F30);
}

uint64_t sub_1002B6468()
{
  return sub_100220D78(&qword_1007B8698, type metadata accessor for SDAirDropDiscoveredEndpoint, (uint64_t)&unk_1005D0FD0);
}

uint64_t sub_1002B6494()
{
  return sub_100220D78((unint64_t *)&unk_1007B86A0, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint, (uint64_t)&unk_1005D1098);
}

uint64_t sub_1002B64C0()
{
  return sub_100220D78(&qword_1007B6448, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_1002B64EC()
{
  return sub_100220D78(&qword_1007B86B0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, (uint64_t)&unk_1005D1138);
}

void sub_1002B6518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  _QWORD v15[4];

  v15[2] = a1;
  v15[3] = a2;
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v5 = __chkstk_darwin(v4);
  v15[1] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v2, (uint64_t)v12, v13);
  v14 = (char *)&loc_1002B669C + *((int *)qword_1002B6B28 + swift_getEnumCaseMultiPayload(v12, v10));
  __asm { BR              X10 }
}

uint64_t sub_1002B66AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t device_id;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t contact_id;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v4 = sub_100221DB4(v0, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v5 = NWEndpoint.nw.getter(v4);
  if (!v5)
  {
    __break(1u);
    JUMPOUT(0x1002B6B20);
  }
  v6 = v5;
  device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v6);
  v9 = *(_QWORD *)(v3 - 96);
  v8 = *(_QWORD *)(v3 - 88);
  if (device_id)
  {
    v10 = String.init(cString:)(device_id);
    if (v10 == v9 && v11 == v8)
    {
      swift_bridgeObjectRelease(v8);
      sub_100244384(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_16:
      sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      v22 = 1;
      return v22 & 1;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v9, v8, 0);
    swift_bridgeObjectRelease(v13);
    v15 = sub_100244384(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if ((v14 & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    v15 = sub_100244384(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }
  v16 = NWEndpoint.nw.getter(v15);
  if (!v16)
  {
    __break(1u);
    JUMPOUT(0x1002B6B28);
  }
  v17 = v16;
  contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v17);
  if (contact_id)
  {
    v19 = String.init(cString:)(contact_id);
    v21 = v20;
    if (v19 == v9 && v20 == v8)
      v22 = 1;
    else
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v9, v8, 0);
    sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    swift_bridgeObjectRetain(v8);
    sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v8);
    v22 = 0;
  }
  return v22 & 1;
}

void sub_1002B6B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v4, v5);
  v6 = (char *)&loc_1002B6BF8 + dword_1002B6D2C[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1002B6C08()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v2 = objc_msgSend(v0, "idSelfIdentity");
  if (!v2)
    return sub_10038E61C();
  v3 = v2;
  v4 = objc_msgSend(v2, "idsDeviceID");

  if (!v4)
    return sub_10038E61C();
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

void sub_1002B6D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100244384(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_1002B6E34 + 4 * byte_1005D0DB8[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1002B6E34()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_100221DB4(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v2 = sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL);
  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v2 & 8) != 0)
    return 3;
  else
    return 1;
}

void sub_1002B6F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1002B6F84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1002B7168);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

_QWORD *sub_1002B718C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100008384(&qword_1007B52C0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_1002B71F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

unsigned __int8 *sub_1002B7268(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B7398(a1, a2, a3);
}

unsigned __int8 *sub_1002B727C(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1002B7614(a1, a2, a3);
}

uint64_t sub_1002B7290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B729C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1002B7398);
}

uint64_t sub_1002B729C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v17 = a2;
  swift_bridgeObjectRetain(a2);
  v6 = String.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v8 = v6;
  v9 = v7;
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v11 = HIBYTE(v9) & 0xF;
    v16 = v8;
    v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    v10 = &v16;
    goto LABEL_7;
  }
  v8 = sub_1002B7890(v6, v7);
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  v9 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v8 & 0x1000000000000000) != 0)
  {
    v10 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v10 = (uint64_t *)_StringObject.sharedUTF8.getter(v8, v9);
  }
LABEL_7:
  v14 = a4(v10, v11, a3);
  swift_bridgeObjectRelease(v9);
  return v14;
}

uint64_t sub_1002B738C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002B729C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1002B7614);
}

unsigned __int8 *sub_1002B7398(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1002B7614(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1002B7890(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_1002B790C(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_1002B790C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1002B7A50(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_1002B718C(v12, 0);
      v5 = sub_1002B7B3C((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_1002B7A50(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1002B71F0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1002B71F0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_1002B7B3C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1002B71F0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)(result, a6);
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1002B71F0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1002B7D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1002B6F24((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1002B7E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1002B6F24(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1002B7ED4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1002B7F20()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1002B7F54 + dword_1002B812C[v0 >> 62]))();
}

uint64_t sub_1002B7F64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1002B814C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t contact_id;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t device_id;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t device_model;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v5 = __chkstk_darwin(v4);
  v108 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v106 = (char *)&v105 - v8;
  v9 = __chkstk_darwin(v7);
  v111 = (char *)&v105 - v10;
  v11 = __chkstk_darwin(v9);
  v109 = (char *)&v105 - v12;
  v13 = __chkstk_darwin(v11);
  v110 = (char *)&v105 - v14;
  v15 = __chkstk_darwin(v13);
  v112 = (uint64_t)&v105 - v16;
  v17 = __chkstk_darwin(v15);
  v114 = (uint64_t)&v105 - v18;
  v19 = __chkstk_darwin(v17);
  v113 = (uint64_t)&v105 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v105 - v22;
  v24 = __chkstk_darwin(v21);
  v107 = (uint64_t)&v105 - v25;
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v105 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v105 - v29;
  v31 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v37 = (char *)&v105 - v36;
  sub_1002B107C();
  sub_1002B107C();
  v38 = static UUID.== infix(_:_:)(v37, v35);
  v39 = *(void (**)(char *, uint64_t))(v32 + 8);
  v40 = v35;
  v41 = a2;
  v39(v40, v31);
  v39(v37, v31);
  v42 = a1;
  sub_100244384(a1, (uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v43 = sub_100244384(a2, (uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v38 & 1) == 0)
  {
    sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v52 = (uint64_t)v108;
LABEL_16:
    v60 = (uint64_t)v111;
    v59 = v112;
    v61 = (uint64_t)v110;
    v58 = v107;
LABEL_17:
    sub_100244384(v42, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v62 = v113;
    goto LABEL_18;
  }
  result = NWEndpoint.nw.getter(v43);
  if (!result)
  {
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v45 = result;
  v46 = a2;
  contact_id = nw_endpoint_get_contact_id();
  v48 = swift_unknownObjectRelease(v45);
  if (contact_id)
  {
    v48 = String.init(cString:)(contact_id);
    v49 = v48;
    v51 = v50;
  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  result = NWEndpoint.nw.getter(v48);
  if (!result)
    goto LABEL_86;
  v53 = result;
  v54 = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v53);
  if (!v54)
  {
    if (v51)
      goto LABEL_15;
    v57 = 0;
LABEL_28:
    v52 = (uint64_t)v108;
    v41 = v46;
    sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v42 = a1;
    v58 = v107;
    if (!v57)
      goto LABEL_30;
    swift_bridgeObjectRelease(v57);
    v60 = (uint64_t)v111;
    v59 = v112;
    v61 = (uint64_t)v110;
    goto LABEL_17;
  }
  v55 = String.init(cString:)(v54);
  v57 = v56;
  if (!v51)
    goto LABEL_28;
  if (!v56)
  {
LABEL_15:
    swift_bridgeObjectRetain(v51);
    sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n(v51, 2);
    v52 = (uint64_t)v108;
    v41 = v46;
    v42 = a1;
    goto LABEL_16;
  }
  if (v49 == v55 && v51 == v56)
  {
    swift_bridgeObjectRelease(v56);
    sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v51);
    v58 = v107;
    v52 = (uint64_t)v108;
    v41 = v46;
    v42 = a1;
LABEL_30:
    sub_100244384(v42, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v59 = v112;
    goto LABEL_31;
  }
  v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v51, v55, v56, 0);
  swift_bridgeObjectRelease(v57);
  sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1002443C8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease(v51);
  v58 = v107;
  sub_100244384(a1, v107, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v41 = v46;
  v42 = a1;
  sub_100244384(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v52 = (uint64_t)v108;
  v60 = (uint64_t)v111;
  v59 = v112;
  v61 = (uint64_t)v110;
  v62 = v113;
  if ((v73 & 1) == 0)
  {
LABEL_18:
    sub_1002443C8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v63 = (uint64_t)v109;
LABEL_19:
    sub_100244384(v42, v62, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v64 = v114;
    sub_100244384(v41, v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_20;
  }
LABEL_31:
  v67 = sub_1002B14CC();
  v69 = v68;
  v70 = sub_1002B14CC();
  v72 = v71;
  if (!v69)
  {
    sub_1002443C8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (!v72)
      goto LABEL_40;
    swift_bridgeObjectRelease(v72);
    goto LABEL_42;
  }
  if (!v71)
  {
    swift_bridgeObjectRetain(v69);
    sub_1002443C8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n(v69, 2);
LABEL_42:
    v63 = (uint64_t)v109;
    v61 = (uint64_t)v110;
    v60 = (uint64_t)v111;
    v62 = v113;
    goto LABEL_19;
  }
  if (v67 == v70 && v69 == v71)
  {
    swift_bridgeObjectRelease(v71);
    sub_1002443C8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v69);
LABEL_40:
    sub_100244384(v42, v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v74 = sub_100244384(v41, v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v61 = (uint64_t)v110;
    v60 = (uint64_t)v111;
    goto LABEL_44;
  }
  v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v69, v70, v71, 0);
  swift_bridgeObjectRelease(v72);
  sub_1002443C8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease(v69);
  v76 = v113;
  sub_100244384(v42, v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v64 = v114;
  v62 = v76;
  v74 = sub_100244384(v41, v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v63 = (uint64_t)v109;
  v61 = (uint64_t)v110;
  v60 = (uint64_t)v111;
  if ((v75 & 1) == 0)
  {
LABEL_20:
    sub_1002443C8(v64, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v62, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_21:
    sub_100244384(v42, v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v41, v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_22;
  }
LABEL_44:
  result = NWEndpoint.nw.getter(v74);
  if (!result)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v77 = result;
  device_id = nw_endpoint_get_device_id();
  v79 = swift_unknownObjectRelease(v77);
  if (device_id)
  {
    v79 = String.init(cString:)(device_id);
    v80 = v79;
    v82 = v81;
  }
  else
  {
    v80 = 0;
    v82 = 0;
  }
  result = NWEndpoint.nw.getter(v79);
  if (!result)
    goto LABEL_88;
  v83 = result;
  v84 = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v83);
  if (!v84)
  {
    if (v82)
      goto LABEL_56;
    v87 = 0;
LABEL_58:
    v63 = (uint64_t)v109;
    sub_1002443C8(v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v59 = v112;
    if (!v87)
      goto LABEL_60;
    swift_bridgeObjectRelease(v87);
    goto LABEL_21;
  }
  v85 = String.init(cString:)(v84);
  v87 = v86;
  if (!v82)
    goto LABEL_58;
  if (!v86)
  {
LABEL_56:
    swift_bridgeObjectRetain(v82);
    sub_1002443C8(v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n(v82, 2);
    v63 = (uint64_t)v109;
    v59 = v112;
    goto LABEL_21;
  }
  if (v80 == v85 && v82 == v86)
  {
    swift_bridgeObjectRelease(v86);
    sub_1002443C8(v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v82);
    v59 = v112;
LABEL_60:
    sub_100244384(v42, v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v88 = sub_100244384(v41, v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_61;
  }
  v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, v85, v86, 0);
  swift_bridgeObjectRelease(v87);
  sub_1002443C8(v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1002443C8(v113, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease(v82);
  v59 = v112;
  sub_100244384(v42, v112, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v88 = sub_100244384(v41, v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v63 = (uint64_t)v109;
  if ((v95 & 1) == 0)
  {
LABEL_22:
    sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_23:
    v65 = (uint64_t)v106;
    sub_100244384(v42, v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v41, v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_24;
  }
LABEL_61:
  result = NWEndpoint.nw.getter(v88);
  if (!result)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v89 = result;
  device_model = nw_endpoint_get_device_model();
  v91 = swift_unknownObjectRelease(v89);
  if (device_model)
  {
    v91 = String.init(cString:)(device_model);
    v92 = v91;
    v94 = v93;
  }
  else
  {
    v92 = 0;
    v94 = 0;
  }
  result = NWEndpoint.nw.getter(v91);
  if (result)
  {
    v96 = result;
    v97 = nw_endpoint_get_device_model();
    swift_unknownObjectRelease(v96);
    if (v97)
    {
      v98 = String.init(cString:)(v97);
      v100 = v99;
      if (v94)
      {
        v63 = (uint64_t)v109;
        if (v99)
        {
          if (v92 == v98 && v94 == v99)
          {
            swift_bridgeObjectRelease(v99);
            sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_1002443C8(v112, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            swift_bridgeObjectRelease(v94);
LABEL_80:
            sub_100244384(v42, v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_100244384(v41, v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            v65 = (uint64_t)v106;
            goto LABEL_81;
          }
          v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v94, v98, v99, 0);
          swift_bridgeObjectRelease(v100);
          sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_1002443C8(v112, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          swift_bridgeObjectRelease(v94);
          sub_100244384(v42, v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_100244384(v41, v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          v65 = (uint64_t)v106;
          if ((v104 & 1) != 0)
          {
LABEL_81:
            v101 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
            v102 = sub_1002B1734(0x6C46737574617453, 0xEB00000000736761);
            sub_1002443C8(v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_1002443C8(v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_100244384(v42, v65, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_100244384(v41, v52, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if (v101 == v102)
            {
              v103 = sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL);
              v66 = v103 == sub_1002B1734(0x4665727574616546, 0xEC0000007367616CLL);
              goto LABEL_26;
            }
LABEL_25:
            v66 = 0;
LABEL_26:
            sub_1002443C8(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_1002443C8(v65, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            return v66;
          }
LABEL_24:
          sub_1002443C8(v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_1002443C8(v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_100244384(v42, v65, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_100244384(v41, v52, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          goto LABEL_25;
        }
        goto LABEL_75;
      }
      v63 = (uint64_t)v109;
    }
    else
    {
      v63 = (uint64_t)v109;
      if (v94)
      {
LABEL_75:
        swift_bridgeObjectRetain(v94);
        sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_1002443C8(v112, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        swift_bridgeObjectRelease_n(v94, 2);
        goto LABEL_23;
      }
      v100 = 0;
    }
    sub_1002443C8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v112, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (!v100)
      goto LABEL_80;
    swift_bridgeObjectRelease(v100);
    goto LABEL_23;
  }
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_1002B8DD8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  char v63;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  int *v107;
  int v108;
  int v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  _BYTE v117[4];
  int v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  _BYTE *v127;
  _BYTE *v128;
  int *v129;

  v129 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v4 = __chkstk_darwin(v129);
  v120 = &v117[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v4);
  v123 = &v117[-v7];
  v8 = __chkstk_darwin(v6);
  v122 = &v117[-v9];
  v10 = __chkstk_darwin(v8);
  v121 = &v117[-v11];
  v12 = __chkstk_darwin(v10);
  v128 = &v117[-v13];
  v14 = __chkstk_darwin(v12);
  v124 = &v117[-v15];
  v16 = __chkstk_darwin(v14);
  v125 = &v117[-v17];
  v18 = __chkstk_darwin(v16);
  v126 = &v117[-v19];
  v20 = __chkstk_darwin(v18);
  v127 = &v117[-v21];
  v22 = __chkstk_darwin(v20);
  v119 = &v117[-v23];
  v24 = __chkstk_darwin(v22);
  v26 = &v117[-v25];
  v27 = __chkstk_darwin(v24);
  v29 = &v117[-v28];
  v30 = __chkstk_darwin(v27);
  v32 = &v117[-v31];
  v33 = __chkstk_darwin(v30);
  v35 = &v117[-v34];
  v36 = __chkstk_darwin(v33);
  v38 = &v117[-v37];
  v39 = __chkstk_darwin(v36);
  v41 = &v117[-v40];
  __chkstk_darwin(v39);
  v43 = &v117[-v42];
  v44 = a1[1];
  v45 = a2[1];
  if (*a1 == *a2 && v44 == v45)
  {
    sub_100244384((uint64_t)a1, (uint64_t)&v117[-v42], type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v44, *a2, v45, 0);
    sub_100244384((uint64_t)a1, (uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if ((v46 & 1) == 0)
    {
      sub_1002443C8((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100244384((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100244384((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1002443C8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1002443C8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_16:
      v53 = (uint64_t)v124;
      sub_100244384((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100244384((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      v54 = v128;
      goto LABEL_17;
    }
  }
  sub_1002443C8((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_100244384((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_100244384((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v47 = v129[7];
  v48 = &v41[v47];
  v49 = *(_QWORD *)&v41[v47 + 8];
  v50 = &v38[v47];
  v51 = v50[1];
  if (!v49)
  {
    swift_bridgeObjectRetain(v50[1]);
    sub_1002443C8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v51)
      goto LABEL_12;
    v52 = v51;
    goto LABEL_15;
  }
  if (!v51)
  {
    swift_bridgeObjectRetain(v49);
    sub_1002443C8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v52 = v49;
LABEL_15:
    swift_bridgeObjectRelease(v52);
    goto LABEL_16;
  }
  if (*v48 == *v50 && v49 == v51)
  {
    swift_bridgeObjectRetain(v49);
    sub_1002443C8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v49);
LABEL_12:
    sub_100244384((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v53 = (uint64_t)v124;
    v54 = v128;
    goto LABEL_32;
  }
  v118 = _stringCompareWithSmolCheck(_:_:expecting:)(*v48, v49, *v50, v50[1], 0);
  swift_bridgeObjectRetain(v49);
  sub_1002443C8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v49);
  sub_100244384((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_100244384((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v53 = (uint64_t)v124;
  v54 = v128;
  if ((v118 & 1) == 0)
  {
LABEL_17:
    sub_1002443C8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_18:
    v55 = (uint64_t)v119;
    v56 = (uint64_t)v120;
    sub_100244384((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_19;
  }
LABEL_32:
  v65 = v129[8];
  v66 = &v35[v65];
  v67 = *(_QWORD *)&v35[v65 + 8];
  v68 = &v32[v65];
  v69 = v68[1];
  if (!v67)
  {
    swift_bridgeObjectRetain(v68[1]);
    sub_1002443C8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v69)
      goto LABEL_39;
    v70 = v69;
    goto LABEL_41;
  }
  if (!v69)
  {
    swift_bridgeObjectRetain(v67);
    sub_1002443C8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v70 = v67;
LABEL_41:
    swift_bridgeObjectRelease(v70);
    goto LABEL_18;
  }
  if (*v66 == *v68 && v67 == v69)
  {
    swift_bridgeObjectRetain(v67);
    sub_1002443C8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v67);
LABEL_39:
    sub_100244384((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v55 = (uint64_t)v119;
    v56 = (uint64_t)v120;
    goto LABEL_43;
  }
  v71 = _stringCompareWithSmolCheck(_:_:expecting:)(*v66, v67, *v68, v68[1], 0);
  swift_bridgeObjectRetain(v67);
  sub_1002443C8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v67);
  sub_100244384((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v54 = v128;
  sub_100244384((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v55 = (uint64_t)v119;
  v56 = (uint64_t)v120;
  if ((v71 & 1) == 0)
  {
LABEL_19:
    sub_1002443C8((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_20:
    v58 = (uint64_t)v121;
    v57 = (uint64_t)v122;
    sub_100244384((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v59 = v127;
    sub_100244384((uint64_t)a2, (uint64_t)v127, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_21;
  }
LABEL_43:
  v72 = v129[9];
  v73 = &v29[v72];
  v74 = *(_QWORD *)&v29[v72 + 8];
  v75 = &v26[v72];
  v76 = v75[1];
  if (!v74)
  {
    swift_bridgeObjectRetain(v75[1]);
    sub_1002443C8((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v76)
      goto LABEL_50;
    v77 = v76;
    goto LABEL_52;
  }
  if (!v76)
  {
    swift_bridgeObjectRetain(v74);
    sub_1002443C8((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v77 = v74;
LABEL_52:
    swift_bridgeObjectRelease(v77);
    goto LABEL_20;
  }
  if (*v73 == *v75 && v74 == v76)
  {
    swift_bridgeObjectRetain(v74);
    sub_1002443C8((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v74);
LABEL_50:
    sub_100244384((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v59 = v127;
    sub_100244384((uint64_t)a2, (uint64_t)v127, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v58 = (uint64_t)v121;
    v57 = (uint64_t)v122;
    goto LABEL_54;
  }
  LODWORD(v124) = _stringCompareWithSmolCheck(_:_:expecting:)(*v73, v74, *v75, v75[1], 0);
  swift_bridgeObjectRetain(v74);
  sub_1002443C8((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v74);
  sub_100244384((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v59 = v127;
  v54 = v128;
  sub_100244384((uint64_t)a2, (uint64_t)v127, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v58 = (uint64_t)v121;
  v57 = (uint64_t)v122;
  if ((v124 & 1) == 0)
  {
LABEL_21:
    sub_1002443C8((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_22:
    v60 = v126;
    sub_100244384((uint64_t)a1, (uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v61 = v125;
    sub_100244384((uint64_t)a2, (uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_23;
  }
LABEL_54:
  v78 = v129[10];
  v79 = (_QWORD *)(v55 + v78);
  v80 = *(_QWORD *)(v55 + v78 + 8);
  v81 = &v59[v78];
  v82 = v81[1];
  if (!v80)
  {
    swift_bridgeObjectRetain(v81[1]);
    sub_1002443C8((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v82)
      goto LABEL_61;
    v84 = v82;
    goto LABEL_63;
  }
  if (!v82)
  {
    v85 = (uint64_t)v59;
    v86 = v80;
    swift_bridgeObjectRetain(v80);
    sub_1002443C8(v85, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v84 = v86;
LABEL_63:
    swift_bridgeObjectRelease(v84);
    goto LABEL_22;
  }
  if (*v79 == *v81 && v80 == v82)
  {
    v83 = v80;
    swift_bridgeObjectRetain(v80);
    sub_1002443C8((uint64_t)v127, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v83);
LABEL_61:
    v60 = v126;
    sub_100244384((uint64_t)a1, (uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v61 = v125;
    sub_100244384((uint64_t)a2, (uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_65;
  }
  v87 = v80;
  v88 = _stringCompareWithSmolCheck(_:_:expecting:)(*v79, v80, *v81, v81[1], 0);
  swift_bridgeObjectRetain(v87);
  sub_1002443C8((uint64_t)v127, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v87);
  v60 = v126;
  sub_100244384((uint64_t)a1, (uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v61 = v125;
  v54 = v128;
  sub_100244384((uint64_t)a2, (uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v88 & 1) == 0)
  {
LABEL_23:
    sub_1002443C8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v60, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_24:
    sub_100244384((uint64_t)a1, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, (uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_25;
  }
LABEL_65:
  v89 = v129[11];
  v90 = &v60[v89];
  v91 = *(_QWORD *)&v60[v89 + 8];
  v92 = &v61[v89];
  v93 = v92[1];
  if (!v91)
  {
    swift_bridgeObjectRetain(v92[1]);
    sub_1002443C8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v60, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v93)
      goto LABEL_72;
    v95 = v93;
    goto LABEL_74;
  }
  if (!v93)
  {
    v96 = (uint64_t)v60;
    v97 = v91;
    swift_bridgeObjectRetain(v91);
    sub_1002443C8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v96, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v95 = v97;
LABEL_74:
    swift_bridgeObjectRelease(v95);
    goto LABEL_24;
  }
  if (*v90 == *v92 && v91 == v93)
  {
    v94 = v91;
    swift_bridgeObjectRetain(v91);
    sub_1002443C8((uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v94);
LABEL_72:
    sub_100244384((uint64_t)a1, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, (uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_76;
  }
  v98 = v91;
  v99 = _stringCompareWithSmolCheck(_:_:expecting:)(*v90, v91, *v92, v92[1], 0);
  swift_bridgeObjectRetain(v98);
  sub_1002443C8((uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8((uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v98);
  sub_100244384((uint64_t)a1, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v54 = v128;
  sub_100244384((uint64_t)a2, (uint64_t)v128, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v99 & 1) == 0)
  {
LABEL_25:
    sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_26:
    sub_100244384((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_27;
  }
LABEL_76:
  v100 = v129[12];
  v101 = (_QWORD *)(v53 + v100);
  v102 = *(_QWORD *)(v53 + v100 + 8);
  v103 = &v54[v100];
  v104 = v103[1];
  if (!v102)
  {
    swift_bridgeObjectRetain(v103[1]);
    sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v104)
      goto LABEL_83;
    v105 = v104;
    goto LABEL_85;
  }
  if (!v104)
  {
    swift_bridgeObjectRetain(v102);
    sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v105 = v102;
LABEL_85:
    swift_bridgeObjectRelease(v105);
    goto LABEL_26;
  }
  if (*v101 == *v103 && v102 == v104)
  {
    swift_bridgeObjectRetain(v102);
    sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v102);
LABEL_83:
    sub_100244384((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_87;
  }
  v106 = _stringCompareWithSmolCheck(_:_:expecting:)(*v101, v102, *v103, v103[1], 0);
  swift_bridgeObjectRetain(v102);
  sub_1002443C8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1002443C8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v102);
  sub_100244384((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_100244384((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v106 & 1) == 0)
  {
LABEL_27:
    sub_1002443C8(v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    v62 = v123;
    sub_100244384((uint64_t)a1, (uint64_t)v123, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100244384((uint64_t)a2, v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_28:
    sub_1002443C8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_29;
  }
LABEL_87:
  v107 = v129;
  v108 = *(unsigned __int8 *)(v58 + v129[13]);
  sub_1002443C8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v109 = *(unsigned __int8 *)(v57 + v107[13]);
  sub_1002443C8(v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v62 = v123;
  sub_100244384((uint64_t)a1, (uint64_t)v123, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_100244384((uint64_t)a2, v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if (v108 != v109)
    goto LABEL_28;
  v110 = v107[14];
  v112 = *(_QWORD *)&v62[v110];
  v111 = *(_QWORD *)&v62[v110 + 8];
  v113 = (uint64_t *)(v56 + v110);
  v114 = *v113;
  v115 = v113[1];
  if (v111 >> 60 == 15)
  {
    sub_100244404(v114, v115);
    sub_1002443C8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v115 >> 60 == 15)
    {
      sub_100225AA0(v112, v111);
      v63 = 1;
      return v63 & 1;
    }
  }
  else
  {
    if (v115 >> 60 != 15)
    {
      sub_100244404(v112, v111);
      sub_100244404(v114, v115);
      sub_100244404(v112, v111);
      sub_1002B7ED4(v112, v111);
      v63 = v116;
      sub_100225AA0(v114, v115);
      sub_100225AA0(v112, v111);
      sub_1002443C8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1002443C8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100225AA0(v112, v111);
      return v63 & 1;
    }
    sub_10022E4A8(v112, v111);
    sub_10022E4A8(v112, v111);
    sub_1002443C8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100225AA0(v112, v111);
  }
  sub_100225AA0(v112, v111);
  sub_100225AA0(v114, v115);
LABEL_29:
  v63 = 0;
  return v63 & 1;
}

uint64_t sub_1002B9DB8(uint64_t *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  char v32;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v4 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v5 = __chkstk_darwin(v4);
  v37 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v36 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v36 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v36 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v36 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v36 - v19;
  sub_1002B7ED4(*a1, a1[1]);
  v22 = v21;
  sub_100244384((uint64_t)a1, (uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_100244384(a2, (uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v22 & 1) == 0)
  {
    sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1002443C8((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_100244384((uint64_t)a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_100244384(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_12;
  }
  v23 = static UUID.== infix(_:_:)(&v20[v4[5]], &v18[v4[5]]);
  sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1002443C8((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_100244384((uint64_t)a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_100244384(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v23 & 1) == 0)
  {
LABEL_12:
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_13;
  }
  v24 = v4[7];
  v25 = &v15[v24];
  v26 = *(_QWORD *)&v15[v24 + 8];
  v27 = &v12[v24];
  v28 = *((_QWORD *)v27 + 1);
  if (!v26)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v27 + 1));
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (!v28)
    {
LABEL_20:
      sub_100244384((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      v31 = v37;
      sub_100244384(a2, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
LABEL_21:
      v34 = v9[v4[8]];
      sub_1002443C8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      v35 = *(_BYTE *)(v31 + v4[8]);
      sub_1002443C8(v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      v32 = v34 ^ v35 ^ 1;
      return v32 & 1;
    }
    swift_bridgeObjectRelease(v28);
LABEL_13:
    v31 = v37;
    sub_100244384((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_100244384(a2, v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_14;
  }
  if (!v28)
  {
    swift_bridgeObjectRetain(v26);
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease(v26);
    goto LABEL_13;
  }
  if (*(_QWORD *)v25 == *(_QWORD *)v27 && v26 == v28)
  {
    swift_bridgeObjectRetain(v26);
    sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease(v26);
    goto LABEL_20;
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v25, v26, *(_QWORD *)v27, *((_QWORD *)v27 + 1), 0);
  swift_bridgeObjectRetain(v26);
  sub_1002443C8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_bridgeObjectRelease(v26);
  sub_100244384((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  v31 = v37;
  sub_100244384(a2, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v30 & 1) != 0)
    goto LABEL_21;
LABEL_14:
  sub_1002443C8(v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1002443C8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  v32 = 0;
  return v32 & 1;
}

void sub_1002BA1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v7 = __chkstk_darwin(v6);
  v8 = __chkstk_darwin(v7);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = sub_100008384((uint64_t *)&unk_1007B86D0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100244384(v17, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100244384(v18, v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v15 = (char *)sub_1002BA384 + 4 * byte_1005D0DBC[swift_getEnumCaseMultiPayload(v13, v6)];
  __asm { BR              X10 }
}

uint64_t sub_1002BA384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_100244384(v0, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload(v4, v2))
  {
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10000D0F0(v0, (uint64_t *)&unk_1007B86D0);
    v5 = 0;
  }
  else
  {
    sub_100221DB4(v4, v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v5 = sub_1002B814C(v1, v3);
    sub_1002443C8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  return v5 & 1;
}

unint64_t sub_1002BA59C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B72B8;
  if (!qword_1007B72B8)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B72B8);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerMixedTypes()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary33SDAirDropContentHandlerMixedTypes);
}

uint64_t sub_1002BA5F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerMixedTypes();
  result = swift_allocObject(v2, 16, 7);
  *a1 = result;
  return result;
}

uint64_t sub_1002BA628()
{
  uint64_t v0;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return sub_1002BAA34(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_1002BA684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100324988(a1, a2, 0, a3);
}

uint64_t sub_1002BA6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_100323EA0(a1, 0, 1, a3);
  return sub_100223280((uint64_t)v8);
}

void sub_1002BA7B8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[56];

  v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease(v3);
  v6 = SFAirDropReceive.AskRequest.urlItems.getter(v5);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  v8 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
    __break(1u);
  }
  else
  {
    v9 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v9, v27);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x5F434952454E4547;
    v11 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xEC0000004D455449;
    *(_QWORD *)(inited + 48) = v8;
    swift_bridgeObjectRetain(0xEC0000004D455449);
    swift_bridgeObjectRetain(inited);
    v12._countAndFlagsBits = 95;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 0x5F434952454E4547;
    v13._object = (void *)0xEC0000004D455449;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(0xEC0000004D455449);
    if (v8 > 1)
    {
      v14._countAndFlagsBits = 0x4C4152554C505FLL;
      v14._object = (void *)0xE700000000000000;
      String.append(_:)(v14);
    }
    swift_bridgeObjectRelease(inited);
    if ((a2 & 1) != 0)
    {
      v15._countAndFlagsBits = 0x4C4154495041435FLL;
      v15._object = (void *)0xEC00000044455A49;
      String.append(_:)(v15);
    }
    v16._countAndFlagsBits = 0x545845545FLL;
    v16._object = (void *)0xE500000000000000;
    String.append(_:)(v16);
    swift_setDeallocating(inited);
    v17 = *(_QWORD *)(inited + 16);
    v18 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v11, v17, v18);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152);
    v21 = (id)SFLocalizedStringForKey(v19, v20);

    if (v21)
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v25 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v26 = swift_allocObject(v25, 72, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v26 + 56) = &type metadata for Int;
      *(_QWORD *)(v26 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v26 + 32) = v8;
      static String.localizedStringWithFormat(_:_:)(v22, v24, v26);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v26);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1002BAA34(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1002BAA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B87B8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B87B8);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002BAAD4(uint64_t a1, const char *a2)
{
  uint64_t v3;
  char *v4;
  const char *v5;
  NSString v6;
  uint64_t v7;
  id v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  NSString v12;
  uint64_t v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  NSString v18;
  uint64_t v19;
  id v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  NSString v24;
  uint64_t v25;
  id v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  NSString v30;
  uint64_t v31;
  id v32;
  const char *v33;
  const char *v34;
  NSString v35;
  uint64_t v36;
  id v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  NSString v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  const char *v45;
  void *v46;
  char v47;
  uint64_t v48;
  int v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t result;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  unint64_t v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  const char *v100;
  const char *v101;

  v96 = a1;
  v98 = type metadata accessor for SFNWInterfaceType(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v4 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (const char *)0x8000000100614500;
  v6 = String._bridgeToObjectiveC()();
  v8 = (id)SFLocalizedStringForKey(v6, v7);

  if (v8)
  {
    v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v5 = v9;

  }
  else
  {
    v94 = 0xD000000000000012;
  }
  v10 = 0xD000000000000016;
  v11 = (const char *)0x8000000100614520;
  v12 = String._bridgeToObjectiveC()();
  v14 = (id)SFLocalizedStringForKey(v12, v13);

  if (v14)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v11 = v15;

  }
  v16 = 0xD00000000000001ALL;
  v17 = (const char *)0x8000000100614540;
  v18 = String._bridgeToObjectiveC()();
  v20 = (id)SFLocalizedStringForKey(v18, v19);

  v95 = a2;
  v93 = v10;
  if (v20)
  {
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v17 = v21;

  }
  v22 = 0xD000000000000018;
  v23 = (const char *)0x8000000100614560;
  v24 = String._bridgeToObjectiveC()();
  v26 = (id)SFLocalizedStringForKey(v24, v25);

  v99 = v17;
  v100 = v11;
  if (v26)
  {
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v23 = v27;

  }
  v28 = 0xD000000000000013;
  v29 = (const char *)0x8000000100614580;
  v30 = String._bridgeToObjectiveC()();
  v32 = (id)SFLocalizedStringForKey(v30, v31);

  v101 = v5;
  if (v32)
  {
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v29 = v33;

  }
  v34 = (const char *)0x80000001006145A0;
  v35 = String._bridgeToObjectiveC()();
  v37 = (id)SFLocalizedStringForKey(v35, v36);

  v92 = v16;
  if (v37)
  {
    v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v34 = v38;

  }
  else
  {
    v91 = 0xD000000000000012;
  }
  v39 = 0xD000000000000013;
  v40 = (const char *)0x80000001006145C0;
  v41 = String._bridgeToObjectiveC()();
  v43 = (id)SFLocalizedStringForKey(v41, v42);

  if (v43)
  {
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v40 = v45;

  }
  type metadata accessor for SFAirDropUserDefaults(0, v44);
  v46 = (void *)static SFAirDropUserDefaults.shared.getter();
  v47 = SFAirDropUserDefaults.verboseWalkAway.getter();

  sub_100504234((uint64_t)v4);
  v48 = v98;
  v49 = (*(uint64_t (**)(char *, uint64_t))(v97 + 88))(v4, v98);
  if (v49 == enum case for SFNWInterfaceType.awdl(_:))
  {
    *(_QWORD *)&v50 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v34, v50).n128_u64[0];
    *(_QWORD *)&v52 = swift_bridgeObjectRelease(v29, v51).n128_u64[0];
    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v23, v52).n128_u64[0];
    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v99, v53).n128_u64[0];
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v100, v54).n128_u64[0];
    if ((v47 & 1) != 0)
      return v94;
    v62 = swift_bridgeObjectRelease(v101, v55, v91).n128_u64[0];
    goto LABEL_23;
  }
  if (v49 == enum case for SFNWInterfaceType.cellular(_:))
  {
    *(_QWORD *)&v57 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v58 = swift_bridgeObjectRelease(v34, v57).n128_u64[0];
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v29, v58).n128_u64[0];
    *(_QWORD *)&v60 = swift_bridgeObjectRelease(v23, v59).n128_u64[0];
    *(_QWORD *)&v61 = swift_bridgeObjectRelease(v99, v60).n128_u64[0];
    swift_bridgeObjectRelease(v101, v61);
    return v93;
  }
  if (v49 == enum case for SFNWInterfaceType.directWired(_:))
  {
    *(_QWORD *)&v63 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v64 = swift_bridgeObjectRelease(v34, v63).n128_u64[0];
    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v29, v64).n128_u64[0];
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v23, v65).n128_u64[0];
    *(_QWORD *)&v67 = swift_bridgeObjectRelease(v100, v66).n128_u64[0];
    swift_bridgeObjectRelease(v101, v67, v91);
    return v92;
  }
  if (v49 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    *(_QWORD *)&v68 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v34, v68).n128_u64[0];
    *(_QWORD *)&v70 = swift_bridgeObjectRelease(v29, v69).n128_u64[0];
    *(_QWORD *)&v71 = swift_bridgeObjectRelease(v99, v70).n128_u64[0];
    *(_QWORD *)&v72 = swift_bridgeObjectRelease(v100, v71).n128_u64[0];
    *(_QWORD *)&v73 = swift_bridgeObjectRelease(v101, v72).n128_u64[0];
    if ((v47 & 1) != 0)
      return v22;
    v62 = swift_bridgeObjectRelease(v23, v73, v91).n128_u64[0];
    goto LABEL_23;
  }
  if (v49 == enum case for SFNWInterfaceType.other(_:))
  {
    *(_QWORD *)&v74 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v75 = swift_bridgeObjectRelease(v34, v74).n128_u64[0];
    *(_QWORD *)&v76 = swift_bridgeObjectRelease(v23, v75).n128_u64[0];
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v99, v76).n128_u64[0];
    *(_QWORD *)&v78 = swift_bridgeObjectRelease(v100, v77).n128_u64[0];
    *(_QWORD *)&v79 = swift_bridgeObjectRelease(v101, v78).n128_u64[0];
    if ((v47 & 1) != 0)
      return v28;
    v62 = swift_bridgeObjectRelease(v29, v79, v91).n128_u64[0];
    goto LABEL_23;
  }
  if (v49 == enum case for SFNWInterfaceType.wifi(_:))
  {
    *(_QWORD *)&v80 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(_QWORD *)&v81 = swift_bridgeObjectRelease(v29, v80).n128_u64[0];
    *(_QWORD *)&v82 = swift_bridgeObjectRelease(v23, v81).n128_u64[0];
    *(_QWORD *)&v83 = swift_bridgeObjectRelease(v99, v82).n128_u64[0];
    *(_QWORD *)&v84 = swift_bridgeObjectRelease(v100, v83).n128_u64[0];
    *(_QWORD *)&v85 = swift_bridgeObjectRelease(v101, v84).n128_u64[0];
    if ((v47 & 1) != 0)
      return v91;
    v62 = swift_bridgeObjectRelease(v34, v85, v91).n128_u64[0];
LABEL_23:
    swift_bridgeObjectRetain(v95, *(double *)&v62);
    return v96;
  }
  if (v49 != enum case for SFNWInterfaceType.wired(_:))
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v48, v48);
    __break(1u);
    return result;
  }
  *(_QWORD *)&v86 = swift_bridgeObjectRelease(v34).n128_u64[0];
  *(_QWORD *)&v87 = swift_bridgeObjectRelease(v29, v86).n128_u64[0];
  *(_QWORD *)&v88 = swift_bridgeObjectRelease(v23, v87).n128_u64[0];
  *(_QWORD *)&v89 = swift_bridgeObjectRelease(v100, v88).n128_u64[0];
  *(_QWORD *)&v90 = swift_bridgeObjectRelease(v101, v89).n128_u64[0];
  if ((v47 & 1) != 0)
  {
    swift_bridgeObjectRelease(v99, v90);
    return v39;
  }
  swift_bridgeObjectRelease(v40, v90, v91);
  return v92;
}

uint64_t sub_1002BB098()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  NSString v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  const char *v7;
  const char *v8;
  NSString v9;
  uint64_t v10;
  id v11;
  const char *v12;
  NSString v13;
  uint64_t v14;
  id v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  NSString v19;
  uint64_t v20;
  id v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  NSString v25;
  uint64_t v26;
  id v27;
  const char *v28;
  const char *v29;
  NSString v30;
  uint64_t v31;
  id v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  NSString v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  const char *v40;
  void *v41;
  char v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  const char *v60;
  const char *v61;
  char v62;
  uint8_t *v63;
  uint8_t *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t result;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  const char *v111;

  v0 = type metadata accessor for SFNWInterfaceType(0);
  v108 = *(_QWORD *)(v0 - 8);
  v109 = v0;
  __chkstk_darwin(v0);
  v107 = (uint64_t)&v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (const char *)0x8000000100614500;
  v3 = String._bridgeToObjectiveC()();
  v5 = (id)SFLocalizedStringForKey(v3, v4);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v2 = v7;

  }
  else
  {
    v6 = 0xD000000000000012;
  }
  v8 = (const char *)0x8000000100614520;
  v9 = String._bridgeToObjectiveC()();
  v11 = (id)SFLocalizedStringForKey(v9, v10);

  v104 = v6;
  if (v11)
  {
    v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v8 = v12;

  }
  else
  {
    v103 = 0xD000000000000016;
  }
  v13 = String._bridgeToObjectiveC()();
  v15 = (id)SFLocalizedStringForKey(v13, v14);

  v111 = v8;
  if (v15)
  {
    v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v110 = v16;

  }
  else
  {
    v102 = 0xD00000000000001ALL;
    v110 = (const char *)0x8000000100614540;
  }
  v17 = 0xD000000000000018;
  v18 = (const char *)0x8000000100614560;
  v19 = String._bridgeToObjectiveC()();
  v21 = (id)SFLocalizedStringForKey(v19, v20);

  if (v21)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v18 = v22;

  }
  v23 = 0xD000000000000013;
  v24 = (const char *)0x8000000100614580;
  v25 = String._bridgeToObjectiveC()();
  v27 = (id)SFLocalizedStringForKey(v25, v26);

  if (v27)
  {
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v24 = v28;

  }
  v29 = (const char *)0x80000001006145A0;
  v30 = String._bridgeToObjectiveC()();
  v32 = (id)SFLocalizedStringForKey(v30, v31);

  if (v32)
  {
    v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v29 = v33;

  }
  else
  {
    v101 = 0xD000000000000012;
  }
  v34 = 0xD000000000000013;
  v35 = (const char *)0x80000001006145C0;
  v36 = String._bridgeToObjectiveC()();
  v38 = (id)SFLocalizedStringForKey(v36, v37);

  if (v38)
  {
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v35 = v40;

  }
  type metadata accessor for SFAirDropUserDefaults(0, v39);
  v41 = (void *)static SFAirDropUserDefaults.shared.getter();
  v42 = SFAirDropUserDefaults.verboseWalkAway.getter();

  v43 = *(_QWORD *)(v106 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
  v105 = v23;
  if (!v43)
  {
    if (qword_1007B3D80 != -1)
      swift_once(&qword_1007B3D80, sub_100299F58);
    v56 = type metadata accessor for Logger(0);
    v57 = sub_100221DF8(v56, (uint64_t)qword_1007B7C20);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.error.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      v60 = v2;
      v61 = v18;
      v62 = v42;
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "UPLOAD connection is not active", v63, 2u);
      v64 = v63;
      v42 = v62;
      v18 = v61;
      v2 = v60;
      swift_slowDealloc(v64, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v108 + 104))(v107, enum case for SFNWInterfaceType.other(_:), v109);
    goto LABEL_28;
  }
  v44 = v2;
  v45 = v18;
  v46 = v42;
  swift_retain(v43);
  v47 = v107;
  sub_1004FA6E0(v107);
  swift_release(v43);
  v48 = v109;
  v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 88))(v47, v109);
  if (v49 == enum case for SFNWInterfaceType.awdl(_:))
  {
    *(_QWORD *)&v50 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v29, v50).n128_u64[0];
    *(_QWORD *)&v52 = swift_bridgeObjectRelease(v24, v51).n128_u64[0];
    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v45, v52).n128_u64[0];
    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v110, v53).n128_u64[0];
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v111, v54).n128_u64[0];
    if ((v46 & 1) != 0)
      return v104;
    swift_bridgeObjectRelease(v44, v55);
    return 0;
  }
  if (v49 == enum case for SFNWInterfaceType.cellular(_:))
  {
    *(_QWORD *)&v71 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v72 = swift_bridgeObjectRelease(v29, v71).n128_u64[0];
    *(_QWORD *)&v73 = swift_bridgeObjectRelease(v24, v72).n128_u64[0];
    *(_QWORD *)&v74 = swift_bridgeObjectRelease(v45, v73).n128_u64[0];
    *(_QWORD *)&v75 = swift_bridgeObjectRelease(v110, v74).n128_u64[0];
    swift_bridgeObjectRelease(v44, v75);
    return v103;
  }
  v42 = v46;
  v18 = v45;
  if (v49 == enum case for SFNWInterfaceType.directWired(_:))
  {
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v78 = swift_bridgeObjectRelease(v29, v77).n128_u64[0];
    *(_QWORD *)&v79 = swift_bridgeObjectRelease(v24, v78).n128_u64[0];
    *(_QWORD *)&v80 = swift_bridgeObjectRelease(v45, v79).n128_u64[0];
    *(_QWORD *)&v81 = swift_bridgeObjectRelease(v111, v80).n128_u64[0];
    swift_bridgeObjectRelease(v44, v81);
    return v102;
  }
  v2 = v44;
  if (v49 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    *(_QWORD *)&v82 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v83 = swift_bridgeObjectRelease(v29, v82).n128_u64[0];
    *(_QWORD *)&v84 = swift_bridgeObjectRelease(v24, v83).n128_u64[0];
    *(_QWORD *)&v85 = swift_bridgeObjectRelease(v110, v84).n128_u64[0];
    *(_QWORD *)&v86 = swift_bridgeObjectRelease(v111, v85).n128_u64[0];
    *(_QWORD *)&v87 = swift_bridgeObjectRelease(v44, v86).n128_u64[0];
    if ((v42 & 1) != 0)
      return v17;
    swift_bridgeObjectRelease(v18, v87);
    return 0;
  }
  if (v49 == enum case for SFNWInterfaceType.other(_:))
  {
LABEL_28:
    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v111).n128_u64[0];
    *(_QWORD *)&v66 = swift_bridgeObjectRelease(v2, v65).n128_u64[0];
    *(_QWORD *)&v67 = swift_bridgeObjectRelease(v35, v66).n128_u64[0];
    *(_QWORD *)&v68 = swift_bridgeObjectRelease(v29, v67).n128_u64[0];
    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v18, v68).n128_u64[0];
    *(_QWORD *)&v70 = swift_bridgeObjectRelease(v110, v69).n128_u64[0];
    if ((v42 & 1) != 0)
      return v105;
    swift_bridgeObjectRelease(v24, v70);
    return 0;
  }
  if (v49 == enum case for SFNWInterfaceType.wifi(_:))
  {
    *(_QWORD *)&v88 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_QWORD *)&v89 = swift_bridgeObjectRelease(v24, v88).n128_u64[0];
    *(_QWORD *)&v90 = swift_bridgeObjectRelease(v18, v89).n128_u64[0];
    *(_QWORD *)&v91 = swift_bridgeObjectRelease(v110, v90).n128_u64[0];
    *(_QWORD *)&v92 = swift_bridgeObjectRelease(v111, v91).n128_u64[0];
    *(_QWORD *)&v93 = swift_bridgeObjectRelease(v44, v92).n128_u64[0];
    if ((v42 & 1) != 0)
      return v101;
    swift_bridgeObjectRelease(v29, v93);
    return 0;
  }
  if (v49 == enum case for SFNWInterfaceType.wired(_:))
  {
    *(_QWORD *)&v94 = swift_bridgeObjectRelease(v29).n128_u64[0];
    *(_QWORD *)&v95 = swift_bridgeObjectRelease(v24, v94).n128_u64[0];
    *(_QWORD *)&v96 = swift_bridgeObjectRelease(v18, v95).n128_u64[0];
    *(_QWORD *)&v97 = swift_bridgeObjectRelease(v111, v96).n128_u64[0];
    *(_QWORD *)&v98 = swift_bridgeObjectRelease(v44, v97).n128_u64[0];
    if ((v42 & 1) != 0)
      v99 = v110;
    else
      v99 = v35;
    if ((v42 & 1) != 0)
      v17 = v34;
    else
      v17 = v102;
    swift_bridgeObjectRelease(v99, v98);
    return v17;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v48, v48);
  __break(1u);
  return result;
}

uint64_t sub_1002BB76C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1[7] = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SFAirDropSend.Failure(0);
  v1[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v1[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[13] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v7);
  v1[15] = swift_task_alloc(v7);
  v8 = type metadata accessor for SFAirDropSend.Transfer(0);
  v1[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[18] = swift_task_alloc(v10);
  v1[19] = swift_task_alloc(v10);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_1002BB894, v11, 0);
}

uint64_t sub_1002BB894()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  void *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  const char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *buf;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v80;

  v1 = (id *)(v0 + 56);
  v2 = v0 + 48;
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v10 = swift_beginAccess(v9, v0 + 16, 0, 0);
  v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v11 = v79(v3, v9, v4, v10);
  SFAirDropSend.Transfer.state.getter(v11);
  v78 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v78(v3, v4);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v6, v7);
  if (v12 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
  {
    v13 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 96))(v13, *(_QWORD *)(v0 + 96));
    v17 = sub_100008384(&qword_1007B8858);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v13 + *(int *)(v17 + 48), v16);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v14, v16);
    v19 = *(_QWORD *)(v0 + 120);
    if (v18 != enum case for SFAirDropSend.Failure.resolveFailure(_:)
      && v18 != enum case for SFAirDropSend.Failure.receiverDeclined(_:)
      && v18 != enum case for SFAirDropSend.Failure.cancelled(_:)
      && v18 != enum case for SFAirDropSend.Failure.insufficientStorage(_:))
    {
      v20 = *(_QWORD *)(v0 + 64);
      v21 = *(void **)(v0 + 56);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
      v22 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v19, v22);
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
      v24 = static AirDropActor.shared;
      v25 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
      v26 = (_QWORD *)swift_allocObject(&unk_100720770, 40, 7);
      v26[2] = v24;
      v26[3] = v25;
      v26[4] = v21;
      v27 = v21;
      swift_retain(v24);
      *(_QWORD *)(v0 + 168) = sub_100252EC0(v20, (uint64_t)&unk_1007B8868, (uint64_t)v26);
      v28 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
      *(_QWORD *)(v0 + 176) = v28;
      *v28 = v0;
      v28[1] = sub_1002BBF90;
      return Task<>.value.getter();
    }
    v33 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v19, v33);
  }
  else if (v12 == enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:))
  {
    v30 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 96))(v30, *(_QWORD *)(v0 + 96));
    v31 = sub_100008384((uint64_t *)&unk_1007BCFD0);
    swift_bridgeObjectRelease(*(const char **)(v30 + *(int *)(v31 + 48) + 8));
    v32 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
  }
  else
  {
    v34 = Logger.logObject.getter(*v1);
    v35 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = *(_QWORD *)(v0 + 144);
      v75 = v9;
      v37 = *(_QWORD *)(v0 + 128);
      v38 = *(_QWORD *)(v0 + 104);
      v39 = *(_QWORD *)(v0 + 112);
      v40 = *(_QWORD *)(v0 + 96);
      v72 = *(void **)(v0 + 56);
      v41 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = swift_slowAlloc(32, -1);
      v80 = v73;
      *(_DWORD *)v41 = 136315138;
      v42 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v79)(v36, v75, v37);
      SFAirDropSend.Transfer.state.getter(v42);
      v78(v36, v37);
      v43 = sub_100220D78(&qword_1007B8160, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
      v44 = dispatch thunk of CustomStringConvertible.description.getter(v40, v43);
      v46 = v45;
      v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v48 = v39;
      v2 = v0 + 48;
      v47(v48, v40);
      *(_QWORD *)(v0 + 48) = sub_100228BD8(v44, v46, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v41 + 4);

      v49 = (const char *)v46;
      v9 = v75;
      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}", v41, 0xCu);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      v47(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    }
    else
    {
      v50 = *(_QWORD *)(v0 + 104);
      v51 = *(void **)(v0 + 56);

      (*(void (**)(_QWORD, _QWORD))(v50 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    }
  }
  v52 = Logger.logObject.getter(*v1);
  v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = *(_QWORD *)(v0 + 144);
    v55 = v9;
    v56 = *(_QWORD *)(v0 + 128);
    v57 = *(_QWORD *)(v0 + 112);
    buf = *(uint8_t **)(v0 + 104);
    v77 = v2;
    v58 = *(_QWORD *)(v0 + 96);
    v74 = *(void **)(v0 + 56);
    v59 = (uint8_t *)swift_slowAlloc(12, -1);
    v76 = swift_slowAlloc(32, -1);
    v80 = v76;
    *(_DWORD *)v59 = 136315138;
    v60 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v79)(v54, v55, v56);
    SFAirDropSend.Transfer.state.getter(v60);
    v78(v54, v56);
    v61 = sub_100220D78(&qword_1007B8160, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
    v62 = dispatch thunk of CustomStringConvertible.description.getter(v58, v61);
    v64 = v63;
    (*((void (**)(uint64_t, uint64_t))buf + 1))(v57, v58);
    *(_QWORD *)(v0 + 40) = sub_100228BD8(v62, (unint64_t)v64, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v77, v59 + 4);

    swift_bridgeObjectRelease(v64);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Transer Linger SKIPPED. {transfer.state: %s}", v59, 0xCu);
    swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1, -1);
    swift_slowDealloc(v59, -1, -1);
  }
  else
  {
    v65 = *v1;

  }
  v66 = *(_QWORD *)(v0 + 144);
  v68 = *(_QWORD *)(v0 + 112);
  v67 = *(_QWORD *)(v0 + 120);
  v69 = *(_QWORD *)(v0 + 88);
  v70 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BBF90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  return swift_task_switch(sub_1002BBFE8, v1, 0);
}

uint64_t sub_1002BBFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BC064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return swift_task_switch(sub_1002BC0F8, v7, 0);
}

uint64_t sub_1002BC0F8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v1 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transfer Linger START", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  ContinuousClock.init()(v5);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v6 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v1 + 104) = v6;
  *v6 = v1;
  v6[1] = sub_1002BC204;
  return v8(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1002BC204()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v5 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1002BC340;
  else
    v7 = sub_1002BC290;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 88), 0);
}

uint64_t sub_1002BC290()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine Linger END", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BC340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 112);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 112);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v13 = v7;
    swift_getErrorValue(v5, v0 + 40, v0 + 16);
    v8 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v10 = v9;
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v6 + 4);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Transfer Linger FAILED {error: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v11);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BC504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002BC54C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDropSend.Transfer.State, &SFAirDropSend.Transfer.state.getter, "Transfer changed status %s -> %s", (void (*)(uint64_t))&SFAirDropSend.Transfer.update(state:), a2);
}

uint64_t sub_1002BC528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002BC54C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SFAirDrop.DisplayPriority, &SFAirDropSend.Transfer.displayPriority.getter, "Transfer changed display priority %s -> %s", (void (*)(uint64_t))&SFAirDropSend.Transfer.update(displayPriority:), a2);
}

uint64_t sub_1002BC54C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, NSObject *a3@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(void);
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, char *, uint64_t, __n128);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  __n128 v53;
  void (*v54)(char *);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(void);
  NSObject *v61;
  int v62;
  const char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  char v70[24];
  uint64_t v71;
  _BYTE v72[16];
  uint64_t v73[4];

  v67 = a5;
  v63 = a4;
  v61 = a3;
  v69 = a6;
  v9 = type metadata accessor for SFAirDropSend.Transfer(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v65 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v56 - v13;
  v15 = a2(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v56 - v21;
  __chkstk_darwin(v20);
  v23 = *(void (**)(void))(v16 + 16);
  v64 = (char *)&v56 - v24;
  v66 = a1;
  v60 = v23;
  v23();
  v25 = v6;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter();
  v62 = v27;
  v28 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc(22, -1);
    v68 = v10;
    v30 = v29;
    v59 = swift_slowAlloc(64, -1);
    v73[0] = v59;
    *(_DWORD *)v30 = 136315394;
    v57 = v30 + 4;
    v31 = &v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
    v32 = swift_beginAccess(&v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], v70, 0, 0);
    v33 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v68 + 16))(v14, v31, v9, v32);
    ((void (*)(uint64_t))v61)(v33);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v14, v9);
    v61 = v26;
    v34 = v60;
    ((void (*)(char *, char *, uint64_t))v60)(v19, v22, v15);
    v35 = String.init<A>(describing:)(v19, v15);
    v37 = v36;
    v58 = *(void (**)(char *, uint64_t))(v16 + 8);
    v58(v22, v15);
    v71 = sub_100228BD8(v35, v37, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v57);

    v38 = swift_bridgeObjectRelease(v37);
    *(_WORD *)(v30 + 12) = 2080;
    v39 = v64;
    ((void (*)(char *, char *, uint64_t, __n128))v34)(v22, v64, v15, v38);
    v40 = String.init<A>(describing:)(v22, v15);
    v42 = v41;
    v71 = sub_100228BD8(v40, v41, v73);
    v28 = &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v30 + 14);
    v43 = swift_bridgeObjectRelease(v42);
    ((void (*)(char *, uint64_t, __n128))v58)(v39, v15, v43);
    v44 = v61;
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v62, v63, (uint8_t *)v30, 0x16u);
    v45 = v59;
    swift_arrayDestroy(v59, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    v46 = v30;
    v10 = v68;
    swift_slowDealloc(v46, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v64, v15);
  }
  v47 = &v25[v28[19]];
  v48 = swift_beginAccess(v47, v73, 0, 0);
  v49 = *(void (**)(char *, char *, uint64_t, __n128))(v10 + 16);
  v50 = v65;
  v49(v65, v47, v9, v48);
  v67(v66);
  v51 = v10;
  v52 = *(void (**)(char *, uint64_t))(v10 + 8);
  v52(v50, v9);
  v53 = swift_beginAccess(v47, &v71, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v51 + 40))(v47, v14, v9, v53);
  swift_endAccess(&v71);
  ((void (*)(char *, char *, uint64_t))v49)(v14, v47, v9);
  CurrentValueSubject.send(_:)(v14);
  v52(v14, v9);
  v54 = *(void (**)(char *))&v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  ((void (*)(char *, char *, uint64_t))v49)(v14, v47, v9);
  v54(v14);
  v52(v14, v9);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v49)(v69, v47, v9);
}

uint64_t sub_1002BC9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  NSObject *v22;
  int v23;
  _DWORD *v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  void (*v50)(char *, char *, uint64_t, __n128);
  char *v51;
  void (*v52)(char *, uint64_t);
  __n128 v53;
  void (*v54)(char *);
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  char *v59;
  uint64_t v60;
  _DWORD *v61;
  os_log_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68[24];
  uint64_t v69[3];
  uint64_t v70;
  const char *v71[3];

  v66 = a2;
  v4 = type metadata accessor for SFAirDropSend.Transfer(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v67 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v64 = (char *)&v56 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v56 - v10;
  v12 = sub_100008384(&qword_1007C5E70);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v56 - v19;
  v65 = a1;
  sub_1002BDEC0(a1, (uint64_t)&v56 - v19);
  v21 = v2;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    v59 = v15;
    v62 = v22;
    v24 = (_DWORD *)swift_slowAlloc(22, -1);
    v60 = swift_slowAlloc(64, -1);
    v69[0] = v60;
    v61 = v24;
    *v24 = 136315394;
    v25 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
    v26 = swift_beginAccess(&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], v68, 0, 0);
    v27 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v11, v25, v4, v26);
    SFAirDropSend.Transfer.activeInterfaceType.getter(v27);
    v63 = v5;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    v28 = type metadata accessor for SFNWInterfaceType(0);
    v29 = *(_QWORD *)(v28 - 8);
    v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    v30 = v57(v18, 1, v28);
    v58 = v23;
    v31 = v64;
    v56 = v29;
    if ((_DWORD)v30 == 1)
    {
      sub_10000D0F0((uint64_t)v18, &qword_1007C5E70);
      v70 = 0;
      v71[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v71[0]);
      v32 = (const char *)0x8000000100612DF0;
      v33 = 0xD000000000000015;
    }
    else
    {
      v33 = SFNWInterfaceType.description.getter(v30);
      v32 = v37;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
    }
    v38 = v61;
    v70 = sub_100228BD8(v33, (unint64_t)v32, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v38 + 1);

    swift_bridgeObjectRelease(v32);
    *((_WORD *)v38 + 6) = 2080;
    v39 = (uint64_t)v20;
    v40 = (uint64_t)v59;
    sub_1002BDEC0((uint64_t)v20, (uint64_t)v59);
    v41 = v57((char *)v40, 1, v28);
    if ((_DWORD)v41 == 1)
    {
      sub_10000D0F0(v40, &qword_1007C5E70);
      v70 = 0;
      v71[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v71[0]);
      v42 = (const char *)0x8000000100612DF0;
      v43 = 0xD000000000000015;
    }
    else
    {
      v44 = v40;
      v43 = SFNWInterfaceType.description.getter(v41);
      v42 = v45;
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v44, v28);
    }
    v70 = sub_100228BD8(v43, (unint64_t)v42, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, (char *)v38 + 14);
    swift_bridgeObjectRelease(v42);
    sub_10000D0F0(v39, &qword_1007C5E70);
    v46 = v62;
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v58, "Transfer changed active interface type %s -> %s", (uint8_t *)v38, 0x16u);
    v47 = v60;
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    v35 = v65;
    v36 = v66;
    v34 = v63;
  }
  else
  {

    sub_10000D0F0((uint64_t)v20, &qword_1007C5E70);
    v34 = v5;
    v31 = v64;
    v35 = v65;
    v36 = v66;
  }
  v48 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
  v49 = swift_beginAccess(&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], &v70, 0, 0);
  v50 = *(void (**)(char *, char *, uint64_t, __n128))(v34 + 16);
  v51 = v67;
  v50(v67, v48, v4, v49);
  SFAirDropSend.Transfer.update(activeInterfaceType:)(v35);
  v52 = *(void (**)(char *, uint64_t))(v34 + 8);
  v52(v51, v4);
  v53 = swift_beginAccess(v48, v69, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 40))(v48, v31, v4, v53);
  swift_endAccess(v69);
  ((void (*)(char *, char *, uint64_t))v50)(v31, v48, v4);
  CurrentValueSubject.send(_:)(v31);
  v52(v31, v4);
  v54 = *(void (**)(char *))&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  ((void (*)(char *, char *, uint64_t))v50)(v31, v48, v4);
  v54(v31);
  v52(v31, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v50)(v36, v48, v4);
}

uint64_t sub_1002BCF50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];

  v2 = v1;
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropSend.Transfer(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v38 = a1;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v37 = v15;
    v43[0] = v15;
    v39 = v1;
    *(_DWORD *)v14 = 136315138;
    v36 = v14 + 4;
    v16 = SFAirDropSend.Transfer.id.getter(v15);
    v17 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v16);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
    v42 = sub_100228BD8(v17, (unint64_t)v19, v43);
    v2 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v36);
    v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Begin Send OSTransaction and Power Assertion %s", v14, 0xCu);
    v21 = v37;
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease((const char *)v43[1]);
  strcpy((char *)v43, "airdrop.send[");
  HIWORD(v43[1]) = -4864;
  v23 = SFAirDropSend.Transfer.id.getter(v22);
  v24 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v23);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease((const char *)v26);
  v28._countAndFlagsBits = 93;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  v29 = (const char *)v43[1];
  v30 = String.utf8CString.getter(v43[0], v43[1]);
  swift_bridgeObjectRelease(v29);
  v31 = os_transaction_create(v30 + 32);
  swift_release(v30);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction) = v31;
  swift_unknownObjectRelease(v32);
  result = sub_1000501FC();
  v34 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)v34 = result;
  *(_BYTE *)(v34 + 4) = 0;
  return result;
}

uint64_t sub_1002BD26C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  IOPMAssertionID v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v2 = v1;
  v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction);
  if (v4)
  {
    v5 = swift_unknownObjectRetain(v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing Send OSTransaction", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    v9 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = 0;
    swift_unknownObjectRelease(v4);
    result = swift_unknownObjectRelease(v9);
  }
  v10 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    v11 = *(_DWORD *)v10;
    if (*(_DWORD *)v10)
    {
      v12 = Logger.logObject.getter(result);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Clearing Send Power Assertion", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      result = IOPMAssertionRelease(v11);
      *(_DWORD *)v10 = 0;
      *(_BYTE *)(v10 + 4) = 1;
    }
  }
  return result;
}

uint64_t sub_1002BD3EC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropSend.Transfer(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  v15 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask);
  if (v15)
  {
    swift_retain(*(_QWORD *)(v1
                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
    Task.cancel()();
    swift_release(v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_1002BC528((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v16 = type metadata accessor for TaskPriority(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v5, 1, 1, v16);
  v18 = swift_allocObject(&unk_100720720, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = swift_allocObject(&unk_100720748, 32, 7);
  *(double *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_1007B8840, v19, (char *)&type metadata for () + 8);
  swift_release(v19);
  sub_10000D0F0((uint64_t)v5, &qword_1007B68A0);
  v21 = *(_QWORD *)(v1 + v14);
  *(_QWORD *)(v1 + v14) = v20;
  swift_retain(v20);
  swift_release(v21);
  v17(v5, 1, 1, v16);
  swift_retain(v20);
  v22 = static Task<>.noThrow(priority:operation:)(v5, &unk_1007B8850, v20, (char *)&type metadata for () + 8);
  swift_release_n(v20, 2);
  swift_release(v22);
  return sub_10000D0F0((uint64_t)v5, &qword_1007B68A0);
}

uint64_t sub_1002BD684(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 48) = a3;
  *(double *)(v3 + 40) = a1;
  v4 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  *(_QWORD *)(v3 + 56) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 72) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B8130);
  *(_QWORD *)(v3 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v3 + 88) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 96) = v8;
  *(_QWORD *)(v3 + 104) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  *(_QWORD *)(v3 + 112) = static AirDropActor.shared;
  return swift_task_switch(sub_1002BD768, v9, 0);
}

uint64_t sub_1002BD768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  v3 = v2;
  ContinuousClock.init()(v1);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v4 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_1002BD7FC;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1002BD7FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  v5 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 104);
  v6 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1002BD990;
  else
    v7 = sub_1002BD888;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 112), 0);
}

uint64_t sub_1002BD888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v6 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, enum case for SFAirDrop.DisplayPriority.normal(_:), v7);
    sub_1002BC528(v6, v5);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = *(_QWORD *)(v0 + 80);
  v11 = type metadata accessor for SFAirDropSend.Transfer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, v9, 1, v11);
  sub_10000D0F0(v10, &qword_1007B8130);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BD990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002BD9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  *(_QWORD *)(v2 + 16) = static AirDropActor.shared;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1002BDA8C;
  return Task.result.getter(v2 + 32, a2, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002BDA8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 24));
  return swift_task_switch(sub_1002BDAE0, v1, 0);
}

uint64_t sub_1002BDAE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002BDB14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s10BaseRunnerCMa_0(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002BDC7C()
{
  return _s10BaseRunnerCMa_0(0);
}

uint64_t _s10BaseRunnerCMa_0(uint64_t a1)
{
  uint64_t result;

  result = qword_1007B8820;
  if (!qword_1007B8820)
    return swift_getSingletonMetadata(a1, &_s10BaseRunnerCMn_0);
  return result;
}

uint64_t sub_1002BDCC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[14];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    v6[3] = &unk_1005D1288;
    result = type metadata accessor for SFAirDropSend.Request(319);
    if (v4 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(result - 8) + 64;
      v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = (char *)&value witness table for () + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      result = type metadata accessor for SFAirDropSend.Transfer(319);
      if (v5 <= 0x3F)
      {
        v6[9] = *(_QWORD *)(result - 8) + 64;
        v6[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v6[11] = &unk_1005D12A0;
        v6[12] = &unk_1005D12B8;
        v6[13] = &unk_1005D12A0;
        return swift_updateClassMetadata2(a1, 256, 14, v6, a1 + 80);
      }
    }
  }
  return result;
}

uint64_t sub_1002BDDBC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BDDE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BDE04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(double *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1007B883C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D098;
  return sub_1002BD684(v4, a1, v5);
}

uint64_t sub_1002BDE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1007B884C);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000D12C;
  return sub_1002BD9DC(a1, v1);
}

uint64_t sub_1002BDEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007C5E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BDF08()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002BDF34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007B8864);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_1002BC064(a1, v4, v5, v6);
}

id sub_1002BDFA0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  char *v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  objc_class *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;
  void *v51;

  v45 = a7;
  v46 = a8;
  v48 = a5;
  v49 = a6;
  v42 = a3;
  v47 = a10;
  v44 = a9;
  v15 = type metadata accessor for SFAirDropSend.Transfer(0);
  v41 = *(_QWORD *)(v15 - 8);
  v16 = v41;
  __chkstk_darwin(v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_mediaConversionDestinations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction] = 0;
  v19 = &v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion];
  *(_DWORD *)v19 = 0;
  v19[4] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask] = 0;
  v51 = a1;
  v20 = sub_100008384(&qword_1007B8870);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = v10;
  *(_QWORD *)&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints] = CurrentValueSubject.init(_:)(&v51);
  v51 = &_swiftEmptySetSingleton;
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints] = CurrentValueSubject.init(_:)(&v51);
  *(_QWORD *)&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus] = a2;
  v22 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest];
  v23 = type metadata accessor for SFAirDropSend.Request(0);
  v43 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v22, a3, v23);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], a4, v15);
  v24(v18, a4, v15);
  v25 = sub_100008384(&qword_1007B8878);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = a2;
  *(_QWORD *)&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_subject] = CurrentValueSubject.init(_:)(v18);
  v27 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  v28 = v46;
  *(_QWORD *)v27 = v45;
  *((_QWORD *)v27 + 1) = v28;
  v29 = v44;
  *(_QWORD *)&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue] = v44;
  v30 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log];
  v31 = type metadata accessor for Logger(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, v47, v31);
  v34 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager];
  v36 = v48;
  v35 = v49;
  *(_QWORD *)v34 = v48;
  *((_QWORD *)v34 + 1) = v35;
  swift_retain(v28);
  v37 = v29;
  swift_unknownObjectRetain(v36);

  v38 = (objc_class *)_s10BaseRunnerCMa_0(0);
  v50.receiver = v21;
  v50.super_class = v38;
  v39 = objc_msgSendSuper2(&v50, "init");
  sub_1002BCF50(a4);

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(a4, v15);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v23);
  return v39;
}

uint64_t sub_1002BE294()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B8880);
  sub_100221DF8(v0, (uint64_t)qword_1007B8880);
  return Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, 0x4E706F7244726941, 0xE900000000000057);
}

uint64_t sub_1002BE30C(uint64_t a1)
{
  return sub_1002BE33C(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_id);
}

uint64_t sub_1002BE318(uint64_t a1)
{
  return sub_1002BE33C(a1, (uint64_t (*)(void))&_nw_endpoint_get_contact_id);
}

uint64_t sub_1002BE324(uint64_t a1)
{
  return sub_1002BE33C(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_name);
}

uint64_t sub_1002BE330(uint64_t a1)
{
  return sub_1002BE33C(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_model);
}

uint64_t sub_1002BE33C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for NWEndpoint(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = NWEndpoint.nw.getter(v6);
  if (!v9)
  {
    if (qword_1007B3DB8 != -1)
      swift_once(&qword_1007B3DB8, sub_1002BE294);
    v16 = type metadata accessor for Logger(0);
    sub_100221DF8(v16, (uint64_t)qword_1007B8880);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v27 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = NWEndpoint.debugDescription.getter();
      v24 = v23;
      v26 = sub_100228BD8(v22, v23, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v20 + 4);
      swift_bridgeObjectRelease(v24);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not convert endpoint to nw_endpoint %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }

    return 0;
  }
  v10 = v9;
  v11 = a2();
  if (!v11)
  {
    swift_unknownObjectRelease(v10);
    return 0;
  }
  v12 = String.init(cString:)(v11);
  v14 = v13;
  swift_unknownObjectRelease(v10);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  return v12;
}

uint64_t sub_1002BE590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B8898);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B8898);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002BE620(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[17] = v11;
  v2[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002BE74C, static AirDropActor.shared, 0);
}

uint64_t sub_1002BE74C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *object;
  NSString v27;
  char MyFriendsLink;
  _BOOL8 v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  NSObject *log;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t type;
  os_log_type_t typea;
  uint64_t v69;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  if ((v6 & 1) == 0)
  {
LABEL_26:
    v29 = 0;
    goto LABEL_33;
  }
  v64 = v1 + 24;
  v8 = *(_QWORD *)(v1 + 104);
  v9 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v10 = 0;
  v65 = v9 + 56;
  v11 = -1;
  v12 = -1 << *(_BYTE *)(v9 + 32);
  if (-v12 < 64)
    v11 = ~(-1 << -(char)v12);
  v13 = v11 & *(_QWORD *)(v9 + 56);
  type = (unint64_t)(63 - v12) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_22;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v16 >= type)
      goto LABEL_27;
    v17 = *(_QWORD *)(v65 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= type)
        goto LABEL_27;
      v17 = *(_QWORD *)(v65 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= type)
          goto LABEL_27;
        v17 = *(_QWORD *)(v65 + 8 * v10);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v13 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_22:
    v19 = *(_QWORD *)(v1 + 120);
    v20 = *(_QWORD *)(v1 + 96);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v19, *(_QWORD *)(v9 + 48) + *(_QWORD *)(v8 + 72) * v15, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v19, 1, v20) == 1)
      goto LABEL_28;
    v21 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v8 + 32))(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96));
    URL.scheme.getter(v21);
    v23 = *(_QWORD *)(v1 + 112);
    v24 = *(_QWORD *)(v1 + 96);
    if (v22)
    {
      v25 = v22;
      object = String.lowercased()()._object;
      swift_bridgeObjectRelease(v25);
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      MyFriendsLink = SFIsFindMyFriendsLink(v27);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v24);
      if ((MyFriendsLink & 1) == 0)
      {
        swift_release(v9);
        goto LABEL_26;
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v8 + 8))(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 96));
    }
  }
  v18 = v16 + 3;
  if (v18 >= type)
  {
LABEL_27:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 120), 1, 1, *(_QWORD *)(v1 + 96));
LABEL_28:
    swift_release(v9);
    v30 = objc_allocWithZone((Class)LSApplicationRecord);
    v31 = sub_100528FF4(0xD000000000000010, 0x8000000100614760, 1);
    v54 = *(_QWORD *)(v1 + 40);
    v55 = *(void **)(v54 + 16);
    *(_QWORD *)(v54 + 16) = v31;

    goto LABEL_32;
  }
  v17 = *(_QWORD *)(v65 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= type)
      goto LABEL_27;
    v17 = *(_QWORD *)(v65 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_35:
  __break(1u);
  swift_once(&qword_1007B3DC0, sub_1002BE590);
  v32 = *(_QWORD *)(v1 + 80);
  v33 = *(_QWORD *)(v1 + 88);
  v34 = *(_QWORD *)(v1 + 72);
  v35 = *(_QWORD *)(v1 + 32);
  v36 = type metadata accessor for Logger(0);
  sub_100221DF8(v36, (uint64_t)qword_1007B8898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v33, v35, v34);
  swift_errorRetain(v9);
  v37 = swift_errorRetain(v9);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.error.getter(v38);
  v40 = os_log_type_enabled(v38, v39);
  v41 = *(_QWORD *)(v1 + 80);
  v42 = *(_QWORD *)(v1 + 88);
  v43 = *(_QWORD *)(v1 + 72);
  if (v40)
  {
    typea = v39;
    v44 = *(_QWORD *)(v1 + 64);
    v61 = *(_QWORD *)(v1 + 56);
    v45 = *(_QWORD *)(v1 + 48);
    v46 = swift_slowAlloc(22, -1);
    v63 = (uint64_t *)swift_slowAlloc(8, -1);
    v66 = swift_slowAlloc(32, -1);
    v69 = v66;
    *(_DWORD *)v46 = 136315394;
    log = v38;
    SFAirDropReceive.AskRequest.id.getter();
    v47 = sub_1002232C0();
    v48 = dispatch thunk of CustomStringConvertible.description.getter(v45, v47);
    v50 = v49;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v44, v45);
    *(_QWORD *)(v1 + 16) = sub_100228BD8(v48, v50, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v64, v46 + 4);
    v51 = swift_bridgeObjectRelease(v50);
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v42, v43, v51);
    *(_WORD *)(v46 + 12) = 2112;
    swift_errorRetain(v9);
    v52 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v1 + 24) = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v64, v1 + 32, v46 + 14);
    *v63 = v52;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, log, typea, "Failed to get FindMy app for ask request %s: %@", (uint8_t *)v46, 0x16u);
    v53 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v63, 1, v53);
    swift_slowDealloc(v63, -1, -1);
    swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
LABEL_32:
  v29 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) != 0;
LABEL_33:
  v57 = *(_QWORD *)(v1 + 112);
  v56 = *(_QWORD *)(v1 + 120);
  v58 = *(_QWORD *)(v1 + 88);
  v59 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  return (*(uint64_t (**)(_BOOL8))(v1 + 8))(v29);
}

uint64_t type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary41SDAirDropContentHandlerFindMyFriendsLinks);
}

uint64_t sub_1002BED60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t MyFriendsLinks;
  uint64_t result;

  MyFriendsLinks = type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks();
  result = swift_allocObject(MyFriendsLinks, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002BED94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007B88DC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1002BE620(a1);
}

uint64_t sub_1002BEDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v5 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(*(_QWORD *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = v8;
  sub_100323EA0(a1, v8, 1, a2);

  return sub_100223280((uint64_t)v7);
}

void sub_1002BEEBC(uint64_t a1, char a2)
{
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain(0xE300000000000000);
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 4607302;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((a2 & 1) != 0)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  v7 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(&qword_10071C548, 1, v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xEF524546534E4152);
  v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    static String.localizedStringWithFormat(_:_:)(v11, v13, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    __break(1u);
  }
}

__n128 _s20IdentityShareRequestVwxx(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_100225AB4(*(_QWORD *)(a1 + 16), v2);
  sub_100225AB4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_100225AB4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + 72));
}

uint64_t _s20IdentityShareRequestVwcp(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain(v4);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_10022E4A8(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = a2[4];
  v9 = a2[5];
  sub_10022E4A8(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a2[6];
  v11 = a2[7];
  sub_10022E4A8(v10, v11);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v12 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain(v12);
  return a1;
}

_QWORD *_s20IdentityShareRequestVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2 + 2;
  v7 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_10022E4A8(*v6, a2[3]);
      v10 = a1[2];
      v11 = a1[3];
      a1[2] = v9;
      a1[3] = v7;
      sub_100225AB4(v10, v11);
      goto LABEL_8;
    }
    sub_10023D5F8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_10022E4A8(*v6, a2[3]);
  a1[2] = v8;
  a1[3] = v7;
LABEL_8:
  v12 = a2[4];
  v13 = a2[5];
  sub_10022E4A8(v12, v13);
  v14 = a1[4];
  v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_100225AB4(v14, v15);
  v16 = a2[6];
  v17 = a2[7];
  sub_10022E4A8(v16, v17);
  v18 = a1[6];
  v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_100225AB4(v18, v19);
  a1[8] = a2[8];
  v20 = a2[9];
  v21 = a1[9];
  a1[9] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[10] = a2[10];
  return a1;
}

__n128 _s20IdentityShareRequestVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

_QWORD *_s20IdentityShareRequestVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = (_QWORD *)(a2 + 16);
  v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_100225AB4(v9, v7);
      goto LABEL_6;
    }
    sub_10023D5F8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
LABEL_6:
  v10 = a1[4];
  v11 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100225AB4(v10, v11);
  v12 = a1[6];
  v13 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_100225AB4(v12, v13);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  a1[10] = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t _s20IdentityShareRequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s20IdentityShareRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s20IdentityShareRequestVMa()
{
  return &_s20IdentityShareRequestVN;
}

uint64_t sub_1002BF418(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002BF458 + 4 * byte_1005D1340[a1]))(0x7265766965636552, 0xEF4449656C707041);
}

unint64_t sub_1002BF458()
{
  return 0xD000000000000010;
}

unint64_t sub_1002BF49C()
{
  return 0xD000000000000013;
}

void sub_1002BF4B4()
{
  JUMPOUT(0x1002BF4C8);
}

uint64_t sub_1002BF4D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002BF514 + 4 * byte_1005D1346[a1]))(0x7265766965636552, 0xEF4449656C707041);
}

unint64_t sub_1002BF514()
{
  return 0xD000000000000010;
}

unint64_t sub_1002BF558()
{
  return 0xD000000000000013;
}

void sub_1002BF570()
{
  JUMPOUT(0x1002BF584);
}

void sub_1002BF590(char *a1)
{
  sub_1004A7828(*a1);
}

void sub_1002BF59C()
{
  char *v0;

  sub_1004A8604(*v0);
}

void sub_1002BF5A4(uint64_t a1)
{
  char *v1;

  sub_1004A8924(a1, *v1);
}

void sub_1002BF5AC(uint64_t a1)
{
  char *v1;

  sub_1004A8EB8(a1, *v1);
}

unint64_t sub_1002BF5B4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002BFA60(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002BF5E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1002BF418(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002BF608()
{
  unsigned __int8 *v0;

  return sub_1002BF4D4(*v0);
}

unint64_t sub_1002BF610@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002BFA60(a1);
  *a2 = result;
  return result;
}

void sub_1002BF634(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1002BF640(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002BFF78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002BF668(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002BFF78();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002BF690()
{
  uint64_t v0;
  Swift::String v1;
  unint64_t v2;
  _BYTE v4[16];
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  v5 = 0;
  v6 = 0xE000000000000000;
  v1._object = (void *)0x8000000100614780;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v1);
  sub_1002BFA18(v0 + 16, (uint64_t)v7);
  sub_1002BFA18((uint64_t)v7, (uint64_t)v4);
  v2 = sub_100287B60();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v4, &type metadata for Data, v2);
  return v5;
}

uint64_t sub_1002BF728(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  __int128 v21;
  _BYTE v22[16];

  v3 = v1;
  v5 = sub_100008384(&qword_1007B89A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1002BFF78();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s20IdentityShareRequestV10CodingKeysON, &_s20IdentityShareRequestV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v21, v5);
  if (!v2)
  {
    sub_1002BFA18((uint64_t)(v3 + 2), (uint64_t)v22);
    sub_1002BFA18((uint64_t)v22, (uint64_t)&v21);
    v20 = 1;
    v14 = sub_100285DE4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    v21 = *((_OWORD *)v3 + 2);
    v20 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    v21 = *((_OWORD *)v3 + 3);
    v20 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    v15 = v3[8];
    v16 = v3[9];
    LOBYTE(v21) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    v17 = v3[10];
    LOBYTE(v21) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v21, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1002BF930@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_1002BFAA8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1002BF988(_QWORD *a1)
{
  return sub_1002BF728(a1);
}

uint64_t sub_1002BF9D0()
{
  return sub_1002BF690();
}

uint64_t sub_1002BFA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B5220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002BFA60(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10071C838, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

void sub_1002BFAA8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;

  v5 = sub_100008384(&qword_1007B8998);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10023A834(a1, v9);
  v11 = sub_1002BFF78();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s20IdentityShareRequestV10CodingKeysON, &_s20IdentityShareRequestV10CodingKeysON, v11, v9, v10);
  if (v2)
  {
    sub_10022E75C(a1);
    swift_bridgeObjectRelease(0);
    sub_100225AA0(0, 0xF000000000000000);
  }
  else
  {
    LOBYTE(v38) = 0;
    v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v38, v5);
    v14 = v13;
    v40 = 1;
    v15 = sub_100285DA0();
    swift_bridgeObjectRetain(v14);
    v37 = v15;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v38, &type metadata for Data, &v40, v5, &type metadata for Data, v15);
    v32 = v12;
    v33 = a2;
    v16 = v38;
    v17 = v39;
    v40 = 2;
    sub_100244404(v38, v39);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v40, v5, &type metadata for Data, v37);
    v40 = 3;
    v35 = v38;
    v31 = v39;
    sub_10022E4A8(v38, v39);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v40, v5, &type metadata for Data, v37);
    v18 = v38;
    LOBYTE(v38) = 4;
    v36 = v18;
    v37 = v39;
    sub_10022E4A8(v18, v39);
    v30 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    LOBYTE(v38) = 5;
    v34 = v19;
    swift_bridgeObjectRetain(v19);
    v20 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29 = v20;
    v21(v8, v5);
    swift_bridgeObjectRetain(v14);
    sub_100244404(v16, v17);
    v22 = v35;
    v23 = v31;
    sub_10022E4A8(v35, v31);
    v24 = v36;
    v25 = v37;
    sub_10022E4A8(v36, v37);
    sub_100225AB4(v24, v25);
    sub_100225AB4(v22, v23);
    sub_100225AA0(v16, v17);
    swift_bridgeObjectRelease(v14);
    sub_10022E75C(a1);
    swift_bridgeObjectRelease(v14);
    sub_100225AA0(v16, v17);
    sub_100225AB4(v22, v23);
    sub_100225AB4(v24, v25);
    v26 = v34;
    swift_bridgeObjectRelease(v34);
    v27 = v33;
    *v33 = v32;
    v27[1] = v14;
    v27[2] = v16;
    v27[3] = v17;
    v27[4] = v22;
    v27[5] = v23;
    v27[6] = v24;
    v27[7] = v25;
    v27[8] = v30;
    v27[9] = v26;
    v27[10] = v29;
  }
}

unint64_t sub_1002BFF78()
{
  unint64_t result;

  result = qword_1007B89A0;
  if (!qword_1007B89A0)
  {
    result = swift_getWitnessTable(&unk_1005D14EC, &_s20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007B89A0);
  }
  return result;
}

uint64_t _s20IdentityShareRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20IdentityShareRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002C0098 + 4 * byte_1005D1351[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1002C00CC + 4 * byte_1005D134C[v4]))();
}

uint64_t sub_1002C00CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002C00D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002C00DCLL);
  return result;
}

uint64_t sub_1002C00E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002C00F0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1002C00F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002C00FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20IdentityShareRequestV10CodingKeysOMa()
{
  return &_s20IdentityShareRequestV10CodingKeysON;
}

unint64_t sub_1002C011C()
{
  unint64_t result;

  result = qword_1007B89B0;
  if (!qword_1007B89B0)
  {
    result = swift_getWitnessTable(&unk_1005D14C4, &_s20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007B89B0);
  }
  return result;
}

unint64_t sub_1002C0164()
{
  unint64_t result;

  result = qword_1007B89B8;
  if (!qword_1007B89B8)
  {
    result = swift_getWitnessTable(&unk_1005D13FC, &_s20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007B89B8);
  }
  return result;
}

unint64_t sub_1002C01AC()
{
  unint64_t result;

  result = qword_1007B89C0;
  if (!qword_1007B89C0)
  {
    result = swift_getWitnessTable(&unk_1005D1424, &_s20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1007B89C0);
  }
  return result;
}

uint64_t sub_1002C01F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002C02CC, static AirDropActor.shared, 0);
}

void sub_1002C02CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C560);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C580, 1, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerMapsLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary32SDAirDropContentHandlerMapsLinks);
}

uint64_t sub_1002C05A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerMapsLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002C05DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007B89F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1002C01F0(a1);
}

uint64_t sub_1002C0630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v5 = sub_100008384((uint64_t *)&unk_1007C5DE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(*(_QWORD *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = v8;
  sub_100323EA0(a1, v8, 1, a2);

  return sub_10000D0F0((uint64_t)v7, (uint64_t *)&unk_1007C5DE0);
}

uint64_t sub_1002C0714(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  unint64_t v55;
  uint64_t v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  unint64_t v64;
  uint64_t v65;
  NSString v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  uint64_t v73;
  Swift::String v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char v83[64];

  v3 = sub_100008384(&qword_1007B51F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v75 - v12;
  v14 = SFAirDropReceive.AskRequest.urlItems.getter(v11);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = swift_bridgeObjectRelease(v14);
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007B51F8);
    goto LABEL_10;
  }
  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v13, v5, v6);
  v17(v10, v13, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) != enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.maps(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
  v5 = (char *)*((_QWORD *)v10 + 2);
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 1));
  v19 = SFAirDropReceive.AskRequest.itemsDescription.getter(v18);
  if (!v20)
  {
LABEL_10:
    v29 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v29, v83);
    v75 = xmmword_1005CD2A0;
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x4E494C5F5350414DLL;
    v31 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xE90000000000004BLL;
    *(_QWORD *)(inited + 48) = v15;
    v81 = 0x545F4E5245444F4DLL;
    v82 = 0xEF524546534E4152;
    swift_bridgeObjectRetain(0xE90000000000004BLL);
    swift_bridgeObjectRetain(inited);
    v32._countAndFlagsBits = 95;
    v32._object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    v33._countAndFlagsBits = 0x4E494C5F5350414DLL;
    v33._object = (void *)0xE90000000000004BLL;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(0xE90000000000004BLL);
    if (v15 > 1)
    {
      v34._countAndFlagsBits = 0x4C4152554C505FLL;
      v34._object = (void *)0xE700000000000000;
      String.append(_:)(v34);
    }
    swift_bridgeObjectRelease(inited);
    if ((a2 & 1) != 0)
    {
      v35._countAndFlagsBits = 0x4C4154495041435FLL;
      v35._object = (void *)0xEC00000044455A49;
      String.append(_:)(v35);
    }
    v36._countAndFlagsBits = 0x545845545FLL;
    v36._object = (void *)0xE500000000000000;
    String.append(_:)(v36);
    v37 = v82;
    swift_setDeallocating(inited);
    v38 = *(_QWORD *)(inited + 16);
    v39 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v31, v38, v39);
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v42 = (id)SFLocalizedStringForKey(v40, v41);

    if (!v42)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      v81 = 0;
      v82 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      v72._countAndFlagsBits = 0x6E696C207370614DLL;
      v72._object = (void *)0xEF2065707974206BLL;
      String.append(_:)(v72);
      v80 = v5;
      type metadata accessor for SFAirDropMapsLinkType(0);
      _print_unlocked<A, B>(_:_:)(&v80, &v81, v73, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v74._countAndFlagsBits = 0x20746F6E20736920;
      v74._object = (void *)0xEF64656C646E6168;
      String.append(_:)(v74);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v81, v82, "DaemoniOSLibrary/SDAirDropContentHandlerMapsLinks.swift", 55, 2, 66, 0);
      __break(1u);
      JUMPOUT(0x1002C0F24);
    }
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v47 = swift_allocObject(v46, 72, 7);
    *(_OWORD *)(v47 + 16) = v75;
    *(_QWORD *)(v47 + 56) = &type metadata for Int;
    *(_QWORD *)(v47 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v47 + 32) = v15;
    v48 = v43;
    goto LABEL_16;
  }
  v21 = v20;
  if (v15 != 1)
  {
    swift_bridgeObjectRelease(v20);
    goto LABEL_10;
  }
  v22 = v19;
  switch((unint64_t)v5)
  {
    case 0uLL:
      v23 = sub_100008384(&qword_1007B7600);
      v24 = swift_initStackObject(v23, &v76);
      v25 = v24;
      v26 = 0xD00000000000001ALL;
      *(_QWORD *)(v24 + 32) = 0xD00000000000001ALL;
      v27 = v24 + 32;
      *(_OWORD *)(v24 + 16) = xmmword_1005CD2A0;
      v28 = "MAPS_LINK_CURRENT_LOCATION";
      goto LABEL_18;
    case 1uLL:
      v59 = sub_100008384(&qword_1007B7600);
      v25 = swift_initStackObject(v59, &v77);
      *(_QWORD *)(v25 + 32) = 0xD000000000000014;
      v27 = v25 + 32;
      *(_OWORD *)(v25 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v25 + 40) = 0x8000000100614860;
      *(_QWORD *)(v25 + 48) = 1;
      v81 = 0x545F4E5245444F4DLL;
      v82 = 0xEF524546534E4152;
      swift_bridgeObjectRetain(0x8000000100614860);
      swift_bridgeObjectRetain(v25);
      v60._countAndFlagsBits = 95;
      v60._object = (void *)0xE100000000000000;
      String.append(_:)(v60);
      v61._countAndFlagsBits = 0xD000000000000014;
      v61._object = (void *)0x8000000100614860;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(v25);
      v55 = 0x8000000100614860;
      goto LABEL_21;
    case 2uLL:
      v51 = sub_100008384(&qword_1007B7600);
      v24 = swift_initStackObject(v51, &v78);
      v25 = v24;
      v26 = 0xD000000000000015;
      *(_QWORD *)(v24 + 32) = 0xD000000000000015;
      v27 = v24 + 32;
      *(_OWORD *)(v24 + 16) = xmmword_1005CD2A0;
      v28 = "MAPS_LINK_DROPPED_PIN";
LABEL_18:
      v52 = (void *)((unint64_t)(v28 - 32) | 0x8000000000000000);
      *(_QWORD *)(v24 + 40) = v52;
      *(_QWORD *)(v24 + 48) = 1;
      v81 = 0x545F4E5245444F4DLL;
      v82 = 0xEF524546534E4152;
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v25);
      v53._countAndFlagsBits = 95;
      v53._object = (void *)0xE100000000000000;
      String.append(_:)(v53);
      v54._countAndFlagsBits = v26;
      v54._object = v52;
      String.append(_:)(v54);
      swift_bridgeObjectRelease(v25);
      v55 = (unint64_t)v52;
      goto LABEL_21;
    case 3uLL:
      v56 = sub_100008384(&qword_1007B7600);
      v25 = swift_initStackObject(v56, &v79);
      *(_OWORD *)(v25 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v25 + 32) = 0x4E494C5F5350414DLL;
      v27 = v25 + 32;
      *(_QWORD *)(v25 + 40) = 0xED0000494F505F4BLL;
      *(_QWORD *)(v25 + 48) = 1;
      v81 = 0x545F4E5245444F4DLL;
      v82 = 0xEF524546534E4152;
      swift_bridgeObjectRetain(0xED0000494F505F4BLL);
      swift_bridgeObjectRetain(v25);
      v57._countAndFlagsBits = 95;
      v57._object = (void *)0xE100000000000000;
      String.append(_:)(v57);
      v58._countAndFlagsBits = 0x4E494C5F5350414DLL;
      v58._object = (void *)0xED0000494F505F4BLL;
      String.append(_:)(v58);
      swift_bridgeObjectRelease(v25);
      v55 = 0xED0000494F505F4BLL;
LABEL_21:
      swift_bridgeObjectRelease(v55);
      if ((a2 & 1) != 0)
      {
        v62._countAndFlagsBits = 0x4C4154495041435FLL;
        v62._object = (void *)0xEC00000044455A49;
        String.append(_:)(v62);
      }
      v63._countAndFlagsBits = 0x545845545FLL;
      v63._object = (void *)0xE500000000000000;
      String.append(_:)(v63);
      v64 = v82;
      swift_setDeallocating(v25);
      v5 = *(char **)(v25 + 16);
      v65 = sub_100008384(&qword_1007B7608);
      swift_arrayDestroy(v27, v5, v65);
      v66 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v64);
      v68 = (id)SFLocalizedStringForKey(v66, v67);

      if (!v68)
        goto LABEL_26;
      v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      v45 = v70;

      v71 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v47 = swift_allocObject(v71, 72, 7);
      *(_OWORD *)(v47 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v47 + 56) = &type metadata for String;
      *(_QWORD *)(v47 + 64) = sub_100299AB0();
      *(_QWORD *)(v47 + 32) = v22;
      *(_QWORD *)(v47 + 40) = v21;
      v48 = v69;
      break;
    default:
      goto LABEL_27;
  }
LABEL_16:
  v49 = static String.localizedStringWithFormat(_:_:)(v48, v45, v47);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v47);
  return v49;
}

uint64_t sub_1002C0F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B8AB0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B8AB0);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002C0FC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject(&unk_100720E78, 48, 7);
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v6[5] = v1;
  swift_retain(v0);
  v7 = sub_100252EC0((uint64_t)v4, (uint64_t)&unk_1007B9590, (uint64_t)v6);
  return swift_release(v7);
}

uint64_t sub_1002C1088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v6 = sub_100008384(&qword_1007B68A0);
  v5[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C10E4, 0, 0);
}

uint64_t sub_1002C10E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  void *v25;
  __int128 v27;
  uint64_t v28;

  v1 = v0[12];
  v2 = type metadata accessor for TaskPriority(0);
  v3 = v0 + 10;
  v27 = *((_OWORD *)v0 + 5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = swift_allocObject(&unk_100720EA0, 48, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_OWORD *)(v4 + 32) = v27;
  swift_retain(v27);
  v5 = sub_100252EC0(v1, (uint64_t)&unk_1007B95A0, v4);
  v6 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v27 + 40) = v5;
  swift_release(v6);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v7 = *v3;
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
  v9 = swift_retain_n(v7, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *v3;
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v28 = v15;
    *(_DWORD *)v14 = 136315138;
    v0[8] = v13;
    v16 = type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain(v13);
    v17 = String.init<A>(describing:)(v0 + 8, v16);
    v19 = v18;
    v0[9] = sub_100228BD8(v17, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 9, v0 + 10, v14 + 4);
    swift_release_n(v13, 2);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s Starting NearbyActionV1 advertise", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_release_n(v13, 2);
  }
  v20 = v0[12];
  v21 = v0[10];
  v22 = *(void **)(v21 + 24);
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setLabel:", v23);

  objc_msgSend(v22, "setIdentifier:", SFServiceIdentifierAutoUnlock);
  objc_msgSend(v22, "setDeviceActionType:", 55);
  objc_msgSend(v22, "setAdvertiseRate:", 30);
  v24 = swift_allocObject(&unk_100720EC8, 24, 7);
  swift_weakInit(v24 + 16, v21);
  v0[6] = sub_1002CB0F4;
  v0[7] = v24;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1002D6B08;
  v0[5] = &unk_100720EE0;
  v25 = _Block_copy(v0 + 2);
  swift_release(v0[7]);
  objc_msgSend(v22, "activateWithCompletion:", v25);
  _Block_release(v25);
  swift_task_dealloc(v20);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1002C1468()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1007B8AF4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000D098;
  return sub_1002C1B10(60);
}

void sub_1002C14B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *oslog;
  uint64_t Strong;
  uint64_t v30[3];
  uint64_t v31[3];

  v3 = a2 + 16;
  if (a1)
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v5 = type metadata accessor for Logger(0);
    sub_100221DF8(v5, (uint64_t)qword_1007B8AB0);
    swift_retain(a2);
    swift_errorRetain(a1);
    swift_retain(a2);
    v6 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      v10 = swift_slowAlloc(32, -1);
      v30[0] = v10;
      *(_DWORD *)v8 = 136315394;
      swift_beginAccess(v3, v31, 0, 0);
      Strong = swift_weakLoadStrong(v3);
      v11 = sub_100008384(&qword_1007B95A8);
      v12 = String.init<A>(describing:)(&Strong, v11);
      v14 = v13;
      Strong = sub_100228BD8(v12, v13, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v30, v8 + 4);
      swift_bridgeObjectRelease(v14);
      swift_release_n(a2, 2);
      *(_WORD *)(v8 + 12) = 2112;
      swift_errorRetain(a1);
      v15 = _swift_stdlib_bridgeErrorToNSError(a1);
      Strong = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v30, v8 + 14);
      *v9 = v15;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "%s: Encountered error while trying to activate NearbyAction advertiser: %@", (uint8_t *)v8, 0x16u);
      v16 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v9, 1, v16);
      swift_slowDealloc(v9, -1, -1);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {
      swift_release_n(a2, 2);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v17 = type metadata accessor for Logger(0);
    sub_100221DF8(v17, (uint64_t)qword_1007B8AB0);
    v18 = swift_retain_n(a2, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v31[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_beginAccess(v3, v30, 0, 0);
      Strong = swift_weakLoadStrong(v3);
      v23 = sub_100008384(&qword_1007B95A8);
      v24 = String.init<A>(describing:)(&Strong, v23);
      v26 = v25;
      Strong = sub_100228BD8(v24, v25, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v30, v21 + 4);
      swift_bridgeObjectRelease(v26);
      swift_release_n(a2, 2);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Started NearbyAction advertiser", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      swift_release_n(a2, 2);
    }

    swift_beginAccess(v3, v31, 0, 0);
    v27 = swift_weakLoadStrong(v3);
    if (v27)
    {
      *(_BYTE *)(v27 + 16) = 1;
      swift_release(v27);
    }
  }
}

id sub_1002C1910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id result;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v1;
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain(v1);
    v9 = String.init<A>(describing:)(&v14, v8);
    v11 = v10;
    v14 = sub_100228BD8(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4);
    swift_bridgeObjectRelease(v11);
    swift_release_n(v1, 2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Stopping advertiser", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_release_n(v1, 2);
  }

  v12 = *(_QWORD *)(v1 + 40);
  if (v12)
  {
    swift_retain(*(_QWORD *)(v1 + 40));
    Task.cancel()();
    swift_release(v12);
  }
  result = objc_msgSend(*(id *)(v1 + 24), "invalidate");
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

uint64_t sub_1002C1B10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = type metadata accessor for ContinuousClock.Instant(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = type metadata accessor for ContinuousClock(0);
  v2[12] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[13] = v7;
  v2[14] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C1BA8, 0, 0);
}

uint64_t sub_1002C1BA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;

  ContinuousClock.init()(a1);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v2 = v1[7];
  v3 = type metadata accessor for Logger(0);
  v1[15] = sub_100221DF8(v3, (uint64_t)qword_1007B8AB0);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v1[7];
  if (v7)
  {
    v23 = v1[6];
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(32, -1);
    v24 = v10;
    *(_DWORD *)v9 = 136315394;
    v1[3] = v8;
    v11 = type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain(v8);
    v12 = String.init<A>(describing:)(v1 + 3, v11);
    v14 = v13;
    v1[4] = sub_100228BD8(v12, v13, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 4, v1 + 5, v9 + 4);
    swift_release_n(v8, 2);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v9 + 12) = 2048;
    v1[5] = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 5, v1 + 6, v9 + 14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s: Starting timer for %ld sec", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    v15 = swift_release_n(v8, 2);
  }
  v16 = v1[10];
  v17 = v1[8];
  v18 = v1[9];
  v19 = v1[6];
  static ContinuousClock.now.getter(v15);
  ContinuousClock.Instant.advanced(by:)(1000000000000000000 * v19, ((v19 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v19 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64));
  v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v1[16] = v20;
  v20(v16, v17);
  v21 = (_QWORD *)swift_task_alloc(async function pointer to ContinuousClock.sleep(until:tolerance:)[1]);
  v1[17] = v21;
  *v21 = v1;
  v21[1] = sub_1002C1E48;
  return ContinuousClock.sleep(until:tolerance:)(v1[11], 0, 0, 1);
}

uint64_t sub_1002C1E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
    v6 = sub_1002C1F3C;
  else
    v6 = sub_1002C1EC8;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002C1EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  sub_1002C20FC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C1F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 144);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Ran into error creating timer: %@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 144);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    swift_errorRelease(v10);

  }
  v12 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 80);
  sub_1002C20FC();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc(v11);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002C20FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v1;
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain(v1);
    v9 = String.init<A>(describing:)(&v13, v8);
    v11 = v10;
    v13 = sub_100228BD8(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4);
    swift_bridgeObjectRelease(v11);
    swift_release_n(v1, 2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Timer fired", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_release_n(v1, 2);
  }

  return sub_1002C1910();
}

uint64_t sub_1002C22B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SDAuthenticationNearbyActionAdvertiser()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary38SDAuthenticationNearbyActionAdvertiser);
}

uint64_t sub_1002C230C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_1002C2324, 0, 0);
}

uint64_t sub_1002C2324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  void *v14;
  NSString v15;
  __n128 v16;
  uint64_t v18;

  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v1 = v0[15];
  v2 = type metadata accessor for Logger(0);
  v0[16] = sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[15];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    v0[10] = v7;
    v10 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    v11 = String.init<A>(describing:)(v0 + 10, v10);
    v13 = (const char *)v12;
    v0[10] = sub_100228BD8(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v8 + 4);
    swift_release_n(v7, 2);
    swift_bridgeObjectRelease(v13, v18);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Starting NearbyInfo advertise", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v7, 2);
  }
  v14 = *(void **)(v0[15] + 16);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setLabel:", v15);

  objc_msgSend(v14, "setAdvertiseRate:", 40);
  v0[2] = v0;
  v0[3] = sub_1002C25B0;
  v0[14] = swift_continuation_init(v0 + 2, 1, v16);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002EF5D4;
  v0[13] = &unk_100720E50;
  objc_msgSend(v14, "activateWithCompletion:", v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1002C25B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_1002C279C;
  else
    v2 = sub_1002C2610;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002C2610()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = swift_retain_n(*(_QWORD *)(v0 + 120), 2);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    *(_DWORD *)v5 = 136315138;
    v13 = v6;
    *(_QWORD *)(v0 + 80) = v4;
    v7 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    v8 = String.init<A>(describing:)(v0 + 80, v7);
    v10 = (const char *)v9;
    *(_QWORD *)(v0 + 80) = sub_100228BD8(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v5 + 4);
    swift_release_n(v4, 2);
    swift_bridgeObjectRelease(v10, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Started NearbyInfo advertiser", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 120);

    swift_release_n(v11, 2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C279C()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002C27D8()
{
  return sub_1002C2C24((uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SDAuthenticationNearbyInfoAdvertiser, "%s: Stopping advertiser");
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoAdvertiser()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary36SDAuthenticationNearbyInfoAdvertiser);
}

uint64_t sub_1002C280C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;
  Class isa;

  v3 = objc_msgSend(objc_allocWithZone((Class)CBDiscovery), "init");
  *(_QWORD *)(v1 + 16) = v3;
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setLabel:", v5);

  v6 = *(void **)(v1 + 16);
  objc_msgSend(v6, "setUseCase:", 131088);
  objc_msgSend(v6, "setBleRSSIThresholdHint:", 4294967236);
  objc_msgSend(v6, "setBleScanRate:", 0);
  v7 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "setDeviceFilter:", isa);

  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1002C291C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_1002C2934, 0, 0);
}

uint64_t sub_1002C2934()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  void *v15;
  uint64_t v17;

  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v1 = v0[15];
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[15];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    v0[10] = v7;
    v10 = type metadata accessor for SDAuthenticationBioArmScanner();
    swift_retain(v7);
    v11 = String.init<A>(describing:)(v0 + 10, v10);
    v13 = v12;
    v0[10] = sub_100228BD8(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v8 + 4);
    swift_release_n(v7, 2);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Scan starting", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v7, 2);
  }
  v15 = *(void **)(v0[15] + 16);
  v0[2] = v0;
  v0[3] = sub_1002C2B68;
  v0[14] = swift_continuation_init(v0 + 2, 1, v14);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002EF5D4;
  v0[13] = &unk_100720E38;
  objc_msgSend(v15, "activateWithCompletion:", v0 + 10);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1002C2B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 128) = v1;
  if (v1)
    v2 = sub_1002C2BD4;
  else
    v2 = sub_1002C2BC8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002C2BC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C2BD4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002C2C10()
{
  return sub_1002C2C24((uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SDAuthenticationBioArmScanner, "%s: Scan stopping");
}

id sub_1002C2C24(uint64_t (*a1)(uint64_t, uint64_t), const char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v5 = v2;
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007B8AB0);
  v7 = swift_retain_n(v2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v5;
    v19 = v11;
    *(_DWORD *)v10 = 136315138;
    v13 = a1(v11, v12);
    swift_retain(v5);
    v14 = String.init<A>(describing:)(&v18, v13);
    v16 = v15;
    v18 = sub_100228BD8(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v10 + 4);
    swift_bridgeObjectRelease(v16);
    swift_release_n(v5, 2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a2, v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_release_n(v5, 2);
  }

  return objc_msgSend(*(id *)(v5 + 16), "invalidate");
}

void sub_1002C2DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v4 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = *(void **)(a2 + 16);
  v8 = swift_allocObject(&unk_100720BA0, 24, 7);
  swift_weakInit(v8 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = swift_allocObject(&unk_100720BC8, v10 + v6, v9 | 7);
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1002CA9E0;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C3A3C;
  aBlock[3] = &unk_100720BE0;
  v12 = _Block_copy(aBlock);
  swift_release(v14);
  objc_msgSend(v7, "setDeviceFoundHandler:", v12);
  _Block_release(v12);
}

void sub_1002C2F48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char v92[24];
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t Strong;
  _BYTE v97[16];
  uint64_t v98[4];

  v91 = a3;
  v5 = sub_100008384(&qword_1007B94B8);
  v90 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v89 = (_QWORD **)((char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = a2 + 16;
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
  swift_retain_n(a2, 2);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v85 = (_QWORD *)swift_slowAlloc(8, -1);
    v86 = swift_slowAlloc(32, -1);
    v98[0] = v86;
    *(_DWORD *)v13 = 136315394;
    v87 = v5;
    swift_beginAccess(a2 + 16, v92, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    v14 = sub_100008384(&qword_1007B9500);
    v88 = a2 + 16;
    v15 = String.init<A>(describing:)(&Strong, v14);
    v16 = v9;
    v18 = v17;
    Strong = sub_100228BD8(v15, v17, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v97, v13 + 4);
    swift_release_n(a2, 2);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v13 + 12) = 2112;
    Strong = (uint64_t)v10;
    v19 = a2;
    v20 = v10;
    v9 = v16;
    v5 = v87;
    v7 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v97, v13 + 14);
    v21 = v85;
    *v85 = v10;

    a2 = v19;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Found unfiltered device: %@", (uint8_t *)v13, 0x16u);
    v22 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v21, 1, v22);
    swift_slowDealloc(v21, -1, -1);
    v23 = v86;
    swift_arrayDestroy(v86, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_release_n(a2, 2);
  }
  swift_beginAccess(v7, v98, 0, 0);
  v24 = swift_weakLoadStrong(v7);
  if (!v24)
  {
    v51 = swift_retain_n(a2, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = swift_slowAlloc(32, -1);
      v93 = v55;
      *(_DWORD *)v54 = 136315138;
      swift_beginAccess(v7, &Strong, 0, 0);
      v95 = swift_weakLoadStrong(v7);
      v56 = sub_100008384(&qword_1007B9500);
      v57 = String.init<A>(describing:)(&v95, v56);
      v59 = v58;
      v95 = sub_100228BD8(v57, v58, &v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v54 + 4);
      swift_release_n(a2, 2);
      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s: self isn't initialized", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      return;
    }

LABEL_20:
    swift_release_n(a2, 2);
    return;
  }
  v25 = v24;
  v26 = objc_msgSend(v10, "identifier");
  if (!v26)
  {
    swift_retain_n(a2, 2);
    v60 = v10;
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc(22, -1);
      v90 = swift_slowAlloc(8, -1);
      v91 = swift_slowAlloc(32, -1);
      v93 = v91;
      *(_DWORD *)v63 = 136315394;
      swift_beginAccess(v7, &Strong, 0, 0);
      v95 = swift_weakLoadStrong(v7);
      v64 = sub_100008384(&qword_1007B9500);
      v65 = String.init<A>(describing:)(&v95, v64);
      v67 = v66;
      v95 = sub_100228BD8(v65, v66, &v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v63 + 4);
      swift_release_n(a2, 2);
      swift_bridgeObjectRelease(v67);
      *(_WORD *)(v63 + 12) = 2112;
      v95 = (uint64_t)v60;
      v68 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v63 + 14);
      v69 = v90;
      *(_QWORD *)v90 = v60;

      _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s: Ignoring device without identifier: %@", (uint8_t *)v63, 0x16u);
      v70 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v69, 1, v70);
      swift_slowDealloc(v69, -1, -1);
      v71 = v91;
      swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v63, -1, -1);
      swift_release(v25);

      return;
    }

    swift_release(v25);
    goto LABEL_20;
  }
  v27 = v26;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v30 = v29;

  v31 = *(_QWORD **)(v25 + 24);
  if (!v31[2])
  {
    swift_bridgeObjectRelease(v30);
    goto LABEL_18;
  }
  v32 = sub_1002EF648(v28, v30, v31);
  swift_bridgeObjectRelease(v30);
  if ((v32 & 1) != 0)
  {
LABEL_18:
    Strong = (uint64_t)v10;
    v72 = v10;
    v73 = sub_100008384((uint64_t *)&unk_1007B91C8);
    v74 = v89;
    AsyncStream.Continuation.yield(_:)(&Strong, v73);
    swift_release(v25);
    (*(void (**)(_QWORD *, uint64_t))(v90 + 8))(v74, v5);
    return;
  }
  swift_retain_n(a2, 2);
  v33 = v10;
  swift_retain_n(v25, 2);
  v34 = v33;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(32, -1);
    v89 = (_QWORD *)swift_slowAlloc(8, -1);
    v90 = swift_slowAlloc(64, -1);
    v93 = v90;
    *(_DWORD *)v37 = 136315650;
    swift_beginAccess(v7, &Strong, 0, 0);
    v95 = swift_weakLoadStrong(v7);
    v38 = sub_100008384(&qword_1007B9500);
    v39 = String.init<A>(describing:)(&v95, v38);
    v91 = v9;
    v41 = v40;
    v95 = sub_100228BD8(v39, v40, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v37 + 4);
    swift_release_n(a2, 2);
    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v37 + 12) = 2080;
    v42 = *(_QWORD *)(v25 + 24);
    v43 = swift_bridgeObjectRetain(v42);
    v44 = Array.description.getter(v43, &type metadata for String);
    v46 = v45;
    swift_bridgeObjectRelease(v42);
    v95 = sub_100228BD8(v44, v46, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v37 + 14);
    swift_release_n(v25, 2);
    swift_bridgeObjectRelease(v46);
    *(_WORD *)(v37 + 22) = 2112;
    v95 = (uint64_t)v34;
    v47 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &Strong, v37 + 24);
    v48 = v89;
    *v89 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s: Ignoring device not in device filter. Filter: %s, device: %@", (uint8_t *)v37, 0x20u);
    v49 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v48, 1, v49);
    swift_slowDealloc(v48, -1, -1);
    v50 = v90;
    swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

    swift_release_n(v25, 2);
    swift_release_n(a2, 2);
  }
  v75 = v34;
  v76 = Logger.logObject.getter(v75);
  v77 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc(12, -1);
    v79 = swift_slowAlloc(32, -1);
    v95 = v79;
    *(_DWORD *)v78 = 136315138;
    v80 = objc_msgSend(v75, "idsDeviceID");
    if (v80)
    {
      v81 = v80;
      v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
      v84 = v83;

    }
    else
    {
      v93 = 0;
      v94 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v94);
      v84 = 0x8000000100612DF0;
      v82 = 0xD000000000000015;
    }
    v93 = sub_100228BD8(v82, v84, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v78 + 4);

    swift_bridgeObjectRelease(v84);
    _os_log_impl((void *)&_mh_execute_header, v76, v77, "Ids id: %s", v78, 0xCu);
    swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v79, -1, -1);
    swift_slowDealloc(v78, -1, -1);
    swift_release(v25);

  }
  else
  {

    swift_release(v25);
  }
}

uint64_t sub_1002C3A40()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for SDAuthenticationBioArmScanner()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary29SDAuthenticationBioArmScanner);
}

uint64_t sub_1002C3A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1007B8CC4);
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_10000D12C;
  v6[15] = a4;
  return swift_task_switch(sub_1002C2934, 0, 0);
}

uint64_t sub_1002C3AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[14] = a4;
  v5[15] = a5;
  v6 = sub_100008384(&qword_1007B94B8);
  v5[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[17] = v7;
  v5[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B94C0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B94C8);
  v5[22] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[23] = v11;
  v5[24] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B94D0);
  v5[25] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[26] = v13;
  v5[27] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C3BD4, 0, 0);
}

uint64_t sub_1002C3BD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[23];
  v2 = v0[24];
  v4 = v0[21];
  v3 = v0[22];
  v6 = v0[19];
  v5 = v0[20];
  v7 = v0[14];
  v8 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v6);
  AsyncStream.init(_:bufferingPolicy:_:)(v8, v4, sub_1002CA9CC, v7, v8);
  AsyncStream.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_beginAccess(v7 + 32, v0 + 2, 0, 0);
  swift_beginAccess(v7 + 40, v0 + 5, 0, 0);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[28] = v9;
  *v9 = v0;
  v9[1] = sub_1002C3D20;
  return AsyncStream.Iterator.next(isolation:)(v0 + 11, 0, 0, v0[25]);
}

uint64_t sub_1002C3D20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  return swift_task_switch(sub_1002C3D74, 0, 0);
}

uint64_t sub_1002C3D74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  signed int v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v1 = *(void **)(v0 + 88);
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v7, *(_QWORD *)(v0 + 200));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((objc_msgSend(*(id *)(v0 + 88), "nearbyInfoFlags") & 0x20) == 0)
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Device isn't advertising watchLocked. Ignoring", v6, 2u);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

    }
    goto LABEL_35;
  }
  v12 = objc_msgSend(v1, "idsDeviceID");
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)(v0 + 112);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v17 = v16;

    v19 = *(_QWORD *)(v14 + 32);
    if (*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v19);
      v20 = sub_10045C200(v15, v17);
      if ((v21 & 1) != 0)
        v22 = *(_BYTE *)(*(_QWORD *)(v19 + 56) + v20);
      else
        v22 = 0x80;
      swift_bridgeObjectRelease(v19);
      *(_QWORD *)&v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
    }
    else
    {
      v22 = 0x80;
    }
    v37 = *(_QWORD *)(v0 + 112);
    v38 = objc_msgSend(v1, "rssi", v18);
    v39 = *(_QWORD *)(v37 + 40);
    swift_bridgeObjectRetain(v39);
    v40 = sub_100455328(v15, v17, v39);
    swift_bridgeObjectRelease(v39);
    if ((v40 & 1) == 0 || v38 > v22)
    {
      v46 = *(_QWORD *)(v0 + 112);
      swift_beginAccess(v46 + 32, v0 + 64, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v46 + 32));
      v63 = *(_QWORD *)(v46 + 32);
      *(_QWORD *)(v46 + 32) = 0x8000000000000000;
      sub_10046C6D8(v38, v15, v17, isUniquelyReferenced_nonNull_native);
      v48 = *(_QWORD *)(v46 + 32);
      *(_QWORD *)(v46 + 32) = v63;
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v17);
      swift_endAccess(v0 + 64);
      if (qword_1007B3DC8 != -1)
        swift_once(&qword_1007B3DC8, sub_1002C0F34);
      v49 = type metadata accessor for Logger(0);
      sub_100221DF8(v49, (uint64_t)qword_1007B8AB0);
      v50 = v1;
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc(12, -1);
        v54 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v53 = 138412290;
        *(_QWORD *)(v53 + 4) = v50;
        *v54 = v1;

        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Found unarmed device! %@", (uint8_t *)v53, 0xCu);
        v55 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v54, 1, v55);
        swift_slowDealloc(v54, -1, -1);
        swift_slowDealloc(v53, -1, -1);
      }
      else
      {

      }
      v57 = *(_QWORD *)(v0 + 136);
      v56 = *(_QWORD *)(v0 + 144);
      v58 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 104) = v50;
      v59 = sub_100008384((uint64_t *)&unk_1007B91C8);
      AsyncStream.Continuation.yield(_:)(v0 + 104, v59);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
      goto LABEL_35;
    }
    swift_bridgeObjectRelease(v17);
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v41 = type metadata accessor for Logger(0);
    sub_100221DF8(v41, (uint64_t)qword_1007B8AB0);
    v25 = v1;
    v26 = Logger.logObject.getter(v25);
    v42 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v26, v42))
    {

      goto LABEL_35;
    }
    v43 = swift_slowAlloc(18, -1);
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v43 = 16777986;
    *(_BYTE *)(v43 + 4) = v22;
    *(_WORD *)(v43 + 5) = 256;
    *(_BYTE *)(v43 + 7) = v38;
    *(_WORD *)(v43 + 8) = 2112;
    *(_QWORD *)(v43 + 10) = v25;
    *v44 = v1;
    _os_log_impl((void *)&_mh_execute_header, v26, v42, "Ignoring device due to lower RSSI (old: %hhd, new: %hhd). Device: %@", (uint8_t *)v43, 0x12u);
    v45 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v44, 1, v45);
    swift_slowDealloc(v44, -1, -1);
    v36 = v43;
  }
  else
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v23 = *(_QWORD *)(v0 + 112);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007B8AB0);
    swift_retain_n(v23, 2);
    v25 = v1;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.debug.getter();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 112);
    if (!v28)
    {

      swift_release_n(v29, 2);
      goto LABEL_35;
    }
    v30 = swift_slowAlloc(22, -1);
    v61 = (_QWORD *)swift_slowAlloc(8, -1);
    v62 = swift_slowAlloc(32, -1);
    v63 = v62;
    *(_DWORD *)v30 = 136315394;
    *(_QWORD *)(v0 + 96) = v29;
    v31 = type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner();
    swift_retain(v29);
    v32 = String.init<A>(describing:)(v0 + 96, v31);
    v34 = v33;
    *(_QWORD *)(v30 + 4) = sub_100228BD8(v32, v33, &v63);
    swift_bridgeObjectRelease(v34);
    swift_release_n(v29, 2);
    *(_WORD *)(v30 + 12) = 2112;
    *(_QWORD *)(v30 + 14) = v25;
    *v61 = v1;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s: Ignoring device with IDS device ID: %@", (uint8_t *)v30, 0x16u);
    v35 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v61, 1, v35);
    swift_slowDealloc(v61, -1, -1);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    v36 = v30;
  }
  swift_slowDealloc(v36, -1, -1);

LABEL_35:
  v60 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 224) = v60;
  *v60 = v0;
  v60[1] = sub_1002C3D20;
  return AsyncStream.Iterator.next(isolation:)(v0 + 88, 0, 0, *(_QWORD *)(v0 + 200));
}

uint64_t sub_1002C44C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1002C44E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary39SDAuthenticationBioArmNearbyInfoScanner);
}

uint64_t sub_1002C453C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1007B8CC4);
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_10000D098;
  v6[15] = a4;
  return swift_task_switch(sub_1002C2934, 0, 0);
}

uint64_t sub_1002C459C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v8 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = (char *)swift_allocObject(a3, v16 + v10, v15 | 7);
  *((_QWORD *)v17 + 2) = 0;
  *((_QWORD *)v17 + 3) = 0;
  *((_QWORD *)v17 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(a2);
  v18 = sub_100252EC0((uint64_t)v13, a4, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_1002C46EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_100008384(&qword_1007B94B8);
  v5[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[9] = v7;
  v5[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B94C0);
  v5[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[12] = v9;
  v5[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B94C8);
  v5[14] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[15] = v11;
  v5[16] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B94D0);
  v5[17] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[18] = v13;
  v5[19] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C47D4, 0, 0);
}

uint64_t sub_1002C47D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[15];
  v1 = v0[16];
  v4 = v0[13];
  v3 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  v7 = v0[6];
  v8 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v6);
  AsyncStream.init(_:bufferingPolicy:_:)(v8, v4, sub_1002CA9CC, v7, v8);
  AsyncStream.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[20] = v9;
  *v9 = v0;
  v9[1] = sub_1002C48E8;
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v0[17]);
}

uint64_t sub_1002C48E8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_1002C493C, 0, 0);
}

uint64_t sub_1002C493C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    if (objc_msgSend(*(id *)(v0 + 16), "nearbyActionType") == 55)
    {
      v2 = v0 + 32;
      if (qword_1007B3DC8 != -1)
        swift_once(&qword_1007B3DC8, sub_1002C0F34);
      v3 = *(_QWORD *)(v0 + 48);
      v4 = type metadata accessor for Logger(0);
      sub_100221DF8(v4, (uint64_t)qword_1007B8AB0);
      swift_retain_n(v3, 2);
      v5 = v1;
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(_QWORD *)(v0 + 48);
      if (v8)
      {
        v10 = swift_slowAlloc(22, -1);
        v40 = (_QWORD *)swift_slowAlloc(8, -1);
        v41 = swift_slowAlloc(32, -1);
        v44 = v41;
        *(_DWORD *)v10 = 136315394;
        *(_QWORD *)(v0 + 40) = v9;
        v11 = type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
        swift_retain(v9);
        v12 = String.init<A>(describing:)(v0 + 40, v11);
        v14 = v13;
        *(_QWORD *)(v10 + 4) = sub_100228BD8(v12, v13, &v44);
        v15 = v14;
        v2 = v0 + 32;
        swift_bridgeObjectRelease(v15);
        swift_release_n(v9, 2);
        *(_WORD *)(v10 + 12) = 2112;
        *(_QWORD *)(v10 + 14) = v5;
        *v40 = v1;

        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: Needs arming! NearbyActionV1 Device: %@", (uint8_t *)v10, 0x16u);
        v16 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v40, 1, v16);
        swift_slowDealloc(v40, -1, -1);
        swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v10, -1, -1);
      }
      else
      {
        swift_release_n(*(_QWORD *)(v0 + 48), 2);

      }
      v36 = *(_QWORD *)(v0 + 72);
      v35 = *(_QWORD *)(v0 + 80);
      v37 = *(_QWORD *)(v0 + 64);
      *(_QWORD *)(v0 + 32) = v5;
      v38 = sub_100008384((uint64_t *)&unk_1007B91C8);
      AsyncStream.Continuation.yield(_:)(v2, v38);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    }
    else
    {
      if (qword_1007B3DC8 != -1)
        swift_once(&qword_1007B3DC8, sub_1002C0F34);
      v22 = *(_QWORD *)(v0 + 48);
      v23 = type metadata accessor for Logger(0);
      sub_100221DF8(v23, (uint64_t)qword_1007B8AB0);
      swift_retain_n(v22, 2);
      v24 = v1;
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter();
      v27 = os_log_type_enabled(v25, v26);
      v28 = *(_QWORD *)(v0 + 48);
      if (v27)
      {
        v29 = swift_slowAlloc(22, -1);
        v42 = (_QWORD *)swift_slowAlloc(8, -1);
        v43 = swift_slowAlloc(32, -1);
        v44 = v43;
        *(_DWORD *)v29 = 136315394;
        *(_QWORD *)(v0 + 24) = v28;
        v30 = type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
        swift_retain(v28);
        v31 = String.init<A>(describing:)(v0 + 24, v30);
        v33 = v32;
        *(_QWORD *)(v29 + 4) = sub_100228BD8(v31, v32, &v44);
        swift_bridgeObjectRelease(v33);
        swift_release_n(v28, 2);
        *(_WORD *)(v29 + 12) = 2112;
        *(_QWORD *)(v29 + 14) = v24;
        *v42 = v1;

        _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: Device %@ does not have AUAction bit set", (uint8_t *)v29, 0x16u);
        v34 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v42, 1, v34);
        swift_slowDealloc(v42, -1, -1);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v29, -1, -1);

      }
      else
      {

        swift_release_n(v28, 2);
      }
    }
    v39 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 160) = v39;
    *v39 = v0;
    v39[1] = sub_1002C48E8;
    return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, *(_QWORD *)(v0 + 136));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v17, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyActionScanner()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary41SDAuthenticationBioArmNearbyActionScanner);
}

uint64_t sub_1002C4E48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  id v10;
  Class isa;
  void *v12;
  id v13;

  v9 = objc_msgSend(objc_allocWithZone((Class)RPCompanionLinkClient), "init");
  *(_QWORD *)(v4 + 16) = v9;
  objc_msgSend(v9, "setControlFlags:", a2);
  v10 = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
  objc_msgSend(v10, "setDeviceFilter:", isa);

  if ((a4 & 0x100000000) == 0)
  {
    v12 = *(void **)(v4 + 16);
    if ((objc_msgSend(v12, "controlFlags") & 0x10000) != 0)
    {
      v13 = v12;
      objc_msgSend(v13, "setBleScreenOffScanRate:", a4);

    }
  }

  return v4;
}

uint64_t sub_1002C4F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_100008384(&qword_1007B9558);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Scanning for found devices", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = sub_100221EDC(0, &qword_1007B9560, RPCompanionLinkDevice_ptr);
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v4);
  __chkstk_darwin(v14);
  *(&v16 - 4) = a1;
  *(&v16 - 3) = v2;
  *((_BYTE *)&v16 - 16) = 1;
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)(v13, v7, sub_1002CAD3C);
}

void sub_1002C50E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  const char *v29;
  const char *v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  void *v40;
  uint64_t v41;
  char **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  void *v61;
  void *v62;
  uint64_t v63;

  v54 = a4;
  v7 = sub_100008384(&qword_1007B9568);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  v56 = v9;
  if (a2 < 1)
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v53 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v19 = type metadata accessor for Logger(0);
    sub_100221DF8(v19, (uint64_t)qword_1007B8AB0);
    v20 = swift_retain_n(a3, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (void **)swift_slowAlloc(32, -1);
      v57 = a3;
      aBlock = v24;
      *(_DWORD *)v23 = 136315138;
      v52 = (void (*)(char *, uint64_t, uint64_t))(v23 + 4);
      v25 = a3;
      v26 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
      swift_retain();
      v27 = String.init<A>(describing:)(&v57, v26);
      v29 = (const char *)v28;
      v57 = sub_100228BD8(v27, v28, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &aBlock, v52);
      v30 = v29;
      a3 = v25;
      swift_bridgeObjectRelease(v30);
      swift_release_n(v25, 2);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: Scanning indefinitely", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      v31 = v23;
      a1 = v55;
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_release_n(a3, 2);
    }

    v9 = v56;
    v10 = v53;
  }
  else
  {
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 48) & ~v15;
    v17 = (char *)swift_allocObject(&unk_100720E20, v16 + v9, v15 | 7);
    *((_QWORD *)v17 + 2) = 0;
    *((_QWORD *)v17 + 3) = 0;
    *((_QWORD *)v17 + 4) = a3;
    *((_QWORD *)v17 + 5) = a2;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_retain();
    v18 = sub_100252EC0((uint64_t)v13, (uint64_t)&unk_1007B9578, (uint64_t)v17);
    swift_release(v18);
  }
  v32 = *(char **)(a3 + 16);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v53 = v32;
  v52(v10, a1, v7);
  v33 = *(unsigned __int8 *)(v8 + 80);
  v51 = ~v33;
  v34 = (v33 + 24) & ~v33;
  v35 = v34 + v9;
  v36 = v33 | 7;
  if ((v54 & 1) != 0)
  {
    v37 = swift_allocObject(&unk_100720DD0, v35, v33 | 7);
    *(_QWORD *)(v37 + 16) = a3;
    v38 = v37 + v34;
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v39(v38, v10, v7);
    v62 = sub_1002CAED8;
    v63 = v37;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_1002C3A3C;
    v61 = &unk_100720DE8;
    v40 = _Block_copy(&aBlock);
    v41 = v63;
    swift_retain();
    swift_release(v41);
    v42 = &selRef_setDeviceFoundHandler_;
  }
  else
  {
    v43 = swift_allocObject(&unk_100720D30, v35, v33 | 7);
    *(_QWORD *)(v43 + 16) = a3;
    v44 = v43 + v34;
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v39(v44, v10, v7);
    v62 = sub_1002CAD54;
    v63 = v43;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_1002C3A3C;
    v61 = &unk_100720D48;
    v40 = _Block_copy(&aBlock);
    v45 = v63;
    swift_retain();
    swift_release(v45);
    v42 = &selRef_setDeviceLostHandler_;
  }
  v46 = v53;
  objc_msgSend(v53, *v42, v40);
  _Block_release(v40);
  v52(v10, v55, v7);
  v47 = (v33 + 16) & v51;
  v48 = swift_allocObject(&unk_100720D80, v47 + v56, v36);
  v39(v48 + v47, v10, v7);
  v62 = sub_1002CAE1C;
  v63 = v48;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1002D6B08;
  v61 = &unk_100720D98;
  v49 = _Block_copy(&aBlock);
  swift_release(v63);
  objc_msgSend(v46, "activateWithCompletion:", v49);
  _Block_release(v49);
}

uint64_t sub_1002C55FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = type metadata accessor for ContinuousClock(0);
  v6[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[12] = v8;
  v6[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C5660, 0, 0);
}

uint64_t sub_1002C5660()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v22;

  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v1 = v0[8];
  v2 = type metadata accessor for Logger(0);
  v0[14] = sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = v0[8];
    v20 = v0[9];
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(32, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136315394;
    v0[5] = v6;
    v9 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain(v6);
    v10 = String.init<A>(describing:)(v0 + 5, v9);
    v12 = v11;
    v0[6] = sub_100228BD8(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 6, v0 + 7, v7 + 4);
    swift_release_n(v6, 2);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2048;
    v0[7] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v7 + 14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Scanning for %ld seconds", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v14 = v0[8];

    v13 = swift_release_n(v14, 2);
  }
  v15 = v0[9];
  v16 = 1000000000000000000 * v15;
  v17 = ((v15 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v15 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()(v13);
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v18 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  v0[15] = v18;
  *v18 = v0;
  v18[1] = sub_1002C58E0;
  return v21(v16, v17, 0, 0, 1);
}

uint64_t sub_1002C58E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 120));
  v4 = v2[12];
  v3 = v2[13];
  v5 = v2[11];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1002CB140;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_1002C5978;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002C5978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  *(_QWORD *)(v0 + 16) = 0;
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_100008384(&qword_1007B9568);
  AsyncThrowingStream.Continuation.finish(throwing:)(v0 + 16, v2);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 64);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v16 = v8;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain(v6);
    v10 = String.init<A>(describing:)(v0 + 24, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v7 + 4);
    swift_release_n(v6, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Finished scanning", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {
    v13 = *(_QWORD *)(v0 + 64);

    swift_release_n(v13, 2);
  }
  v14 = *(_QWORD *)(v0 + 104);
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 64) + 16), "invalidate", v16);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C5B54(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  const char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_100008384(&qword_1007B9580);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v12 = type metadata accessor for Logger(0);
  sub_100221DF8(v12, (uint64_t)qword_1007B8AB0);
  swift_retain_n(a2, 2);
  v13 = a1;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v34 = v11;
    v17 = v16;
    v18 = (_QWORD *)swift_slowAlloc(8, -1);
    v19 = swift_slowAlloc(32, -1);
    v33 = a4;
    v20 = v19;
    v38 = a2;
    v39 = v19;
    *(_DWORD *)v17 = 136315394;
    v35 = v9;
    v21 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    v37 = a3;
    v22 = v21;
    swift_retain();
    v36 = v8;
    v23 = String.init<A>(describing:)(&v38, v22);
    v25 = (const char *)v24;
    v38 = sub_100228BD8(v23, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 4);
    swift_bridgeObjectRelease(v25);
    swift_release_n(a2, 2);
    *(_WORD *)(v17 + 12) = 2112;
    v38 = (uint64_t)v13;
    v26 = v13;
    v8 = v36;
    v9 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 14);
    *v18 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, v33, (uint8_t *)v17, 0x16u);
    v27 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v18, 1, v27);
    swift_slowDealloc(v18, -1, -1);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v28 = v17;
    v11 = v34;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    swift_release_n(a2, 2);

  }
  v39 = (uint64_t)v13;
  v29 = v13;
  v30 = sub_100008384(&qword_1007B9568);
  AsyncThrowingStream.Continuation.yield(_:)(&v39, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1002C5E2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result)
  {
    v2 = result;
    swift_errorRetain(result);
    v1 = sub_100008384(&qword_1007B9568);
    return AsyncThrowingStream.Continuation.finish(throwing:)(&v2, v1);
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary42SDAuthenticationNearbyInfoTemporaryScanner);
}

uint64_t type metadata accessor for SDAuthenticationWiFiTemporaryScanner()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary36SDAuthenticationWiFiTemporaryScanner);
}

uint64_t sub_1002C5EB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[7] = v0;
  v2 = sub_100008384(&qword_1007BD680);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v1[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C5F38, 0, 0);
}

id sub_1002C5F38()
{
  uint64_t v0;
  id result;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (!result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = objc_msgSend(result, "deviceKeyBagUnlocked");

  if ((v3 & 1) != 0)
  {
LABEL_6:
    v9 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v9);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  result = objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
  if (!result)
    goto LABEL_16;
  v4 = result;
  v5 = objc_msgSend(result, "localAttestedLTK");

  if (v5)
  {
    v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    sub_100225AB4(v6, v8);
    goto LABEL_6;
  }
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 96) = sub_100221DF8(v11, (uint64_t)qword_1007B8AB0);
  v12 = swift_retain_n(v10, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 56);
  if (v15)
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v28 = v18;
    *(_DWORD *)v17 = 136315138;
    *(_QWORD *)(v0 + 40) = v16;
    v19 = type metadata accessor for SDAuthenticationStatusMonitor();
    swift_retain(v16);
    v20 = String.init<A>(describing:)(v0 + 40, v19);
    v22 = v21;
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v20, v21, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v17 + 4);
    swift_release_n(v16, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: Waiting for keys to be loaded", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_release_n(v16, 2);
  }
  v23 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1007B3DF8 != -1)
    swift_once(&qword_1007B3DF8, sub_1002D4770);
  v24 = NSNotificationCenter.notifications(named:object:)(qword_1007D80D0, 0);
  *(_QWORD *)(v0 + 104) = v24;

  v25 = swift_retain(v24);
  NSNotificationCenter.Notifications.makeAsyncIterator()(v25);
  v26 = sub_100220D78(&qword_1007B9550, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v27 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 112) = v27;
  *v27 = v0;
  v27[1] = sub_1002C62D0;
  return (id)dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v26);
}

uint64_t sub_1002C62D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002C6534;
  else
    v3 = sub_1002C6334;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C6334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  v2 = type metadata accessor for Notification(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) != 1)
    sub_10000D0F0(*(_QWORD *)(v0 + 64), &qword_1007BD680);
  v3 = swift_retain_n(*(_QWORD *)(v0 + 56), 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v17 = *(_QWORD *)(v0 + 104);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v18 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 24) = v8;
    v11 = type metadata accessor for SDAuthenticationStatusMonitor();
    swift_retain(v8);
    v12 = String.init<A>(describing:)(v0 + 24, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v9 + 4);
    swift_release_n(v8, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Finished waiting for keys to load", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_release(v17);

  }
  else
  {

    swift_release_n(v8, 2);
    swift_release(v7);
  }
  v15 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C6534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 120);
  v1 = sub_100008384(&qword_1007B5A60);
  v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t type metadata accessor for SDAuthenticationStatusMonitor()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary29SDAuthenticationStatusMonitor);
}

uint64_t sub_1002C65B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE v26[24];

  v4 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_100008384(&qword_1007B9480);
  v11 = __chkstk_darwin(v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v15 = &v26[-v14 - 8];
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v16(&v26[-v14 - 8], a1, v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  sub_1002CA4B8((uint64_t)v15, (uint64_t)v13);
  v17 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  swift_beginAccess(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, v26, 33, 0);
  sub_1002CA500((uint64_t)v13, v17);
  swift_endAccess(v26);
  v18 = swift_allocObject(&unk_100720AB0, 24, 7);
  swift_weakInit(v18 + 16, a2);
  AsyncStream.Continuation.onTermination.setter(sub_1002CA56C, v18, v4);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  v16(&v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v4);
  v20 = *(unsigned __int8 *)(v5 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (char *)swift_allocObject(&unk_100720AD8, v21 + v6, v20 | 7);
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = a2;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(&v22[v21], &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v4);
  swift_retain(a2);
  v23 = sub_100252EC0((uint64_t)v9, (uint64_t)&unk_1007B9490, (uint64_t)v22);
  return swift_release(v23);
}

uint64_t sub_1002C67FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
    if (v5)
    {
      swift_retain(*(_QWORD *)(result
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner));
      sub_1002C2C10();
      swift_release(v5);
    }
    v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner);
    if (v6)
    {
      swift_retain(*(_QWORD *)(v4
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner));
      sub_1002C2C10();
      swift_release(v6);
    }
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1002C6894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[13] = v8;
  v5[14] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C6920, 0, 0);
}

id sub_1002C6920()
{
  uint64_t v0;
  id result;
  _QWORD *v2;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  *(_QWORD *)(v0 + 128) = result;
  if (result)
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1007BD67C);
    *(_QWORD *)(v0 + 136) = v2;
    *v2 = v0;
    v2[1] = sub_1002C6994;
    return (id)sub_10038F058();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C6994()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(void **)(*v0 + 128);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));

  v3 = (_QWORD *)swift_task_alloc(dword_1007B9104);
  *(_QWORD *)(v1 + 144) = v3;
  *v3 = v5;
  v3[1] = sub_1002C69FC;
  return sub_1002C5EB4();
}

uint64_t sub_1002C69FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_1002C6A50, 0, 0);
}

uint64_t sub_1002C6A50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  BOOL v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v66;
  os_log_type_t type[8];
  NSObject *log;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v75;
  uint64_t v76;

  if (qword_1007B42C8 != -1)
    swift_once(&qword_1007B42C8, sub_1005478B0);
  if (qword_1007D88A8)
  {
    v73 = (_QWORD *)(v0 + 32);
    v75 = (id)qword_1007D88A8;
    v1 = sub_1005462FC();
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v3 = (_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 72);
    v4 = type metadata accessor for Logger(0);
    sub_100221DF8(v4, (uint64_t)qword_1007B8AB0);
    swift_retain_n(v2, 2);
    v5 = swift_bridgeObjectRetain_n(v1, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 72);
    if (v8)
    {
      log = v6;
      v10 = swift_slowAlloc(22, -1);
      v69 = swift_slowAlloc(64, -1);
      v76 = v69;
      *(_DWORD *)v10 = 136315394;
      *(_QWORD *)(v0 + 48) = v9;
      v11 = v1;
      v12 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
      swift_retain(v9);
      v13 = String.init<A>(describing:)(v0 + 48, v12);
      v15 = v14;
      *(_QWORD *)(v0 + 56) = sub_100228BD8(v13, v14, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v10 + 4);
      v16 = v15;
      v1 = v11;
      swift_bridgeObjectRelease(v16);
      swift_release_n(v9, 2);
      *(_WORD *)(v10 + 12) = 2080;
      v17 = swift_bridgeObjectRetain(v11);
      v18 = Array.description.getter(v17, &type metadata for String);
      v20 = v19;
      swift_bridgeObjectRelease(v11);
      *(_QWORD *)(v0 + 64) = sub_100228BD8(v18, v20, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v10 + 14);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease_n(v11, 2);
      v6 = log;
      _os_log_impl((void *)&_mh_execute_header, log, v7, "%s: Looking for lock devices %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_release_n(v9, 2);
      swift_bridgeObjectRelease_n(v1, 2);
    }

    if (v1[2])
    {
      v34 = *(_QWORD *)(v0 + 112);
      v35 = *(_QWORD *)(v0 + 120);
      v37 = *(_QWORD *)(v0 + 96);
      v36 = *(_QWORD *)(v0 + 104);
      v70 = v36;
      v38 = *(_QWORD *)(v0 + 80);
      v39 = *(_QWORD *)(v0 + 88);
      v72 = v38;
      v66 = v35;
      *(_QWORD *)type = *(_QWORD *)(v0 + 72);
      v40 = type metadata accessor for TaskPriority(0);
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
      v74(v35, 1, 1, v40);
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
      v41 = v34;
      v71(v34, v38, v39);
      v42 = *(unsigned __int8 *)(v37 + 80);
      v43 = (v42 + 40) & ~v42;
      v44 = (v36 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      v45 = v1;
      v46 = (char *)swift_allocObject(&unk_100720B00, v44 + 8, v42 | 7);
      *((_QWORD *)v46 + 2) = 0;
      *((_QWORD *)v46 + 3) = 0;
      *((_QWORD *)v46 + 4) = v45;
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
      v47(&v46[v43], v41, v39);
      *(_QWORD *)&v46[v44] = *(_QWORD *)type;
      swift_retain(*(_QWORD *)type);
      swift_bridgeObjectRetain(v45);
      v48 = sub_100252EC0(v66, (uint64_t)&unk_1007B94A0, (uint64_t)v46);
      swift_release(v48);
      v74(v66, 1, 1, v40);
      v71(v41, v72, v39);
      v49 = (v42 + 48) & ~v42;
      v50 = (char *)swift_allocObject(&unk_100720B28, v49 + v70, v42 | 7);
      *((_QWORD *)v50 + 2) = 0;
      *((_QWORD *)v50 + 3) = 0;
      *((_QWORD *)v50 + 4) = v45;
      *((_QWORD *)v50 + 5) = *(_QWORD *)type;
      v47(&v50[v49], v41, v39);
      swift_retain(*(_QWORD *)type);
      v51 = sub_100252EC0(v66, (uint64_t)&unk_1007B94B0, (uint64_t)v50);
      swift_release(v51);
    }
    else
    {
      v52 = *v3;
      swift_bridgeObjectRelease(v1);
      v53 = swift_retain_n(v52, 2);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter();
      v56 = os_log_type_enabled(v54, v55);
      v57 = *v3;
      if (v56)
      {
        v58 = (uint8_t *)swift_slowAlloc(12, -1);
        v59 = swift_slowAlloc(32, -1);
        v76 = v59;
        *(_DWORD *)v58 = 136315138;
        *v73 = v57;
        v60 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
        swift_retain(v57);
        v61 = String.init<A>(describing:)(v73, v60);
        v63 = v62;
        *(_QWORD *)(v0 + 40) = sub_100228BD8(v61, v62, &v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v58 + 4);
        swift_bridgeObjectRelease(v63);
        swift_release_n(v57, 2);
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s: No lock devices. Terminating stream", v58, 0xCu);
        swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v58, -1, -1);
      }
      else
      {
        swift_release_n(*v3, 2);
      }

      AsyncStream.Continuation.finish()();
    }

  }
  else
  {
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v21 = *(_QWORD *)(v0 + 72);
    v22 = type metadata accessor for Logger(0);
    sub_100221DF8(v22, (uint64_t)qword_1007B8AB0);
    v23 = swift_retain_n(v21, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(_QWORD *)(v0 + 72);
    if (v26)
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      *(_DWORD *)v28 = 136315138;
      v76 = v29;
      *(_QWORD *)(v0 + 16) = v27;
      v30 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
      swift_retain(v27);
      v31 = String.init<A>(describing:)(v0 + 16, v30);
      v33 = v32;
      *(_QWORD *)(v0 + 24) = sub_100228BD8(v31, v32, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v28 + 4);
      swift_bridgeObjectRelease(v33);
      swift_release_n(v27, 2);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: Authentication manager isn't running. Not scanning", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release_n(*(_QWORD *)(v0 + 72), 2);
    }

  }
  v64 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C7190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_100008384(&qword_1007B94B8);
  v6[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[9] = v8;
  v6[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B94C0);
  v6[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[13] = v11;
  v6[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B94C8);
  v6[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[16] = v13;
  v6[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007B94D0);
  v6[18] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[19] = v15;
  v6[20] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C72A0, 0, 0);
}

uint64_t sub_1002C72A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v1 = v0[17];
  v18 = v0[16];
  v3 = v0[14];
  v2 = v0[15];
  v5 = v0[12];
  v4 = v0[13];
  v6 = v0[11];
  v7 = v0[5];
  v8 = type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
  v9 = swift_allocObject(v8, 32, 7);
  v10 = swift_bridgeObjectRetain(v7);
  sub_1002C280C(v10);
  v11 = *(void **)(v9 + 16);
  objc_msgSend(v11, "setDiscoveryFlags:", 0x2000000);
  objc_msgSend(v11, "setBleRSSIThresholdHint:", 4294967206);
  objc_msgSend(v11, "setBleScanRate:", 20);
  objc_msgSend(v11, "setBleScanRateScreenOff:", 20);
  objc_msgSend(v11, "setDiscoveryFlags:", 34078720);
  objc_msgSend(v11, "addDiscoveryType:", 6);
  v12 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v5);
  AsyncStream.init(_:bufferingPolicy:_:)(v12, v3, sub_1002CAA3C, v9, v12);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject(&unk_100720C18, 40, 7);
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v9;
  swift_retain(v9);
  v15 = sub_100252AF4(v6, (uint64_t)&unk_1007B9510, (uint64_t)v14);
  swift_release(v15);
  swift_release(v9);
  AsyncStream.makeAsyncIterator()(v2);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v2);
  v16 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[21] = v16;
  *v16 = v0;
  v16[1] = sub_1002C74C4;
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v0[18]);
}

uint64_t sub_1002C74C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_1002C7518, 0, 0);
}

uint64_t sub_1002C7518()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    *(_QWORD *)(v0 + 24) = v1;
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = v1;
    v6 = sub_100008384((uint64_t *)&unk_1007B91C8);
    AsyncStream.Continuation.yield(_:)(v0 + 24, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = type metadata accessor for Logger(0);
    sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
    v9 = v5;
    swift_retain_n(v7, 2);
    v10 = v9;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 56);
    if (v13)
    {
      v15 = swift_slowAlloc(22, -1);
      v28 = (_QWORD *)swift_slowAlloc(8, -1);
      v29 = swift_slowAlloc(32, -1);
      v30 = v29;
      *(_DWORD *)v15 = 136315394;
      *(_QWORD *)(v0 + 32) = v14;
      v16 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
      swift_retain(v14);
      v17 = String.init<A>(describing:)(v0 + 32, v16);
      v19 = v18;
      *(_QWORD *)(v15 + 4) = sub_100228BD8(v17, v18, &v30);
      swift_bridgeObjectRelease(v19);
      swift_release_n(v14, 2);
      *(_WORD *)(v15 + 12) = 2112;
      *(_QWORD *)(v15 + 14) = v10;
      *v28 = v1;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Yielded NearbyAction device: %@", (uint8_t *)v15, 0x16u);
      v20 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v28, 1, v20);
      swift_slowDealloc(v28, -1, -1);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_release_n(v14, 2);
    }
    v27 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 168) = v27;
    *v27 = v0;
    v27[1] = sub_1002C74C4;
    return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, *(_QWORD *)(v0 + 144));
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v21, *(_QWORD *)(v0 + 144));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002C7830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_100008384(&qword_1007B94B8);
  v6[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[9] = v8;
  v6[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  v6[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B94C0);
  v6[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[13] = v11;
  v6[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384(&qword_1007B94C8);
  v6[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[16] = v13;
  v6[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008384(&qword_1007B94D0);
  v6[18] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[19] = v15;
  v6[20] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C7940, 0, 0);
}

uint64_t sub_1002C7940()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v1 = v0[17];
  v19 = v0[16];
  v3 = v0[14];
  v2 = v0[15];
  v5 = v0[12];
  v4 = v0[13];
  v6 = v0[11];
  v8 = v0[5];
  v7 = v0[6];
  v9 = type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner();
  v10 = (_QWORD *)swift_allocObject(v9, 48, 7);
  v0[21] = v10;
  swift_bridgeObjectRetain(v8);
  swift_retain(v10);
  v10[4] = sub_10021EDD8((uint64_t)_swiftEmptyArrayStorage);
  v10[5] = &_swiftEmptySetSingleton;
  swift_release(v10);
  sub_1002C280C(v8);
  v11 = (void *)v10[2];
  objc_msgSend(v11, "setDiscoveryFlags:", 64);
  objc_msgSend(v11, "setBleScanRate:", 30);
  v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner) = v10;
  swift_retain(v10);
  swift_release(v12);
  v13 = sub_100221EDC(0, &qword_1007B94D8, CBDevice_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v5);
  AsyncStream.init(_:bufferingPolicy:_:)(v13, v3, sub_1002CA880, v10, v13);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_100720B50, 40, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v10;
  swift_retain(v10);
  v16 = sub_100252AF4(v6, (uint64_t)&unk_1007B94E8, (uint64_t)v15);
  swift_release(v16);
  AsyncStream.makeAsyncIterator()(v2);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v2);
  v17 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[22] = v17;
  *v17 = v0;
  v17[1] = sub_1002C7B60;
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v0[18]);
}

uint64_t sub_1002C7B60()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  return swift_task_switch(sub_1002C7BB4, 0, 0);
}

uint64_t sub_1002C7BB4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    *(_QWORD *)(v0 + 24) = v1;
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = v1;
    v6 = sub_100008384((uint64_t *)&unk_1007B91C8);
    AsyncStream.Continuation.yield(_:)(v0 + 24, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if (qword_1007B3DC8 != -1)
      swift_once(&qword_1007B3DC8, sub_1002C0F34);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = type metadata accessor for Logger(0);
    sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
    v9 = v5;
    swift_retain_n(v7, 2);
    v10 = v9;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 48);
    if (v13)
    {
      v15 = swift_slowAlloc(22, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      v30 = swift_slowAlloc(32, -1);
      v31 = v30;
      *(_DWORD *)v15 = 136315394;
      *(_QWORD *)(v0 + 32) = v14;
      v16 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
      swift_retain(v14);
      v17 = String.init<A>(describing:)(v0 + 32, v16);
      v19 = v18;
      *(_QWORD *)(v15 + 4) = sub_100228BD8(v17, v18, &v31);
      swift_bridgeObjectRelease(v19);
      swift_release_n(v14, 2);
      *(_WORD *)(v15 + 12) = 2112;
      *(_QWORD *)(v15 + 14) = v10;
      *v29 = v1;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Yielded NearbyInfo device: %@", (uint8_t *)v15, 0x16u);
      v20 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v29, 1, v20);
      swift_slowDealloc(v29, -1, -1);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_release_n(v14, 2);
    }
    v28 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 176) = v28;
    *v28 = v0;
    v28[1] = sub_1002C7B60;
    return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, *(_QWORD *)(v0 + 144));
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 112);
    v26 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v21, *(_QWORD *)(v0 + 144));
    swift_release(v22);
    swift_task_dealloc(v21);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002C7ED4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_1002C7EF0, 0, 0);
}

uint64_t sub_1002C7EF0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v1 = objc_msgSend(*(id *)(v0 + 24), "identifier");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v6 = *(uint64_t **)(v0 + 16);
  *v6 = v3;
  v6[1] = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C7F64(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v4 = sub_100008384(&qword_1007B7280);
  v5 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v7 = a2[1];
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  return swift_task_switch(sub_1002C7FCC, 0, 0);
}

void sub_1002C7FCC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  Date.init()(a1);
  v2 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)(v1 + 24);
    UUID.init(uuidString:)(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
    v5 = type metadata accessor for UUID(0);
    v6 = *(_QWORD *)(v5 - 8);
    isa = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v8 = *(_QWORD *)(v1 + 24);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    v9 = objc_msgSend(v3, "idsDeviceForBluetoothID:", isa);

    if (v9)
    {
      v11 = *(_QWORD *)(v1 + 16);
      v10 = *(_QWORD *)(v1 + 24);
      v12 = sub_100008384(&qword_1007B9470);
      v13 = (_QWORD *)(v11 + *(int *)(v12 + 48));
      v13[3] = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
      v13[4] = &off_10072BAC8;
      *v13 = v9;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
      swift_task_dealloc(v10);
      (*(void (**)(void))(v1 + 8))();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002C812C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v1 = v0;
  v2 = sub_100008384(&qword_1007B9480);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007B8AB0);
  v11 = swift_retain_n(v1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v36 = v8;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(32, -1);
    v35 = v10;
    v17 = v16;
    v39 = v1;
    v40[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v18 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
    v37 = v6;
    v19 = v18;
    swift_retain(v1);
    v20 = String.init<A>(describing:)(&v39, v19);
    v22 = v21;
    v39 = sub_100228BD8(v20, v21, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v15 + 4);
    swift_release_n(v1, 2);
    v23 = v22;
    v6 = v37;
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: Stopping", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v24 = v15;
    v8 = v36;
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v25 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, v40, 0, 0);
  sub_1002CACF4(v25, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000D0F0((uint64_t)v4, &qword_1007B9480);
    v26 = swift_retain_n(v1, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v38 = v1;
      v39 = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
      swift_retain(v1);
      v32 = String.init<A>(describing:)(&v38, v31);
      v34 = v33;
      v38 = sub_100228BD8(v32, v33, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v29 + 4);
      swift_release_n(v1, 2);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: No continuation to stop", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    AsyncStream.Continuation.finish()();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1002C8538()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, &qword_1007B9480);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner));
}

uint64_t sub_1002C857C()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, &qword_1007B9480);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002C85D4()
{
  return type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0);
}

uint64_t type metadata accessor for SDAuthenticationBioArmUnarmedDevices(uint64_t a1)
{
  uint64_t result;

  result = qword_1007B91B0;
  if (!qword_1007B91B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationBioArmUnarmedDevices);
  return result;
}

void sub_1002C8618(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1002C8690(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 104);
  }
}

void sub_1002C8690(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007B91C0)
  {
    v2 = sub_10021FF9C((uint64_t *)&unk_1007B91C8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007B91C0);
  }
}

uint64_t sub_1002C86F0(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v4 = a2 & 1;
  *(_QWORD *)(v2 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  v5 = swift_retain(v2);
  *(_DWORD *)(v2 + 36) = IOPMConnectionGetSystemCapabilities(v5);
  *(_QWORD *)(v2 + 40) = a1;
  *(_BYTE *)(v2 + 48) = v4;
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = a1;
  v8 = objc_msgSend(v6, "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "dictionaryForKey:", v9);

  if (v10
    && (v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v10, v12 = sub_1002C8874(v11), swift_bridgeObjectRelease(v11), v12))
  {
    swift_beginAccess(v2 + 16, v15, 1, 0);
    v13 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = v12;
    swift_release(v2);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    swift_release(v2);
  }
  swift_retain(v2);
  sub_1002C9A08();
  swift_release(v2);

  return v2;
}

unint64_t sub_1002C8874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t result;
  int64_t v22;
  uint64_t *v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  void (*v38)(char *);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  _QWORD v55[2];
  _QWORD *v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  _BYTE v71[32];
  _QWORD v72[2];
  uint64_t v73;

  v2 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v2);
  v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100008384(&qword_1007B54B0);
  __chkstk_darwin(v64);
  v63 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100008384(&qword_1007B9528);
  __chkstk_darwin(v62);
  v7 = (_QWORD *)((char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Date(0);
  v68 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v60 = (char *)v55 - v13;
  __chkstk_darwin(v12);
  v59 = (char *)v55 - v14;
  v67 = a1;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    sub_100008384(&qword_1007B9530);
    v16 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v15);
  }
  else
  {
    v16 = &_swiftEmptyDictionarySingleton;
  }
  v17 = *(_QWORD *)(v67 + 64);
  v58 = v67 + 64;
  v18 = -1;
  v19 = -1 << *(_BYTE *)(v67 + 32);
  v55[1] = ~v19;
  if (-v19 < 64)
    v18 = ~(-1 << -(char)v19);
  v20 = v18 & v17;
  v57 = (unint64_t)(63 - v19) >> 6;
  v66 = &v73;
  v56 = v16 + 8;
  result = swift_bridgeObjectRetain(v67);
  v22 = 0;
  v65 = (char *)&type metadata for Any + 8;
  v61 = v11;
  while (1)
  {
    if (v20)
    {
      v69 = (v20 - 1) & v20;
      v70 = v22;
      v25 = __clz(__rbit64(v20)) | (v22 << 6);
      v26 = v68;
    }
    else
    {
      v27 = v22 + 1;
      v26 = v68;
      if (__OFADD__(v22, 1))
        goto LABEL_37;
      if (v27 >= v57)
      {
LABEL_33:
        sub_10022E5B4(v67);
        return (unint64_t)v16;
      }
      v28 = *(_QWORD *)(v58 + 8 * v27);
      v29 = v22 + 1;
      if (!v28)
      {
        v29 = v22 + 2;
        if (v22 + 2 >= v57)
          goto LABEL_33;
        v28 = *(_QWORD *)(v58 + 8 * v29);
        if (!v28)
        {
          v29 = v22 + 3;
          if (v22 + 3 >= v57)
            goto LABEL_33;
          v28 = *(_QWORD *)(v58 + 8 * v29);
          if (!v28)
          {
            v29 = v22 + 4;
            if (v22 + 4 >= v57)
              goto LABEL_33;
            v28 = *(_QWORD *)(v58 + 8 * v29);
            if (!v28)
            {
              v30 = v22 + 5;
              if (v22 + 5 >= v57)
                goto LABEL_33;
              v28 = *(_QWORD *)(v58 + 8 * v30);
              if (!v28)
              {
                while (1)
                {
                  v29 = v30 + 1;
                  if (__OFADD__(v30, 1))
                    goto LABEL_38;
                  if (v29 >= v57)
                    goto LABEL_33;
                  v28 = *(_QWORD *)(v58 + 8 * v29);
                  ++v30;
                  if (v28)
                    goto LABEL_26;
                }
              }
              v29 = v22 + 5;
            }
          }
        }
      }
LABEL_26:
      v69 = (v28 - 1) & v28;
      v70 = v29;
      v25 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    v31 = (uint64_t)v66;
    v32 = (uint64_t *)(*(_QWORD *)(v67 + 48) + 16 * v25);
    v34 = *v32;
    v33 = v32[1];
    sub_10022E77C(*(_QWORD *)(v67 + 56) + 32 * v25, (uint64_t)v66);
    v72[0] = v34;
    v72[1] = v33;
    sub_10022E77C(v31, (uint64_t)v71);
    swift_bridgeObjectRetain_n(v33, 2);
    sub_10000D0F0((uint64_t)v72, &qword_1007B9538);
    v35 = swift_dynamicCast(v4, v71, v65, v8, 6);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    if (!v35)
    {
      v36(v4, 1, 1, v8);
      swift_bridgeObjectRelease(v33);
      sub_10000D0F0((uint64_t)v4, &qword_1007C4330);
      sub_10022E5B4(v67);
      swift_release(v16);
      return 0;
    }
    v36(v4, 0, 1, v8);
    v37 = v4;
    v38 = *(void (**)(char *))(v26 + 32);
    v39 = v60;
    v40 = v37;
    v38(v60);
    v41 = &v63[*(int *)(v64 + 48)];
    ((void (*)(char *, char *, uint64_t))v38)(v41, v39, v8);
    v42 = v62;
    v43 = (char *)v7 + *(int *)(v62 + 48);
    *v7 = v34;
    v7[1] = v33;
    ((void (*)(char *, char *, uint64_t))v38)(v43, v41, v8);
    v44 = (char *)v7 + *(int *)(v42 + 48);
    v45 = *v7;
    v46 = v7[1];
    v47 = v59;
    ((void (*)(char *, char *, uint64_t))v38)(v59, v44, v8);
    v48 = v61;
    ((void (*)(char *, char *, uint64_t))v38)(v61, v47, v8);
    result = sub_10045C200(v45, v46);
    v49 = result;
    if ((v50 & 1) != 0)
    {
      v23 = (uint64_t *)(v16[6] + 16 * result);
      v24 = swift_bridgeObjectRelease(v23[1]);
      *v23 = v45;
      v23[1] = v46;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t, __n128))(v26 + 40))(v16[7] + *(_QWORD *)(v26 + 72) * v49, v48, v8, v24);
      goto LABEL_8;
    }
    if (v16[2] >= v16[3])
      break;
    *(_QWORD *)((char *)v56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v51 = (uint64_t *)(v16[6] + 16 * result);
    *v51 = v45;
    v51[1] = v46;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v38)(v16[7] + *(_QWORD *)(v68 + 72) * result, v48, v8);
    v52 = v16[2];
    v53 = __OFADD__(v52, 1);
    v54 = v52 + 1;
    if (v53)
      goto LABEL_36;
    v16[2] = v54;
LABEL_8:
    v20 = v69;
    v22 = v70;
    v4 = v40;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1002C8E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;

  v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(128, &type metadata for Int8);
  *(_QWORD *)(v2 + 16) = 128;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  if (IOPMGetCapabilitiesDescription(v2 + 32, 128, a1))
  {
    v3 = sub_1002CAC08(v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease(0xE000000000000000);
    v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v4._object;
    String.append(_:)(v4);
    swift_bridgeObjectRelease(object);
    v6._countAndFlagsBits = 41;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    return 0xD00000000000001DLL;
  }
  return v3;
}

_DWORD *sub_1002C8F40@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1002C8F4C()
{
  unsigned int *v0;

  return sub_1002C8E28(*v0);
}

void sub_1002C8F54(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1002C8F5C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1002C8F70@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1002C8F84@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1002C8F98(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1002C8FC8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1002C8FF4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1002C9018(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1002C902C(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1002C9040(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1002C9054@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1002C9068(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1002C907C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1002C9090(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1002C90A4()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_1002C90B4(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1002C90C8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_100221D04(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1002C9104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_100720CB8, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_10000D0F0((uint64_t)v4, &qword_1007B68A0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_100720CE0, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1007B9548;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1007B9C70, v19);
  return swift_release(v21);
}

uint64_t sub_1002C92D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C9360, 0, 0);
}

id sub_1002C9360()
{
  uint64_t v0;
  id result;
  _QWORD *v2;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  *(_QWORD *)(v0 + 144) = result;
  if (result)
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1007BD67C);
    *(_QWORD *)(v0 + 152) = v2;
    *v2 = v0;
    v2[1] = sub_1002C93D4;
    return (id)sub_10038F058();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C93D4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(void **)(*v0 + 144);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));

  v3 = (_QWORD *)swift_task_alloc(dword_1007B9104);
  *(_QWORD *)(v1 + 160) = v3;
  *v3 = v5;
  v3[1] = sub_1002C943C;
  return sub_1002C5EB4();
}

uint64_t sub_1002C943C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_1002C9490, 0, 0);
}

uint64_t sub_1002C9490()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v1 = v0[11];
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[11];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v27 = v9;
    *(_DWORD *)v8 = 136315138;
    v0[9] = v7;
    v10 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain(v7);
    v11 = String.init<A>(describing:)(v0 + 9, v10);
    v13 = v12;
    v0[10] = sub_100228BD8(v11, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v8 + 4);
    swift_bridgeObjectRelease(v13);
    swift_release_n(v7, 2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Performing Registration when booted", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_release_n(v0[11], 2);
  }

  v14 = v0[17];
  v15 = v0[14];
  v25 = v0[16];
  v26 = v0[15];
  v17 = v0[12];
  v16 = v0[13];
  v18 = v0[11];
  v0[6] = sub_1002CACF0;
  v0[7] = v18;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10025BBB4;
  v0[5] = &unk_100720CF8;
  v19 = _Block_copy(v0 + 2);
  v20 = swift_retain(v18);
  static DispatchQoS.unspecified.getter(v20);
  v0[8] = _swiftEmptyArrayStorage;
  v21 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100008384((uint64_t *)&unk_1007B6410);
  v23 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v22, v23, v17, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v15, v19);
  _Block_release(v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v26);
  swift_release(v0[7]);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1002C9790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 40);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1007B3DC8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3DC8, sub_1002C0F34);
LABEL_3:
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007B8AB0);
  v9 = swift_retain_n(v1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v18 = v1;
    v19 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain(v1);
    v15 = String.init<A>(describing:)(&v18, v14);
    v17 = v16;
    v18 = sub_100228BD8(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: Starting registration", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  if (qword_1007B42C8 != -1)
    swift_once(&qword_1007B42C8, sub_1005478B0);
  if (qword_1007D88A8)
    sub_1005464E4(*(_BYTE *)(v1 + 48));
}

void sub_1002C9A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B8AB0);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v1;
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain(v1);
    v9 = String.init<A>(describing:)(&v13, v8);
    v11 = v10;
    v13 = sub_100228BD8(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Adding Observer for keyBagChanged", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1007B3E00 != -1)
    swift_once(&qword_1007B3E00, sub_1002D4788);
  objc_msgSend(v12, "addObserver:selector:name:object:", v1, "handleKeyBagStateChanged", qword_1007D80D8, 0);

}

uint64_t sub_1002C9C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v0 + 40);
  v9 = swift_allocObject(&unk_100720C68, 24, 7);
  swift_weakInit(v9 + 16, v0);
  aBlock[4] = sub_1002CAC50;
  v20 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100720C80;
  v10 = _Block_copy(aBlock);
  v11 = swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  v18 = _swiftEmptyArrayStorage;
  v12 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_100008384((uint64_t *)&unk_1007B6410);
  v14 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v20;
  swift_release(v9);
  return swift_release(v15);
}

unsigned __int8 *sub_1002C9E28(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *result;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = (unsigned __int8 *)swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    if (qword_1007B42C8 != -1)
      swift_once(&qword_1007B42C8, sub_1005478B0);
    if (qword_1007D88A8)
    {
      result = (unsigned __int8 *)objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
      if (!result)
      {
        __break(1u);
        return result;
      }
      v4 = result;
      v5 = objc_msgSend(result, "deviceKeyBagLocked");

      if (v5 != v3[48])
        sub_1002C9790();
    }
    return (unsigned __int8 *)swift_release(v3);
  }
  return result;
}

uint64_t sub_1002C9F2C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  id v33;
  const char *v34;
  Class isa;
  NSString v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45[3];

  v3 = v2;
  v6 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v6);
  v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v38 - v14;
  static Date.now.getter(v13);
  if (qword_1007B3DC8 != -1)
    swift_once(&qword_1007B3DC8, sub_1002C0F34);
  v16 = type metadata accessor for Logger(0);
  sub_100221DF8(v16, (uint64_t)qword_1007B8AB0);
  v42 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v42(v12, v15, v8);
  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v41 = a1;
  if (v20)
  {
    v21 = swift_slowAlloc(22, -1);
    v40 = v15;
    v22 = v21;
    v38 = swift_slowAlloc(64, -1);
    v45[0] = v38;
    *(_DWORD *)v22 = 136315394;
    swift_bridgeObjectRetain(a2);
    v44 = sub_100228BD8(a1, (unint64_t)a2, v45);
    v39 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v22 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v22 + 12) = 2080;
    v23 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v8, v23);
    v26 = (const char *)v25;
    v44 = sub_100228BD8(v24, v25, v45);
    v3 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v22 + 14);
    v27 = swift_bridgeObjectRelease(v26);
    v28 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    v28(v12, v8, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Updating last used for device %s to %s", (uint8_t *)v22, 0x16u);
    v29 = v38;
    swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v30 = v22;
    v15 = v40;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
    v28 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    ((void (*)(char *, uint64_t))v28)(v12, v8);
  }

  v31 = (uint64_t)v43;
  v42(v43, v15, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v31, 0, 1, v8);
  *(_QWORD *)&v32 = swift_beginAccess(v3 + 16, v45, 33, 0).n128_u64[0];
  swift_bridgeObjectRetain(a2, v32);
  sub_1003950F0(v31, v41, (uint64_t)a2);
  swift_endAccess(v45);
  v33 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v34 = *(const char **)(v3 + 16);
  swift_bridgeObjectRetain(v34);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setObject:forKey:", isa, v36);

  return ((uint64_t (*)(char *, uint64_t))v28)(v15, v8);
}

void sub_1002CA320()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

}

uint64_t sub_1002CA33C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t type metadata accessor for SDAuthenticationRegistrationManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary35SDAuthenticationRegistrationManager);
}

ValueMetadata *type metadata accessor for SDAuthenticationRegistrationManager.Capabilities()
{
  return &type metadata for SDAuthenticationRegistrationManager.Capabilities;
}

unint64_t sub_1002CA39C()
{
  unint64_t result;

  result = qword_1007B9448;
  if (!qword_1007B9448)
  {
    result = swift_getWitnessTable(&unk_1005D1824, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_1007B9448);
  }
  return result;
}

unint64_t sub_1002CA3E4()
{
  unint64_t result;

  result = qword_1007B9450;
  if (!qword_1007B9450)
  {
    result = swift_getWitnessTable(&unk_1005D17F4, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_1007B9450);
  }
  return result;
}

unint64_t sub_1002CA42C()
{
  unint64_t result;

  result = qword_1007B9458;
  if (!qword_1007B9458)
  {
    result = swift_getWitnessTable(&unk_1005D184C, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_1007B9458);
  }
  return result;
}

unint64_t sub_1002CA474()
{
  unint64_t result;

  result = qword_1007B9460;
  if (!qword_1007B9460)
  {
    result = swift_getWitnessTable(&unk_1005D1884, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_1007B9460);
  }
  return result;
}

uint64_t sub_1002CA4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CA500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CA548()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002CA56C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C67FC(a1, v1);
}

uint64_t sub_1002CA578(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B948C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002C6894(a1, v5, v6, v7, v8);
}

uint64_t sub_1002CA610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002CA6AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1007B949C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D098;
  return sub_1002C7190(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1002CA75C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 4));
  swift_release(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002CA7E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1007B94AC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D098;
  return sub_1002C7830(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1002CA880(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C459C(a1, v1, (uint64_t)&unk_100720B78, (uint64_t)&unk_1007B94F8);
}

uint64_t sub_1002CA8A8()
{
  return sub_100232EC8(40);
}

uint64_t sub_1002CA8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B94E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  v4 = (_QWORD *)swift_task_alloc(dword_1007B8CC4);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_10000D12C;
  v4[15] = v2;
  return swift_task_switch(sub_1002C2934, 0, 0);
}

uint64_t sub_1002CA934(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B94F4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002C3AEC(a1, v5, v6, v7, v8);
}

void sub_1002CA9CC(uint64_t a1)
{
  uint64_t v1;

  sub_1002C2DEC(a1, v1);
}

uint64_t sub_1002CA9D4()
{
  return sub_1002CAE68((uint64_t *)&unk_1007B91C8);
}

void sub_1002CA9E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8) + 80);
  sub_1002C2F48(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1002CAA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002CAA34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002CAA3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C459C(a1, v1, (uint64_t)&unk_100720C40, (uint64_t)&unk_1007B9520);
}

uint64_t sub_1002CAA64()
{
  return sub_100232EC8(40);
}

uint64_t sub_1002CAA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B950C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v4 = (_QWORD *)swift_task_alloc(dword_1007B8CC4);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_10000D098;
  v4[15] = v2;
  return swift_task_switch(sub_1002C2934, 0, 0);
}

uint64_t sub_1002CAAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384((uint64_t *)&unk_1007B91C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002CAB70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B91C8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B951C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002C46EC(a1, v5, v6, v7, v8);
}

uint64_t sub_1002CAC08(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = *(unsigned __int8 *)(result + 32);
  result += 32;
  if (v3)
  {
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return static String._fromUTF8Repairing(_:)(result, v4);
    }
    __break(1u);
    goto LABEL_9;
  }
  v4 = 0;
  return static String._fromUTF8Repairing(_:)(result, v4);
}

unsigned __int8 *sub_1002CAC50()
{
  uint64_t v0;

  return sub_1002C9E28(v0);
}

uint64_t sub_1002CAC58()
{
  return sub_100232EC8(40);
}

uint64_t sub_1002CAC60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007B9544);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1002C92D8(a1, v4, v5, v6);
}

uint64_t sub_1002CACCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002CACF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002CAD3C(uint64_t a1)
{
  uint64_t v1;

  sub_1002C50E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_1002CAD48()
{
  return sub_1002CAE68(&qword_1007B9568);
}

uint64_t sub_1002CAD54(void *a1)
{
  return sub_1002CAD60(a1, "%s: yielding lost device: %@");
}

uint64_t sub_1002CAD60(void *a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007B9568) - 8) + 80);
  return sub_1002C5B54(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_1002CADB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384(&qword_1007B9568);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002CAE1C(uint64_t a1)
{
  sub_100008384(&qword_1007B9568);
  return sub_1002C5E2C(a1);
}

uint64_t sub_1002CAE5C()
{
  return sub_1002CAE68(&qword_1007B9568);
}

uint64_t sub_1002CAE68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100008384(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1002CAED8(void *a1)
{
  return sub_1002CAD60(a1, "%s: yielding found device: %@");
}

uint64_t sub_1002CAEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384(&qword_1007B9568);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002CAF64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007B9568) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1007B9574);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000D098;
  return sub_1002C55FC(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1002CB000()
{
  return sub_100232EC8(48);
}

uint64_t sub_1002CB008(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007B958C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_1002C1088(a1, v4, v5, v7, v6);
}

uint64_t sub_1002CB080()
{
  return sub_100232EC8(48);
}

uint64_t sub_1002CB088()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1007B959C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000D098;
  v2 = (_QWORD *)swift_task_alloc(dword_1007B8AF4);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10000D098;
  return sub_1002C1B10(60);
}

void sub_1002CB0F4(uint64_t a1)
{
  uint64_t v1;

  sub_1002C14B4(a1, v1);
}

uint64_t SDAirDropHashError.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002CB17C + 4 * byte_1005D19B0[a1]))(0xD000000000000010, 0x8000000100614D60);
}

uint64_t sub_1002CB1D4()
{
  return 0x6D694C2065746152;
}

BOOL static SDAirDropHashError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SDAirDropHashError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int SDAirDropHashError.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

unint64_t sub_1002CB270()
{
  unint64_t result;

  result = qword_1007B95B0;
  if (!qword_1007B95B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SDAirDropHashError, &type metadata for SDAirDropHashError);
    atomic_store(result, (unint64_t *)&qword_1007B95B0);
  }
  return result;
}

uint64_t sub_1002CB2B4()
{
  unsigned __int8 *v0;

  return SDAirDropHashError.description.getter(*v0);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHashError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1002CB308 + 4 * byte_1005D19BB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1002CB33C + 4 * byte_1005D19B6[v4]))();
}

uint64_t sub_1002CB33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CB344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CB34CLL);
  return result;
}

uint64_t sub_1002CB358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CB360);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1002CB364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CB36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashError()
{
  return &type metadata for SDAirDropHashError;
}

uint64_t sub_1002CB388(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002CB464, static AirDropActor.shared, 0);
}

void sub_1002CB464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C670);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C690, 2, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerAppStoreLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary36SDAirDropContentHandlerAppStoreLinks);
}

uint64_t sub_1002CB740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerAppStoreLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002CB774(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007B95E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1002CB388(a1);
}

void sub_1002CB7C8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v3 = SFAirDropReceive.AskRequest.itemsDescription.getter(a1);
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    swift_bridgeObjectRetain("ITUNES_STORE_LINK_ITUNES_U");
    v7._countAndFlagsBits = 95;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 0xD000000000000013;
    v8._object = "ITUNES_STORE_LINK_ITUNES_U";
    String.append(_:)(v8);
    swift_bridgeObjectRelease("ITUNES_STORE_LINK_ITUNES_U");
    if ((a2 & 1) != 0)
    {
      v9._countAndFlagsBits = 0x4C4154495041435FLL;
      v9._object = (void *)0xEC00000044455A49;
      String.append(_:)(v9);
    }
    v10._countAndFlagsBits = 0x545845545FLL;
    v10._object = (void *)0xE500000000000000;
    String.append(_:)(v10);
    v11 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(&qword_10071C318, 1, v11);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152);
    v14 = (id)SFLocalizedStringForKey(v12, v13);

    if (v14)
    {
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v18 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v19 = swift_allocObject(v18, 72, 7);
      *(_OWORD *)(v19 + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(v19 + 56) = &type metadata for String;
      *(_QWORD *)(v19 + 64) = sub_100299AB0();
      *(_QWORD *)(v19 + 32) = v5;
      *(_QWORD *)(v19 + 40) = v6;
      static String.localizedStringWithFormat(_:_:)(v15, v17, v19);
      swift_bridgeObjectRelease(v17);
LABEL_10:
      swift_bridgeObjectRelease(v19);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(0xE800000000000000);
    v20._countAndFlagsBits = 95;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    String.append(_:)((Swift::String)xmmword_10071C350);
    swift_bridgeObjectRelease(0xE800000000000000);
    if ((a2 & 1) != 0)
    {
      v21._countAndFlagsBits = 0x4C4154495041435FLL;
      v21._object = (void *)0xEC00000044455A49;
      String.append(_:)(v21);
    }
    v22._countAndFlagsBits = 0x545845545FLL;
    v22._object = (void *)0xE500000000000000;
    String.append(_:)(v22);
    v23 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(&xmmword_10071C350, 1, v23);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152);
    v26 = (id)SFLocalizedStringForKey(v24, v25);

    if (v26)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v19 = v28;

      static String.localizedStringWithFormat(_:_:)(v27, v19, _swiftEmptyArrayStorage);
      goto LABEL_10;
    }
  }
  __break(1u);
}

uint64_t sub_1002CBB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B96A0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B96A0);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_1002CBBB8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  double v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  const char *v59;
  const char *v60;
  double v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  const char *v65;
  const char *v66;
  double v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  const char *v71;
  const char *v72;
  double v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  const char *v77;
  const char *v78;
  double v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  const char *v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v2 = type metadata accessor for DateComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B9798);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v93 - v10;
  v12 = objc_msgSend(a1, "emailAddresses");
  v13 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_100008384(&qword_1007B9790);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v49 = v14;
    else
      v49 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease((const char *)v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = objc_msgSend(a1, "phoneNumbers", swift_bridgeObjectRelease((const char *)v14).n128_f64[0]);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v13);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v50 = v17;
    else
      v50 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease((const char *)v17);
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v19 = swift_bridgeObjectRelease((const char *)v17).n128_u64[0];
  if (__OFADD__(v15, v18))
  {
    __break(1u);
LABEL_42:
    v13(v9, 1, 1, v2);
    goto LABEL_43;
  }
  if (v15 + v18 != 1)
    return 0;
  v20 = objc_msgSend(a1, "postalAddresses", v19);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v13);

  if ((unint64_t)v21 >> 62)
  {
    v82 = v21 < 0 ? v21 : v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v82);
    swift_bridgeObjectRelease((const char *)v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v23 = swift_bridgeObjectRelease((const char *)v21).n128_u64[0];
  if (v22)
    return 0;
  v24 = objc_msgSend(a1, "urlAddresses", v23);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v13);

  if ((unint64_t)v25 >> 62)
  {
    v83 = v25 < 0 ? v25 : v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease((const char *)v25);
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v27 = swift_bridgeObjectRelease((const char *)v25).n128_u64[0];
  if (v26)
    return 0;
  v28 = objc_msgSend(a1, "contactRelations", v27);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v13);

  if ((unint64_t)v29 >> 62)
  {
    v84 = v29 < 0 ? v29 : v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v29);
    v30 = _CocoaArrayWrapper.endIndex.getter(v84);
    swift_bridgeObjectRelease((const char *)v29);
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v31 = swift_bridgeObjectRelease((const char *)v29).n128_u64[0];
  if (v30)
    return 0;
  v32 = objc_msgSend(a1, "socialProfiles", v31);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v13);

  if ((unint64_t)v33 >> 62)
  {
    v85 = v33 < 0 ? v33 : v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v33);
    v34 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease((const char *)v33);
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v35 = swift_bridgeObjectRelease((const char *)v33).n128_u64[0];
  if (v34)
    return 0;
  v36 = objc_msgSend(a1, "instantMessageAddresses", v35);
  v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v13);

  if ((unint64_t)v37 >> 62)
  {
    v86 = v37 < 0 ? v37 : v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v37);
    v38 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease((const char *)v37);
  }
  else
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v39 = swift_bridgeObjectRelease((const char *)v37).n128_u64[0];
  if (v38)
    return 0;
  v40 = objc_msgSend(a1, "dates", v39);
  v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v13);

  if ((unint64_t)v41 >> 62)
  {
    v92 = v41 < 0 ? v41 : v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v41);
    v42 = _CocoaArrayWrapper.endIndex.getter(v92);
    swift_bridgeObjectRelease((const char *)v41);
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v43 = swift_bridgeObjectRelease((const char *)v41).n128_u64[0];
  if (v42)
    return 0;
  v44 = objc_msgSend(a1, "birthday", v43);
  if (v44)
  {
    v45 = v44;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v5, v2);
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
    {
      v46 = (uint64_t)v11;
LABEL_32:
      sub_10000D0F0(v46, &qword_1007B9798);
      return 0;
    }
  }
  else
  {
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 1, 1, v2);
  }
  sub_10000D0F0((uint64_t)v11, &qword_1007B9798);
  v47 = objc_msgSend(a1, "nonGregorianBirthday");
  if (!v47)
    goto LABEL_42;
  v48 = v47;
  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  v13(v9, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
  {
    v46 = (uint64_t)v9;
    goto LABEL_32;
  }
LABEL_43:
  sub_10000D0F0((uint64_t)v9, &qword_1007B9798);
  v51 = objc_msgSend(a1, "note");
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v54 = v53;

  *(_QWORD *)&v55 = swift_bridgeObjectRelease(v54).n128_u64[0];
  v56 = ((unint64_t)v54 >> 56) & 0xF;
  if (((unint64_t)v54 & 0x2000000000000000) == 0)
    v56 = v52 & 0xFFFFFFFFFFFFLL;
  if (v56)
    return 0;
  v57 = objc_msgSend(a1, "middleName", v55);
  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
  v60 = v59;

  *(_QWORD *)&v61 = swift_bridgeObjectRelease(v60).n128_u64[0];
  v62 = ((unint64_t)v60 >> 56) & 0xF;
  if (((unint64_t)v60 & 0x2000000000000000) == 0)
    v62 = v58 & 0xFFFFFFFFFFFFLL;
  if (v62)
    return 0;
  v63 = objc_msgSend(a1, "nickname", v61);
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
  v66 = v65;

  *(_QWORD *)&v67 = swift_bridgeObjectRelease(v66).n128_u64[0];
  v68 = ((unint64_t)v66 >> 56) & 0xF;
  if (((unint64_t)v66 & 0x2000000000000000) == 0)
    v68 = v64 & 0xFFFFFFFFFFFFLL;
  if (v68)
    return 0;
  v69 = objc_msgSend(a1, "organizationName", v67);
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  *(_QWORD *)&v73 = swift_bridgeObjectRelease(v72).n128_u64[0];
  v74 = ((unint64_t)v72 >> 56) & 0xF;
  if (((unint64_t)v72 & 0x2000000000000000) == 0)
    v74 = v70 & 0xFFFFFFFFFFFFLL;
  if (v74)
    return 0;
  v75 = objc_msgSend(a1, "departmentName", v73);
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
  v78 = v77;

  *(_QWORD *)&v79 = swift_bridgeObjectRelease(v78).n128_u64[0];
  v80 = ((unint64_t)v78 >> 56) & 0xF;
  if (((unint64_t)v78 & 0x2000000000000000) == 0)
    v80 = v76 & 0xFFFFFFFFFFFFLL;
  if (v80)
    return 0;
  v87 = objc_msgSend(a1, "jobTitle", v79);
  v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
  v90 = v89;

  swift_bridgeObjectRelease(v90);
  v91 = ((unint64_t)v90 >> 56) & 0xF;
  if (((unint64_t)v90 & 0x2000000000000000) == 0)
    v91 = v88 & 0xFFFFFFFFFFFFLL;
  return v91 == 0;
}

uint64_t sub_1002CC354(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerExchange()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary31SDAirDropContentHandlerExchange);
}

uint64_t sub_1002CC400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerExchange();
  result = swift_allocObject(v2, 16, 7);
  *a1 = result;
  return result;
}

uint64_t sub_1002CC430(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = type metadata accessor for SFAirDrop.TransferType(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002CC4C0, static AirDropActor.shared, 0);
}

uint64_t sub_1002CC4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = SFAirDropReceive.AskRequest.type.getter();
  v5 = SFAirDrop.TransferType.isOnlyExchange.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v5 & 1);
}

void sub_1002CC52C(uint64_t a1, char a2)
{
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  id v10;

  swift_bridgeObjectRetain("must override %@");
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xD000000000000013;
  v4._object = "must override %@";
  String.append(_:)(v4);
  swift_bridgeObjectRelease("must override %@");
  if ((a2 & 1) != 0)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  v7 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(&qword_10071C238, 1, v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152, 0x545F4E5245444F4DLL);
  v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002CC6A8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v2 + 521) = a2;
  *(_QWORD *)(v2 + 336) = a1;
  v3 = sub_100008384(&qword_1007B6BE8);
  *(_QWORD *)(v2 + 344) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 352) = v4;
  *(_QWORD *)(v2 + 360) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  *(_QWORD *)(v2 + 368) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  *(_QWORD *)(v2 + 376) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 384) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 392) = swift_task_alloc(v8);
  *(_QWORD *)(v2 + 400) = swift_task_alloc(v8);
  v9 = type metadata accessor for URLQueryItem(0);
  *(_QWORD *)(v2 + 408) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v2 + 416) = v10;
  *(_QWORD *)(v2 + 424) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URLComponents(0);
  *(_QWORD *)(v2 + 432) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v2 + 440) = v12;
  *(_QWORD *)(v2 + 448) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  *(_QWORD *)(v2 + 456) = static AirDropActor.shared;
  return swift_task_switch(sub_1002CC7F0, v13, 0);
}

uint64_t sub_1002CC7F0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  __n128 v29;
  const char *v30;
  uint64_t v31;
  double v32;
  const char *v33;
  NSString v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  const char *v50;
  double v51;
  const char *v52;
  NSString v53;
  unint64_t v54;
  id v55;
  unint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  id v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  const char *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  const char *v146;
  unint64_t v147;

  v2 = SFAirDrop.ContactInfo.vcard.getter();
  v3 = vCardContactProvider.init(data:)(v2);
  v5 = v4;
  v6 = vCardContactProvider.contacts()();
  sub_100225AB4(v3, v5);
  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_64:
    swift_bridgeObjectRelease((const char *)v6);
    if (qword_1007B3DD0 == -1)
    {
LABEL_65:
      v116 = type metadata accessor for Logger(0);
      v117 = sub_100221DF8(v116, (uint64_t)qword_1007B96A0);
      v118 = Logger.logObject.getter(v117);
      v119 = static os_log_type_t.error.getter(v118);
      if (os_log_type_enabled(v118, v119))
      {
        v120 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v120 = 0;
        _os_log_impl((void *)&_mh_execute_header, v118, v119, "Failed to import contact which could not be deserialized", v120, 2u);
        swift_slowDealloc(v120, -1, -1);
      }

      v121 = type metadata accessor for SFAirDropReceive.Failure(0);
      v122 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      swift_allocError(v121, v122, 0, 0);
      v124 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v121 - 8) + 104))(v123, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v121);
      swift_willThrow(v124);
      goto LABEL_68;
    }
LABEL_71:
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
    goto LABEL_65;
  }
  if (v6 < 0)
    v114 = v6;
  else
    v114 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v6);
  v115 = _CocoaArrayWrapper.endIndex.getter(v114);
  swift_bridgeObjectRelease((const char *)v6);
  if (!v115)
    goto LABEL_64;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_71;
  }
  v7 = *(id *)(v6 + 32);
LABEL_6:
  v8 = v7;
  v9 = (uint64_t *)(v0 + 200);
  *(_QWORD *)(v0 + 464) = v7;
  swift_bridgeObjectRelease((const char *)v6);
  *(_QWORD *)(v0 + 200) = 0;
  *(_QWORD *)(v0 + 208) = 0;
  if (sub_1002CBBB8(v8))
  {
    v142 = objc_msgSend(objc_allocWithZone((Class)SFContactInfo), "init");
    *(_QWORD *)(v0 + 472) = v142;
    v10 = objc_msgSend(v8, "emailAddresses");
    v11 = sub_100008384(&qword_1007B9790);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v130 = v12;
      else
        v130 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v12);
      v13 = _CocoaArrayWrapper.endIndex.getter(v130);
      swift_bridgeObjectRelease((const char *)v12);
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v13)
    {
      v139 = v11;
      v146 = (const char *)_swiftEmptyArrayStorage;
      sub_100229940(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0)
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        swift_once(&qword_1007B3DD0, sub_1002CBB28);
LABEL_51:
        v78 = sub_100221DF8(v139, (uint64_t)qword_1007B96A0);
        v79 = Logger.logObject.getter(v78);
        v80 = static os_log_type_t.error.getter(v79);
        v141 = v0;
        if (os_log_type_enabled(v79, v80))
        {
          v81 = (uint8_t *)swift_slowAlloc(12, -1);
          v82 = swift_slowAlloc(32, -1);
          v145 = v82;
          *(_DWORD *)v81 = 136315138;
          v83 = swift_beginAccess(v9, v0 + 176, 0, 0).n128_u64[0];
          v84 = *(const char **)(v0 + 208);
          v144 = v1;
          v140 = v0 + 272;
          if (v84)
          {
            v132 = *v9;
            v85 = *(const char **)(v0 + 208);
          }
          else
          {
            v132 = 0xD000000000000015;
            v146 = 0;
            v147 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            v83 = swift_bridgeObjectRelease((const char *)0xE000000000000000).n128_u64[0];
            v85 = (const char *)0x8000000100612DF0;
          }
          v135 = *(void **)(v0 + 464);
          v136 = *(_QWORD *)(v0 + 440);
          v137 = *(_QWORD *)(v0 + 432);
          v138 = *(_QWORD *)(v0 + 448);
          v104 = *(_QWORD *)(v0 + 424);
          v105 = v0;
          v106 = *(_QWORD *)(v0 + 416);
          v133 = *(_QWORD *)(v105 + 408);
          v134 = v104;
          swift_bridgeObjectRetain(v84, *(double *)&v83);
          *(_QWORD *)(v105 + 272) = sub_100228BD8(v132, (unint64_t)v85, &v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v140, v105 + 280, v81 + 4);
          swift_bridgeObjectRelease(v85);
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to create URL to launch Contacts for contact ID %s", v81, 0xCu);
          swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v82, -1, -1);
          swift_slowDealloc(v81, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v134, v133);
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v138, v137);
          v1 = v144;
        }
        else
        {
          v96 = (_QWORD *)v0;
          v97 = *(void **)(v0 + 464);
          v99 = v96[55];
          v98 = v96[56];
          v101 = v96[53];
          v100 = v96[54];
          v102 = v96[51];
          v103 = v96[52];

          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        }
        swift_beginAccess(v9, v1, 0, 0);
        v0 = v141;
        goto LABEL_59;
      }
      v14 = 0;
      v15 = v146;
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
        else
          v16 = *(id *)(v12 + 8 * v14 + 32);
        v17 = v16;
        v18 = objc_msgSend(v16, "value");
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v1 = v20;

        v146 = v15;
        v22 = *((_QWORD *)v15 + 2);
        v21 = *((_QWORD *)v15 + 3);
        v9 = (uint64_t *)(v22 + 1);
        if (v22 >= v21 >> 1)
        {
          sub_100229940(v21 > 1, v22 + 1, 1);
          v15 = v146;
        }
        ++v14;
        *((_QWORD *)v15 + 2) = v9;
        v23 = &v15[16 * v22];
        *((_QWORD *)v23 + 4) = v19;
        *((_QWORD *)v23 + 5) = v1;
      }
      while (v13 != v14);
      *(_QWORD *)&v32 = swift_bridgeObjectRelease((const char *)v12).n128_u64[0];
      v11 = v139;
      if (*((_QWORD *)v15 + 2))
        goto LABEL_27;
    }
    else
    {
      *(_QWORD *)&v32 = swift_bridgeObjectRelease((const char *)v12).n128_u64[0];
      v15 = (const char *)_swiftEmptyArrayStorage;
      if (_swiftEmptyArrayStorage[2])
      {
LABEL_27:
        v9 = (uint64_t *)*((_QWORD *)v15 + 4);
        v33 = (const char *)*((_QWORD *)v15 + 5);
        swift_bridgeObjectRetain(v33, v32);
        swift_bridgeObjectRelease(v15);
        v34 = String._bridgeToObjectiveC()();
        v35 = swift_bridgeObjectRelease(v33).n128_u64[0];
LABEL_30:
        objc_msgSend(v142, "setEmailAddress:", v34, *(double *)&v35);

        v36 = objc_msgSend(v8, "phoneNumbers");
        v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v11);

        if ((unint64_t)v37 >> 62)
        {
          if (v37 < 0)
            v131 = v37;
          else
            v131 = v37 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain((const char *)v37);
          v38 = _CocoaArrayWrapper.endIndex.getter(v131);
          swift_bridgeObjectRelease((const char *)v37);
        }
        else
        {
          v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (!v38)
        {
          *(_QWORD *)&v51 = swift_bridgeObjectRelease((const char *)v37).n128_u64[0];
          v40 = (const char *)_swiftEmptyArrayStorage;
          if (_swiftEmptyArrayStorage[2])
          {
LABEL_42:
            v52 = (const char *)*((_QWORD *)v40 + 5);
            swift_bridgeObjectRetain(v52, v51);
            swift_bridgeObjectRelease(v40);
            v53 = String._bridgeToObjectiveC()();
            v54 = swift_bridgeObjectRelease(v52).n128_u64[0];
LABEL_47:
            objc_msgSend(v142, "setPhoneNumber:", v53, *(double *)&v54);

            v62 = objc_msgSend(objc_allocWithZone((Class)SFClient), "init");
            *(_QWORD *)(v0 + 480) = v62;
            *(_QWORD *)(v0 + 56) = v0 + 256;
            *(_QWORD *)(v0 + 16) = v0;
            *(_QWORD *)(v0 + 24) = sub_1002CD588;
            v64 = swift_continuation_init(v0 + 16, 1, v63);
            *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
            *(_QWORD *)(v0 + 88) = 0x40000000;
            *(_QWORD *)(v0 + 96) = sub_1002CC354;
            *(_QWORD *)(v0 + 104) = &unk_100721230;
            *(_QWORD *)(v0 + 112) = v64;
            objc_msgSend(v62, "findContact:completion:", v142, v0 + 80);
            return swift_continuation_await(v0 + 16);
          }
LABEL_46:
          v54 = swift_bridgeObjectRelease(v40, v51).n128_u64[0];
          v53 = 0;
          goto LABEL_47;
        }
        v146 = (const char *)_swiftEmptyArrayStorage;
        sub_100229940(0, v38 & ~(v38 >> 63), 0);
        if ((v38 & 0x8000000000000000) == 0)
        {
          v39 = 0;
          v40 = v146;
          do
          {
            if ((v37 & 0xC000000000000001) != 0)
              v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v37);
            else
              v41 = *(id *)(v37 + 8 * v39 + 32);
            v42 = v41;
            v43 = objc_msgSend(v41, "value");
            v44 = objc_msgSend(v43, "stringValue");

            v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
            v47 = v46;

            v146 = v40;
            v49 = *((_QWORD *)v40 + 2);
            v48 = *((_QWORD *)v40 + 3);
            if (v49 >= v48 >> 1)
            {
              sub_100229940(v48 > 1, v49 + 1, 1);
              v40 = v146;
            }
            ++v39;
            *((_QWORD *)v40 + 2) = v49 + 1;
            v50 = &v40[16 * v49];
            *((_QWORD *)v50 + 4) = v45;
            *((_QWORD *)v50 + 5) = v47;
          }
          while (v38 != v39);
          *(_QWORD *)&v51 = swift_bridgeObjectRelease((const char *)v37).n128_u64[0];
          if (*((_QWORD *)v40 + 2))
            goto LABEL_42;
          goto LABEL_46;
        }
        goto LABEL_81;
      }
    }
    v35 = swift_bridgeObjectRelease(v15, v32).n128_u64[0];
    v34 = 0;
    goto LABEL_30;
  }
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100221DF8(v24, (uint64_t)qword_1007B96A0);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Creating a new contact because many fields are being shared", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v30 = *(const char **)(v0 + 208);
  if (v30)
  {
    v31 = *(_QWORD *)(v0 + 200);
    if ((*(_BYTE *)(v0 + 521) & 1) != 0)
    {
LABEL_25:

LABEL_59:
      v107 = *(_QWORD *)(v0 + 424);
      v109 = *(_QWORD *)(v0 + 392);
      v108 = *(_QWORD *)(v0 + 400);
      v111 = *(_QWORD *)(v0 + 360);
      v110 = *(_QWORD *)(v0 + 368);
      v113 = *(_QWORD *)(v0 + 200);
      v112 = *(_QWORD *)(v0 + 208);
      swift_task_dealloc(*(_QWORD *)(v0 + 448));
      swift_task_dealloc(v107);
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      swift_task_dealloc(v111);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v113, v112);
    }
LABEL_49:
    v139 = v24;
    v68 = *(_QWORD *)(v0 + 416);
    v69 = *(_QWORD *)(v0 + 424);
    v70 = *(_QWORD *)(v0 + 408);
    v71 = *(_QWORD *)(v0 + 384);
    v143 = *(id *)(v0 + 376);
    v72 = *(_QWORD *)(v0 + 368);
    URLComponents.init()(v29);
    URLComponents.scheme.setter(0x746361746E6F63, 0xE700000000000000);
    URLComponents.host.setter(2003789939, 0xE400000000000000);
    swift_bridgeObjectRetain(v30);
    URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v31, v30);
    swift_bridgeObjectRelease(v30);
    v73 = sub_100008384(&qword_1007B9778);
    v74 = *(unsigned __int8 *)(v68 + 80);
    v75 = (v74 + 32) & ~v74;
    v76 = swift_allocObject(v73, v75 + *(_QWORD *)(v68 + 72), v74 | 7);
    *(_OWORD *)(v76 + 16) = xmmword_1005CD2A0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v76 + v75, v69, v70);
    v77 = URLComponents.queryItems.setter(v76);
    URLComponents.url.getter(v77);
    if ((*(unsigned int (**)(uint64_t, uint64_t, id))(v71 + 48))(v72, 1, v143) != 1)
    {
      v86 = *(_QWORD *)(v0 + 400);
      v88 = *(_QWORD *)(v0 + 376);
      v87 = *(_QWORD *)(v0 + 384);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v87 + 32))(v86, *(_QWORD *)(v0 + 368), v88);
      v89 = sub_100008384(&qword_1007B5318);
      v90 = *(unsigned __int8 *)(v87 + 80);
      v91 = (v90 + 32) & ~v90;
      v92 = swift_allocObject(v89, v91 + *(_QWORD *)(v87 + 72), v90 | 7);
      *(_OWORD *)(v92 + 16) = xmmword_1005CD2A0;
      v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
      *(_QWORD *)(v0 + 496) = v93;
      v93(v92 + v91, v86, v88);
      *(_QWORD *)(v0 + 320) = 0;
      v94 = swift_allocObject(&unk_100721218, 32, 7);
      *(_QWORD *)(v94 + 16) = v92;
      *(_QWORD *)(v94 + 24) = 0;
      SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, v0 + 320, &unk_1007B9780, v94, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
      v95 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
      *(_QWORD *)(v0 + 504) = v95;
      *v95 = v0;
      v95[1] = sub_1002CE440;
      return SFProgressTask.finalValue.getter(v0 + 520, *(_QWORD *)(v0 + 344));
    }
    v1 = (id)(v0 + 152);
    sub_10000D0F0(*(_QWORD *)(v0 + 368), (uint64_t *)&unk_1007B5200);
    if (qword_1007B3DD0 == -1)
      goto LABEL_51;
    goto LABEL_82;
  }
  v55 = objc_msgSend(*(id *)(v0 + 464), "mutableCopy");
  _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 120), v55);
  swift_unknownObjectRelease(v55);
  v56 = sub_1002CF530();
  swift_dynamicCast(v0 + 248, v0 + 120, (char *)&type metadata for Any + 8, v56, 7);
  v57 = *(void **)(v0 + 248);
  CNMutableContact.saveToContactStore()();
  if (!v58)
  {
    v66 = objc_msgSend(v57, "identifier");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v30 = v67;

    v29 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 208));
    *(_QWORD *)(v0 + 200) = v31;
    *(_QWORD *)(v0 + 208) = v30;
    if ((*(_BYTE *)(v0 + 521) & 1) != 0)
      goto LABEL_25;
    goto LABEL_49;
  }
  v59 = v0;
  v60 = *(void **)(v0 + 464);

  v61 = *(const char **)(v59 + 208);
  v0 = v59;
  swift_bridgeObjectRelease(v61);
LABEL_68:
  v125 = *(_QWORD *)(v0 + 424);
  v127 = *(_QWORD *)(v0 + 392);
  v126 = *(_QWORD *)(v0 + 400);
  v129 = *(_QWORD *)(v0 + 360);
  v128 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CD588()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 488) = v2;
  if (v2)
    v3 = sub_1002CE82C;
  else
    v3 = sub_1002CD5E8;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 456), 0);
}

uint64_t sub_1002CD5E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  void *v17;
  Swift::String v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  __n128 v32;
  id v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  os_log_t log;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;

  v97 = v0 + 272;
  v1 = *(void **)(v0 + 256);
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v98 = type metadata accessor for Logger(0);
  sub_100221DF8(v98, (uint64_t)qword_1007B96A0);
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v100 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v2, "contactIdentifier");
    if (v7)
    {
      v8 = v7;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;

    }
    else
    {
      v101 = 0;
      v102 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      v11 = (const char *)0x8000000100612DF0;
      v9 = 0xD000000000000015;
    }
    *(_QWORD *)(v0 + 264) = sub_100228BD8(v9, (unint64_t)v11, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 264, v97, v5 + 4);
    swift_bridgeObjectRelease(v11);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing existing contact {fetchedContactInfo.contactIdentifier: %s}", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = objc_msgSend(v2, "contactIdentifier");
  if (v12)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = *(void **)(v0 + 472);
  *(_QWORD *)(v0 + 216) = v14;
  *(_QWORD *)(v0 + 224) = v16;
  v101 = 0;
  v102 = (const char *)0xE000000000000000;
  _StringGuts.grow(_:)(63);
  v18._countAndFlagsBits = 0xD00000000000003CLL;
  v18._object = (void *)0x8000000100614EB0;
  String.append(_:)(v18);
  v19 = objc_msgSend(v17, "description");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease((const char *)v22);
  v24._countAndFlagsBits = 125;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v26 = v101;
  v25 = v102;
  v27 = sub_100008384(&qword_1007B54E0);
  Optional.tryUnwrap(_:file:line:)(v26, v25, 0xD000000000000066, 0x8000000100614EF0, 76, v27);
  v28 = *(void **)(v0 + 480);
  v29 = *(void **)(v0 + 472);
  swift_bridgeObjectRelease(v16);

  swift_bridgeObjectRelease(v25);
  v31 = *(_QWORD *)(v0 + 232);
  v30 = *(const char **)(v0 + 240);
  v32 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 208));
  *(_QWORD *)(v0 + 200) = v31;
  *(_QWORD *)(v0 + 208) = v30;
  if (v30)
  {
    if ((*(_BYTE *)(v0 + 521) & 1) != 0)
    {
LABEL_14:

      goto LABEL_29;
    }
  }
  else
  {
    v33 = objc_msgSend(*(id *)(v0 + 464), "mutableCopy", v32.n128_f64[0]);
    _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 120), v33);
    swift_unknownObjectRelease(v33);
    v34 = sub_1002CF530();
    swift_dynamicCast(v0 + 248, v0 + 120, (char *)&type metadata for Any + 8, v34, 7);
    v35 = *(void **)(v0 + 248);
    CNMutableContact.saveToContactStore()();
    if (v36)
    {
      v37 = *(void **)(v0 + 464);

      v38 = *(const char **)(v0 + 208);
      swift_bridgeObjectRelease(v38);
      v39 = *(_QWORD *)(v0 + 424);
      v41 = *(_QWORD *)(v0 + 392);
      v40 = *(_QWORD *)(v0 + 400);
      v43 = *(_QWORD *)(v0 + 360);
      v42 = *(_QWORD *)(v0 + 368);
      swift_task_dealloc(*(_QWORD *)(v0 + 448));
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v45 = objc_msgSend(v35, "identifier");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v30 = v46;

    v32 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 208));
    *(_QWORD *)(v0 + 200) = v31;
    *(_QWORD *)(v0 + 208) = v30;
    if ((*(_BYTE *)(v0 + 521) & 1) != 0)
      goto LABEL_14;
  }
  v48 = *(_QWORD *)(v0 + 416);
  v47 = *(_QWORD *)(v0 + 424);
  v49 = *(_QWORD *)(v0 + 408);
  v50 = *(_QWORD *)(v0 + 376);
  v51 = *(_QWORD *)(v0 + 384);
  v52 = *(_QWORD *)(v0 + 368);
  URLComponents.init()(v32);
  URLComponents.scheme.setter(0x746361746E6F63, 0xE700000000000000);
  URLComponents.host.setter(2003789939, 0xE400000000000000);
  swift_bridgeObjectRetain(v30);
  URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v31, v30);
  swift_bridgeObjectRelease(v30);
  v53 = sub_100008384(&qword_1007B9778);
  v54 = *(unsigned __int8 *)(v48 + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = swift_allocObject(v53, v55 + *(_QWORD *)(v48 + 72), v54 | 7);
  *(_OWORD *)(v56 + 16) = xmmword_1005CD2A0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v56 + v55, v47, v49);
  v57 = URLComponents.queryItems.setter(v56);
  URLComponents.url.getter(v57);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v52, 1, v50) != 1)
  {
    v67 = *(_QWORD *)(v0 + 400);
    v69 = *(_QWORD *)(v0 + 376);
    v68 = *(_QWORD *)(v0 + 384);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v68 + 32))(v67, *(_QWORD *)(v0 + 368), v69);
    v70 = sub_100008384(&qword_1007B5318);
    v71 = *(unsigned __int8 *)(v68 + 80);
    v72 = (v71 + 32) & ~v71;
    v73 = swift_allocObject(v70, v72 + *(_QWORD *)(v68 + 72), v71 | 7);
    *(_OWORD *)(v73 + 16) = xmmword_1005CD2A0;
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
    *(_QWORD *)(v0 + 496) = v74;
    v74(v73 + v72, v67, v69);
    *(_QWORD *)(v0 + 320) = 0;
    v75 = swift_allocObject(&unk_100721218, 32, 7);
    *(_QWORD *)(v75 + 16) = v73;
    *(_QWORD *)(v75 + 24) = 0;
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, v0 + 320, &unk_1007B9780, v75, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
    v76 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 504) = v76;
    *v76 = v0;
    v76[1] = sub_1002CE440;
    return SFProgressTask.finalValue.getter(v0 + 520, *(_QWORD *)(v0 + 344));
  }
  sub_10000D0F0(*(_QWORD *)(v0 + 368), (uint64_t *)&unk_1007B5200);
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v58 = sub_100221DF8(v98, (uint64_t)qword_1007B96A0);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.error.getter(v59);
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc(12, -1);
    v62 = swift_slowAlloc(32, -1);
    v100 = v62;
    *(_DWORD *)v61 = 136315138;
    v63 = swift_beginAccess(v0 + 200, v0 + 176, 0, 0).n128_u64[0];
    v64 = *(const char **)(v0 + 208);
    if (v64)
    {
      v65 = *(_QWORD *)(v0 + 200);
      v66 = *(const char **)(v0 + 208);
    }
    else
    {
      v101 = 0;
      v102 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      v63 = swift_bridgeObjectRelease(v102).n128_u64[0];
      v66 = (const char *)0x8000000100612DF0;
      v65 = 0xD000000000000015;
    }
    v99 = *(_QWORD *)(v0 + 448);
    v94 = *(void **)(v0 + 464);
    log = *(os_log_t *)(v0 + 440);
    v96 = *(_QWORD *)(v0 + 432);
    v91 = *(_QWORD *)(v0 + 416);
    v92 = *(_QWORD *)(v0 + 408);
    v93 = *(_QWORD *)(v0 + 424);
    swift_bridgeObjectRetain(v64, *(double *)&v63);
    *(_QWORD *)(v0 + 272) = sub_100228BD8(v65, (unint64_t)v66, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v0 + 280, v61 + 4);
    swift_bridgeObjectRelease(v66);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "Failed to create URL to launch Contacts for contact ID %s", v61, 0xCu);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v61, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v93, v92);
    ((void (*)(uint64_t, uint64_t))log[1].isa)(v99, v96);
  }
  else
  {
    v77 = *(void **)(v0 + 464);
    v79 = *(_QWORD *)(v0 + 440);
    v78 = *(_QWORD *)(v0 + 448);
    v81 = *(_QWORD *)(v0 + 424);
    v80 = *(_QWORD *)(v0 + 432);
    v82 = *(_QWORD *)(v0 + 408);
    v83 = *(_QWORD *)(v0 + 416);

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
  }
  swift_beginAccess(v0 + 200, v0 + 152, 0, 0);
LABEL_29:
  v84 = *(_QWORD *)(v0 + 424);
  v86 = *(_QWORD *)(v0 + 392);
  v85 = *(_QWORD *)(v0 + 400);
  v88 = *(_QWORD *)(v0 + 360);
  v87 = *(_QWORD *)(v0 + 368);
  v90 = *(_QWORD *)(v0 + 200);
  v89 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v90, v89);
}

uint64_t sub_1002CE440()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 504);
  *(_QWORD *)(*v1 + 512) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002CF388;
  else
    v4 = sub_1002CE4A4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 456), 0);
}

uint64_t sub_1002CE4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  __n128 v32;
  void (*v33)(uint64_t, uint64_t, __n128);
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if ((*(_BYTE *)(v0 + 520) & 1) != 0)
  {
    v54 = *(_QWORD *)(v0 + 448);
    v1 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 440);
    v52 = *(_QWORD *)(v0 + 432);
    v3 = *(_QWORD *)(v0 + 408);
    v2 = *(_QWORD *)(v0 + 416);
    v4 = *(_QWORD *)(v0 + 400);
    v6 = *(_QWORD *)(v0 + 376);
    v5 = *(_QWORD *)(v0 + 384);
    v8 = *(_QWORD *)(v0 + 352);
    v7 = *(_QWORD *)(v0 + 360);
    v9 = *(_QWORD *)(v0 + 344);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v54, v52);
  }
  else
  {
    if (qword_1007B3DD0 != -1)
      swift_once(&qword_1007B3DD0, sub_1002CBB28);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 496);
    v11 = *(_QWORD *)(v0 + 392);
    v12 = *(_QWORD *)(v0 + 400);
    v13 = *(_QWORD *)(v0 + 376);
    v14 = type metadata accessor for Logger(0);
    sub_100221DF8(v14, (uint64_t)qword_1007B96A0);
    v15 = v10(v11, v12, v13);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v49 = *(void **)(v0 + 464);
    v20 = *(_QWORD *)(v0 + 440);
    v19 = *(_QWORD *)(v0 + 448);
    v22 = *(_QWORD *)(v0 + 424);
    v21 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 416);
    v55 = *(_QWORD *)(v0 + 408);
    v23 = *(_QWORD *)(v0 + 392);
    v51 = *(_QWORD *)(v0 + 400);
    v25 = *(_QWORD *)(v0 + 376);
    v24 = *(_QWORD *)(v0 + 384);
    v46 = *(_QWORD *)(v0 + 352);
    v47 = *(_QWORD *)(v0 + 344);
    v48 = *(_QWORD *)(v0 + 360);
    if (v18)
    {
      v45 = *(_QWORD *)(v0 + 440);
      v44 = *(_QWORD *)(v0 + 424);
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = v21;
      v27 = swift_slowAlloc(32, -1);
      v56 = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v25, v28);
      v31 = (const char *)v30;
      *(_QWORD *)(v0 + 328) = sub_100228BD8(v29, v30, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 328, v0 + 336, v26 + 4);
      v32 = swift_bridgeObjectRelease(v31);
      v33 = *(void (**)(uint64_t, uint64_t, __n128))(v24 + 8);
      v33(v23, v25, v32);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to launch Contacts for URL %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
      ((void (*)(uint64_t, uint64_t))v33)(v51, v25);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v44, v55);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v19, v43);
    }
    else
    {

      v34 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v34(v23, v25);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
      v34(v51, v25);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v22, v55);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
  }
  v35 = *(_QWORD *)(v0 + 424);
  v37 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 400);
  v39 = *(_QWORD *)(v0 + 360);
  v38 = *(_QWORD *)(v0 + 368);
  v41 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v41, v40);
}

uint64_t sub_1002CE82C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  const char *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  const char *v12;
  char v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  const char *v43;
  id v44;
  uint64_t v45;
  __n128 v46;
  const char *v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  unint64_t v81;
  const char *v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  NSObject *log;
  os_log_t loga;
  os_log_t logb;
  void *v118;
  uint64_t v119;
  os_log_t v120;
  const char *v121;

  v2 = *(void **)(v1 + 480);
  swift_willThrow(a1);

  v3 = *(_QWORD *)(v1 + 488);
  v4 = (void *)_convertErrorToNSError(_:)(v3);
  v5 = objc_msgSend(v4, "domain");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v8).n128_u64[0];
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v12, v14).n128_u64[0];
    if ((v13 & 1) == 0)
      goto LABEL_13;
  }
  if (objc_msgSend(v4, "code", v15) != (id)-6727)
  {
LABEL_13:
    if (qword_1007B3DD0 != -1)
      swift_once(&qword_1007B3DD0, sub_1002CBB28);
    v30 = *(void **)(v1 + 472);
    v31 = type metadata accessor for Logger(0);
    sub_100221DF8(v31, (uint64_t)qword_1007B96A0);
    v32 = v30;
    swift_errorRetain(v3);
    v33 = v32;
    v34 = swift_errorRetain(v3);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    v37 = os_log_type_enabled(v35, v36);
    v38 = *(void **)(v1 + 472);
    if (!v37)
    {

      swift_errorRelease(v3);
      swift_errorRelease(v3);
      swift_errorRelease(v3);

      v47 = *(const char **)(v1 + 208);
      if (!v47)
        goto LABEL_23;
      goto LABEL_20;
    }
    v118 = v4;
    v39 = swift_slowAlloc(22, -1);
    v113 = (_QWORD *)swift_slowAlloc(8, -1);
    loga = (os_log_t)swift_slowAlloc(32, -1);
    v120 = loga;
    *(_DWORD *)v39 = 136315394;
    *(_QWORD *)(v1 + 280) = v3;
    swift_errorRetain(v3);
    v40 = sub_100008384(&qword_1007B5A60);
    v41 = String.init<A>(describing:)(v1 + 280, v40);
    v43 = (const char *)v42;
    *(_QWORD *)(v1 + 288) = sub_100228BD8(v41, v42, (uint64_t *)&v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 288, v1 + 296, v39 + 4);
    swift_bridgeObjectRelease(v43);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    *(_WORD *)(v39 + 12) = 2112;
    *(_QWORD *)(v1 + 296) = v38;
    v44 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 296, v1 + 304, v39 + 14);
    *v113 = v38;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Error fetching contact. Creating a new one {error: %s, predicateContactInfo: %@}", (uint8_t *)v39, 0x16u);
    v45 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v113, 1, v45);
    swift_slowDealloc(v113, -1, -1);
    swift_arrayDestroy(loga, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(loga, -1, -1);
    swift_slowDealloc(v39, -1, -1);

    goto LABEL_17;
  }
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v16 = *(void **)(v1 + 472);
  v17 = type metadata accessor for Logger(0);
  sub_100221DF8(v17, (uint64_t)qword_1007B96A0);
  v18 = v16;
  swift_errorRetain(v3);
  v19 = v18;
  v20 = swift_errorRetain(v3);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(void **)(v1 + 472);
  if (!v23)
  {

    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);

    v47 = *(const char **)(v1 + 208);
    if (!v47)
      goto LABEL_23;
    goto LABEL_20;
  }
  v118 = v4;
  v25 = swift_slowAlloc(22, -1);
  v26 = (_QWORD *)swift_slowAlloc(16, -1);
  *(_DWORD *)v25 = 138412546;
  *(_QWORD *)(v1 + 304) = v24;
  log = v21;
  v27 = v24;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 304, v1 + 312, v25 + 4);
  *v26 = v24;

  *(_WORD *)(v25 + 12) = 2112;
  swift_errorRetain(v3);
  v28 = _swift_stdlib_bridgeErrorToNSError(v3);
  *(_QWORD *)(v1 + 312) = v28;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 312, v1 + 320, v25 + 14);
  v26[1] = v28;
  swift_errorRelease(v3);
  swift_errorRelease(v3);
  _os_log_impl((void *)&_mh_execute_header, log, v22, "Contact not found. Creating a new one {predicateContactInfo: %@, error: %@}", (uint8_t *)v25, 0x16u);
  v29 = sub_100008384(&qword_1007B4C30);
  swift_arrayDestroy(v26, 2, v29);
  swift_slowDealloc(v26, -1, -1);
  swift_slowDealloc(v25, -1, -1);

LABEL_17:
  swift_errorRelease(v3);
  v47 = *(const char **)(v1 + 208);
  if (!v47)
  {
LABEL_23:
    v49 = objc_msgSend(*(id *)(v1 + 464), "mutableCopy");
    _bridgeAnyObjectToAny(_:)((_QWORD *)(v1 + 120), v49);
    swift_unknownObjectRelease(v49);
    v50 = sub_1002CF530();
    swift_dynamicCast(v1 + 248, v1 + 120, (char *)&type metadata for Any + 8, v50, 7);
    v51 = *(void **)(v1 + 248);
    CNMutableContact.saveToContactStore()();
    if (v52)
    {
      v53 = *(void **)(v1 + 464);

      v54 = *(const char **)(v1 + 208);
      swift_bridgeObjectRelease(v54);
      v55 = *(_QWORD *)(v1 + 424);
      v57 = *(_QWORD *)(v1 + 392);
      v56 = *(_QWORD *)(v1 + 400);
      v59 = *(_QWORD *)(v1 + 360);
      v58 = *(_QWORD *)(v1 + 368);
      swift_task_dealloc(*(_QWORD *)(v1 + 448));
      swift_task_dealloc(v55);
      swift_task_dealloc(v56);
      swift_task_dealloc(v57);
      swift_task_dealloc(v58);
      swift_task_dealloc(v59);
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    v61 = objc_msgSend(v51, "identifier");
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v47 = v62;

    v46 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v1 + 208));
    *(_QWORD *)(v1 + 200) = v48;
    *(_QWORD *)(v1 + 208) = v47;
    if ((*(_BYTE *)(v1 + 521) & 1) == 0)
      goto LABEL_26;
LABEL_21:

    goto LABEL_37;
  }
LABEL_20:
  v48 = *(_QWORD *)(v1 + 200);
  if ((*(_BYTE *)(v1 + 521) & 1) != 0)
    goto LABEL_21;
LABEL_26:
  v64 = *(_QWORD *)(v1 + 416);
  v63 = *(_QWORD *)(v1 + 424);
  v65 = *(_QWORD *)(v1 + 408);
  v66 = *(_QWORD *)(v1 + 376);
  v67 = *(_QWORD *)(v1 + 384);
  v68 = *(_QWORD *)(v1 + 368);
  URLComponents.init()(v46);
  URLComponents.scheme.setter(0x746361746E6F63, 0xE700000000000000);
  URLComponents.host.setter(2003789939, 0xE400000000000000);
  swift_bridgeObjectRetain(v47);
  URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v48, v47);
  swift_bridgeObjectRelease(v47);
  v69 = sub_100008384(&qword_1007B9778);
  v70 = *(unsigned __int8 *)(v64 + 80);
  v71 = (v70 + 32) & ~v70;
  v72 = swift_allocObject(v69, v71 + *(_QWORD *)(v64 + 72), v70 | 7);
  *(_OWORD *)(v72 + 16) = xmmword_1005CD2A0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v72 + v71, v63, v65);
  v73 = URLComponents.queryItems.setter(v72);
  URLComponents.url.getter(v73);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v66) != 1)
  {
    v85 = *(_QWORD *)(v1 + 400);
    v87 = *(_QWORD *)(v1 + 376);
    v86 = *(_QWORD *)(v1 + 384);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 32))(v85, *(_QWORD *)(v1 + 368), v87);
    v88 = sub_100008384(&qword_1007B5318);
    v89 = *(unsigned __int8 *)(v86 + 80);
    v90 = (v89 + 32) & ~v89;
    v91 = swift_allocObject(v88, v90 + *(_QWORD *)(v86 + 72), v89 | 7);
    *(_OWORD *)(v91 + 16) = xmmword_1005CD2A0;
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
    *(_QWORD *)(v1 + 496) = v92;
    v92(v91 + v90, v85, v87);
    *(_QWORD *)(v1 + 320) = 0;
    v93 = swift_allocObject(&unk_100721218, 32, 7);
    *(_QWORD *)(v93 + 16) = v91;
    *(_QWORD *)(v93 + 24) = 0;
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, v1 + 320, &unk_1007B9780, v93, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
    v94 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v1 + 504) = v94;
    *v94 = v1;
    v94[1] = sub_1002CE440;
    return SFProgressTask.finalValue.getter(v1 + 520, *(_QWORD *)(v1 + 344));
  }
  v74 = v1 + 152;
  sub_10000D0F0(*(_QWORD *)(v1 + 368), (uint64_t *)&unk_1007B5200);
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v75 = type metadata accessor for Logger(0);
  v76 = sub_100221DF8(v75, (uint64_t)qword_1007B96A0);
  v77 = Logger.logObject.getter(v76);
  v78 = static os_log_type_t.error.getter(v77);
  if (os_log_type_enabled(v77, v78))
  {
    v79 = (uint8_t *)swift_slowAlloc(12, -1);
    v80 = swift_slowAlloc(32, -1);
    v119 = v80;
    *(_DWORD *)v79 = 136315138;
    v81 = swift_beginAccess(v1 + 200, v1 + 176, 0, 0).n128_u64[0];
    v82 = *(const char **)(v1 + 208);
    if (v82)
    {
      v83 = *(_QWORD *)(v1 + 200);
      v84 = *(const char **)(v1 + 208);
    }
    else
    {
      v83 = 0xD000000000000015;
      v120 = 0;
      v121 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      v81 = swift_bridgeObjectRelease(v121).n128_u64[0];
      v84 = (const char *)0x8000000100612DF0;
    }
    v114 = *(_QWORD *)(v1 + 432);
    logb = *(os_log_t *)(v1 + 448);
    v111 = *(_QWORD *)(v1 + 424);
    v112 = *(_QWORD *)(v1 + 440);
    v108 = *(_QWORD *)(v1 + 416);
    v109 = *(void **)(v1 + 464);
    v110 = *(_QWORD *)(v1 + 408);
    swift_bridgeObjectRetain(v82, *(double *)&v81);
    *(_QWORD *)(v1 + 272) = sub_100228BD8(v83, (unint64_t)v84, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 272, v1 + 280, v79 + 4);
    swift_bridgeObjectRelease(v84);
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "Failed to create URL to launch Contacts for contact ID %s", v79, 0xCu);
    swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v79, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v111, v110);
    (*(void (**)(os_log_t, uint64_t))(v112 + 8))(logb, v114);
    v74 = v1 + 152;
  }
  else
  {
    v96 = *(_QWORD *)(v1 + 440);
    v95 = *(_QWORD *)(v1 + 448);
    v98 = *(_QWORD *)(v1 + 424);
    v97 = *(_QWORD *)(v1 + 432);
    v99 = *(_QWORD *)(v1 + 408);
    v100 = *(_QWORD *)(v1 + 416);

    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v99);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
  }
  swift_beginAccess(v1 + 200, v74, 0, 0);
LABEL_37:
  v101 = *(_QWORD *)(v1 + 424);
  v103 = *(_QWORD *)(v1 + 392);
  v102 = *(_QWORD *)(v1 + 400);
  v105 = *(_QWORD *)(v1 + 360);
  v104 = *(_QWORD *)(v1 + 368);
  v107 = *(_QWORD *)(v1 + 200);
  v106 = *(_QWORD *)(v1 + 208);
  swift_task_dealloc(*(_QWORD *)(v1 + 448));
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v107, v106);
}

uint64_t sub_1002CF388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = *(_QWORD *)(v0 + 440);
  v1 = *(_QWORD *)(v0 + 424);
  v17 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  v10 = *(_QWORD *)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CF488()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002CF4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BA80C);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D12C;
  return sub_100327528(a1, a2, a3, v9, v8);
}

unint64_t sub_1002CF530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B9788;
  if (!qword_1007B9788)
  {
    v1 = objc_opt_self(CNMutableContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B9788);
  }
  return result;
}

uint64_t sub_1002CF56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[11] = static AirDropActor.shared;
  return swift_task_switch(sub_1002CF5E0, v6, 0);
}

uint64_t sub_1002CF5E0()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(uint64_t **)(v0 + 48);
  v3 = *v1;
  v2 = v1[1];
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    if (v4)
    {
      *(_QWORD *)(v0 + 128) = v2;
      v5 = unk_1007B9E5C;
      v22 = (char *)&dword_1007B9E58 + dword_1007B9E58;
      swift_bridgeObjectRetain_n(v2, 2);
      v6 = (_QWORD *)swift_task_alloc(v5);
      *(_QWORD *)(v0 + 136) = v6;
      *v6 = v0;
      v6[1] = sub_1002CFB90;
      __asm { BR              X8; sub_1002F0408 }
    }
  }
  v7 = *(_QWORD *)(v0 + 64);
  if (v7 >> 60 == 15)
  {
    v8 = qword_1007B3DD0;
    swift_bridgeObjectRetain((const char *)v2);
    if (v8 != -1)
      swift_once(&qword_1007B3DD0, sub_1002CBB28);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007B96A0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Missing vCardData to resolve missing appleID", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = type metadata accessor for SFAirDropReceive.Failure(0);
    v15 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v14, v15, 0, 0);
    v17 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, enum case for SFAirDropReceive.Failure.badRequest(_:), v14);
    swift_willThrow(v17);
    v18 = swift_bridgeObjectRelease((const char *)v2);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v18);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain((const char *)v2);
    sub_100244404(v20, v7);
    v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1007B9E60 + dword_1007B9E60);
    v21 = (_QWORD *)swift_task_alloc(unk_1007B9E64);
    *(_QWORD *)(v0 + 104) = v21;
    *v21 = v0;
    v21[1] = sub_1002CF8A8;
    return v23(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), 0, 0);
  }
}

uint64_t sub_1002CF8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v5 = (_QWORD *)*v3;
  v5[2] = v3;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = v2;
  v6 = v5[13];
  v5[14] = v2;
  swift_task_dealloc(v6);
  v7 = v5[11];
  if (v2)
  {
    v8 = sub_1002CF924;
  }
  else
  {
    v5[15] = a2;
    v8 = sub_1002CF964;
  }
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_1002CF924()
{
  uint64_t v0;
  const char *v1;
  __n128 v2;

  v1 = *(const char **)(v0 + 96);
  sub_100225AA0(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  v2 = swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1002CF964()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(const char **)(v0 + 96);
  sub_100225AA0(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(v2);
  if (v1)
  {
    v3 = *(const char **)(v0 + 120);
    *(_QWORD *)(v0 + 128) = v3;
    v4 = unk_1007B9E5C;
    v16 = (char *)&dword_1007B9E58 + dword_1007B9E58;
    swift_bridgeObjectRetain(v3);
    v5 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 136) = v5;
    *v5 = v0;
    v5[1] = sub_1002CFB90;
    __asm { BR              X8; sub_1002F0408 }
  }
  if (qword_1007B3DD0 != -1)
    swift_once(&qword_1007B3DD0, sub_1002CBB28);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007B96A0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Missing appleID to import identity", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = type metadata accessor for SFAirDropReceive.Failure(0);
  v12 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v11, v12, 0, 0);
  v14 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, enum case for SFAirDropReceive.Failure.badRequest(_:), v11);
  swift_willThrow(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CFB90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 88);
    v5 = sub_1002CFC38;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 88);
    swift_bridgeObjectRelease(*(const char **)(v2 + 128));
    v5 = sub_1002CFC04;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002CFC04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CFC38()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 128), 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002CFC70()
{
  qword_1007D80C0 = 0xFFFFLL;
}

uint64_t sub_1002CFD58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100221D08(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1002CFD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B97A8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B97A8);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1002CFE24()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DE0 != -1)
    swift_once(&qword_1007B3DE0, sub_1002CFD94);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007B97A8);
  v16 = v0;
  v6 = Logger.logObject.getter(v16);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = &v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
    v11 = swift_beginAccess(&v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate], v18, 0, 0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v2 + 48))(v10, 1, v1, v11))
    {
      v12 = 0x80000001006151D0;
      v13 = 0xD000000000000018;
    }
    else
    {
      v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      v13 = Date.description.getter(v14);
      v12 = v15;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v17 = sub_100228BD8(v13, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v8 + 4);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlock as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

void sub_1002D00A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DE0 != -1)
    swift_once(&qword_1007B3DE0, sub_1002CFD94);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007B97A8);
  v16 = v0;
  v6 = Logger.logObject.getter(v16);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = &v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate];
    v11 = swift_beginAccess(&v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate], v18, 0, 0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v2 + 48))(v10, 1, v1, v11))
    {
      v12 = 0x8000000100615230;
      v13 = 0xD000000000000016;
    }
    else
    {
      v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      v13 = Date.description.getter(v14);
      v12 = v15;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v17 = sub_100228BD8(v13, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v8 + 4);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device locked as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

double sub_1002D031C()
{
  double result;

  result = 3600.0;
  qword_1007B97C0 = 0x40AC200000000000;
  return result;
}

void sub_1002D0334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *oslog;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) == 1)
  {
    if (qword_1007B3DE0 != -1)
      swift_once(&qword_1007B3DE0, sub_1002CFD94);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007B97A8);
    oslog = Logger.logObject.getter(v2);
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      v5 = "Allowing lenient motion conditions";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }
  }
  else
  {
    if (qword_1007B3DE0 != -1)
      swift_once(&qword_1007B3DE0, sub_1002CFD94);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100221DF8(v6, (uint64_t)qword_1007B97A8);
    oslog = Logger.logObject.getter(v7);
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      v5 = "Denying lenient motion conditions";
      goto LABEL_10;
    }
  }

}

void sub_1002D0494()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3DE0 != -1)
    swift_once(&qword_1007B3DE0, sub_1002CFD94);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007B97A8);
  v16 = v0;
  v6 = Logger.logObject.getter(v16);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = &v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate];
    v11 = swift_beginAccess(&v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate], v18, 0, 0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v2 + 48))(v10, 1, v1, v11))
    {
      v12 = 0x8000000100615250;
      v13 = 0xD000000000000029;
    }
    else
    {
      v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      v13 = Date.description.getter(v14);
      v12 = v15;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v17 = sub_100228BD8(v13, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v8 + 4);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlocked and on wrist as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

BOOL sub_1002D0710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSString v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  double v19;
  _BYTE v21[24];

  v1 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess(v8, v21, 0, 0);
  sub_10027ACA0(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1002D4730((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "BOOLForKey:", v10);

  if (v11)
  {
    if (qword_1007B3DE0 != -1)
      swift_once(&qword_1007B3DE0, sub_1002CFD94);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007B97A8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "### TESTING ONLY: pretendNotUnlockedRecently is set, returning false for unlockedWithinLast6_5Hrs", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  v19 = Date.timeIntervalSinceNow.getter(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v19 >= -23400.0;
}

BOOL sub_1002D097C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSString v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  double v19;
  double v20;
  _BYTE v22[24];

  v1 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
  swift_beginAccess(v8, v22, 0, 0);
  sub_10027ACA0(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1002D4730((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "BOOLForKey:", v10);

  if (v11)
  {
    if (qword_1007B3DE0 != -1)
      swift_once(&qword_1007B3DE0, sub_1002CFD94);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007B97A8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "### TESTING ONLY: expireEscrowTokens is set, returning phone was locked for more than 1 hr", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  v19 = Date.timeIntervalSinceNow.getter(v12);
  if (qword_1007B3DE8 != -1)
    swift_once(&qword_1007B3DE8, sub_1002D031C);
  v20 = *(double *)&qword_1007B97C0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v19 >= -v20;
}

char *sub_1002D0C10(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id (**v27)();
  uint64_t v28;
  uint64_t v29;
  id (**v30)();
  uint64_t v31;
  uint64_t v32;
  id (**v33)();
  uint64_t v34;
  uint64_t v35;
  id (**v36)();
  uint64_t v37;
  uint64_t v38;
  id (**v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (**v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  BOOL (**v48)();
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  id (**v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  id (**v61)();
  uint64_t v62;
  uint64_t v63;
  id (**v64)();
  uint64_t v65;
  uint64_t v66;
  id (*v67)();
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  char *v77;
  id v78;
  uint64_t v79;
  char *v80;
  uint64_t v82;
  char *v83;
  id v84;
  _BYTE v85[24];
  objc_super v86;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v4);
  v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate], 1, 1, v7);
  v9 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  *v16 = 0;
  v16[1] = 0;
  v17 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  *v19 = 0;
  v19[1] = 0;
  v20 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  *v20 = 0;
  v20[1] = 0;
  v21 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice] = 0;
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate], 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue] = a1;
  v86.receiver = v1;
  v86.super_class = ObjectType;
  v84 = a1;
  v22 = (char *)objc_msgSendSuper2(&v86, "init");
  v23 = (uint64_t (**)())&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  v24 = *(_QWORD *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator + 8];
  *v23 = variable initialization expression of HeadphoneProxFeatureClient.delegate;
  v23[1] = 0;
  v26 = v22;
  sub_1002845F4(v24, v25);
  v27 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  v28 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  v29 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator + 8];
  *v27 = sub_1002D11E4;
  v27[1] = 0;
  sub_1002845F4(v28, v29);
  v30 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  v31 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  v32 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator + 8];
  *v30 = sub_1002D1200;
  v30[1] = 0;
  sub_1002845F4(v31, v32);
  v33 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  v34 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  v35 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator
                      + 8];
  *v33 = sub_1002D121C;
  v33[1] = 0;
  sub_1002845F4(v34, v35);
  v36 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  v37 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  v38 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator + 8];
  *v36 = sub_1002D1278;
  v36[1] = 0;
  sub_1002845F4(v37, v38);
  v39 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  v40 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  v41 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator + 8];
  *v39 = sub_1002D1294;
  v39[1] = 0;
  sub_1002845F4(v40, v41);
  v42 = swift_allocObject(&unk_1007212E0, 24, 7);
  *(_QWORD *)(v42 + 16) = v26;
  v43 = (void (**)(uint64_t, uint64_t))&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  v44 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  v45 = *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator + 8];
  *v43 = sub_1002D4980;
  v43[1] = (void (*)(uint64_t, uint64_t))v42;
  v46 = v26;
  sub_1002845F4(v44, v45);
  v47 = swift_allocObject(&unk_100721290, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v46);
  v48 = (BOOL (**)())&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  v49 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  v50 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator + 8];
  *v48 = sub_1002D4988;
  v48[1] = (BOOL (*)())v47;
  sub_1002845F4(v49, v50);
  v51 = swift_allocObject(&unk_100721290, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v46);
  v52 = (void (**)(uint64_t))&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  v53 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  v54 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler + 8];
  *v52 = sub_1002D4990;
  v52[1] = (void (*)(uint64_t))v51;
  sub_1002845F4(v53, v54);
  v55 = (id (**)())&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  v56 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  v57 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator
                      + 8];
  *v55 = sub_1002D1E08;
  v55[1] = 0;
  sub_1002845F4(v56, v57);
  v58 = (uint64_t (**)())&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  v59 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  v60 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator
                      + 8];
  *v58 = sub_1002D1E24;
  v58[1] = 0;
  sub_1002845F4(v59, v60);
  v61 = (id (**)())&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  v62 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  v63 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator
                      + 8];
  *v61 = sub_1002D1EBC;
  v61[1] = 0;
  sub_1002845F4(v62, v63);
  v64 = (id (**)())&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  v65 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  v66 = *(_QWORD *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator
                      + 8];
  *v64 = sub_1002D1F30;
  v64[1] = 0;
  sub_1002845F4(v65, v66);
  v67 = *v27;
  if (*v27)
  {
    v68 = (uint64_t)v27[1];
    v69 = swift_retain(v68);
    v70 = ((uint64_t (*)(uint64_t))v67)(v69);
    v71 = sub_1002845F4((uint64_t)v67, v68);
    if ((v70 & 1) != 0)
    {
      v72 = (uint64_t)v83;
      Date.init()(v71);
      v8((char *)v72, 0, 1, v7);
      v73 = (uint64_t)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
      swift_beginAccess(&v46[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate], v85, 33, 0);
      sub_1002D4998(v72, v73);
      swift_endAccess(v85);
    }
  }
  v74 = (void *)objc_opt_self(NSNotificationCenter);
  v75 = objc_msgSend(v74, "defaultCenter");
  v76 = qword_1007B3E00;
  v77 = v46;
  if (v76 != -1)
    swift_once(&qword_1007B3E00, sub_1002D4788);
  objc_msgSend(v75, "addObserver:selector:name:object:", v77, "handleKeyBagStateChanged", qword_1007D80D8, 0);

  v78 = objc_msgSend(v74, "defaultCenter");
  v79 = qword_1007B3E18;
  v80 = v77;
  if (v79 != -1)
    swift_once(&qword_1007B3E18, sub_1002D47D0);
  objc_msgSend(v78, "addObserver:selector:name:object:", v80, "handleOnWristStateChanged", qword_1007D80F0, 0);

  sub_1002D375C((uint64_t)sub_1002D49E0, (uint64_t)&unk_1007212F8);
  return v80;
}

id sub_1002D11E4()
{
  return sub_1002D1ED8(off_1007112E0, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceKeyBagUnlocked);
}

id sub_1002D1200()
{
  return sub_1002D1ED8(off_1007112E0, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceInBiolockout);
}

id sub_1002D121C()
{
  id result;
  void *v1;
  unsigned int v2;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "deviceKeyBagDisabled");

    return (id)(v2 ^ 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002D1278()
{
  return sub_1002D1ED8(off_1007112E0, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_sleepModeOn);
}

id sub_1002D1294()
{
  return sub_1002D1ED8(off_1007112E0, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_lostModeEnabled);
}

void sub_1002D12B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  Class isa;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v10);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)SDUnlockMotionDetector), "initWithUnlockType:", 1);
  v14 = objc_msgSend((id)objc_opt_self(SDUnlockLockManager), "sharedLockManager");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "wristOnDate");

    if (v16)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v16);

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      {
        isa = 0;
      }
      else
      {
        isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
      isa = 0;
    }
    objc_msgSend(v13, "setWristOnDate:", isa);

    v18 = swift_allocObject(&unk_100721290, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, a3);
    v19 = (_QWORD *)swift_allocObject(&unk_100721330, 48, 7);
    v19[2] = v18;
    v19[3] = a1;
    v19[4] = a2;
    v19[5] = v13;
    aBlock[4] = sub_1002D4A34;
    v24 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_100721348;
    v20 = _Block_copy(aBlock);
    v21 = v24;
    swift_retain(a2);
    v22 = v13;
    swift_release(v21);
    objc_msgSend(v22, "setMotionDetectedHandler:", v20);
    _Block_release(v20);
    objc_msgSend(v22, "activate");

  }
  else
  {
    __break(1u);
  }
}

id sub_1002D1558(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD aBlock[5];
  _QWORD *v29;
  _BYTE v30[24];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = *(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);

    v19 = (_QWORD *)swift_allocObject(&unk_100721380, 40, 7);
    v19[2] = a2;
    v19[3] = a3;
    v19[4] = a4;
    aBlock[4] = sub_1002D4A6C;
    v29 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_100721398;
    v20 = _Block_copy(aBlock);
    swift_retain(a3);
    static DispatchQoS.unspecified.getter(a4);
    v27 = _swiftEmptyArrayStorage;
    v21 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_100008384((uint64_t *)&unk_1007B6410);
    v23 = sub_100273050();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v22, v23, v8, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release(v29);
  }
  return objc_msgSend(a4, "invalidate");
}

BOOL sub_1002D1790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE v18[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (id)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice);
    if (v5)
    {
      v6 = v5;

      v17 = 0;
      v4 = objc_msgSend(v6, "identitiesWithError:", &v17);

      v7 = v17;
      if (!v4)
      {
        v13 = v17;
        v14 = _convertNSErrorToError(_:)(v7);

        swift_willThrow(v15);
        swift_errorRelease(v14);
        return 0;
      }
      v8 = sub_100221EDC(0, &qword_1007B9828, BKIdentity_ptr);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v8);
      v10 = v7;
    }
    else
    {
      v9 = (uint64_t)_swiftEmptyArrayStorage;
    }

  }
  else
  {
    v9 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v16 = v9;
    else
      v16 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v9);
  return v11 != 0;
}

void sub_1002D191C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t Strong;
  NSObject *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL4 v42;
  _BOOL4 v43;
  _BYTE v44[20];
  _BYTE v45[24];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 4];
  __chkstk_darwin(v6);
  v10 = &v44[-v9 - 4];
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2, v11);
  if (Strong)
  {
    v13 = Strong;
    v14 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator;
    v15 = *(uint64_t (**)(uint64_t))(Strong
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (!v15)
      goto LABEL_12;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = swift_retain(v16);
    v18 = v15(v17);
    sub_1002845F4((uint64_t)v15, v16);
    if ((v18 & 1) == 0)
      goto LABEL_12;
    v19 = *(uint64_t (**)(uint64_t))((char *)&v13->isa
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
    if (v19
      && (v20 = *(uint64_t *)((char *)&v13[1].isa
                           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator),
          v21 = swift_retain(v20),
          v22 = v19(v21),
          sub_1002845F4((uint64_t)v19, v20),
          v22 == 3))
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
      v23 = (unint64_t *)((char *)v13
                               + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes);
      swift_beginAccess((char *)v13 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes, &v43, 33, 0);
      v24 = *v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v23);
      *v23 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v24 = sub_10022835C(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        *v23 = v24;
      }
      v27 = *(_QWORD *)(v24 + 16);
      v26 = *(_QWORD *)(v24 + 24);
      if (v27 >= v26 >> 1)
      {
        v24 = sub_10022835C(v26 > 1, v27 + 1, 1, v24);
        *v23 = v24;
      }
      *(_QWORD *)(v24 + 16) = v27 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v24+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, v10, v4);
      v28 = *v23;
      swift_endAccess(&v43);
      if (*(_QWORD *)(v28 + 16) >= 3uLL)
      {
        swift_beginAccess(v23, &v43, 33, 0);
        sub_1002D1CFC((uint64_t)v8);
        swift_endAccess(&v43);

        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
        return;
      }
    }
    else
    {
LABEL_12:
      if (qword_1007B3DE0 != -1)
        swift_once(&qword_1007B3DE0, sub_1002CFD94);
      v29 = type metadata accessor for Logger(0);
      sub_100221DF8(v29, (uint64_t)qword_1007B97A8);
      v30 = v13;
      v13 = Logger.logObject.getter(v30);
      v31 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v13, v31))
      {

        return;
      }
      v32 = swift_slowAlloc(14, -1);
      *(_DWORD *)v32 = 67109376;
      v33 = *(uint64_t (**)(uint64_t))v14;
      v34 = 1;
      if (*(_QWORD *)v14)
      {
        v35 = *(_QWORD *)(v14 + 8);
        v36 = swift_retain(v35);
        v37 = v33(v36);
        sub_1002845F4((uint64_t)v33, v35);
        v34 = (v37 & 1) == 0;
      }
      v43 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v32 + 4);
      *(_WORD *)(v32 + 8) = 1024;
      v38 = *(uint64_t (**)(uint64_t))((char *)&v30->isa
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
      if (v38)
      {
        v39 = *(uint64_t *)((char *)&v30[1].isa
                         + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
        v40 = swift_retain(v39);
        v41 = v38(v40);
        sub_1002845F4((uint64_t)v38, v39);
        v42 = v41 != 3;
      }
      else
      {
        v42 = 1;
      }
      v43 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v32 + 10);

      _os_log_impl((void *)&_mh_execute_header, v13, v31, "Ignoring wake gesture because device is either locked (%{BOOL}d) or off wrist (%{BOOL}d)", (uint8_t *)v32, 0xEu);
      swift_slowDealloc(v32, -1, -1);

    }
  }
}

uint64_t sub_1002D1CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_100008384(&qword_1007C4330);
  result = __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v6, v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if ((_DWORD)result != 1)
  {
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
    if (*(_QWORD *)(v7 + 16))
      return sub_10047515C(0, 1);
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1002D1E08()
{
  return sub_1002D1ED8(&off_1007112E8, (SEL *)&selRef_sharedLockManager, (SEL *)&selRef_lastUnlockedByPairedUnlock);
}

uint64_t sub_1002D1E24()
{
  id v0;
  NSString v1;
  id v2;

  if (!sub_10001DDC4())
    return 1;
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return (uint64_t)v2;
}

id sub_1002D1EBC()
{
  return sub_1002D1ED8(off_1007112E0, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceIsInClassD);
}

id sub_1002D1ED8(_QWORD *a1, SEL *a2, SEL *a3)
{
  id result;
  void *v5;
  id v6;

  result = objc_msgSend((id)objc_opt_self(*a1), *a2);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, *a3);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002D1F30()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(SDStatusMonitor), "sharedMonitor");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "deviceKeyBagState");

    return (id)(v2 == (id)6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D1F90(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  const char *v121;
  char *v122;
  char v123;
  char *v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _DWORD *v130;
  void (*v131)(char *, uint64_t);
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  const char *v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  const char *v151;
  uint64_t v152;
  double v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  int v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  char *v174;
  __n128 v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  uint64_t v181;
  NSObject *v182;
  NSObject *v183;
  os_log_type_t v184;
  uint64_t v185;
  char *v186;
  __n128 v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  double v192;
  _BOOL4 v193;
  void (*v194)(uint64_t (*)(char), uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(char *, uint64_t);
  char *v205;
  uint64_t v206;
  uint64_t v207;
  _BOOL4 v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  double v212;
  uint64_t v213;
  uint64_t (*v214)(char *, uint64_t);
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  int v233;
  _DWORD v234[3];
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  _BOOL4 v239;
  _BOOL4 v240;
  _BYTE v241[20];
  char v242[24];
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;

  v237 = a1;
  v238 = a3;
  v236 = sub_100008384((uint64_t *)&unk_1007B5A00);
  v219 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v217 = v4;
  v218 = (char *)&v215 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007C4330);
  v6 = __chkstk_darwin(v5);
  v221 = (uint64_t)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v222 = (uint64_t)&v215 - v8;
  v227 = type metadata accessor for AuthenticationSecurityRequest(0);
  v9 = __chkstk_darwin(v227);
  v225 = (uint64_t)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v226 = (uint64_t)&v215 - v11;
  v12 = type metadata accessor for Date(0);
  v231 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v216 = (char *)&v215 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v220 = (char *)&v215 - v16;
  v17 = __chkstk_darwin(v15);
  v224 = (char *)&v215 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v215 - v20;
  v22 = __chkstk_darwin(v19);
  v223 = (uint64_t)&v215 - v23;
  v24 = __chkstk_darwin(v22);
  v232 = (char *)&v215 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v215 - v26;
  v28 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  if (v28)
  {
    v29 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator + 8];
    v30 = swift_retain(v29);
    v31 = v28(v30);
    sub_1002845F4((uint64_t)v28, v29);
  }
  else
  {
    v31 = 0;
  }
  v32 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  if (v32)
  {
    v33 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator + 8];
    v34 = swift_retain(v33);
    v235 = v32(v34);
    sub_1002845F4((uint64_t)v32, v33);
  }
  else
  {
    v235 = 0;
  }
  v35 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  if (v35)
  {
    v36 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator
                       + 8];
    v37 = swift_retain(v36);
    v233 = v35(v37);
    sub_1002845F4((uint64_t)v35, v36);
  }
  else
  {
    v233 = 1;
  }
  v38 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  if (v38)
  {
    v39 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator + 8];
    v40 = swift_retain(v39);
    v234[0] = v38(v40);
    sub_1002845F4((uint64_t)v38, v39);
  }
  else
  {
    v234[0] = 0;
  }
  v41 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  if (v41)
  {
    v42 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator + 8];
    v43 = swift_retain(v42);
    v229 = v41(v43);
    sub_1002845F4((uint64_t)v41, v42);
  }
  else
  {
    v229 = 0;
  }
  v228 = v27;
  v44 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  if (v44)
  {
    v45 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator + 8];
    v46 = swift_retain(v45);
    v47 = v44(v46);
    sub_1002845F4((uint64_t)v44, v45);
  }
  else
  {
    v47 = 0;
  }
  v48 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  if (v48)
  {
    v49 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator
                       + 8];
    v50 = swift_retain(v49);
    v51 = v48(v50);
    sub_1002845F4((uint64_t)v48, v49);
  }
  else
  {
    v51 = 0;
  }
  v230 = v12;
  v52 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  if (v52)
  {
    v53 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator
                       + 8];
    v54 = swift_retain(v53);
    v55 = v52(v54);
    sub_1002845F4((uint64_t)v52, v53);
  }
  else
  {
    v55 = 0;
  }
  v56 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  if (v56)
  {
    v57 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator
                       + 8];
    v58 = swift_retain(v57);
    v59 = v56(v58);
    sub_1002845F4((uint64_t)v56, v57);
  }
  else
  {
    v59 = 0;
  }
  v60 = *(uint64_t (**)(_QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  if (v60)
  {
    v61 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator
                       + 8];
    v62 = swift_retain(v61);
    v63 = v60(v62);
    sub_1002845F4((uint64_t)v60, v61);
  }
  else
  {
    v63 = 0;
  }
  v64 = *v238;
  if (!(((*v238 & 0x40) == 0) | v47 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    v72 = v71;
    v73 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v72, v73, 0, 0);
    v70 = 13;
LABEL_49:
    *v69 = v70;
    v245 = v68;
    return CheckedContinuation.resume(throwing:)(&v245, v236);
  }
  if ((v64 & 1) != 0 && v31 != 3)
  {
    type metadata accessor for SFAuthenticationError(0);
    v66 = v65;
    v67 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v66, v67, 0, 0);
    if (v31 == 1)
      v70 = 2;
    else
      v70 = 3;
    goto LABEL_49;
  }
  v74 = v235;
  if (!(((*v238 & 2) == 0) | v235 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    v79 = v78;
    v80 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v79, v80, 0, 0);
LABEL_42:
    v70 = 4;
    goto LABEL_49;
  }
  if ((((*v238 & 0x2000) != 0) & v235) == 1)
    goto LABEL_39;
  if (!(((*v238 & 2) == 0) | v51 & 1) || !(((*v238 & 0x800) == 0) | v51 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    v85 = v84;
    v86 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v85, v86, 0, 0);
    v70 = 5;
    goto LABEL_49;
  }
  if ((((*v238 & 0x80) != 0) & v63) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    v82 = v81;
    v83 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v82, v83, 0, 0);
    v70 = 26;
    goto LABEL_49;
  }
  if (!(((*v238 & 0x100) == 0) | v55 & 1))
  {
LABEL_39:
    type metadata accessor for SFAuthenticationError(0);
    v76 = v75;
    v77 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v76, v77, 0, 0);
LABEL_40:
    v70 = 21;
    goto LABEL_49;
  }
  if ((((*v238 & 0x8000) != 0) & v234[0]) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    v89 = v88;
    v90 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v89, v90, 0, 0);
    v70 = 28;
    goto LABEL_49;
  }
  if ((((*v238 & 0x200) != 0) & v233) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    v92 = v91;
    v93 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v92, v93, 0, 0);
    v70 = 27;
    goto LABEL_49;
  }
  if (!(((*v238 & 0x4000) == 0) | v59 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    v98 = v97;
    v99 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v98, v99, 0, 0);
    if ((v74 & 1) == 0)
      goto LABEL_42;
    goto LABEL_40;
  }
  if ((((*v238 & 8) != 0) & v229) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    v95 = v94;
    v96 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v68 = swift_allocError(v95, v96, 0, 0);
    v70 = 6;
    goto LABEL_49;
  }
  v100 = (uint64_t)v228;
  sub_1002D34F0((uint64_t)v228);
  v101 = *(void (**)(_QWORD, _QWORD, _QWORD))(v231 + 16);
  v102 = v232;
  v103 = v230;
  v101(v232, (char *)v238 + *(int *)(v227 + 20), v230);
  v104 = static Date.< infix(_:_:)(v100, v102);
  if ((v64 & 4) == 0 || (v104 & 1) != 0)
  {
    v122 = v232;
    v123 = static Date.> infix(_:_:)(v100, v232);
    v101(v21, v100, v103);
    v124 = v224;
    v101(v224, v122, v103);
    v125 = (v123 & 1) != 0 || fabs(Date.timeIntervalSince(_:)(v124)) < 1.0;
    v132 = *(void (**)(_QWORD, _QWORD))(v231 + 8);
    v132(v124, v103);
    *(_QWORD *)v234 = v132;
    v133 = ((uint64_t (*)(char *, uint64_t))v132)(v21, v103);
    v134 = *v238;
    if ((*v238 & 0x1000) != 0 && !v125)
    {
      if (qword_1007B3DE0 != -1)
        swift_once(&qword_1007B3DE0, sub_1002CFD94);
      v135 = type metadata accessor for Logger(0);
      sub_100221DF8(v135, (uint64_t)qword_1007B97A8);
      sub_1002D48DC((uint64_t)v238, v225);
      v136 = a2;
      v137 = Logger.logObject.getter(v136);
      v138 = static os_log_type_t.default.getter(v137);
      if (os_log_type_enabled(v137, v138))
      {
        v139 = swift_slowAlloc(22, -1);
        v140 = swift_slowAlloc(64, -1);
        v245 = v140;
        *(_DWORD *)v139 = 136315394;
        v141 = v223;
        v142 = sub_1002D34F0(v223);
        v143 = Date.description.getter(v142);
        v145 = v144;
        v146 = v230;
        (*(void (**)(uint64_t, uint64_t))v234)(v141, v230);
        v243 = sub_100228BD8(v143, (unint64_t)v145, &v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v139 + 4);

        swift_bridgeObjectRelease(v145);
        *(_WORD *)(v139 + 12) = 2080;
        v147 = v225;
        v148 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v149 = dispatch thunk of CustomStringConvertible.description.getter(v146, v148);
        v151 = (const char *)v150;
        v243 = sub_100228BD8(v149, v150, &v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v139 + 14);
        swift_bridgeObjectRelease(v151);
        sub_1002D4920(v147);
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "Local device unlocked (%s) is before remote device unlocked (%s)", (uint8_t *)v139, 0x16u);
        swift_arrayDestroy(v140, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v140, -1, -1);
        swift_slowDealloc(v139, -1, -1);
      }
      else
      {

        sub_1002D4920(v225);
      }

      type metadata accessor for SFAuthenticationError(0);
      v156 = v155;
      v157 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      v158 = swift_allocError(v156, v157, 0, 0);
      v160 = 11;
      goto LABEL_89;
    }
    if ((v134 & 0x20) != 0 && (v133 = sub_1002D0710(), (v133 & 1) == 0))
    {
      type metadata accessor for SFAuthenticationError(0);
      v165 = v164;
      v166 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      v158 = swift_allocError(v165, v166, 0, 0);
      v160 = 8;
    }
    else
    {
      if (((v134 & 0x400) == 0) | v235 & 1 || (v133 = sub_1002D097C(), (v133 & 1) != 0))
      {
        v153 = Date.timeIntervalSinceNow.getter(v133);
        if (v153 < -480.0)
        {
          v161 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
          swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate], &v245, 0, 0);
          v162 = (uint64_t)v161;
          v163 = v222;
          sub_10027ACA0(v162, v222);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v163, 1, v230) == 1)
          {
            sub_1002D4730(v222);
            goto LABEL_95;
          }
          v170 = v220;
          v171 = v230;
          v172 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 32))(v220, v222, v230);
          v173 = Date.timeIntervalSinceNow.getter(v172);
          v152 = (*(uint64_t (**)(char *, uint64_t))v234)(v170, v171);
          v154 = v173 < -480.0;
        }
        else
        {
          v154 = 0;
        }
        if (a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] == 1
          && !v154)
        {
          if ((*(_BYTE *)v238 & 0x10) == 0)
            goto LABEL_114;
LABEL_98:
          if (qword_1007B3DE0 != -1)
            swift_once(&qword_1007B3DE0, sub_1002CFD94);
          v181 = type metadata accessor for Logger(0);
          sub_100221DF8(v181, (uint64_t)qword_1007B97A8);
          v182 = a2;
          v183 = Logger.logObject.getter(v182);
          v184 = static os_log_type_t.default.getter(v183);
          if (os_log_type_enabled(v183, v184))
          {
            v185 = swift_slowAlloc(20, -1);
            *(_DWORD *)v185 = 67109632;
            v186 = (char *)v182 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes;
            v187 = swift_beginAccess((char *)v182 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes, v242, 0, 0);
            v193 = 0;
            if (*(_QWORD *)(*(_QWORD *)v186 + 16) == 2)
            {
              v188 = *(_QWORD *)v186
                   + ((*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80));
              v189 = v223;
              v190 = v230;
              v191 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, __n128))v101)(v223, v188, v230, v187);
              v192 = Date.timeIntervalSinceNow.getter(v191);
              (*(void (**)(uint64_t, uint64_t))v234)(v189, v190);
              if (v192 >= -480.0)
                v193 = 1;
            }
            v240 = v193;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, v241, v185 + 4);
            *(_WORD *)(v185 + 8) = 1024;
            v240 = v153 >= -480.0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, v241, v185 + 10);
            *(_WORD *)(v185 + 14) = 1024;
            v205 = (char *)v182 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
            swift_beginAccess((char *)v182 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate, &v240, 0, 0);
            v206 = (uint64_t)v205;
            v207 = v221;
            sub_10027ACA0(v206, v221);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v207, 1, v230) == 1)
            {
              sub_1002D4730(v221);
              v208 = 0;
            }
            else
            {
              v209 = v216;
              v210 = v230;
              v211 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 32))(v216, v221, v230);
              v212 = Date.timeIntervalSinceNow.getter(v211);
              (*(void (**)(char *, uint64_t))v234)(v209, v210);
              v208 = v212 >= -480.0;
            }
            v239 = v208;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, &v240, v185 + 16);

            _os_log_impl((void *)&_mh_execute_header, v183, v184, "Skipping motion check because one of the following is true: hasEnoughWakeRaises = %{BOOL}d requestingDeviceUnlockedRecently = %{BOOL}d unlockedRecently = %{BOOL}d", (uint8_t *)v185, 0x14u);
            swift_slowDealloc(v185, -1, -1);
          }
          else
          {

            v183 = v182;
          }

          goto LABEL_114;
        }
LABEL_95:
        v174 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
        v175 = swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes], &v243, 0, 0);
        if (*(_QWORD *)(*(_QWORD *)v174 + 16) == 2)
        {
          v176 = *(_QWORD *)v174
               + ((*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80));
          v177 = v223;
          v178 = v230;
          v179 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, __n128))v101)(v223, v176, v230, v175);
          v180 = Date.timeIntervalSinceNow.getter(v179);
          v152 = (*(uint64_t (**)(uint64_t, uint64_t))v234)(v177, v178);
          if ((*(_BYTE *)v238 & 0x10) != 0)
          {
            if (v180 >= -480.0)
              goto LABEL_98;
LABEL_105:
            v194 = *(void (**)(_QWORD, _QWORD))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
            if (v194)
            {
              v195 = *(_QWORD *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator
                                  + 8];
              v196 = swift_allocObject(&unk_100721290, 24, 7);
              swift_unknownObjectWeakInit(v196 + 16, a2);
              v197 = v219;
              v198 = v218;
              v199 = v236;
              (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v218, v237, v236);
              v200 = *(unsigned __int8 *)(v197 + 80);
              v201 = (v200 + 24) & ~v200;
              v202 = swift_allocObject(&unk_1007212B8, v201 + v217, v200 | 7);
              *(_QWORD *)(v202 + 16) = v196;
              (*(void (**)(uint64_t, char *, uint64_t))(v197 + 32))(v202 + v201, v198, v199);
              sub_1002845E4((uint64_t)v194, v195);
              swift_retain(v196);
              v194(sub_1002D4898, v202);
              sub_1002845F4((uint64_t)v194, v195);
              swift_release(v202);
              v203 = v230;
              v204 = *(void (**)(_QWORD, _QWORD))v234;
              (*(void (**)(char *, uint64_t))v234)(v232, v230);
              v204(v228, v203);
              return swift_release(v196);
            }
          }
        }
        else if ((*(_BYTE *)v238 & 0x10) != 0)
        {
          goto LABEL_105;
        }
LABEL_114:
        CheckedContinuation.resume(returning:)(v152, v236);
        goto LABEL_115;
      }
      type metadata accessor for SFAuthenticationError(0);
      v168 = v167;
      v169 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      v158 = swift_allocError(v168, v169, 0, 0);
      v160 = 22;
    }
LABEL_89:
    *v159 = v160;
    v245 = v158;
    CheckedContinuation.resume(throwing:)(&v245, v236);
LABEL_115:
    v213 = v230;
    v214 = *(uint64_t (**)(_QWORD, _QWORD))v234;
    (*(void (**)(char *, uint64_t))v234)(v232, v230);
    return v214(v228, v213);
  }
  if (qword_1007B3DE0 != -1)
    swift_once(&qword_1007B3DE0, sub_1002CFD94);
  v105 = type metadata accessor for Logger(0);
  sub_100221DF8(v105, (uint64_t)qword_1007B97A8);
  v106 = v226;
  sub_1002D48DC((uint64_t)v238, v226);
  v107 = a2;
  v108 = Logger.logObject.getter(v107);
  v109 = static os_log_type_t.default.getter(v108);
  if (os_log_type_enabled(v108, v109))
  {
    v110 = swift_slowAlloc(22, -1);
    v111 = swift_slowAlloc(64, -1);
    v245 = v111;
    *(_DWORD *)v110 = 136315394;
    v112 = v223;
    v113 = sub_1002D34F0(v223);
    v114 = Date.description.getter(v113);
    v116 = v115;
    (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v112, v230);
    v243 = sub_100228BD8(v114, (unint64_t)v116, &v245);
    v103 = v230;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v110 + 4);

    swift_bridgeObjectRelease(v116);
    *(_WORD *)(v110 + 12) = 2080;
    v117 = v226;
    v118 = sub_100220D78(&qword_1007BCF90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v119 = dispatch thunk of CustomStringConvertible.description.getter(v103, v118);
    v121 = (const char *)v120;
    v243 = sub_100228BD8(v119, v120, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v110 + 14);
    swift_bridgeObjectRelease(v121);
    sub_1002D4920(v117);
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "Local device unlocked (%s) is after remote device unlocked (%s)", (uint8_t *)v110, 0x16u);
    swift_arrayDestroy(v111, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v111, -1, -1);
    swift_slowDealloc(v110, -1, -1);
  }
  else
  {

    sub_1002D4920(v106);
  }

  type metadata accessor for SFAuthenticationError(0);
  v127 = v126;
  v128 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  v129 = swift_allocError(v127, v128, 0, 0);
  *v130 = 11;
  v245 = v129;
  CheckedContinuation.resume(throwing:)(&v245, v236);
  v131 = *(void (**)(_QWORD, _QWORD))(v231 + 8);
  v131(v232, v103);
  return ((uint64_t (*)(uint64_t, uint64_t))v131)(v100, v103);
}

uint64_t sub_1002D34F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v3 = sub_100008384(&qword_1007C4330);
  v4 = __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __chkstk_darwin(v4);
  v9 = &v20[-v8 - 8];
  if (SFDeviceClassCodeGet(v7, v10) == 7)
  {
    v11 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
    swift_beginAccess(v11, v20, 0, 0);
    sub_10027ACA0(v11, (uint64_t)v9);
    v12 = type metadata accessor for Date(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
    {
      static Date.distantFuture.getter();
      v14 = (uint64_t)v9;
      return sub_1002D4730(v14);
    }
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v9, v12);
  }
  else
  {
    v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess(v15, v20, 0, 0);
    sub_10027ACA0(v15, (uint64_t)v6);
    v16 = type metadata accessor for Date(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      static Date.distantFuture.getter();
      v14 = (uint64_t)v6;
      return sub_1002D4730(v14);
    }
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(a1, v6, v16);
  }
}

uint64_t sub_1002D3674(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a1 & 1) != 0)
  {
    v2 = a2 + 16;
    swift_beginAccess(a2 + 16, v14, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      *(_BYTE *)(Strong
               + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) = 1;
      sub_1002D0334();

    }
    v6 = sub_100008384((uint64_t *)&unk_1007B5A00);
    return CheckedContinuation.resume(returning:)(v6, v6);
  }
  else
  {
    type metadata accessor for SFAuthenticationError(0);
    v9 = v8;
    v10 = sub_100220D78(&qword_1007BFEE0, (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError, (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    v11 = swift_allocError(v9, v10, 0, 0);
    *v12 = 7;
    v14[0] = v11;
    v13 = sub_100008384((uint64_t *)&unk_1007B5A00);
    return CheckedContinuation.resume(throwing:)(v14, v13);
  }
}

uint64_t sub_1002D375C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  v12 = swift_allocObject(&unk_100721290, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  aBlock[4] = a1;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  v14 = swift_retain(v12);
  static DispatchQoS.unspecified.getter(v14);
  v22 = _swiftEmptyArrayStorage;
  v15 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100008384((uint64_t *)&unk_1007B6410);
  v17 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = v24;
  swift_release(v12);
  return swift_release(v18);
}

void sub_1002D3950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char **v17;
  double v18;
  const char *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26[3];
  _BYTE v27[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = *(uint64_t (**)(uint64_t))(Strong
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong
                     + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                     + 8);
      v7 = swift_retain(v6);
      v8 = v5(v7);
      sub_1002845F4((uint64_t)v5, v6);
    }
    else
    {
      v8 = 0;
    }
    if (qword_1007B3DE0 != -1)
      swift_once(&qword_1007B3DE0, sub_1002CFD94);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007B97A8);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      *(_DWORD *)v13 = 136315138;
      v26[0] = v14;
      if ((v8 & 1) != 0)
        v15 = 0x64656B636F6C6E75;
      else
        v15 = 0x64656B636F6CLL;
      if ((v8 & 1) != 0)
        v16 = (const char *)0xE800000000000000;
      else
        v16 = (const char *)0xE600000000000000;
      v25 = sub_100228BD8(v15, (unint64_t)v16, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v13 + 4);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Key bag state changed to %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    sub_1002D3C00();
    sub_1002D3DEC();
    v17 = (const char **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
    *(_QWORD *)&v18 = swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes], v26, 1, 0).n128_u64[0];
    v19 = *v17;
    *v17 = (const char *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v19, v18);
    v20 = *(uint64_t (**)(uint64_t))&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
    if (v20)
    {
      v21 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator
                         + 8];
      v22 = swift_retain(v21);
      v23 = v20(v22);
      sub_1002845F4((uint64_t)v20, v21);
      v24 = 0;
      if ((v8 & 1) == 0 || (v23 & 1) != 0)
        goto LABEL_22;
    }
    else if ((v8 & 1) == 0)
    {
      v24 = 0;
      goto LABEL_22;
    }
    v24 = 1;
LABEL_22:
    v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = v24;
    sub_1002D0334();

  }
}

uint64_t sub_1002D3C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v1 = v0;
  v2 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12)
    {
      v13 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                      + 8);
      v14 = swift_retain(v13);
      v15 = v12(v14);
      result = sub_1002845F4((uint64_t)v12, v13);
    }
    else
    {
      v15 = 0;
    }
    v16 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
    if (v16)
    {
      v17 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator
                      + 8);
      v18 = swift_retain(v17);
      v19 = v16(v18);
      result = sub_1002845F4((uint64_t)v16, v17);
      if ((v15 & (v19 == 3)) == 1)
      {
        Date.init()(result);
        v20 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 0, 1, v20);
        v21 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
        swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate, v23, 33, 0);
        sub_1002D46E8((uint64_t)v4, v21);
        swift_endAccess(v23);
        sub_1002D0494();
        return sub_1002D4730((uint64_t)v4);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D3DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v1 = v0;
  v2 = sub_100008384(&qword_1007C4330);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12
      && (v13 = *(_QWORD *)(v1
                          + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                          + 8),
          v14 = swift_retain(v13),
          v15 = v12(v14),
          result = sub_1002845F4((uint64_t)v12, v13),
          (v15 & 1) != 0))
    {
      Date.init()(result);
      v16 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 0, 1, v16);
      v17 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate, v21, 33, 0);
      sub_1002D46E8((uint64_t)v4, v17);
      swift_endAccess(v21);
      sub_1002CFE24();
    }
    else
    {
      Date.init()(result);
      v18 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 0, 1, v18);
      v19 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
      swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate, v21, 33, 0);
      sub_1002D46E8((uint64_t)v4, v19);
      swift_endAccess(v21);
      sub_1002D00A0();
    }
    return sub_1002D4730((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002D4040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  if (qword_1007B3DE0 != -1)
    swift_once(&qword_1007B3DE0, sub_1002CFD94);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100221DF8(v2, (uint64_t)qword_1007B97A8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "On wrist state changed", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1002D3C00();

  }
}

double sub_1002D418C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  double result;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  char v28[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    sub_1002D3C00();
    sub_1002D3DEC();
    v6 = objc_msgSend((id)objc_opt_self(BKDeviceManager), "availableDevices");
    v7 = sub_100221EDC(0, &qword_1007B9820, BKDeviceDescriptor_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
      goto LABEL_17;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v9)
    {
      v26 = v5;
      v10 = (void *)objc_opt_self(BKDevice);
      v11 = 4;
      while (1)
      {
        v15 = (v8 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v8)
            : *(id *)(v8 + 8 * v11);
        v16 = v15;
        v5 = (char *)(v11 - 3);
        if (__OFADD__(v11 - 4, 1))
          break;
        v27 = 0;
        v17 = objc_msgSend(v10, "deviceWithDescriptor:error:", v15, &v27);
        v18 = v27;
        if (v17)
        {
          v19 = v17;
          v20 = v27;

          v21 = objc_opt_self(BKDevicePearl);
          v22 = swift_dynamicCastObjCClass(v19, v21);
          if (v22)
          {
            v23 = v22;
            swift_bridgeObjectRelease(v8);
            v24 = *(void **)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice];
            *(_QWORD *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice] = v23;

            return result;
          }

        }
        else
        {
          v12 = v27;
          v13 = _convertNSErrorToError(_:)(v18);

          swift_willThrow(v14);
          swift_errorRelease(v13);
        }
        ++v11;
        if (v5 == (char *)v9)
        {

          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_17:
      if (v8 < 0)
        v25 = v8;
      else
        v25 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(v8);
    }

LABEL_22:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002D4588()
{
  return type metadata accessor for SDAuthenticationSecurityManager(0);
}

uint64_t type metadata accessor for SDAuthenticationSecurityManager(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007B9810, (uint64_t)&nominal type descriptor for SDAuthenticationSecurityManager);
}

void sub_1002D45A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[20];

  sub_10023EB48(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = &unk_1005D1BC0;
    v4[3] = &unk_1005D1BC0;
    v4[4] = &unk_1005D1BC0;
    v4[5] = &unk_1005D1BC0;
    v4[6] = &unk_1005D1BC0;
    v4[7] = &unk_1005D1BC0;
    v4[8] = &unk_1005D1BC0;
    v4[9] = &unk_1005D1BC0;
    v4[10] = &unk_1005D1BC0;
    v4[11] = &unk_1005D1BC0;
    v4[12] = &unk_1005D1BC0;
    v4[13] = &unk_1005D1BC0;
    v4[14] = &unk_1005D1BC0;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = &unk_1005D1BD8;
    v4[18] = &unk_1005D1BF0;
    v4[19] = v4[0];
    swift_updateClassMetadata2(a1, 256, 20, v4, a1 + 80);
  }
}

uint64_t sub_1002D4660(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1002D46E8(a1, v3);
  swift_endAccess(v5);
  sub_1002CFE24();
  return sub_1002D4730(a1);
}

__CFString *sub_1002D46D0()
{
  qword_1007D80C8 = (uint64_t)CFSTR("com.apple.sharingd.KeyBagFirstUnlock");
  return CFSTR("com.apple.sharingd.KeyBagFirstUnlock");
}

uint64_t sub_1002D46E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007C4330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D4730(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007C4330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__CFString *sub_1002D4770()
{
  qword_1007D80D0 = (uint64_t)CFSTR("SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification");
  return CFSTR("SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification");
}

__CFString *sub_1002D4788()
{
  qword_1007D80D8 = (uint64_t)CFSTR("com.apple.sharingd.KeyBagLockStatusChanged");
  return CFSTR("com.apple.sharingd.KeyBagLockStatusChanged");
}

__CFString *sub_1002D47A0()
{
  qword_1007D80E0 = (uint64_t)CFSTR("com.apple.sharingd.ScreenStateChanged");
  return CFSTR("com.apple.sharingd.ScreenStateChanged");
}

__CFString *sub_1002D47B8()
{
  qword_1007D80E8 = (uint64_t)CFSTR("com.apple.sharingd.WiFiDeviceAttached");
  return CFSTR("com.apple.sharingd.WiFiDeviceAttached");
}

__CFString *sub_1002D47D0()
{
  qword_1007D80F0 = (uint64_t)CFSTR("com.apple.sharingd.WristStateChanged");
  return CFSTR("com.apple.sharingd.WristStateChanged");
}

uint64_t type metadata accessor for AuthenticationSecurityRequest(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007B9888, (uint64_t)&nominal type descriptor for AuthenticationSecurityRequest);
}

uint64_t sub_1002D47FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D4820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008384((uint64_t *)&unk_1007B5A00);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002D4898(char a1)
{
  uint64_t v1;

  sub_100008384((uint64_t *)&unk_1007B5A00);
  return sub_1002D3674(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002D48DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D4920(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002D495C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002D4980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002D12B0(a1, a2, *(_QWORD *)(v2 + 16));
}

BOOL sub_1002D4988()
{
  uint64_t v0;

  return sub_1002D1790(v0);
}

void sub_1002D4990(uint64_t a1)
{
  uint64_t v1;

  sub_1002D191C(a1, v1);
}

uint64_t sub_1002D4998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007C4330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_1002D49E0()
{
  uint64_t v0;

  return sub_1002D418C(v0);
}

uint64_t sub_1002D49E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002D49F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002D4A00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

id sub_1002D4A34()
{
  uint64_t v0;

  return sub_1002D1558(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1002D4A40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002D4A6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 16))(objc_msgSend(*(id *)(v0 + 32), "motionDetected"));
}

void sub_1002D4AA8()
{
  uint64_t v0;

  sub_1002D4040(v0);
}

void sub_1002D4AB0()
{
  uint64_t v0;

  sub_1002D3950(v0);
}

uint64_t *sub_1002D4AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1002D4B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1002D4B78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1002D4BD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1002D4C30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1002D4C8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1002D4CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D4CF4);
}

uint64_t sub_1002D4CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1002D4D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D4D40);
}

uint64_t sub_1002D4D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1002D4D84(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationPolicies()
{
  return &type metadata for AuthenticationPolicies;
}

unint64_t sub_1002D4E10()
{
  unint64_t result;

  result = qword_1007B98C0;
  if (!qword_1007B98C0)
  {
    result = swift_getWitnessTable(&unk_1005D1C88, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_1007B98C0);
  }
  return result;
}

unint64_t sub_1002D4E58()
{
  unint64_t result;

  result = qword_1007B98C8;
  if (!qword_1007B98C8)
  {
    result = swift_getWitnessTable(&unk_1005D1C58, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_1007B98C8);
  }
  return result;
}

unint64_t sub_1002D4EA0()
{
  unint64_t result;

  result = qword_1007B98D0;
  if (!qword_1007B98D0)
  {
    result = swift_getWitnessTable(&unk_1005D1CB0, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_1007B98D0);
  }
  return result;
}

unint64_t sub_1002D4EE8()
{
  unint64_t result;

  result = qword_1007B98D8;
  if (!qword_1007B98D8)
  {
    result = swift_getWitnessTable(&unk_1005D1CE8, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_1007B98D8);
  }
  return result;
}

id sub_1002D4F4C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B98E0);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B98E0);
  result = (id)airdrop_log(v1);
  if (result)
    return (id)Logger.init(_:)();
  __break(1u);
  return result;
}

void sub_1002D4FDC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  id v8;
  void *v9;
  unsigned int v10;
  char **v11;
  id v12;
  char **v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  unint64_t v25;
  char v26;
  id v27;
  id v28;
  const char *v29;
  const char *v30;
  NSString v31;
  __n128 v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  id v45;
  NSString v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  _QWORD v56[5];
  __int128 v57;
  __int128 v58;

  v1 = v0;
  if ((objc_msgSend((id)objc_opt_self(UIApplication), "isRunningInStoreDemoMode") & 1) != 0)
  {
    if (qword_1007B3E20 != -1)
      swift_once(&qword_1007B3E20, sub_1002D4F4C);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100221DF8(v2, (uint64_t)qword_1007B98E0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_35;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "IPA Handler: Device running in store demo mode";
LABEL_48:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1, -1);
LABEL_35:

    return;
  }
  v8 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "isAirDropAppInstallationAllowed");

    if (!v10)
    {
      if (qword_1007B3E20 != -1)
        swift_once(&qword_1007B3E20, sub_1002D4F4C);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100221DF8(v35, (uint64_t)qword_1007B98E0);
      v4 = Logger.logObject.getter(v36);
      v5 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v4, v5))
        goto LABEL_35;
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      v7 = "IPA Handler: AirDrop app installation not allowed";
      goto LABEL_48;
    }
    if (!objc_msgSend(v1, "isJustFiles"))
    {
      if (qword_1007B3E20 != -1)
        swift_once(&qword_1007B3E20, sub_1002D4F4C);
      v37 = type metadata accessor for Logger(0);
      v38 = sub_100221DF8(v37, (uint64_t)qword_1007B98E0);
      v4 = Logger.logObject.getter(v38);
      v5 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v4, v5))
        goto LABEL_35;
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      v7 = "IPA Handler: isJustFiles is false";
      goto LABEL_48;
    }
    v11 = &selRef_stringFromContact_style_;
    v12 = objc_msgSend(v1, "transfer");
    v13 = &selRef_invalidateTimerIfReady;
    v14 = objc_msgSend(v12, "metaData");

    v15 = objc_msgSend(v14, "rawFiles");
    v16 = sub_100008384((uint64_t *)&unk_1007B5260);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (void *)kSFOperationFileNameKey;
      swift_bridgeObjectRetain((const char *)v17);
      v20 = 0;
      while (1)
      {
        if (!v19)
        {
          __break(1u);
          goto LABEL_51;
        }
        v21 = *(_QWORD *)(v17 + 8 * v20 + 32);
        v55 = v19;
        v22 = sub_100221EDC(0, (unint64_t *)&unk_1007B59E0, NSString_ptr);
        v23 = sub_10023A6F8();
        swift_bridgeObjectRetain((const char *)v21);
        v24 = v19;
        AnyHashable.init<A>(_:)(v56, &v55, v22, v23);
        if (*(_QWORD *)(v21 + 16) && (v25 = sub_10045C1D0((uint64_t)v56), (v26 & 1) != 0))
        {
          sub_10022E77C(*(_QWORD *)(v21 + 56) + 32 * v25, (uint64_t)&v57);
        }
        else
        {
          v57 = 0u;
          v58 = 0u;
        }
        sub_10022E6C0((uint64_t)v56);
        if (!*((_QWORD *)&v58 + 1))
        {
          sub_10000D0F0((uint64_t)&v57, (uint64_t *)&unk_1007B6890);
LABEL_42:
          swift_bridgeObjectRelease_n(v17, 2);
          swift_bridgeObjectRelease((const char *)v21);
          goto LABEL_44;
        }
        if ((swift_dynamicCast(&v55, &v57, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
          goto LABEL_42;
        v27 = v55;
        v28 = objc_msgSend(v55, "pathExtension");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v30 = v29;

        v31 = String._bridgeToObjectiveC()();
        v32 = swift_bridgeObjectRelease(v30);
        v33 = SFIsIPA(v31, v32);
        swift_bridgeObjectRelease((const char *)v21);

        if ((v33 & 1) == 0)
          break;
        if (v18 == ++v20)
        {
          swift_bridgeObjectRelease_n(v17, 2);
          v11 = &selRef_stringFromContact_style_;
          v13 = &selRef_invalidateTimerIfReady;
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRelease_n(v17, 2);
LABEL_44:
      if (qword_1007B3E20 != -1)
        swift_once(&qword_1007B3E20, sub_1002D4F4C);
      v53 = type metadata accessor for Logger(0);
      v54 = sub_100221DF8(v53, (uint64_t)qword_1007B98E0);
      v4 = Logger.logObject.getter(v54);
      v5 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v6 = 0;
        v7 = "IPA Handler: File is not IPA, ignoring...";
        goto LABEL_48;
      }
      goto LABEL_35;
    }
    *(_QWORD *)&v34 = swift_bridgeObjectRelease((const char *)v17).n128_u64[0];
LABEL_30:
    v39 = objc_msgSend(v1, v11[203], v34);
    v40 = objc_msgSend(v39, v13[398]);

    LODWORD(v39) = objc_msgSend(v40, "senderIsMe");
    if ((_DWORD)v39)
    {
      if (qword_1007B3E20 != -1)
        swift_once(&qword_1007B3E20, sub_1002D4F4C);
      v41 = type metadata accessor for Logger(0);
      v42 = sub_100221DF8(v41, (uint64_t)qword_1007B98E0);
      v4 = Logger.logObject.getter(v42);
      v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v43, "IPA Handler: Transfer is me, can handle.", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }
      goto LABEL_35;
    }
    v45 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v46 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v45, "fileExistsAtPath:", v46);

    if (qword_1007B3E20 != -1)
      swift_once(&qword_1007B3E20, sub_1002D4F4C);
    v48 = type metadata accessor for Logger(0);
    v49 = sub_100221DF8(v48, (uint64_t)qword_1007B98E0);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v52 = 67109120;
      LODWORD(v56[0]) = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, (char *)v56 + 4, v52 + 4);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "IPA Handler: Developer settings bundle exists? %{BOOL}d", v52, 8u);
      swift_slowDealloc(v52, -1, -1);
    }

  }
  else
  {
LABEL_51:
    __break(1u);
  }
}

void sub_1002D57D4()
{
  void *v0;
  Class isa;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  uint64_t v21;
  id v22;
  const char *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD v36[5];
  _OWORD v37[2];
  __int128 v38;
  void *v39;
  unint64_t v40;
  _BYTE v41[56];
  _QWORD v42[5];

  v2 = v0;
  v3 = objc_msgSend(v0, "transfer");
  v4 = objc_msgSend(v3, "metaData");

  if (objc_msgSend(v2, "totalSharedItemsCount") != (id)1)
  {
    v42[3] = &type metadata for UInt;
    v42[4] = &protocol witness table for UInt;
    v42[0] = objc_msgSend(v2, "totalSharedItemsCount");
    v14 = 0xE300000000000000;
    v15 = 4280393;
LABEL_12:
    v16 = sub_100008384(&qword_1007B9938);
    v17 = swift_allocObject(v16, 40, 7);
    v33 = xmmword_1005CD2A0;
    *(_OWORD *)(v17 + 16) = xmmword_1005CD2A0;
    v18 = sub_100008384(&qword_1007B9940);
    inited = swift_initStackObject(v18, v41);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v14;
    *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v2, "totalSharedItemsCount"));
    *(_QWORD *)(v17 + 32) = sub_10021F230(inited);
    sub_100008384(&qword_1007B9948);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(v2, "alertMessageLocalizedKeyForTypeDicts:", isa, swift_bridgeObjectRelease((const char *)v17).n128_f64[0]);

    v22 = (id)SFLocalizedStringForKey(v20, v21);
    if (v22)
    {
      isa = (Class)static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v24 = v23;

      v25 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v26 = swift_allocObject(v25, 112, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1005CF250;
      v27 = objc_msgSend(v2, "senderName");
      if (v27)
      {
        v28 = v27;
        v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v31 = v30;

        *(_QWORD *)(v26 + 56) = &type metadata for String;
        *(_QWORD *)(v26 + 64) = sub_100299AB0();
        *(_QWORD *)(v26 + 32) = v29;
        *(_QWORD *)(v26 + 40) = v31;
        sub_100244418((uint64_t)v42, v26 + 72);
        static String.localizedStringWithFormat(_:_:)(isa, v24, v26);

        *(_QWORD *)&v32 = swift_bridgeObjectRelease(v24).n128_u64[0];
        swift_bridgeObjectRelease((const char *)v26, v32);
        sub_10022E75C(v42);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v5 = objc_msgSend(v4, "rawFiles");
  v6 = sub_100008384((uint64_t *)&unk_1007B5260);
  isa = (Class)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!*((_QWORD *)isa + 2))
  {
LABEL_18:
    swift_bridgeObjectRelease((const char *)isa, v33, v34, (_QWORD)v35);
    __break(1u);
    goto LABEL_19;
  }
  v7 = *((_QWORD *)isa + 4);
  swift_bridgeObjectRetain((const char *)v7);
  swift_bridgeObjectRelease((const char *)isa);
  v8 = (void *)kSFOperationFileNameKey;
  if (kSFOperationFileNameKey)
  {
    v42[0] = kSFOperationFileNameKey;
    v9 = sub_100221EDC(0, (unint64_t *)&unk_1007B59E0, NSString_ptr);
    v10 = sub_10023A6F8();
    v11 = v8;
    AnyHashable.init<A>(_:)(v36, v42, v9, v10);
    if (*(_QWORD *)(v7 + 16) && (v12 = sub_10045C1D0((uint64_t)v36), (v13 & 1) != 0))
    {
      sub_10022E77C(*(_QWORD *)(v7 + 56) + 32 * v12, (uint64_t)&v34);
    }
    else
    {
      v34 = 0u;
      v35 = 0u;
    }
    swift_bridgeObjectRelease((const char *)v7);
    if (!*((_QWORD *)&v35 + 1))
      goto LABEL_20;
    sub_10022E6C0((uint64_t)v36);

    sub_10022138C(&v34, v37);
    v39 = &type metadata for String;
    v40 = sub_100299AB0();
    swift_dynamicCast(&v38, v37, (char *)&type metadata for Any + 8, &type metadata for String, 7);
    sub_10026EE60(&v38, (uint64_t)v42);
    v14 = 0xEE00454C5449545FLL;
    v15 = 0x485449575F415049;
    goto LABEL_12;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
}

void sub_1002D5C84()
{
  void *v0;
  id v1;
  id v2;
  const char *v3;
  const char *v4;
  uint64_t ObjectType;
  const char *v6;
  const char *v7;
  NSString v8;
  uint64_t v9;
  id v10;
  const char *v11;
  const char *v12;
  NSString v13;
  uint64_t v14;
  id v15;
  const char *v16;
  const char *v17;
  NSString v18;
  NSString v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  id v31;
  Class isa;
  _QWORD v33[5];
  uint64_t v34;
  objc_super v35;

  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v35, "updatePossibleActions");
  v1 = objc_msgSend(v0, "transfer");
  v2 = objc_msgSend(v1, "identifier");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  ObjectType = swift_getObjectType(v0);
  _typeName(_:qualified:)(ObjectType, 0);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v12 = v11;

  }
  else
  {
    v12 = 0;
  }
  v13 = String._bridgeToObjectiveC()();
  v15 = (id)SFLocalizedStringForKey(v13, v14);

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

  }
  else
  {
    v17 = 0;
  }
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  if (v12)
  {
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    if (v17)
    {
LABEL_9:
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      goto LABEL_12;
    }
  }
  else
  {
    v20 = 0;
    if (v17)
      goto LABEL_9;
  }
  v21 = 0;
LABEL_12:
  v22 = objc_msgSend(objc_allocWithZone((Class)SFAirDropAction), "initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:type:", v18, v19, v20, v21, 1);

  if (v22)
  {
    v23 = swift_allocObject(&unk_100721568, 24, 7);
    *(_QWORD *)(v23 + 16) = v0;
    v33[4] = sub_1002D7358;
    v34 = v23;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 1107296256;
    v33[2] = sub_1002D6B08;
    v33[3] = &unk_100721580;
    v24 = _Block_copy(v33);
    v25 = v34;
    v26 = v0;
    swift_release(v25);
    objc_msgSend(v22, "setActionHandler:", v24);
    _Block_release(v24);
    v27 = objc_msgSend(v26, "transfer");
    v28 = sub_100008384(&qword_1007B5390);
    v29 = swift_allocObject(v28, 40, 7);
    *(_OWORD *)(v29 + 16) = xmmword_1005D1DF0;
    *(_QWORD *)(v29 + 32) = v22;
    v33[0] = v29;
    specialized Array._endMutation()(v29);
    v30 = (const char *)v33[0];
    sub_100221EDC(0, &qword_1007B9920, SFAirDropAction_ptr);
    v31 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "setPossibleActions:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  }
}

uint64_t sub_1002D5FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char, char, char);
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char **v29;
  id v30;
  id v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unsigned __int8 *v54;
  dispatch_group_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  NSURL *v60;
  void *v61;
  void *v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 *v67;
  unint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t (**v71)(char);
  void *v72;
  const void *v73;
  void *v74;
  const char *v75;
  _QWORD *v76;
  uint64_t v77;
  size_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  void *v88;
  dispatch_group_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  void ***v97;
  void **v98;
  uint64_t v99;
  size_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  const char *v114;
  char *v115;
  void *v116;
  char *v117;
  unsigned __int8 *v118;
  char *v119;
  uint64_t v120;
  dispatch_group_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  _QWORD *v126;
  id v127;
  uint64_t (*v128)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *);
  id v129;
  unsigned __int8 v130;
  _QWORD *v131;
  void **aBlock;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  _QWORD *v137;

  v4 = sub_100008384(&qword_1007B9928);
  v125 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v112 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for DispatchWorkItemFlags(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for DispatchQoS(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v8);
  v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v119 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v118 = (unsigned __int8 *)&v101 - v16;
  v128 = v17;
  __chkstk_darwin(v15);
  v111 = (char *)&v101 - v18;
  v19 = sub_100008384(&qword_1007B9930);
  v20 = __chkstk_darwin(v19);
  v126 = (size_t *)((char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v124 = (uint64_t *)((char *)&v101 - v22);
  if (a1)
  {
    v23 = (uint64_t (*)(char, char, char))a1;
    v24 = a2;
    v25 = &unk_100721770;
  }
  else
  {
    v26 = objc_msgSend(v129, "completionHandler");
    v24 = swift_allocObject(&unk_1007215B8, 24, 7);
    *(_QWORD *)(v24 + 16) = v26;
    v23 = sub_1002D73BC;
    v25 = &unk_1007215E0;
  }
  v27 = swift_allocObject(v25, 32, 7);
  *(_QWORD *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = v24;
  v28 = swift_allocObject(&unk_100721608, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_1002D73E0;
  *(_QWORD *)(v28 + 24) = v27;
  v110 = v28;
  swift_retain(v27);
  sub_1002845E4(a1, a2);
  v29 = &selRef_stringFromContact_style_;
  v30 = objc_msgSend(v129, "transfer");
  v31 = objc_msgSend(v30, "completedURLs");

  v32 = (const char *)_swiftEmptyArrayStorage;
  if (v31)
  {
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v11);

    v32 = (const char *)v33;
  }
  v34 = (void *)*((_QWORD *)v32 + 2);
  if (!v34)
  {
    v128 = sub_1002D73E0;
    swift_bridgeObjectRelease(v32);
    if (qword_1007B3E20 != -1)
      goto LABEL_25;
    goto LABEL_18;
  }
  v123 = v4;
  v35 = v32;
  swift_release(v27);
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  v103 = static OS_dispatch_queue.main.getter();
  v36 = swift_allocObject(&unk_100721630, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_1002D73E4;
  v37 = v110;
  v102 = v36;
  *(_QWORD *)(v36 + 24) = v110;
  v38 = *((_QWORD *)v35 + 2);
  swift_retain(v37);
  v121 = dispatch_group_create();
  v39 = sub_100008384((uint64_t *)&unk_1007B7360);
  v120 = swift_allocObject(v39, 20, 7);
  *(_DWORD *)(v120 + 16) = 0;
  v27 = swift_allocObject(&unk_100721658, 24, 7);
  v101 = v38;
  v40 = sub_100333FA4(2, v38);
  v122 = v27;
  *(_QWORD *)(v27 + 16) = v40;
  v115 = (char *)v128 + 7;
  v114 = v35;
  swift_bridgeObjectRetain(v35);
  v113 = 0;
  v41 = 0;
  v116 = v34;
  v117 = v10;
  while (1)
  {
    v42 = v123;
    if (v41 >= *((_QWORD *)v114 + 2))
      break;
    (*(void (**)(char *, const char *, uint64_t))(v12 + 16))(v10, &v114[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v41], v11);
    v43 = (void *)(v41 + 1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      goto LABEL_10;
    v45 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27 = (uint64_t)v111;
    v45(v111, v10, v11);
    v46 = &v112[*(int *)(v42 + 48)];
    v45(v46, (char *)v27, v11);
    v47 = v113 + 1;
    if (__OFADD__(v113, 1))
      goto LABEL_24;
    v48 = (char *)v126 + *(int *)(v42 + 48);
    *v126 = v113;
    v45(v48, v46, v11);
    v44 = 0;
    v113 = v47;
    while (2)
    {
      v50 = v125;
      v49 = v126;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v126, v44, 1, v42);
      v51 = (uint64_t)v49;
      v52 = v124;
      sub_1002D7474(v51, (uint64_t)v124);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48))(v52, 1, v42) == 1)
      {
        v75 = v114;
        swift_bridgeObjectRelease(v114);
        v76 = (_QWORD *)swift_allocObject(&unk_100721680, 48, 7);
        v77 = v122;
        v78 = v101;
        v76[2] = v122;
        v76[3] = v78;
        v79 = v102;
        v76[4] = sub_1002D7448;
        v76[5] = v79;
        v136 = sub_1002D74E8;
        v137 = v76;
        aBlock = _NSConcreteStackBlock;
        v133 = 1107296256;
        v134 = sub_10025BBB4;
        v135 = &unk_100721698;
        v80 = _Block_copy(&aBlock);
        swift_retain(v77);
        v81 = swift_retain(v79);
        v82 = v104;
        static DispatchQoS.unspecified.getter(v81);
        v131 = _swiftEmptyArrayStorage;
        v83 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v84 = sub_100008384((uint64_t *)&unk_1007B6410);
        v85 = sub_100273050();
        v86 = v107;
        v87 = v109;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v131, v84, v85, v109, v83);
        v88 = (void *)v103;
        v89 = v121;
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v82, v86, v103, v80);
        _Block_release(v80);
        swift_release(v120);

        (*(void (**)(char *, uint64_t))(v108 + 8))(v86, v87);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v82, v106);
        v90 = v137;
        swift_bridgeObjectRelease(v75);

        swift_release(v79);
        swift_release(v110);
        swift_release(v77);
        v91 = (uint64_t)v90;
        return swift_release(v91);
      }
      v53 = *v52;
      v54 = (unsigned __int8 *)v52 + *(int *)(v42 + 48);
      v128 = *(uint64_t (**)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *))(v12 + 32);
      v27 = (uint64_t)v118;
      v128(v118, v54, (unsigned __int8 *)v11);
      v55 = v121;
      dispatch_group_enter(v121);
      v56 = (char *)swift_allocObject(&unk_1007216D0, 48, 7);
      v129 = v43;
      v57 = v120;
      v58 = v122;
      *((_QWORD *)v56 + 2) = v120;
      *((_QWORD *)v56 + 3) = v58;
      *((_QWORD *)v56 + 4) = v53;
      *((_QWORD *)v56 + 5) = v55;
      v29 = (char **)swift_allocObject(&unk_1007216F8, 32, 7);
      v29[2] = (char *)sub_1002D7528;
      v29[3] = v56;
      v127 = (id)objc_opt_self(IXAppInstallCoordinator);
      swift_retain(v57);
      swift_retain(v58);
      v59 = v55;
      swift_retain(v56);
      URL._bridgeToObjectiveC()(v60);
      v62 = v61;
      v63 = (unsigned __int8 *)v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v119, v27, v11);
      v64 = *(unsigned __int8 *)(v12 + 80);
      v65 = (v64 + 16) & ~v64;
      v66 = v12;
      v67 = (unsigned __int8 *)v11;
      v68 = (unint64_t)&v115[v65] & 0xFFFFFFFFFFFFFFF8;
      v69 = swift_allocObject(&unk_100721720, v68 + 16, v64 | 7);
      v70 = (unsigned __int8 *)(v69 + v65);
      v41 = (unint64_t)v129;
      v128(v70, v63, v67);
      v71 = (uint64_t (**)(char))(v69 + v68);
      v11 = (uint64_t)v67;
      v12 = v66;
      *v71 = sub_1002D7534;
      v71[1] = (uint64_t (*)(char))v29;
      v136 = sub_1002D75B4;
      v137 = (_QWORD *)v69;
      aBlock = _NSConcreteStackBlock;
      v133 = 1107296256;
      v134 = sub_100334094;
      v135 = &unk_100721738;
      v72 = _Block_copy(&aBlock);
      swift_release(v137);
      objc_msgSend(v127, "installApplication:options:completion:", v62, 0, v72);
      v73 = v72;
      v10 = v117;
      _Block_release(v73);
      swift_release(v56);

      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v27, v11);
      v74 = v116;
      if ((void *)v41 == v116)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v10, 1, 1, v11);
        v43 = v74;
        v42 = v123;
LABEL_10:
        sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007B5200);
        v44 = 1;
        continue;
      }
      break;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  swift_once(&qword_1007B3E20, sub_1002D4F4C);
LABEL_18:
  v92 = type metadata accessor for Logger(0);
  sub_100221DF8(v92, (uint64_t)qword_1007B98E0);
  v93 = v129;
  v94 = Logger.logObject.getter(v93);
  v95 = static os_log_type_t.error.getter(v94);
  if (os_log_type_enabled(v94, v95))
  {
    v96 = (uint8_t *)swift_slowAlloc(12, -1);
    v97 = (void ***)swift_slowAlloc(8, -1);
    *(_DWORD *)v96 = 138412290;
    v98 = (void **)objc_msgSend(v93, v29[203]);
    aBlock = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v133, v96 + 4);
    *v97 = v98;

    _os_log_impl((void *)&_mh_execute_header, v94, v95, "No completedURLs to install for %@", v96, 0xCu);
    v99 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v97, 1, v99);
    swift_slowDealloc(v97, -1, -1);
    swift_slowDealloc(v96, -1, -1);

  }
  else
  {

  }
  LOBYTE(aBlock) = 0;
  LOBYTE(v131) = 0;
  v130 = 1;
  v128((unsigned __int8 *)&aBlock, (unsigned __int8 *)&v131, &v130);
  swift_release(v27);
  v91 = v110;
  return swift_release(v91);
}

void sub_1002D6B08(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_1002D6B90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  const char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;

  v63 = a6;
  v64 = a5;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v61 - v18;
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_1007B3E20 != -1)
      swift_once(&qword_1007B3E20, sub_1002D4F4C);
    v20 = type metadata accessor for Logger(0);
    sub_100221DF8(v20, (uint64_t)qword_1007B98E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain(a3);
    v21 = swift_errorRetain(a3);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v62 = v10;
      v25 = v24;
      v26 = swift_slowAlloc(64, -1);
      v65 = a3;
      v66 = v26;
      *(_DWORD *)v25 = 136315394;
      swift_errorRetain(a3);
      v27 = sub_100008384(&qword_1007B5A60);
      v28 = String.init<A>(describing:)(&v65, v27);
      v30 = (const char *)v29;
      v65 = sub_100228BD8(v28, v29, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 4);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(a3);
      v31 = swift_errorRelease(a3);
      *(_WORD *)(v25 + 12) = 2080;
      v32 = URL.description.getter(v31);
      v34 = (const char *)v33;
      v65 = sub_100228BD8(v32, v33, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 14);
      v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v62, v35);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "IPA Handler: Failed to install app with error (%s for URL %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(a3);
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);

    }
LABEL_20:
    v59 = 0;
    return v64(v59);
  }
  if (!a2)
  {
    if (qword_1007B3E20 != -1)
      swift_once(&qword_1007B3E20, sub_1002D4F4C);
    v48 = type metadata accessor for Logger(0);
    sub_100221DF8(v48, (uint64_t)qword_1007B98E0);
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a4, v10);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      v66 = v53;
      *(_DWORD *)v52 = 136315138;
      v54 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v55 = dispatch thunk of CustomStringConvertible.description.getter(v10, v54);
      v57 = (const char *)v56;
      v65 = sub_100228BD8(v55, v56, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v52 + 4);
      v58 = swift_bridgeObjectRelease(v57);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v17, v10, v58);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "IPA Handler: No error or success bundle ID for installing: %s", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }

    goto LABEL_20;
  }
  v36 = qword_1007B3E20;
  swift_bridgeObjectRetain(a2);
  if (v36 != -1)
    swift_once(&qword_1007B3E20, sub_1002D4F4C);
  v37 = type metadata accessor for Logger(0);
  sub_100221DF8(v37, (uint64_t)qword_1007B98E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
  v38 = swift_bridgeObjectRetain(a2);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v62 = swift_slowAlloc(64, -1);
    v66 = v62;
    *(_DWORD *)v41 = 136315394;
    swift_bridgeObjectRetain(a2);
    v65 = sub_100228BD8(a1, (unint64_t)a2, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v41 + 4);
    v42 = swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v41 + 12) = 2080;
    v43 = URL.description.getter(v42);
    v45 = (const char *)v44;
    v65 = sub_100228BD8(v43, v44, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v41 + 14);
    v46 = swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v46);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "IPA Handler: Successful app install '%s' for URL %s", (uint8_t *)v41, 0x16u);
    v47 = v62;
    swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  v59 = 1;
  return v64(v59);
}

uint64_t sub_1002D71F4(uint64_t result, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    goto LABEL_4;
  if ((*(_BYTE *)(result + 32) & 1) == 0)
  {
    v3 = 0;
    return a2(v3, 0, 1);
  }
  if (v2 == 1)
  {
LABEL_4:
    v3 = 1;
    return a2(v3, 0, 1);
  }
  v4 = 33;
  while (1)
  {
    v5 = v4 - 31;
    if (__OFADD__(v4 - 32, 1))
      break;
    v3 = *(unsigned __int8 *)(result + v4++);
    if ((_DWORD)v3 != 1 || v5 == v2)
      return a2(v3, 0, 1);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropHandlerIPA()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary19SDAirDropHandlerIPA);
}

uint64_t sub_1002D7334()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D7358()
{
  return sub_1002D5FE4(0, 0);
}

uint64_t sub_1002D7380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002D7390(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002D7398()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D73BC(char a1, char a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v3 + 16) + 16))(*(_QWORD *)(v3 + 16), a1 & 1, a2 & 1, a3 & 1);
}

uint64_t sub_1002D73E4(char a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(char *, char *, char *);
  char v6;
  char v7;
  char v8;

  v4 = *(uint64_t (**)(char *, char *, char *))(v3 + 16);
  v8 = a1;
  v7 = a2;
  v6 = a3;
  return v4(&v8, &v7, &v6);
}

uint64_t sub_1002D7424()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D7448(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D71F4(a1, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v1 + 16));
}

uint64_t sub_1002D7450()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D7474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D74BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1002D74E8()
{
  uint64_t *v0;
  double result;

  *(_QWORD *)&result = sub_1003341BC(v0[2], v0[3], (void (*)(_QWORD *, __n128))v0[4]).n128_u64[0];
  return result;
}

uint64_t sub_1002D74F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D7528(uint64_t a1)
{
  uint64_t v1;

  sub_10033570C(a1, *(os_unfair_lock_s **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1002D7534(char a1)
{
  uint64_t v1;

  return sub_100334064(a1, *(uint64_t (**)(char *))(v1 + 16));
}

uint64_t sub_1002D753C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1002D75B4(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1002D6B90(a1, a2, a3, v3 + v8, *(uint64_t (**)(uint64_t))v9, *(_QWORD *)(v9 + 8));
}

uint64_t sub_1002D7620(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v3 + 16))(*a1, *a2, *a3);
}

uint64_t sub_1002D766C(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v9;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = a3 + 32;
  while (1)
  {
    v11 = *(_OWORD *)(v7 + 16 * v6);
    v12 = v11;
    swift_unknownObjectRetain(v11);
    v8 = *((id *)&v11 + 1);
    v9 = a1(&v12);

    swift_unknownObjectRelease(v11);
    if (v3 || (v9 & 1) != 0)
      break;
    if (v4 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_1002D7748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B9950);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B9950);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002D77D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for SFPlatform(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 48);
  if (objc_msgSend(v5, "screenStateSupportsAirDrop")
    && objc_msgSend(v5, "discoverableLevel")
    && objc_msgSend(v5, "wirelessEnabled")
    && objc_msgSend(v5, "bluetoothEnabledIncludingRestricted"))
  {
    static SFPlatform.watchOS.getter();
    v6 = static SFPlatform.isPlatform(_:)(v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v7 = v6 ^ 1;
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1002D78C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = type metadata accessor for SFPlatform(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(void **)(v0 + 48);
  if (!objc_msgSend(v5, "screenStateSupportsAirDrop")
    || !objc_msgSend(v5, "discoverableLevel")
    || !objc_msgSend(v5, "wirelessEnabled")
    || !objc_msgSend(v5, "bluetoothEnabledIncludingRestricted"))
  {
    goto LABEL_8;
  }
  v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
  *(_QWORD *)&v7 = swift_beginAccess(v6, v17, 0, 0).n128_u64[0];
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v8)
  {
    v9 = objc_msgSend(v5, "bluetoothAddress", v7);
    if (v9)
    {
      v10 = v9;
      v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;

      v14 = sub_100225AB4(v11, v13);
      static SFPlatform.watchOS.getter(v14);
      LOBYTE(v10) = static SFPlatform.isPlatform(_:)(v4);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      LOBYTE(v8) = v10 ^ 1;
      return v8 & 1;
    }
LABEL_8:
    LOBYTE(v8) = 0;
  }
  return v8 & 1;
}

uint64_t sub_1002D7A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit(v7 + 16, 0);
  *(_QWORD *)(v7 + 40) = 0;
  v15 = swift_unknownObjectWeakInit(v7 + 32, 0);
  *(_DWORD *)(v7 + 104) = 0;
  UUID.init()(v15);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes) = &_swiftEmptySetSingleton;
  v16 = (_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors) = &_swiftEmptySetSingleton;
  v17 = (_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = 0;
  v18 = (_QWORD *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  *v18 = 0;
  v18[1] = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = 0;
  *(_QWORD *)(v7 + 48) = a1;
  *(_QWORD *)(v7 + 56) = a2;
  *(_QWORD *)(v7 + 112) = a3;
  *(_QWORD *)(v7 + 64) = a4;
  *(_QWORD *)(v7 + 72) = a6;
  *(_QWORD *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 88) = a7;
  *(_QWORD *)(v7 + 96) = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  return v7;
}

void sub_1002D7BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for SFPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100221DF8(v6, (uint64_t)qword_1007B9950);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting AirDrop Receive Connection Manager", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  sub_1002D7D40();
  v11 = objc_msgSend(*(id *)(v1 + 48), "screenStateSupportsAirDrop");
  if ((_DWORD)v11)
  {
    static SFPlatform.watchOS.getter(v11);
    v12 = static SFPlatform.isPlatform(_:)(v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v12 & 1) == 0)
    {
      v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
      swift_retain(v1);
      sub_1004A18F0(v13, (uint64_t)sub_1002E736C, v1);
      swift_release(v1);
    }
    sub_1002D8108(0);
  }
}

void sub_1002D7D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char v7;
  const char *v8;
  unint64_t v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  int *v13;
  uint32_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for SFPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + 96);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "screenStateChangedWithNotification:", CFSTR("com.apple.sharingd.ScreenStateChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "screenStateChangedWithNotification:", CFSTR("com.apple.sharingd.MirroringStateChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "appleIDChangedWithNotification:", CFSTR("com.apple.sharingd.AppleIDAccountInfoChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "discoverableModeChangedWithNotification:", CFSTR("com.apple.sharingd.DiscoverableModeChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "deviceNameChangedWithNotification:", CFSTR("com.apple.sharingd.LocalHostNameChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.WirelessModeChanged"), 0);
  objc_msgSend(v6, "addObserver:selector:name:object:", v1, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.WirelessPowerChanged"), 0);
  static SFPlatform.macOS.getter(objc_msgSend(v6, "addObserver:selector:name:object:", v1, "wirelessBluetoothStateChangedWithNotification:", CFSTR("com.apple.sharingd.BluetoothPowerChanged"), 0));
  v7 = static SFPlatform.isPlatform(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
    objc_msgSend(v6, "addObserver:selector:name:object:", v1, "consoleUserChangedWithNotification:", CFSTR("com.apple.sharingd.ConsoleUserChanged"), 0);
  v8 = (const char *)objc_msgSend(objc_retainAutorelease(SFNotificationAirDropCellularUsageChanged), "UTF8String");
  v9 = sub_1002741DC();
  v10 = static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1007217F8, 24, 7);
  swift_weakInit(v11 + 16, v1);
  aBlock[4] = sub_1002E7474;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100366D0C;
  aBlock[3] = &unk_100721928;
  v12 = _Block_copy(aBlock);
  swift_release(v21);
  v13 = (int *)(v1 + 104);
  swift_beginAccess(v13, aBlock, 33, 0);
  v14 = notify_register_dispatch(v8, v13, v10, v12);
  swift_endAccess(aBlock);
  _Block_release(v12);

  if (v14)
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007B9950);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 67109120;
      LODWORD(aBlock[0]) = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v19 + 4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to register for cellular usage changed notifications with status %u", v19, 8u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
}

void sub_1002D8108(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t oslog;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v3 = a1;
  sub_1002DD82C(a1);
  if (v3)
  {
    if (v3 != 1)
      return;
    v4 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
    if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer))
    {
      if ((sub_1002D78C4() & 1) != 0)
      {
        v5 = (void *)v1[6];
        v6 = (void *)v1[7];
        v7 = v1[10];
        v8 = (void *)v1[11];
        v9 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourServer());
        swift_retain(v1);
        v10 = v5;
        v11 = v6;
        swift_retain(v7);
        v12 = v8;
        v13 = sub_1002E9940(v10, v11, v7, v12, (uint64_t)v1, (uint64_t)&off_1007217A0);
        swift_release(v2);

        swift_release(v7);
        v14 = *v4;
        *v4 = (uint64_t)v13;
        v4[1] = (uint64_t)&off_100721B98;
        oslog = (os_log_t)v13;
        swift_unknownObjectRelease(v14);
        sub_1002E7840();
LABEL_29:

        return;
      }
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_100221DF8(v29, (uint64_t)qword_1007B9950);
      oslog = (os_log_t)Logger.logObject.getter(v30);
      v31 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v31))
        goto LABEL_29;
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      v33 = "Ignoring Bonjour Server Start";
      goto LABEL_28;
    }
  }
  else
  {
    v15 = (_QWORD *)((char *)v1
                   + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
    if (!*(_QWORD *)((char *)v1
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer))
    {
      if ((sub_1002D77D8() & 1) != 0)
      {
        v23 = (void *)v1[6];
        v24 = v1[10];
        v25 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceServer());
        v26 = v23;
        swift_retain(v24);
        swift_retain(v1);
        v27 = sub_10034A6D0(v26, v24, (uint64_t)v1, (uint64_t)&off_1007217A0);
        swift_release(v2);
        swift_release(v24);

        v28 = *v15;
        *v15 = (uint64_t)v27;
        v15[1] = (uint64_t)&off_1007233B8;
        oslog = (os_log_t)v27;
        swift_unknownObjectRelease(v28);
        sub_100348AE4();
        goto LABEL_29;
      }
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100221DF8(v34, (uint64_t)qword_1007B9950);
      oslog = (os_log_t)Logger.logObject.getter(v35);
      v31 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v31))
        goto LABEL_29;
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      v33 = "Ignoring Application Service Server Start";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, oslog, v31, v33, v32, 2u);
      swift_slowDealloc(v32, -1, -1);
      goto LABEL_29;
    }
  }
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100221DF8(v16, (uint64_t)qword_1007B9950);
  oslog = (os_log_t)Logger.logObject.getter(v17);
  v18 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(oslog, v18))
    goto LABEL_29;
  v19 = (uint8_t *)swift_slowAlloc(12, -1);
  v20 = swift_slowAlloc(32, -1);
  *(_DWORD *)v19 = 136315138;
  v38 = v20;
  if (v3)
    v21 = 0x2072756F6A6E6F42;
  else
    v21 = 0xD00000000000001ALL;
  if (v3)
    v22 = (const char *)0xEE00726576726553;
  else
    v22 = (const char *)0x8000000100615690;
  v37 = sub_100228BD8(v21, (unint64_t)v22, &v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 4);
  swift_bridgeObjectRelease(v22);
  _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Server already exists for type %s", v19, 0xCu);
  swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v20, -1, -1);
  swift_slowDealloc(v19, -1, -1);

}

uint64_t sub_1002D8598(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_100008384(&qword_1007B9B60);
  v2[7] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v4);
  v2[9] = swift_task_alloc(v4);
  v2[10] = swift_task_alloc(v4);
  v2[11] = swift_task_alloc(v4);
  v2[12] = swift_task_alloc(v4);
  v2[13] = swift_task_alloc(v4);
  v5 = sub_100008384(&qword_1007B9B68);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropServerConnection(0);
  v2[15] = v6;
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_1002D86B4, v7, 0);
}

uint64_t sub_1002D86B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t **v10;

  v1 = v0[15];
  v2 = v0[16];
  sub_100244384(v0[5], v2, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload(v2, v1) > 1)
  {
    v4 = (uint64_t *)v0[16];
    v3 = *v4;
    v5 = (char *)v4 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    v3 = *(_QWORD *)v0[16];
  }
  v7 = v0[14];
  NWConnection.start(queue:)(*(_QWORD *)(v0[6] + 88));
  swift_release(v3);
  v8 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v0[18] = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v0[19] = (uint64_t)v9;
  v9(v7, 1, 1, v8);
  v10 = (uint64_t **)swift_task_alloc(dword_1007B9B7C);
  v0[20] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_1002D87BC;
  return sub_1002D90DC(v0[14], v0[5]);
}

uint64_t sub_1002D87BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(*v0 + 112);
  v4 = *(_QWORD *)(*v0 + 56);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  sub_10000D0F0(v3, &qword_1007B9B68);
  v6 = *(int *)(v4 + 48);
  *(_DWORD *)(v1 + 200) = v6;
  v7 = v2 + v6;
  v8 = (_QWORD *)swift_task_alloc(dword_1007C26EC);
  *(_QWORD *)(v1 + 168) = v8;
  *v8 = v5;
  v8[1] = sub_1002D885C;
  return sub_10049E89C(*(_QWORD *)(v1 + 104), v7);
}

uint64_t sub_1002D885C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002D8EC0;
  else
    v4 = sub_1002D88C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), 0);
}

uint64_t sub_1002D88C0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 152);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = v3 + *(int *)(v0 + 200);
  v7 = v5 + *(int *)(*(_QWORD *)(v0 + 56) + 48);
  sub_100244384(v3, v5, type metadata accessor for SDAirDropMessage);
  sub_100244384(v6, v7, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100221DB4(v7, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  v2(v4, 0, 1, v1);
  v8 = (_QWORD *)swift_task_alloc(dword_1007B9B7C);
  *(_QWORD *)(v0 + 184) = v8;
  *v8 = v0;
  v8[1] = sub_1002D8988;
  return sub_1002D90DC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D8988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 184));
  sub_10000D0F0(v2, &qword_1007B9B68);
  sub_1002443C8(v3, type metadata accessor for SDAirDropMessage);
  return swift_task_switch(sub_1002D8A10, v1, 0);
}

uint64_t sub_1002D8A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = v1 + *(int *)(v0 + 200);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007B9950);
  v8 = v2 + *(int *)(v5 + 48);
  sub_100244384(v1, v2, type metadata accessor for SDAirDropMessage);
  sub_100244384(v6, v8, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_10022E718(v2, v3, &qword_1007B9B60);
  v9 = v4 + *(int *)(v5 + 48);
  sub_100244384(v1, v4, type metadata accessor for SDAirDropMessage);
  sub_100244384(v6, v9, type metadata accessor for SDAirDropServerConnectionIdentity);
  v10 = sub_10022E718(v4, v38, &qword_1007B9B60);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 56);
    v36 = *(_QWORD *)(v0 + 64);
    v35 = v15;
    v16 = swift_slowAlloc(22, -1);
    v39 = swift_slowAlloc(64, -1);
    v40 = v39;
    *(_DWORD *)v16 = 136315394;
    v17 = *(int *)(v15 + 48);
    type = v12;
    v18 = v13 + v17;
    v19 = v14 + v17;
    sub_100244384(v14, v13, type metadata accessor for SDAirDropMessage);
    sub_100244384(v19, v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    v20 = sub_10049FE10();
    v22 = v21;
    sub_1002443C8(v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    sub_1002443C8(v13, type metadata accessor for SDAirDropMessage);
    *(_QWORD *)(v0 + 24) = sub_100228BD8(v20, (unint64_t)v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v16 + 4);
    swift_bridgeObjectRelease(v22);
    sub_10000D0F0(v14, &qword_1007B9B60);
    *(_WORD *)(v16 + 12) = 2080;
    v23 = *(int *)(v35 + 48);
    v24 = v13 + v23;
    v25 = v36 + v23;
    sub_100244384(v36, v13, type metadata accessor for SDAirDropMessage);
    sub_100244384(v25, v24, type metadata accessor for SDAirDropServerConnectionIdentity);
    sub_10044F8C8();
    v27 = v26;
    v29 = v28;
    sub_1002443C8(v13, type metadata accessor for SDAirDropMessage);
    sub_1002443C8(v24, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_QWORD *)(v0 + 32) = sub_100228BD8(v27, (unint64_t)v29, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v16 + 14);
    swift_bridgeObjectRelease(v29);
    sub_10000D0F0(v36, &qword_1007B9B60);
    _os_log_impl((void *)&_mh_execute_header, v11, type, "Message id: %s, message: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 64);
    sub_10000D0F0(*(_QWORD *)(v0 + 80), &qword_1007B9B60);
    sub_10000D0F0(v30, &qword_1007B9B60);
  }

  v31 = *(int *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 104);
  v33 = (_QWORD *)swift_task_alloc(dword_1007B9B8C);
  *(_QWORD *)(v0 + 192) = v33;
  *v33 = v0;
  v33[1] = sub_1002D8DC8;
  return sub_1002D9404(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 40), v32 + v31);
}

uint64_t sub_1002D8DC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  return swift_task_switch(sub_1002D8E20, v1, 0);
}

uint64_t sub_1002D8E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10000D0F0(*(_QWORD *)(v0 + 104), &qword_1007B9B60);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D8EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 176);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error receiving message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D90DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v3[6] = v5;
  v3[7] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NWConnection.State(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for SDAirDropServerConnection(0);
  v3[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[13] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v3[14] = v11;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v12);
  v3[16] = swift_task_alloc(v12);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002D91E8, static AirDropActor.shared, 0);
}

uint64_t sub_1002D91E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  sub_100244384(*(_QWORD *)(v0 + 24), v1, type metadata accessor for SDAirDropServerConnection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  if (EnumCaseMultiPayload > 1)
  {
    v5 = *(uint64_t **)(v0 + 128);
    v4 = *v5;
    v6 = (char *)v5 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    v7 = type metadata accessor for UUID(0);
    EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    v4 = **(_QWORD **)(v0 + 128);
  }
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 72);
  v31 = v4;
  NWConnection.state.getter(EnumCaseMultiPayload);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v9, enum case for NWConnection.State.ready(_:), v10);
  v12 = static NWConnection.State.== infix(_:_:)(v8, v9);
  v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v13(v9, v10);
  v13(v8, v10);
  if ((v12 & 1) != 0)
    sub_1002E1F20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  v14 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 112);
  v28 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 24);
  sub_1002E6980(*(_QWORD *)(v0 + 16), v17);
  sub_100244384(v21, v14, type metadata accessor for SDAirDropServerConnection);
  v22 = *(unsigned __int8 *)(v19 + 80);
  v23 = (v22 + 24) & ~v22;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = (v18 + v24 + v23) & ~v24;
  v26 = swift_allocObject(&unk_1007217D0, v25 + v15, v22 | v24 | 7);
  *(_QWORD *)(v26 + 16) = v20;
  sub_10022E718(v17, v26 + v23, &qword_1007B9B68);
  sub_100221DB4(v14, v26 + v25, type metadata accessor for SDAirDropServerConnection);
  swift_retain(v20);
  NWConnection.stateUpdateHandler.setter(sub_1002E6B24, v26);
  swift_release(v31);
  swift_task_dealloc(v28);
  swift_task_dealloc(v14);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D9404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(_s12ErrorRequestVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[24] = swift_task_alloc(v5);
  v4[25] = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(_s15ExchangeRequestVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[26] = swift_task_alloc(v6);
  v4[27] = swift_task_alloc(v6);
  v7 = _s13UploadRequestVMa(0);
  v4[28] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v8);
  v4[30] = swift_task_alloc(v8);
  v9 = _s10AskRequestVMa(0);
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s12HelloRequestVMa(0);
  v4[32] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[33] = swift_task_alloc(v11);
  v4[34] = swift_task_alloc(v11);
  v4[35] = swift_task_alloc(v11);
  v12 = type metadata accessor for SDAirDropMessage(0);
  v4[36] = v12;
  v4[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  v4[38] = static AirDropActor.shared;
  return swift_task_switch(sub_1002D958C, v13, 0);
}

uint64_t sub_1002D958C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  Swift::String v19;
  const char *object;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  const char *v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  _BOOL4 v120;
  uint64_t v121;
  uint8_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  const char *v128;
  const char *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  const char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t type;
  uint64_t typea;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154[3];

  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  sub_100244384(*(_QWORD *)(v0 + 160), v1, type metadata accessor for SDAirDropMessage);
  v3 = v0 + 120;
  v4 = (uint64_t *)(v0 + 128);
  v5 = v0 + 136;
  switch(swift_getEnumCaseMultiPayload(v1, v2))
  {
    case 0u:
      v6 = *(_QWORD *)(v0 + 176);
      sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280), _s12HelloRequestVMa);
      v7 = sub_1002E0F38(v6);
      *(_QWORD *)(v0 + 352) = v7;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v9 = *(_QWORD *)(v0 + 272);
      v8 = *(_QWORD *)(v0 + 280);
      v10 = type metadata accessor for Logger(0);
      sub_100221DF8(v10, (uint64_t)qword_1007B9950);
      v11 = sub_100244384(v8, v9, _s12HelloRequestVMa);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      v14 = os_log_type_enabled(v12, v13);
      v15 = *(_QWORD *)(v0 + 272);
      if (v14)
      {
        v146 = v7;
        v17 = *(_QWORD *)(v0 + 256);
        v16 = *(_QWORD *)(v0 + 264);
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v143 = swift_slowAlloc(32, -1);
        v153 = v143;
        *(_DWORD *)v18 = 136315138;
        sub_100244384(v15, v16, _s12HelloRequestVMa);
        _StringGuts.grow(_:)(16);
        swift_bridgeObjectRelease((const char *)0xE000000000000000);
        strcpy((char *)v154, "HELLO request ");
        HIBYTE(v154[1]) = -18;
        *(_DWORD *)(v0 + 520) = *(_DWORD *)(v16 + *(int *)(v17 + 20));
        v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
        object = (const char *)v19._object;
        String.append(_:)(v19);
        swift_bridgeObjectRelease(object);
        v21 = v154[1];
        sub_1002443C8(v16, _s12HelloRequestVMa);
        *(_QWORD *)(v0 + 144) = sub_100228BD8(v154[0], v154[1], &v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v18 + 4);
        v22 = (const char *)v21;
        v7 = v146;
        swift_bridgeObjectRelease(v22);
        sub_1002443C8(v15, _s12HelloRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received HELLO request %s", v18, 0xCu);
        swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v143, -1, -1);
        swift_slowDealloc(v18, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 272), _s12HelloRequestVMa);
      }

      v130 = dword_1007C49E4;
      v7;
      v131 = (_QWORD *)swift_task_alloc(v130);
      *(_QWORD *)(v0 + 360) = v131;
      *v131 = v0;
      v131[1] = sub_1002DA788;
      result = sub_10050578C(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 168));
      break;
    case 2u:
      v44 = *(uint64_t **)(v0 + 296);
      v45 = *(_QWORD *)(v0 + 176);
      v46 = *v44;
      *(_QWORD *)(v0 + 312) = *v44;
      v47 = v44[1];
      *(_QWORD *)(v0 + 320) = v47;
      v48 = sub_1002E0F38(v45);
      *(_QWORD *)(v0 + 328) = v48;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v49 = type metadata accessor for Logger(0);
      sub_100221DF8(v49, (uint64_t)qword_1007B9950);
      sub_100244404(v46, v47);
      v50 = sub_100244404(v46, v47);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v148 = v48;
        v53 = (uint8_t *)swift_slowAlloc(12, -1);
        type = swift_slowAlloc(32, -1);
        v154[0] = type;
        *(_DWORD *)v53 = 136315138;
        if (v47 >> 60 == 15)
        {
          v54 = (const char *)0x8000000100615660;
          v55 = 0xD00000000000002ALL;
        }
        else
        {
          v55 = Data.description.getter(v46, v47);
          v54 = v140;
        }
        *(_QWORD *)(v0 + 152) = sub_100228BD8(v55, (unint64_t)v54, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v53 + 4);
        swift_bridgeObjectRelease(v54);
        sub_100225AA0(v46, v47);
        sub_100225AA0(v46, v47);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Received DISCOVER request {senderRecordData: %s}", v53, 0xCu);
        swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(type, -1, -1);
        swift_slowDealloc(v53, -1, -1);

        v48 = v148;
      }
      else
      {
        sub_100225AA0(v46, v47);
        sub_100225AA0(v46, v47);

      }
      v141 = dword_1007C49CC;
      v48;
      v142 = (_QWORD *)swift_task_alloc(v141);
      *(_QWORD *)(v0 + 336) = v142;
      *v142 = v0;
      v142[1] = sub_1002DA648;
      result = sub_1005044D8(v46, v47, *(_QWORD *)(v0 + 168));
      break;
    case 4u:
      v56 = *(_QWORD *)(v0 + 176);
      sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 248), _s10AskRequestVMa);
      v57 = sub_1002E0F38(v56);
      *(_QWORD *)(v0 + 376) = v57;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v58 = type metadata accessor for Logger(0);
      v59 = sub_100221DF8(v58, (uint64_t)qword_1007B9950);
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Received ASK request", v62, 2u);
        swift_slowDealloc(v62, -1, -1);
      }

      v63 = dword_1007C49F4;
      v57;
      v64 = (_QWORD *)swift_task_alloc(v63);
      *(_QWORD *)(v0 + 384) = v64;
      *v64 = v0;
      v64[1] = sub_1002DA8CC;
      result = sub_100505BAC(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 168));
      break;
    case 6u:
      v65 = *(_QWORD *)(v0 + 176);
      sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 240), _s13UploadRequestVMa);
      v66 = sub_1002E0F38(v65);
      *(_QWORD *)(v0 + 400) = v66;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v68 = *(_QWORD *)(v0 + 232);
      v67 = *(_QWORD *)(v0 + 240);
      v69 = type metadata accessor for Logger(0);
      sub_100221DF8(v69, (uint64_t)qword_1007B9950);
      v70 = sub_100244384(v67, v68, _s13UploadRequestVMa);
      v71 = Logger.logObject.getter(v70);
      v72 = static os_log_type_t.default.getter();
      v73 = os_log_type_enabled(v71, v72);
      v74 = *(_QWORD *)(v0 + 232);
      if (v73)
      {
        v149 = v66;
        v75 = *(_QWORD *)(v0 + 224);
        v76 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v76 = 134217984;
        v77 = *(_QWORD *)(v74 + *(int *)(v75 + 20));
        sub_1002443C8(v74, _s13UploadRequestVMa);
        *(_QWORD *)(v0 + 136) = v77;
        v66 = v149;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v5, v0 + 144, v76 + 4);
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "Received UPLOAD request %ld", v76, 0xCu);
        swift_slowDealloc(v76, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 232), _s13UploadRequestVMa);
      }

      v132 = dword_1007C4A3C;
      v66;
      v133 = (_QWORD *)swift_task_alloc(v132);
      *(_QWORD *)(v0 + 408) = v133;
      *v133 = v0;
      v133[1] = sub_1002DAA10;
      result = sub_100506940(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 168));
      break;
    case 8u:
      v78 = *(_QWORD *)(v0 + 176);
      sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 216), _s15ExchangeRequestVMa);
      v79 = sub_1002E0F38(v78);
      *(_QWORD *)(v0 + 424) = v79;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v81 = *(_QWORD *)(v0 + 208);
      v80 = *(_QWORD *)(v0 + 216);
      v82 = type metadata accessor for Logger(0);
      sub_100221DF8(v82, (uint64_t)qword_1007B9950);
      v83 = sub_100244384(v80, v81, _s15ExchangeRequestVMa);
      v84 = Logger.logObject.getter(v83);
      v85 = static os_log_type_t.default.getter();
      v86 = os_log_type_enabled(v84, v85);
      v87 = *(_QWORD *)(v0 + 208);
      if (v86)
      {
        v150 = v79;
        v88 = (uint8_t *)swift_slowAlloc(12, -1);
        v89 = swift_slowAlloc(32, -1);
        v154[0] = v89;
        *(_DWORD *)v88 = 136315138;
        v90 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
        v91 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
        v92 = dispatch thunk of CustomStringConvertible.description.getter(v90, v91);
        v94 = (const char *)v93;
        *v4 = sub_100228BD8(v92, v93, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v4, v5, v88 + 4);
        v95 = v94;
        v79 = v150;
        swift_bridgeObjectRelease(v95);
        sub_1002443C8(v87, _s15ExchangeRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v84, v85, "Received EXCHANGE request %s", v88, 0xCu);
        swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1, -1);
        swift_slowDealloc(v88, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 208), _s15ExchangeRequestVMa);
      }

      v134 = dword_1007C4A74;
      v79;
      v135 = (_QWORD *)swift_task_alloc(v134);
      *(_QWORD *)(v0 + 432) = v135;
      *v135 = v0;
      v135[1] = sub_1002DAB54;
      result = sub_100508B04(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 168));
      break;
    case 0xAu:
      v96 = *(_QWORD *)(v0 + 296);
      v97 = *(_QWORD *)(v0 + 176);
      v98 = *(_OWORD *)(v96 + 16);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)v96;
      *(_OWORD *)(v0 + 32) = v98;
      v99 = v0 + 16;
      v101 = *(_OWORD *)(v96 + 48);
      v100 = *(_OWORD *)(v96 + 64);
      v102 = *(_OWORD *)(v96 + 32);
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v96 + 80);
      *(_OWORD *)(v0 + 64) = v101;
      *(_OWORD *)(v0 + 80) = v100;
      *(_OWORD *)(v0 + 48) = v102;
      v103 = sub_1002E0F38(v97);
      *(_QWORD *)(v0 + 448) = v103;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v104 = type metadata accessor for Logger(0);
      sub_100221DF8(v104, (uint64_t)qword_1007B9950);
      v105 = sub_1002E6848(v99);
      v106 = Logger.logObject.getter(v105);
      v107 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v106, v107))
      {
        v151 = v103;
        v108 = (uint8_t *)swift_slowAlloc(12, -1);
        typea = swift_slowAlloc(32, -1);
        v154[0] = typea;
        *(_DWORD *)v108 = 136315138;
        v109 = *(_QWORD *)(v0 + 80);
        v110 = *(const char **)(v0 + 88);
        swift_bridgeObjectRetain(v110);
        v111 = v109;
        v103 = v151;
        *(_QWORD *)(v0 + 120) = sub_100228BD8(v111, (unint64_t)v110, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v4, v108 + 4);
        swift_bridgeObjectRelease(v110);
        sub_1002E68C4(v99);
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "Received IDENTITY-SHARE request %s", v108, 0xCu);
        swift_arrayDestroy(typea, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(typea, -1, -1);
        swift_slowDealloc(v108, -1, -1);
      }
      else
      {
        sub_1002E68C4(v99);
      }

      v136 = dword_1007C4A7C;
      v103;
      v137 = (_QWORD *)swift_task_alloc(v136);
      *(_QWORD *)(v0 + 456) = v137;
      *v137 = v0;
      v137[1] = sub_1002DAC98;
      result = sub_100508E78(v99, *(_QWORD *)(v0 + 168));
      break;
    case 0xCu:
      v112 = *(_QWORD *)(v0 + 176);
      sub_100221DB4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 200), _s12ErrorRequestVMa);
      v113 = sub_1002E0F38(v112);
      *(_QWORD *)(v0 + 472) = v113;
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v115 = *(_QWORD *)(v0 + 192);
      v114 = *(_QWORD *)(v0 + 200);
      v116 = type metadata accessor for Logger(0);
      sub_100221DF8(v116, (uint64_t)qword_1007B9950);
      v117 = sub_100244384(v114, v115, _s12ErrorRequestVMa);
      v118 = Logger.logObject.getter(v117);
      v119 = static os_log_type_t.default.getter();
      v120 = os_log_type_enabled(v118, v119);
      v121 = *(_QWORD *)(v0 + 192);
      if (v120)
      {
        v152 = v113;
        v122 = (uint8_t *)swift_slowAlloc(12, -1);
        v123 = swift_slowAlloc(32, -1);
        v154[0] = v123;
        *(_DWORD *)v122 = 136315138;
        v124 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
        v125 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
        v126 = dispatch thunk of CustomStringConvertible.description.getter(v124, v125);
        v128 = (const char *)v127;
        *(_QWORD *)(v0 + 112) = sub_100228BD8(v126, v127, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v3, v122 + 4);
        v129 = v128;
        v113 = v152;
        swift_bridgeObjectRelease(v129);
        sub_1002443C8(v121, _s12ErrorRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v118, v119, "Received ERROR request %s", v122, 0xCu);
        swift_arrayDestroy(v123, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v123, -1, -1);
        swift_slowDealloc(v122, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 192), _s12ErrorRequestVMa);
      }

      v138 = dword_1007C4A8C;
      v113;
      v139 = (_QWORD *)swift_task_alloc(v138);
      *(_QWORD *)(v0 + 480) = v139;
      *v139 = v0;
      v139[1] = sub_1002DADD8;
      result = sub_100509608(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168));
      break;
    default:
      v23 = *(_QWORD *)(v0 + 296);
      v24 = type metadata accessor for SFAirDropReceive.Failure(0);
      v25 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v26 = swift_allocError(v24, v25, 0, 0);
      v28 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, enum case for SFAirDropReceive.Failure.badRequest(_:), v24);
      swift_willThrow(v28);
      sub_1002443C8(v23, type metadata accessor for SDAirDropMessage);
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_100221DF8(v29, (uint64_t)qword_1007B9950);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing handler after failure", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
      }

      sub_1004A0010(0);
      swift_errorRelease(v26);
      v34 = *(_QWORD *)(v0 + 272);
      v35 = *(_QWORD *)(v0 + 280);
      v36 = *(_QWORD *)(v0 + 264);
      v38 = *(_QWORD *)(v0 + 240);
      v37 = *(_QWORD *)(v0 + 248);
      v39 = *(_QWORD *)(v0 + 232);
      v41 = *(_QWORD *)(v0 + 208);
      v40 = *(_QWORD *)(v0 + 216);
      v42 = *(_QWORD *)(v0 + 200);
      v147 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 296));
      swift_task_dealloc(v35);
      swift_task_dealloc(v34);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v147);
      result = (*(uint64_t (**)(void))(v0 + 8))();
      break;
  }
  return result;
}

uint64_t sub_1002DA648()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 336);
  *(_QWORD *)(*v1 + 344) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 304);
    v5 = sub_1002DB058;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 304);

    v5 = sub_1002DA6BC;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002DA6BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 328);
  sub_100225AA0(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DA788()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 360);
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 352);
  v5 = *(_QWORD *)(v2 + 304);

  if (v0)
    v6 = sub_1002DB274;
  else
    v6 = sub_1002DA7F8;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DA7F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 352);
  sub_1002443C8(*(_QWORD *)(v0 + 280), _s12HelloRequestVMa);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DA8CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 376);
  v5 = *(_QWORD *)(v2 + 304);

  if (v0)
    v6 = sub_1002DB488;
  else
    v6 = sub_1002DA93C;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DA93C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 376);
  sub_1002443C8(*(_QWORD *)(v0 + 248), _s10AskRequestVMa);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DAA10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(*v1 + 416) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 400);
  v5 = *(_QWORD *)(v2 + 304);

  if (v0)
    v6 = sub_1002DB69C;
  else
    v6 = sub_1002DAA80;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DAA80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 400);
  sub_1002443C8(*(_QWORD *)(v0 + 240), _s13UploadRequestVMa);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DAB54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 432);
  *(_QWORD *)(*v1 + 440) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 424);
  v5 = *(_QWORD *)(v2 + 304);

  if (v0)
    v6 = sub_1002DB8B0;
  else
    v6 = sub_1002DABC4;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DABC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 424);
  sub_1002443C8(*(_QWORD *)(v0 + 216), _s15ExchangeRequestVMa);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DAC98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 456);
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 304);
    v5 = sub_1002DBAC4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 304);

    v5 = sub_1002DAD0C;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002DAD0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 448);
  sub_1002E68C4(v0 + 16);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DADD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 480);
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 472);
  v5 = *(_QWORD *)(v2 + 304);

  if (v0)
    v6 = sub_1002DBCDC;
  else
    v6 = sub_1002DAE48;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DAE48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 472);
  sub_1002443C8(*(_QWORD *)(v0 + 200), _s12ErrorRequestVMa);

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DAF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 504);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 512));
  swift_errorRelease(v1);
  return swift_task_switch(sub_1002DAF7C, v2, 0);
}

uint64_t sub_1002DAF7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(void **)(v0 + 496);
  v1 = *(_QWORD *)(v0 + 504);

  sub_1004A0010(0);
  swift_errorRelease(v1);

  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DB058()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 312);

  sub_100225AA0(v2, v1);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(void **)(v0 + 328);
  *(_QWORD *)(v0 + 496) = v4;
  *(_QWORD *)(v0 + 504) = v3;
  v5 = qword_1007B3E28;
  v4;
  if (v5 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v6 = type metadata accessor for Logger(0);
  sub_100221DF8(v6, (uint64_t)qword_1007B9950);
  swift_errorRetain(v3);
  v7 = swift_errorRetain(v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v3);
    v12 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 104) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error handling message %@", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  sub_100509B90(v3);
  swift_errorRetain(v3);
  v14 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  *(_QWORD *)(v0 + 512) = v14;
  *v14 = v0;
  v14[1] = sub_1002DAF1C;
  return sub_1002DE698(*(_QWORD *)(v0 + 176), v3);
}

uint64_t sub_1002DB274()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002443C8(v0[35], _s12HelloRequestVMa);
  v1 = v0[46];
  v2 = (void *)v0[44];
  v0[62] = v2;
  v0[63] = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v0[64] = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(v0[22], v1);
}

uint64_t sub_1002DB488()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002443C8(v0[31], _s10AskRequestVMa);
  v1 = v0[49];
  v2 = (void *)v0[47];
  v0[62] = v2;
  v0[63] = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v0[64] = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(v0[22], v1);
}

uint64_t sub_1002DB69C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002443C8(v0[30], _s13UploadRequestVMa);
  v1 = v0[52];
  v2 = (void *)v0[50];
  v0[62] = v2;
  v0[63] = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v0[64] = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(v0[22], v1);
}

uint64_t sub_1002DB8B0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002443C8(v0[27], _s15ExchangeRequestVMa);
  v1 = v0[55];
  v2 = (void *)v0[53];
  v0[62] = v2;
  v0[63] = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v0[64] = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(v0[22], v1);
}

uint64_t sub_1002DBAC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002E68C4(v0 + 16);
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(void **)(v0 + 448);
  *(_QWORD *)(v0 + 496) = v2;
  *(_QWORD *)(v0 + 504) = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 104) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  *(_QWORD *)(v0 + 512) = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(*(_QWORD *)(v0 + 176), v1);
}

uint64_t sub_1002DBCDC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1002443C8(v0[25], _s12ErrorRequestVMa);
  v1 = v0[61];
  v2 = (void *)v0[59];
  v0[62] = v2;
  v0[63] = v1;
  v3 = qword_1007B3E28;
  v2;
  if (v3 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100509B90(v1);
  swift_errorRetain(v1);
  v12 = (_QWORD *)swift_task_alloc(dword_1007B9B9C);
  v0[64] = v12;
  *v12 = v0;
  v12[1] = sub_1002DAF1C;
  return sub_1002DE698(v0[22], v1);
}

uint64_t sub_1002DBEF0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = v2;
  *(_BYTE *)(v3 + 208) = a1;
  v4 = type metadata accessor for CodableError(0);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 184) = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v6);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002DBF94, static AirDropActor.shared, 0);
}

uint64_t sub_1002DBF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const char **v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char **v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  __n128 v29;
  void (*v30)(uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char **v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  __n128 v46;
  void (*v47)(uint64_t, uint64_t, __n128);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  if (*(_BYTE *)(v0 + 208))
  {
    if (*(_BYTE *)(v0 + 208) == 1)
    {
      v1 = *(_QWORD *)(v0 + 200);
      v2 = *(_QWORD *)(v0 + 184);
      v57 = *(_QWORD *)(v0 + 176);
      v3 = *(_QWORD *)(v0 + 160);
      v4 = (const char **)(*(_QWORD *)(v0 + 168)
                         + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
      swift_beginAccess(v4, v0 + 64, 0, 0);
      v5 = *v4;
      v6 = type metadata accessor for NWError(0);
      v7 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v8 = swift_allocError(v6, v7, 0, 0);
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v9(v10, v3, v6);
      swift_bridgeObjectRetain(v5);
      CodableError.init(_:)(v8);
      LOBYTE(v3) = sub_10045545C(v1, (uint64_t)v5);
      v11 = swift_bridgeObjectRelease(v5);
      v12 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
      v12(v1, v57, v11);
      if ((v3 & 1) == 0)
      {
        v13 = *(_QWORD *)(v0 + 192);
        v14 = *(_QWORD *)(v0 + 200);
        v15 = *(_QWORD *)(v0 + 160);
        v55 = *(_QWORD *)(v0 + 176);
        v16 = swift_allocError(v6, v7, 0, 0);
        v9(v17, v15, v6);
        CodableError.init(_:)(v16);
        swift_beginAccess(v4, v0 + 88, 33, 0);
        sub_10045E124(v14, v13);
        swift_endAccess(v0 + 88);
        ((void (*)(uint64_t, uint64_t))v12)(v14, v55);
        v18 = 1;
LABEL_7:
        sub_1002D8108(v18);
      }
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 200);
      v37 = *(_QWORD *)(v0 + 184);
      v59 = *(_QWORD *)(v0 + 176);
      v38 = *(_QWORD *)(v0 + 160);
      v39 = (const char **)(*(_QWORD *)(v0 + 168)
                          + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors);
      swift_beginAccess(v39, v0 + 16, 0, 0);
      v40 = *v39;
      v41 = type metadata accessor for NWError(0);
      v42 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v43 = swift_allocError(v41, v42, 0, 0);
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
      v44(v45, v38, v41);
      swift_bridgeObjectRetain(v40);
      CodableError.init(_:)(v43);
      LOBYTE(v38) = sub_10045545C(v36, (uint64_t)v40);
      v46 = swift_bridgeObjectRelease(v40);
      v47 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
      v47(v36, v59, v46);
      if ((v38 & 1) == 0)
      {
        v48 = *(_QWORD *)(v0 + 192);
        v49 = *(_QWORD *)(v0 + 200);
        v60 = *(_QWORD *)(v0 + 176);
        v50 = *(_QWORD *)(v0 + 160);
        v51 = swift_allocError(v41, v42, 0, 0);
        v44(v52, v50, v41);
        CodableError.init(_:)(v51);
        swift_beginAccess(v39, v0 + 40, 33, 0);
        sub_10045E124(v49, v48);
        swift_endAccess(v0 + 40);
        ((void (*)(uint64_t, uint64_t))v47)(v49, v60);
      }
    }
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 184);
    v58 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 160);
    v22 = (const char **)(*(_QWORD *)(v0 + 168)
                        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
    swift_beginAccess(v22, v0 + 112, 0, 0);
    v23 = *v22;
    v24 = type metadata accessor for NWError(0);
    v25 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
    v26 = swift_allocError(v24, v25, 0, 0);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v27(v28, v21, v24);
    swift_bridgeObjectRetain(v23);
    CodableError.init(_:)(v26);
    LOBYTE(v21) = sub_10045545C(v19, (uint64_t)v23);
    v29 = swift_bridgeObjectRelease(v23);
    v30 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
    v30(v19, v58, v29);
    if ((v21 & 1) == 0)
    {
      v31 = *(_QWORD *)(v0 + 192);
      v32 = *(_QWORD *)(v0 + 200);
      v33 = *(_QWORD *)(v0 + 160);
      v56 = *(_QWORD *)(v0 + 176);
      v34 = swift_allocError(v24, v25, 0, 0);
      v27(v35, v33, v24);
      CodableError.init(_:)(v34);
      swift_beginAccess(v22, v0 + 136, 33, 0);
      sub_10045E124(v32, v31);
      swift_endAccess(v0 + 136);
      ((void (*)(uint64_t, uint64_t))v30)(v32, v56);
      v18 = 0;
      goto LABEL_7;
    }
  }
  v53 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002DC3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56[3];

  v6 = v5;
  v51 = a4;
  v52 = a5;
  v53 = a3;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)v50 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)v50 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v16, a1, v9);
  v20 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess(v20, v56, 33, 0);
  sub_10045DC08((uint64_t)v18, v16);
  swift_endAccess(v56);
  v54 = *(void (**)(char *, uint64_t))(v10 + 8);
  v54(v18, v9);
  v21 = *(void **)(v6 + 48);
  if (objc_msgSend(v21, "screenStateSupportsAirDrop")
    && objc_msgSend(v21, "wirelessEnabled")
    && *(_QWORD *)(*(_QWORD *)v20 + 16))
  {
    v22 = (uint64_t *)(v6
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
    swift_beginAccess(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID, v56, 32, 0);
    if (*(_QWORD *)(*v22 + 16) && (sub_10045C2DC(a1), (v23 & 1) != 0))
    {
      swift_endAccess(v56);
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v24 = type metadata accessor for Logger(0);
      sub_100221DF8(v24, (uint64_t)qword_1007B9950);
      v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v13, a1, v9);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v29 = swift_slowAlloc(32, -1);
        v56[0] = v29;
        *(_DWORD *)v28 = 136315138;
        v30 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v31 = dispatch thunk of CustomStringConvertible.description.getter(v9, v30);
        v33 = v32;
        v55 = sub_100228BD8(v31, v32, v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v28 + 4);
        swift_bridgeObjectRelease(v33);
        v54(v13, v9);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Near Field server already running for transaction %s", v28, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        v54(v13, v9);
      }

    }
    else
    {
      swift_endAccess(v56);
      v19(v18, a1, v9);
      v19(v16, a2, v9);
      v50[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropNearFieldServer(0));
      v39 = v53;
      swift_unknownObjectRetain(v53);
      v40 = v22;
      v42 = v51;
      v41 = v52;
      sub_10022E4A8(v51, v52);
      v43 = swift_retain(v6);
      v44 = (uint64_t)v16;
      v45 = v39;
      v46 = sub_100401870(v43, (uint64_t)&off_1007217A0, (uint64_t)v18, v44, v39, v42, v41);
      sub_100225AB4(v42, v41);
      swift_release(v6);
      swift_unknownObjectRelease(v45);
      v19(v18, a1, v9);
      swift_beginAccess(v40, v56, 33, 0);
      v47 = v46;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
      v55 = *v40;
      *v40 = 0x8000000000000000;
      sub_1002E6640((uint64_t)v47, (uint64_t)v18, isUniquelyReferenced_nonNull_native, &v55);
      v49 = *v40;
      *v40 = v55;
      swift_bridgeObjectRelease(v49);
      v54(v18, v9);
      swift_endAccess(v56);
      sub_1003FF468();

    }
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100221DF8(v34, (uint64_t)qword_1007B9950);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Ignoring Near Field Server Start", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

  }
}

void sub_1002DC904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID, v38, 32, 0);
  v12 = *v11;
  if (*(_QWORD *)(*v11 + 16) && (v13 = sub_10045C2DC(a1), (v14 & 1) != 0))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v13);
    v16 = *v15;
    v17 = v15[1];
    swift_endAccess(v38);
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, v38, 33, 0);
    swift_unknownObjectRetain(v16);
    sub_100471B70(a1, (uint64_t)v10);
    swift_endAccess(v38);
    sub_10000D0F0((uint64_t)v10, &qword_1007B7280);
    v18 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers, v38, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v18 + 16))
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_100221DF8(v19, (uint64_t)qword_1007B9950);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Near Field server has active connections, not stopping", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
        swift_unknownObjectRelease(v16);

      }
      else
      {

        swift_unknownObjectRelease(v16);
      }
    }
    else
    {
      ObjectType = swift_getObjectType(v16);
      (*(void (**)(uint64_t, uint64_t))(v17 + 64))(ObjectType, v17);
      swift_beginAccess(v11, &v36, 33, 0);
      v35 = sub_100269F7C(a1);
      swift_endAccess(&v36);
      swift_unknownObjectRelease(v16);
      swift_unknownObjectRelease(v35);
    }
  }
  else
  {
    swift_endAccess(v38);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007B9950);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v38[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v31 = dispatch thunk of CustomStringConvertible.description.getter(v4, v30);
      v33 = v32;
      v36 = sub_100228BD8(v31, v32, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v28 + 4);
      swift_bridgeObjectRelease(v33);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Near Field server does not exist for transaction %s", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

  }
}

void sub_1002DCD38(char a1, char a2)
{
  int64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  const char *v62;
  int64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char **v72;
  char *v73;
  int64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t *v77;
  int64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[16];
  uint64_t v85;
  _BYTE v86[16];
  uint64_t v87[3];

  v3 = v2;
  LOBYTE(v4) = a2;
  LOBYTE(v5) = a1;
  v6 = sub_100008384(&qword_1007B9BC0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v76 - v10;
  if (!(_BYTE)v5)
  {
    v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
LABEL_5:
    v13 = (char **)(v2 + *v12);
    v9 = *v13;
    if (*v13)
    {
      v11 = v13[1];
      v14 = qword_1007B3E28;
      swift_unknownObjectRetain(v9);
      if (v14 != -1)
        goto LABEL_79;
      goto LABEL_7;
    }
    return;
  }
  if (v5 == 1)
  {
    v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
    goto LABEL_5;
  }
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100221DF8(v25, (uint64_t)qword_1007B9950);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(18, -1);
    v30 = swift_slowAlloc(32, -1);
    v87[0] = v30;
    *(_DWORD *)v29 = 136315394;
    v85 = sub_100228BD8(0x656946207261654ELL, 0xEA0000000000646CLL, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v29 + 4);
    swift_bridgeObjectRelease(0xEA0000000000646CLL);
    *(_WORD *)(v29 + 12) = 1024;
    LODWORD(v85) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 4, v29 + 14);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Attempting Stop AirDrop %s - forced: %{BOOL}d", (uint8_t *)v29, 0x12u);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }

  if ((v4 & 1) == 0)
  {
    v56 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    v57 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers, v87, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v56 + 16))
    {
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v58, v59))
        goto LABEL_76;
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v85 = v61;
      *(_DWORD *)v60 = 136315138;
      v83 = sub_100228BD8(0x656946207261654ELL, 0xEA0000000000646CLL, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v60 + 4);
      swift_bridgeObjectRelease(0xEA0000000000646CLL);
      v62 = "%s Connections Present - Stop Ignored";
    }
    else
    {
      v74 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
      v75 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, &v85, 0, 0);
      if (!*(_QWORD *)(*(_QWORD *)v74 + 16))
        goto LABEL_23;
      v58 = Logger.logObject.getter(v75);
      v59 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v58, v59))
        goto LABEL_76;
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v83 = v61;
      *(_DWORD *)v60 = 136315138;
      v81 = sub_100228BD8(0x656946207261654ELL, 0xEA0000000000646CLL, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v60 + 4);
      swift_bridgeObjectRelease(0xEA0000000000646CLL);
      v62 = "%s Transactions Present - Stop Ignored";
    }
    _os_log_impl((void *)&_mh_execute_header, v58, v59, v62, v60, 0xCu);
    swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v60, -1, -1);
    goto LABEL_76;
  }
LABEL_23:
  v78 = v2;
  v31 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID, &v83, 1, 0);
  v5 = *v31;
  v32 = *(_QWORD *)(*v31 + 64);
  v79 = *v31 + 64;
  v33 = 1 << *(_BYTE *)(v5 + 32);
  v34 = -1;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  v35 = v34 & v32;
  v3 = (unint64_t)(v33 + 63) >> 6;
  v76 = v3 - 1;
  v77 = v31;
  swift_bridgeObjectRetain(v5);
  v4 = 0;
  if (!v35)
    goto LABEL_30;
LABEL_28:
  v41 = __clz(__rbit64(v35));
  v35 &= v35 - 1;
  v42 = v41 | (v4 << 6);
LABEL_29:
  v43 = *(_QWORD *)(v5 + 48);
  v44 = type metadata accessor for UUID(0);
  (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v9, v43 + *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72) * v42, v44);
  v45 = *(_QWORD *)(v5 + 56);
  v46 = sub_100008384(&qword_1007B9BC8);
  v47 = *(int *)(v46 + 48);
  v80 = *(_OWORD *)(v45 + 16 * v42);
  *(_OWORD *)&v9[v47] = v80;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v9, 0, 1, v46);
  swift_unknownObjectRetain(v80);
  while (1)
  {
    sub_10022E718((uint64_t)v9, (uint64_t)v11, &qword_1007B9BC0);
    v52 = sub_100008384(&qword_1007B9BC8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v11, 1, v52) == 1)
    {
      swift_release(v5);
      v53 = *v77;
      *v77 = (uint64_t)&_swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease(v53);
      v54 = (uint64_t *)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions);
      swift_beginAccess(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, &v81, 1, 0);
      v55 = *v54;
      *v54 = (uint64_t)&_swiftEmptySetSingleton;
      swift_bridgeObjectRelease(v55);
      return;
    }
    v36 = &v11[*(int *)(v52 + 48)];
    v37 = *(_QWORD *)v36;
    v38 = *((_QWORD *)v36 + 1);
    ObjectType = swift_getObjectType(*(_QWORD *)v36);
    (*(void (**)(uint64_t, uint64_t))(v38 + 64))(ObjectType, v38);
    swift_unknownObjectRelease(v37);
    v40 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v11, v40);
    if (v35)
      goto LABEL_28;
LABEL_30:
    v48 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v48 < v3)
    {
      v49 = *(_QWORD *)(v79 + 8 * v48);
      if (v49)
        goto LABEL_33;
      v50 = v4 + 2;
      ++v4;
      if (v48 + 1 < v3)
      {
        v49 = *(_QWORD *)(v79 + 8 * v50);
        if (v49)
          goto LABEL_36;
        v4 = v48 + 1;
        if (v48 + 2 < v3)
        {
          v49 = *(_QWORD *)(v79 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_33;
          }
          v50 = v48 + 3;
          v4 = v48 + 2;
          if (v48 + 3 < v3)
          {
            v49 = *(_QWORD *)(v79 + 8 * v50);
            if (!v49)
            {
              while (1)
              {
                v48 = v50 + 1;
                if (__OFADD__(v50, 1))
                  break;
                if (v48 >= v3)
                {
                  v4 = v76;
                  goto LABEL_47;
                }
                v49 = *(_QWORD *)(v79 + 8 * v48);
                ++v50;
                if (v49)
                  goto LABEL_33;
              }
              __break(1u);
              return;
            }
LABEL_36:
            v48 = v50;
LABEL_33:
            v35 = (v49 - 1) & v49;
            v42 = __clz(__rbit64(v49)) + (v48 << 6);
            v4 = v48;
            goto LABEL_29;
          }
        }
      }
    }
LABEL_47:
    v51 = sub_100008384(&qword_1007B9BC8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v9, 1, 1, v51);
    v35 = 0;
  }
  __break(1u);
LABEL_79:
  swift_once(&qword_1007B3E28, sub_1002D7748);
LABEL_7:
  v15 = type metadata accessor for Logger(0);
  *(_QWORD *)&v80 = sub_100221DF8(v15, (uint64_t)qword_1007B9950);
  v16 = Logger.logObject.getter(v80);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(18, -1);
    v19 = swift_slowAlloc(32, -1);
    v78 = v3;
    v20 = v19;
    v87[0] = v19;
    *(_DWORD *)v18 = 136315394;
    if ((_BYTE)v5)
      v21 = 0x2072756F6A6E6F42;
    else
      v21 = 0xD00000000000001ALL;
    if ((_BYTE)v5)
      v22 = 0xEE00726576726553;
    else
      v22 = 0x8000000100615690;
    v85 = sub_100228BD8(v21, v22, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v18 + 4);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 12) = 1024;
    LODWORD(v85) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 4, v18 + 14);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Attempting Stop AirDrop %s - forced: %{BOOL}d", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v23 = v20;
    v3 = v78;
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  if ((v4 & 1) != 0
    || (!(_BYTE)v5
      ? (v24 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers)
      : (v24 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers),
        v63 = v3 + v24,
        v64 = swift_beginAccess(v3 + v24, v87, 0, 0),
        !*(_QWORD *)(*(_QWORD *)v63 + 16)))
  {
    v70 = swift_getObjectType(v9);
    (*((void (**)(uint64_t, char *))v11 + 8))(v70, v11);
    swift_unknownObjectRelease(v9);
    if ((_BYTE)v5)
    {
      if (v5 != 1)
        return;
      v71 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
    }
    else
    {
      v71 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
    }
    v72 = (char **)(v3 + v71);
    v73 = *v72;
    *v72 = 0;
    v72[1] = 0;
LABEL_69:
    swift_unknownObjectRelease(v73);
    return;
  }
  v58 = Logger.logObject.getter(v64);
  v65 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v58, v65))
  {

    v73 = v9;
    goto LABEL_69;
  }
  v66 = (uint8_t *)swift_slowAlloc(12, -1);
  v67 = swift_slowAlloc(32, -1);
  v85 = v67;
  *(_DWORD *)v66 = 136315138;
  if ((_BYTE)v5)
  {
    if (v5 == 1)
      v68 = 0x2072756F6A6E6F42;
    else
      v68 = 0x656946207261654ELL;
    if (v5 == 1)
      v69 = 0xEE00726576726553;
    else
      v69 = 0xEA0000000000646CLL;
  }
  else
  {
    v68 = 0xD00000000000001ALL;
    v69 = 0x8000000100615690;
  }
  v83 = sub_100228BD8(v68, v69, &v85);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v66 + 4);
  swift_bridgeObjectRelease(v69);
  _os_log_impl((void *)&_mh_execute_header, v58, v65, "%s Connections Present - Stop Ignored", v66, 0xCu);
  swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v67, -1, -1);
  swift_slowDealloc(v66, -1, -1);
  swift_unknownObjectRelease(v9);
LABEL_76:

}

uint64_t sub_1002DD82C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  const char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = result;
  if ((_BYTE)result)
  {
    if (result != 1)
      return result;
    v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
  }
  else
  {
    v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  }
  v4 = (_QWORD *)(v1 + *v3);
  v5 = *v4;
  if (*v4)
  {
    v6 = v4[1];
    ObjectType = swift_getObjectType(*v4);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 48);
    swift_unknownObjectRetain(v5);
    if ((v8(ObjectType, v6) & 1) != 0)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100221DF8(v9, (uint64_t)qword_1007B9950);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.error.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(12, -1);
        v17 = swift_slowAlloc(32, -1);
        *(_DWORD *)v13 = 136315138;
        v19 = v17;
        if (v2)
          v14 = 0x2072756F6A6E6F42;
        else
          v14 = 0xD00000000000001ALL;
        if (v2)
          v15 = (const char *)0xEE00726576726553;
        else
          v15 = (const char *)0x8000000100615690;
        v18 = sub_100228BD8(v14, (unint64_t)v15, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4);
        swift_bridgeObjectRelease(v15);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "AirDrop %s is down, force stopping", v13, 0xCu);
        swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v17, -1, -1);
        swift_slowDealloc(v13, -1, -1);
      }

      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
      sub_1002DCD38(v16, 1);
      return swift_unknownObjectRelease(v5);
    }
    else
    {
      return swift_unknownObjectRelease(v5);
    }
  }
  return result;
}

__n128 sub_1002DDA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __n128 result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  const char **v20;
  double v21;
  const char *v22;
  _BYTE v24[24];

  v1 = v0;
  v2 = type metadata accessor for SFPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)(v0 + 48);
  if (objc_msgSend(v6, "screenStateSupportsAirDrop")
    && objc_msgSend(v6, "discoverableLevel")
    && objc_msgSend(v6, "wirelessEnabled")
    && (objc_msgSend(v6, "bluetoothEnabledIncludingRestricted") & 1) != 0)
  {
    v7 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = sub_10022847C(0, 1, 1, _swiftEmptyArrayStorage);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_10022847C((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    *((_BYTE *)v7 + v9 + 32) = 0;
  }
  if (!objc_msgSend(v6, "screenStateSupportsAirDrop")
    || !objc_msgSend(v6, "discoverableLevel")
    || !objc_msgSend(v6, "wirelessEnabled")
    || (objc_msgSend(v6, "bluetoothEnabledIncludingRestricted") & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_10022847C(0, v7[2] + 1, 1, v7);
    v11 = v7[2];
    v10 = v7[3];
    if (v11 >= v10 >> 1)
      v7 = sub_10022847C((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    v7[2] = v11 + 1;
    *((_BYTE *)v7 + v11 + 32) = 1;
  }
  if (objc_msgSend(v6, "screenStateSupportsAirDrop")
    && (objc_msgSend(v6, "wirelessEnabled") & 1) != 0)
  {
    if (!v7[2])
    {
      swift_bridgeObjectRelease((const char *)v7);
      static SFPlatform.watchOS.getter(v12);
      v13 = static SFPlatform.isPlatform(_:)(v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if ((v13 & 1) == 0)
      {
        v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
        swift_retain(v1);
        sub_1004A18F0(v14, (uint64_t)sub_1002E736C, v1);
        swift_release(v1);
      }
      sub_1002D8108(0);
      return result;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_10022847C(0, v7[2] + 1, 1, v7);
    v17 = v7[2];
    v16 = v7[3];
    if (v17 >= v16 >> 1)
      v7 = sub_10022847C((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
    v7[2] = v17 + 1;
    *((_BYTE *)v7 + v17 + 32) = 2;
  }
  if (sub_1002EF70C(1, (uint64_t)v7))
    sub_1002DCD38(1, 0);
  if (sub_1002EF70C(0, (uint64_t)v7))
    sub_1002DCD38(0, 0);
  if (sub_1002EF70C(2, (uint64_t)v7))
    sub_1002DCD38(2, 0);
  swift_bridgeObjectRelease((const char *)v7);
  static SFPlatform.watchOS.getter(v18);
  v19 = static SFPlatform.isPlatform(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v19 & 1) == 0)
  {
    sub_1004A190C(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
    v20 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    *(_QWORD *)&v21 = swift_beginAccess(v20, v24, 1, 0).n128_u64[0];
    v22 = *v20;
    *v20 = (const char *)&_swiftEmptySetSingleton;
    return swift_bridgeObjectRelease(v22, v21);
  }
  return result;
}

uint64_t sub_1002DDE64(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = swift_allocObject(&unk_1007217F8, 24, 7);
  swift_weakInit(v10 + 16, a3);
  v11 = qword_1007B3D98;
  swift_retain(v10);
  v12 = a1;
  if (v11 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v13 = static AirDropActor.shared;
  v14 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v15 = swift_allocObject(&unk_100721910, 49, 7);
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v12;
  *(_BYTE *)(v15 + 48) = a2 & 1;
  swift_retain(v13);
  swift_release(v10);
  v16 = sub_100252EE0((uint64_t)v8, (uint64_t)&unk_1007B9C50, v15);
  return swift_release(v16);
}

uint64_t sub_1002DDFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 64) = a6;
  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 40) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002DE048, static AirDropActor.shared, 0);
}

uint64_t sub_1002DE048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    sub_1002DE0C0();
    swift_release(Strong);
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002DE0C0()
{
  sub_100435F78();
  __asm { BR              X10 }
}

void sub_1002DE118(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_t oslog, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  const char *v44;
  const char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  const char *v61;
  const char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  const char *v66;
  const char *v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70[3];
  _OWORD v71[7];

  if ((v35 & 0xFF000000000000) != 0)
  {
    if ((v36 & 1) != 0)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v39 = type metadata accessor for Logger(0);
      sub_100221DF8(v39, (uint64_t)qword_1007B9950);
      sub_10022E4A8(v37, v35);
      v40 = sub_10022E4A8(v37, v35);
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(12, -1);
        v68 = swift_slowAlloc(32, -1);
        v70[0] = v68;
        *(_DWORD *)v43 = 136380675;
        sub_10038D14C(v37, v35);
        v45 = v44;
        *(_QWORD *)&v71[0] = v44;
        v46 = sub_100008384((uint64_t *)&unk_1007BD6A0);
        v47 = sub_1002E7428();
        v48 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v46, v47);
        v50 = v49;
        swift_bridgeObjectRelease(v45);
        *(_QWORD *)&v71[0] = sub_100228BD8(v48, (unint64_t)v50, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, (char *)v71 + 8, v43 + 4);
        swift_bridgeObjectRelease(v50);
        sub_100225AB4(v37, v35);
        sub_100225AB4(v37, v35);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Found BLE device - %{private}s", v43, 0xCu);
        swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {
        sub_100225AB4(v37, v35);
        sub_100225AB4(v37, v35);
      }

      if ((sub_1002E3C84() & 1) != 0)
        sub_1002D8108(1);
    }
    else
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v55 = type metadata accessor for Logger(0);
      sub_100221DF8(v55, (uint64_t)qword_1007B9950);
      sub_10022E4A8(v37, v35);
      v56 = sub_10022E4A8(v37, v35);
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v60 = swift_slowAlloc(32, -1);
        v70[0] = v60;
        *(_DWORD *)v59 = 136380675;
        sub_10038D14C(v37, v35);
        v62 = v61;
        *(_QWORD *)&v71[0] = v61;
        v63 = sub_100008384((uint64_t *)&unk_1007BD6A0);
        v64 = sub_1002E7428();
        v65 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v63, v64);
        v67 = v66;
        swift_bridgeObjectRelease(v62);
        *(_QWORD *)&v71[0] = sub_100228BD8(v65, (unint64_t)v67, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, (char *)v71 + 8, v59 + 4);
        swift_bridgeObjectRelease(v67);
        sub_100225AB4(v37, v35);
        sub_100225AB4(v37, v35);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Lost BLE device - %{private}s", v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v59, -1, -1);
      }
      else
      {
        sub_100225AB4(v37, v35);
        sub_100225AB4(v37, v35);
      }

      swift_beginAccess(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes, v70, 33, 0);
      sub_100471F48(v37, v35, v71);
      swift_endAccess(v70);
      sub_100225AA0(*(uint64_t *)&v71[0], *((unint64_t *)&v71[0] + 1));
      sub_1002E1CF8(1);
    }
    sub_100225AB4(v37, v35);
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v51 = type metadata accessor for Logger(0);
    v52 = sub_100221DF8(v51, (uint64_t)qword_1007B9950);
    v69 = Logger.logObject.getter(v52);
    v53 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v69, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v53, "Empty AirDrop hashses in advertisement, ignoring", v54, 2u);
      swift_slowDealloc(v54, -1, -1);

      sub_100225AB4(v37, v35);
    }
    else
    {
      sub_100225AB4(v37, v35);

    }
  }
}

uint64_t sub_1002DE698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v5 = static AirDropActor.shared;
  v3[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1002DE728, v5, 0);
}

uint64_t sub_1002DE728()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = v0[3];
  v2 = v0[6];
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007B9950);
  v4 = sub_100244384(v1, v2, type metadata accessor for SDAirDropServerConnectionIdentity);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[6];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10049FE10();
    v13 = v12;
    v0[2] = sub_100228BD8(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v9 + 4);
    swift_bridgeObjectRelease(v13);
    sub_1002443C8(v8, type metadata accessor for SDAirDropServerConnectionIdentity);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tearing down handler for server %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_1002443C8(v0[6], type metadata accessor for SDAirDropServerConnectionIdentity);
  }

  v14 = (_QWORD *)swift_task_alloc(dword_1007B9BD4);
  v0[8] = v14;
  *v14 = v0;
  v14[1] = sub_1002DE91C;
  return sub_1002DE9AC(v0[3], v0[4]);
}

uint64_t sub_1002DE91C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_1002DE970, v1, 0);
}

uint64_t sub_1002DE970()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1002DFD58(*(_QWORD *)(v0 + 24));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DE9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v3[34] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[35] = v5;
  v3[36] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v3[37] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[38] = swift_task_alloc(v7);
  v3[39] = swift_task_alloc(v7);
  v3[40] = swift_task_alloc(v7);
  v3[41] = swift_task_alloc(v7);
  v3[42] = swift_task_alloc(v7);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  v3[43] = static AirDropActor.shared;
  return swift_task_switch(sub_1002DEA9C, v8, 0);
}

uint64_t sub_1002DEA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  _BOOL4 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_t log;
  NSObject *loga;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 296);
  sub_100244384(*(_QWORD *)(v0 + 248), v1, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 264);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 272));
    v4 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    v5 = (uint64_t *)(v3 + v4);
    swift_beginAccess(v5, v0 + 16, 32, 0);
    v6 = *v5;
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = sub_10045C244(*(_QWORD *)(v0 + 288));
      if ((v8 & 1) != 0)
      {
        v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
        *(_QWORD *)(v0 + 408) = v9;
        swift_endAccess(v0 + 16);
        v10 = dword_1007C4A0C;
        v9;
        v11 = (_QWORD *)swift_task_alloc(v10);
        *(_QWORD *)(v0 + 416) = v11;
        v12 = sub_1002DFA04;
LABEL_23:
        *v11 = v0;
        v11[1] = v12;
        return sub_10050A37C(*(_QWORD *)(v0 + 256));
      }
    }
    swift_endAccess(v0 + 16);
    v23 = *(_QWORD *)(v0 + 288);
    swift_beginAccess(*(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 400), v0 + 40, 33, 0);
    v24 = (void *)sub_100269D88(v23);
    swift_endAccess(v0 + 40);

    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v25 = *(_QWORD *)(v0 + 304);
    v26 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 248);
    v28 = type metadata accessor for Logger(0);
    sub_100221DF8(v28, (uint64_t)qword_1007B9950);
    sub_100244384(v27, v25, type metadata accessor for SDAirDropServerConnectionIdentity);
    v29 = swift_retain_n(v26, 2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = *(_QWORD *)(v0 + 304);
      v101 = *(_QWORD *)(v0 + 400);
      v102 = *(_QWORD *)(v0 + 280);
      v33 = *(_QWORD *)(v0 + 264);
      log = *(os_log_t *)(v0 + 272);
      v105 = *(_QWORD *)(v0 + 288);
      v34 = swift_slowAlloc(22, -1);
      v35 = swift_slowAlloc(32, -1);
      v109 = v35;
      *(_DWORD *)v34 = 136315394;
      v36 = sub_10049FE10();
      v38 = v37;
      *(_QWORD *)(v0 + 224) = sub_100228BD8(v36, v37, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v34 + 4);
      swift_bridgeObjectRelease(v38);
      sub_1002443C8(v32, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v34 + 12) = 2048;
      v39 = *(_QWORD *)(*(_QWORD *)(v33 + v101) + 16);
      swift_release(v33);
      *(_QWORD *)(v0 + 184) = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v34 + 14);
      swift_release(v33);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Removed handler for quic connection %s count: %ld", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      (*(void (**)(uint64_t, os_log_t))(v102 + 8))(v105, log);
    }
    else
    {
      v53 = *(_QWORD *)(v0 + 304);
      v55 = *(_QWORD *)(v0 + 280);
      v54 = *(_QWORD *)(v0 + 288);
      v56 = *(_QWORD *)(v0 + 272);
      swift_release_n(*(_QWORD *)(v0 + 264), 2);

      sub_1002443C8(v53, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
    goto LABEL_25;
  }
  v13 = *(_QWORD *)(v0 + 264);
  v14 = **(_QWORD **)(v0 + 336);
  v15 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  *(_QWORD *)(v0 + 352) = v14;
  *(_QWORD *)(v0 + 360) = v15;
  v16 = (uint64_t *)(v13 + v15);
  swift_beginAccess(v13 + v15, v0 + 112, 0, 0);
  v17 = *v16;
  v18 = swift_task_alloc(32);
  *(_QWORD *)(v18 + 16) = v14;
  v19 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain(v17);
  v20 = 0;
  if (v19)
  {
    v21 = (_QWORD *)(v17 + 32);
    while (1)
    {
      v22 = v14 != *v21;
      if (v14 == *v21)
        break;
      ++v20;
      v21 += 2;
      if (v19 == v20)
      {
        v20 = 0;
        break;
      }
    }
  }
  else
  {
    v22 = 1;
  }
  *(_QWORD *)(v0 + 368) = v20;
  swift_bridgeObjectRelease(v17);
  swift_task_dealloc(v18);
  if ((v22 & 1) != 0)
  {
    v40 = *(_QWORD *)(v0 + 264)
        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers;
    swift_beginAccess(v40, v0 + 136, 0, 0);
    v41 = *(_QWORD *)v40;
    v42 = swift_task_alloc(32);
    *(_QWORD *)(v42 + 16) = v14;
    v43 = *(_QWORD *)(v41 + 16);
    swift_bridgeObjectRetain(v41);
    v44 = 0;
    if (v43)
    {
      v45 = (_QWORD *)(v41 + 32);
      v46 = *(_QWORD *)(v42 + 16);
      while (1)
      {
        v47 = v46 == *v45;
        if (v46 == *v45)
          break;
        ++v44;
        v45 += 2;
        if (v43 == v44)
        {
          v44 = 0;
          break;
        }
      }
    }
    else
    {
      v47 = 0;
    }
    v22 = v0 + 168;
    swift_bridgeObjectRelease(v41);
    swift_task_dealloc(v42);
    if (v47)
    {
      if (v44 >= *(_QWORD *)(*(_QWORD *)v40 + 16))
      {
        if (qword_1007B3E28 != -1)
          swift_once(&qword_1007B3E28, sub_1002D7748);
        v93 = *(_QWORD *)(v0 + 264);
        v94 = type metadata accessor for Logger(0);
        sub_100221DF8(v94, (uint64_t)qword_1007B9950);
        v95 = swift_retain(v93);
        v96 = Logger.logObject.getter(v95);
        v97 = static os_log_type_t.fault.getter();
        v98 = os_log_type_enabled(v96, v97);
        v99 = *(_QWORD *)(v0 + 264);
        if (v98)
        {
          v108 = *(_QWORD *)(v0 + 264);
          v100 = swift_slowAlloc(22, -1);
          *(_DWORD *)v100 = 134218240;
          *(_QWORD *)v22 = v44;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v100 + 4);
          *(_WORD *)(v100 + 12) = 2048;
          *(_QWORD *)(v0 + 176) = *(_QWORD *)(*(_QWORD *)v40 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v100 + 14);
          swift_release(v108);
          _os_log_impl((void *)&_mh_execute_header, v96, v97, "Attempting to remove at index %ld but only have %ld handlers", (uint8_t *)v100, 0x16u);
          swift_slowDealloc(v100, -1, -1);
          swift_unknownObjectRelease(v14);
        }
        else
        {
          swift_unknownObjectRelease(v14);
          swift_release(v99);
        }

      }
      else
      {
        swift_beginAccess(v40, v0 + 88, 33, 0);
        v62 = sub_100268980(v44);
        v64 = v63;
        swift_endAccess(v0 + 88);
        swift_unknownObjectRelease(v62);

        if (qword_1007B3E28 != -1)
          swift_once(&qword_1007B3E28, sub_1002D7748);
        v65 = *(_QWORD *)(v0 + 320);
        v66 = *(_QWORD *)(v0 + 264);
        v67 = *(_QWORD *)(v0 + 248);
        v68 = type metadata accessor for Logger(0);
        sub_100221DF8(v68, (uint64_t)qword_1007B9950);
        sub_100244384(v67, v65, type metadata accessor for SDAirDropServerConnectionIdentity);
        v69 = swift_retain_n(v66, 2);
        v70 = Logger.logObject.getter(v69);
        v71 = static os_log_type_t.default.getter();
        v72 = os_log_type_enabled(v70, v71);
        v73 = *(_QWORD *)(v0 + 320);
        v74 = *(_QWORD *)(v0 + 264);
        if (v72)
        {
          v75 = swift_slowAlloc(22, -1);
          v106 = swift_slowAlloc(32, -1);
          v109 = v106;
          *(_DWORD *)v75 = 136315394;
          loga = v70;
          v76 = sub_10049FE10();
          v78 = v77;
          *(_QWORD *)(v0 + 192) = sub_100228BD8(v76, v77, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v75 + 4);
          swift_bridgeObjectRelease(v78);
          sub_1002443C8(v73, type metadata accessor for SDAirDropServerConnectionIdentity);
          *(_WORD *)(v75 + 12) = 2048;
          v79 = *(_QWORD *)(*(_QWORD *)v40 + 16);
          swift_release(v74);
          *(_QWORD *)(v0 + 200) = v79;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v75 + 14);
          swift_release(v74);
          _os_log_impl((void *)&_mh_execute_header, loga, v71, "Removed handler for bonjour connection %s count: %ld", (uint8_t *)v75, 0x16u);
          swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v106, -1, -1);
          swift_slowDealloc(v75, -1, -1);
          swift_unknownObjectRelease(v14);

        }
        else
        {
          swift_release(*(_QWORD *)(v0 + 264));
          swift_unknownObjectRelease(v14);
          sub_1002443C8(v73, type metadata accessor for SDAirDropServerConnectionIdentity);
          swift_release(v74);

        }
      }
      goto LABEL_26;
    }
    if (qword_1007B3E28 == -1)
      goto LABEL_35;
  }
  else
  {
    if (v20 < *(_QWORD *)(*v16 + 16))
    {
      v48 = *v16 + 16 * v20;
      v49 = *(_QWORD *)(v48 + 32);
      *(_QWORD *)(v0 + 376) = v49;
      v50 = *(void **)(v48 + 40);
      *(_QWORD *)(v0 + 384) = v50;
      v51 = dword_1007C4A0C;
      swift_unknownObjectRetain(v49);
      v50;
      v11 = (_QWORD *)swift_task_alloc(v51);
      *(_QWORD *)(v0 + 392) = v11;
      v12 = sub_1002DF530;
      goto LABEL_23;
    }
    __break(1u);
  }
  swift_once(&qword_1007B3E28, sub_1002D7748);
LABEL_35:
  v80 = *(_QWORD *)(v0 + 312);
  v81 = *(_QWORD *)(v0 + 248);
  v82 = type metadata accessor for Logger(0);
  sub_100221DF8(v82, (uint64_t)qword_1007B9950);
  v83 = sub_100244384(v81, v80, type metadata accessor for SDAirDropServerConnectionIdentity);
  v84 = Logger.logObject.getter(v83);
  v85 = static os_log_type_t.default.getter();
  v86 = os_log_type_enabled(v84, v85);
  v87 = *(_QWORD *)(v0 + 312);
  if (v86)
  {
    v107 = v22;
    v88 = (uint8_t *)swift_slowAlloc(12, -1);
    v89 = swift_slowAlloc(32, -1);
    v109 = v89;
    *(_DWORD *)v88 = 136315138;
    v90 = sub_10049FE10();
    v92 = v91;
    *(_QWORD *)(v0 + 160) = sub_100228BD8(v90, v91, &v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v107, v88 + 4);
    swift_bridgeObjectRelease(v92);
    sub_1002443C8(v87, type metadata accessor for SDAirDropServerConnectionIdentity);
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "Unable to remove matching handler for connection %s, likely already removed", v88, 0xCu);
    swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v89, -1, -1);
    swift_slowDealloc(v88, -1, -1);
    swift_unknownObjectRelease(v14);

  }
  else
  {
    swift_unknownObjectRelease(v14);
    sub_1002443C8(v87, type metadata accessor for SDAirDropServerConnectionIdentity);

  }
LABEL_25:
  sub_1002DFD58(*(_QWORD *)(v0 + 248));
LABEL_26:
  v57 = *(_QWORD *)(v0 + 328);
  v59 = *(_QWORD *)(v0 + 312);
  v58 = *(_QWORD *)(v0 + 320);
  v60 = *(_QWORD *)(v0 + 304);
  v61 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DF530()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_1002DF588, v1, 0);
}

uint64_t sub_1002DF588()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 264);
  if (v1 >= *(_QWORD *)(*(_QWORD *)(v2 + *(_QWORD *)(v0 + 360)) + 16))
  {
    if (qword_1007B3E28 != -1)
    {
      swift_once(&qword_1007B3E28, sub_1002D7748);
      v2 = *(_QWORD *)(v0 + 264);
    }
    v25 = type metadata accessor for Logger(0);
    sub_100221DF8(v25, (uint64_t)qword_1007B9950);
    v26 = swift_retain(v2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.fault.getter();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 376);
    v31 = *(void **)(v0 + 384);
    if (!v29)
    {
      v39 = *(_QWORD *)(v0 + 352);
      swift_release(*(_QWORD *)(v0 + 264));
      swift_unknownObjectRelease(v39);
      swift_unknownObjectRelease(v30);

      goto LABEL_13;
    }
    v50 = *(void **)(v0 + 384);
    v33 = *(_QWORD *)(v0 + 360);
    v32 = *(_QWORD *)(v0 + 368);
    v49 = *(_QWORD *)(v0 + 352);
    v34 = *(_QWORD *)(v0 + 264);
    v35 = swift_slowAlloc(22, -1);
    *(_DWORD *)v35 = 134218240;
    *(_QWORD *)(v0 + 208) = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v35 + 4);
    *(_WORD *)(v35 + 12) = 2048;
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(*(_QWORD *)(v34 + v33) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v35 + 14);
    swift_release(v34);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Attempting to remove at index %ld but only have %ld handlers", (uint8_t *)v35, 0x16u);
    swift_slowDealloc(v35, -1, -1);
    swift_unknownObjectRelease(v49);

    v24 = v30;
  }
  else
  {
    swift_beginAccess(v2 + *(_QWORD *)(v0 + 360), v0 + 64, 33, 0);
    v3 = sub_100268980(v1);
    v5 = v4;
    swift_endAccess(v0 + 64);
    swift_unknownObjectRelease(v3);

    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 264);
    v9 = type metadata accessor for Logger(0);
    sub_100221DF8(v9, (uint64_t)qword_1007B9950);
    sub_100244384(v6, v7, type metadata accessor for SDAirDropServerConnectionIdentity);
    v10 = swift_retain_n(v8, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    v13 = os_log_type_enabled(v11, v12);
    v15 = *(_QWORD *)(v0 + 376);
    v14 = *(void **)(v0 + 384);
    if (!v13)
    {
      v36 = *(_QWORD *)(v0 + 352);
      v37 = *(_QWORD *)(v0 + 328);
      v38 = *(_QWORD *)(v0 + 264);
      swift_release(v38);
      swift_unknownObjectRelease(v36);
      swift_unknownObjectRelease(v15);

      sub_1002443C8(v37, type metadata accessor for SDAirDropServerConnectionIdentity);
      swift_release(v38);

      goto LABEL_13;
    }
    v46 = *(_QWORD *)(v0 + 360);
    v48 = *(_QWORD *)(v0 + 352);
    v50 = *(void **)(v0 + 384);
    v16 = *(_QWORD *)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 264);
    v47 = *(_QWORD *)(v0 + 376);
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136315394;
    v20 = sub_10049FE10();
    v22 = v21;
    *(_QWORD *)(v0 + 232) = sub_100228BD8(v20, v21, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v18 + 4);
    swift_bridgeObjectRelease(v22);
    sub_1002443C8(v16, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v18 + 12) = 2048;
    v23 = *(_QWORD *)(*(_QWORD *)(v17 + v46) + 16);
    swift_release(v17);
    *(_QWORD *)(v0 + 240) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v18 + 14);
    swift_release(v17);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Removed handler for bonjour connection %s count: %ld", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
    swift_unknownObjectRelease(v48);

    v24 = v47;
  }
  swift_unknownObjectRelease(v24);

LABEL_13:
  v40 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 312);
  v41 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 304);
  v44 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002DFA04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(*(_QWORD *)v0 + 408);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 416));

  return swift_task_switch(sub_1002DFA60, v2, 0);
}

uint64_t sub_1002DFA60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 288);
  swift_beginAccess(*(_QWORD *)(v0 + 264) + *(_QWORD *)(v0 + 400), v0 + 40, 33, 0);
  v3 = (void *)sub_100269D88(v2);
  swift_endAccess(v0 + 40);

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007B9950);
  sub_100244384(v6, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  v8 = swift_retain_n(v5, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v29 = *(_QWORD *)(v0 + 400);
    v11 = *(_QWORD *)(v0 + 304);
    v31 = *(_QWORD *)(v0 + 280);
    v12 = *(_QWORD *)(v0 + 264);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 288);
    v30 = v1;
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = sub_10049FE10();
    v17 = v16;
    *(_QWORD *)(v0 + 224) = sub_100228BD8(v15, v16, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v13 + 4);
    swift_bridgeObjectRelease(v17);
    sub_1002443C8(v11, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v13 + 12) = 2048;
    v18 = *(_QWORD *)(*(_QWORD *)(v12 + v29) + 16);
    swift_release(v12);
    *(_QWORD *)(v0 + 184) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v13 + 14);
    swift_release(v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removed handler for quic connection %s count: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 304);
    v21 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 272);
    swift_release_n(*(_QWORD *)(v0 + 264), 2);

    sub_1002443C8(v19, type metadata accessor for SDAirDropServerConnectionIdentity);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  sub_1002DFD58(*(_QWORD *)(v0 + 248));
  v23 = *(_QWORD *)(v0 + 328);
  v25 = *(_QWORD *)(v0 + 312);
  v24 = *(_QWORD *)(v0 + 320);
  v26 = *(_QWORD *)(v0 + 304);
  v27 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002DFD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD);
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100244384(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    v11 = *(void **)(v1 + 48);
    if (!objc_msgSend(v11, "screenStateSupportsAirDrop")
      || !objc_msgSend(v11, "discoverableLevel")
      || (objc_msgSend(v11, "wirelessEnabled") & 1) == 0
      || (v12 = objc_msgSend(v11, "bluetoothEnabledIncludingRestricted"), !(_DWORD)v12)
      || (static SFPlatform.watchOS.getter(v12),
          v13 = static SFPlatform.isPlatform(_:)(v6),
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
          (v13 & 1) != 0))
    {
      sub_1002DCD38(0, 0);
    }
    if ((objc_msgSend(v11, "screenStateSupportsAirDrop") & 1) == 0
      || !objc_msgSend(v11, "wirelessEnabled")
      || (v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
          swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, v17, 0, 0), !*(_QWORD *)(*(_QWORD *)v14 + 16)))
    {
      sub_1002DCD38(2, 0);
    }
    v15 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
  }
  else
  {
    swift_unknownObjectRelease(*v9);
    sub_1002E1CF8(1);
  }
}

uint64_t sub_1002DFF40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.Failure(0);
  v2[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[15] = v10;
  v2[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E004C, v11, 0);
}

uint64_t sub_1002E004C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  const char *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t type;
  uint64_t v46;

  v3 = *(_QWORD *)(v1 + 96);
  v2 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 88);
  SFAirDropReceive.Transfer.state.getter(a1);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4) == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    v6 = *(_QWORD *)(v1 + 120);
    v5 = *(_QWORD *)(v1 + 128);
    v8 = *(_QWORD *)(v1 + 104);
    v7 = *(_QWORD *)(v1 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 96) + 96))(v8, *(_QWORD *)(v1 + 88));
    v9 = sub_100008384(&qword_1007B9BB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8 + *(int *)(v9 + 48), v7);
    v10 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v12 = *(_QWORD *)(v1 + 72);
    v11 = *(_QWORD *)(v1 + 80);
    v13 = *(_QWORD *)(v1 + 64);
    v14 = *(_QWORD *)(v1 + 24);
    v15 = type metadata accessor for Logger(0);
    sub_100221DF8(v15, (uint64_t)qword_1007B9950);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v1 + 80);
    if (v19)
    {
      v43 = *(_QWORD *)(v1 + 64);
      v21 = *(_QWORD *)(v1 + 56);
      v41 = *(_QWORD *)(v1 + 48);
      v42 = *(_QWORD *)(v1 + 72);
      v22 = *(_QWORD *)(v1 + 40);
      type = v18;
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v46 = v44;
      *(_DWORD *)v23 = 136315138;
      SFAirDropReceive.Transfer.id.getter(v44);
      v24 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v25 = dispatch thunk of CustomStringConvertible.description.getter(v22, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v21, v22);
      *(_QWORD *)(v1 + 16) = sub_100228BD8(v25, (unint64_t)v27, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v23 + 4);
      v28 = swift_bridgeObjectRelease(v27);
      (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v20, v43, v28);
      _os_log_impl((void *)&_mh_execute_header, v17, type, "Transfer failed, removing handler for transferID: %s", v23, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 8))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 64));
    }

    v34 = *(_QWORD *)(v1 + 120);
    v33 = *(_QWORD *)(v1 + 128);
    v35 = *(_QWORD *)(v1 + 112);
    SFAirDropReceive.Transfer.id.getter(v36);
    v37 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v38 = swift_allocError(v35, v37, 0, 0);
    *(_QWORD *)(v1 + 144) = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v39, v33, v35);
    v40 = (_QWORD *)swift_task_alloc(dword_1007B9BBC);
    *(_QWORD *)(v1 + 152) = v40;
    *v40 = v1;
    v40[1] = sub_1002E0404;
    return sub_1002E04F8(*(_QWORD *)(v1 + 56), v38);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 96) + 8))(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 88));
    v29 = *(_QWORD *)(v1 + 104);
    v30 = *(_QWORD *)(v1 + 80);
    v31 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 128));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1002E0404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_1002E048C, v2, 0);
}

uint64_t sub_1002E048C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E04F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v4 = type metadata accessor for SFPlatform(0);
  v3[24] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[25] = v5;
  v3[26] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v3[27] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[28] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v8);
  v3[30] = swift_task_alloc(v8);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E05C8, v9, 0);
}

uint64_t sub_1002E05C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char **v14;
  const char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  *(_QWORD *)(v0 + 256) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 16, 32, 0);
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_10045C244(*(_QWORD *)(v0 + 168));
    if ((v6 & 1) != 0)
    {
      v7 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v5);
      *(_QWORD *)(v0 + 264) = v7;
      swift_endAccess(v0 + 16);
      v8 = dword_1007C4A0C;
      v7;
      v9 = (_QWORD *)swift_task_alloc(v8);
      *(_QWORD *)(v0 + 272) = v9;
      v10 = sub_1002E07B8;
LABEL_8:
      *v9 = v0;
      v9[1] = v10;
      return sub_10050A37C(*(_QWORD *)(v0 + 176));
    }
  }
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 168);
  swift_endAccess(v0 + 16);
  v13 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  *(_QWORD *)(v0 + 280) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  v14 = (const char **)(v11 + v13);
  swift_beginAccess(v14, v0 + 40, 0, 0);
  v15 = *v14;
  v16 = swift_task_alloc(32);
  *(_QWORD *)(v16 + 16) = v12;
  swift_bridgeObjectRetain(v15);
  v17 = sub_1002D766C((uint64_t (*)(__int128 *))sub_1002E6940, v16, (uint64_t)v15);
  v19 = v18;
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(v0 + 288) = v17;
  result = swift_task_dealloc(v16);
  if ((v19 & 1) != 0)
  {
    v25 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *((_QWORD *)*v14 + 2))
    {
      v21 = (uint64_t)&(*v14)[16 * v17];
      v22 = *(_QWORD *)(v21 + 32);
      *(_QWORD *)(v0 + 296) = v22;
      v23 = *(void **)(v21 + 40);
      *(_QWORD *)(v0 + 304) = v23;
      v24 = dword_1007C4A0C;
      swift_unknownObjectRetain(v22);
      v23;
      v9 = (_QWORD *)swift_task_alloc(v24);
      *(_QWORD *)(v0 + 312) = v9;
      v10 = sub_1002E0BF0;
      goto LABEL_8;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E07B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  return swift_task_switch(sub_1002E0810, v1, 0);
}

uint64_t sub_1002E0810()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 168);
  swift_beginAccess(*(_QWORD *)(v0 + 184) + *(_QWORD *)(v0 + 256), v0 + 112, 33, 0);
  v2 = (void *)sub_100269D88(v1);
  swift_endAccess(v0 + 112);

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007B9950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  v9 = swift_retain_n(v6, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v39 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 184);
    v15 = swift_slowAlloc(22, -1);
    v38 = swift_slowAlloc(32, -1);
    v40 = v38;
    *(_DWORD *)v15 = 136315394;
    v16 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    v19 = (const char *)v18;
    *(_QWORD *)(v0 + 152) = sub_100228BD8(v17, v18, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v15 + 4);
    v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v12, v13, v20);
    *(_WORD *)(v15 + 12) = 2048;
    v21 = *(_QWORD *)(*(_QWORD *)(v14 + v39) + 16);
    swift_release(v14);
    *(_QWORD *)(v0 + 160) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v15 + 14);
    swift_release(v14);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Removed quic handler for transferID: %s count: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 224);
    v25 = *(_QWORD *)(v0 + 184);
    swift_release(v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    swift_release(v25);
  }

  v26 = *(void **)(*(_QWORD *)(v0 + 184) + 48);
  if (!objc_msgSend(v26, "screenStateSupportsAirDrop")
    || !objc_msgSend(v26, "discoverableLevel")
    || (objc_msgSend(v26, "wirelessEnabled") & 1) == 0
    || (v27 = objc_msgSend(v26, "bluetoothEnabledIncludingRestricted"), !(_DWORD)v27)
    || (v29 = *(_QWORD *)(v0 + 200),
        v28 = *(_QWORD *)(v0 + 208),
        v30 = *(_QWORD *)(v0 + 192),
        static SFPlatform.watchOS.getter(v27),
        v31 = static SFPlatform.isPlatform(_:)(v28),
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30),
        (v31 & 1) != 0))
  {
    sub_1002DCD38(0, 0);
  }
  if (objc_msgSend(v26, "screenStateSupportsAirDrop")
    && objc_msgSend(v26, "wirelessEnabled")
    && (v32 = *(_QWORD *)(v0 + 184)
            + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
        swift_beginAccess(v32, v0 + 88, 0, 0),
        *(_QWORD *)(*(_QWORD *)v32 + 16)))
  {
    v33 = *(void **)(v0 + 264);
  }
  else
  {
    v33 = *(void **)(v0 + 264);
    sub_1002DCD38(2, 0);
  }

  v34 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E0BF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  return swift_task_switch(sub_1002E0C48, v1, 0);
}

uint64_t sub_1002E0C48()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 288);
  swift_beginAccess(*(_QWORD *)(v0 + 184) + *(_QWORD *)(v0 + 280), v0 + 64, 33, 0);
  v2 = sub_100268980(v1);
  v4 = v3;
  swift_endAccess(v0 + 64);
  swift_unknownObjectRelease(v2);

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v6 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  v10 = type metadata accessor for Logger(0);
  sub_100221DF8(v10, (uint64_t)qword_1007B9950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  v11 = swift_retain_n(v8, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v35 = *(_QWORD *)(v0 + 280);
    v14 = *(_QWORD *)(v0 + 232);
    v33 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = swift_slowAlloc(22, -1);
    v34 = swift_slowAlloc(32, -1);
    v36 = v34;
    *(_DWORD *)v17 = 136315394;
    v18 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v15, v18);
    v21 = (const char *)v20;
    *(_QWORD *)(v0 + 144) = sub_100228BD8(v19, v20, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v17 + 4);
    v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v14, v15, v22);
    *(_WORD *)(v17 + 12) = 2048;
    v23 = *(_QWORD *)(*(_QWORD *)(v16 + v35) + 16);
    swift_release(v16);
    *(_QWORD *)(v0 + 136) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v17 + 14);
    swift_release(v16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removed bonjour handler for transferID: %s count: %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 184);
    swift_release(v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_release(v27);
  }

  v28 = *(_QWORD *)(v0 + 296);
  v29 = *(void **)(v0 + 304);
  sub_1002E1CF8(1);
  swift_unknownObjectRelease(v28);

  v30 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_1002E0F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char **v26;
  uint64_t (*v27)(_QWORD);
  void (*v28)(char *, char *, uint64_t);
  const char **v29;
  __n128 v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  char *v59;
  char isUniquelyReferenced_nonNull_native;
  const char *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  const char *v72;
  uint8_t *v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id *v78;
  char *v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  char *v93;
  id v94;
  _QWORD **v95;
  _QWORD *v96;
  char v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  id v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  id v132;
  _QWORD **v133;
  _QWORD *v134;
  char v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  os_log_type_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  const char *v147;
  uint64_t v148;
  id v150;
  id v151[2];
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  const char *v162;
  uint64_t v163;
  uint64_t v164[3];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v157 = (char *)v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)v151 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)v151 - v14;
  v16 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v17 = __chkstk_darwin(v16);
  v158 = (char *)v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v155 = (uint64_t)v151 - v20;
  v21 = __chkstk_darwin(v19);
  v156 = (uint64_t)v151 - v22;
  v23 = __chkstk_darwin(v21);
  v159 = (char *)v151 - v24;
  __chkstk_darwin(v23);
  v26 = (char **)((char *)v151 - v25);
  v160 = a1;
  sub_100244384(a1, (uint64_t)v151 - v25, v27);
  if (swift_getEnumCaseMultiPayload(v26, v16) == 1)
  {
    (*(void (**)(char *, char **, uint64_t))(v7 + 32))(v13, v26, v6);
    v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v10, v13, v6);
    v29 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers);
    v30 = swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers, v164, 32, 0);
    v31 = *v29;
    v32 = *((_QWORD *)*v29 + 2);
    v157 = v13;
    v33 = (uint64_t)v10;
    if (v32 && (v34 = sub_10045C244((uint64_t)v10), (v35 & 1) != 0))
    {
      v36 = *(id *)(*((_QWORD *)v31 + 7) + 8 * v34);
      v37 = v28;
    }
    else
    {
      ((void (*)(char *, char *, uint64_t, __n128))v28)(v15, v13, v6, v30);
      v42 = (uint64_t)v159;
      sub_100244384(v160, (uint64_t)v159, type metadata accessor for SDAirDropServerConnectionIdentity);
      v43 = *(void **)(v2 + 48);
      v44 = *(void **)(v2 + 56);
      v155 = v33;
      v153 = v28;
      v46 = *(void **)(v2 + 64);
      v45 = *(_QWORD *)(v2 + 72);
      v151[0] = *(id *)(v2 + 88);
      Strong = swift_unknownObjectWeakLoadStrong(v2 + 32, v47);
      v154 = (char *)v7;
      v49 = Strong;
      v152 = *(_QWORD *)(v2 + 40);
      v151[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler(0));
      swift_retain(v2);
      v50 = v43;
      v156 = v6;
      v51 = (uint64_t)v15;
      v52 = v50;
      v53 = v44;
      v54 = v46;
      swift_retain(v45);
      v55 = v151[0];
      v36 = sub_100512E1C(v51, v42, v52, v53, v54, v45, v55, v2, (uint64_t)&off_100721788, v49, v152);

      v15 = (char *)v51;
      v6 = v156;

      v37 = v153;
      v33 = v155;
      swift_release(v45);

      v13 = v157;
      swift_release(v2);
      v56 = v49;
      v7 = (uint64_t)v154;
      swift_unknownObjectRelease(v56);
    }
    v57 = (uint64_t)v158;
    swift_endAccess(v164);
    v58 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v58(v33, v6);
    v37(v15, v13, v6);
    swift_beginAccess(v29, v164, 33, 0);
    v59 = (char *)v36;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
    v162 = *v29;
    *v29 = (const char *)0x8000000000000000;
    v159 = v59;
    sub_10046B73C((uint64_t)v59, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
    v61 = *v29;
    *v29 = v162;
    v62 = swift_bridgeObjectRelease(v61);
    ((void (*)(char *, uint64_t, __n128))v58)(v15, v6, v62);
    swift_endAccess(v164);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v63 = type metadata accessor for Logger(0);
    sub_100221DF8(v63, (uint64_t)qword_1007B9950);
    v64 = sub_100244384(v160, v57, type metadata accessor for SDAirDropServerConnectionIdentity);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = v6;
      v68 = (uint8_t *)swift_slowAlloc(12, -1);
      v69 = swift_slowAlloc(32, -1);
      v164[0] = v69;
      *(_DWORD *)v68 = 136315138;
      v70 = sub_10049FE10();
      v72 = (const char *)v71;
      v162 = (const char *)sub_100228BD8(v70, v71, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v68 + 4);
      swift_bridgeObjectRelease(v72);
      sub_1002443C8(v57, type metadata accessor for SDAirDropServerConnectionIdentity);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Added quic connection %s", v68, 0xCu);
      swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      v73 = v68;
      v6 = v67;
      swift_slowDealloc(v73, -1, -1);
    }
    else
    {
      sub_1002443C8(v57, type metadata accessor for SDAirDropServerConnectionIdentity);
    }

    v58((uint64_t)v157, v6);
    return v159;
  }
  v38 = *v26;
  sub_10052C418();
  v41 = v40;
  if (v39 == 0x65766F637369442FLL && v40 == (const char *)0xE900000000000072)
  {
    swift_bridgeObjectRelease((const char *)0xE900000000000072);
  }
  else
  {
    v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 0x65766F637369442FLL, 0xE900000000000072, 0);
    swift_bridgeObjectRelease(v41);
    if ((v74 & 1) == 0)
    {
      v115 = (char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers);
      swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers, v164, 0, 0);
      v158 = v115;
      v117 = *(_QWORD *)(*(_QWORD *)v115 + 16);
      if (v117)
      {
        v78 = (id *)(*(_QWORD *)v115 + 40);
        while (v38 != *(v78 - 1))
        {
          v78 += 2;
          if (!--v117)
            goto LABEL_32;
        }
        goto LABEL_43;
      }
LABEL_32:
      v118 = v157;
      UUID.init()(v116);
      SFAirDrop.TransferIdentifier.init(_:)(v118);
      v157 = v38;
      v119 = (uint64_t)v159;
      sub_100244384(v160, (uint64_t)v159, type metadata accessor for SDAirDropServerConnectionIdentity);
      v120 = *(void **)(v2 + 48);
      v121 = *(void **)(v2 + 56);
      v154 = v15;
      v123 = *(void **)(v2 + 64);
      v122 = *(_QWORD *)(v2 + 72);
      v153 = *(void (**)(char *, char *, uint64_t))(v2 + 88);
      v125 = swift_unknownObjectWeakLoadStrong(v2 + 32, v124);
      v156 = *(_QWORD *)(v2 + 40);
      v126 = objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler(0));
      swift_retain(v2);
      v127 = v120;
      v128 = v121;
      v129 = v123;
      swift_retain(v122);
      v130 = v153;
      v131 = v119;
      v93 = v157;
      v132 = sub_100512E1C((uint64_t)v154, v131, v127, v128, v129, v122, v130, v2, (uint64_t)&off_100721788, v125, v156);

      swift_release(v122);
      swift_release(v2);
      swift_unknownObjectRelease(v125);
      v133 = (_QWORD **)v158;
      swift_beginAccess(v158, &v162, 33, 0);
      v134 = *v133;
      swift_unknownObjectRetain(v93);
      v159 = (char *)v132;
      v135 = swift_isUniquelyReferenced_nonNull_native(v134);
      *v133 = v134;
      if ((v135 & 1) == 0)
      {
        v134 = sub_100227B88(0, v134[2] + 1, 1, v134);
        *(_QWORD *)v158 = v134;
      }
      v137 = v134[2];
      v136 = v134[3];
      v138 = v160;
      if (v137 >= v136 >> 1)
      {
        v134 = sub_100227B88((_QWORD *)(v136 > 1), v137 + 1, 1, v134);
        *(_QWORD *)v158 = v134;
      }
      v134[2] = v137 + 1;
      v139 = &v134[2 * v137];
      v140 = v159;
      v139[4] = v93;
      v139[5] = v140;
      swift_endAccess(&v162);
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v141 = type metadata accessor for Logger(0);
      sub_100221DF8(v141, (uint64_t)qword_1007B9950);
      v104 = v155;
      sub_100244384(v138, v155, type metadata accessor for SDAirDropServerConnectionIdentity);
      v142 = swift_retain_n(v2, 2);
      v106 = Logger.logObject.getter(v142);
      v143 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v106, v143))
      {
        v108 = swift_slowAlloc(22, -1);
        v144 = swift_slowAlloc(32, -1);
        v162 = (const char *)v144;
        *(_DWORD *)v108 = 136315394;
        v145 = sub_10049FE10();
        v147 = (const char *)v146;
        v161 = sub_100228BD8(v145, v146, (uint64_t *)&v162);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 4);
        swift_bridgeObjectRelease(v147);
        sub_1002443C8(v104, type metadata accessor for SDAirDropServerConnectionIdentity);
        *(_WORD *)(v108 + 12) = 2048;
        v148 = *(_QWORD *)(*(_QWORD *)v158 + 16);
        swift_release(v2);
        v161 = v148;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 14);
        swift_release(v2);
        _os_log_impl((void *)&_mh_execute_header, v106, v143, "Added bonjour connection %s count: %ld", (uint8_t *)v108, 0x16u);
        swift_arrayDestroy(v144, 1, (char *)&type metadata for Any + 8);
        v114 = v144;
        goto LABEL_40;
      }
LABEL_41:
      swift_unknownObjectRelease(v93);
      swift_release(v2);
      sub_1002443C8(v104, type metadata accessor for SDAirDropServerConnectionIdentity);

      swift_release(v2);
      return v159;
    }
  }
  v75 = (char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers);
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers, v164, 0, 0);
  v158 = v75;
  v77 = *(_QWORD *)(*(_QWORD *)v75 + 16);
  if (!v77)
  {
LABEL_18:
    v79 = v157;
    UUID.init()(v76);
    SFAirDrop.TransferIdentifier.init(_:)(v79);
    v157 = v38;
    v80 = (uint64_t)v159;
    sub_100244384(v160, (uint64_t)v159, type metadata accessor for SDAirDropServerConnectionIdentity);
    v81 = *(void **)(v2 + 48);
    v82 = *(void **)(v2 + 56);
    v154 = v15;
    v84 = *(void **)(v2 + 64);
    v83 = *(_QWORD *)(v2 + 72);
    v85 = *(void **)(v2 + 88);
    v87 = swift_unknownObjectWeakLoadStrong(v2 + 32, v86);
    v155 = *(_QWORD *)(v2 + 40);
    v153 = (void (*)(char *, char *, uint64_t))objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler(0));
    v88 = v81;
    v89 = v82;
    v90 = v84;
    swift_retain(v83);
    v91 = v85;
    swift_retain(v2);
    v92 = v80;
    v93 = v157;
    v94 = sub_100512E1C((uint64_t)v154, v92, v88, v89, v90, v83, v91, v2, (uint64_t)&off_100721788, v87, v155);

    swift_release(v83);
    swift_release(v2);
    swift_unknownObjectRelease(v87);
    v95 = (_QWORD **)v158;
    swift_beginAccess(v158, &v162, 33, 0);
    v96 = *v95;
    swift_unknownObjectRetain(v93);
    v159 = (char *)v94;
    v97 = swift_isUniquelyReferenced_nonNull_native(v96);
    *v95 = v96;
    if ((v97 & 1) == 0)
    {
      v96 = sub_100227B88(0, v96[2] + 1, 1, v96);
      *(_QWORD *)v158 = v96;
    }
    v99 = v96[2];
    v98 = v96[3];
    v100 = v160;
    if (v99 >= v98 >> 1)
    {
      v96 = sub_100227B88((_QWORD *)(v98 > 1), v99 + 1, 1, v96);
      *(_QWORD *)v158 = v96;
    }
    v96[2] = v99 + 1;
    v101 = &v96[2 * v99];
    v102 = v159;
    v101[4] = v93;
    v101[5] = v102;
    swift_endAccess(&v162);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v103 = type metadata accessor for Logger(0);
    sub_100221DF8(v103, (uint64_t)qword_1007B9950);
    v104 = v156;
    sub_100244384(v100, v156, type metadata accessor for SDAirDropServerConnectionIdentity);
    v105 = swift_retain_n(v2, 2);
    v106 = Logger.logObject.getter(v105);
    v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = swift_slowAlloc(22, -1);
      v109 = swift_slowAlloc(32, -1);
      v162 = (const char *)v109;
      *(_DWORD *)v108 = 136315394;
      v110 = sub_10049FE10();
      v112 = (const char *)v111;
      v161 = sub_100228BD8(v110, v111, (uint64_t *)&v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 4);
      swift_bridgeObjectRelease(v112);
      sub_1002443C8(v104, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v108 + 12) = 2048;
      v113 = *(_QWORD *)(*(_QWORD *)v158 + 16);
      swift_release(v2);
      v161 = v113;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 14);
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Added bonjour connection %s count: %ld", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy(v109, 1, (char *)&type metadata for Any + 8);
      v114 = v109;
LABEL_40:
      swift_slowDealloc(v114, -1, -1);
      swift_slowDealloc(v108, -1, -1);
      swift_unknownObjectRelease(v93);

      return v159;
    }
    goto LABEL_41;
  }
  v78 = (id *)(*(_QWORD *)v75 + 40);
  while (v38 != *(v78 - 1))
  {
    v78 += 2;
    if (!--v77)
      goto LABEL_18;
  }
LABEL_43:
  v150 = *v78;
  swift_unknownObjectRelease(v38);
  return (char *)v150;
}

void sub_1002E1CF8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  char v16;
  void *v17;
  uint64_t v18;
  _BYTE v20[24];

  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a1)
  {
    v15 = *(void **)(v1 + 48);
    if (!objc_msgSend(v15, "screenStateSupportsAirDrop"))
      goto LABEL_19;
    if (!objc_msgSend(v15, "discoverableLevel"))
      goto LABEL_19;
    if (!objc_msgSend(v15, "wirelessEnabled"))
      goto LABEL_19;
    v14 = objc_msgSend(v15, "bluetoothEnabledIncludingRestricted");
    if (!(_DWORD)v14)
      goto LABEL_19;
    goto LABEL_14;
  }
  if (a1 == 1)
  {
    v7 = *(void **)(v1 + 48);
    if (!objc_msgSend(v7, "screenStateSupportsAirDrop"))
      goto LABEL_19;
    if (!objc_msgSend(v7, "discoverableLevel"))
      goto LABEL_19;
    if (!objc_msgSend(v7, "wirelessEnabled"))
      goto LABEL_19;
    if (!objc_msgSend(v7, "bluetoothEnabledIncludingRestricted"))
      goto LABEL_19;
    v8 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes, v20, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)v8 + 16))
      goto LABEL_19;
    v9 = objc_msgSend(v7, "bluetoothAddress");
    if (!v9)
      goto LABEL_19;
    v10 = v9;
    v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    v14 = (id)sub_100225AB4(v11, v13);
LABEL_14:
    static SFPlatform.watchOS.getter(v14);
    v16 = static SFPlatform.isPlatform(_:)(v6);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    if ((v16 & 1) == 0)
      return;
LABEL_19:
    sub_1002DCD38(a1, 0);
    return;
  }
  v17 = *(void **)(v1 + 48);
  if (!objc_msgSend(v17, "screenStateSupportsAirDrop"))
    goto LABEL_19;
  if (!objc_msgSend(v17, "wirelessEnabled"))
    goto LABEL_19;
  v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, v20, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v18 + 16))
    goto LABEL_19;
}

uint64_t sub_1002E1F20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v42 = a2;
  v3 = type metadata accessor for SDAirDropServerConnection(0);
  v43 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v43 + 64);
  v5 = __chkstk_darwin(v3);
  v44 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v39 - v6);
  v8 = sub_100008384(&qword_1007B9B68);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v40 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v39 - v16);
  __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  sub_1002E6980(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10000D0F0((uint64_t)v10, &qword_1007B9B68);
  sub_100221DB4((uint64_t)v10, (uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100244384((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v17, v11) == 1)
  {
    sub_1002443C8((uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
    v21 = (uint64_t)v17;
  }
  else
  {
    swift_unknownObjectRelease(*v17);
    v22 = v42;
    sub_100244384(v42, (uint64_t)v7, type metadata accessor for SDAirDropServerConnection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v3);
    v24 = *v7;
    if (EnumCaseMultiPayload > 1)
    {
      v25 = (char *)v7 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
      v26 = type metadata accessor for UUID(0);
      EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    }
    v39 = NWConnection.nw.getter(EnumCaseMultiPayload);
    swift_release(v24);
    v27 = swift_allocObject(&unk_1007217F8, 24, 7);
    swift_weakInit(v27 + 16, v41);
    v28 = v22;
    v29 = v44;
    sub_100244384(v28, v44, type metadata accessor for SDAirDropServerConnection);
    v30 = v40;
    sub_100244384((uint64_t)v19, v40, type metadata accessor for SDAirDropServerConnectionIdentity);
    v31 = *(unsigned __int8 *)(v43 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = (v4 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(unsigned __int8 *)(v12 + 80);
    v35 = (v34 + v33 + 8) & ~v34;
    v36 = swift_allocObject(&unk_100721820, v35 + v13, v31 | v34 | 7);
    sub_100221DB4(v29, v36 + v32, type metadata accessor for SDAirDropServerConnection);
    *(_QWORD *)(v36 + v33) = v27;
    sub_100221DB4(v30, v36 + v35, type metadata accessor for SDAirDropServerConnectionIdentity);
    aBlock[4] = sub_1002E6D00;
    v46 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10025BBB4;
    aBlock[3] = &unk_100721838;
    v37 = _Block_copy(aBlock);
    swift_release(v46);
    v38 = v39;
    nw_connection_set_read_close_handler(v39, v37);
    _Block_release(v37);
    swift_unknownObjectRelease(v38);
    v21 = (uint64_t)v19;
  }
  return sub_1002443C8(v21, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_1002E22D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v7 = type metadata accessor for NWConnection.State(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  v43 = *(_QWORD *)(v41 + 64);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v9;
  v10 = type metadata accessor for SDAirDropServerConnection(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B9B68);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v19;
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = swift_allocObject(&unk_1007217F8, 24, 7);
  swift_weakInit(v21 + 16, v40);
  sub_1002E6980(a3, (uint64_t)v16);
  v22 = v38;
  sub_100244384(a4, v38, type metadata accessor for SDAirDropServerConnection);
  v23 = v41;
  v24 = v9;
  v25 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v24, a1, v42);
  v26 = *(unsigned __int8 *)(v14 + 80);
  v27 = (v26 + 40) & ~v26;
  v28 = *(unsigned __int8 *)(v11 + 80);
  v29 = (v15 + v28 + v27) & ~v28;
  v30 = *(unsigned __int8 *)(v23 + 80);
  v31 = v23;
  v32 = (v12 + v30 + v29) & ~v30;
  v33 = (char *)swift_allocObject(&unk_100721898, v32 + v43, v26 | v28 | v30 | 7);
  *((_QWORD *)v33 + 2) = 0;
  *((_QWORD *)v33 + 3) = 0;
  *((_QWORD *)v33 + 4) = v21;
  sub_10022E718((uint64_t)v16, (uint64_t)&v33[v27], &qword_1007B9B68);
  sub_100221DB4(v22, (uint64_t)&v33[v29], type metadata accessor for SDAirDropServerConnection);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v37, v25);
  v34 = sub_100252B10((uint64_t)v39, (uint64_t)&unk_1007B9C08, (uint64_t)v33);
  return swift_release(v34);
}

uint64_t sub_1002E2548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return swift_task_switch(sub_1002E2568, 0, 0);
}

uint64_t sub_1002E2568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1007B9C14);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1002E2608;
    return sub_1002E26C8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E2608()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002E2694;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 80));
    v4 = sub_1002E2674;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002E2674()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E2694()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E26C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[8] = swift_task_alloc(v5);
  v4[9] = swift_task_alloc(v5);
  v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NWError(0);
  v4[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[14] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v10);
  v4[16] = swift_task_alloc(v10);
  v4[17] = swift_task_alloc(v10);
  v4[18] = swift_task_alloc(v10);
  v11 = type metadata accessor for NWConnection.State(0);
  v4[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[20] = v12;
  v4[21] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E2808, static AirDropActor.shared, 0);
}

uint64_t sub_1002E2808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v2, *(_QWORD *)(v0 + 48), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWConnection.State.waiting(_:))
  {
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 96))(v5, *(_QWORD *)(v0 + 152));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v10 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007B9950);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15 = v14(v10, v9, v12);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 112);
    if (v18)
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v104 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138412290;
      v23 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v24 = swift_allocError(v20, v23, 0, 0);
      v14(v25, v19, v20);
      v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *(_QWORD *)(v0 + 24) = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v22 + 4);
      *v104 = v26;
      v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v27(v19, v20);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop connection waiting with error %@", v22, 0xCu);
      v28 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v104, 1, v28);
      swift_slowDealloc(v104, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v27(v19, v20);
    }
    v27(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 104));
    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.failed(_:))
  {
    v29 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 128);
    v31 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 96))(v29, *(_QWORD *)(v0 + 152));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v33 = *(_QWORD *)(v0 + 120);
    v34 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 104);
    v36 = *(_QWORD *)(v0 + 112);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007B9950);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v39 = v38(v33, v34, v35);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(_QWORD *)(v0 + 112);
    v44 = *(_QWORD *)(v0 + 120);
    v45 = *(_QWORD *)(v0 + 104);
    if (v42)
    {
      v105 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138412290;
      v48 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v49 = swift_allocError(v45, v48, 0, 0);
      v105(v50, v44, v45);
      v51 = _swift_stdlib_bridgeErrorToNSError(v49);
      *(_QWORD *)(v0 + 16) = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v46 + 4);
      *v47 = v51;
      v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v105;
      v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(v44, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop connection failed with error %@", v46, 0xCu);
      v53 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v47, 1, v53);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {
      v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    }

    v60 = *(_QWORD *)(v0 + 128);
    v61 = *(_QWORD *)(v0 + 104);
    v62 = *(_QWORD *)(v0 + 32);
    sub_1004A0010(0);
    v63 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
    v64 = swift_allocError(v61, v63, 0, 0);
    v38(v65, v60, v61);
    sub_1002E31E8(v62, v64);
    v52(v60, v61);
    swift_errorRelease(v64);
    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.setup(_:))
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_100221DF8(v54, (uint64_t)qword_1007B9950);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v56, v57))
      goto LABEL_26;
    v58 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v58 = 0;
    v59 = "AirDrop connection setting up";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v56, v57, v59, v58, 2u);
    swift_slowDealloc(v58, -1, -1);
LABEL_26:

    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.preparing(_:))
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v66 = type metadata accessor for Logger(0);
    v67 = sub_100221DF8(v66, (uint64_t)qword_1007B9950);
    v56 = Logger.logObject.getter(v67);
    v57 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v56, v57))
      goto LABEL_26;
    v58 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v58 = 0;
    v59 = "AirDrop connection preparing";
    goto LABEL_25;
  }
  if (v4 == enum case for NWConnection.State.ready(_:))
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v76 = type metadata accessor for Logger(0);
    v77 = sub_100221DF8(v76, (uint64_t)qword_1007B9950);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "AirDrop connection ready", v80, 2u);
      swift_slowDealloc(v80, -1, -1);
    }
    v81 = *(_QWORD *)(v0 + 80);
    v82 = *(_QWORD *)(v0 + 88);
    v83 = *(_QWORD *)(v0 + 72);
    v84 = *(_QWORD *)(v0 + 32);

    sub_1002E6980(v84, v83);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v83, 1, v81) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 72), &qword_1007B9B68);
    }
    else
    {
      v92 = *(_QWORD *)(v0 + 88);
      v91 = *(_QWORD *)(v0 + 96);
      v93 = *(_QWORD *)(v0 + 80);
      v94 = *(_QWORD *)(v0 + 64);
      v95 = *(_QWORD *)(v0 + 40);
      sub_100221DB4(*(_QWORD *)(v0 + 72), v91, type metadata accessor for SDAirDropServerConnectionIdentity);
      sub_100244384(v91, v94, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v94, 0, 1, v93);
      sub_1002E1F20(v94, v95);
      sub_10000D0F0(v94, &qword_1007B9B68);
      sub_1002443C8(v91, type metadata accessor for SDAirDropServerConnectionIdentity);
    }
  }
  else if (v4 == enum case for NWConnection.State.cancelled(_:))
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v85 = type metadata accessor for Logger(0);
    v86 = sub_100221DF8(v85, (uint64_t)qword_1007B9950);
    v87 = Logger.logObject.getter(v86);
    v88 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v89 = 0;
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "AirDrop connection invalidated", v89, 2u);
      swift_slowDealloc(v89, -1, -1);
    }
    v90 = *(_QWORD *)(v0 + 32);

    sub_1002E345C(v90);
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v96 = type metadata accessor for Logger(0);
    v97 = sub_100221DF8(v96, (uint64_t)qword_1007B9950);
    v98 = Logger.logObject.getter(v97);
    v99 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "Unknown AirDrop connection state", v100, 2u);
      swift_slowDealloc(v100, -1, -1);
    }
    v102 = *(_QWORD *)(v0 + 160);
    v101 = *(_QWORD *)(v0 + 168);
    v103 = *(_QWORD *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
  }
LABEL_27:
  v68 = *(_QWORD *)(v0 + 136);
  v69 = *(_QWORD *)(v0 + 144);
  v71 = *(_QWORD *)(v0 + 120);
  v70 = *(_QWORD *)(v0 + 128);
  v72 = *(_QWORD *)(v0 + 96);
  v74 = *(_QWORD *)(v0 + 64);
  v73 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v69);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E31E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B9B68);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v27 - v16;
  sub_1002E6980(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10000D0F0((uint64_t)v10, &qword_1007B9B68);
  sub_100221DB4((uint64_t)v10, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
  sub_100244384((uint64_t)v17, (uint64_t)v15, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain(v2);
  swift_errorRetain(a2);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v20 = static AirDropActor.shared;
  v21 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v22 + 40) & ~v22;
  v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (_QWORD *)swift_allocObject(&unk_1007218C0, v24 + 8, v22 | 7);
  v25[2] = v20;
  v25[3] = v21;
  v25[4] = v2;
  sub_100221DB4((uint64_t)v15, (uint64_t)v25 + v23, type metadata accessor for SDAirDropServerConnectionIdentity);
  *(_QWORD *)((char *)v25 + v24) = a2;
  swift_retain(v20);
  v26 = sub_100252EC0((uint64_t)v7, (uint64_t)&unk_1007B9C28, (uint64_t)v25);
  swift_release(v26);
  return sub_1002443C8((uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_1002E345C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B9B68);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v30 - v17;
  sub_1002E6980(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_10000D0F0((uint64_t)v8, &qword_1007B9B68);
  sub_100221DB4((uint64_t)v8, (uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100244384((uint64_t)v18, (uint64_t)v16, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v16, v9) == 1)
  {
    v20 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v16, v20);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
    sub_100244384((uint64_t)v18, (uint64_t)v13, type metadata accessor for SDAirDropServerConnectionIdentity);
    v22 = qword_1007B3D98;
    swift_retain(v1);
    if (v22 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v23 = static AirDropActor.shared;
    v24 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v25 = *(unsigned __int8 *)(v10 + 80);
    v26 = (v25 + 40) & ~v25;
    v27 = (_QWORD *)swift_allocObject(&unk_1007218E8, v26 + v11, v25 | 7);
    v27[2] = v23;
    v27[3] = v24;
    v27[4] = v1;
    sub_100221DB4((uint64_t)v13, (uint64_t)v27 + v26, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain(v23);
    v28 = sub_100252EC0((uint64_t)v5, (uint64_t)&unk_1007B9C38, (uint64_t)v27);
    swift_release(v28);
    v29 = (uint64_t)v18;
  }
  else
  {
    sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    v29 = (uint64_t)v16;
  }
  return sub_1002443C8(v29, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_1002E3734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;

  v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100221DF8(v12, (uint64_t)qword_1007B9950);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "AirDrop connection read close event", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  sub_1004A0010(0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
  sub_100244384(a3, (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SDAirDropServerConnectionIdentity);
  v18 = qword_1007B3D98;
  swift_retain(a2);
  if (v18 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v19 = static AirDropActor.shared;
  v20 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (_QWORD *)swift_allocObject(&unk_100721870, v22 + v7, v21 | 7);
  v23[2] = v19;
  v23[3] = v20;
  v23[4] = a2;
  sub_100221DB4((uint64_t)v8, (uint64_t)v23 + v22, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain(v19);
  v24 = sub_100252EE0((uint64_t)v11, (uint64_t)&unk_1007B9BF0, (uint64_t)v23);
  return swift_release(v24);
}

uint64_t sub_1002E3994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v5[8] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E3A04, v6, 0);
}

uint64_t sub_1002E3A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v3 = type metadata accessor for CancellationError(0);
    v4 = sub_100220D78(&qword_1007B6C38, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v5 = swift_allocError(v3, v4, 0, 0);
    *(_QWORD *)(v0 + 80) = v5;
    CancellationError.init()();
    v6 = (_QWORD *)swift_task_alloc(dword_1007B9BD4);
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_1002E3AF0;
    return sub_1002DE9AC(*(_QWORD *)(v0 + 56), v5);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E3AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_errorRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_1002E3B60, v3, 0);
}

uint64_t sub_1002E3B60()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 72) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E3B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B9BD4);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_10000D098;
  return sub_1002DE9AC(a5, a6);
}

uint64_t sub_1002E3C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = (_QWORD *)swift_task_alloc(dword_1007B9BD4);
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_10000D098;
  return sub_1002DE9AC(a5, 0);
}

uint64_t sub_1002E3C84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE v22[24];
  uint64_t v23[2];

  v1 = v0;
  v2 = *(void **)(v0 + 48);
  if (objc_msgSend(v2, "discoverableLevel"))
  {
    if (objc_msgSend(v2, "discoverableLevel") == (id)2)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v3 = type metadata accessor for Logger(0);
      v4 = sub_100221DF8(v3, (uint64_t)qword_1007B9950);
      v5 = Logger.logObject.getter(v4);
      v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Device in everyone mode", v7, 2u);
        swift_slowDealloc(v7, -1, -1);
      }

LABEL_19:
      v18 = sub_100435F78();
      v20 = v19;
      swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes, v22, 33, 0);
      sub_10045E380(v23, v18, v20);
      swift_endAccess(v22);
      sub_100225AB4(v23[0], v23[1]);
      return 1;
    }
    if ((sub_10038F648() & 1) != 0)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_100221DF8(v13, (uint64_t)qword_1007B9950);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Device in contacts only mode", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

      if ((sub_1004360A0(v2, *(void **)(v1 + 56)) & 1) != 0)
        goto LABEL_19;
    }
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007B9950);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Device has AirDrop discovery OFF", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
  return 0;
}

uint64_t sub_1002E3F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_1002E3FC8();
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1002E3FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_100721960, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_10000D0F0((uint64_t)v4, &qword_1007B68A0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_100721988, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1007B9C68;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1007B9C70, v19);
  return swift_release(v21);
}

void sub_1002E419C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  v6 = v5[1];
  if (!v6)
  {
    *v5 = a1;
    v5[1] = a2;
    sub_1002E76F4(a1, a2);
    sub_1002E76E0(v7, 0);
    return;
  }
  if (v6 == 1)
  {
    if (a2 == 1)
      return;
  }
  else if (a2 >= 2)
  {
    v8 = v7 == a1 && v6 == a2;
    if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0) & 1) != 0)
      return;
  }
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100221DF8(v9, (uint64_t)qword_1007B9950);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "AppleID change detected, stopping servers", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = *v5;
  v15 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  sub_1002E76F4(a1, a2);
  sub_1002E76E0(v14, v15);
  sub_1002DCD38(1, 1);
  sub_1002DCD38(0, 1);
  sub_1002DCD38(2, 1);
}

uint64_t sub_1002E4364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E437C, 0, 0);
}

uint64_t sub_1002E437C()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + 48);
  v2 = objc_msgSend(v1, "wirelessEnabled");
  *(_BYTE *)(v0 + 28) = v2;
  v3 = objc_msgSend(v1, "bluetoothEnabledIncludingRestricted");
  *(_BYTE *)(v0 + 29) = v3;
  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007B9950);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(14, -1);
    *(_DWORD *)v8 = 67109376;
    *(_DWORD *)(v0 + 24) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 4);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 10);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Wireless/Bluetooth state changed - Wireless: %{BOOL}d Bluetooth: %{BOOL}d", (uint8_t *)v8, 0xEu);
    swift_slowDealloc(v8, -1, -1);
  }

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E4524, static AirDropActor.shared, 0);
}

uint64_t sub_1002E4524(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 28) & *(_BYTE *)(v1 + 29) & 1;
  if (v3 != *(unsigned __int8 *)(v2
                                + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled))
  {
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = v3;
    a1 = sub_1002DDA98();
  }
  return (*(uint64_t (**)(__n128))(v1 + 8))(a1);
}

uint64_t sub_1002E45A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v32[4];

  v10 = v5;
  v11 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v16 = (_QWORD *)swift_allocObject(a2, 40, 7);
  v16[2] = 0;
  v17 = v16 + 2;
  v16[3] = 0;
  v16[4] = v10;
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v19 = swift_retain(v10);
  if (v18 == 1)
  {
    sub_10000D0F0((uint64_t)v13, &qword_1007B68A0);
    v20 = 0;
    v21 = 0;
    v22 = 7168;
  }
  else
  {
    v23 = TaskPriority.rawValue.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    v22 = v23 | 0x1C00;
    v24 = *v17;
    if (*v17)
    {
      v25 = v16[3];
      ObjectType = swift_getObjectType(*v17);
      swift_unknownObjectRetain(v24);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v25);
      v21 = v27;
      swift_unknownObjectRelease(v24);
    }
    else
    {
      v20 = 0;
      v21 = 0;
    }
  }
  v28 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v28 + 16) = a4;
  *(_QWORD *)(v28 + 24) = v16;
  if (v21 | v20)
  {
    v32[0] = 0;
    v32[1] = 0;
    v29 = v32;
    v32[2] = v20;
    v32[3] = v21;
  }
  else
  {
    v29 = 0;
  }
  v30 = swift_task_create(v22, v29, (char *)&type metadata for () + 8, a5, v28);
  return swift_release(v30);
}

uint64_t sub_1002E4778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E4790, 0, 0);
}

uint64_t sub_1002E4790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B9950);
  v3 = swift_retain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 16);
  if (v6)
  {
    v8 = swift_slowAlloc(14, -1);
    *(_DWORD *)v8 = 67109376;
    v9 = *(void **)(v7 + 48);
    *(_DWORD *)(v0 + 24) = objc_msgSend(v9, "screenOn");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 4);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = objc_msgSend(v9, "isMirroringActive");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 10);
    swift_release(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Screen state changed %{BOOL}d - mirroring state %{BOOL}d", (uint8_t *)v8, 0xEu);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 16));
  }

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E494C, static AirDropActor.shared, 0);
}

uint64_t sub_1002E494C()
{
  sub_1002DDA98();
  return swift_task_switch(sub_1002E4988, 0, 0);
}

uint64_t sub_1002E4988()
{
  return swift_task_switch(sub_1002E49A4, static AirDropActor.shared, 0);
}

uint64_t sub_1002E49A4()
{
  uint64_t v0;

  sub_1002E49D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002E49D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint8_t *v56;
  uint64_t *v57;
  double v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  const char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  __n128 v106;
  uint64_t v107;
  char *v108;
  int64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  __int128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char v117[24];
  char v118[24];
  uint64_t v119;
  char v120[24];
  uint64_t v121;
  _BYTE v122[16];
  uint64_t v123;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v114 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v108 = (char *)&v100 - v6;
  v7 = sub_100008384(&qword_1007B9BC0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v100 - v11;
  v13 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  v110 = v10;
  v112 = (char *)&v100 - v11;
  if (v14)
  {
    v15 = *(_QWORD *)(v13 + 8);
    ObjectType = swift_getObjectType(v14);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 32);
    swift_unknownObjectRetain(v14);
    v18 = ObjectType;
    v12 = v112;
    v19 = v17(v18, v15);
    v10 = v110;
    v20 = v19;
    swift_unknownObjectRelease(v14);
    if (v20)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v21 = type metadata accessor for Logger(0);
      sub_100221DF8(v21, (uint64_t)qword_1007B9950);
      swift_retain_n(v20, 2);
      v22 = swift_retain_n(v1, 2);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc(22, -1);
        v116 = swift_slowAlloc(32, -1);
        v123 = v116;
        *(_DWORD *)v25 = 136315394;
        v26 = NWListener.debugDescription.getter();
        v28 = (const char *)v27;
        v121 = sub_100228BD8(v26, v27, &v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v25 + 4);
        swift_release_n(v20, 2);
        swift_bridgeObjectRelease(v28);
        *(_WORD *)(v25 + 12) = 2048;
        v29 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors;
        swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors, v117, 0, 0);
        v30 = *(_QWORD *)(*(_QWORD *)v29 + 16);
        swift_release(v1);
        v121 = v30;
        v10 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v25 + 14);
        swift_release(v1);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Application Service Server %s - errors: %ld", (uint8_t *)v25, 0x16u);
        v31 = v116;
        swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v25, -1, -1);
        swift_release(v20);

      }
      else
      {

        swift_release_n(v20, 3);
        swift_release_n(v1, 2);
      }
      v12 = v112;
    }
  }
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
  if (v32)
  {
    v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer + 8);
    v34 = swift_getObjectType(*(_QWORD *)(v1
                                        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer));
    v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 32);
    swift_unknownObjectRetain(v32);
    v36 = v34;
    v12 = v112;
    v37 = v35(v36, v33);
    v10 = v110;
    v38 = v37;
    swift_unknownObjectRelease(v32);
    if (v38)
    {
      if (qword_1007B3E28 != -1)
        swift_once(&qword_1007B3E28, sub_1002D7748);
      v39 = type metadata accessor for Logger(0);
      sub_100221DF8(v39, (uint64_t)qword_1007B9950);
      swift_retain_n(v1, 2);
      v40 = swift_retain_n(v38, 2);
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc(22, -1);
        v116 = swift_slowAlloc(32, -1);
        v123 = v116;
        *(_DWORD *)v43 = 136315394;
        v44 = NWListener.debugDescription.getter();
        v46 = (const char *)v45;
        v121 = sub_100228BD8(v44, v45, &v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v43 + 4);
        swift_release_n(v38, 2);
        swift_bridgeObjectRelease(v46);
        *(_WORD *)(v43 + 12) = 2048;
        v47 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors;
        swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors, v118, 0, 0);
        v48 = *(_QWORD *)(*(_QWORD *)v47 + 16);
        swift_release(v1);
        v121 = v48;
        v10 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v43 + 14);
        swift_release(v1);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Bonjour Server %s - errors: %ld", (uint8_t *)v43, 0x16u);
        v49 = v116;
        swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1, -1);
        swift_slowDealloc(v43, -1, -1);
        swift_release(v38);

      }
      else
      {

        swift_release_n(v38, 3);
        swift_release_n(v1, 2);
      }
      v12 = v112;
    }
  }
  v50 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions, &v123, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v50 + 16))
  {
    if (qword_1007B3E28 != -1)
      goto LABEL_61;
    goto LABEL_19;
  }
LABEL_23:
  v57 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  *(_QWORD *)&v58 = swift_beginAccess(v1+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID, &v121, 0, 0).n128_u64[0];
  v59 = *v57;
  v60 = v108;
  if (*(_QWORD *)(*v57 + 16))
  {
    v61 = *(_QWORD *)(v59 + 64);
    v104 = v59 + 64;
    v50 = 1 << *(_BYTE *)(v59 + 32);
    v62 = -1;
    if (v50 < 64)
      v62 = ~(-1 << v50);
    v63 = v62 & v61;
    v64 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors;
    swift_bridgeObjectRetain((const char *)v59, v58);
    v107 = v64;
    v65 = swift_beginAccess(v64, v120, 0, 0);
    v66 = 0;
    v67 = v63;
    v68 = (unint64_t)(v50 + 63) >> 6;
    v101 = v68 - 1;
    v109 = v68;
    v102 = v68 - 5;
    v103 = v59 + 104;
    v65.n128_u64[0] = 136315650;
    v106 = v65;
    v105 = (char *)&type metadata for Any + 8;
    v111 = v59;
    while (!v67)
    {
      v73 = v66 + 1;
      if (__OFADD__(v66, 1))
      {
        __break(1u);
LABEL_61:
        swift_once(&qword_1007B3E28, sub_1002D7748);
LABEL_19:
        v51 = type metadata accessor for Logger(0);
        sub_100221DF8(v51, (uint64_t)qword_1007B9950);
        v52 = swift_retain(v1);
        v53 = Logger.logObject.getter(v52);
        v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v55 = 134217984;
          v121 = *(_QWORD *)(*(_QWORD *)v50 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v55 + 4);
          swift_release(v1);
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "NearField Transactions %ld", v55, 0xCu);
          v56 = v55;
          v10 = v110;
          swift_slowDealloc(v56, -1, -1);

        }
        else
        {

          swift_release(v1);
        }
        v12 = v112;
        goto LABEL_23;
      }
      if (v73 >= v109)
      {
        v75 = v66;
      }
      else
      {
        v74 = *(_QWORD *)(v104 + 8 * v73);
        if (v74)
          goto LABEL_35;
        v75 = v66 + 1;
        if (v66 + 2 < v109)
        {
          v74 = *(_QWORD *)(v104 + 8 * (v66 + 2));
          if (v74)
          {
            v73 = v66 + 2;
            goto LABEL_35;
          }
          v75 = v66 + 2;
          if (v66 + 3 < v109)
          {
            v74 = *(_QWORD *)(v104 + 8 * (v66 + 3));
            if (v74)
            {
              v73 = v66 + 3;
LABEL_35:
              v115 = (v74 - 1) & v74;
              v116 = v73;
              v69 = __clz(__rbit64(v74)) + (v73 << 6);
LABEL_31:
              (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v10, *(_QWORD *)(v59 + 48) + *(_QWORD *)(v3 + 72) * v69, v2);
              v70 = *(_QWORD *)(v59 + 56);
              v71 = sub_100008384(&qword_1007B9BC8);
              v72 = *(int *)(v71 + 48);
              v113 = *(_OWORD *)(v70 + 16 * v69);
              *(_OWORD *)&v10[v72] = v113;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v10, 0, 1, v71);
              swift_unknownObjectRetain(v113);
              goto LABEL_38;
            }
            v73 = v66 + 4;
            v75 = v66 + 3;
            if (v66 + 4 < v109)
            {
              v74 = *(_QWORD *)(v104 + 8 * v73);
              if (v74)
                goto LABEL_35;
              while (v102 != v66)
              {
                v74 = *(_QWORD *)(v103 + 8 * v66++);
                if (v74)
                {
                  v73 = v66 + 4;
                  goto LABEL_35;
                }
              }
              v75 = v101;
            }
          }
        }
      }
      v76 = sub_100008384(&qword_1007B9BC8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v10, 1, 1, v76);
      v115 = 0;
      v116 = v75;
LABEL_38:
      sub_10022E718((uint64_t)v10, (uint64_t)v12, &qword_1007B9BC0);
      v77 = sub_100008384(&qword_1007B9BC8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v12, 1, v77) == 1)
      {
        swift_release(v59);
        return;
      }
      v78 = &v12[*(int *)(v77 + 48)];
      v79 = *(_QWORD *)v78;
      v50 = *((_QWORD *)v78 + 1);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v60, v12, v2);
      v80 = swift_getObjectType(v79);
      v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 32))(v80, v50);
      if (v81)
      {
        v82 = v81;
        if (qword_1007B3E28 != -1)
          swift_once(&qword_1007B3E28, sub_1002D7748);
        v83 = type metadata accessor for Logger(0);
        sub_100221DF8(v83, (uint64_t)qword_1007B9950);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v114, v60, v2);
        swift_retain_n(v1, 2);
        v84 = swift_retain_n(v82, 2);
        v50 = Logger.logObject.getter(v84);
        v85 = static os_log_type_t.default.getter();
        if (os_log_type_enabled((os_log_t)v50, v85))
        {
          v86 = swift_slowAlloc(32, -1);
          v87 = swift_slowAlloc(64, -1);
          v119 = v87;
          *(_DWORD *)v86 = v106.n128_u32[0];
          v88 = NWListener.debugDescription.getter();
          v90 = (const char *)v89;
          *(_QWORD *)(v86 + 4) = sub_100228BD8(v88, v89, &v119);
          swift_release_n(v82, 2);
          swift_bridgeObjectRelease(v90);
          *(_WORD *)(v86 + 12) = 2080;
          v91 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v92 = dispatch thunk of CustomStringConvertible.description.getter(v2, v91);
          v94 = (const char *)v93;
          *(_QWORD *)(v86 + 14) = sub_100228BD8(v92, v93, &v119);
          v95 = swift_bridgeObjectRelease(v94);
          *(_QWORD *)&v113 = *(_QWORD *)(v3 + 8);
          ((void (*)(char *, uint64_t, __n128))v113)(v114, v2, v95);
          *(_WORD *)(v86 + 22) = 2048;
          v96 = v3;
          v97 = v2;
          v98 = *(_QWORD *)(*(_QWORD *)v107 + 16);
          swift_release(v1);
          *(_QWORD *)(v86 + 24) = v98;
          v2 = v97;
          v3 = v96;
          swift_release(v1);
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v50, v85, "NearField Server %s - TransactionID %s - errors: %ld", (uint8_t *)v86, 0x20u);
          swift_arrayDestroy(v87, 2, v105);
          swift_slowDealloc(v87, -1, -1);
          v99 = v86;
          v60 = v108;
          swift_slowDealloc(v99, -1, -1);
          swift_release(v82);
          swift_unknownObjectRelease(v79);

          ((void (*)(char *, uint64_t))v113)(v60, v2);
        }
        else
        {
          swift_unknownObjectRelease(v79);

          swift_release_n(v1, 2);
          v50 = *(_QWORD *)(v3 + 8);
          ((void (*)(char *, uint64_t))v50)(v114, v2);
          swift_release_n(v82, 3);
          ((void (*)(char *, uint64_t))v50)(v60, v2);
        }
        v10 = v110;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v60, v2);
        swift_unknownObjectRelease(v79);
      }
      v12 = v112;
      v59 = v111;
      v67 = v115;
      v66 = v116;
    }
    v115 = (v67 - 1) & v67;
    v116 = v66;
    v69 = __clz(__rbit64(v67)) | (v66 << 6);
    goto LABEL_31;
  }
}

uint64_t sub_1002E56A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E56B8, 0, 0);
}

uint64_t sub_1002E56B8()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(v0[2] + 48), "myAppleID");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 1;
  }
  v0[3] = v3;
  v0[4] = v5;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E5768, static AirDropActor.shared, 0);
}

uint64_t sub_1002E5768()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  sub_1002E419C(v2, v1);
  sub_1002E76E0(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E57DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_1002E57F4, 0, 0);
}

uint64_t sub_1002E57F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t v15;
  uint64_t *v17;
  uint64_t v18[3];

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B9950);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 24);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(*(id *)(v7 + 48), "localHostName");
    v17 = (uint64_t *)(v0 + 16);
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v18[1] = 0;
      v18[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease((const char *)0xE000000000000000);
      v14 = (const char *)0x8000000100612DF0;
      v12 = 0xD000000000000015;
    }
    v15 = *(_QWORD *)(v0 + 24);
    *v17 = sub_100228BD8(v12, (unint64_t)v14, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, v0 + 24, v8 + 4);
    swift_release_n(v15, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Device name changed %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v7, 2);
  }
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E5A50, static AirDropActor.shared, 0);
}

uint64_t sub_1002E5A50()
{
  uint64_t v0;

  sub_1002DCD38(1, 1);
  sub_1002DCD38(0, 1);
  sub_1002DCD38(2, 1);
  if ((sub_1002D77D8() & 1) != 0)
  {
    sub_1002D8108(0);
    if ((sub_1002D78C4() & 1) != 0)
      sub_1002D8108(1);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E5AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E5B04, 0, 0);
}

uint64_t sub_1002E5B04()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 48), "discoverableLevel");
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E5B80, static AirDropActor.shared, 0);
}

uint64_t sub_1002E5B80()
{
  uint64_t v0;
  double v1;

  v1 = sub_1002E5BB0(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

double sub_1002E5BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char *v9;
  char v10;
  const char **v11;
  double v12;
  const char *v13;
  const char **v14;
  double v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v2 = v1;
  v4 = type metadata accessor for SFPlatform(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) != a1)
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = a1;
    static SFPlatform.watchOS.getter(v6);
    v10 = static SFPlatform.isPlatform(_:)(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    if ((v10 & 1) == 0)
    {
      sub_1004A190C(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
      v11 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
      *(_QWORD *)&v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes, v25, 1, 0).n128_u64[0];
      v13 = *v11;
      *v11 = (const char *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRelease(v13, v12);
    }
    v14 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    *(_QWORD *)&v15 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes, v24, 1, 0).n128_u64[0];
    v16 = *v14;
    *v14 = (const char *)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v16, v15);
    sub_1002DCD38(1, 1);
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100221DF8(v17, (uint64_t)qword_1007B9950);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v21 = 134217984;
      v23 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v21 + 4);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Discoverability mode changed stopping server - new mode: %ld", v21, 0xCu);
      swift_slowDealloc(v21, -1, -1);
    }

    *(_QWORD *)&result = sub_1002DDA98().n128_u64[0];
  }
  return result;
}

uint64_t sub_1002E5DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E5DF8, 0, 0);
}

uint64_t sub_1002E5DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if ((objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 48), "currentConsoleUser") & 1) != 0)
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007B9950);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "User is logged in, starting app service server if needed", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v6 = static AirDropActor.shared;
    v7 = sub_1002E6058;
  }
  else
  {
    if (qword_1007B3E28 != -1)
      swift_once(&qword_1007B3E28, sub_1002D7748);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100221DF8(v8, (uint64_t)qword_1007B9950);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "User logged out, stopping servers", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v6 = static AirDropActor.shared;
    v7 = sub_1002E6008;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1002E6008()
{
  uint64_t v0;

  sub_1002DCD38(1, 1);
  sub_1002DCD38(0, 1);
  sub_1002DCD38(2, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E6058()
{
  uint64_t v0;

  sub_1002D8108(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E60B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v13 = type metadata accessor for Notification(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v17 = swift_retain(a1);
  sub_1002E45A0(v17, a4, a5, a6, a7);
  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1002E6180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1002E6198, 0, 0);
}

uint64_t sub_1002E6198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  char v8;

  if (qword_1007B3E28 != -1)
    swift_once(&qword_1007B3E28, sub_1002D7748);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007B9950);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    type metadata accessor for SFAirDropUserDefaults(0, v6);
    v7 = (void *)static SFAirDropUserDefaults.shared.getter();
    v8 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

    *(_DWORD *)(v0 + 24) = v8 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v5 + 4);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cellular usage changed to %{BOOL}d", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E6310, static AirDropActor.shared, 0);
}

uint64_t sub_1002E6310()
{
  uint64_t v0;

  sub_1002DCD38(1, 1);
  sub_1002DCD38(0, 1);
  sub_1002DCD38(2, 1);
  if ((sub_1002D77D8() & 1) != 0)
  {
    sub_1002D8108(0);
    if ((sub_1002D78C4() & 1) != 0)
      sub_1002D8108(1);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E6388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  sub_100232F78(v0 + 16);
  sub_100232F78(v0 + 32);

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));

  v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer));
  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer));
  *(_QWORD *)&v3 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors)).n128_u64[0];
  *(_QWORD *)&v4 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions), v3).n128_u64[0];
  *(_QWORD *)&v5 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID), v4).n128_u64[0];
  *(_QWORD *)&v6 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors), v5).n128_u64[0];
  *(_QWORD *)&v7 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers), v6).n128_u64[0];
  *(_QWORD *)&v8 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers), v7).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers), v8);
  sub_1002E76E0(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState), *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState + 8));
  return v0;
}

uint64_t sub_1002E64E0()
{
  uint64_t v0;

  sub_1002E6388();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002E6504()
{
  return type metadata accessor for SDAirDropReceiveConnectionManager(0);
}

uint64_t type metadata accessor for SDAirDropReceiveConnectionManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1007B9A08;
  if (!qword_1007B9A08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropReceiveConnectionManager);
  return result;
}

uint64_t sub_1002E6548(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[26];

  v4[0] = &unk_1005D1EF8;
  v4[1] = &unk_1005D1EF8;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[11] = *(_QWORD *)(result - 8) + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = &unk_1005D1F10;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[15] = &unk_1005D1F10;
    v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[23] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[24] = &unk_1005D1F28;
    v4[25] = &unk_1005D1F40;
    return swift_updateClassMetadata2(a1, 256, 26, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_1002E6640(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*a4;
  v14 = sub_10045C2DC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = (_QWORD *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (uint64_t *)(v20[7] + 16 * v14);
      result = swift_unknownObjectRelease(*v21);
      *v21 = a1;
      v21[1] = (uint64_t)&off_100728250;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10046E7B8();
    goto LABEL_7;
  }
  sub_100465EA0(v17, a3 & 1);
  v23 = sub_10045C2DC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = (_QWORD *)*a4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1002E67A4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1002E67A4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_QWORD *)(a4[7] + 16 * a1);
  *v11 = a3;
  v11[1] = &off_100728250;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_1002E6848(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  const char *v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(const char **)(a1 + 72);
  swift_bridgeObjectRetain(*(const char **)(a1 + 8));
  sub_100244404(v2, v3);
  sub_10022E4A8(v4, v5);
  sub_10022E4A8(v6, v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_1002E68C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  const char *v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(const char **)(a1 + 72);
  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  sub_100225AA0(v2, v3);
  sub_100225AB4(v4, v5);
  sub_100225AB4(v6, v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_1002E6940(uint64_t a1)
{
  uint64_t v1;

  return static SFAirDrop.TransferIdentifier.== infix(_:_:)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1002E6980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E69C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unsigned int EnumCaseMultiPayload;
  char *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for SDAirDropServerConnection(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v10 = (_QWORD *)(v0 + v3);
  v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    }
    else
    {
      swift_unknownObjectRelease(*v10);
    }
  }
  v13 = (_QWORD *)(v0 + v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v8, v5);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v13);
    v15 = (char *)v13 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v13);
  }
  return swift_deallocObject(v0, v8 + v9, v2 | v7 | 7);
}

uint64_t sub_1002E6B24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropServerConnection(0) - 8) + 80);
  return sub_1002E22D4(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1002E6B94()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E6BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned int EnumCaseMultiPayload;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for SDAirDropServerConnection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (_QWORD *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v1);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v11);
    v13 = (char *)v11 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v11);
  }
  swift_release(*(_QWORD *)(v0 + v5));
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    v15 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v9, v15);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + v9));
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_1002E6D00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8) + 80);
  return sub_1002E3734(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_1002E6D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002E6D80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002E6D8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B9BE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002E3994(a1, v5, v6, v7, v8);
}

uint64_t sub_1002E6E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int EnumCaseMultiPayload;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for SDAirDropServerConnection(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v23 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for NWConnection.State(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(_QWORD *)(v10 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v12 = (_QWORD *)(v0 + v3);
  v13 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    }
    else
    {
      swift_unknownObjectRelease(*v12);
    }
  }
  v15 = (_QWORD *)(v0 + v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v8, v5);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v15);
    v17 = (char *)v15 + *(int *)(sub_100008384(&qword_1007B9B70) + 48);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v15);
  }
  v19 = (v8 + v23 + v11) & ~v11;
  v20 = v19 + v22;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v19, v9);
  return swift_deallocObject(v0, v20, v2 | v7 | v11 | 7);
}

uint64_t sub_1002E6FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007B9B68) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NWConnection.State(0) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v1 + v5;
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_1007B9C04);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000D12C;
  v16[8] = v14;
  v16[9] = v15;
  v16[6] = v12;
  v16[7] = v13;
  v16[5] = a1;
  return swift_task_switch(sub_1002E2568, 0, 0);
}

uint64_t sub_1002E70C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + v4));
  }
  v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_errorRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_1002E7184(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1007B9C24);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D12C;
  return sub_1002E3B7C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1002E7234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + v4));
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002E72D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B9C34);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002E3C08(a1, v5, v6, v7, v8);
}

uint64_t sub_1002E736C(void *a1, char a2)
{
  uint64_t v2;

  return sub_1002DDE64(a1, a2, v2);
}

uint64_t sub_1002E7374()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1002E73A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_1007B9C4C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  return sub_1002DDFD8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_1002E7428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B6D40;
  if (!qword_1007B6D40)
  {
    v1 = sub_10021FF9C((uint64_t *)&unk_1007BD6A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1007B6D40);
  }
  return result;
}

uint64_t sub_1002E7474(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E3F74(a1, v1);
}

uint64_t sub_1002E7480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9C64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E6198, 0, 0);
}

uint64_t sub_1002E74E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007B6604);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1007B6600 + dword_1007B6600))(a1, v4);
}

uint64_t sub_1002E7554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9C7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E5DF8, 0, 0);
}

uint64_t sub_1002E75B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9C94);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E5B04, 0, 0);
}

uint64_t sub_1002E761C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9CAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[3] = v2;
  return swift_task_switch(sub_1002E57F4, 0, 0);
}

uint64_t sub_1002E7680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9CC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E56B8, 0, 0);
}

uint64_t sub_1002E76E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_1002E76F4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1002E770C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9CDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E4790, 0, 0);
}

uint64_t sub_1002E776C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E7794()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002E77C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1007B9CF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D098;
  v3[2] = v2;
  return swift_task_switch(sub_1002E437C, 0, 0);
}

uint64_t sub_1002E7840()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  __SecIdentity *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = v0;
  v2 = sub_100008384((uint64_t *)&unk_1007C1E50);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NWEndpoint.Port(0);
  result = __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener])
  {
    v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus];
    v35 = sub_10038E61C();
    v12 = v11;
    if (qword_1007B3E30 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007B9D10);
    v14 = swift_bridgeObjectRetain_n(v12, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v33 = v10;
      v17 = swift_slowAlloc(12, -1);
      v34 = v4;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc(32, -1);
      v37[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(v12);
      v36 = sub_100228BD8(v35, (unint64_t)v12, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v18 + 4);
      swift_bridgeObjectRelease_n(v12, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Starting AirDrop Bonjour Server %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      v20 = v18;
      v4 = v34;
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v12, 2);
    }
    v21 = sub_10038F728();
    v22 = sub_100503508(v21);

    static NWEndpoint.Port.any.getter();
    v23 = type metadata accessor for NWListener(0);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    v24 = NWListener.init(using:on:)(v22, v8);
    v25 = *(_QWORD *)&v1[v9];
    *(_QWORD *)&v1[v9] = v24;
    swift_retain(v24);
    swift_release(v25);
    v26 = swift_allocObject(&unk_100721C00, 32, 7);
    *(_QWORD *)(v26 + 16) = v1;
    *(_QWORD *)(v26 + 24) = v24;
    swift_retain(v24);
    v27 = v1;
    NWListener.stateUpdateHandler.setter(sub_1002E9AD8, v26);
    v28 = swift_allocObject(&unk_100721C28, 24, 7);
    *(_QWORD *)(v28 + 16) = v27;
    v29 = v27;
    NWListener.newConnectionHandler.setter(sub_1002E9B04, v28);
    NWListener.start(queue:)(*(_QWORD *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_queue]);
    v30 = sub_1002A8154();
    NWListener.Service.init(name:type:domain:txtRecord:)(v35, v12, 0x706F72647269615FLL, 0xEE002E7063745F2ELL, 0x6C61636F6CLL, 0xE500000000000000, v30, v31);
    v32 = type metadata accessor for NWListener.Service(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v4, 0, 1, v32);
    NWListener.service.setter(v4);
    return swift_release(v24);
  }
  return result;
}

uint64_t sub_1002E7C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B9D10);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B9D10);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002E7CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;

  v6 = type metadata accessor for NWListener.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject(&unk_100721C50, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a2);
  v15 = swift_allocObject(&unk_100721CC8, 24, 7);
  swift_weakInit(v15 + 16, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject(&unk_100721CF0, v18 + 8, v16 | 7);
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v19[v17], v9, v6);
  *(_QWORD *)&v19[v18] = v15;
  v20 = sub_100252EE0((uint64_t)v12, (uint64_t)&unk_1007B9DB8, (uint64_t)v19);
  return swift_release(v20);
}

uint64_t sub_1002E7E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch(sub_1002E7EB4, 0, 0);
}

uint64_t sub_1002E7EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 72) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v4, v0 + 40, 0, 0);
    v5 = swift_weakLoadStrong(v4);
    *(_QWORD *)(v0 + 104) = v5;
    v6 = (_QWORD *)swift_task_alloc(dword_1007B9DC4);
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_1002E7F80;
    return sub_1002E8000(*(_QWORD *)(v0 + 80), v5);
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E7F80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = *(void **)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release(v1);

  return swift_task_switch(sub_1002E7FE4, 0, 0);
}

uint64_t sub_1002E7FE4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_QWORD *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_100008384(&qword_1007C4330);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NWError(0);
  v3[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[15] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v7);
  v3[17] = swift_task_alloc(v7);
  v3[18] = swift_task_alloc(v7);
  v3[19] = swift_task_alloc(v7);
  v8 = type metadata accessor for NWListener.State(0);
  v3[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[21] = v9;
  v3[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  v3[23] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E810C, v10, 0);
}

uint64_t sub_1002E810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  const char *v58;
  uint64_t v59;
  uint64_t Strong;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSString v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint8_t *buf;
  uint64_t v96;
  uint64_t *v97;

  v97 = (uint64_t *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v2, *(_QWORD *)(v0 + 80), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 96))(v5, *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1007B3E30 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v10 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);
    v13 = type metadata accessor for Logger(0);
    sub_100221DF8(v13, (uint64_t)qword_1007B9D10);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15 = v14(v10, v9, v12);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    if (v18)
    {
      v96 = *(_QWORD *)(v0 + 120);
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v94 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138412290;
      v23 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v24 = swift_allocError(v21, v23, 0, 0);
      v14(v25, v19, v21);
      v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *v97 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v0 + 80, v22 + 4);
      *v94 = v26;
      v27 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v27(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop Bonjour server waiting with error %@", v22, 0xCu);
      v28 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v94, 1, v28);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }
    v27(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112));
    goto LABEL_43;
  }
  if (v4 == enum case for NWListener.State.failed(_:))
  {
    v29 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 136);
    v31 = *(_QWORD *)(v0 + 112);
    v32 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 96))(v29, *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1007B3E30 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v33 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 112);
    v36 = *(_QWORD *)(v0 + 120);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007B9D10);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v39 = v38(v33, v34, v35);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v44 = *(_QWORD *)(v0 + 120);
    v43 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 112);
    if (v42)
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      buf = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v46 = 138412290;
      v47 = sub_100220D78(&qword_1007B7EC0, (uint64_t (*)(uint64_t))&type metadata accessor for NWError, (uint64_t)&protocol conformance descriptor for NWError);
      v48 = swift_allocError(v45, v47, 0, 0);
      v38(v49, v43, v45);
      v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(_QWORD *)(v0 + 64) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v97, v46 + 4);
      *(_QWORD *)buf = v50;
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop Bonjour server failed with error %@", v46, 0xCu);
      v52 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(buf, 1, v52);
      swift_slowDealloc(buf, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {
      v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    }

    *(_QWORD *)(v0 + 200) = v51;
    if (*(_QWORD *)(v0 + 88))
      NWListener.cancel()();
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate, v59);
    *(_QWORD *)(v0 + 208) = Strong;
    if (Strong)
    {
      v61 = (_QWORD *)swift_task_alloc(dword_1007B9C44);
      *(_QWORD *)(v0 + 216) = v61;
      *v61 = v0;
      v61[1] = sub_1002E8B60;
      return sub_1002DBEF0(1, *(_QWORD *)(v0 + 136));
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
    goto LABEL_43;
  }
  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_1007B3E30 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v53 = type metadata accessor for Logger(0);
    v54 = sub_100221DF8(v53, (uint64_t)qword_1007B9D10);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_37;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Bonjour server setting up";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1, -1);
LABEL_37:

    goto LABEL_43;
  }
  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_1007B3E30 != -1)
        swift_once(&qword_1007B3E30, sub_1002E7C68);
      v81 = type metadata accessor for Logger(0);
      v82 = sub_100221DF8(v81, (uint64_t)qword_1007B9D10);
      v83 = Logger.logObject.getter(v82);
      v84 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v85 = 0;
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Unknown AirDrop server state", v85, 2u);
        swift_slowDealloc(v85, -1, -1);
      }
      v87 = *(_QWORD *)(v0 + 168);
      v86 = *(_QWORD *)(v0 + 176);
      v88 = *(_QWORD *)(v0 + 160);

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
      goto LABEL_43;
    }
    if (qword_1007B3E30 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v79 = type metadata accessor for Logger(0);
    v80 = sub_100221DF8(v79, (uint64_t)qword_1007B9D10);
    v55 = Logger.logObject.getter(v80);
    v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56))
      goto LABEL_37;
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    v58 = "AirDrop Bonjour server stopped";
    goto LABEL_36;
  }
  v63 = v0 + 16;
  if (qword_1007B3E30 != -1)
    swift_once(&qword_1007B3E30, sub_1002E7C68);
  v64 = type metadata accessor for Logger(0);
  v65 = sub_100221DF8(v64, (uint64_t)qword_1007B9D10);
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop Bonjour server ready", v68, 2u);
    swift_slowDealloc(v68, -1, -1);
  }
  v70 = *(_QWORD *)(v0 + 96);
  v69 = *(_QWORD *)(v0 + 104);

  v71 = *(_QWORD *)(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger);
  Date.init()(v72);
  v73 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v69, 0, 1, v73);
  v74 = v71 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate;
  swift_beginAccess(v74, v63, 33, 0);
  sub_1002D4998(v69, v74);
  swift_endAccess(v63);
  v75 = String._bridgeToObjectiveC()();
  v76 = getpid();
  sub_100045388((uint64_t)CFSTR("BonjourAdvertise"), (uint64_t)CFSTR("Start"), (uint64_t)v75, v76);

  v78 = swift_unknownObjectWeakLoadStrong(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate, v77);
  *(_QWORD *)(v0 + 192) = v78;
  if (v78)
    return swift_task_switch(sub_1002E8A70, static AirDropActor.shared, 0);
LABEL_43:
  v89 = *(_QWORD *)(v0 + 144);
  v90 = *(_QWORD *)(v0 + 152);
  v92 = *(_QWORD *)(v0 + 128);
  v91 = *(_QWORD *)(v0 + 136);
  v93 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v90);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char **v3;
  double v4;
  const char *v5;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
  *(_QWORD *)&v4 = swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors, v0 + 40, 1, 0).n128_u64[0];
  v5 = *v3;
  *v3 = (const char *)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v5, v4);
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_1002E8AEC, v1, 0);
}

uint64_t sub_1002E8AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_1002E8BC0, v2, 0);
}

uint64_t sub_1002E8BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_100721C50, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  v9 = (_QWORD *)swift_allocObject(&unk_100721C78, 48, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  v10 = sub_100252EE0((uint64_t)v6, (uint64_t)&unk_1007B9D98, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_1002E8D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1002E8D4C, 0, 0);
}

uint64_t sub_1002E8D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_1007B3D98 != -1)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    return swift_task_switch(sub_1002E8DFC, static AirDropActor.shared, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E8DFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  sub_1002E8E3C(*(_QWORD *)(v0 + 56));

  return swift_task_switch(sub_10028A0E4, 0, 0);
}

uint64_t sub_1002E8E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1003FF7B8();
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
  swift_beginAccess(v7, v21, 33, 0);
  v8 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a1);
  specialized Array._endMutation()(v11);
  swift_endAccess(v21);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  v13 = swift_allocObject(&unk_100721C50, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = qword_1007B3D98;
  swift_retain(a1);
  swift_retain(v13);
  if (v14 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v17 = (_QWORD *)swift_allocObject(&unk_100721CA0, 48, 7);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = a1;
  v17[5] = v13;
  swift_retain(v15);
  swift_release(v13);
  v18 = sub_100252EC0((uint64_t)v6, (uint64_t)&unk_1007B9DA8, (uint64_t)v17);
  return swift_release(v18);
}

void sub_1002E9014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener);
  if (v2)
  {
    v3 = v0;
    v4 = qword_1007B3E30;
    swift_retain(v2);
    if (v4 != -1)
      swift_once(&qword_1007B3E30, sub_1002E7C68);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100221DF8(v5, (uint64_t)qword_1007B9D10);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping AirDrop Bonjour Server", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    NWListener.cancel()();
    sub_1004479FC(1);
    sub_1002E91FC(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
    v10 = *(_QWORD *)(v3 + v1);
    *(_QWORD *)(v3 + v1) = 0;
    swift_release(v10);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus), "setNextAirDropID:", 0);
    if (CFSTR("AirDropID"))
    {
      CFPreferencesSetValue(CFSTR("AirDropID"), 0, kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      CFPreferencesSynchronize(kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      swift_release(v2);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002E91D4()
{
  sub_1002E91FC(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
}

void sub_1002E91E8()
{
  sub_1002E91FC(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
}

void sub_1002E91FC(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v5;
  _BYTE *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23[3];

  if (qword_1007B3EF0 != -1)
    swift_once(&qword_1007B3EF0, sub_1002FA36C);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007BA148);
  v6 = v2;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v23[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = 0xEE00726576726553;
    v12 = 0x2072756F6A6E6F42;
    if (v6[*a1] != 1)
    {
      v12 = 0x656946207261654ELL;
      v11 = 0xEA0000000000646CLL;
    }
    if (v6[*a1])
      v13 = v12;
    else
      v13 = 0xD00000000000001ALL;
    if (v6[*a1])
      v14 = (const char *)v11;
    else
      v14 = (const char *)0x8000000100615690;
    v22 = sub_100228BD8(v13, (unint64_t)v14, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v9 + 4);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cancelling all connections associated with %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  v15 = (uint64_t *)&v6[*a2];
  swift_beginAccess(v15, v23, 1, 0);
  v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*v15, 2);
    if (v17)
      goto LABEL_16;
LABEL_26:
    swift_bridgeObjectRelease_n(v16, 2);
    v21 = (const char *)*v15;
    *v15 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v21);
    return;
  }
  if (v16 < 0)
    v20 = *v15;
  else
    v20 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*v15, 2);
  v17 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v17)
    goto LABEL_26;
LABEL_16:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      }
      else
      {
        v19 = *(_QWORD *)(v16 + 8 * i + 32);
        swift_retain(v19);
      }
      NWConnection.cancel()();
      swift_release(v19);
    }
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1002E94D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for SDAirDropServerConnection(0);
  v5[8] = v6;
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002E9564, static AirDropActor.shared, 0);
}

uint64_t sub_1002E9564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;

  v1 = v0 + 16;
  if (qword_1007B3E30 != -1)
    swift_once(&qword_1007B3E30, sub_1002E7C68);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007B9D10);
  v4 = swift_retain_n(v2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 48);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = NWConnection.debugDescription.getter(v10);
    v13 = (const char *)v12;
    *(_QWORD *)(v0 + 40) = sub_100228BD8(v11, v12, &v26);
    v1 = v0 + 16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v9 + 4);
    swift_bridgeObjectRelease(v13);
    swift_release_n(v8, 2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received AirDrop Bonjour connection %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 48), 2);
  }

  v14 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess(v14, v1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v14, v15);
  if (Strong
    && (v18 = (void *)Strong,
        v19 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate, v17), *(_QWORD *)(v0 + 80) = v19, v18, v19))
  {
    v21 = *(_QWORD *)(v0 + 64);
    v20 = *(_QWORD **)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 48);
    *v20 = v22;
    swift_storeEnumTagMultiPayload(v20, v21, 0);
    v23 = dword_1007B9B5C;
    swift_retain(v22);
    v24 = (_QWORD *)swift_task_alloc(v23);
    *(_QWORD *)(v0 + 88) = v24;
    *v24 = v0;
    v24[1] = sub_1002E97E0;
    return sub_1002D8598(*(_QWORD *)(v0 + 72));
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002E97E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(*v0 + 72);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_unknownObjectRelease(v2);
  sub_1002E9C4C(v3);
  swift_task_dealloc(*(_QWORD *)(v1 + 72));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t type metadata accessor for SDAirDropBonjourServer()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary22SDAirDropBonjourServer);
}

uint64_t sub_1002E991C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener));
}

uint64_t sub_1002E992C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType);
}

id sub_1002E9940(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  char *v13;
  objc_class *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  objc_class *ObjectType;
  objc_super v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections] = _swiftEmptyArrayStorage;
  v13 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus] = a1;
  v14 = (objc_class *)type metadata accessor for SDAirDropDeviceSupportManager();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_deviceStatus] = a1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_nearbyAgent] = a2;
  v23.receiver = v15;
  v23.super_class = v14;
  v16 = a1;
  v17 = v6;
  v18 = a2;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceSupportManager] = objc_msgSendSuper2(&v23, "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger] = a3;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_queue] = a4;
  *((_QWORD *)v13 + 1) = a6;
  swift_unknownObjectWeakAssign(v13, a5);
  swift_retain(a3);
  v19 = a4;

  v22.receiver = v17;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, "init");
}

uint64_t sub_1002E9AAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9AD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E7CF8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002E9AE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E9B04(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E8C44(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002E9B0C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E9B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007B9D94);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch(sub_1002E8D4C, 0, 0);
}

uint64_t sub_1002E9BA0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002E9BD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1007B9DA4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D12C;
  return sub_1002E94D8(a1, v4, v5, v7, v6);
}

uint64_t sub_1002E9C4C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002E9C88()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E9CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for NWListener.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002E9D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for NWListener.State(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1007B9DB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000D098;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return swift_task_switch(sub_1002E7EB4, 0, 0);
}

uint64_t sub_1002E9DE4(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8178, 0x7269416F546B7341, 0xEC000000706F7244);
}

id sub_1002E9E0C(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D8190, (uint64_t (*)(void))&_airdrop_log);
}

id sub_1002E9E20(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D81A8, (uint64_t (*)(void))&_airdrop_nw_log);
}

uint64_t sub_1002E9E34(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D81C0, 0x4E706F7244726941, 0xED0000454C422E57);
}

uint64_t sub_1002E9E60(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D81D8, 0xD000000000000013, 0x80000001006157C0);
}

uint64_t sub_1002E9E84(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D81F0, 0xD00000000000001BLL, 0x8000000100615880);
}

uint64_t sub_1002E9EA8(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8208, 0xD00000000000001ELL, 0x80000001006158A0);
}

uint64_t sub_1002E9ECC(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8220, 0xD00000000000001DLL, 0x8000000100615800);
}

uint64_t sub_1002E9EF0(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8238, 0xD000000000000015, 0x8000000100615860);
}

uint64_t sub_1002E9F14(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8250, 0xD000000000000016, 0x8000000100615840);
}

uint64_t sub_1002E9F38(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8268, 0xD000000000000017, 0x80000001006157E0);
}

uint64_t sub_1002E9F5C(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8280, 0xD000000000000010, 0x8000000100615820);
}

uint64_t sub_1002E9F80(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8298, 0xD000000000000015, 0x80000001006158C0);
}

id sub_1002E9FA4(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D82B0, (uint64_t (*)(void))&_b389_log);
}

id sub_1002E9FB8(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D82C8, (uint64_t (*)(void))&b332_log);
}

uint64_t sub_1002E9FCC(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D82E0, 0x6E6F687064616548, 0xE900000000000065);
}

id sub_1002E9FF0(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D82F8, (uint64_t (*)(void))&sharingHUDLog);
}

id sub_1002EA004(uint64_t a1)
{
  return sub_1002EA018(a1, qword_1007D8310, (uint64_t (*)(void))&_authentications_log);
}

id sub_1002EA018(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  id result;

  v5 = type metadata accessor for Logger(0);
  sub_100221E9C(v5, a2);
  sub_100221DF8(v5, (uint64_t)a2);
  result = (id)a3();
  if (result)
    return (id)Logger.init(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002EA080(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8328, 0x6E6F6D656144, 0xE600000000000000);
}

uint64_t sub_1002EA09C(uint64_t a1)
{
  return sub_1002EA0C0(a1, qword_1007D8340, 0x6568536572616853, 0xEA00000000007465);
}

uint64_t sub_1002EA0C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0);
  sub_100221E9C(v7, a2);
  sub_100221DF8(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, a3, a4);
}

uint64_t sub_1002EA134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B9DC8);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B9DC8);
  if (qword_1007B3EC0 != -1)
    swift_once(&qword_1007B3EC0, sub_1002EA004);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D8310);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

char *sub_1002EA1C4(void (*a1)(char *, uint64_t), char *a2, _QWORD *a3, uint64_t a4, uint64_t a5, void *a6)
{
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *result;
  id v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  objc_class *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  void (*v32)(char *, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  objc_super v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;

  v54 = a6;
  v55 = a1;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v54 - v16;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType] = 3;
  v18 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode];
  *v18 = a4;
  v18[1] = a5;
  v56 = a3;
  sub_100244418((uint64_t)a3, (uint64_t)&v61);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v17, (uint64_t)a2, v11);
  v20 = type metadata accessor for SDAuthenticationAKSPairingSession(0);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = 0;
  v22 = (void *)objc_opt_self(SDAutoUnlockAKSManager);
  v23 = v6;
  result = (char *)objc_msgSend(v22, "sharedManager");
  if (result)
  {
    *(_QWORD *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager) = result;
    *(_BYTE *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role) = 0;
    sub_10026EE60(&v61, v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID, v17, v11);
    v25 = v54;
    *(_QWORD *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type) = v54;
    *(_QWORD *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession] = v21;

    v19(v15, (uint64_t)a2, v11);
    v26 = &v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    *(_OWORD *)v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *((_QWORD *)v26 + 4) = 0;
    v27 = &v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    *(_OWORD *)v27 = 0u;
    *((_OWORD *)v27 + 1) = 0u;
    *((_QWORD *)v27 + 4) = 0;
    *(_QWORD *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer] = 0;
    v28 = v55;
    *(_QWORD *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue] = v55;
    v19(&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], (uint64_t)v15, v11);
    *(_QWORD *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] = v25;
    v29 = (objc_class *)type metadata accessor for SDAuthenticationSession(0);
    v60.receiver = v23;
    v60.super_class = v29;
    v30 = v28;
    v31 = (char *)objc_msgSendSuper2(&v60, "init");
    v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    v32(v15, v11);
    v33 = v56;
    sub_100244418((uint64_t)v56, (uint64_t)&v61);
    v34 = (uint64_t)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess(&v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], &v58, 33, 0);
    v35 = v31;
    sub_1002EF060((uint64_t)&v61, v34);
    swift_endAccess(&v58);
    v36 = a2;
    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v37 = type metadata accessor for Logger(0);
    sub_100221DF8(v37, (uint64_t)qword_1007B9DC8);
    sub_100244418((uint64_t)v33, (uint64_t)&v61);
    v38 = v35;
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v54 = v30;
      v55 = v32;
      v41 = swift_slowAlloc(32, -1);
      v42 = swift_slowAlloc(96, -1);
      v57 = v42;
      *(_DWORD *)v41 = 136315650;
      v43 = UUID.uuidString.getter(v42);
      v45 = v44;
      v58 = sub_100228BD8(v43, v44, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 4);

      swift_bridgeObjectRelease(v45);
      *(_WORD *)(v41 + 12) = 2080;
      v46 = v62;
      v47 = v63;
      sub_10023A834(&v61, v62);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      if (v49)
      {
        v50 = v49;
      }
      else
      {
        v58 = 0;
        v59[0] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v59[0]);
        v50 = 0x8000000100612DF0;
        v48 = 0xD000000000000015;
      }
      v58 = sub_100228BD8(v48, v50, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 14);
      swift_bridgeObjectRelease(v50);
      sub_10022E75C(&v61);
      *(_WORD *)(v41 + 22) = 2080;
      v51 = sub_1003FDAA0(*(_QWORD *)&v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
      v53 = v52;
      v58 = sub_100228BD8(v51, v52, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 24);

      swift_bridgeObjectRelease(v53);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Begin SDAuthenticationPairingLockSession %s for device: %s with %s", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy(v42, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      sub_10022E75C(v56);
      v55(v36, v11);
    }
    else
    {

      sub_10022E75C(&v61);
      sub_10022E75C(v33);
      v32(v36, v11);
    }
    return v38;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EA77C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v22[4];

  v1 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_100721D70, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_10000D0F0((uint64_t)v3, &qword_1007B68A0);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType(*v7);
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_100721D98, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_1007B9E30;
  *(_QWORD *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0;
    v22[1] = 0;
    v19 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }
  else
  {
    v19 = 0;
  }
  v20 = swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_1007B9C70, v18);
  return swift_release(v20);
}

uint64_t sub_1002EA94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[33] = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v4[34] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[35] = v6;
  v4[36] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v4[37] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[38] = v8;
  v4[39] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002EA9D4, 0, 0);
}

uint64_t sub_1002EA9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 264);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) == 8)
  {
    v2 = (uint64_t *)(v0 + 248);
    v11 = sub_1002EB6AC(0, 0xF000000000000000);
    v13 = v12;
    v14 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v14, v0 + 208, 0, 0);
    sub_100221F28(v14, v0 + 64, &qword_1007B9E38);
    if (*(_QWORD *)(v0 + 88))
    {
      v15 = *(_QWORD *)(v0 + 312);
      v16 = *(_QWORD *)(v0 + 288);
      v38 = *(_QWORD *)(v0 + 304);
      v39 = *(_QWORD *)(v0 + 296);
      v17 = *(_QWORD *)(v0 + 272);
      v37 = *(_QWORD *)(v0 + 280);
      v18 = v13;
      v19 = *(void **)(v0 + 264);
      sub_10026EE60((__int128 *)(v0 + 64), v0 + 144);
      sub_100244418(v0 + 144, v0 + 104);
      v20 = (_QWORD *)swift_allocObject(&unk_100721DC0, 80, 7);
      v20[2] = v19;
      v20[3] = v11;
      v20[4] = v18;
      sub_10026EE60((__int128 *)(v0 + 104), (uint64_t)(v20 + 5));
      *(_QWORD *)(v0 + 48) = sub_1002EEFFC;
      *(_QWORD *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_10025BBB4;
      *(_QWORD *)(v0 + 40) = &unk_100721DD8;
      v21 = _Block_copy((const void *)(v0 + 16));
      v22 = v19;
      v23 = sub_10022E4A8(v11, v18);
      static DispatchQoS.unspecified.getter(v23);
      *(_QWORD *)(v0 + 256) = _swiftEmptyArrayStorage;
      v24 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v25 = sub_100008384((uint64_t *)&unk_1007B6410);
      v26 = sub_100273050();
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 256, v25, v26, v17, v24);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v16, v21);
      _Block_release(v21);
      sub_100225AA0(0, 0xF000000000000000);
      sub_100225AB4(v11, v18);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v39);
      sub_10022E75C((_QWORD *)(v0 + 144));
      swift_release(*(_QWORD *)(v0 + 56));
    }
    else
    {
      sub_10000D0F0(v0 + 64, &qword_1007B9E38);
      if (qword_1007B3ED8 != -1)
        swift_once(&qword_1007B3ED8, sub_1002EA134);
      v28 = type metadata accessor for Logger(0);
      v29 = sub_100221DF8(v28, (uint64_t)qword_1007B9DC8);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.error.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(12, -1);
        v33 = swift_slowAlloc(32, -1);
        v40 = v33;
        *(_DWORD *)v32 = 136315138;
        *(_QWORD *)(v0 + 240) = sub_100228BD8(0xD000000000000021, 0x8000000100615970, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v32 + 4);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s", v32, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v32, -1, -1);
      }

      v34 = sub_100244304();
      v35 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0, 0);
      *(_DWORD *)v36 = 10;
      *(_QWORD *)(v36 + 8) = 0xD000000000000021;
      *(_QWORD *)(v36 + 16) = 0x8000000100615970;
      swift_willThrow(v35);
      sub_100225AB4(v11, v13);
      sub_100225AA0(0, 0xF000000000000000);
      *(_QWORD *)(v0 + 232) = v35;
      swift_errorRetain(v35);
      v3 = sub_100008384(&qword_1007B5A60);
      if (swift_dynamicCast(v0 + 184, v0 + 232, v3, &type metadata for SFAuthenticationErrorMessage, 0))
      {
        swift_errorRelease(v35);
        v4 = *(const char **)(v0 + 200);
        sub_1002EBDEC(*(_DWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v4);
        swift_bridgeObjectRelease(v4);
        v5 = *(_QWORD *)(v0 + 232);
      }
      else
      {
        swift_errorRelease(*(_QWORD *)(v0 + 232));
        *(_QWORD *)(v0 + 248) = v35;
        swift_errorRetain(v35);
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast(v0 + 360, v0 + 248, v3, v10, 0))
        {
          swift_errorRelease(v35);
          sub_1002EBDEC(*(_DWORD *)(v0 + 360), 0, (const char *)0xE000000000000000);
          v5 = *v2;
        }
        else
        {
          swift_errorRelease(*v2);
          sub_1002EBDEC(10, 0, (const char *)0xE000000000000000);
          v5 = v35;
        }
      }
      swift_errorRelease(v5);
    }
    v27 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession);
    *(_QWORD *)(v0 + 320) = v6;
    v7 = dword_1007C57C4;
    swift_retain(v6);
    v8 = (_QWORD *)swift_task_alloc(v7);
    *(_QWORD *)(v0 + 328) = v8;
    *v8 = v0;
    v8[1] = sub_1002EAF90;
    return sub_1005303B0();
  }
}

uint64_t sub_1002EAF90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 328);
  *(_QWORD *)(*(_QWORD *)v3 + 336) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1002EB568;
  }
  else
  {
    swift_release(v6[40]);
    v6[43] = a2;
    v6[44] = a1;
    v8 = sub_1002EB010;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1002EB010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v1 = (uint64_t *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = sub_1002EB6AC(v2, v3);
  v7 = v4;
  if (!v4)
  {
    v12 = v5;
    v13 = v6;
    v14 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v14, v0 + 208, 0, 0);
    sub_100221F28(v14, v0 + 64, &qword_1007B9E38);
    if (*(_QWORD *)(v0 + 88))
    {
      v36 = *(_QWORD *)(v0 + 312);
      v15 = *(_QWORD *)(v0 + 288);
      v38 = *(_QWORD *)(v0 + 304);
      v39 = *(_QWORD *)(v0 + 296);
      v16 = *(_QWORD *)(v0 + 272);
      v37 = *(_QWORD *)(v0 + 280);
      v17 = *(void **)(v0 + 264);
      sub_10026EE60((__int128 *)(v0 + 64), v0 + 144);
      sub_100244418(v0 + 144, v0 + 104);
      v18 = (_QWORD *)swift_allocObject(&unk_100721DC0, 80, 7);
      v18[2] = v17;
      v18[3] = v12;
      v18[4] = v13;
      sub_10026EE60((__int128 *)(v0 + 104), (uint64_t)(v18 + 5));
      *(_QWORD *)(v0 + 48) = sub_1002EEFFC;
      *(_QWORD *)(v0 + 56) = v18;
      *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_10025BBB4;
      *(_QWORD *)(v0 + 40) = &unk_100721DD8;
      v19 = _Block_copy((const void *)(v0 + 16));
      v20 = v17;
      v21 = sub_10022E4A8(v12, v13);
      static DispatchQoS.unspecified.getter(v21);
      *(_QWORD *)(v0 + 256) = _swiftEmptyArrayStorage;
      v22 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v23 = sub_100008384((uint64_t *)&unk_1007B6410);
      v24 = sub_100273050();
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 256, v23, v24, v16, v22);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v36, v15, v19);
      _Block_release(v19);
      sub_100225AA0(v2, v3);
      sub_100225AB4(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v15, v16);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v39);
      sub_10022E75C((_QWORD *)(v0 + 144));
      swift_release(*(_QWORD *)(v0 + 56));
      goto LABEL_10;
    }
    sub_10000D0F0(v0 + 64, &qword_1007B9E38);
    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100221DF8(v27, (uint64_t)qword_1007B9DC8);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = v13;
      v41 = swift_slowAlloc(32, -1);
      v32 = v41;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v0 + 240) = sub_100228BD8(0xD000000000000021, 0x8000000100615970, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v31 + 4);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      v33 = v32;
      v13 = v40;
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

    v34 = sub_100244304();
    v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0, 0);
    *(_DWORD *)v35 = 10;
    *(_QWORD *)(v35 + 8) = 0xD000000000000021;
    *(_QWORD *)(v35 + 16) = 0x8000000100615970;
    swift_willThrow(v7);
    sub_100225AB4(v12, v13);
  }
  sub_100225AA0(v2, v3);
  *(_QWORD *)(v0 + 232) = v7;
  swift_errorRetain(v7);
  v8 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v0 + 184, v0 + 232, v8, &type metadata for SFAuthenticationErrorMessage, 0))
  {
    swift_errorRelease(v7);
    v9 = *(const char **)(v0 + 200);
    sub_1002EBDEC(*(_DWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v9);
    swift_bridgeObjectRelease(v9);
    v10 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 232));
    *(_QWORD *)(v0 + 248) = v7;
    swift_errorRetain(v7);
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast(v0 + 360, v0 + 248, v8, v11, 0))
    {
      swift_errorRelease(v7);
      sub_1002EBDEC(*(_DWORD *)(v0 + 360), 0, (const char *)0xE000000000000000);
      v10 = *v1;
    }
    else
    {
      swift_errorRelease(*v1);
      sub_1002EBDEC(10, 0, (const char *)0xE000000000000000);
      v10 = v7;
    }
  }
  swift_errorRelease(v10);
LABEL_10:
  v25 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EB568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 320));
  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 232) = v1;
  swift_errorRetain(v1);
  v2 = sub_100008384(&qword_1007B5A60);
  if ((swift_dynamicCast(v0 + 184, v0 + 232, v2, &type metadata for SFAuthenticationErrorMessage, 0) & 1) != 0)
  {
    swift_errorRelease(v1);
    v3 = *(const char **)(v0 + 200);
    sub_1002EBDEC(*(_DWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v3);
    swift_bridgeObjectRelease(v3);
    v4 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v5 = (_QWORD *)(v0 + 248);
    swift_errorRelease(*(_QWORD *)(v0 + 232));
    *(_QWORD *)(v0 + 248) = v1;
    swift_errorRetain(v1);
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast(v0 + 360, v0 + 248, v2, v6, 0))
    {
      swift_errorRelease(v1);
      sub_1002EBDEC(*(_DWORD *)(v0 + 360), 0, (const char *)0xE000000000000000);
      v4 = *v5;
    }
    else
    {
      swift_errorRelease(*v5);
      sub_1002EBDEC(10, 0, (const char *)0xE000000000000000);
      v4 = v1;
    }
  }
  swift_errorRelease(v4);
  v7 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EB6AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  id v7;
  const char *v8;
  const char *v9;
  NSString v10;
  id v11;
  Class isa;
  uint64_t v13;
  uint8_t *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationPairingRequest), "init");
  v6 = v5;
  if (!v5)
  {
LABEL_7:
    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v13 = type metadata accessor for Logger(0);
    v14 = (uint8_t *)sub_100221DF8(v13, (uint64_t)qword_1007B9DC8);
    v15 = v6;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v34 = v14;
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v18 = 138412290;
      if (v6)
      {
        v36 = (uint64_t)v15;
        v20 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4);
        v21 = v6;
      }
      else
      {
        v36 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4);
        v21 = 0;
      }
      *v19 = v21;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Generated pairing request %@", v18, 0xCu);
      v23 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v19, 1, v23);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      v14 = v34;
      if (!v6)
        goto LABEL_18;
    }
    else
    {

      if (!v6)
        goto LABEL_18;
    }
    v22 = objc_msgSend(v15, "data");
    if (v22)
    {
      v24 = v22;
      v14 = (uint8_t *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);

      return (uint64_t)v14;
    }
LABEL_18:
    v25 = Logger.logObject.getter(v22);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = v15;
      v28 = swift_slowAlloc(32, -1);
      v36 = v28;
      *(_DWORD *)v14 = 136315138;
      v35 = sub_100228BD8(0xD000000000000020, 0x80000001006159A0, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 4);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s", v14, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      v29 = v28;
      v15 = v27;
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    v30 = sub_100244304();
    v31 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v30, 0, 0);
    *(_DWORD *)v32 = 10;
    *(_QWORD *)(v32 + 8) = 0xD000000000000020;
    *(_QWORD *)(v32 + 16) = 0x80000001006159A0;
    swift_willThrow(v31);

    return (uint64_t)v14;
  }
  objc_msgSend(v5, "setVersion:", 1);
  v7 = v6;
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSessionID:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = v7;
  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "setLongTermKey:", isa);

  if (!HIDWORD(*(_QWORD *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
  {
    objc_msgSend(v11, "setType:");
    goto LABEL_7;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002EBB70(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v21[24];
  __int128 v22;
  uint64_t v23;
  _QWORD v24[5];

  v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v21, 0, 0);
  sub_100221F28(v8, (uint64_t)&v22, &qword_1007BFF70);
  if (v23)
  {
    sub_10026EE60(&v22, (uint64_t)v24);
    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100221DF8(v9, (uint64_t)qword_1007B9DC8);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Sending authentication pairing request", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    sub_10023A834(v24, v24[3]);
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) == 1)
      v14 = *(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType);
    else
      v14 = sub_1003FD808(*(_QWORD *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    sub_100560A88(a2, a3, a4, 3, v14);
    sub_10022E75C(v24);
  }
  else
  {
    sub_10000D0F0((uint64_t)&v22, &qword_1007BFF70);
    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100221DF8(v15, (uint64_t)qword_1007B9DC8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Warning: No delegate to send response to", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  return sub_1003FCE8C(0, 1);
}

uint64_t sub_1002EBDEC(int a1, uint64_t a2, const char *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v15 = swift_allocObject(&unk_100721E10, 48, 7);
  *(_QWORD *)(v15 + 16) = v3;
  *(_DWORD *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  aBlock[4] = sub_1002EF050;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025BBB4;
  aBlock[3] = &unk_100721E28;
  v16 = _Block_copy(aBlock);
  v17 = v3;
  v18 = swift_bridgeObjectRetain(a3);
  static DispatchQoS.unspecified.getter(v18);
  v24 = _swiftEmptyArrayStorage;
  v19 = sub_100220D78((unint64_t *)&qword_1007B6850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100008384((uint64_t *)&unk_1007B6410);
  v21 = sub_100273050();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release(v26);
}

void sub_1002EBFDC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  const char *v34;
  char *v35;
  char v36;
  char v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  NSData v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  const char *v58;
  const char *v59;
  double v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  uint8_t *v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  const char *v78;
  const char *v79;
  unint64_t v80;
  void *v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  void *v85;
  uint8_t *v86;
  uint8_t *v87;
  unsigned __int8 v88;
  id v89;
  void *v90;
  void *v91;
  const char *v92;
  const char *v93;
  NSString v94;
  id v95;
  void *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Swift::String v103;
  const char *object;
  __int128 v105;
  uint64_t v106;
  char v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  const char *v118;
  const char *v119;
  double v120;
  NSString v121;
  Class v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[2];
  Class isa;
  _QWORD *v132;
  char *v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  char v137[24];
  char v138[24];
  __int128 v139;
  uint64_t v140;
  char v141[24];
  _BYTE v142[24];
  uint64_t v143;
  __int128 v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;

  v2 = v1;
  if (qword_1007B3ED8 != -1)
    swift_once(&qword_1007B3ED8, sub_1002EA134);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100221DF8(v4, (uint64_t)qword_1007B9DC8);
  v6 = a1;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v136 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    *(_QWORD *)&v144 = v6;
    v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v9 + 4);
    v11 = v136;
    *v136 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Handling authentication pairing response: %@", v9, 0xCu);
    v12 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v12);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  sub_1003FD560();
  if (objc_msgSend(v6, "hasErrorCode"))
  {
    v13 = objc_msgSend(v6, "errorCode");
    *(_QWORD *)&v144 = 0;
    *((_QWORD *)&v144 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease(*((const char **)&v144 + 1));
    *(_QWORD *)&v144 = 0xD00000000000001ELL;
    *((_QWORD *)&v144 + 1) = 0x8000000100615A90;
    v14 = (id)SFAuthenticationErrorToString(v13);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18._countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease((const char *)v17);
    v20 = *((_QWORD *)&v144 + 1);
    v19 = v144;
    v21 = sub_100244304();
    v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0, 0);
    v24 = v22;
    *(_DWORD *)v23 = (_DWORD)v13;
LABEL_8:
    *(_QWORD *)(v23 + 8) = v19;
    *(_QWORD *)(v23 + 16) = v20;
LABEL_9:
    swift_willThrow(v22);
    goto LABEL_10;
  }
  v27 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] != 8)
  {
LABEL_16:
    v38 = objc_msgSend(v6, "token");
    if (!v38)
    {
      v64 = sub_100244304();
      v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v64, 0, 0);
      v24 = v22;
      *(_DWORD *)v65 = 10;
      strcpy((char *)(v65 + 8), "Missing token");
      *(_WORD *)(v65 + 22) = -4864;
      goto LABEL_9;
    }
    v39 = v38;
    v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v42 = v41;

    if ((objc_msgSend(v6, "hasLongTermKey") & 1) == 0
      || *(_QWORD *)&v2[v27] == 8
      || (v43 = objc_msgSend(v6, "longTermKey")) == 0)
    {
      v63 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
      sub_10022E4A8(v40, v42);
      swift_retain();
      sub_1005322E0();
      v81 = (void *)sub_100531C0C(v40, v42);
      sub_100225AB4(v40, v42);
      swift_release(v63);
      goto LABEL_36;
    }
    v44 = v43;
    v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v47 = v46;

    v48 = (char *)objc_msgSend((id)objc_opt_self(SDAutoUnlockAKSManager), "sharedManager");
    v134 = v47;
    v135 = v45;
    v136 = (_QWORD *)v40;
    v130[0] = v5;
    if (!v48)
    {
LABEL_50:
      v133 = v2;
      v111 = *(_QWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
      v132 = *(_QWORD **)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
      swift_retain();
      sub_10022E4A8(v45, v47);
      sub_10022E4A8(v40, v42);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v112 = *(_QWORD *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
      v113 = *(_QWORD *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
      v114 = sub_10023A834((_QWORD *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v112);
      v130[1] = v130;
      v115 = *(_QWORD *)(v112 - 8);
      __chkstk_darwin(v114);
      v117 = (char *)v130 - v116;
      (*(void (**)(char *))(v115 + 16))((char *)v130 - v116);
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
      v119 = v118;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v112);
      if (v119)
      {
        v121 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v120 = swift_bridgeObjectRelease(v119).n128_u64[0];
      }
      else
      {
        v121 = 0;
      }
      v122 = isa;
      objc_msgSend(v132, "signAndStoreRemoteLTK:forDeviceID:", isa, v121, v120, v130[0]);

      sub_100531758();
      v2 = v133;
      v40 = (uint64_t)v136;
      v81 = (void *)sub_100531C0C((uint64_t)v136, v42);
      v125 = v135;
      v126 = v134;
      sub_100225AB4(v135, v134);
      sub_100225AB4(v40, v42);
      sub_100225AB4(v125, v126);
      swift_release(v111);
LABEL_36:
      v82 = objc_msgSend(v6, "hasRequestArmingUI");
      if ((_DWORD)v82)
      {
        v83 = Logger.logObject.getter(v82);
        v84 = static os_log_type_t.default.getter(v83);
        if (os_log_type_enabled(v83, v84))
        {
          v85 = v81;
          v86 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v86 = 0;
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "Got request to show arming UI on successful registration", v86, 2u);
          v87 = v86;
          v81 = v85;
          swift_slowDealloc(v87, -1, -1);
        }

        v88 = objc_msgSend(v6, "requestArmingUI");
        v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v88;
      }
      v89 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationPairingCreateSecret), "init");
      if (v89)
      {
        v90 = v89;
        UUID.uuidString.getter(v89);
        v91 = v81;
        v93 = v92;
        v94 = String._bridgeToObjectiveC()();
        objc_msgSend(v90, "setSessionID:", v94, swift_bridgeObjectRelease(v93).n128_f64[0]);

        objc_msgSend(v90, "setToken:", v91);
        v95 = objc_msgSend(v90, "data");
        if (v95)
        {
          v96 = v95;
          v136 = (_QWORD *)v40;
          v135 = v42;
          v97 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v95);
          v99 = v98;

          v100 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
          swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v141, 0, 0);
          sub_100221F28(v100, (uint64_t)v142, &qword_1007B9E38);
          *(_QWORD *)&v139 = 0;
          *((_QWORD *)&v139 + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(30);
          swift_bridgeObjectRelease(*((const char **)&v139 + 1));
          *(_QWORD *)&v139 = 0xD00000000000001CLL;
          *((_QWORD *)&v139 + 1) = 0x8000000100615A50;
          v101 = type metadata accessor for UUID(0);
          v102 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v103._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v101, v102);
          object = (const char *)v103._object;
          String.append(_:)(v103);
          swift_bridgeObjectRelease(object);
          v105 = v139;
          sub_100221F28((uint64_t)v142, (uint64_t)&v139, &qword_1007B9E38);
          if (v140)
          {
            sub_10026EE60(&v139, (uint64_t)&v144);
            sub_10000D0F0((uint64_t)v142, &qword_1007B9E38);
            swift_bridgeObjectRelease(*((const char **)&v105 + 1));
            v106 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
            swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v138, 0, 0);
            sub_100221F28(v106, (uint64_t)v142, &qword_1007BFF70);
            if (v143)
            {
              sub_100244418((uint64_t)v142, (uint64_t)&v139);
              sub_10000D0F0((uint64_t)v142, &qword_1007BFF70);
              sub_10023A834(&v139, v140);
              if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] == 1)
                v107 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType];
              else
                v107 = sub_1003FD808(*(_QWORD *)&v2[v27]);
              sub_100560A88(v97, v99, &v144, 6, v107);
              sub_10022E75C(&v139);
            }
            else
            {
              sub_10000D0F0((uint64_t)v142, &qword_1007BFF70);
            }
            sub_1003FCE8C(0, 1);
            sub_100225AB4(v97, v99);

            sub_100225AB4((uint64_t)v136, v135);
            sub_10022E75C(&v144);
            return;
          }
          sub_10000D0F0((uint64_t)&v139, &qword_1007B9E38);
          v127 = sub_100244304();
          v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v127, 0, 0);
          *(_DWORD *)v128 = 10;
          *(_OWORD *)(v128 + 8) = v105;
          swift_bridgeObjectRetain(*((const char **)&v105 + 1));
          swift_willThrow(v129);
          sub_10000D0F0((uint64_t)v142, &qword_1007B9E38);

          sub_100225AB4((uint64_t)v136, v135);
          swift_bridgeObjectRelease(*((const char **)&v105 + 1));

          sub_100225AB4(v97, v99);
        }
        else
        {
          v123 = sub_100244304();
          v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v123, 0, 0);
          *(_DWORD *)v124 = 10;
          *(_QWORD *)(v124 + 8) = 0xD000000000000020;
          *(_QWORD *)(v124 + 16) = 0x80000001006159A0;
          swift_willThrow(v24);
          sub_100225AB4(v40, v42);

        }
      }
      else
      {
        v108 = sub_100244304();
        v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v108, 0, 0);
        *(_DWORD *)v109 = 10;
        *(_QWORD *)(v109 + 8) = 0xD00000000000002FLL;
        *(_QWORD *)(v109 + 16) = 0x8000000100615A20;
        swift_willThrow(v24);
        sub_100225AB4(v40, v42);

      }
LABEL_10:
      *(_QWORD *)&v139 = v24;
      swift_errorRetain(v24);
      v25 = sub_100008384(&qword_1007B5A60);
      if (swift_dynamicCast(&v144, &v139, v25, &type metadata for SFAuthenticationErrorMessage, 0))
      {
        swift_errorRelease(v24);
        v26 = v145;
        sub_1002EBDEC(v144, *((uint64_t *)&v144 + 1), v145);
        swift_bridgeObjectRelease(v26);
        swift_errorRelease(v139);
      }
      else
      {
        swift_errorRelease(v139);
        *(_QWORD *)&v144 = v24;
        swift_errorRetain(v24);
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast(&v139, &v144, v25, v62, 0))
        {
          swift_errorRelease(v24);
          sub_1002EBDEC(v139, 0, (const char *)0xE000000000000000);
          swift_errorRelease(v144);
        }
        else
        {
          swift_errorRelease(v144);
          sub_1002EBDEC(10, 0, (const char *)0xE000000000000000);
          swift_errorRelease(v24);
        }
      }
      return;
    }
    v133 = v48;
    v49.super.isa = Data._bridgeToObjectiveC()().super.isa;
    v50 = v2;
    v51 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v137, 0, 0);
    sub_100221F28(v51, (uint64_t)&v144, &qword_1007B9E38);
    v52 = v146;
    if (v146)
    {
      v53 = v147;
      v54 = sub_10023A834(&v144, v146);
      v132 = v130;
      v55 = *(_QWORD *)(v52 - 8);
      __chkstk_darwin(v54);
      v57 = (char *)v130 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v55 + 16))(v57);
      sub_10000D0F0((uint64_t)&v144, &qword_1007B9E38);
      isa = (Class)(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
      v59 = v58;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v52);
      if (v59)
      {
        v61 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v60 = swift_bridgeObjectRelease(v59).n128_u64[0];
LABEL_49:
        v2 = v50;
        v47 = v134;
        v110 = v133;
        objc_msgSend(v133, "signAndStoreRemoteLTK:forDeviceID:", v49.super.isa, v61, v60, v130[0]);

        v40 = (uint64_t)v136;
        v45 = v135;
        goto LABEL_50;
      }
    }
    else
    {
      sub_10000D0F0((uint64_t)&v144, &qword_1007B9E38);
    }
    v61 = 0;
    goto LABEL_49;
  }
  v28 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (!v28)
  {
    __break(1u);
    return;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "enabledAutoUnlockDevices");

  if (v30)
  {
    v32 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v33 = sub_1002EF0A8();
    v34 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v32, v33);

    v35 = v2;
    sub_1002EF100((uint64_t)v34, (uint64_t)v35);
    v37 = v36;
    swift_bridgeObjectRelease(v34);

    if ((v37 & 1) == 0)
    {
      *(_QWORD *)&v144 = 0;
      *((_QWORD *)&v144 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      v139 = v144;
      v69._object = (void *)0x8000000100615A70;
      v69._countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v69);
      v70 = (uint64_t)&v35[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&v35[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v142, 0, 0);
      sub_100221F28(v70, (uint64_t)&v144, &qword_1007B9E38);
      v71 = v146;
      if (v146)
      {
        v72 = v147;
        v73 = sub_10023A834(&v144, v146);
        v74 = *(_QWORD *)(v71 - 8);
        __chkstk_darwin(v73);
        v76 = (char *)v130 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v74 + 16))(v76);
        sub_10000D0F0((uint64_t)&v144, &qword_1007B9E38);
        v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
        v79 = v78;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v71);
      }
      else
      {
        sub_10000D0F0((uint64_t)&v144, &qword_1007B9E38);
        v77 = 0;
        v79 = 0;
      }
      *(_QWORD *)&v144 = v77;
      *((_QWORD *)&v144 + 1) = v79;
      DefaultStringInterpolation.appendInterpolation<A>(_:)(&v144, &type metadata for String, &protocol witness table for String);
      swift_bridgeObjectRelease(v79);
      v20 = *((_QWORD *)&v139 + 1);
      v19 = v139;
      v80 = sub_100244304();
      v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v80, 0, 0);
      v24 = v22;
      *(_DWORD *)v23 = 33;
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  v66 = Logger.logObject.getter(v31);
  v67 = static os_log_type_t.error.getter(v66);
  if (os_log_type_enabled(v66, (os_log_type_t)v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v67, "No devices enabled to unlock this device", v68, 2u);
    swift_slowDealloc(v68, -1, -1);
  }

}

uint64_t sub_1002ED024(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];
  char v38[24];
  uint64_t v39[2];
  const char *v40;
  uint64_t v41;

  if (qword_1007B3ED8 != -1)
    swift_once(&qword_1007B3ED8, sub_1002EA134);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007B9DC8);
  v4 = a1;
  v5 = v1;
  v6 = v4;
  v7 = (char *)v5;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(32, -1);
    v36 = (uint64_t)v6;
    v39[0] = v35;
    *(_DWORD *)v10 = 138412546;
    v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v10 + 4);
    *v11 = v6;

    *(_WORD *)(v10 + 12) = 2080;
    v14 = UUID.uuidString.getter(v13);
    v16 = (const char *)v15;
    v36 = sub_100228BD8(v14, v15, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v10 + 14);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received authentication pairing create record: %@ for sessionID %s", (uint8_t *)v10, 0x16u);
    v17 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  sub_1003FD560();
  v18 = objc_msgSend(v6, "token");
  if (v18)
  {
    v19 = v18;
    v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;

    v23 = objc_msgSend(v6, "requestArmingUI");
    v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v23;
    v24 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
    if (*(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 8)
      sub_1002EDCF8(v20, v22);
    else
      sub_1002ED51C(v20, (unint64_t)v22);
    if (*(_QWORD *)&v7[v24] == 5)
    {
      LOBYTE(v39[0]) = 1;
      sub_1002EDFEC(0x100000000uLL);
    }
    v32 = (uint64_t)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v38, 0, 0);
    sub_100221F28(v32, (uint64_t)v39, &qword_1007BFF70);
    if (v41)
    {
      sub_100244418((uint64_t)v39, (uint64_t)&v36);
      sub_10000D0F0((uint64_t)v39, &qword_1007BFF70);
      v33 = (char *)*sub_10023A834(&v36, v37[2]);
      v34 = v7;
      sub_1003EC278(v34, v33);
      sub_100225AB4(v20, (unint64_t)v22);

      return sub_10022E75C(&v36);
    }
    else
    {
      sub_100225AB4(v20, (unint64_t)v22);
      return sub_10000D0F0((uint64_t)v39, &qword_1007BFF70);
    }
  }
  else
  {
    v25 = sub_100244304();
    v26 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v25, 0, 0);
    *(_DWORD *)v27 = 10;
    *(_QWORD *)(v27 + 8) = 0xD00000000000002BLL;
    *(_QWORD *)(v27 + 16) = 0x8000000100615AB0;
    swift_willThrow(v26);
    v36 = v26;
    swift_errorRetain(v26);
    v28 = sub_100008384(&qword_1007B5A60);
    if (swift_dynamicCast(v39, &v36, v28, &type metadata for SFAuthenticationErrorMessage, 0))
    {
      swift_errorRelease(v26);
      v29 = v40;
      sub_1002EBDEC(v39[0], v39[1], v40);
      swift_bridgeObjectRelease(v29);
      return swift_errorRelease(v36);
    }
    else
    {
      swift_errorRelease(v36);
      v39[0] = v26;
      swift_errorRetain(v26);
      type metadata accessor for SFAuthenticationError(0);
      if (swift_dynamicCast(&v36, v39, v28, v31, 0))
      {
        swift_errorRelease(v26);
        sub_1002EBDEC(v36, 0, (const char *)0xE000000000000000);
        return swift_errorRelease(v39[0]);
      }
      else
      {
        swift_errorRelease(v39[0]);
        sub_1002EBDEC(10, 0, (const char *)0xE000000000000000);
        return swift_errorRelease(v26);
      }
    }
  }
}

void sub_1002ED51C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  id v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  char *v34;
  Swift::String v35;
  const char *v36;
  id v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t *v46;
  NSObject *v47;
  NSObject *v48;
  uint64_t v49;
  NSObject *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t *v59;
  NSObject *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  char *v67;
  NSObject *v68;
  const char *v69;
  char v70[24];
  NSObject *v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = v3;
  v5 = v2;
  v75 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007B7280);
  __chkstk_darwin(v11);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession);
  v15 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode);
  v16 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode + 8);
  swift_retain();
  sub_1005305B0(a1, a2, v15, v16);
  swift_release(v14);
  if (v4)
    return;
  v67 = v10;
  v17 = objc_msgSend((id)objc_opt_self(SDAutoUnlockTransport), "sharedTransport");
  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = v17;
  v19 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v70, 0, 0);
  sub_100221F28(v19, (uint64_t)&v71, &qword_1007B9E38);
  if (v73)
  {
    v20 = sub_100008384(&qword_1007B5358);
    v21 = sub_100221EDC(0, (unint64_t *)&qword_1007C31F0, IDSDevice_ptr);
    if (swift_dynamicCast(&v68, &v71, v20, v21, 6))
      v22 = v68;
    else
      v22 = 0;
  }
  else
  {
    sub_10000D0F0((uint64_t)&v71, &qword_1007B9E38);
    v22 = 0;
  }
  v65[1] = 0;
  v23 = objc_msgSend(v18, "autoUnlockDeviceForIDSDevice:cloudPaired:cached:", v22, 0, 0);

  v71 = 0;
  v72[0] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  v68 = v71;
  v69 = (const char *)v72[0];
  v24._countAndFlagsBits = 0x6369766544534449;
  v24._object = (void *)0xED00002044492065;
  String.append(_:)(v24);
  sub_100221F28(v19, (uint64_t)&v71, &qword_1007B9E38);
  v25 = v73;
  if (v73)
  {
    v26 = v74;
    v27 = sub_10023A834(&v71, v73);
    v66 = v8;
    v28 = *(_QWORD *)(v25 - 8);
    __chkstk_darwin(v27);
    v30 = (char *)v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v30);
    sub_10000D0F0((uint64_t)&v71, &qword_1007B9E38);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v25);
    v8 = v66;
  }
  else
  {
    sub_10000D0F0((uint64_t)&v71, &qword_1007B9E38);
    v31 = 0;
    v33 = 0;
  }
  v34 = v67;
  v71 = v31;
  v72[0] = v33;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v71, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v33);
  v35._countAndFlagsBits = 0x756F6620746F6E20;
  v35._object = (void *)0xEB000000002E646ELL;
  String.append(_:)(v35);
  v36 = v69;
  if (!v23)
  {
    v50 = v68;
    v51 = sub_100244304();
    v52 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v51, 0, 0);
    *(_DWORD *)v53 = 10;
    *(_QWORD *)(v53 + 8) = v50;
    *(_QWORD *)(v53 + 16) = v36;
    swift_willThrow(v52);
    return;
  }
  if ((objc_msgSend(v23, "unlockEnabled", swift_bridgeObjectRelease(v69).n128_f64[0]) & 1) != 0)
  {
    v37 = objc_msgSend(v23, "bluetoothID");
    if (v37)
    {
      v38 = v37;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v39 = v34;
      v40 = v75;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v39, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v40) != 1)
      {
        sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
        if (qword_1007B3ED8 != -1)
          swift_once(&qword_1007B3ED8, sub_1002EA134);
        v41 = type metadata accessor for Logger(0);
        sub_100221DF8(v41, (uint64_t)qword_1007B9DC8);
        v42 = v23;
        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.default.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          v75 = (uint64_t)v23;
          v45 = (uint8_t *)swift_slowAlloc(12, -1);
          v46 = (uint64_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v45 = 138412290;
          v71 = v42;
          v47 = v42;
          v48 = v42;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v45 + 4);
          *v46 = v75;

          v42 = v47;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Enabled for device: %@", v45, 0xCu);
          v49 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v46, 1, v49);
          swift_slowDealloc(v46, -1, -1);
          swift_slowDealloc(v45, -1, -1);
        }
        else
        {

          v43 = v42;
        }

        if (qword_1007B42C8 != -1)
          swift_once(&qword_1007B42C8, sub_1005478B0);
        if (qword_1007D88A8)
          sub_100547314();

        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v75);
    }
    sub_10000D0F0((uint64_t)v13, &qword_1007B7280);
  }
  if (qword_1007B3ED8 != -1)
    swift_once(&qword_1007B3ED8, sub_1002EA134);
  v54 = type metadata accessor for Logger(0);
  sub_100221DF8(v54, (uint64_t)qword_1007B9DC8);
  v55 = v23;
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    v75 = (uint64_t)v23;
    v58 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v58 = 138412290;
    v71 = v55;
    v60 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v58 + 4);
    *v59 = v75;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Device not enabled: %@", v58, 0xCu);
    v61 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v59, 1, v61);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v58, -1, -1);
  }
  else
  {

    v56 = v55;
  }

  v62 = sub_100244304();
  v63 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v62, 0, 0);
  *(_DWORD *)v64 = 10;
  *(_QWORD *)(v64 + 8) = 0xD000000000000032;
  *(_QWORD *)(v64 + 16) = 0x8000000100615AE0;
  swift_willThrow(v63);

}

void sub_1002EDCF8(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v2;
  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
  swift_retain();
  v8 = sub_100530B30(a1, a2);
  swift_release(v7);
  if (!v3)
  {

    if (qword_1007B3ED8 != -1)
      swift_once(&qword_1007B3ED8, sub_1002EA134);
    v9 = type metadata accessor for Logger(0);
    sub_100221DF8(v9, (uint64_t)qword_1007B9DC8);
    v10 = v4;
    v11 = Logger.logObject.getter(v10);
    LODWORD(v12) = static os_log_type_t.default.getter(v11);
    if (!os_log_type_enabled(v11, (os_log_type_t)v12))
    {

      return;
    }
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v33 = v27;
    *(_DWORD *)v13 = 136315138;
    v14 = (uint64_t)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess(&v10[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v28, 0, 0);
    sub_100221F28(v14, (uint64_t)&v29, &qword_1007B9E38);
    v15 = v31;
    if (v31)
    {
      v16 = v32;
      v17 = sub_10023A834(&v29, v31);
      v25[1] = v25;
      v26 = v12;
      v12 = *(_QWORD *)(v15 - 8);
      __chkstk_darwin(v17);
      v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v19);
      sub_10000D0F0((uint64_t)&v29, &qword_1007B9E38);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      v22 = v21;
      v23 = *(void (**)(char *, uint64_t))(v12 + 8);
      LOBYTE(v12) = v26;
      v23(v19, v15);
      if (v22)
      {
LABEL_11:
        v24 = v27;
        v29 = sub_100228BD8(v20, (unint64_t)v22, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 4);

        swift_bridgeObjectRelease(v22);
        _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v12, "Finalized Registration for device %s", v13, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v13, -1, -1);

        return;
      }
    }
    else
    {
      sub_10000D0F0((uint64_t)&v29, &qword_1007B9E38);
    }
    swift_bridgeObjectRelease(0);
    v22 = (const char *)0xE90000000000003ELL;
    v20 = 0x676E697373696D3CLL;
    goto LABEL_11;
  }
}

void sub_1002EDFEC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (**v5)(_QWORD *, _QWORD, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  void (**v11)(_QWORD *, _QWORD, uint64_t);
  const char *v12;
  const char *v13;
  NSString v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  uint64_t v31;
  _QWORD *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[5];
  char v54[24];
  char v55[24];
  __int128 v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(void (***)(_QWORD *, _QWORD, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *v7 = v8;
  v5[13](v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  ((void (*)(_QWORD *, uint64_t))v5[1])(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once(&qword_1007B3ED8, sub_1002EA134);
LABEL_12:
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100221DF8(v34, (uint64_t)qword_1007B9DC8);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Error converting confirmation to data", v38, 2u);
      swift_slowDealloc(v38, -1, -1);

    }
    else
    {

    }
    return;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationConfirmation), "init");
  v5 = (void (**)(_QWORD *, _QWORD, uint64_t))v10;
  if (!v10)
  {
    objc_msgSend(0, "setSuccess:", HIDWORD(a1) & 1);
    goto LABEL_11;
  }
  objc_msgSend(v10, "setVersion:", 1);
  v11 = v5;
  UUID.uuidString.getter(v11);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setSessionID:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  objc_msgSend(v11, "setSuccess:", HIDWORD(a1) & 1);
  if ((a1 & 0x100000000) == 0)
    objc_msgSend(v11, "setErrorCode:", a1);
  v15 = objc_msgSend(v11, "data");
  if (!v15)
  {
LABEL_11:
    if (qword_1007B3ED8 == -1)
      goto LABEL_12;
    goto LABEL_25;
  }
  v16 = v15;
  v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  if (qword_1007B3ED8 != -1)
    swift_once(&qword_1007B3ED8, sub_1002EA134);
  v20 = type metadata accessor for Logger(0);
  sub_100221DF8(v20, (uint64_t)qword_1007B9DC8);
  v21 = v11;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v52 = v19;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(8, -1);
    v51 = v17;
    v27 = (_QWORD *)v26;
    *(_DWORD *)v25 = 138412290;
    v58 = v21;
    v28 = v21;
    v50 = v2;
    v29 = v21;
    v30 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v25 + 4);
    *v27 = v5;

    v21 = v29;
    v2 = v50;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Sending confirmation: %@", v25, 0xCu);
    v31 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v27, 1, v31);
    v32 = v27;
    v17 = v51;
    swift_slowDealloc(v32, -1, -1);
    v33 = v25;
    v19 = v52;
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {

    v22 = v21;
  }

  v39 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v55, 0, 0);
  sub_100221F28(v39, (uint64_t)&v56, &qword_1007B9E38);
  if (v57)
  {
    sub_10026EE60(&v56, (uint64_t)&v58);
    v40 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v54, 0, 0);
    sub_100221F28(v40, (uint64_t)&v56, &qword_1007BFF70);
    if (v57)
    {
      sub_100244418((uint64_t)&v56, (uint64_t)v53);
      sub_10000D0F0((uint64_t)&v56, &qword_1007BFF70);
      v41 = sub_10023A834(v53, v53[3]);
      v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      v43 = *v41;
      v44 = v60;
      v45 = v61;
      v46 = sub_10023A834(&v58, v60);
      sub_10056A0EC(v17, v19, (uint64_t)v46, 2, v42, v43, v44, v45);
      sub_100225AB4(v17, v19);

      sub_10022E75C(&v58);
      sub_10022E75C(v53);
      return;
    }
    sub_10022E75C(&v58);

    sub_100225AB4(v17, v19);
    v48 = &v56;
  }
  else
  {
    sub_10000D0F0((uint64_t)&v56, &qword_1007B9E38);
    v47 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v53, 0, 0);
    sub_100221F28(v47, (uint64_t)&v58, &qword_1007BFF70);
    if (v60)
    {
      sub_100244418((uint64_t)&v58, (uint64_t)&v56);
      sub_10000D0F0((uint64_t)&v58, &qword_1007BFF70);
      sub_10023A834(&v56, v57);
      sub_100560874(v17, v19, 2, *(_QWORD *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));

      sub_100225AB4(v17, v19);
      sub_10022E75C(&v56);
      return;
    }

    sub_100225AB4(v17, v19);
    v48 = (__int128 *)&v58;
  }
  sub_10000D0F0((uint64_t)v48, &qword_1007BFF70);
}

uint64_t sub_1002EE618()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1007B3ED8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1007B3ED8, sub_1002EA134);
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007B9DC8);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v20 = v12;
    v13 = type metadata accessor for UUID(0);
    v14 = sub_100220D78((unint64_t *)&qword_1007B63F0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    v17 = (const char *)v16;
    v19 = sub_100228BD8(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  sub_1002EBDEC(12, 0xD000000000000026, (const char *)0x8000000100615B20);
  return sub_1003FD560();
}

uint64_t sub_1002EE8A8(char *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  id v13;
  const char *v14;
  const char *v15;
  NSString v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v44;
  unsigned int v45;
  _QWORD v46[5];
  char v47[24];
  char v48[24];
  __int128 v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = a2;
  v8 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] - 1;
  if (v9 >= 8)
    v10 = 0;
  else
    v10 = 0x101050508080101uLL >> (8 * v9);
  if (v10 == SFDeviceClassCodeGet(a1, a2) && *(_QWORD *)&a1[v8] != 8)
    goto LABEL_21;
  v11 = objc_msgSend(objc_allocWithZone((Class)SDAuthenticationPairingResponse), "init");
  v12 = v11;
  if (v11)
  {
    objc_msgSend(v11, "setVersion:", 1);
    v13 = v12;
    UUID.uuidString.getter(v13);
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setSessionID:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

    objc_msgSend(v13, "setErrorCode:", v6);
    v17 = objc_msgSend(v13, "data");
    if (v17)
    {
      v18 = v17;
      v45 = v6;
      v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;

      v22 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v48, 0, 0);
      sub_100221F28(v22, (uint64_t)&v49, &qword_1007B9E38);
      if (v50)
      {
        sub_10026EE60(&v49, (uint64_t)&v51);
        v23 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v47, 0, 0);
        sub_100221F28(v23, (uint64_t)&v49, &qword_1007BFF70);
        if (v50)
        {
          sub_100244418((uint64_t)&v49, (uint64_t)v46);
          sub_10000D0F0((uint64_t)&v49, &qword_1007BFF70);
          v24 = sub_10023A834(v46, v46[3]);
          v25 = *(_QWORD *)&a1[v8];
          v26 = *v24;
          v27 = a3;
          v28 = v53;
          v29 = v54;
          v30 = sub_10023A834(&v51, v53);
          v31 = v29;
          a3 = v27;
          sub_10056A0EC(v19, v21, (uint64_t)v30, 4, v25, v26, v28, v31);
          sub_100225AB4(v19, v21);

          sub_10022E75C(&v51);
          sub_10022E75C(v46);
        }
        else
        {
          sub_10022E75C(&v51);

          sub_100225AB4(v19, v21);
          sub_10000D0F0((uint64_t)&v49, &qword_1007BFF70);
        }
        v6 = v45;
        goto LABEL_21;
      }
      sub_100225AB4(v19, v21);
      sub_10000D0F0((uint64_t)&v49, &qword_1007B9E38);
      v6 = v45;
    }
  }
  if (qword_1007B3ED8 != -1)
    swift_once(&qword_1007B3ED8, sub_1002EA134);
  v32 = type metadata accessor for Logger(0);
  sub_100221DF8(v32, (uint64_t)qword_1007B9DC8);
  v33 = v12;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.error.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v44 = a3;
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v36 = 138412290;
    if (v12)
    {
      v51 = v33;
      v38 = v33;
    }
    else
    {
      v51 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v36 + 4);
    *v37 = v12;

    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Could not convert response to data: %@", v36, 0xCu);
    v39 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v37, 1, v39);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    a3 = v44;
    v6 = v6;
  }
  else
  {

  }
LABEL_21:
  v40 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v46, 0, 0);
  sub_100221F28(v40, (uint64_t)&v51, &qword_1007BFF70);
  if (!v53)
    return sub_10000D0F0((uint64_t)&v51, &qword_1007BFF70);
  sub_100244418((uint64_t)&v51, (uint64_t)&v49);
  sub_10000D0F0((uint64_t)&v51, &qword_1007BFF70);
  v41 = (char *)*sub_10023A834(&v49, v50);
  v42 = a1;
  sub_100388548(v42, v6, a3, a4, v41);

  return sub_10022E75C(&v49);
}

uint64_t sub_1002EEDD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode
                                      + 8));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession));
}

uint64_t sub_1002EEE40()
{
  return type metadata accessor for SDAuthenticationPairingLockSession(0);
}

uint64_t type metadata accessor for SDAuthenticationPairingLockSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1007B9E18;
  if (!qword_1007B9E18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationPairingLockSession);
  return result;
}

uint64_t sub_1002EEE84(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_1005D2008;
  v2[1] = &unk_1005D2020;
  v2[2] = &unk_1005D2038;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 264);
}

uint64_t sub_1002EEEE4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI);
}

uint64_t sub_1002EEEF8(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) = result;
  return result;
}

uint64_t sub_1002EEF0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002EEF38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007B9E2C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1002EA94C(a1, v4, v5, v6);
}

uint64_t sub_1002EEFA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002EEFC8()
{
  uint64_t v0;

  sub_100225AB4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10022E75C((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002EEFFC()
{
  uint64_t *v0;

  return sub_1002EBB70(v0[2], v0[3], v0[4], v0 + 5);
}

uint64_t sub_1002EF00C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002EF01C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002EF024()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002EF050()
{
  uint64_t v0;

  return sub_1002EE8A8(*(char **)(v0 + 16), *(unsigned int *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1002EF060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007B9E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002EF0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B53A0;
  if (!qword_1007B53A0)
  {
    v1 = sub_100221EDC(255, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1007B53A0);
  }
  return result;
}

void sub_1002EF100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  char v42;
  double v43;
  double v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56[24];
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[6];
  uint64_t v61;

  v52 = a2;
  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    v6 = sub_1002EF0A8();
    v7 = Set.Iterator.init(_cocoa:)(v60, v4, v5, v6);
    v2 = v60[0];
    v49 = v60[1];
    v9 = v60[2];
    v8 = v60[3];
    v10 = v60[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 56);
    v49 = a1 + 56;
    v9 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & v12;
    swift_bridgeObjectRetain((const char *)a1);
    v8 = 0;
  }
  v47 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  v45 = v9;
  v48 = (unint64_t)(v9 + 64) >> 6;
  v46 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    v15 = v10;
    v16 = v8;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    v19 = __CocoaSet.Iterator.next()(v7);
    if (!v19)
      goto LABEL_52;
    v20 = v19;
    v61 = v19;
    v21 = sub_100221EDC(0, &qword_1007B5398, SFAutoUnlockDevice_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(v57, &v61, v46, v21, 7);
    v22 = (id)v57[0];
    swift_unknownObjectRelease(v20);
    v8 = v16;
    if (!v22)
      goto LABEL_52;
LABEL_36:
    v26 = objc_msgSend(v22, "uniqueID", v45);
    v51 = v15;
    if (v26)
    {
      v27 = v26;
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

    }
    else
    {
      v53 = 0;
      v29 = 0;
    }
    v30 = v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v56, 0, 0);
    sub_100221F28(v30, (uint64_t)v57, &qword_1007B9E38);
    v31 = v58;
    if (!v58)
    {
      sub_10000D0F0((uint64_t)v57, &qword_1007B9E38);
      if (!v29)
        goto LABEL_49;
      goto LABEL_12;
    }
    v54 = v10;
    v55 = v8;
    v50 = v16;
    v32 = v2;
    v33 = v59;
    v34 = sub_10023A834(v57, v58);
    v35 = *(_QWORD *)(v31 - 8);
    __chkstk_darwin(v34);
    v37 = (char *)&v45 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    sub_10000D0F0((uint64_t)v57, &qword_1007B9E38);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v31, v33);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v31);
    if (v29)
    {
      v2 = v32;
      v10 = v54;
      v8 = v55;
      if (!v40)
        goto LABEL_12;
      if (v53 == v38 && v29 == v40)
      {

        *(_QWORD *)&v44 = swift_bridgeObjectRelease(v29).n128_u64[0];
        swift_bridgeObjectRelease(v40, v44);
        goto LABEL_52;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v29, v38, v40, 0);

      *(_QWORD *)&v43 = swift_bridgeObjectRelease(v29).n128_u64[0];
      swift_bridgeObjectRelease(v40, v43);
      if ((v42 & 1) != 0)
        goto LABEL_52;
    }
    else
    {
      v29 = v40;
      v2 = v32;
      v10 = v54;
      v8 = v55;
      if (!v40)
      {
LABEL_49:

LABEL_52:
        sub_10022E5B4(v2);
        return;
      }
LABEL_12:

      swift_bridgeObjectRelease(v29);
    }
  }
  if (v10)
  {
    v17 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v18 = v17 | (v8 << 6);
LABEL_35:
    v22 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v18);
    if (!v22)
      goto LABEL_52;
    goto LABEL_36;
  }
  v23 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v23 >= v48)
      goto LABEL_52;
    v24 = *(_QWORD *)(v49 + 8 * v23);
    ++v8;
    if (!v24)
    {
      v8 = v16 + 2;
      if (v16 + 2 >= v48)
        goto LABEL_52;
      v24 = *(_QWORD *)(v49 + 8 * v8);
      if (!v24)
      {
        v8 = v16 + 3;
        if (v16 + 3 >= v48)
          goto LABEL_52;
        v24 = *(_QWORD *)(v49 + 8 * v8);
        if (!v24)
        {
          v8 = v16 + 4;
          if (v16 + 4 >= v48)
            goto LABEL_52;
          v24 = *(_QWORD *)(v49 + 8 * v8);
          if (!v24)
          {
            v8 = v16 + 5;
            if (v16 + 5 >= v48)
              goto LABEL_52;
            v24 = *(_QWORD *)(v49 + 8 * v8);
            if (!v24)
            {
              v25 = v16 + 6;
              while (v48 != v25)
              {
                v24 = *(_QWORD *)(v49 + 8 * v25++);
                if (v24)
                {
                  v8 = v25 - 1;
                  goto LABEL_34;
                }
              }
              goto LABEL_52;
            }
          }
        }
      }
    }
LABEL_34:
    v10 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v8 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1002EF5D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_100008384(&qword_1007B5A60);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_1002EF648(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_1002EF70C(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EF76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  unint64_t v6;
  id v7;
  void *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (*(_QWORD *)&v5 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
        v4;
        v4 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v8 = v7;
      sub_100221EDC(0, &qword_1007B9E68, CBUUID_ptr);
      v9 = static NSObject.== infix(_:_:)(v8, a1);

      if ((v9 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease((const char *)a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v6)
        break;
      v6 = 5;
      while (1)
      {
        v16 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v17 = *(id *)(a2 + 8 * v6);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_6;
        ++v6;
        if (v16 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v11 = 1;
    while (1)
    {
      v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a2);
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      v14 = v12;
      v15 = static NSObject.== infix(_:_:)(v12, a1);
      swift_unknownObjectRelease(v14);
      if ((v15 & 1) != 0)
        goto LABEL_6;
      ++v11;
      if (v13 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a2);
  }
LABEL_18:
  swift_bridgeObjectRelease((const char *)a2, v5);
  return 0;
}

uint64_t sub_1002EF8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B9E40);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B9E40);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002EF980(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_100221EDC(0, (unint64_t *)&qword_1007B5470, CNContact_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1002EFA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return swift_task_switch(sub_1002EFA44, 0, 0);
}

uint64_t sub_1002EFA44()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  Class isa;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = (void *)objc_opt_self(CNContactVCardSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v0[20] = isa;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1002EFB10;
  v5 = swift_continuation_init(v0 + 2, 1, v4);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1002EF980;
  v6[3] = &unk_100721E88;
  v6[4] = v5;
  objc_msgSend(v2, "contactsWithData:completionHandler:", isa, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_1002EFB10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 168) = v1;
  if (v1)
    v2 = sub_1002F0214;
  else
    v2 = sub_1002EFB70;
  return swift_task_switch(v2, 0, 0);
}

void sub_1002EFB70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  __n128 v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  const char *v41;
  const char *v42;
  NSString v43;
  __n128 v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  const char *v55;
  NSString v56;
  id v57;
  uint64_t v58;
  const char *v59;
  const char *v60;
  char v61;
  NSString v62;
  __n128 v63;
  id v64;
  uint64_t v65;
  const char *v66;
  const char *v67;
  char v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  unint64_t v73;
  id v74;

  v4 = *(_QWORD *)(v1 + 120);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_25:
    v22 = *(void **)(v1 + 160);
    swift_bridgeObjectRelease((const char *)v4);

    if (qword_1007B3EE0 == -1)
    {
LABEL_26:
      v23 = type metadata accessor for Logger(0);
      v24 = sub_100221DF8(v23, (uint64_t)qword_1007B9E40);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to extract contact from vCardData", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      goto LABEL_29;
    }
LABEL_75:
    swift_once(&qword_1007B3EE0, sub_1002EF8F0);
    goto LABEL_26;
  }
  if (v4 < 0)
    v20 = *(_QWORD *)(v1 + 120);
  else
    v20 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(const char **)(v1 + 120));
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease((const char *)v4);
  if (!v21)
    goto LABEL_25;
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_32:
      if (v2 < 0)
        v31 = v2;
      else
        v31 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v2);
      v7 = _CocoaArrayWrapper.endIndex.getter(v31);
      v73 = v1;
      v74 = v3;
      if (v7)
        goto LABEL_8;
LABEL_36:
      v9 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_37;
    }
    v5 = *(id *)(v4 + 32);
  }
  v3 = v5;

  v6 = objc_msgSend(v3, "emailAddresses", swift_bridgeObjectRelease((const char *)v4).n128_f64[0]);
  v0 = sub_100008384(&qword_1007B9790);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v0);

  if ((unint64_t)v2 >> 62)
    goto LABEL_32;
  v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain((const char *)v2);
  v73 = v1;
  v74 = v3;
  if (!v7)
    goto LABEL_36;
LABEL_8:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_74;
  }
  v8 = 0;
  v1 = v2 & 0xC000000000000001;
  v9 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v1)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
    else
      v10 = *(id *)(v2 + 8 * v8 + 32);
    v11 = v10;
    v12 = objc_msgSend(v10, "value");
    v13 = (id)((uint64_t (*)(void))CUNormalizeEmailAddress)();

    if (v13)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = (char *)sub_100227A68(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v18 = *((_QWORD *)v9 + 2);
      v17 = *((_QWORD *)v9 + 3);
      if (v18 >= v17 >> 1)
        v9 = (char *)sub_100227A68((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v18 + 1;
      v19 = &v9[16 * v18];
      *((_QWORD *)v19 + 4) = v14;
      *((_QWORD *)v19 + 5) = v16;
    }
    else
    {

    }
    ++v8;
  }
  while (v7 != v8);
LABEL_37:
  swift_bridgeObjectRelease_n(v2, 2);
  v32 = objc_msgSend(v74, "phoneNumbers");
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v0);

  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain((const char *)v33);
    if (v34)
      goto LABEL_39;
LABEL_56:
    v36 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_57;
  }
  if (v33 < 0)
    v52 = v33;
  else
    v52 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain((const char *)v33);
  v34 = _CocoaArrayWrapper.endIndex.getter(v52);
  if (!v34)
    goto LABEL_56;
LABEL_39:
  if (v34 < 1)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v35 = 0;
  v36 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v33 & 0xC000000000000001) != 0)
      v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
    else
      v37 = *(id *)(v33 + 8 * v35 + 32);
    v38 = v37;
    v39 = objc_msgSend(v37, "value");
    v40 = objc_msgSend(v39, "stringValue");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v41;

    v43 = String._bridgeToObjectiveC()();
    v44 = swift_bridgeObjectRelease(v42);
    v45 = (id)CUNormalizePhoneNumber(v43, v44);

    if (v45)
    {
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v48 = v47;

      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        v36 = (char *)sub_100227A68(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
      v50 = *((_QWORD *)v36 + 2);
      v49 = *((_QWORD *)v36 + 3);
      if (v50 >= v49 >> 1)
        v36 = (char *)sub_100227A68((_QWORD *)(v49 > 1), v50 + 1, 1, v36);
      *((_QWORD *)v36 + 2) = v50 + 1;
      v51 = &v36[16 * v50];
      *((_QWORD *)v51 + 4) = v46;
      *((_QWORD *)v51 + 5) = v48;
    }
    else
    {

    }
    ++v35;
  }
  while (v34 != v35);
LABEL_57:
  v1 = v73;
  v53 = *(_QWORD *)(v73 + 152);
  swift_bridgeObjectRelease_n(v33, 2);
  if (!v53)
  {
LABEL_64:
    if (*((_QWORD *)v36 + 2) == 1)
    {
      *(_QWORD *)&v71 = swift_bridgeObjectRelease(v9, v54).n128_u64[0];
      v72 = v74;
      if (*((_QWORD *)v36 + 2))
        goto LABEL_66;
    }
    else
    {
      v72 = v74;
      if (*((_QWORD *)v9 + 2))
      {
        v29 = *((_QWORD *)v9 + 4);
        v30 = (const char *)*((_QWORD *)v9 + 5);
        swift_bridgeObjectRetain(v30, v54);
        swift_bridgeObjectRelease(v9);
        goto LABEL_69;
      }
      *(_QWORD *)&v71 = swift_bridgeObjectRelease(v9, v54).n128_u64[0];
      if (*((_QWORD *)v36 + 2))
      {
LABEL_66:
        v29 = *((_QWORD *)v36 + 4);
        v30 = (const char *)*((_QWORD *)v36 + 5);
        swift_bridgeObjectRetain(v30, v71);
LABEL_69:

        v28 = swift_bridgeObjectRelease(v36);
        goto LABEL_70;
      }
    }

    v28 = swift_bridgeObjectRelease(v36);
LABEL_29:
    v29 = 0;
    v30 = 0;
LABEL_70:
    (*(void (**)(uint64_t, const char *, __n128))(v1 + 8))(v29, v30, v28);
    return;
  }
  v55 = *(const char **)(v73 + 152);
  swift_bridgeObjectRetain(v55);
  v56 = String._bridgeToObjectiveC()();
  v57 = (id)CUNormalizeEmailAddress(v56, 1);

  if (v57)
  {
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v60 = v59;

    v61 = sub_1002EF648(v58, (uint64_t)v60, v9);
    swift_bridgeObjectRelease(v60);
    if ((v61 & 1) != 0)
    {
LABEL_62:

      *(_QWORD *)&v70 = swift_bridgeObjectRelease(v36).n128_u64[0];
      v28 = swift_bridgeObjectRelease(v9, v70);
      v29 = *(_QWORD *)(v73 + 144);
      v30 = *(const char **)(v73 + 152);
      goto LABEL_70;
    }
    v62 = String._bridgeToObjectiveC()();
    v64 = (id)CUNormalizePhoneNumber(v62, v63);

    if (v64)
    {
      v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v67 = v66;

      v68 = sub_1002EF648(v65, (uint64_t)v67, v36);
      *(_QWORD *)&v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
      if ((v68 & 1) != 0)
        goto LABEL_62;
      *(_QWORD *)&v54 = swift_bridgeObjectRelease(v55, v69).n128_u64[0];
      goto LABEL_64;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002F0214()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002F0254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  NSString v13;
  id v14;
  NSString v15;
  NSString v16;
  Class isa;
  Class v18;
  NSString v19;

  v13 = a13;
  v14 = objc_msgSend(objc_allocWithZone((Class)RPIdentity), "init");
  objc_msgSend(v14, "setType:", 6);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccountID:", v15);

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setContactID:", v16);

  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setDeviceIRKData:", isa);

  v18 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setEdPKData:", v18);

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setIdsDeviceID:", v19);

  if (a13)
    v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setSendersKnownAlias:", v13);

  if (a11)
    objc_msgSend(v14, "setFeatureFlags:");
  return v14;
}

uint64_t sub_1002F0408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 216) = v12;
  *(_OWORD *)(v8 + 200) = v11;
  *(_OWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 168) = a7;
  *(_QWORD *)(v8 + 176) = a8;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 144) = a4;
  *(_QWORD *)(v8 + 120) = a1;
  *(_QWORD *)(v8 + 128) = a2;
  return swift_task_switch(sub_1002F0444, 0, 0);
}

uint64_t sub_1002F0444()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 216);
  v16 = *(_OWORD *)(v0 + 184);
  v17 = *(_OWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v9 = objc_msgSend(objc_allocWithZone((Class)RPClient), "init");
  *(_QWORD *)(v0 + 224) = v9;
  v10 = sub_1002F0254(v8, v7, v6, v5, v4, v3, v2, v18, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v1);
  *(_QWORD *)(v0 + 232) = v10;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1002F0578;
  v11 = v0 + 16;
  v13 = swift_continuation_init(v0 + 16, 1, v12);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v14 = (_QWORD *)(v0 + 80);
  v14[1] = 0x40000000;
  v14[2] = sub_1002EF5D4;
  v14[3] = &unk_100721E70;
  v14[4] = v13;
  objc_msgSend(v9, "addOrUpdateIdentity:completion:", v10, v14);
  return swift_continuation_await(v11);
}

uint64_t sub_1002F0578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 240) = v1;
  if (v1)
    v2 = sub_1002F07B0;
  else
    v2 = sub_1002F05D8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F05D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  if (qword_1007B3EE0 != -1)
    swift_once(&qword_1007B3EE0, sub_1002EF8F0);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007B9E40);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 232);
  v8 = *(const char **)(v0 + 144);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 136);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v14 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(_QWORD *)(v0 + 80) = sub_100228BD8(v9, (unint64_t)v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4);
    swift_bridgeObjectRelease_n(v8, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Added/updated identity for contact %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 144), 2);
  }

  v12 = *(void **)(v0 + 224);
  objc_msgSend(v12, "invalidate");

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F07B0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 224);
  swift_willThrow();

  objc_msgSend(v2, "invalidate");
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F0808(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1002F08E4, static AirDropActor.shared, 0);
}

void sub_1002F08E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
    v29 = 0;
LABEL_28:
    v31 = *(_QWORD *)(v1 + 48);
    v30 = *(_QWORD *)(v1 + 56);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    (*(void (**)(uint64_t))(v1 + 8))(v29);
    return;
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = SFAirDropReceive.AskRequest.urlItems.getter(v7);
  v11 = v10;
  v12 = 0;
  v13 = v10 + 56;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v10 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v10 + 56);
  v32 = (unint64_t)(63 - v15) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_26;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_26;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = *(_QWORD *)(v1 + 56);
    v23 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v22, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v8 + 72) * v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v23) == 1)
    {
      swift_release(v11);
      v29 = 1;
      goto LABEL_27;
    }
    v24 = *(_QWORD *)(v1 + 48);
    v25 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v24, *(_QWORD *)(v1 + 56), v25);
    sub_10032E6EC(&off_10071C6B0);
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
    v28 = *(void **)(v9 + 16);
    *(_QWORD *)(v9 + 16) = v27;

    if (!*(_QWORD *)(v9 + 16))
    {
      swift_release(v11);
      v29 = 0;
LABEL_27:
      swift_arrayDestroy(&unk_10071C6D0, 1, &type metadata for String);
      goto LABEL_28;
    }
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_26:
    v29 = 1;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v8 + 56))(*(_QWORD *)(v1 + 56), 1, 1, *(_QWORD *)(v1 + 32));
    swift_release(v11);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPodcastsLinks()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary36SDAirDropContentHandlerPodcastsLinks);
}

uint64_t sub_1002F0BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SDAirDropContentHandlerPodcastsLinks();
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002F0BF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1007B9E9C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10022320C;
  return sub_1002F0808(a1);
}

void sub_1002F0C48(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  _BYTE v24[56];

  v3 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  v5 = sub_100008384(&qword_1007B7600);
  inited = swift_initStackObject(v5, v24);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = 0x8000000100615BA0;
  *(_QWORD *)(inited + 48) = v4;
  swift_bridgeObjectRetain((const char *)0x8000000100615BA0);
  swift_bridgeObjectRetain((const char *)inited);
  v8._countAndFlagsBits = 95;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0xD000000000000019;
  v9._object = (void *)0x8000000100615BA0;
  String.append(_:)(v9);
  swift_bridgeObjectRelease((const char *)0x8000000100615BA0);
  if (v4 > 1)
  {
    v10._countAndFlagsBits = 0x4C4152554C505FLL;
    v10._object = (void *)0xE700000000000000;
    String.append(_:)(v10);
  }
  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v11._countAndFlagsBits = 0x4C4154495041435FLL;
    v11._object = (void *)0xEC00000044455A49;
    String.append(_:)(v11);
  }
  v12._countAndFlagsBits = 0x545845545FLL;
  v12._object = (void *)0xE500000000000000;
  String.append(_:)(v12);
  swift_setDeallocating(inited);
  v13 = *(_QWORD *)(inited + 16);
  v14 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v7, v13, v14);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152);
  v17 = (id)SFLocalizedStringForKey(v15, v16);

  if (v17)
  {
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(v22 + 56) = &type metadata for Int;
    *(_QWORD *)(v22 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v22 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v18, v20, v22);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v22, v23);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002F0E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v3 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v4 = __chkstk_darwin(v3);
  v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v40 = (char *)&v34 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = _swiftEmptyArrayStorage;
  if (!v7)
    return (uint64_t)v8;
  v34 = v1;
  v44 = _swiftEmptyArrayStorage;
  sub_100229940(0, v7, 0);
  result = sub_1002F8B7C(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v35 = a1 + 80;
  v36 = v7;
  v38 = a1 + 64;
  v39 = a1;
  v37 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_26;
    v17 = *(_QWORD *)(a1 + 48);
    v19 = v42;
    v18 = v43;
    v20 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v17 + *(_QWORD *)(v42 + 72) * v11, v43);
    v21 = v41;
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v41, v20, v18);
    v23 = UUID.description.getter(v22);
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v8 = v44;
    result = swift_isUniquelyReferenced_nonNull_native(v44);
    if ((result & 1) == 0)
    {
      result = sub_100229940(0, v8[2] + 1, 1);
      v8 = v44;
    }
    v27 = v8[2];
    v26 = v8[3];
    if (v27 >= v26 >> 1)
    {
      result = sub_100229940(v26 > 1, v27 + 1, 1);
      v8 = v44;
    }
    v8[2] = v27 + 1;
    v28 = &v8[2 * v27];
    v28[4] = v23;
    v28[5] = v25;
    a1 = v39;
    v14 = 1 << *(_BYTE *)(v39 + 32);
    if (v11 >= v14)
      goto LABEL_27;
    v13 = v38;
    v29 = *(_QWORD *)(v38 + 8 * v16);
    if ((v29 & (1 << v11)) == 0)
      goto LABEL_28;
    LODWORD(v10) = v37;
    if (*(_DWORD *)(v39 + 36) != (_DWORD)v37)
      goto LABEL_29;
    v30 = v29 & (-2 << (v11 & 0x3F));
    if (v30)
    {
      v14 = __clz(__rbit64(v30)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v36;
    }
    else
    {
      v31 = v16 + 1;
      v32 = (unint64_t)(v14 + 63) >> 6;
      v15 = v36;
      if (v16 + 1 < v32)
      {
        v33 = *(_QWORD *)(v38 + 8 * v31);
        if (v33)
        {
LABEL_22:
          v14 = __clz(__rbit64(v33)) + (v31 << 6);
        }
        else
        {
          while (v32 - 2 != v16)
          {
            v33 = *(_QWORD *)(v35 + 8 * v16++);
            if (v33)
            {
              v31 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    v11 = v14;
    if (v12 == v15)
      return (uint64_t)v8;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1002F115C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a2;
  v35 = type metadata accessor for SFNWInterfaceType(0);
  v3 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100008384(&qword_1007BA100);
  v30 = *(_QWORD *)(v36 - 8);
  v6 = __chkstk_darwin(v36);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  v11 = *(_QWORD *)(a1 + 64);
  v32 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v34 = enum case for SFNWInterfaceType.cellular(_:);
  v37 = a1;
  result = swift_bridgeObjectRetain(a1);
  v16 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = v37;
    v23 = *(_QWORD *)(v37 + 48);
    v24 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v10, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * i, v24);
    v25 = *(_QWORD *)(v22 + 56) + *(_QWORD *)(v3 + 72) * i;
    v27 = v35;
    v26 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v10[*(int *)(v36 + 48)], v25, v35);
    sub_10022E718((uint64_t)v10, (uint64_t)v8, &qword_1007BA100);
    v28 = &v8[*(int *)(v26 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, v34, v27);
    LOBYTE(v28) = static SFNWInterfaceType.== infix(_:_:)(v28, v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
    if ((v28 & 1) != 0)
    {
      swift_release(v37);
      v29 = v31;
      sub_10022E718((uint64_t)v8, v31, &qword_1007BA100);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v36);
    }
    result = sub_10000D0F0((uint64_t)v8, &qword_1007BA100);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v33)
      goto LABEL_25;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_25;
      v20 = *(_QWORD *)(v32 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_25;
        v20 = *(_QWORD *)(v32 + 8 * v16);
        if (!v20)
        {
          v16 = v19 + 3;
          if (v19 + 3 >= v33)
            goto LABEL_25;
          v20 = *(_QWORD *)(v32 + 8 * v16);
          if (!v20)
            break;
        }
      }
    }
LABEL_20:
    v14 = (v20 - 1) & v20;
  }
  v21 = v19 + 4;
  if (v21 >= v33)
  {
LABEL_25:
    swift_release(v37);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v31, 1, 1, v36);
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v33)
      goto LABEL_25;
    v20 = *(_QWORD *)(v32 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002F149C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[4] = a1;
  v2[5] = a2;
  v3 = sub_100008384(&qword_1007B8110);
  v4 = sub_10026E2FC(&qword_1007BA128, &qword_1007B8110, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v2[6] = v5;
  *v5 = v2;
  v5[1] = sub_1002F1534;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_1002F1534()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  v4 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    if (v4)
    {
      v5 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002F1604;
  }
  else
  {
    if (v4)
    {
      v10 = *(_QWORD *)(v2 + 40);
      v11 = swift_getObjectType(*(_QWORD *)(v2 + 32));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002F15F8;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_1002F15F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002F1604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 56);
  v1 = sub_100008384(&qword_1007B5A60);
  v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7);
  swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F1674(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2[4] = a1;
  v2[5] = a2;
  v3 = sub_100008384(&qword_1007BA0C0);
  v4 = sub_10026E2FC(&qword_1007BA118, &qword_1007BA0C0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v2[6] = v5;
  *v5 = v2;
  v5[1] = sub_1002F170C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_1002F170C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  v4 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    if (v4)
    {
      v5 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002FA10C;
  }
  else
  {
    if (v4)
    {
      v10 = *(_QWORD *)(v2 + 40);
      v11 = swift_getObjectType(*(_QWORD *)(v2 + 32));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002FA108;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_1002F17D0(int64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(int64_t, uint64_t);
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  void (*v81)(void);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *data;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  const __CFString *v91;
  uint64_t v92;
  const __CFString *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*info)(char *, uint64_t);
  uint64_t v102;
  void (*v103)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v104)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  int64_t v111;
  uint64_t v112;
  int64_t v113;
  void (*v114)(char *, int64_t, uint64_t);
  void (*v115)(_QWORD, _QWORD, _QWORD);
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v117;
  int64_t v118;
  unint64_t v119;
  uint64_t v120;
  _BOOL8 v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  _QWORD *v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  void (*v134)(unint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  unint64_t v137;
  int64_t v138;
  unint64_t v139;
  int64_t v140;
  int64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  void (*v147)(void);
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, unint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  const __CFString *v157;
  uint64_t v158;
  const __CFString *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  unsigned int (*v169)(_QWORD, _QWORD, _QWORD);
  void (*v170)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  unsigned int v172;
  unint64_t v173;
  char v174;
  char v175;
  char v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;
  char v180;
  unint64_t v181;
  uint64_t v182;
  _BOOL8 v183;
  uint64_t v184;
  char v185;
  unint64_t v186;
  char v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  void (*v197)(char *, uint64_t);
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned int (*v211)(uint64_t, uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(char *, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  void (*v220)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, char *, uint64_t);
  char *v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int (*v228)(int64_t, uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  char v233;
  uint64_t v234;
  __CFString *v235;
  uint64_t v236;
  __CFString *v237;
  Class isa;
  uint64_t v239;
  uint64_t v240;
  NSString v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  NSObject *v252;
  os_log_type_t v253;
  uint8_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  NSObject *v265;
  os_log_type_t v266;
  uint8_t *v267;
  char v268;
  uint64_t v269;
  uint64_t result;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char *v279;
  char *v280;
  char *v281;
  int64_t v282;
  int64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  char *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  int64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  unint64_t v306;
  const __CFString *v307;
  const __CFString *v308;
  unint64_t v309;
  const __CFString *v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  char *v314;
  void (*v315)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint8_t *v319;
  uint64_t v320;
  char v321[8];
  unint64_t v322;

  v299 = a2;
  v276 = sub_100008384(&qword_1007BA0E0);
  __chkstk_darwin(v276);
  v278 = (uint64_t)&v271 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007BA0E8);
  v5 = __chkstk_darwin(v4);
  v272 = (uint64_t)&v271 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v281 = (char *)&v271 - v8;
  __chkstk_darwin(v7);
  v302 = (char *)&v271 - v9;
  v292 = sub_100008384(&qword_1007BA0F0);
  v10 = __chkstk_darwin(v292);
  v304 = (char *)&v271 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v291 = (char *)&v271 - v13;
  v14 = __chkstk_darwin(v12);
  v303 = (uint64_t)&v271 - v15;
  __chkstk_darwin(v14);
  v290 = (char *)&v271 - v16;
  v17 = type metadata accessor for SFNWInterfaceType(0);
  v318 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v273 = (char *)&v271 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v285 = (char *)&v271 - v21;
  v22 = __chkstk_darwin(v20);
  v305 = (char *)&v271 - v23;
  v24 = __chkstk_darwin(v22);
  v287 = (char *)&v271 - v25;
  __chkstk_darwin(v24);
  v293 = (char *)&v271 - v26;
  v27 = sub_100008384(&qword_1007C5E70);
  v28 = __chkstk_darwin(v27);
  v275 = (char *)&v271 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v274 = (uint64_t)&v271 - v31;
  v32 = __chkstk_darwin(v30);
  v277 = (char *)&v271 - v33;
  v34 = __chkstk_darwin(v32);
  v284 = (uint64_t)&v271 - v35;
  v36 = __chkstk_darwin(v34);
  v38 = (char *)&v271 - v37;
  v39 = __chkstk_darwin(v36);
  v279 = (char *)&v271 - v40;
  v41 = __chkstk_darwin(v39);
  v289 = (char *)&v271 - v42;
  v43 = __chkstk_darwin(v41);
  v288 = (char *)&v271 - v44;
  v45 = __chkstk_darwin(v43);
  v280 = (char *)&v271 - v46;
  v47 = __chkstk_darwin(v45);
  v298 = (char *)&v271 - v48;
  __chkstk_darwin(v47);
  v297 = (char *)&v271 - v49;
  v50 = type metadata accessor for UUID(0);
  v319 = *(uint8_t **)(v50 - 8);
  v51 = __chkstk_darwin(v50);
  v301 = (uint64_t)&v271 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v51);
  v317 = (uint64_t)&v271 - v54;
  __chkstk_darwin(v53);
  v56 = (char *)&v271 - v55;
  v296 = sub_100008384(&qword_1007BA0F8);
  v57 = __chkstk_darwin(v296);
  v312 = (char *)&v271 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __chkstk_darwin(v57);
  v295 = (char *)&v271 - v60;
  v61 = __chkstk_darwin(v59);
  v311 = (uint64_t)&v271 - v62;
  __chkstk_darwin(v61);
  v294 = (char *)&v271 - v63;
  v306 = sub_10021EC20((uint64_t)_swiftEmptyArrayStorage);
  v64 = *(_QWORD *)(a1 + 64);
  v282 = a1 + 64;
  v65 = 1 << *(_BYTE *)(a1 + 32);
  v66 = -1;
  if (v65 < 64)
    v66 = ~(-1 << v65);
  v67 = v66 & v64;
  v283 = (unint64_t)(v65 + 63) >> 6;
  v300 = a1;
  swift_bridgeObjectRetain(a1);
  v68 = 0;
  v314 = v38;
  v315 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v17;
  v316 = v50;
  v313 = (uint64_t)v56;
  while (1)
  {
    if (v67)
    {
      v308 = (const __CFString *)((v67 - 1) & v67);
      v309 = v68;
      v71 = __clz(__rbit64(v67)) | (v68 << 6);
      goto LABEL_25;
    }
    v72 = v68 + 1;
    if (__OFADD__(v68, 1))
      goto LABEL_158;
    v73 = (uint64_t)v302;
    if (v72 >= v283)
      break;
    v74 = *(_QWORD *)(v282 + 8 * v72);
    v75 = v68 + 1;
    if (!v74)
    {
      v75 = v68 + 2;
      if ((uint64_t)(v68 + 2) >= v283)
        break;
      v74 = *(_QWORD *)(v282 + 8 * v75);
      if (!v74)
      {
        v75 = v68 + 3;
        if ((uint64_t)(v68 + 3) >= v283)
          break;
        v74 = *(_QWORD *)(v282 + 8 * v75);
        if (!v74)
        {
          v75 = v68 + 4;
          if ((uint64_t)(v68 + 4) >= v283)
            break;
          v74 = *(_QWORD *)(v282 + 8 * v75);
          if (!v74)
          {
            v76 = v68 + 5;
            if ((uint64_t)(v68 + 5) >= v283)
              break;
            v74 = *(_QWORD *)(v282 + 8 * v76);
            if (!v74)
            {
              while (1)
              {
                v75 = v76 + 1;
                if (__OFADD__(v76, 1))
                  goto LABEL_163;
                if (v75 >= v283)
                  goto LABEL_45;
                v74 = *(_QWORD *)(v282 + 8 * v75);
                ++v76;
                if (v74)
                  goto LABEL_24;
              }
            }
            v75 = v68 + 5;
          }
        }
      }
    }
LABEL_24:
    v308 = (const __CFString *)((v74 - 1) & v74);
    v309 = v75;
    v71 = __clz(__rbit64(v74)) + (v75 << 6);
LABEL_25:
    v77 = v300;
    v78 = *(_QWORD *)(v300 + 48);
    v79 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v80 = *(_QWORD **)(v79 - 8);
    v81 = (void (*)(void))v80[2];
    v82 = v294;
    ((void (*)(char *, unint64_t, uint64_t))v81)(v294, v78 + v80[9] * v71, v79);
    v83 = *(_QWORD *)(v77 + 56);
    v84 = type metadata accessor for SFAirDropSend.Transfer(0);
    v310 = *(const __CFString **)(v84 - 8);
    v85 = v296;
    data = v310->data;
    ((void (*)(char *, unint64_t, uint64_t))data)(&v82[*(int *)(v296 + 48)], v83 + v310[2].info * v71, v84);
    v87 = (uint64_t)v82;
    v88 = v311;
    sub_10022E718(v87, v311, &qword_1007BA0F8);
    v89 = *(int *)(v85 + 48);
    v90 = v295;
    v91 = (const __CFString *)&v295[v89];
    v92 = v88 + v89;
    ((void (*)(char *, uint64_t, uint64_t))v81)(v295, v88, v79);
    v307 = v91;
    v93 = v91;
    v94 = v84;
    v95 = v79;
    v96 = ((uint64_t (*)(const __CFString *, uint64_t, uint64_t))data)(v93, v92, v94);
    SFAirDrop.TransferIdentifier.id.getter(v96);
    v97 = (void (*)(char *, uint64_t))v80[1];
    v97(v90, v79);
    v98 = &v312[*(int *)(v85 + 48)];
    v81();
    v99 = ((uint64_t (*)(char *, uint64_t, uint64_t))data)(v98, v92, v94);
    v100 = (uint64_t)v298;
    SFAirDropSend.Transfer.activeInterfaceType.getter(v99);
    info = (void (*)(char *, uint64_t))v310->info;
    info(v98, v94);
    v102 = v318;
    a1 = *(_QWORD *)(v318 + 48);
    v103 = v315;
    if (((unsigned int (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))a1)(v100, 1, v315) == 1)
    {
      v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
      v105 = (uint64_t)v297;
      v104(v297, 1, 1, (uint64_t)v103);
      sub_10000D0F0(v100, &qword_1007C5E70);
    }
    else
    {
      v105 = (uint64_t)v297;
      (*(void (**)(char *, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v102 + 32))(v297, v100, v103);
      v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
      v104((char *)v105, 0, 1, (uint64_t)v103);
    }
    v106 = (_QWORD *)v306;
    v97(v312, v95);
    v17 = (uint64_t)v103;
    if (((unsigned int (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))a1)(v105, 1, v103) != 1)
    {
      v115 = *(void (**)(_QWORD, _QWORD, _QWORD))(v102 + 32);
      v115(v293, v105, v103);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v106);
      v322 = (unint64_t)v106;
      v117 = v313;
      v119 = sub_10045C2DC(v313);
      v120 = v106[2];
      v121 = (v118 & 1) == 0;
      v122 = v120 + v121;
      if (__OFADD__(v120, v121))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
        goto LABEL_164;
      }
      a1 = v118;
      if (v106[3] < v122)
      {
        sub_1004682D8(v122, isUniquelyReferenced_nonNull_native);
        v123 = sub_10045C2DC(v117);
        if ((a1 & 1) != (v124 & 1))
        {
LABEL_167:
          result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v316);
          __break(1u);
          return result;
        }
        v119 = v123;
        v125 = (_QWORD *)v322;
        if ((a1 & 1) == 0)
          goto LABEL_37;
LABEL_41:
        v17 = (uint64_t)v315;
        (*(void (**)(unint64_t, char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v102 + 40))(v125[7] + *(_QWORD *)(v102 + 72) * v119, v293, v315);
LABEL_42:
        v306 = v322;
        swift_bridgeObjectRelease(0x8000000000000000);
        v50 = v316;
        (*((void (**)(uint64_t, uint64_t))v319 + 1))(v117, v316);
        v38 = v314;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v125 = (_QWORD *)v322;
        if ((v118 & 1) != 0)
          goto LABEL_41;
      }
      else
      {
        sub_10046FAC0();
        v125 = (_QWORD *)v322;
        if ((a1 & 1) != 0)
          goto LABEL_41;
      }
LABEL_37:
      v125[(v119 >> 6) + 8] |= 1 << v119;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v319 + 2))(v125[6] + *((_QWORD *)v319 + 9) * v119, v117, v316);
      v115(v125[7] + *(_QWORD *)(v102 + 72) * v119, v293, v315);
      v126 = v125[2];
      v127 = __OFADD__(v126, 1);
      v128 = v126 + 1;
      if (v127)
        goto LABEL_160;
      v125[2] = v128;
      v17 = (uint64_t)v315;
      goto LABEL_42;
    }
    sub_10000D0F0(v105, &qword_1007C5E70);
    swift_bridgeObjectRetain(v106);
    v107 = v313;
    a1 = sub_10045C2DC(v313);
    v109 = v108;
    swift_bridgeObjectRelease(v106);
    if ((v109 & 1) != 0)
    {
      v110 = swift_isUniquelyReferenced_nonNull_native(v106);
      v322 = (unint64_t)v106;
      if ((v110 & 1) == 0)
      {
        sub_10046FAC0();
        v106 = (_QWORD *)v322;
      }
      v111 = v106[6] + *((_QWORD *)v319 + 9) * a1;
      v70 = (void (*)(int64_t, uint64_t))*((_QWORD *)v319 + 1);
      v50 = v316;
      v70(v111, v316);
      v112 = v322;
      v113 = *(_QWORD *)(v322 + 56) + *(_QWORD *)(v102 + 72) * a1;
      v114 = *(void (**)(char *, int64_t, uint64_t))(v102 + 32);
      v69 = (uint64_t)v280;
      v114(v280, v113, v17);
      v306 = v112;
      sub_10026C968(a1, v112);
      swift_bridgeObjectRelease(0x8000000000000000);
      v104((char *)v69, 0, 1, v17);
      v38 = v314;
    }
    else
    {
      v69 = (uint64_t)v280;
      v104(v280, 1, 1, v17);
      v70 = (void (*)(int64_t, uint64_t))*((_QWORD *)v319 + 1);
      v38 = v314;
      v50 = v316;
    }
    v70(v107, v50);
    sub_10000D0F0(v69, &qword_1007C5E70);
LABEL_6:
    v67 = (unint64_t)v308;
    info((char *)v307, v94);
    sub_10000D0F0(v311, &qword_1007BA0F8);
    v68 = v309;
  }
LABEL_45:
  swift_release(v300);
  v309 = sub_10021EC20((uint64_t)_swiftEmptyArrayStorage);
  v129 = *(_QWORD *)(v299 + 64);
  v307 = (const __CFString *)(v299 + 64);
  v130 = 1 << *(_BYTE *)(v299 + 32);
  v131 = -1;
  if (v130 < 64)
    v131 = ~(-1 << v130);
  v132 = v131 & v129;
  v308 = (const __CFString *)((unint64_t)(v130 + 63) >> 6);
  swift_bridgeObjectRetain(v299);
  a1 = 0;
  while (1)
  {
    if (v132)
    {
      v311 = (v132 - 1) & v132;
      v312 = (char *)a1;
      v137 = __clz(__rbit64(v132)) | (a1 << 6);
      goto LABEL_69;
    }
    v138 = a1 + 1;
    if (__OFADD__(a1, 1))
      goto LABEL_159;
    if (v138 >= (uint64_t)v308)
      break;
    v139 = *((_QWORD *)&v307->isa + v138);
    v140 = a1 + 1;
    if (!v139)
    {
      v140 = a1 + 2;
      if (a1 + 2 >= (uint64_t)v308)
        break;
      v139 = *((_QWORD *)&v307->isa + v140);
      if (!v139)
      {
        v140 = a1 + 3;
        if (a1 + 3 >= (uint64_t)v308)
          break;
        v139 = *((_QWORD *)&v307->isa + v140);
        if (!v139)
        {
          v140 = a1 + 4;
          if (a1 + 4 >= (uint64_t)v308)
            break;
          v139 = *((_QWORD *)&v307->isa + v140);
          if (!v139)
          {
            v141 = a1 + 5;
            if (a1 + 5 >= (uint64_t)v308)
              break;
            v139 = *((_QWORD *)&v307->isa + v141);
            if (!v139)
            {
              while (1)
              {
                v140 = v141 + 1;
                if (__OFADD__(v141, 1))
                  break;
                if (v140 >= (uint64_t)v308)
                  goto LABEL_88;
                v139 = *((_QWORD *)&v307->isa + v140);
                ++v141;
                if (v139)
                  goto LABEL_68;
              }
LABEL_164:
              __break(1u);
LABEL_165:
              swift_once(&qword_1007B3DB0, sub_1002BAA44);
              goto LABEL_143;
            }
            v140 = a1 + 5;
          }
        }
      }
    }
LABEL_68:
    v311 = (v139 - 1) & v139;
    v312 = (char *)v140;
    v137 = __clz(__rbit64(v139)) + (v140 << 6);
LABEL_69:
    v142 = v299;
    v143 = *(_QWORD *)(v299 + 48);
    v144 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v145 = *(_QWORD **)(v144 - 8);
    v146 = v143 + v145[9] * v137;
    v147 = (void (*)(void))v145[2];
    v148 = v290;
    ((void (*)(char *, uint64_t, uint64_t))v147)(v290, v146, v144);
    v149 = *(_QWORD *)(v142 + 56);
    v150 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v313 = *(_QWORD *)(v150 - 8);
    v151 = v292;
    v152 = *(void (**)(char *, unint64_t, uint64_t))(v313 + 16);
    v152(&v148[*(int *)(v292 + 48)], v149 + *(_QWORD *)(v313 + 72) * v137, v150);
    v153 = (uint64_t)v148;
    v154 = v303;
    sub_10022E718(v153, v303, &qword_1007BA0F0);
    v155 = *(int *)(v151 + 48);
    v156 = v291;
    v157 = (const __CFString *)&v291[v155];
    v158 = v154 + v155;
    ((void (*)(char *, uint64_t, uint64_t))v147)(v291, v154, v144);
    v310 = v157;
    v159 = v157;
    v160 = v150;
    v161 = v144;
    v162 = ((uint64_t (*)(const __CFString *, uint64_t, uint64_t))v152)(v159, v158, v160);
    SFAirDrop.TransferIdentifier.id.getter(v162);
    v163 = (void (*)(char *, uint64_t))v145[1];
    v163(v156, v144);
    v164 = &v304[*(int *)(v151 + 48)];
    v147();
    v165 = ((uint64_t (*)(char *, uint64_t, uint64_t))v152)(v164, v158, v160);
    v166 = (uint64_t)v289;
    SFAirDropReceive.Transfer.activeInterfaceType.getter(v165);
    v167 = *(void (**)(char *, uint64_t))(v313 + 8);
    v167(v164, v160);
    v168 = v318;
    v169 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v318 + 48);
    v17 = (uint64_t)v315;
    if (v169(v166, 1, v315) == 1)
    {
      v170 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v168 + 56);
      v171 = (uint64_t)v288;
      v170(v288, 1, 1, v17);
      sub_10000D0F0(v166, &qword_1007C5E70);
    }
    else
    {
      v171 = (uint64_t)v288;
      (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v288, v166, v17);
      v170 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v168 + 56);
      v170((char *)v171, 0, 1, v17);
    }
    v163(v304, v161);
    v172 = v169(v171, 1, v17);
    a1 = v309;
    if (v172 == 1)
    {
      sub_10000D0F0(v171, &qword_1007C5E70);
      swift_bridgeObjectRetain(a1);
      v173 = sub_10045C2DC(v317);
      v175 = v174;
      swift_bridgeObjectRelease(a1);
      if ((v175 & 1) != 0)
      {
        v313 = (uint64_t)v167;
        v176 = swift_isUniquelyReferenced_nonNull_native(a1);
        v322 = a1;
        v135 = v302;
        if ((v176 & 1) == 0)
        {
          sub_10046FAC0();
          a1 = v322;
        }
        v134 = (void (*)(unint64_t, uint64_t))*((_QWORD *)v319 + 1);
        v136 = v316;
        v134(*(_QWORD *)(a1 + 48) + *((_QWORD *)v319 + 9) * v173, v316);
        v177 = v322;
        v133 = (uint64_t)v279;
        (*(void (**)(char *, unint64_t, uint64_t))(v168 + 32))(v279, *(_QWORD *)(v322 + 56) + *(_QWORD *)(v168 + 72) * v173, v17);
        v309 = v177;
        sub_10026C968(v173, v177);
        swift_bridgeObjectRelease(0x8000000000000000);
        v170((char *)v133, 0, 1, v17);
        v167 = (void (*)(char *, uint64_t))v313;
      }
      else
      {
        v133 = (uint64_t)v279;
        v170(v279, 1, 1, v17);
        v134 = (void (*)(unint64_t, uint64_t))*((_QWORD *)v319 + 1);
        v135 = v302;
        v136 = v316;
      }
      v134(v317, v136);
      sub_10000D0F0(v133, &qword_1007C5E70);
      v38 = v314;
      v50 = v136;
      v73 = (uint64_t)v135;
    }
    else
    {
      v178 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 32);
      v178(v287, v171, v17);
      v179 = swift_isUniquelyReferenced_nonNull_native(a1);
      v322 = a1;
      v181 = sub_10045C2DC(v317);
      v182 = *(_QWORD *)(a1 + 16);
      v183 = (v180 & 1) == 0;
      v184 = v182 + v183;
      if (__OFADD__(v182, v183))
        goto LABEL_157;
      v185 = v180;
      if (*(_QWORD *)(a1 + 24) >= v184)
      {
        if ((v179 & 1) == 0)
          sub_10046FAC0();
      }
      else
      {
        sub_1004682D8(v184, v179);
        v186 = sub_10045C2DC(v317);
        if ((v185 & 1) != (v187 & 1))
          goto LABEL_167;
        v181 = v186;
      }
      v188 = v318;
      v50 = v316;
      v189 = (_QWORD *)v322;
      if ((v185 & 1) != 0)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v318 + 40))(*(_QWORD *)(v322 + 56) + *(_QWORD *)(v318 + 72) * v181, v287, v17);
      }
      else
      {
        *(_QWORD *)(v322 + 8 * (v181 >> 6) + 64) |= 1 << v181;
        (*((void (**)(unint64_t, uint64_t, uint64_t))v319 + 2))(v189[6] + *((_QWORD *)v319 + 9) * v181, v317, v50);
        v178((char *)(v189[7] + *(_QWORD *)(v188 + 72) * v181), (uint64_t)v287, v17);
        v190 = v189[2];
        v127 = __OFADD__(v190, 1);
        v191 = v190 + 1;
        if (v127)
          goto LABEL_161;
        v189[2] = v191;
      }
      v309 = v322;
      swift_bridgeObjectRelease(0x8000000000000000);
      (*((void (**)(uint64_t, uint64_t))v319 + 1))(v317, v50);
      v73 = (uint64_t)v302;
      v38 = v314;
    }
    v132 = v311;
    a1 = (int64_t)v312;
    v167((char *)v310, v160);
    sub_10000D0F0(v303, &qword_1007BA0F0);
  }
LABEL_88:
  swift_release(v299);
  a1 = v306;
  swift_bridgeObjectRetain(v306);
  v192 = sub_1002F51B8(v309, a1);
  v304 = 0;
  v193 = *(_QWORD *)(v192 + 64);
  v309 = v192 + 64;
  v194 = 1 << *(_BYTE *)(v192 + 32);
  v195 = -1;
  if (v194 < 64)
    v195 = ~(-1 << v194);
  v196 = v195 & v193;
  v307 = CFSTR("Send");
  v308 = CFSTR("Receive");
  v310 = CFSTR("InterfaceChanged");
  v311 = (unint64_t)(v194 + 63) >> 6;
  v303 = v311 - 1;
  v312 = (char *)v192;
  swift_bridgeObjectRetain(v192);
  v313 = 0;
  while (2)
  {
    v198 = (uint64_t)v281;
    if (v196)
    {
      v199 = __clz(__rbit64(v196));
      v200 = (v196 - 1) & v196;
      v201 = v199 | (v313 << 6);
      goto LABEL_96;
    }
    v206 = v313 + 1;
    if (__OFADD__(v313, 1))
      goto LABEL_162;
    if (v206 >= v311)
      goto LABEL_117;
    v207 = *(_QWORD *)(v309 + 8 * v206);
    if (!v207)
    {
      v208 = v313 + 2;
      ++v313;
      if (v206 + 1 < v311)
      {
        v207 = *(_QWORD *)(v309 + 8 * v208);
        if (v207)
        {
LABEL_103:
          v206 = v208;
          goto LABEL_100;
        }
        v313 = v206 + 1;
        if (v206 + 2 < v311)
        {
          v207 = *(_QWORD *)(v309 + 8 * (v206 + 2));
          if (v207)
          {
            v206 += 2;
            goto LABEL_100;
          }
          v313 = v206 + 2;
          if (v206 + 3 < v311)
          {
            v207 = *(_QWORD *)(v309 + 8 * (v206 + 3));
            if (v207)
            {
              v206 += 3;
              goto LABEL_100;
            }
            v208 = v206 + 4;
            v313 = v206 + 3;
            if (v206 + 4 < v311)
            {
              v207 = *(_QWORD *)(v309 + 8 * v208);
              if (!v207)
              {
                while (1)
                {
                  v206 = v208 + 1;
                  if (__OFADD__(v208, 1))
                    break;
                  if (v206 >= v311)
                  {
                    v313 = v303;
                    goto LABEL_117;
                  }
                  v207 = *(_QWORD *)(v309 + 8 * v206);
                  ++v208;
                  if (v207)
                    goto LABEL_100;
                }
                __break(1u);
                goto LABEL_167;
              }
              goto LABEL_103;
            }
          }
        }
      }
LABEL_117:
      v209 = sub_100008384(&qword_1007BA100);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v198, 1, 1, v209);
      v200 = 0;
      goto LABEL_118;
    }
LABEL_100:
    v200 = (v207 - 1) & v207;
    v201 = __clz(__rbit64(v207)) + (v206 << 6);
    v313 = v206;
LABEL_96:
    v202 = v312;
    (*((void (**)(char *, uint64_t, uint64_t))v319 + 2))(v281, *((_QWORD *)v312 + 6) + *((_QWORD *)v319 + 9) * v201, v50);
    v203 = v318;
    v204 = *((_QWORD *)v202 + 7) + *(_QWORD *)(v318 + 72) * v201;
    v205 = sub_100008384(&qword_1007BA100);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v198 + *(int *)(v205 + 48), v204, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 56))(v198, 0, 1, v205);
LABEL_118:
    sub_10022E718(v198, v73, &qword_1007BA0E8);
    v210 = sub_100008384(&qword_1007BA100);
    v211 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v210 - 8) + 48);
    if (v211(v73, 1, v210) != 1)
    {
      v212 = v73 + *(int *)(v210 + 48);
      v213 = v301;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v319 + 4))(v301, v73, v50);
      v214 = v318;
      v215 = *(void (**)(char *, uint64_t, uint64_t))(v318 + 32);
      v215(v305, v212, v17);
      v216 = *(_QWORD *)(v286 + 64);
      v217 = *(_QWORD *)(v216 + 16);
      v317 = v200;
      if (v217)
      {
        swift_bridgeObjectRetain(v216);
        v218 = sub_10045C2DC(v213);
        v214 = v318;
        if ((v219 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v318 + 16))(v38, *(_QWORD *)(v216 + 56) + *(_QWORD *)(v318 + 72) * v218, v17);
          v220 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v214 + 56);
          v221 = v38;
          v222 = 0;
        }
        else
        {
          v220 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v318 + 56);
          v221 = v38;
          v222 = 1;
        }
        v315 = v220;
        v220(v221, v222, 1, v17);
        swift_bridgeObjectRelease(v216);
        a1 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v38, 1, v17) != 1;
      }
      else
      {
        v315 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v214 + 56);
        v315(v38, 1, 1, v17);
        a1 = 0;
      }
      v223 = v284;
      sub_1002BDEC0((uint64_t)v38, v284);
      v224 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
      v225 = v285;
      v224(v285, v305, v17);
      if (!(_DWORD)a1)
      {
        v197 = *(void (**)(char *, uint64_t))(v214 + 8);
        v197(v225, v17);
        sub_10000D0F0(v223, &qword_1007C5E70);
        goto LABEL_92;
      }
      v226 = (uint64_t)v277;
      v224(v277, v225, v17);
      v315(v226, 0, 1, v17);
      v227 = v278;
      a1 = v278 + *(int *)(v276 + 48);
      sub_1002BDEC0(v223, v278);
      sub_1002BDEC0(v226, a1);
      v228 = *(unsigned int (**)(int64_t, uint64_t, uint64_t))(v214 + 48);
      if (v228(v227, 1, v17) == 1)
      {
        sub_10000D0F0(v226, &qword_1007C5E70);
        v197 = *(void (**)(char *, uint64_t))(v214 + 8);
        v197(v225, v17);
        sub_10000D0F0(v223, &qword_1007C5E70);
        if (v228(a1, 1, v17) == 1)
        {
          sub_10000D0F0(v278, &qword_1007C5E70);
          v73 = (uint64_t)v302;
          v38 = v314;
LABEL_92:
          v50 = v316;
LABEL_93:
          v197(v305, v17);
          (*((void (**)(uint64_t, uint64_t))v319 + 1))(v301, v50);
          sub_10000D0F0((uint64_t)v38, &qword_1007C5E70);
          v196 = v317;
          continue;
        }
        v230 = v278;
LABEL_132:
        v38 = v314;
        v50 = v316;
        sub_10000D0F0(v230, &qword_1007BA0E0);
      }
      else
      {
        v229 = v274;
        sub_1002BDEC0(v227, v274);
        if (v228(a1, 1, v17) == 1)
        {
          sub_10000D0F0((uint64_t)v277, &qword_1007C5E70);
          v197 = *(void (**)(char *, uint64_t))(v318 + 8);
          v197(v285, v17);
          sub_10000D0F0(v284, &qword_1007C5E70);
          v197((char *)v229, v17);
          v230 = v227;
          goto LABEL_132;
        }
        v242 = v273;
        v215(v273, a1, v17);
        v243 = sub_100220D78(&qword_1007BA108, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType, (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
        a1 = dispatch thunk of static Equatable.== infix(_:_:)(v229, v242, v17, v243);
        v197 = *(void (**)(char *, uint64_t))(v318 + 8);
        v197(v242, v17);
        sub_10000D0F0((uint64_t)v277, &qword_1007C5E70);
        v197(v285, v17);
        sub_10000D0F0(v284, &qword_1007C5E70);
        v197((char *)v229, v17);
        sub_10000D0F0(v227, &qword_1007C5E70);
        v73 = (uint64_t)v302;
        v38 = v314;
        v50 = v316;
        if ((a1 & 1) != 0)
          goto LABEL_93;
      }
      v231 = v306;
      if (*(_QWORD *)(v306 + 16) && (v232 = sub_10045C2DC(v301), (v233 & 1) != 0))
      {
        v224(v275, (char *)(*(_QWORD *)(v231 + 56) + *(_QWORD *)(v318 + 72) * v232), v17);
        v234 = 0;
        v235 = (__CFString *)v307;
      }
      else
      {
        v234 = 1;
        v235 = (__CFString *)v308;
      }
      v236 = (uint64_t)v275;
      v315(v275, v234, 1, v17);
      sub_10000D0F0(v236, &qword_1007C5E70);
      a1 = *(_QWORD *)(v286 + 56);
      v237 = v235;
      swift_retain(a1);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      SFNWInterfaceType.description.getter();
      v240 = v239;
      v241 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v240);
      sub_100045470((uint64_t)v237, (uint64_t)v310, isa, (uint64_t)v241, 0.0);
      swift_release(a1);

      v73 = (uint64_t)v302;
      goto LABEL_93;
    }
    break;
  }
  swift_bridgeObjectRelease(v306);
  v244 = v312;
  swift_release(v312);
  v245 = swift_bridgeObjectRetain(v244);
  a1 = sub_1002F7D10(v245);
  swift_bridgeObjectRelease(v244);
  v246 = *(_QWORD *)(v286 + 64);
  v247 = swift_bridgeObjectRetain(v246);
  v248 = v272;
  sub_1002F115C(v247, v272);
  swift_bridgeObjectRelease(v246);
  v249 = v211(v248, 1, v210);
  sub_10000D0F0(v248, &qword_1007BA0E8);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v249 != 1)
    {
      swift_release(a1);
      goto LABEL_155;
    }
    if (qword_1007B3DB0 != -1)
      goto LABEL_165;
LABEL_143:
    v250 = type metadata accessor for Logger(0);
    sub_100221DF8(v250, (uint64_t)qword_1007B87B8);
    v251 = swift_retain(a1);
    v252 = Logger.logObject.getter(v251);
    v253 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v252, v253))
    {
      v254 = (uint8_t *)swift_slowAlloc(12, -1);
      v255 = swift_slowAlloc(32, -1);
      v322 = v255;
      *(_DWORD *)v254 = 136315138;
      v319 = v254 + 4;
      v256 = swift_retain(a1);
      v257 = sub_1002F0E88(v256);
      swift_release(a1);
      v320 = v257;
      v258 = sub_100008384((uint64_t *)&unk_1007BD6A0);
      v259 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
      v260 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v258, v259);
      v262 = v261;
      swift_bridgeObjectRelease(v257);
      v320 = sub_100228BD8(v260, v262, (uint64_t *)&v322);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v320, v321, v319);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v262);
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "Transfers using cellular: %s", v254, 0xCu);
      swift_arrayDestroy(v255, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v255, -1, -1);
      swift_slowDealloc(v254, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2);
    }
    v268 = 1;
  }
  else
  {
    swift_release(a1);
    if (v249 == 1)
      goto LABEL_155;
    if (qword_1007B3DB0 != -1)
      swift_once(&qword_1007B3DB0, sub_1002BAA44);
    v263 = type metadata accessor for Logger(0);
    v264 = sub_100221DF8(v263, (uint64_t)qword_1007B87B8);
    v265 = Logger.logObject.getter(v264);
    v266 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v265, v266))
    {
      v267 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v267 = 0;
      _os_log_impl((void *)&_mh_execute_header, v265, v266, "Transfers stopped using cellular", v267, 2u);
      swift_slowDealloc(v267, -1, -1);
    }

    v268 = 0;
  }
  sub_100502CB0(v268);
LABEL_155:
  v269 = *(_QWORD *)(v286 + 64);
  *(_QWORD *)(v286 + 64) = v312;
  return swift_bridgeObjectRelease(v269);
}

void sub_1002F34C4(int64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(int64_t, uint64_t);
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  void (*v81)(void);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *data;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  const char *v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*info)(char *, uint64_t);
  uint64_t v102;
  void (*v103)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v104)(char *, uint64_t, uint64_t, _QWORD);
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  int64_t v111;
  const char *v112;
  int64_t v113;
  void (*v114)(char *, int64_t, uint64_t);
  __n128 v115;
  void (*v116)(_QWORD, _QWORD, _QWORD);
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v118;
  int64_t v119;
  unint64_t v120;
  uint64_t v121;
  _BOOL8 v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  _QWORD *v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  void (*v136)(unint64_t, uint64_t);
  char *v137;
  uint64_t v138;
  unint64_t v139;
  int64_t v140;
  unint64_t v141;
  int64_t v142;
  int64_t v143;
  const char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  void (*v149)(void);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, unint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  const __CFString *v159;
  uint64_t v160;
  const __CFString *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t);
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  unsigned int (*v171)(_QWORD, _QWORD, _QWORD);
  void (*v172)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v173;
  unsigned int v174;
  unint64_t v175;
  char v176;
  char v177;
  char v178;
  uint64_t v179;
  __n128 v180;
  void (*v181)(char *, uint64_t, uint64_t);
  uint64_t v182;
  char v183;
  unint64_t v184;
  uint64_t v185;
  _BOOL8 v186;
  uint64_t v187;
  char v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  __n128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  void (*v201)(char *, uint64_t);
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int (*v215)(uint64_t, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(char *, uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  void (*v224)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v225;
  uint64_t v226;
  __n128 v227;
  uint64_t v228;
  void (*v229)(char *, char *, uint64_t);
  char *v230;
  uint64_t v231;
  uint64_t v232;
  unsigned int (*v233)(int64_t, uint64_t, uint64_t);
  uint64_t v234;
  uint64_t v235;
  const char *v236;
  unint64_t v237;
  char v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  id v242;
  Class isa;
  const char *v244;
  const char *v245;
  NSString v246;
  char *v247;
  uint64_t v248;
  const char *v249;
  uint64_t v250;
  double v251;
  const char *v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  int v256;
  uint64_t v257;
  uint64_t v258;
  NSObject *v259;
  os_log_type_t v260;
  uint8_t *v261;
  uint64_t v262;
  uint64_t v263;
  const char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  const char *v268;
  const char *v269;
  uint64_t v270;
  uint64_t v271;
  NSObject *v272;
  os_log_type_t v273;
  uint8_t *v274;
  char v275;
  const char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  char *v287;
  int64_t v288;
  int64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  char *v297;
  uint64_t v298;
  char *v299;
  char *v300;
  char *v301;
  uint64_t v302;
  char *v303;
  char *v304;
  const char *v305;
  int64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  char *v310;
  char *v311;
  const char *v312;
  const char *v313;
  const __CFString *v314;
  unint64_t v315;
  const __CFString *v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  char *v320;
  void (*v321)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint8_t *v325;
  uint64_t v326;
  char v327[8];
  unint64_t v328;

  v305 = a2;
  v282 = sub_100008384(&qword_1007BA0E0);
  __chkstk_darwin(v282);
  v284 = (uint64_t)&v277 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007BA0E8);
  v5 = __chkstk_darwin(v4);
  v278 = (uint64_t)&v277 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v287 = (char *)&v277 - v8;
  __chkstk_darwin(v7);
  v308 = (char *)&v277 - v9;
  v298 = sub_100008384(&qword_1007BA0F0);
  v10 = __chkstk_darwin(v298);
  v310 = (char *)&v277 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v297 = (char *)&v277 - v13;
  v14 = __chkstk_darwin(v12);
  v309 = (uint64_t)&v277 - v15;
  __chkstk_darwin(v14);
  v296 = (char *)&v277 - v16;
  v17 = type metadata accessor for SFNWInterfaceType(0);
  v324 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v279 = (char *)&v277 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v291 = (char *)&v277 - v21;
  v22 = __chkstk_darwin(v20);
  v311 = (char *)&v277 - v23;
  v24 = __chkstk_darwin(v22);
  v293 = (char *)&v277 - v25;
  __chkstk_darwin(v24);
  v299 = (char *)&v277 - v26;
  v27 = sub_100008384(&qword_1007C5E70);
  v28 = __chkstk_darwin(v27);
  v281 = (char *)&v277 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v280 = (uint64_t)&v277 - v31;
  v32 = __chkstk_darwin(v30);
  v283 = (char *)&v277 - v33;
  v34 = __chkstk_darwin(v32);
  v290 = (uint64_t)&v277 - v35;
  v36 = __chkstk_darwin(v34);
  v38 = (char *)&v277 - v37;
  v39 = __chkstk_darwin(v36);
  v285 = (char *)&v277 - v40;
  v41 = __chkstk_darwin(v39);
  v295 = (char *)&v277 - v42;
  v43 = __chkstk_darwin(v41);
  v294 = (char *)&v277 - v44;
  v45 = __chkstk_darwin(v43);
  v286 = (char *)&v277 - v46;
  v47 = __chkstk_darwin(v45);
  v304 = (char *)&v277 - v48;
  __chkstk_darwin(v47);
  v303 = (char *)&v277 - v49;
  v50 = type metadata accessor for UUID(0);
  v325 = *(uint8_t **)(v50 - 8);
  v51 = __chkstk_darwin(v50);
  v307 = (uint64_t)&v277 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v51);
  v323 = (uint64_t)&v277 - v54;
  __chkstk_darwin(v53);
  v56 = (char *)&v277 - v55;
  v302 = sub_100008384(&qword_1007BA0F8);
  v57 = __chkstk_darwin(v302);
  v318 = (char *)&v277 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __chkstk_darwin(v57);
  v301 = (char *)&v277 - v60;
  v61 = __chkstk_darwin(v59);
  v317 = (uint64_t)&v277 - v62;
  __chkstk_darwin(v61);
  v300 = (char *)&v277 - v63;
  v312 = (const char *)sub_10021EC20((uint64_t)_swiftEmptyArrayStorage);
  v64 = *(_QWORD *)(a1 + 64);
  v288 = a1 + 64;
  v65 = 1 << *(_BYTE *)(a1 + 32);
  v66 = -1;
  if (v65 < 64)
    v66 = ~(-1 << v65);
  v67 = v66 & v64;
  v289 = (unint64_t)(v65 + 63) >> 6;
  v306 = a1;
  swift_bridgeObjectRetain((const char *)a1);
  v68 = 0;
  v320 = v38;
  v321 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v17;
  v322 = v50;
  v319 = (uint64_t)v56;
  while (1)
  {
    if (v67)
    {
      v314 = (const __CFString *)((v67 - 1) & v67);
      v315 = v68;
      v71 = __clz(__rbit64(v67)) | (v68 << 6);
      goto LABEL_25;
    }
    v72 = v68 + 1;
    if (__OFADD__(v68, 1))
      goto LABEL_158;
    v73 = (uint64_t)v308;
    if (v72 >= v289)
      break;
    v74 = *(_QWORD *)(v288 + 8 * v72);
    v75 = v68 + 1;
    if (!v74)
    {
      v75 = v68 + 2;
      if ((uint64_t)(v68 + 2) >= v289)
        break;
      v74 = *(_QWORD *)(v288 + 8 * v75);
      if (!v74)
      {
        v75 = v68 + 3;
        if ((uint64_t)(v68 + 3) >= v289)
          break;
        v74 = *(_QWORD *)(v288 + 8 * v75);
        if (!v74)
        {
          v75 = v68 + 4;
          if ((uint64_t)(v68 + 4) >= v289)
            break;
          v74 = *(_QWORD *)(v288 + 8 * v75);
          if (!v74)
          {
            v76 = v68 + 5;
            if ((uint64_t)(v68 + 5) >= v289)
              break;
            v74 = *(_QWORD *)(v288 + 8 * v76);
            if (!v74)
            {
              while (1)
              {
                v75 = v76 + 1;
                if (__OFADD__(v76, 1))
                  goto LABEL_163;
                if (v75 >= v289)
                  goto LABEL_45;
                v74 = *(_QWORD *)(v288 + 8 * v75);
                ++v76;
                if (v74)
                  goto LABEL_24;
              }
            }
            v75 = v68 + 5;
          }
        }
      }
    }
LABEL_24:
    v314 = (const __CFString *)((v74 - 1) & v74);
    v315 = v75;
    v71 = __clz(__rbit64(v74)) + (v75 << 6);
LABEL_25:
    v77 = v306;
    v78 = *(_QWORD *)(v306 + 48);
    v79 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v80 = *(_QWORD **)(v79 - 8);
    v81 = (void (*)(void))v80[2];
    v82 = v300;
    ((void (*)(char *, unint64_t, uint64_t))v81)(v300, v78 + v80[9] * v71, v79);
    v83 = *(_QWORD *)(v77 + 56);
    v84 = type metadata accessor for SFAirDropSend.Transfer(0);
    v316 = *(const __CFString **)(v84 - 8);
    v85 = v302;
    data = v316->data;
    ((void (*)(char *, unint64_t, uint64_t))data)(&v82[*(int *)(v302 + 48)], v83 + v316[2].info * v71, v84);
    v87 = (uint64_t)v82;
    v88 = v317;
    sub_10022E718(v87, v317, &qword_1007BA0F8);
    v89 = *(int *)(v85 + 48);
    v90 = v301;
    v91 = &v301[v89];
    v92 = v88 + v89;
    ((void (*)(char *, uint64_t, uint64_t))v81)(v301, v88, v79);
    v313 = v91;
    v93 = v91;
    v94 = v84;
    v95 = v79;
    v96 = ((uint64_t (*)(const char *, uint64_t, uint64_t))data)(v93, v92, v94);
    SFAirDrop.TransferIdentifier.id.getter(v96);
    v97 = (void (*)(char *, uint64_t))v80[1];
    v97(v90, v79);
    v98 = &v318[*(int *)(v85 + 48)];
    v81();
    v99 = ((uint64_t (*)(char *, uint64_t, uint64_t))data)(v98, v92, v94);
    v100 = (uint64_t)v304;
    SFAirDropSend.Transfer.activeInterfaceType.getter(v99);
    info = (void (*)(char *, uint64_t))v316->info;
    info(v98, v94);
    v102 = v324;
    a1 = *(_QWORD *)(v324 + 48);
    v103 = v321;
    if (((unsigned int (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))a1)(v100, 1, v321) == 1)
    {
      v104 = *(void (**)(char *, uint64_t, uint64_t, _QWORD))(v102 + 56);
      v105 = (uint64_t)v303;
      v104(v303, 1, 1, v103);
      sub_10000D0F0(v100, &qword_1007C5E70);
    }
    else
    {
      v105 = (uint64_t)v303;
      (*(void (**)(char *, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v102 + 32))(v303, v100, v103);
      v104 = *(void (**)(char *, uint64_t, uint64_t, _QWORD))(v102 + 56);
      v104((char *)v105, 0, 1, v103);
    }
    v106 = v312;
    v97(v318, v95);
    v17 = (uint64_t)v103;
    if (((unsigned int (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))a1)(v105, 1, v103) != 1)
    {
      v116 = *(void (**)(_QWORD, _QWORD, _QWORD))(v102 + 32);
      v116(v299, v105, v103);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v106);
      v328 = (unint64_t)v106;
      v118 = v319;
      v120 = sub_10045C2DC(v319);
      v121 = *((_QWORD *)v106 + 2);
      v122 = (v119 & 1) == 0;
      v123 = v121 + v122;
      if (__OFADD__(v121, v122))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
        goto LABEL_164;
      }
      a1 = v119;
      if (*((_QWORD *)v106 + 3) < v123)
      {
        sub_1004682D8(v123, isUniquelyReferenced_nonNull_native);
        v124 = sub_10045C2DC(v118);
        if ((a1 & 1) != (v125 & 1))
        {
LABEL_167:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v322);
          __break(1u);
          return;
        }
        v120 = v124;
        v126 = (_QWORD *)v328;
        if ((a1 & 1) == 0)
          goto LABEL_37;
LABEL_41:
        v17 = (uint64_t)v321;
        (*(void (**)(unint64_t, char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v102 + 40))(v126[7] + *(_QWORD *)(v102 + 72) * v120, v299, v321);
LABEL_42:
        v312 = (const char *)v328;
        v130 = swift_bridgeObjectRelease((const char *)0x8000000000000000);
        v50 = v322;
        (*((void (**)(uint64_t, uint64_t, __n128))v325 + 1))(v118, v322, v130);
        v38 = v320;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v126 = (_QWORD *)v328;
        if ((v119 & 1) != 0)
          goto LABEL_41;
      }
      else
      {
        sub_10046FAC0();
        v126 = (_QWORD *)v328;
        if ((a1 & 1) != 0)
          goto LABEL_41;
      }
LABEL_37:
      v126[(v120 >> 6) + 8] |= 1 << v120;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v325 + 2))(v126[6] + *((_QWORD *)v325 + 9) * v120, v118, v322);
      v116(v126[7] + *(_QWORD *)(v102 + 72) * v120, v299, v321);
      v127 = v126[2];
      v128 = __OFADD__(v127, 1);
      v129 = v127 + 1;
      if (v128)
        goto LABEL_160;
      v126[2] = v129;
      v17 = (uint64_t)v321;
      goto LABEL_42;
    }
    sub_10000D0F0(v105, &qword_1007C5E70);
    swift_bridgeObjectRetain(v106);
    v107 = v319;
    a1 = sub_10045C2DC(v319);
    v109 = v108;
    swift_bridgeObjectRelease(v106);
    if ((v109 & 1) != 0)
    {
      v110 = swift_isUniquelyReferenced_nonNull_native(v106);
      v328 = (unint64_t)v106;
      if ((v110 & 1) == 0)
      {
        sub_10046FAC0();
        v106 = (const char *)v328;
      }
      v111 = *((_QWORD *)v106 + 6) + *((_QWORD *)v325 + 9) * a1;
      v70 = (void (*)(int64_t, uint64_t))*((_QWORD *)v325 + 1);
      v50 = v322;
      v70(v111, v322);
      v112 = (const char *)v328;
      v113 = *(_QWORD *)(v328 + 56) + *(_QWORD *)(v102 + 72) * a1;
      v114 = *(void (**)(char *, int64_t, uint64_t))(v102 + 32);
      v69 = (uint64_t)v286;
      v114(v286, v113, v17);
      v312 = v112;
      sub_10026C968(a1, (uint64_t)v112);
      v115 = swift_bridgeObjectRelease((const char *)0x8000000000000000);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v104)(v69, 0, 1, v17, v115);
      v38 = v320;
    }
    else
    {
      v69 = (uint64_t)v286;
      v104(v286, 1, 1, v17);
      v70 = (void (*)(int64_t, uint64_t))*((_QWORD *)v325 + 1);
      v38 = v320;
      v50 = v322;
    }
    v70(v107, v50);
    sub_10000D0F0(v69, &qword_1007C5E70);
LABEL_6:
    v67 = (unint64_t)v314;
    info((char *)v313, v94);
    sub_10000D0F0(v317, &qword_1007BA0F8);
    v68 = v315;
  }
LABEL_45:
  swift_release(v306);
  v315 = sub_10021EC20((uint64_t)_swiftEmptyArrayStorage);
  v131 = *((_QWORD *)v305 + 8);
  v313 = v305 + 64;
  v132 = 1 << v305[32];
  v133 = -1;
  if (v132 < 64)
    v133 = ~(-1 << v132);
  v134 = v133 & v131;
  v314 = (const __CFString *)((unint64_t)(v132 + 63) >> 6);
  swift_bridgeObjectRetain(v305);
  a1 = 0;
  while (1)
  {
    if (v134)
    {
      v317 = (v134 - 1) & v134;
      v318 = (char *)a1;
      v139 = __clz(__rbit64(v134)) | (a1 << 6);
      goto LABEL_69;
    }
    v140 = a1 + 1;
    if (__OFADD__(a1, 1))
      goto LABEL_159;
    if (v140 >= (uint64_t)v314)
      break;
    v141 = *(_QWORD *)&v313[8 * v140];
    v142 = a1 + 1;
    if (!v141)
    {
      v142 = a1 + 2;
      if (a1 + 2 >= (uint64_t)v314)
        break;
      v141 = *(_QWORD *)&v313[8 * v142];
      if (!v141)
      {
        v142 = a1 + 3;
        if (a1 + 3 >= (uint64_t)v314)
          break;
        v141 = *(_QWORD *)&v313[8 * v142];
        if (!v141)
        {
          v142 = a1 + 4;
          if (a1 + 4 >= (uint64_t)v314)
            break;
          v141 = *(_QWORD *)&v313[8 * v142];
          if (!v141)
          {
            v143 = a1 + 5;
            if (a1 + 5 >= (uint64_t)v314)
              break;
            v141 = *(_QWORD *)&v313[8 * v143];
            if (!v141)
            {
              while (1)
              {
                v142 = v143 + 1;
                if (__OFADD__(v143, 1))
                  break;
                if (v142 >= (uint64_t)v314)
                  goto LABEL_88;
                v141 = *(_QWORD *)&v313[8 * v142];
                ++v143;
                if (v141)
                  goto LABEL_68;
              }
LABEL_164:
              __break(1u);
LABEL_165:
              swift_once(&qword_1007B3DB0, sub_1002BAA44);
              goto LABEL_143;
            }
            v142 = a1 + 5;
          }
        }
      }
    }
LABEL_68:
    v317 = (v141 - 1) & v141;
    v318 = (char *)v142;
    v139 = __clz(__rbit64(v141)) + (v142 << 6);
LABEL_69:
    v144 = v305;
    v145 = *((_QWORD *)v305 + 6);
    v146 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v147 = *(_QWORD **)(v146 - 8);
    v148 = v145 + v147[9] * v139;
    v149 = (void (*)(void))v147[2];
    v150 = v296;
    ((void (*)(char *, uint64_t, uint64_t))v149)(v296, v148, v146);
    v151 = *((_QWORD *)v144 + 7);
    v152 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v319 = *(_QWORD *)(v152 - 8);
    v153 = v298;
    v154 = *(void (**)(char *, unint64_t, uint64_t))(v319 + 16);
    v154(&v150[*(int *)(v298 + 48)], v151 + *(_QWORD *)(v319 + 72) * v139, v152);
    v155 = (uint64_t)v150;
    v156 = v309;
    sub_10022E718(v155, v309, &qword_1007BA0F0);
    v157 = *(int *)(v153 + 48);
    v158 = v297;
    v159 = (const __CFString *)&v297[v157];
    v160 = v156 + v157;
    ((void (*)(char *, uint64_t, uint64_t))v149)(v297, v156, v146);
    v316 = v159;
    v161 = v159;
    v162 = v152;
    v163 = v146;
    v164 = ((uint64_t (*)(const __CFString *, uint64_t, uint64_t))v154)(v161, v160, v162);
    SFAirDrop.TransferIdentifier.id.getter(v164);
    v165 = (void (*)(char *, uint64_t))v147[1];
    v165(v158, v146);
    v166 = &v310[*(int *)(v153 + 48)];
    v149();
    v167 = ((uint64_t (*)(char *, uint64_t, uint64_t))v154)(v166, v160, v162);
    v168 = (uint64_t)v295;
    SFAirDropReceive.Transfer.activeInterfaceType.getter(v167);
    v169 = *(void (**)(char *, uint64_t))(v319 + 8);
    v169(v166, v162);
    v170 = v324;
    v171 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v324 + 48);
    v17 = (uint64_t)v321;
    if (v171(v168, 1, v321) == 1)
    {
      v172 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v170 + 56);
      v173 = (uint64_t)v294;
      v172(v294, 1, 1, v17);
      sub_10000D0F0(v168, &qword_1007C5E70);
    }
    else
    {
      v173 = (uint64_t)v294;
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v294, v168, v17);
      v172 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v170 + 56);
      v172((char *)v173, 0, 1, v17);
    }
    v165(v310, v163);
    v174 = v171(v173, 1, v17);
    a1 = v315;
    if (v174 == 1)
    {
      sub_10000D0F0(v173, &qword_1007C5E70);
      swift_bridgeObjectRetain((const char *)a1);
      v175 = sub_10045C2DC(v323);
      v177 = v176;
      swift_bridgeObjectRelease((const char *)a1);
      if ((v177 & 1) != 0)
      {
        v319 = (uint64_t)v169;
        v178 = swift_isUniquelyReferenced_nonNull_native(a1);
        v328 = a1;
        v137 = v308;
        if ((v178 & 1) == 0)
        {
          sub_10046FAC0();
          a1 = v328;
        }
        v136 = (void (*)(unint64_t, uint64_t))*((_QWORD *)v325 + 1);
        v138 = v322;
        v136(*(_QWORD *)(a1 + 48) + *((_QWORD *)v325 + 9) * v175, v322);
        v179 = v328;
        v135 = (uint64_t)v285;
        (*(void (**)(char *, unint64_t, uint64_t))(v170 + 32))(v285, *(_QWORD *)(v328 + 56) + *(_QWORD *)(v170 + 72) * v175, v17);
        v315 = v179;
        sub_10026C968(v175, v179);
        v180 = swift_bridgeObjectRelease((const char *)0x8000000000000000);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v172)(v135, 0, 1, v17, v180);
        v169 = (void (*)(char *, uint64_t))v319;
      }
      else
      {
        v135 = (uint64_t)v285;
        v172(v285, 1, 1, v17);
        v136 = (void (*)(unint64_t, uint64_t))*((_QWORD *)v325 + 1);
        v137 = v308;
        v138 = v322;
      }
      v136(v323, v138);
      sub_10000D0F0(v135, &qword_1007C5E70);
      v38 = v320;
      v50 = v138;
      v73 = (uint64_t)v137;
    }
    else
    {
      v181 = *(void (**)(char *, uint64_t, uint64_t))(v170 + 32);
      v181(v293, v173, v17);
      v182 = swift_isUniquelyReferenced_nonNull_native(a1);
      v328 = a1;
      v184 = sub_10045C2DC(v323);
      v185 = *(_QWORD *)(a1 + 16);
      v186 = (v183 & 1) == 0;
      v187 = v185 + v186;
      if (__OFADD__(v185, v186))
        goto LABEL_157;
      v188 = v183;
      if (*(_QWORD *)(a1 + 24) >= v187)
      {
        if ((v182 & 1) == 0)
          sub_10046FAC0();
      }
      else
      {
        sub_1004682D8(v187, v182);
        v189 = sub_10045C2DC(v323);
        if ((v188 & 1) != (v190 & 1))
          goto LABEL_167;
        v184 = v189;
      }
      v191 = v324;
      v50 = v322;
      v192 = (_QWORD *)v328;
      if ((v188 & 1) != 0)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v324 + 40))(*(_QWORD *)(v328 + 56) + *(_QWORD *)(v324 + 72) * v184, v293, v17);
      }
      else
      {
        *(_QWORD *)(v328 + 8 * (v184 >> 6) + 64) |= 1 << v184;
        (*((void (**)(unint64_t, uint64_t, uint64_t))v325 + 2))(v192[6] + *((_QWORD *)v325 + 9) * v184, v323, v50);
        v181((char *)(v192[7] + *(_QWORD *)(v191 + 72) * v184), (uint64_t)v293, v17);
        v193 = v192[2];
        v128 = __OFADD__(v193, 1);
        v194 = v193 + 1;
        if (v128)
          goto LABEL_161;
        v192[2] = v194;
      }
      v315 = v328;
      v195 = swift_bridgeObjectRelease((const char *)0x8000000000000000);
      (*((void (**)(uint64_t, uint64_t, __n128))v325 + 1))(v323, v50, v195);
      v73 = (uint64_t)v308;
      v38 = v320;
    }
    v134 = v317;
    a1 = (int64_t)v318;
    v169((char *)v316, v162);
    sub_10000D0F0(v309, &qword_1007BA0F0);
  }
LABEL_88:
  swift_release(v305);
  a1 = (int64_t)v312;
  swift_bridgeObjectRetain(v312);
  v196 = sub_1002F51B8(v315, a1);
  v310 = 0;
  v197 = *(_QWORD *)(v196 + 64);
  v315 = v196 + 64;
  v198 = 1 << *(_BYTE *)(v196 + 32);
  v199 = -1;
  if (v198 < 64)
    v199 = ~(-1 << v198);
  v200 = v199 & v197;
  v313 = CFSTR("Send");
  v314 = CFSTR("Receive");
  v316 = CFSTR("InterfaceChanged");
  v317 = (unint64_t)(v198 + 63) >> 6;
  v309 = v317 - 1;
  v318 = (char *)v196;
  swift_bridgeObjectRetain((const char *)v196);
  v319 = 0;
  while (2)
  {
    v202 = (uint64_t)v287;
    if (v200)
    {
      v203 = __clz(__rbit64(v200));
      v204 = (v200 - 1) & v200;
      v205 = v203 | (v319 << 6);
      goto LABEL_96;
    }
    v210 = v319 + 1;
    if (__OFADD__(v319, 1))
      goto LABEL_162;
    if (v210 >= v317)
      goto LABEL_117;
    v211 = *(_QWORD *)(v315 + 8 * v210);
    if (!v211)
    {
      v212 = v319 + 2;
      ++v319;
      if (v210 + 1 < v317)
      {
        v211 = *(_QWORD *)(v315 + 8 * v212);
        if (v211)
        {
LABEL_103:
          v210 = v212;
          goto LABEL_100;
        }
        v319 = v210 + 1;
        if (v210 + 2 < v317)
        {
          v211 = *(_QWORD *)(v315 + 8 * (v210 + 2));
          if (v211)
          {
            v210 += 2;
            goto LABEL_100;
          }
          v319 = v210 + 2;
          if (v210 + 3 < v317)
          {
            v211 = *(_QWORD *)(v315 + 8 * (v210 + 3));
            if (v211)
            {
              v210 += 3;
              goto LABEL_100;
            }
            v212 = v210 + 4;
            v319 = v210 + 3;
            if (v210 + 4 < v317)
            {
              v211 = *(_QWORD *)(v315 + 8 * v212);
              if (!v211)
              {
                while (1)
                {
                  v210 = v212 + 1;
                  if (__OFADD__(v212, 1))
                    break;
                  if (v210 >= v317)
                  {
                    v319 = v309;
                    goto LABEL_117;
                  }
                  v211 = *(_QWORD *)(v315 + 8 * v210);
                  ++v212;
                  if (v211)
                    goto LABEL_100;
                }
                __break(1u);
                goto LABEL_167;
              }
              goto LABEL_103;
            }
          }
        }
      }
LABEL_117:
      v213 = sub_100008384(&qword_1007BA100);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 56))(v202, 1, 1, v213);
      v204 = 0;
      goto LABEL_118;
    }
LABEL_100:
    v204 = (v211 - 1) & v211;
    v205 = __clz(__rbit64(v211)) + (v210 << 6);
    v319 = v210;
LABEL_96:
    v206 = v318;
    (*((void (**)(char *, uint64_t, uint64_t))v325 + 2))(v287, *((_QWORD *)v318 + 6) + *((_QWORD *)v325 + 9) * v205, v50);
    v207 = v324;
    v208 = *((_QWORD *)v206 + 7) + *(_QWORD *)(v324 + 72) * v205;
    v209 = sub_100008384(&qword_1007BA100);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v202 + *(int *)(v209 + 48), v208, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v202, 0, 1, v209);
LABEL_118:
    sub_10022E718(v202, v73, &qword_1007BA0E8);
    v214 = sub_100008384(&qword_1007BA100);
    v215 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 48);
    if (v215(v73, 1, v214) != 1)
    {
      v216 = v73 + *(int *)(v214 + 48);
      v217 = v307;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v325 + 4))(v307, v73, v50);
      v218 = v324;
      v219 = *(void (**)(char *, uint64_t, uint64_t))(v324 + 32);
      v219(v311, v216, v17);
      v220 = *(_QWORD *)(v292 + 160);
      v221 = *(_QWORD *)(v220 + 16);
      v323 = v204;
      if (v221)
      {
        swift_bridgeObjectRetain((const char *)v220);
        v222 = sub_10045C2DC(v217);
        v218 = v324;
        if ((v223 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v324 + 16))(v38, *(_QWORD *)(v220 + 56) + *(_QWORD *)(v324 + 72) * v222, v17);
          v224 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v218 + 56);
          v225 = v38;
          v226 = 0;
        }
        else
        {
          v224 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v324 + 56);
          v225 = v38;
          v226 = 1;
        }
        v321 = v224;
        v224(v225, v226, 1, v17);
        v227 = swift_bridgeObjectRelease((const char *)v220);
        a1 = (*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v218 + 48))(v38, 1, v17, v227) != 1;
      }
      else
      {
        v321 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v218 + 56);
        v321(v38, 1, 1, v17);
        a1 = 0;
      }
      v228 = v290;
      sub_1002BDEC0((uint64_t)v38, v290);
      v229 = *(void (**)(char *, char *, uint64_t))(v218 + 16);
      v230 = v291;
      v229(v291, v311, v17);
      if (!(_DWORD)a1)
      {
        v201 = *(void (**)(char *, uint64_t))(v218 + 8);
        v201(v230, v17);
        sub_10000D0F0(v228, &qword_1007C5E70);
        goto LABEL_92;
      }
      v231 = (uint64_t)v283;
      v229(v283, v230, v17);
      v321(v231, 0, 1, v17);
      v232 = v284;
      a1 = v284 + *(int *)(v282 + 48);
      sub_1002BDEC0(v228, v284);
      sub_1002BDEC0(v231, a1);
      v233 = *(unsigned int (**)(int64_t, uint64_t, uint64_t))(v218 + 48);
      if (v233(v232, 1, v17) == 1)
      {
        sub_10000D0F0(v231, &qword_1007C5E70);
        v201 = *(void (**)(char *, uint64_t))(v218 + 8);
        v201(v230, v17);
        sub_10000D0F0(v228, &qword_1007C5E70);
        if (v233(a1, 1, v17) == 1)
        {
          sub_10000D0F0(v284, &qword_1007C5E70);
          v73 = (uint64_t)v308;
          v38 = v320;
LABEL_92:
          v50 = v322;
LABEL_93:
          v201(v311, v17);
          (*((void (**)(uint64_t, uint64_t))v325 + 1))(v307, v50);
          sub_10000D0F0((uint64_t)v38, &qword_1007C5E70);
          v200 = v323;
          continue;
        }
        v235 = v284;
LABEL_132:
        v38 = v320;
        v50 = v322;
        sub_10000D0F0(v235, &qword_1007BA0E0);
      }
      else
      {
        v234 = v280;
        sub_1002BDEC0(v232, v280);
        if (v233(a1, 1, v17) == 1)
        {
          sub_10000D0F0((uint64_t)v283, &qword_1007C5E70);
          v201 = *(void (**)(char *, uint64_t))(v324 + 8);
          v201(v291, v17);
          sub_10000D0F0(v290, &qword_1007C5E70);
          v201((char *)v234, v17);
          v235 = v232;
          goto LABEL_132;
        }
        v247 = v279;
        v219(v279, a1, v17);
        v248 = sub_100220D78(&qword_1007BA108, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType, (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
        a1 = dispatch thunk of static Equatable.== infix(_:_:)(v234, v247, v17, v248);
        v201 = *(void (**)(char *, uint64_t))(v324 + 8);
        v201(v247, v17);
        sub_10000D0F0((uint64_t)v283, &qword_1007C5E70);
        v201(v291, v17);
        sub_10000D0F0(v290, &qword_1007C5E70);
        v201((char *)v234, v17);
        sub_10000D0F0(v232, &qword_1007C5E70);
        v73 = (uint64_t)v308;
        v38 = v320;
        v50 = v322;
        if ((a1 & 1) != 0)
          goto LABEL_93;
      }
      v236 = v312;
      if (*((_QWORD *)v312 + 2) && (v237 = sub_10045C2DC(v307), (v238 & 1) != 0))
      {
        v229(v281, (char *)(*((_QWORD *)v236 + 7) + *(_QWORD *)(v324 + 72) * v237), v17);
        v239 = 0;
        v240 = (void *)v313;
      }
      else
      {
        v239 = 1;
        v240 = (void *)v314;
      }
      v241 = (uint64_t)v281;
      v321(v281, v239, 1, v17);
      sub_10000D0F0(v241, &qword_1007C5E70);
      a1 = *(_QWORD *)(v292 + 152);
      v242 = v240;
      swift_retain(a1);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      SFNWInterfaceType.description.getter(isa);
      v245 = v244;
      v246 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v245);
      sub_100045470((uint64_t)v242, (uint64_t)v316, isa, (uint64_t)v246, 0.0);
      swift_release(a1);

      v73 = (uint64_t)v308;
      goto LABEL_93;
    }
    break;
  }
  swift_bridgeObjectRelease(v312);
  v249 = v318;
  swift_release(v318);
  v250 = swift_bridgeObjectRetain(v249);
  a1 = sub_1002F7D10(v250);
  *(_QWORD *)&v251 = swift_bridgeObjectRelease(v249).n128_u64[0];
  v252 = *(const char **)(v292 + 160);
  v253 = swift_bridgeObjectRetain(v252, v251);
  v254 = v278;
  sub_1002F115C(v253, v278);
  v255 = swift_bridgeObjectRelease(v252);
  v256 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v215)(v254, 1, v214, v255);
  sub_10000D0F0(v254, &qword_1007BA0E8);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v256 != 1)
    {
      swift_release(a1);
      goto LABEL_155;
    }
    if (qword_1007B3DB0 != -1)
      goto LABEL_165;
LABEL_143:
    v257 = type metadata accessor for Logger(0);
    sub_100221DF8(v257, (uint64_t)qword_1007B87B8);
    v258 = swift_retain(a1);
    v259 = Logger.logObject.getter(v258);
    v260 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v259, v260))
    {
      v261 = (uint8_t *)swift_slowAlloc(12, -1);
      v262 = swift_slowAlloc(32, -1);
      v328 = v262;
      *(_DWORD *)v261 = 136315138;
      v325 = v261 + 4;
      v263 = swift_retain(a1);
      v264 = (const char *)sub_1002F0E88(v263);
      swift_release(a1);
      v326 = (uint64_t)v264;
      v265 = sub_100008384((uint64_t *)&unk_1007BD6A0);
      v266 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
      v267 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v265, v266);
      v269 = v268;
      swift_bridgeObjectRelease(v264);
      v326 = sub_100228BD8(v267, (unint64_t)v269, (uint64_t *)&v328);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v326, v327, v325);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v269);
      _os_log_impl((void *)&_mh_execute_header, v259, v260, "Transfers using cellular: %s", v261, 0xCu);
      swift_arrayDestroy(v262, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v262, -1, -1);
      swift_slowDealloc(v261, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2);
    }
    v275 = 1;
  }
  else
  {
    swift_release(a1);
    if (v256 == 1)
      goto LABEL_155;
    if (qword_1007B3DB0 != -1)
      swift_once(&qword_1007B3DB0, sub_1002BAA44);
    v270 = type metadata accessor for Logger(0);
    v271 = sub_100221DF8(v270, (uint64_t)qword_1007B87B8);
    v272 = Logger.logObject.getter(v271);
    v273 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v272, v273))
    {
      v274 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v274 = 0;
      _os_log_impl((void *)&_mh_execute_header, v272, v273, "Transfers stopped using cellular", v274, 2u);
      swift_slowDealloc(v274, -1, -1);
    }

    v275 = 0;
  }
  sub_100502CB0(v275);
LABEL_155:
  v276 = *(const char **)(v292 + 160);
  *(_QWORD *)(v292 + 160) = v318;
  swift_bridgeObjectRelease(v276);
}

uint64_t sub_1002F51B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_1002F8284(a1, (uint64_t)sub_1002F81F8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2)
    swift_bridgeObjectRelease(v6);
  return v6;
}

uint64_t sub_1002F5234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007B9F58);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007B9F58);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1002F52C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  const char *v15;
  uint64_t v16;

  if (qword_1007B3EE8 != -1)
    swift_once(&qword_1007B3EE8, sub_1002F5234);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007B9F58);
  v4 = swift_retain_n(a2, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    CurrentValueSubject.value.getter(v8);
    v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
    v10 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v11 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v12 = Dictionary.description.getter(v15, v9, v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease(v15);
    v15 = (const char *)sub_100228BD8(v12, (unint64_t)v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
    swift_release_n(a2, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Receive transfers: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    swift_release_n(a2, 2);
  }
}

uint64_t sub_1002F54D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v26[24];

  v1 = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1007B3EE8 != -1)
    swift_once(&qword_1007B3EE8, sub_1002F5234);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100221DF8(v5, (uint64_t)qword_1007B9F58);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropReceiveService start", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = v1[5];
  *(_QWORD *)(v10 + 24) = &off_100721F28;
  swift_unknownObjectWeakAssign(v10 + 16, v1);
  sub_1002FA4F4();
  v11 = v1[12];
  v12 = v1[13];
  sub_10023A834(v1 + 9, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  sub_10022139C();
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = qword_1007B3D98;
  swift_retain(v1);
  if (v14 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v17 = (_QWORD *)swift_allocObject(&unk_100721FD0, 40, 7);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v1;
  swift_retain(v15);
  v18 = sub_100252AF4((uint64_t)v4, (uint64_t)&unk_1007BA0B0, (uint64_t)v17);
  swift_release(v18);
  sub_100502CB0(0);
  v19 = (const char *)v1[20];
  v1[20] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v19);
  swift_beginAccess(v1 + 14, v26, 33, 0);
  v20 = v1[17];
  if (v20)
  {
    v21 = v1[18];
    sub_10026EEE8((uint64_t)(v1 + 14), v1[17]);
    v22 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v21 + 16);
    v23 = swift_unknownObjectRetain(v1);
    v22(v23, &off_100721F18, v20, v21);
  }
  return swift_endAccess(v26);
}

uint64_t sub_1002F576C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007BA140);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[12] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[16] = v10;
  v2[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v2[18] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F5884, v11, 0);
}

uint64_t sub_1002F5884()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  unint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  if (qword_1007B3EE8 != -1)
    swift_once(&qword_1007B3EE8, sub_1002F5234);
  v1 = v0[5];
  v2 = v0[16];
  v3 = v0[17];
  v4 = v0[15];
  sub_100221DF8(v0[7], (uint64_t)qword_1007B9F58);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = v0[17];
  v10 = v0[15];
  if (v8)
  {
    v75 = v0[16];
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = swift_slowAlloc(32, -1);
    v80 = v77;
    *(_DWORD *)v11 = 136315138;
    v12 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v10, v12);
    v15 = (const char *)v14;
    v0[4] = sub_100228BD8(v13, v14, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5, v11 + 4);
    v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(uint64_t, uint64_t, __n128))(v75 + 8))(v9, v10, v16);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Canceling receive transfer %s", v11, 0xCu);
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v0[16] + 8))(v9, v10);
  }

  v18 = CurrentValueSubject.value.getter(v17);
  v19 = v0[2];
  if (!*(_QWORD *)(v19 + 16) || (v18 = sub_10045C244(v0[5]), (v20 & 1) == 0))
  {
    v36 = SFAirDrop.TransferIdentifier.stringValue.getter(v18);
    v38 = (const char *)v37;
    v39 = sub_1004312F0(8, v36, v37);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease(v38);
    v46 = static String._fromSubstring(_:)(v39, v41, v43, v45);
    v48 = v47;
    swift_bridgeObjectRelease(v45);
    v80 = 0x2E706F7244726941;
    v81 = 0xE800000000000000;
    v49._countAndFlagsBits = v46;
    v49._object = v48;
    String.append(_:)(v49);
    swift_bridgeObjectRelease((const char *)v48);
    Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001006146F0, v80, v81);
    swift_bridgeObjectRetain((const char *)v19);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter(v51);
    if (os_log_type_enabled(v51, v52))
    {
      v74 = v0[15];
      v53 = v0[11];
      v76 = v0[8];
      v78 = v0[7];
      v79 = v0[9];
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = swift_slowAlloc(32, -1);
      v80 = v55;
      *(_DWORD *)v54 = 136315138;
      v56 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain((const char *)v19);
      v58 = Dictionary.Keys.description.getter(v57, v74, v53, v56);
      v60 = v59;
      swift_bridgeObjectRelease((const char *)v19);
      v0[3] = sub_100228BD8(v58, (unint64_t)v60, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v54 + 4);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease_n(v19, 2);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "No receive transfer to cancel. Current transfer IDs: %s", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v79, v78);
    }
    else
    {
      v62 = v0[8];
      v61 = v0[9];
      v63 = v0[7];
      swift_bridgeObjectRelease_n(v19, 2);

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
    }
    v64 = type metadata accessor for SFAirDropReceive.Failure(0);
    v65 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v64, v65, 0, 0);
    v67 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v66, enum case for SFAirDropReceive.Failure.badRequest(_:), v64);
    swift_willThrow(v67);
    v69 = v0[13];
    v68 = v0[14];
    v71 = v0[9];
    v70 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }
  v21 = v0[13];
  v22 = v0[14];
  v23 = v0[11];
  v24 = v0[12];
  v25 = v0[10];
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v21, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v24 + 72) * v18, v23);
  v26 = swift_bridgeObjectRelease((const char *)v19);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v24 + 32))(v22, v21, v23, v26);
  SFAirDropReceive.Transfer.cancelAction.getter(v27);
  v28 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v0[19] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v0[20] = v29;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v25, 1, v28) == 1)
  {
    v30 = v0[10];
    (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[14], v0[11]);
    sub_10000D0F0(v30, &qword_1007BA140);
    v31 = v0[13];
    v32 = v0[14];
    v34 = v0[9];
    v33 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }
  v73 = (_QWORD *)swift_task_alloc(async function pointer to SFAirDrop.DeclineAction.decline()[1]);
  v0[21] = v73;
  *v73 = v0;
  v73[1] = sub_1002F5ED8;
  return SFAirDrop.DeclineAction.decline()();
}

uint64_t sub_1002F5ED8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[18];
    v5 = sub_1002F5FC8;
  }
  else
  {
    v6 = v2[18];
    (*(void (**)(_QWORD, _QWORD))(v2[20] + 8))(v2[10], v2[19]);
    v5 = sub_1002F5F54;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002F5F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F5FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[5] = a4;
  v5 = sub_100008384(&qword_1007BA0B8);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA0C0);
  v4[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F6120, v9, 0);
}

uint64_t sub_1002F6120()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v0[2] = *(_QWORD *)(v0[5] + 48);
  v4 = sub_100008384(&qword_1007BA0C8);
  v5 = sub_10026E2FC(&qword_1007BA0D0, &qword_1007BA0C8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = static AirDropActor.shared;
  v7 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v10 = (char *)&dword_1007BA0D8 + dword_1007BA0D8;
  v8 = (_QWORD *)swift_task_alloc(unk_1007BA0DC);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_1002F6248;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD *))v10)(v6, v7, v0 + 3);
}

uint64_t sub_1002F6248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F62A4, v3, 0);
}

uint64_t sub_1002F62A4()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(const char **)(v0 + 112);
  if (v1)
  {
    if (qword_1007B3EE8 != -1)
      swift_once(&qword_1007B3EE8, sub_1002F5234);
    v2 = type metadata accessor for Logger(0);
    sub_100221DF8(v2, (uint64_t)qword_1007B9F58);
    v3 = swift_bridgeObjectRetain_n(v1, 2);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v25 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v9 = type metadata accessor for SFAirDropReceive.Transfer(0);
      v10 = sub_100220D78(&qword_1007B6590, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v11 = swift_bridgeObjectRetain(v1);
      v12 = Dictionary.description.getter(v11, v8, v9, v10);
      v14 = v13;
      swift_bridgeObjectRelease(v1);
      *(_QWORD *)(v0 + 32) = sub_100228BD8(v12, (unint64_t)v14, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Receive transfers updates in daemon: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v1, 2);
    }

    v18 = *(_QWORD **)(v0 + 40);
    sub_1002F34C4((int64_t)&_swiftEmptyDictionarySingleton, v1);
    v19 = v18[12];
    v20 = v18[13];
    sub_10023A834(v18 + 9, v19);
    (*(void (**)(const char *, uint64_t, uint64_t))(v20 + 72))(v1, v19, v20);
    swift_bridgeObjectRelease(v1);
    v21 = static AirDropActor.shared;
    v22 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v24 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007BA0D8 + dword_1007BA0D8);
    v23 = (_QWORD *)swift_task_alloc(unk_1007BA0DC);
    *(_QWORD *)(v0 + 104) = v23;
    *v23 = v0;
    v23[1] = sub_1002F6248;
    return v24(v21, v22);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v15, *(_QWORD *)(v0 + 72));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002F65BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4[30] = a3;
  v4[31] = a4;
  v4[29] = a2;
  v5 = sub_100008384(&qword_1007B68A0);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[33] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[34] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v4[35] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[36] = swift_task_alloc(v9);
  v4[37] = swift_task_alloc(v9);
  v10 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v4[38] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[39] = v11;
  v4[40] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDrop.DisplayPriority(0);
  v4[41] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[42] = v13;
  v4[43] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v4[44] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[45] = v15;
  v4[46] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v4[47] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[48] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v4[49] = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[50] = swift_task_alloc(v19);
  v4[51] = swift_task_alloc(v19);
  v4[52] = swift_task_alloc(v19);
  v4[53] = swift_task_alloc(v19);
  v20 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v4[54] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[55] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[56] = swift_task_alloc(v22);
  v4[57] = swift_task_alloc(v22);
  v4[58] = swift_task_alloc(v22);
  v4[59] = swift_task_alloc(v22);
  v23 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA070) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[60] = swift_task_alloc(v23);
  v4[61] = swift_task_alloc(v23);
  v4[62] = swift_task_alloc(v23);
  v4[63] = swift_task_alloc(v23);
  v4[64] = swift_task_alloc(v23);
  v24 = sub_100008384(&qword_1007BA088);
  v4[65] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v4[66] = v25;
  v4[67] = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v26 = static AirDropActor.shared;
  v4[68] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F682C, v26, 0);
}

uint64_t sub_1002F682C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[31];
  v2 = sub_100008384(&qword_1007BA068);
  SFNoThrowAsyncSequence.makeAsyncIterator()(v2);
  swift_beginAccess(v1 + 112, v0 + 20, 0, 0);
  v0[69] = static AirDropActor.shared;
  v0[70] = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v3 = sub_10026E2FC(&qword_1007BA090, &qword_1007BA088, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[71] = v4;
  *v4 = v0;
  v4[1] = sub_1002F6918;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[64], v0[65], v3);
}

uint64_t sub_1002F6918()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[69];
    if (v4)
    {
      v5 = v2[70];
      ObjectType = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v11 = sub_1002F73E8;
    v10 = v7;
  }
  else
  {
    v10 = v2[68];
    v11 = sub_1002F69B0;
    v9 = 0;
  }
  return swift_task_switch(v11, v10, v9);
}

uint64_t sub_1002F69B0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  __n128 v49;
  uint64_t (*v50)(unint64_t, uint64_t, __n128);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(unint64_t, uint64_t);
  const char *v57;
  __n128 v58;
  void (*v59)(uint64_t, uint64_t, __n128);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD);
  const char **v75;
  const char **v76;
  int v77;
  uint64_t v78;
  const char *v79;
  unint64_t v80;
  char v81;
  char v82;
  __n128 v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  const char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  os_log_type_t type;
  os_log_type_t typea[8];
  void (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  void (*v137)(uint64_t, unint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  const char *v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  int *v147;
  const char *v148;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48);
  if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))v4)(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 528) + 8))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 520));
    if (qword_1007B3EE8 != -1)
      swift_once(&qword_1007B3EE8, sub_1002F5234);
    v5 = *(_QWORD *)(v0 + 472);
    v7 = *(_QWORD *)(v0 + 432);
    v6 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = type metadata accessor for Logger(0);
    sub_100221DF8(v9, (uint64_t)qword_1007B9F58);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(_QWORD *)(v0 + 584) = v10;
    v11 = v10(v5, v8, v7);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 472);
    v16 = *(_QWORD *)(v0 + 432);
    v17 = *(_QWORD *)(v0 + 440);
    if (v14)
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v143 = (const char *)swift_slowAlloc(32, -1);
      v148 = v143;
      *(_DWORD *)v18 = 136315138;
      v19 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v20 = dispatch thunk of CustomStringConvertible.description.getter(v16, v19);
      v22 = (const char *)v21;
      *(_QWORD *)(v0 + 184) = sub_100228BD8(v20, v21, (uint64_t *)&v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v18 + 4);
      v23 = swift_bridgeObjectRelease(v22);
      (*(void (**)(uint64_t, uint64_t, __n128))(v17 + 8))(v15, v16, v23);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropReceiveService.transfers REMOVE {id: %s}", v18, 0xCu);
      swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v143, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v17 + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
    }

    *(_QWORD *)(v0 + 624) = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 48);
    CurrentValueSubject.value.getter(v60);
    v61 = *(_QWORD *)(v0 + 192);
    if (*(_QWORD *)(v61 + 16))
    {
      v62 = sub_10045C244(*(_QWORD *)(v0 + 240));
      v63 = *(_QWORD *)(v0 + 488);
      v64 = *(_QWORD *)(v0 + 376);
      v65 = *(_QWORD *)(v0 + 384);
      if ((v66 & 1) != 0)
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(v65 + 16))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v61 + 56) + *(_QWORD *)(v65 + 72) * v62, *(_QWORD *)(v0 + 376));
        v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v67(v63, 0, 1, v64);
      }
      else
      {
        v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v67(*(_QWORD *)(v0 + 488), 1, 1, v64);
      }
    }
    else
    {
      v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 384) + 56);
      v67(*(_QWORD *)(v0 + 488), 1, 1, *(_QWORD *)(v0 + 376));
    }
    *(_QWORD *)(v0 + 632) = v67;
    v96 = *(_QWORD *)(v0 + 488);
    v97 = *(_QWORD *)(v0 + 376);
    v98 = swift_bridgeObjectRelease((const char *)v61);
    v99 = v4(v96, 1, v97, v98);
    v100 = *(_QWORD *)(v0 + 488);
    if (v99 == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 488), &qword_1007BA070);
      v102 = *(_QWORD *)(v0 + 504);
      v101 = *(_QWORD *)(v0 + 512);
      v103 = *(_QWORD *)(v0 + 488);
      v104 = *(_QWORD *)(v0 + 496);
      v106 = *(_QWORD *)(v0 + 472);
      v105 = *(_QWORD *)(v0 + 480);
      v108 = *(_QWORD *)(v0 + 456);
      v107 = *(_QWORD *)(v0 + 464);
      v109 = *(_QWORD *)(v0 + 448);
      v128 = *(_QWORD *)(v0 + 424);
      v130 = *(_QWORD *)(v0 + 416);
      v132 = *(_QWORD *)(v0 + 408);
      *(_QWORD *)typea = *(_QWORD *)(v0 + 400);
      v136 = *(_QWORD *)(v0 + 368);
      v138 = *(_QWORD *)(v0 + 344);
      v140 = *(_QWORD *)(v0 + 320);
      v142 = *(_QWORD *)(v0 + 296);
      v144 = *(_QWORD *)(v0 + 288);
      v146 = *(_QWORD *)(v0 + 256);
      swift_task_dealloc(*(_QWORD *)(v0 + 536));
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v104);
      swift_task_dealloc(v103);
      swift_task_dealloc(v105);
      swift_task_dealloc(v106);
      swift_task_dealloc(v107);
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v128);
      swift_task_dealloc(v130);
      swift_task_dealloc(v132);
      swift_task_dealloc(*(_QWORD *)typea);
      swift_task_dealloc(v136);
      swift_task_dealloc(v138);
      swift_task_dealloc(v140);
      swift_task_dealloc(v142);
      swift_task_dealloc(v144);
      swift_task_dealloc(v146);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v111 = *(_QWORD *)(v0 + 400);
      v112 = *(_QWORD *)(v0 + 376);
      v113 = *(_QWORD *)(v0 + 248);
      v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 384) + 32);
      *(_QWORD *)(v0 + 640) = v114;
      v115 = v114(v111, v100, v112);
      if (*(_QWORD *)(v113 + 136))
      {
        sub_100244418(*(_QWORD *)(v0 + 248) + 112, v0 + 56);
        v116 = *(_QWORD *)(v0 + 80);
        v117 = *(_QWORD *)(v0 + 88);
        sub_10023A834((_QWORD *)(v0 + 56), v116);
        v118 = *(int **)(v117 + 40);
        v147 = (int *)((char *)v118 + *v118);
        v119 = (_QWORD *)swift_task_alloc(v118[1]);
        *(_QWORD *)(v0 + 648) = v119;
        *v119 = v0;
        v119[1] = sub_1002F77F8;
        return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v147)(*(_QWORD *)(v0 + 400), v116, v117);
      }
      else
      {
        SFAirDropReceive.Transfer.askRequest.getter(v115);
        v124 = (_QWORD *)swift_task_alloc(dword_1007BD96C);
        *(_QWORD *)(v0 + 656) = v124;
        *v124 = v0;
        v124[1] = sub_1002F78BC;
        return sub_100397194(*(_QWORD *)(v0 + 320));
      }
    }
  }
  else
  {
    v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v4;
    v137 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 32);
    v137(*(_QWORD *)(v0 + 424), v1, v2);
    if (qword_1007B3EE8 != -1)
      swift_once(&qword_1007B3EE8, sub_1002F5234);
    v24 = *(_QWORD *)(v0 + 464);
    v25 = *(_QWORD *)(v0 + 432);
    v26 = *(_QWORD *)(v0 + 440);
    v28 = *(_QWORD *)(v0 + 416);
    v27 = *(_QWORD *)(v0 + 424);
    v29 = *(_QWORD *)(v0 + 376);
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(_QWORD *)(v0 + 240);
    v32 = type metadata accessor for Logger(0);
    sub_100221DF8(v32, (uint64_t)qword_1007B9F58);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    v33(v24, v31, v25);
    v141 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v34 = v141(v28, v27, v29);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    v37 = os_log_type_enabled(v35, v36);
    v38 = *(_QWORD *)(v0 + 464);
    v40 = *(_QWORD *)(v0 + 432);
    v39 = *(_QWORD *)(v0 + 440);
    v41 = *(_QWORD *)(v0 + 416);
    v42 = *(_QWORD *)(v0 + 376);
    v139 = *(_QWORD *)(v0 + 384);
    if (v37)
    {
      v125 = *(_QWORD *)(v0 + 416);
      type = v36;
      v43 = *(_QWORD *)(v0 + 368);
      v127 = *(_QWORD *)(v0 + 360);
      v126 = *(_QWORD *)(v0 + 352);
      v129 = *(_QWORD *)(v0 + 376);
      v44 = swift_slowAlloc(22, -1);
      v131 = (const char *)swift_slowAlloc(64, -1);
      v148 = v131;
      *(_DWORD *)v44 = 136315394;
      v45 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v46 = dispatch thunk of CustomStringConvertible.description.getter(v40, v45);
      v135 = v33;
      v48 = (const char *)v47;
      *(_QWORD *)(v0 + 216) = sub_100228BD8(v46, v47, (uint64_t *)&v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v44 + 4);
      v49 = swift_bridgeObjectRelease(v48);
      v50 = *(uint64_t (**)(unint64_t, uint64_t, __n128))(v39 + 8);
      v51 = v50(v38, v40, v49);
      *(_WORD *)(v44 + 12) = 2080;
      SFAirDropReceive.Transfer.state.getter(v51);
      v52 = sub_100220D78(&qword_1007BA0A0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
      v53 = dispatch thunk of CustomStringConvertible.description.getter(v126, v52);
      v55 = v54;
      v56 = (void (*)(unint64_t, uint64_t))v50;
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v43, v126);
      *(_QWORD *)(v0 + 224) = sub_100228BD8(v53, v55, (uint64_t *)&v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v44 + 14);
      v57 = (const char *)v55;
      v33 = v135;
      v58 = swift_bridgeObjectRelease(v57);
      v59 = *(void (**)(uint64_t, uint64_t, __n128))(v139 + 8);
      v59(v125, v129, v58);
      _os_log_impl((void *)&_mh_execute_header, v35, type, "SDAirDropReceiveService.transfers UPDATE {id: %s, state: %s}", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy(v131, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v131, -1, -1);
      swift_slowDealloc(v44, -1, -1);
    }
    else
    {
      v56 = *(void (**)(unint64_t, uint64_t))(v39 + 8);
      v56(v38, v40);
      v59 = *(void (**)(uint64_t, uint64_t, __n128))(v139 + 8);
      ((void (*)(uint64_t, uint64_t))v59)(v41, v42);
    }

    *(_QWORD *)(v0 + 592) = v59;
    v68 = *(_QWORD *)(v0 + 504);
    v69 = *(_QWORD *)(v0 + 424);
    v71 = *(_QWORD *)(v0 + 376);
    v70 = *(_QWORD *)(v0 + 384);
    v33(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 432));
    v141(v68, v69, v71);
    v72 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56);
    v72(v68, 0, 1, v71);
    v73 = v0 + 96;
    v74 = (void (*)(uint64_t, _QWORD))CurrentValueSubject.value.modify(v0 + 96);
    v76 = v75;
    v77 = v145(v68, 1, v71);
    v78 = *(_QWORD *)(v0 + 456);
    if (v77 == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 504), &qword_1007BA070);
      v79 = *v76;
      swift_bridgeObjectRetain(*v76);
      v80 = sub_10045C244(v78);
      v82 = v81;
      v83 = swift_bridgeObjectRelease(v79);
      if ((v82 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v76);
        *(_QWORD *)(v0 + 208) = *v76;
        *v76 = (const char *)0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10046ECA8();
        v85 = *(_QWORD *)(v0 + 496);
        v86 = *(_QWORD *)(v0 + 376);
        v87 = *(_QWORD *)(v0 + 384);
        v56(*(_QWORD *)(*(_QWORD *)(v0 + 208) + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 440) + 72) * v80, *(_QWORD *)(v0 + 432));
        v88 = *(_QWORD *)(v0 + 208);
        v137(v85, *(_QWORD *)(v88 + 56) + *(_QWORD *)(v87 + 72) * v80, v86);
        sub_10026BF04(v80, v88);
        v89 = *v76;
        *v76 = (const char *)v88;
        v83 = swift_bridgeObjectRelease(v89);
        v90 = 0;
        v73 = v0 + 96;
      }
      else
      {
        v90 = 1;
      }
      v120 = *(_QWORD *)(v0 + 496);
      v121 = *(_QWORD *)(v0 + 456);
      v122 = *(_QWORD *)(v0 + 432);
      ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))v72)(v120, v90, 1, *(_QWORD *)(v0 + 376), v83);
      v56(v121, v122);
      sub_10000D0F0(v120, &qword_1007BA070);
    }
    else
    {
      v91 = *(_QWORD *)(v0 + 432);
      v92 = *(_QWORD *)(v0 + 408);
      v137(v92, *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 376));
      v93 = swift_isUniquelyReferenced_nonNull_native(*v76);
      v148 = *v76;
      *v76 = (const char *)0x8000000000000000;
      sub_10046BD28(v92, v78, v93);
      v94 = *v76;
      *v76 = v148;
      v95 = swift_bridgeObjectRelease(v94);
      ((void (*)(uint64_t, uint64_t, __n128))v56)(v78, v91, v95);
    }
    v74(v73, 0);
    v123 = (_QWORD *)swift_task_alloc(dword_1007B9BAC);
    *(_QWORD *)(v0 + 600) = v123;
    *v123 = v0;
    v123[1] = sub_1002F7448;
    return sub_1002DFF40(*(_QWORD *)(v0 + 424));
  }
}

uint64_t sub_1002F73E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 576);
  v1 = sub_100008384(&qword_1007B5A60);
  v2 = swift_dynamicCast(v1, v0 + 200, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002F7448()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 544);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 600));
  return swift_task_switch(sub_1002F74A0, v1, 0);
}

uint64_t sub_1002F74A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  _QWORD *v7;
  int *v8;

  v1 = v0[31];
  if (*(_QWORD *)(v1 + 136))
  {
    sub_100244418(v1 + 112, (uint64_t)(v0 + 2));
    v2 = v0[5];
    v3 = v0[6];
    sub_10023A834(v0 + 2, v2);
    v4 = *(int **)(v3 + 32);
    v8 = (int *)((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc(v4[1]);
    v0[76] = v5;
    *v5 = v0;
    v5[1] = sub_1002F757C;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v8)(v0[53], v2, v3);
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc(dword_1007BD95C);
    v0[77] = v7;
    *v7 = v0;
    v7[1] = sub_1002F7630;
    return sub_100396DB8(v0[53]);
  }
}

uint64_t sub_1002F757C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 544);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 608));
  return swift_task_switch(sub_1002F75D4, v1, 0);
}

uint64_t sub_1002F75D4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_10022E75C(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(dword_1007BD95C);
  v0[77] = v1;
  *v1 = v0;
  v1[1] = sub_1002F7630;
  return sub_100396DB8(v0[53]);
}

uint64_t sub_1002F7630()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 544);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 616));
  return swift_task_switch(sub_1002F7688, v1, 0);
}

uint64_t sub_1002F7688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v1 = v0[53];
  v2 = v0[46];
  v16 = v0[47];
  v17 = (void (*)(uint64_t, uint64_t))v0[74];
  v3 = v0[43];
  v14 = v0[45];
  v15 = v0[44];
  v4 = v0[42];
  v13 = v0[41];
  v5 = (_QWORD *)v0[31];
  v6 = v5[12];
  v7 = v5[13];
  v8 = sub_10023A834(v5 + 9, v6);
  v9 = SFAirDropReceive.Transfer.state.getter(v8);
  SFAirDropReceive.Transfer.displayPriority.getter(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v2, v3, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  sub_100447CB8(v1);
  v17(v1, v16);
  v0[69] = static AirDropActor.shared;
  v0[70] = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v10 = sub_10026E2FC(&qword_1007BA090, &qword_1007BA088, (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[71] = v11;
  *v11 = v0;
  v11[1] = sub_1002F6918;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[64], v0[65], v10);
}

uint64_t sub_1002F77F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 544);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 648));
  return swift_task_switch(sub_1002F7850, v1, 0);
}

uint64_t sub_1002F7850()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_10022E75C(v0 + 7);
  SFAirDropReceive.Transfer.askRequest.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1007BD96C);
  v0[82] = v2;
  *v2 = v0;
  v2[1] = sub_1002F78BC;
  return sub_100397194(v0[40]);
}

uint64_t sub_1002F78BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 544);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 312);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 320);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 656));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1002F7934, v1, 0);
}

uint64_t sub_1002F7934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 640);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 632);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
  v45 = *(_QWORD *)(v0 + 480);
  v39 = *(_QWORD *)(v0 + 448);
  v41 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 272);
  v30 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 392);
  v8 = *(_QWORD *)(v0 + 256);
  v29 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 240);
  v37 = v1;
  SFAirDropReceive.Transfer.receiveID.getter();
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v33 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v29);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = (v31 + v12 + v11) & ~v12;
  v14 = swift_allocObject(&unk_100721FA8, v13 + v30, v10 | v12 | 7);
  v15 = v2;
  v16 = v4;
  v32(v14 + v11, v15, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v14 + v13, v6, v29);
  v17 = static Task<>.noThrow(priority:operation:)(v8, &unk_1007BA098, v14, (char *)&type metadata for () + 8);
  swift_release(v14);
  swift_release(v17);
  sub_10000D0F0(v8, &qword_1007B68A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v29);
  v43(v39, v35, v41);
  v47(v45, 1, 1, v16);
  v18 = (void (*)(uint64_t, _QWORD))CurrentValueSubject.value.modify(v0 + 128);
  sub_100394A48(v45, v39);
  v18(v0 + 128, 0);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v16);
  v20 = *(_QWORD *)(v0 + 504);
  v19 = *(_QWORD *)(v0 + 512);
  v21 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 496);
  v24 = *(_QWORD *)(v0 + 472);
  v23 = *(_QWORD *)(v0 + 480);
  v26 = *(_QWORD *)(v0 + 456);
  v25 = *(_QWORD *)(v0 + 464);
  v27 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 416);
  v38 = *(_QWORD *)(v0 + 408);
  v40 = *(_QWORD *)(v0 + 400);
  v42 = *(_QWORD *)(v0 + 368);
  v44 = *(_QWORD *)(v0 + 344);
  v46 = *(_QWORD *)(v0 + 320);
  v48 = *(_QWORD *)(v0 + 296);
  v49 = *(_QWORD *)(v0 + 288);
  v50 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 536));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F7C5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  sub_100232F78(v0 + 56);
  sub_10022E75C((_QWORD *)(v0 + 72));
  sub_10000D0F0(v0 + 112, &qword_1007BA130);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease(*(const char **)(v0 + 160));

  return v0;
}

uint64_t sub_1002F7CD0()
{
  uint64_t v0;

  sub_1002F7C5C();
  return swift_deallocClassInstance(v0, 176, 7);
}

uint64_t type metadata accessor for SDAirDropReceiveService()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary23SDAirDropReceiveService);
}

uint64_t sub_1002F7D10(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1002F7E60((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_1002F7E60((unint64_t *)v9, v6, v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_1002F7E60(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unsigned int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;

  v36 = a2;
  v37 = a1;
  v49 = sub_100008384(&qword_1007BA100);
  __chkstk_darwin(v49);
  v48 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for SFNWInterfaceType(0);
  v45 = *(_QWORD *)(v43 - 8);
  v5 = __chkstk_darwin(v43);
  v47 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (char *)&v35 - v7;
  v44 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v44 - 8);
  result = __chkstk_darwin(v44);
  v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v51 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v38 = 0;
  v39 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v41 = enum case for SFNWInterfaceType.cellular(_:);
  v15 = v42;
  v16 = v43;
  v18 = v44;
  v17 = v45;
  v20 = v46;
  v19 = v47;
  while (1)
  {
    if (v14)
    {
      v52 = (v14 - 1) & v14;
      v53 = v10;
      v21 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    v30 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v30 >= v40)
      return sub_1004EFCFC(v37, v36, v38, v51);
    v31 = *(_QWORD *)(v39 + 8 * v30);
    v32 = v10 + 1;
    if (!v31)
    {
      v32 = v10 + 2;
      if (v10 + 2 >= v40)
        return sub_1004EFCFC(v37, v36, v38, v51);
      v31 = *(_QWORD *)(v39 + 8 * v32);
      if (!v31)
      {
        v32 = v10 + 3;
        if (v10 + 3 >= v40)
          return sub_1004EFCFC(v37, v36, v38, v51);
        v31 = *(_QWORD *)(v39 + 8 * v32);
        if (!v31)
          break;
      }
    }
LABEL_20:
    v52 = (v31 - 1) & v31;
    v53 = v32;
    v21 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_5:
    v22 = v51;
    v23 = *(void (**)(char *, unint64_t, uint64_t))(v54 + 16);
    v23(v15, v51[6] + *(_QWORD *)(v54 + 72) * v21, v18);
    v24 = v22[7];
    v25 = *(_QWORD *)(v17 + 72);
    v50 = v21;
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
    v26(v20, v24 + v25 * v21, v16);
    v27 = (uint64_t)v48;
    v23(v48, (unint64_t)v15, v18);
    v28 = v27 + *(int *)(v49 + 48);
    v26((char *)v28, (unint64_t)v20, v16);
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, v41, v16);
    LOBYTE(v28) = static SFNWInterfaceType.== infix(_:_:)(v28, v19);
    v29 = *(void (**)(char *, uint64_t))(v17 + 8);
    v29(v19, v16);
    sub_10000D0F0(v27, &qword_1007BA100);
    v29(v20, v16);
    result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v15, v18);
    v14 = v52;
    v10 = v53;
    if ((v28 & 1) != 0)
    {
      *(unint64_t *)((char *)v37 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
      if (__OFADD__(v38++, 1))
      {
        __break(1u);
        return sub_1004EFCFC(v37, v36, v38, v51);
      }
    }
  }
  v33 = v10 + 4;
  if (v10 + 4 >= v40)
    return sub_1004EFCFC(v37, v36, v38, v51);
  v31 = *(_QWORD *)(v39 + 8 * v33);
  if (v31)
  {
    v32 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v40)
      return sub_1004EFCFC(v37, v36, v38, v51);
    v31 = *(_QWORD *)(v39 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1002F81F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(sub_100008384(&qword_1007BA100) + 48);
  v5 = a2 + *(int *)(sub_100008384(&qword_1007B4C08) + 48);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  v7 = type metadata accessor for SFNWInterfaceType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v4, v7);
}

uint64_t sub_1002F8284(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  _QWORD *v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v66 = a5;
  v9 = type metadata accessor for SFNWInterfaceType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v54 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v53 = (char *)&v51 - v14;
  __chkstk_darwin(v13);
  v58 = (char *)&v51 - v15;
  v57 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384(&qword_1007BA110);
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = -1 << *(_BYTE *)(a1 + 32);
  v22 = ~v21;
  v23 = *(_QWORD *)(a1 + 64);
  v24 = -v21;
  v59 = a1;
  v60 = a1 + 64;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v61 = v22;
  v62 = 0;
  v63 = v25 & v23;
  v64 = a2;
  v65 = a3;
  v52 = a1;
  swift_bridgeObjectRetain(a1);
  v51 = a3;
  swift_retain(a3);
  sub_1002F869C((uint64_t)v20);
  v26 = sub_100008384(&qword_1007B4C08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
  {
LABEL_5:
    swift_release(v51);
    swift_bridgeObjectRelease(v52);
    sub_10022E5B4(v59);
    return swift_release(v65);
  }
  v56 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  while (1)
  {
    v34 = &v20[*(int *)(v26 + 48)];
    v56(v17, v20, v57);
    v35 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v35(v58, v34, v9);
    v36 = (_QWORD *)*v66;
    v38 = sub_10045C2DC((uint64_t)v17);
    v39 = v36[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v36[3] >= v41)
    {
      if ((a4 & 1) != 0)
      {
        v44 = v66;
        v47 = (_QWORD *)*v66;
        if ((v37 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        v44 = v66;
        sub_10046FAC0();
        v47 = (_QWORD *)*v44;
        if ((v42 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      v43 = a4 & 1;
      v44 = v66;
      sub_1004682D8(v41, v43);
      v45 = sub_10045C2DC((uint64_t)v17);
      if ((v42 & 1) != (v46 & 1))
        goto LABEL_22;
      v38 = v45;
      v47 = (_QWORD *)*v44;
      if ((v42 & 1) != 0)
      {
LABEL_7:
        v28 = v47[7];
        v29 = *(_QWORD *)(v10 + 72) * v38;
        v30 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
        v31 = v54;
        v30(v54, v28 + v29, v9);
        v32 = v53;
        v30(v53, (unint64_t)v31, v9);
        v33 = *(void (**)(char *, uint64_t))(v10 + 8);
        v33(v31, v9);
        v33(v58, v9);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v57);
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 40))(*(_QWORD *)(*v44 + 56) + v29, v32, v9);
        goto LABEL_8;
      }
    }
    v47[(v38 >> 6) + 8] |= 1 << v38;
    v56((char *)(v47[6] + *(_QWORD *)(v55 + 72) * v38), v17, v57);
    v35((char *)(v47[7] + *(_QWORD *)(v10 + 72) * v38), v58, v9);
    v48 = v47[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_21;
    v47[2] = v50;
LABEL_8:
    sub_1002F869C((uint64_t)v20);
    v26 = sub_100008384(&qword_1007B4C08);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v57);
  __break(1u);
  return result;
}

uint64_t sub_1002F869C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = sub_100008384(&qword_1007BA100);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA0E8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v13 = (char *)&v37 - v12;
  v14 = *v1;
  v15 = v1[1];
  v16 = v1[2];
  v17 = v1[3];
  v18 = v1[4];
  v37 = v6;
  v40 = v16;
  if (v18)
  {
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v14 + 48);
    v24 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v13, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v24);
    v25 = *(_QWORD *)(v14 + 56);
    v26 = type metadata accessor for SFNWInterfaceType(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(&v13[*(int *)(v3 + 48)], v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v22, v26);
    v27 = 0;
    a1 = v20;
    v4 = v19;
    v10 = v38;
    v15 = v39;
    goto LABEL_4;
  }
  v32 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return result;
  }
  v33 = (unint64_t)(v16 + 64) >> 6;
  if (v32 >= v33)
  {
    v21 = 0;
    v27 = 1;
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v15 + 8 * v32);
  if (v34)
  {
LABEL_11:
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v34 - 1) & v34;
    v22 = __clz(__rbit64(v34)) + (v32 << 6);
    v17 = v32;
    goto LABEL_3;
  }
  v35 = v17 + 2;
  if (v17 + 2 >= v33)
    goto LABEL_27;
  v34 = *(_QWORD *)(v15 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v32 = v35;
    goto LABEL_11;
  }
  if (v17 + 3 >= v33)
    goto LABEL_28;
  v34 = *(_QWORD *)(v15 + 8 * (v17 + 3));
  if (v34)
  {
    v32 = v17 + 3;
    goto LABEL_11;
  }
  v35 = v17 + 4;
  if (v17 + 4 < v33)
  {
    v34 = *(_QWORD *)(v15 + 8 * v35);
    if (v34)
      goto LABEL_15;
    v32 = v17 + 5;
    if (v17 + 5 < v33)
    {
      v34 = *(_QWORD *)(v15 + 8 * v32);
      if (v34)
        goto LABEL_11;
      v32 = v33 - 1;
      v36 = v17 + 6;
      while (v33 != v36)
      {
        v34 = *(_QWORD *)(v15 + 8 * v36++);
        if (v34)
        {
          v32 = v36 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v21 = 0;
      v27 = 1;
      v17 = v32;
      goto LABEL_4;
    }
LABEL_28:
    v21 = 0;
    v27 = 1;
    v17 = v35;
    goto LABEL_4;
  }
  v21 = 0;
  v27 = 1;
  v17 += 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, v27, 1, v3);
  *v1 = v14;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v17;
  v1[4] = v21;
  v28 = (void (*)(uint64_t))v1[5];
  sub_10022E718((uint64_t)v13, (uint64_t)v10, &qword_1007BA0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v29 = sub_100008384(&qword_1007B4C08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  else
  {
    v30 = (uint64_t)v37;
    sub_10022E718((uint64_t)v10, (uint64_t)v37, &qword_1007BA100);
    v28(v30);
    sub_10000D0F0(v30, &qword_1007BA100);
    v31 = sub_100008384(&qword_1007B4C08);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
  }
}

void sub_1002F89F0()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain(v9);
    v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease(v9);
    return;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_1002F8B7C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1002F8C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[19] = v5;
  v3[20] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007BA068);
  v3[21] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[22] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[23] = v8;
  v3[24] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  v3[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007BA070);
  v3[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v3[27] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[28] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v3[29] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[30] = swift_task_alloc(v14);
  v3[31] = swift_task_alloc(v14);
  v15 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[32] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[33] = v16;
  v3[34] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v17 = static AirDropActor.shared;
  v3[35] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F8DA0, v17, 0);
}

uint64_t sub_1002F8DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t type;
  uint64_t (*typea)(uint64_t, uint64_t);
  uint64_t v32;

  if (qword_1007B3EE8 != -1)
    swift_once(&qword_1007B3EE8, sub_1002F5234);
  v1 = v0[15];
  v3 = v0[33];
  v2 = v0[34];
  v4 = v0[32];
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007B9F58);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[36] = v6;
  v7 = v6(v2, v1, v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[34];
  if (v10)
  {
    v28 = v0[32];
    v12 = v0[31];
    v13 = v0[27];
    v26 = v0[28];
    v27 = v0[33];
    type = v9;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v32 = v29;
    *(_DWORD *)v14 = 136315138;
    SFAirDropReceive.Transfer.id.getter(v29);
    v15 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v13, v15);
    v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v13);
    v0[14] = sub_100228BD8(v16, (unint64_t)v18, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 14, v0 + 15, v14 + 4);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v27 + 8))(v11, v28, v19);
    _os_log_impl((void *)&_mh_execute_header, v8, type, "SDAirDropReceiveService.transfers ADD {id: %s}", v14, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[33] + 8))(v0[34], v0[32]);
  }

  v20 = (_QWORD *)v0[17];
  v21 = v20[12];
  v22 = v20[13];
  sub_10023A834(v20 + 9, v21);
  v23 = *(int **)(v22 + 40);
  typea = (uint64_t (*)(uint64_t, uint64_t))((char *)v23 + *v23);
  v24 = (_QWORD *)swift_task_alloc(v23[1]);
  v0[37] = v24;
  *v24 = v0;
  v24[1] = sub_1002F902C;
  return typea(v21, v22);
}

uint64_t sub_1002F902C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 296);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_1002F9104, v2[35], 0);
  v5 = v2[34];
  v7 = v2[30];
  v6 = v2[31];
  v9 = v2[25];
  v8 = v2[26];
  v10 = v2[24];
  v11 = v2[20];
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(0);
}

uint64_t sub_1002F9104()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  _QWORD *v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;

  v1 = v0[17];
  swift_beginAccess(v1 + 112, v0 + 11, 0, 0);
  if (*(_QWORD *)(v1 + 136))
  {
    sub_100244418(v1 + 112, (uint64_t)(v0 + 2));
    v3 = v0[5];
    v4 = v0[6];
    v5 = sub_10023A834(v0 + 2, v3);
    SFAirDropReceive.Transfer.id.getter(v5);
    v6 = *(int **)(v4 + 48);
    v37 = (int *)((char *)v6 + *v6);
    v7 = (_QWORD *)swift_task_alloc(v6[1]);
    v0[38] = v7;
    *v7 = v0;
    v7[1] = sub_1002F9458;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v37)(v0[31], v3, v4);
  }
  else
  {
    v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[36];
    v11 = v0[32];
    v10 = v0[33];
    v12 = v0[31];
    v34 = v0[29];
    v30 = v0[28];
    v13 = v0[26];
    v31 = v0[27];
    v32 = v0[30];
    v38 = v0[25];
    v29 = v0[24];
    v33 = v0[23];
    v36 = v0[22];
    v35 = v0[17];
    v14 = v0[15];
    v27 = v0[16];
    v28 = v0[21];
    SFAirDropReceive.Transfer.id.getter(v2);
    v9(v13, v14, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v11);
    v15 = (uint64_t (*)(_QWORD *, _QWORD))CurrentValueSubject.value.modify(v0 + 7);
    sub_100394A48(v13, v12);
    v16 = v15(v0 + 7, 0);
    SFAirDropReceive.Transfer.id.getter(v16);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v38, 1, 1, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v29, v27, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v12, v31);
    v18 = *(unsigned __int8 *)(v36 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = *(unsigned __int8 *)(v30 + 80);
    v21 = (v33 + v20 + v19) & ~v20;
    v22 = (v34 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_100721F80, v22 + 8, v18 | v20 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v23 + v19, v29, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v23 + v21, v32, v31);
    *(_QWORD *)(v23 + v22) = v35;
    swift_retain(v35);
    v24 = static Task<>.noThrow(priority:operation:)(v38, &unk_1007BA080, v23, (char *)&type metadata for () + 8);
    swift_release(v23);
    swift_release(v24);
    sub_10000D0F0(v38, &qword_1007B68A0);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v12, v31);
    SFAirDropReceive.Transfer.askRequest.getter(v25);
    v26 = (_QWORD *)swift_task_alloc(dword_1007BD904);
    v0[39] = v26;
    *v26 = v0;
    v26[1] = sub_1002F976C;
    return sub_100397630(v0[20]);
  }
}

uint64_t sub_1002F9458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 224);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 304));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch(sub_1002F94D0, v1, 0);
}

uint64_t sub_1002F94D0()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = sub_10022E75C(v0 + 2);
  v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[36];
  v4 = v0[32];
  v3 = v0[33];
  v5 = v0[31];
  v29 = v0[29];
  v25 = v0[28];
  v6 = v0[26];
  v26 = v0[27];
  v27 = v0[30];
  v32 = v0[25];
  v23 = v0[24];
  v28 = v0[23];
  v31 = v0[22];
  v30 = v0[17];
  v7 = v0[15];
  v21 = v0[16];
  v22 = v0[21];
  SFAirDropReceive.Transfer.id.getter(v1);
  v2(v6, v7, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v4);
  v8 = (uint64_t (*)(_QWORD *, _QWORD))CurrentValueSubject.value.modify(v0 + 7);
  sub_100394A48(v6, v5);
  v9 = v8(v0 + 7, 0);
  v24 = v5;
  SFAirDropReceive.Transfer.id.getter(v9);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v32, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v23, v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, v5, v26);
  v11 = *(unsigned __int8 *)(v31 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = *(unsigned __int8 *)(v25 + 80);
  v14 = (v28 + v13 + v12) & ~v13;
  v15 = (v29 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_100721F80, v15 + 8, v11 | v13 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v16 + v12, v23, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v16 + v14, v27, v26);
  *(_QWORD *)(v16 + v15) = v30;
  swift_retain(v30);
  v17 = static Task<>.noThrow(priority:operation:)(v32, &unk_1007BA080, v16, (char *)&type metadata for () + 8);
  swift_release(v16);
  swift_release(v17);
  sub_10000D0F0(v32, &qword_1007B68A0);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  SFAirDropReceive.Transfer.askRequest.getter(v18);
  v19 = (_QWORD *)swift_task_alloc(dword_1007BD904);
  v0[39] = v19;
  *v19 = v0;
  v19[1] = sub_1002F976C;
  return sub_100397630(v0[20]);
}

uint64_t sub_1002F976C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(*v0 + 272);
  v3 = *(_QWORD *)(*v0 + 240);
  v2 = *(_QWORD *)(*v0 + 248);
  v5 = *(_QWORD *)(*v0 + 200);
  v4 = *(_QWORD *)(*v0 + 208);
  v6 = *(_QWORD *)(*v0 + 192);
  v8 = *(_QWORD *)(*v0 + 152);
  v7 = *(_QWORD *)(*v0 + 160);
  v9 = *(_QWORD *)(*v0 + 144);
  v11 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v11 + 8))(1);
}

uint64_t sub_1002F983C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_100008384(&qword_1007BA068);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_1002F9908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_100008384(&qword_1007BA068) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for SFAirDrop.TransferIdentifier(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1 + v5;
  v10 = v1 + v8;
  v11 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1007BA07C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000D12C;
  return sub_1002F65BC(a1, v9, v10, v11);
}

uint64_t sub_1002F99C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002F9A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for SFAirDropReceive.Transfer(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1 + v5;
  v10 = v1 + (v8 & ~v7);
  v11 = (_QWORD *)swift_task_alloc(dword_1007BA7FC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000D098;
  return sub_1003293EC(a1, v9, v10);
}

uint64_t sub_1002F9B18()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F9B44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1007BA0AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D12C;
  return sub_1002F605C(a1, v4, v5, v6);
}

uint64_t sub_1002F9BB0(void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  objc_class *v47;
  _QWORD *v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD aBlock[3];
  objc_class *v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  int out_token[6];

  v8 = v7;
  v63 = a7;
  v60 = a3;
  v61 = a6;
  v57 = a5;
  v58 = a4;
  v59 = a2;
  v56 = a1;
  v62 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v8 + 64) = 0;
  swift_unknownObjectWeakInit(v8 + 56, 0);
  v18 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  v64 = v8;
  *(_OWORD *)(v8 + 112) = 0u;
  *(_OWORD *)(v8 + 128) = 0u;
  v19 = (_QWORD *)(v8 + 112);
  v19[4] = 0;
  static DispatchQoS.default.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v22 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v12, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v62);
  v62 = v18;
  v23 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x8000000100614000, v17, v14, v11, 0);
  v19[7] = v23;
  v24 = v56;
  v25 = v57;
  *(v19 - 12) = v56;
  *(v19 - 11) = v25;
  v26 = v58;
  v19[5] = v58;
  v19[6] = &_swiftEmptyDictionarySingleton;
  v27 = type metadata accessor for SDAirDropReceiveConnectionManager(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = v24;
  v29 = v25;
  swift_retain_n(v26, 2);
  v30 = v28;
  v31 = v29;
  v32 = v59;
  v33 = v60;
  v34 = v61;
  swift_retain(v61);
  v35 = v23;
  v36 = sub_1002D7A1C((uint64_t)v30, (uint64_t)v32, (uint64_t)v33, (uint64_t)v31, v26, v34, (uint64_t)v35);
  *(v19 - 10) = v36;
  v37 = type metadata accessor for SDAirDropReceiveStateMachineAdaptor();
  swift_allocObject(v37, 64, 7);
  v38 = v30;
  v39 = v31;
  v40 = v32;
  v41 = v35;
  swift_retain(v36);
  v42 = v40;
  v43 = v63;
  *(v19 - 9) = sub_1002FAAE0(v38, v42, v39, (_QWORD *)v36, v41);
  aBlock[0] = sub_10021F350((uint64_t)_swiftEmptyArrayStorage);
  v44 = sub_100008384(&qword_1007BA0C8);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  *(v19 - 8) = CurrentValueSubject.init(_:)(aBlock);
  sub_100244418((uint64_t)v43, (uint64_t)(v19 - 5));
  v45 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v46 = (void *)static NSUserDefaults.airdrop.getter(v45);
  LOBYTE(v36) = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  if ((v36 & 1) != 0)
  {
    v47 = (objc_class *)type metadata accessor for SDAirDropiOSNotificationManager();
    v48 = objc_msgSend(objc_allocWithZone(v47), "init");
    v49 = (void (*)(uint64_t))&off_1007221A8;
  }
  else
  {
    v47 = (objc_class *)type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported();
    v48 = (_QWORD *)swift_allocObject(v47, 32, 7);
    v48[3] = 0;
    swift_unknownObjectWeakInit(v48 + 2, 0);
    v49 = (void (*)(uint64_t))&off_1007277F0;
  }
  v66 = v47;
  v67 = v49;
  aBlock[0] = v48;
  swift_beginAccess(v19, out_token, 33, 0);
  sub_1002FA0A0((uint64_t)aBlock, (uint64_t)v19);
  v50 = swift_endAccess(out_token);
  out_token[0] = 0;
  v51 = static OS_dispatch_queue.main.getter(v50);
  v52 = v64;
  v67 = sub_1002FA0E8;
  v68 = v64;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100366D0C;
  v66 = (objc_class *)&unk_100721FE8;
  v53 = _Block_copy(aBlock);
  v54 = v68;
  swift_retain(v52);
  swift_release(v54);
  notify_register_dispatch("AirDropTransfers", out_token, v51, v53);
  _Block_release(v53);

  sub_10022E75C(v43);
  return v52;
}

uint64_t sub_1002FA0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384(&qword_1007BA130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1002FA0E8(uint64_t a1)
{
  uint64_t v1;

  sub_1002F52C4(a1, v1);
}

uint64_t sub_1002FA0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002FA100(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t getEnumTagSinglePayload for SDAirDropServerType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropServerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002FA1EC + 4 * byte_1005D21C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002FA220 + 4 * byte_1005D21C0[v4]))();
}

uint64_t sub_1002FA220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002FA228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002FA230);
  return result;
}

uint64_t sub_1002FA23C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002FA244);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002FA248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002FA250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropServerType()
{
  return &type metadata for SDAirDropServerType;
}

uint64_t sub_1002FA26C()
{
  return sub_1002FA28C(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener) & 1;
}

uint64_t sub_1002FA28C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v12;

  v3 = type metadata accessor for NWListener.State(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + *a1);
  if (v7)
  {
    v8 = swift_retain(v7);
    NWListener.state.getter(v8);
    swift_release(v7);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    v7 = v9 == enum case for NWListener.State.failed(_:);
    if (v9 != enum case for NWListener.State.failed(_:) && v9 == enum case for NWListener.State.cancelled(_:))
      return 1;
    else
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_1002FA36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA148);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA148);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_1002FA3FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x2072756F6A6E6F42;
  if (*v0 != 1)
    v1 = 0x656946207261654ELL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001ALL;
}

unint64_t sub_1002FA470()
{
  unint64_t result;

  result = qword_1007BA160;
  if (!qword_1007BA160)
  {
    result = swift_getWitnessTable(&unk_1005D228C, &type metadata for SDAirDropServerType);
    atomic_store(result, (unint64_t *)&qword_1007BA160);
  }
  return result;
}

uint64_t sub_1002FA4B4()
{
  return sub_1002FA28C(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener) & 1;
}

uint64_t sub_1002FA4D4()
{
  return sub_1002FA28C(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener) & 1;
}

void sub_1002FA4F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD *v23;
  id v24;
  void *v25;
  uint64_t Strong;
  id v27;
  _DWORD *v28;
  uint8_t *buf;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  if (qword_1007B3EF8 != -1)
    swift_once(&qword_1007B3EF8, sub_1002FA884);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA168);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v32 = v30;
    v28 = v6 + 4;
    buf = v6;
    v7 = (void *)v1[4];
    v8 = (void *)v1[5];
    v10 = (void *)v1[6];
    v9 = v1[7];
    v11 = sub_1002FAE40(v7, v8, v10, v9);
    v14 = sub_1002FA914((uint64_t)v11, v12, v13, v9);
    v16 = v15;
    sub_1002FAEA4(v7, v8, v10, v9);
    v31 = sub_100228BD8(v14, (unint64_t)v16, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v28);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SDAirDropReceiveStateMachineAdaptor start {pipeline: %s}", buf, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(buf, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v18 = (void *)v1[4];
  v19 = (_QWORD *)v1[5];
  v21 = (void *)v1[6];
  v20 = v1[7];
  if (v20 < 0)
  {
    v25 = (void *)(v20 & 0x7FFFFFFFFFFFFFFFLL);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 2, v17);
    v19[3] = v1[3];
    swift_unknownObjectWeakAssign(v19 + 2, Strong);
    swift_retain(v18);
    swift_retain(v19);
    v24 = v21;
    v27 = v25;
    swift_unknownObjectRelease(Strong);
    sub_1002D7BA0();
    objc_msgSend(v24, "activate");

    swift_release(v19);
    swift_release(v18);
  }
  else
  {
    v22 = v18;
    v23 = v19;
    v24 = v21;
    objc_msgSend(v24, "activate");
    objc_msgSend(v22, "start");
    objc_msgSend(v23, "activate");

  }
}

void sub_1002FA7B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  if (v3 < 0)
  {
    v6 = (void *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
    swift_retain(v1);
    v5 = v2;
    v7 = v6;
    objc_msgSend(v5, "invalidate");
    sub_10026F8DC();
    swift_release(v1);
  }
  else
  {
    v4 = *(id *)(v0 + 32);
    v5 = v1;
    v7 = v2;
    objc_msgSend(v5, "invalidate");
    objc_msgSend(v4, "stop");
    objc_msgSend(v7, "invalidate");

  }
}

uint64_t sub_1002FA884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA168);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA168);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_1002FA914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *v6;
  Swift::String v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  Swift::String v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  unint64_t v19;
  Swift::String v20;
  Swift::String v21;
  unint64_t v23;

  v5 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v6 = (void *)static NSUserDefaults.airdrop.getter(v5);
  _StringGuts.grow(_:)(66);
  v7._countAndFlagsBits = 0xD000000000000020;
  v7._object = (void *)0x8000000100615CA0;
  String.append(_:)(v7);
  v8 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();
  v9 = (v8 & 1) == 0;
  if ((v8 & 1) != 0)
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if (v9)
    v11 = (const char *)0xE500000000000000;
  else
    v11 = (const char *)0xE400000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._object = (void *)0x8000000100615CD0;
  v13._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v13);
  v14 = SFAirDropUserDefaults.systemLevelProgressEnabled.getter();
  v15 = (v14 & 1) == 0;
  if ((v14 & 1) != 0)
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if (v15)
    v17 = (const char *)0xE500000000000000;
  else
    v17 = (const char *)0xE400000000000000;
  v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  if (a4 < 0)
  {
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease((const char *)0xE000000000000000, 0);
    v19 = 0xD000000000000026;
  }
  else
  {
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease((const char *)0xE000000000000000, 0);
    v19 = 0xD000000000000021;
  }
  v23 = v19;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease((const char *)0xE000000000000000);
  v21._countAndFlagsBits = 93;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);

  return v23;
}

unint64_t sub_1002FAAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002FA914(a1, a2, a3, *(_QWORD *)(v3 + 24));
}

_QWORD *sub_1002FAAE0(void *a1, void *a2, void *a3, _QWORD *a4, void *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  void *v20;
  objc_class *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  unint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  id v30;
  void *v32;
  objc_super v34;

  v6 = v5;
  v5[3] = 0;
  swift_unknownObjectWeakInit(v5 + 2, 0);
  v11 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
  v12 = (void *)static NSUserDefaults.airdrop.getter(v11);
  v13 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  if ((v13 & 1) != 0)
  {
    v14 = type metadata accessor for SDAirDropReceiveStateMachine();
    swift_allocObject(v14, 64, 7);
    v15 = a1;
    v16 = a2;
    v17 = sub_10042D0F4((uint64_t)v15, (uint64_t)v16);
    a4[3] = &off_100728720;
    swift_unknownObjectWeakAssign(a4 + 2, v17);
    v18 = objc_msgSend(objc_allocWithZone((Class)SDAirDropClassroomTransferManager), "init");
    sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
    v19 = swift_retain(v17);
    v32 = a5;
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    v21 = (objc_class *)type metadata accessor for SDAirDropReceiveClassroomHandler();
    v22 = (char *)objc_allocWithZone(v21);
    swift_unknownObjectWeakInit(&v22[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_delegate], 0);
    v23 = swift_unknownObjectWeakInit(&v22[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_classroomDelegate], 0);
    *(_QWORD *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_queue] = v20;
    *(_QWORD *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_stateMachine] = v17;
    swift_unknownObjectWeakAssign(v23, 0);
    swift_retain(v17);
    v24 = v22;
    v25 = v20;
    *(_QWORD *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations] = sub_10021E9A4((uint64_t)_swiftEmptyArrayStorage);

    v34.receiver = v24;
    v34.super_class = v21;
    v26 = (unint64_t)objc_msgSendSuper2(&v34, "init");
    swift_release(v17);

    swift_unknownObjectWeakAssign(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_classroomDelegate, v18);
    v27 = (id)v26;
    objc_msgSend(v18, "setAlertManager:", v27);

    v28 = v26 | 0x8000000000000000;
  }
  else
  {
    v29 = objc_msgSend(objc_allocWithZone((Class)SDAirDropReceiveManager), "init");
    v17 = objc_msgSend(objc_allocWithZone((Class)SDAirDropClassroomTransferManager), "init");
    v30 = objc_msgSend(objc_allocWithZone((Class)SDAirDropTransferManager), "init");
    objc_msgSend(v29, "setAlertManager:", v30);
    objc_msgSend(v30, "setDelegate:", v29);
    v18 = v30;
    objc_msgSend(v17, "setAlertManager:", v18);

    swift_release(a4);
    v28 = 0;
    a4 = v29;
  }
  v6[4] = a4;
  v6[5] = v17;
  v6[6] = v18;
  v6[7] = v28;
  return v6;
}

uint64_t sub_1002FADF0()
{
  uint64_t v0;

  sub_100232F78(v0 + 16);
  sub_1002FAEA4(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for SDAirDropReceiveStateMachineAdaptor()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary35SDAirDropReceiveStateMachineAdaptor);
}

id sub_1002FAE40(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v5;
  uint64_t v6;
  id v7;

  if (a4 < 0)
  {
    v6 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain(a1);
    swift_retain(a2);
    a2 = a3;
    a3 = (void *)v6;
  }
  else
  {
    v5 = a1;
  }
  v7 = a2;
  return a3;
}

void destroy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1)
{
  sub_1002FAEA4(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void sub_1002FAEA4(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;

  if (a4 < 0)
  {
    v5 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_release(a1);
    swift_release(a2);
    a2 = a3;
    a3 = (void *)v5;
  }
  else
  {

  }
}

_QWORD *initializeWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_1002FAE40(*(void **)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_1002FAE40(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  sub_1002FAEA4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, _OWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_1002FAEA4(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 24) >> 57) >> 6) | (2
                                                           * ((*(_QWORD *)(a1 + 24) >> 57) & 0x38 | *(_QWORD *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1002FB09C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) >> 63;
}

uint64_t sub_1002FB0A8(uint64_t result)
{
  *(_QWORD *)(result + 24) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1002FB0B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 24) = *(_QWORD *)(result + 24) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveStateMachineAdaptor.Pipeline()
{
  return &type metadata for SDAirDropReceiveStateMachineAdaptor.Pipeline;
}

uint64_t sub_1002FB0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA228);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA228);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1002FB1C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropiOSNotificationManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAirDropiOSNotificationManager()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary31SDAirDropiOSNotificationManager);
}

uint64_t sub_1002FB220(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAirDropiOSNotificationManager_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1002FB25C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1007BA280 + dword_1007BA280);
  v3 = (_QWORD *)swift_task_alloc(unk_1007BA284);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000D12C;
  return v5(a1);
}

uint64_t sub_1002FB2BC()
{
  uint64_t v0;

  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return sub_1002FB310(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1002FB310(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1002FB318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B52B8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[10] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v8);
  v3[12] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA2A8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v9);
  v3[14] = swift_task_alloc(v9);
  v10 = sub_100008384(&qword_1007B5328);
  v3[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[16] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v12);
  v3[18] = swift_task_alloc(v12);
  v3[19] = swift_task_alloc(v12);
  v3[20] = swift_task_alloc(v12);
  v3[21] = swift_task_alloc(v12);
  v13 = sub_100008384(&qword_1007B5720);
  v3[22] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[23] = v14;
  v3[24] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v3[25] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[26] = v16;
  v3[27] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v17 = static AirDropActor.shared;
  v3[28] = static AirDropActor.shared;
  return swift_task_switch(sub_1002FB4D4, v17, 0);
}

uint64_t sub_1002FB4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  _QWORD *v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  void (*v69)(_QWORD, const char *, uint64_t);
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  const char *v74;
  uint64_t v75;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[3];

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = sub_100008384(&qword_1007B5280);
  SFAirDrop.PermissionRequest.style.getter(v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) != enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    v20 = *(_QWORD *)(v0 + 192);
    v22 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 112);
    v28 = *(_QWORD *)(v0 + 96);
    v104 = *(_QWORD *)(v0 + 88);
    v106 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v104);
    swift_task_dealloc(v106);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 96))(v8, *(_QWORD *)(v0 + 176));
  *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v8 + 8)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v8 + 24), v10);
  v11 = *(_QWORD *)(v8 + 32);
  v12 = sub_100008384(&qword_1007B5728);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8 + *(int *)(v12 + 80), v7);
  v14 = SFAirDrop.DeclineAction.id.getter(v13);
  v16 = v15;
  v100 = v9;
  if (v9)
  {
    v17 = *(_QWORD *)(v0 + 24);
    v18 = *(const char **)(v0 + 32);
    if (v14 == v17 && v18 == v15)
    {
      v19 = swift_bridgeObjectRelease((const char *)v11).n128_u64[0];
LABEL_10:
      swift_bridgeObjectRelease(v16, *(double *)&v19);
      v31 = (_QWORD *)swift_task_alloc(async function pointer to SFAirDrop.DeclineAction.decline()[1]);
      *(_QWORD *)(v0 + 232) = v31;
      v32 = sub_1002FBD34;
      goto LABEL_52;
    }
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v17, v18, 0);
    v19 = swift_bridgeObjectRelease(v16).n128_u64[0];
    if ((v30 & 1) != 0)
    {
      v16 = (const char *)v11;
      goto LABEL_10;
    }
  }
  else
  {
    v19 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  v33 = *(_QWORD *)(v11 + 16);
  if (v33)
  {
    v34 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 80);
    v36 = v11 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    v107 = *(_QWORD *)(v35 + 72);
    v103 = enum case for SFAirDrop.AcceptAction.single<A>(_:);
    v99 = v11;
    swift_bridgeObjectRetain((const char *)v11, *(double *)&v19);
    v37 = (const char *)_swiftEmptyArrayStorage;
    do
    {
      v39 = *(_QWORD *)(v0 + 88);
      v38 = *(_QWORD *)(v0 + 96);
      v40 = *(_QWORD *)(v0 + 72);
      v105(v38, v36, v40);
      v105(v39, v38, v40);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v35 + 88))(v39, v40) == v103)
      {
        v41 = *(_QWORD *)(v0 + 144);
        v42 = *(_QWORD *)(v0 + 120);
        v101 = *(_QWORD *)(v0 + 104);
        v43 = v37;
        v44 = *(_QWORD *)(v0 + 88);
        (*(void (**)(uint64_t, _QWORD))(v35 + 96))(v44, *(_QWORD *)(v0 + 72));
        v45 = v44 + *(int *)(sub_100008384(&qword_1007BA2B0) + 48);
        v102 = v33;
        v46 = v34;
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
        v48 = v44;
        v37 = v43;
        v47(v41, v48, v42);
        v49 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v45, v49);
        v47(v101, v41, v42);
        v34 = v46;
        v33 = v102;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v101, 0, 1, v42);
        v50 = *(void (**)(_QWORD, _QWORD))(v35 + 8);
      }
      else
      {
        v51 = *(_QWORD *)(v0 + 120);
        v52 = *(_QWORD *)(v0 + 104);
        v50 = *(void (**)(_QWORD, _QWORD))(v35 + 8);
        v50(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v52, 1, 1, v51);
      }
      v53 = *(_QWORD *)(v0 + 120);
      v54 = *(_QWORD *)(v0 + 104);
      v50(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v54, 1, v53) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 104), &qword_1007BA2A8);
      }
      else
      {
        v55 = *(_QWORD *)(v0 + 152);
        v56 = *(_QWORD *)(v0 + 136);
        v57 = *(_QWORD *)(v0 + 120);
        v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
        v58(v55, *(_QWORD *)(v0 + 104), v57);
        v58(v56, v55, v57);
        if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
          v37 = (const char *)sub_1002284C4(0, *((_QWORD *)v37 + 2) + 1, 1, (unint64_t)v37);
        v60 = *((_QWORD *)v37 + 2);
        v59 = *((_QWORD *)v37 + 3);
        if (v60 >= v59 >> 1)
          v37 = (const char *)sub_1002284C4(v59 > 1, v60 + 1, 1, (unint64_t)v37);
        v61 = *(_QWORD *)(v0 + 136);
        v62 = *(_QWORD *)(v0 + 120);
        *((_QWORD *)v37 + 2) = v60 + 1;
        v58((uint64_t)&v37[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v60], v61, v62);
      }
      v36 += v107;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease_n(v99, 2);
    v64 = *((_QWORD *)v37 + 2);
    if (!v64)
      goto LABEL_38;
  }
  else
  {
    v63 = swift_bridgeObjectRelease((const char *)v11, *(double *)&v19);
    v37 = (const char *)_swiftEmptyArrayStorage;
    v64 = _swiftEmptyArrayStorage[2];
    if (!v64)
    {
LABEL_38:
      v78 = 1;
      goto LABEL_41;
    }
  }
  v65 = *(_QWORD *)(v0 + 128);
  v66 = *(_QWORD *)(v0 + 32);
  v67 = &v37[(*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80)];
  v68 = *(_QWORD *)(v65 + 72);
  v69 = *(void (**)(_QWORD, const char *, uint64_t))(v65 + 16);
  swift_bridgeObjectRetain(v37);
  while (1)
  {
    v71 = *(_QWORD *)(v0 + 120);
    v69(*(_QWORD *)(v0 + 160), v67, v71);
    v72 = SFAirDrop.AcceptAction.Single.id.getter(v71);
    v74 = v73;
    if (!v100)
    {
      v70 = swift_bridgeObjectRelease(v73);
      goto LABEL_29;
    }
    v75 = *(_QWORD *)(v0 + 24);
    if (v72 == v75 && *(_QWORD *)(v0 + 32) == (_QWORD)v73)
      break;
    v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v75, v66, 0);
    v70 = swift_bridgeObjectRelease(v74);
    if ((v77 & 1) != 0)
    {
      v74 = v37;
      goto LABEL_40;
    }
LABEL_29:
    (*(void (**)(_QWORD, _QWORD, __n128))(v65 + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 120), v70);
    v67 += v68;
    if (!--v64)
    {
      v63 = swift_bridgeObjectRelease(v37);
      goto LABEL_38;
    }
  }
  v70.n128_u64[0] = swift_bridgeObjectRelease(v37).n128_u64[0];
LABEL_40:
  v79 = *(_QWORD *)(v0 + 160);
  v81 = *(_QWORD *)(v0 + 120);
  v80 = *(_QWORD *)(v0 + 128);
  v82 = *(_QWORD *)(v0 + 112);
  v83 = swift_bridgeObjectRelease(v74, v70.n128_f64[0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v80 + 32))(v82, v79, v81, v83);
  v78 = 0;
LABEL_41:
  v85 = *(_QWORD *)(v0 + 120);
  v84 = *(_QWORD *)(v0 + 128);
  v86 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v84 + 56))(v86, v78, 1, v85, v63);
  v87 = swift_bridgeObjectRelease(v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v84 + 48))(v86, 1, v85, v87) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 112), &qword_1007BA2A8);
    if (qword_1007B3F00 != -1)
      swift_once(&qword_1007B3F00, sub_1002FB0DC);
    v88 = *(const char **)(v0 + 32);
    v89 = type metadata accessor for Logger(0);
    sub_100221DF8(v89, (uint64_t)qword_1007BA228);
    v90 = swift_bridgeObjectRetain_n(v88, 2);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc(12, -1);
      v94 = swift_slowAlloc(32, -1);
      v108[0] = v94;
      *(_DWORD *)v93 = 136315138;
      if (v100)
      {
        v95 = *(_QWORD *)(v0 + 24);
        v96 = v88;
      }
      else
      {
        v108[1] = 0;
        v108[2] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease((const char *)0xE000000000000000);
        v96 = (const char *)0x8000000100612DF0;
        v95 = 0xD000000000000015;
      }
      swift_bridgeObjectRetain(v88);
      *(_QWORD *)(v0 + 16) = sub_100228BD8(v95, (unint64_t)v96, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v93 + 4);
      swift_bridgeObjectRelease(v96);
      swift_bridgeObjectRelease_n(v88, 2);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Chosen action from alert (%s) did not match any actions in permission request. Canceling AirDrop", v93, 0xCu);
      swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v93, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v88, 2);
    }

    v31 = (_QWORD *)swift_task_alloc(async function pointer to SFAirDrop.DeclineAction.decline()[1]);
    *(_QWORD *)(v0 + 264) = v31;
    v32 = sub_1002FBFF4;
LABEL_52:
    *v31 = v0;
    v31[1] = v32;
    return SFAirDrop.DeclineAction.decline()();
  }
  else
  {
    v97 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 112), v97);
    SFAirDrop.AcceptAction.Single.defaultAnswer.getter(v97);
    v98 = (_QWORD *)swift_task_alloc(async function pointer to SFAirDrop.AcceptAction.Single.accept(with:)[1]);
    *(_QWORD *)(v0 + 248) = v98;
    *v98 = v0;
    v98[1] = sub_1002FBE74;
    return SFAirDrop.AcceptAction.Single.accept(with:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_1002FBD34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002FC058;
  else
    v4 = sub_1002FBD98;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 224), 0);
}

uint64_t sub_1002FBD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FBE74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  v5 = *(_QWORD *)(*v1 + 56);
  v4 = *(_QWORD *)(*v1 + 64);
  v6 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1002FC13C;
  else
    v7 = sub_1002FBF00;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 224), 0);
}

uint64_t sub_1002FBF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FBFF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002FC238;
  else
    v4 = sub_1002FBD98;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 224), 0);
}

uint64_t sub_1002FC058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FC238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FC31C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1[3] = a1;
  v2 = type metadata accessor for SFInterventionResponse(0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008384(&qword_1007BA288);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFInterventionWorkflow(0);
  v1[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007B5720);
  v1[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[14] = v9;
  v1[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007BA290);
  v1[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v1[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[18] = v12;
  v1[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B5280);
  v1[20] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[21] = v14;
  v1[22] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v15 = static AirDropActor.shared;
  v1[23] = static AirDropActor.shared;
  return swift_task_switch(sub_1002FC4A8, v15, 0);
}

uint64_t sub_1002FC4A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_QWORD *)(v1 + 168);
  v5 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  v8 = SFAirDropReceive.Transfer.state.getter(a1);
  SFAirDropReceive.Transfer.State.permissionRequest.getter(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v1 + 128), &qword_1007BA290);
LABEL_18:
    v41 = *(_QWORD *)(v1 + 152);
    v43 = *(_QWORD *)(v1 + 120);
    v42 = *(_QWORD *)(v1 + 128);
    v44 = *(_QWORD *)(v1 + 96);
    v45 = *(_QWORD *)(v1 + 72);
    v46 = *(_QWORD *)(v1 + 48);
    swift_task_dealloc(*(_QWORD *)(v1 + 176));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v9 = *(_QWORD *)(v1 + 160);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 + 168) + 32))(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 128), v9);
  if ((SFAirDrop.PermissionRequest.isAnswered.getter(v9) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 8))(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 160));
    goto LABEL_18;
  }
  v11 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 104);
  SFAirDrop.PermissionRequest.style.getter(*(_QWORD *)(v1 + 160));
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v10, v12);
  if (v13 == enum case for SFAirDrop.PermissionRequest.Style.intervention<A>(_:))
  {
    v14 = *(_QWORD *)(v1 + 120);
    v15 = *(_QWORD *)(v1 + 96);
    v16 = *(_QWORD *)(v1 + 80);
    v17 = *(_QWORD *)(v1 + 88);
    v19 = *(_QWORD *)(v1 + 64);
    v18 = *(_QWORD *)(v1 + 72);
    v20 = *(_QWORD *)(v1 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 112) + 96))(v14, *(_QWORD *)(v1 + 104));
    v21 = v14 + *(int *)(sub_100008384(&qword_1007BA298) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v14, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v21, v20);
    if (qword_1007B3F00 != -1)
      swift_once(&qword_1007B3F00, sub_1002FB0DC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100221DF8(v22, (uint64_t)qword_1007BA228);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Showing intervention permission request", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    *(_QWORD *)(v1 + 232) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()), "init");
    v27 = (_QWORD *)swift_task_alloc(dword_1007BE6FC);
    *(_QWORD *)(v1 + 240) = v27;
    *v27 = v1;
    v27[1] = sub_1002FCF64;
    return sub_1003CAA6C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 96));
  }
  else
  {
    if (v13 != enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:))
    {
      v39 = *(_QWORD *)(v1 + 112);
      v38 = *(_QWORD *)(v1 + 120);
      v40 = *(_QWORD *)(v1 + 104);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 168) + 8))(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 160));
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      goto LABEL_18;
    }
    v29 = *(_QWORD *)(v1 + 120);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 112) + 96))(v29, *(_QWORD *)(v1 + 104));
    *(_QWORD *)&v30 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v29 + 8)).n128_u64[0];
    *(_QWORD *)&v31 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v29 + 24), v30).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)(v29 + 32), v31);
    if (qword_1007B3F00 != -1)
      swift_once(&qword_1007B3F00, sub_1002FB0DC);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100221DF8(v32, (uint64_t)qword_1007BA228);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Showing alert permission request", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    *(_DWORD *)(v1 + 272) = *(_DWORD *)(sub_100008384(&qword_1007B5728) + 80);
    v47 = (uint64_t (*)(_QWORD))((char *)&dword_1007B5718 + dword_1007B5718);
    v37 = (_QWORD *)swift_task_alloc(unk_1007B571C);
    *(_QWORD *)(v1 + 192) = v37;
    *v37 = v1;
    v37[1] = sub_1002FC908;
    return v47(*(_QWORD *)(v1 + 176));
  }
}

uint64_t sub_1002FC908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t **v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **v9;

  v6 = (*v3)[24];
  v7 = *v3;
  v7[25] = v2;
  swift_task_dealloc(v6);
  if (v2)
    return swift_task_switch(sub_1002FCA28, v7[23], 0);
  v7[26] = a2;
  v9 = (uint64_t **)swift_task_alloc(dword_1007BA2A4);
  v7[27] = (uint64_t)v9;
  *v9 = v7;
  v9[1] = (uint64_t *)sub_1002FC9B4;
  return sub_1002FB318(a1, a2, v7[22]);
}

uint64_t sub_1002FC9B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(const char **)(*v1 + 208);
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  if (v0)
    v5 = sub_1002FCD24;
  else
    v5 = sub_1002FCC68;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 184), 0);
}

uint64_t sub_1002FCA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 120) + *(int *)(v0 + 272);
  v2 = type metadata accessor for SFAirDrop.DeclineAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + 200);
  if (qword_1007B3F00 != -1)
    swift_once(&qword_1007B3F00, sub_1002FB0DC);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BA228);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v3);
    v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to show alert or intervention: %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }
  swift_errorRelease(v3);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v12 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FCC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 120) + *(int *)(v0 + 272);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v2 = type metadata accessor for SFAirDrop.DeclineAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FCD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 120) + *(int *)(v0 + 272);
  v2 = type metadata accessor for SFAirDrop.DeclineAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + 224);
  if (qword_1007B3F00 != -1)
    swift_once(&qword_1007B3F00, sub_1002FB0DC);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BA228);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v3);
    v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to show alert or intervention: %@", v8, 0xCu);
    v11 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }
  swift_errorRelease(v3);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v12 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FCF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v6;

  v3 = *(void **)(*(_QWORD *)v1 + 232);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  v4 = *(_QWORD **)v1;
  v4[31] = v0;
  swift_task_dealloc(v2);

  if (v0)
    return swift_task_switch(sub_1002FD158, v4[23], 0);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to SFAirDrop.PermissionRequest.InterventionAction.respond(with:)[1]);
  v4[32] = v6;
  *v6 = v4;
  v6[1] = sub_1002FD00C;
  return SFAirDrop.PermissionRequest.InterventionAction.respond(with:)(v4[6], v4[7]);
}

uint64_t sub_1002FD00C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002FD394;
  else
    v4 = sub_1002FD070;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 184), 0);
}

uint64_t sub_1002FD070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FD158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 248);
  if (qword_1007B3F00 != -1)
    swift_once(&qword_1007B3F00, sub_1002FB0DC);
  v5 = type metadata accessor for Logger(0);
  sub_100221DF8(v5, (uint64_t)qword_1007BA228);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v4);
    v11 = _swift_stdlib_bridgeErrorToNSError(v4);
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4);
    *v10 = v11;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to show alert or intervention: %@", v9, 0xCu);
    v12 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_errorRelease(v4);
    swift_errorRelease(v4);
  }
  swift_errorRelease(v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v13 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FD394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 264);
  if (qword_1007B3F00 != -1)
    swift_once(&qword_1007B3F00, sub_1002FB0DC);
  v8 = type metadata accessor for Logger(0);
  sub_100221DF8(v8, (uint64_t)qword_1007BA228);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v7);
    v14 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to show alert or intervention: %@", v12, 0xCu);
    v15 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }
  swift_errorRelease(v7);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  v16 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FD5E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v2[85] = v1;
  v2[84] = a1;
  v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  v2[86] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[87] = v4;
  v2[88] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008384(&qword_1007B7E08);
  v2[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008384(&qword_1007B7760);
  v2[90] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA310);
  v2[91] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFAirDropSend.Request(0);
  v2[92] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[93] = v9;
  v2[94] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007C5E70) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[95] = swift_task_alloc(v10);
  v2[96] = swift_task_alloc(v10);
  v11 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v2[97] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[98] = v12;
  v2[99] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDrop.TransferType(0);
  v2[100] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[101] = v14;
  v2[102] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007C4330);
  v2[103] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384((uint64_t *)&unk_1007C33D0);
  v2[104] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v2[105] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[106] = v18;
  v2[107] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v2[108] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  v2[109] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[110] = v21;
  v2[111] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CancellationError(0);
  v2[112] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v2[113] = v23;
  v2[114] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SFAirDropSend.Failure(0);
  v2[115] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v2[116] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[117] = swift_task_alloc(v26);
  v2[118] = swift_task_alloc(v26);
  v27 = sub_100008384(&qword_1007BA318);
  v2[119] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA320) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[120] = swift_task_alloc(v28);
  v2[121] = swift_task_alloc(v28);
  v29 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[122] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v2[123] = v30;
  v31 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[124] = swift_task_alloc(v31);
  v2[125] = swift_task_alloc(v31);
  v32 = (*(_QWORD *)(*(_QWORD *)(_s10AskRequestVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[126] = swift_task_alloc(v32);
  v2[127] = swift_task_alloc(v32);
  v33 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2[128] = v33;
  v34 = *(_QWORD *)(v33 - 8);
  v2[129] = v34;
  v35 = (*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[130] = swift_task_alloc(v35);
  v2[131] = swift_task_alloc(v35);
  v2[132] = swift_task_alloc(v35);
  v2[133] = swift_task_alloc(v35);
  v2[134] = swift_task_alloc(v35);
  v2[135] = swift_task_alloc(v35);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v36 = static AirDropActor.shared;
  v2[136] = static AirDropActor.shared;
  return swift_task_switch(sub_1002FD9D8, v36, 0);
}

uint64_t sub_1002FD9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v9;

  v2 = *(_QWORD *)(v1 + 680);
  v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  *(_QWORD *)(v1 + 1096) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  v4 = v2 + v3;
  v5 = SFAirDropSend.Request.urls.getter(a1);
  if (v5 && (v6 = *(_QWORD *)(v5 + 16), swift_bridgeObjectRelease((const char *)v5), v6))
  {
    *(_QWORD *)(v1 + 240) = 0;
    *(_OWORD *)(v1 + 208) = 0u;
    *(_OWORD *)(v1 + 224) = 0u;
    *(_OWORD *)(v1 + 176) = 0u;
    *(_OWORD *)(v1 + 192) = 0u;
    *(_OWORD *)(v1 + 160) = 0u;
    *(_OWORD *)(v1 + 144) = 0u;
    v7 = (_QWORD *)swift_task_alloc(dword_1007BA33C);
    *(_QWORD *)(v1 + 1104) = v7;
    *v7 = v1;
    v7[1] = sub_1002FDACC;
    return sub_1002FF660(v4, 0, 0x300000000, v1 + 144);
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1007BA32C);
    *(_QWORD *)(v1 + 1152) = v9;
    *v9 = v1;
    v9[1] = sub_1002FDCBC;
    return sub_1003027BC(v1 + 16, *(_QWORD *)(v1 + 1008), *(_QWORD *)(v1 + 992), *(_QWORD *)(v1 + 960), *(_QWORD *)(v1 + 952));
  }
}

uint64_t sub_1002FDACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 1104);
  *(_QWORD *)(*v2 + 1112) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 1088);
  if (v1)
  {
    v7 = sub_1002FEF88;
  }
  else
  {
    *(_QWORD *)(v4 + 1120) = a1;
    v7 = sub_1002FDB40;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1002FDB40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[85];
  v2 = swift_task_alloc(32);
  v0[141] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
  v0[142] = v3;
  *v3 = v0;
  v3[1] = sub_1002FDBBC;
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0[134], v0[140], &unk_1007BA358, v2, v0[128]);
}

uint64_t sub_1002FDBBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1136);
  v4 = *(_QWORD *)(*v1 + 1128);
  v5 = *(const char **)(*v1 + 1120);
  *(_QWORD *)(*v1 + 1144) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v4);
  if (v0)
    v6 = sub_1002FF0A0;
  else
    v6 = sub_1002FDC40;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 1088), 0);
}

uint64_t sub_1002FDC40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[134];
  v2 = v0[135];
  v3 = v0[128];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[129] + 32);
  v0[166] = v4;
  v4(v2, v1, v3);
  sub_100397D48();
  v5 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[167] = v5;
  *v5 = v0;
  v5[1] = sub_1002FE31C;
  return sub_100305890(0);
}

uint64_t sub_1002FDCBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  const char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1152);
  *(_QWORD *)(v2 + 1160) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 1172) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 1168) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 1176) = *(_QWORD *)(v2 + 24);
  v23 = v5;
  *(_QWORD *)(v2 + 1184) = v5;
  v21 = *(_QWORD *)(v2 + 48);
  v22 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 1192) = v22;
  *(_QWORD *)(v2 + 1200) = v21;
  v20 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 1208) = v20;
  v19 = *(_BYTE *)(v2 + 64);
  *(_BYTE *)(v2 + 1412) = v19;
  v7 = *(_QWORD *)(v2 + 72);
  v6 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 1216) = v7;
  *(_QWORD *)(v2 + 1224) = v6;
  v9 = *(_QWORD *)(v2 + 88);
  v8 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 1232) = v9;
  *(_QWORD *)(v2 + 1240) = v8;
  v10 = *(_QWORD *)(v2 + 104);
  v11 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 1248) = v10;
  *(_QWORD *)(v2 + 1256) = v11;
  v12 = *(_QWORD *)(v2 + 120);
  v13 = *(_QWORD *)(v2 + 128);
  *(_QWORD *)(v2 + 1264) = v12;
  *(_QWORD *)(v2 + 1272) = v13;
  v18 = *(const char **)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
  {
    v14 = *(_QWORD *)(v2 + 1088);
    v15 = sub_1002FF1B8;
  }
  else
  {
    v16 = *(_QWORD *)(v2 + 1088);
    sub_10000D0F0(*(_QWORD *)(v2 + 952), &qword_1007BA318);
    *(_QWORD *)(v2 + 352) = v23;
    *(_QWORD *)(v2 + 360) = v22;
    *(_QWORD *)(v2 + 368) = v21;
    *(_QWORD *)(v2 + 376) = v20;
    *(_BYTE *)(v2 + 384) = v19;
    *(_QWORD *)(v2 + 392) = v7;
    *(_QWORD *)(v2 + 400) = v6;
    *(_QWORD *)(v2 + 408) = v9;
    *(_QWORD *)(v2 + 416) = v8;
    *(_QWORD *)(v2 + 424) = v10;
    *(_QWORD *)(v2 + 432) = v11;
    *(_QWORD *)(v2 + 440) = v12;
    *(_QWORD *)(v2 + 448) = v13;
    swift_bridgeObjectRelease(v18);
    v15 = sub_1002FDE1C;
    v14 = v16;
  }
  return swift_task_switch(v15, v14, 0);
}

uint64_t sub_1002FDE1C()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  const char *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  double v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v23 = *(_QWORD *)(v0 + 1264);
  v24 = *(_QWORD *)(v0 + 1272);
  v1 = *(const char **)(v0 + 1256);
  v19 = *(_QWORD *)(v0 + 1232);
  v20 = *(const char **)(v0 + 1240);
  v2 = *(const char **)(v0 + 1224);
  v17 = *(unsigned __int8 *)(v0 + 1412);
  v18 = *(_QWORD *)(v0 + 1216);
  v3 = *(const char **)(v0 + 1208);
  v16 = *(_QWORD *)(v0 + 1200);
  v4 = *(const char **)(v0 + 1192);
  v5 = *(_QWORD *)(v0 + 1184);
  v21 = *(void **)(v0 + 1176);
  v22 = *(_QWORD *)(v0 + 1248);
  v27 = *(unsigned int *)(v0 + 1168) | ((unint64_t)*(unsigned __int8 *)(v0 + 1172) << 32);
  v6 = *(_QWORD *)(v0 + 1000);
  v7 = *(_QWORD *)(v0 + 992);
  v8 = *(_QWORD *)(v0 + 968);
  v9 = *(_QWORD *)(v0 + 960);
  v25 = *(_QWORD *)(v0 + 680);
  v26 = *(_QWORD *)(v0 + 1096);
  sub_100221DB4(*(_QWORD *)(v0 + 1008), *(_QWORD *)(v0 + 1016), _s10AskRequestVMa);
  sub_100221DB4(v7, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v9, v8, &qword_1007BA320);
  *(_QWORD *)(v0 + 248) = v5;
  *(_QWORD *)(v0 + 256) = v4;
  *(_QWORD *)(v0 + 264) = v16;
  *(_QWORD *)(v0 + 272) = v3;
  *(_QWORD *)(v0 + 280) = v17;
  *(_QWORD *)(v0 + 288) = v18;
  *(_QWORD *)(v0 + 296) = v2;
  *(_QWORD *)(v0 + 304) = v19;
  *(_QWORD *)(v0 + 312) = v20;
  *(_QWORD *)(v0 + 320) = v22;
  *(_QWORD *)(v0 + 328) = v1;
  *(_QWORD *)(v0 + 336) = v23;
  *(_QWORD *)(v0 + 344) = v24;
  swift_bridgeObjectRetain(v1);
  v10 = v21;
  *(_QWORD *)&v11 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRetain(v3, v11).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRetain(v2, v12).n128_u64[0];
  swift_bridgeObjectRetain(v20, v13);
  sub_100244404(v23, v24);
  v14 = (_QWORD *)swift_task_alloc(dword_1007BA33C);
  *(_QWORD *)(v0 + 1280) = v14;
  *v14 = v0;
  v14[1] = sub_1002FDFC4;
  return sub_1002FF660(v25 + v26, (uint64_t)v21, v27, v0 + 248);
}

uint64_t sub_1002FDFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  const char *v8;
  const char *v9;
  const char *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t (*v17)();
  unint64_t v20;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 1280);
  v20 = *(_QWORD *)(*v2 + 1272);
  v5 = *(_QWORD *)(*v2 + 1264);
  v6 = *(const char **)(*v2 + 1256);
  v7 = *(const char **)(*v2 + 1240);
  v8 = *(const char **)(*v2 + 1224);
  v9 = *(const char **)(*v2 + 1208);
  v10 = *(const char **)(*v2 + 1192);
  v11 = *(void **)(*v2 + 1176);
  *(_QWORD *)(*v2 + 1288) = v1;
  swift_task_dealloc(v4);
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v9, v12).n128_u64[0];
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v8, v13).n128_u64[0];
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v7, v14).n128_u64[0];
  swift_bridgeObjectRelease(v6, v15);
  sub_100225AA0(v5, v20);

  v16 = *(_QWORD *)(v3 + 1088);
  if (v1)
  {
    v17 = sub_1002FF2D0;
  }
  else
  {
    *(_QWORD *)(v3 + 1296) = a1;
    v17 = sub_1002FE0B4;
  }
  return swift_task_switch(v17, v16, 0);
}

uint64_t sub_1002FE0B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = v0[147];
  v2 = v0[127];
  v3 = v0[125];
  v4 = v0[121];
  v5 = v0[85];
  v6 = (_QWORD *)swift_task_alloc(64);
  v0[163] = v6;
  v6[2] = v5;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v3;
  v6[6] = v0 + 44;
  v6[7] = v4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
  v0[164] = v7;
  *v7 = v0;
  v7[1] = sub_1002FE164;
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0[133], v0[162], &unk_1007BA348, v6, v0[128]);
}

uint64_t sub_1002FE164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1312);
  v4 = *(_QWORD *)(*v1 + 1304);
  v5 = *(const char **)(*v1 + 1296);
  *(_QWORD *)(*v1 + 1320) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v4);
  if (v0)
    v6 = sub_1002FF498;
  else
    v6 = sub_1002FE1E8;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 1088), 0);
}

uint64_t sub_1002FE1E8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 1272);
  v2 = *(_QWORD *)(v0 + 1264);
  v3 = *(const char **)(v0 + 1256);
  v4 = *(const char **)(v0 + 1240);
  v5 = *(const char **)(v0 + 1224);
  v6 = *(const char **)(v0 + 1208);
  v7 = *(const char **)(v0 + 1192);
  v20 = *(_QWORD *)(v0 + 1016);
  v8 = *(_QWORD *)(v0 + 1000);
  v9 = *(_QWORD *)(v0 + 968);

  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v7).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v6, v10).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v3, v11).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v4, v12).n128_u64[0];
  swift_bridgeObjectRelease(v5, v13);
  sub_100225AA0(v2, v1);
  sub_10000D0F0(v9, &qword_1007BA320);
  sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v20, _s10AskRequestVMa);
  v14 = *(_QWORD *)(v0 + 1064);
  v15 = *(_QWORD *)(v0 + 1080);
  v16 = *(_QWORD *)(v0 + 1024);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1032) + 32);
  *(_QWORD *)(v0 + 1328) = v17;
  v17(v15, v14, v16);
  sub_100397D48();
  v18 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  *(_QWORD *)(v0 + 1336) = v18;
  *v18 = v0;
  v18[1] = sub_1002FE31C;
  return sub_100305890(0);
}

uint64_t sub_1002FE31C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1088);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1336));
  return swift_task_switch(sub_1002FE374, v1, 0);
}

uint64_t sub_1002FE374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 1080);
  v2 = *(_QWORD *)(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 1048);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1016);
  v8 = *(_QWORD *)(v0 + 1008);
  v9 = *(_QWORD *)(v0 + 1000);
  v11 = *(_QWORD *)(v0 + 992);
  v12 = *(_QWORD *)(v0 + 968);
  v13 = *(_QWORD *)(v0 + 960);
  v14 = *(_QWORD *)(v0 + 952);
  v15 = *(_QWORD *)(v0 + 944);
  v16 = *(_QWORD *)(v0 + 936);
  v17 = *(_QWORD *)(v0 + 912);
  v18 = *(_QWORD *)(v0 + 888);
  v19 = *(_QWORD *)(v0 + 864);
  v20 = *(_QWORD *)(v0 + 856);
  v21 = *(_QWORD *)(v0 + 832);
  v22 = *(_QWORD *)(v0 + 824);
  v23 = *(_QWORD *)(v0 + 816);
  v24 = *(_QWORD *)(v0 + 792);
  v25 = *(_QWORD *)(v0 + 768);
  v26 = *(_QWORD *)(v0 + 760);
  v27 = *(_QWORD *)(v0 + 752);
  v28 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 720);
  v30 = *(_QWORD *)(v0 + 712);
  v31 = *(_QWORD *)(v0 + 704);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 1328))(*(_QWORD *)(v0 + 672), v1, *(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FE564()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1088);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1352));
  return swift_task_switch(sub_1002FE5BC, v1, 0);
}

uint64_t sub_1002FE5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  void (*v58)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 1056);
  v2 = *(_QWORD *)(v0 + 1048);
  v3 = *(_QWORD *)(v0 + 1032);
  v4 = *(_QWORD *)(v0 + 1024);
  v56 = *(_QWORD *)(v0 + 944);
  v44 = *(_QWORD *)(v0 + 928);
  v45 = *(_QWORD *)(v0 + 920);
  v5 = *(_QWORD *)(v0 + 864);
  v6 = *(_QWORD *)(v0 + 856);
  v47 = *(_QWORD *)(v0 + 848);
  v48 = *(_QWORD *)(v0 + 840);
  v7 = *(_QWORD *)(v0 + 832);
  v46 = *(_QWORD *)(v0 + 824);
  v50 = *(_QWORD *)(v0 + 816);
  v52 = *(_QWORD *)(v0 + 808);
  v54 = *(_QWORD *)(v0 + 800);
  v43 = *(_QWORD *)(v0 + 696);
  v8 = *(_QWORD *)(v0 + 680)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v42 = *(_QWORD *)(v0 + 688);
  v9 = swift_beginAccess(v8, v0 + 584, 0, 0);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v11 = v10(v1, v8, v4, v9);
  SFAirDropSend.Transfer.id.getter(v11);
  v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v1, v4);
  v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v2, v8, v4);
  SFAirDropSend.Transfer.startDate.getter(v13);
  v58 = v12;
  v12(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v5, v6);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  *(_QWORD *)(v0 + 1360) = v14;
  v15 = v56;
  v57 = v14;
  v14(v7, v15, v45);
  *(_DWORD *)(v0 + 1408) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  v16 = *(void (**)(uint64_t))(v43 + 104);
  *(_QWORD *)(v0 + 1368) = v16;
  v16(v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v7, 0, 1, v42);
  v17 = SFAirDropSend.Transfer.Metrics.result.setter(v7);
  static Date.now.getter(v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v48);
  v18 = SFAirDropSend.Transfer.Metrics.endDate.setter(v46);
  v19 = SFAirDropSend.Request.type.getter(v18);
  LOBYTE(v1) = SFAirDrop.TransferType.isOnlyExchange.getter(v19);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v54);
  if ((v1 & 1) == 0)
  {
    v20 = *(_QWORD *)(v0 + 944);
    v21 = *(_QWORD *)(v0 + 936);
    v22 = *(_QWORD *)(v0 + 928);
    v23 = *(_QWORD *)(v0 + 920);
    v24 = *(_QWORD *)(v0 + 680);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v21, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v23);
    LOBYTE(v20) = static SFAirDropSend.Failure.== infix(_:_:)(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v24
                                               + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager));
    if ((v20 & 1) != 0)
      v27 = 5;
    else
      v27 = 4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, ObjectType, v25);
  }
  v51 = *(_QWORD *)(v0 + 1040);
  v53 = *(_QWORD *)(v0 + 1056);
  v55 = *(_QWORD *)(v0 + 1024);
  v28 = *(_QWORD *)(v0 + 944);
  v29 = *(_QWORD *)(v0 + 888);
  v30 = *(_QWORD *)(v0 + 880);
  v31 = *(_QWORD *)(v0 + 872);
  v32 = *(_QWORD *)(v0 + 792);
  v33 = *(_QWORD *)(v0 + 784);
  v34 = *(_QWORD *)(v0 + 776);
  v35 = *(_QWORD *)(v0 + 768);
  v49 = *(_QWORD *)(v0 + 920);
  v36 = v32 + *(int *)(sub_100008384(&qword_1007B8858) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v29, v31);
  v57(v36, v28, v49);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v32, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v34);
  sub_1002BC504(v32, v51);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  v37 = type metadata accessor for SFNWInterfaceType(0);
  *(_QWORD *)(v0 + 1376) = v37;
  v38 = *(_QWORD *)(v37 - 8);
  *(_QWORD *)(v0 + 1384) = v38;
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  *(_QWORD *)(v0 + 1392) = v39;
  v39(v35, 1, 1, v37);
  sub_1002BC9D4(v35, v53);
  sub_10000D0F0(v35, &qword_1007C5E70);
  v58(v53, v55);
  v40 = (_QWORD *)swift_task_alloc(dword_1007B8834);
  *(_QWORD *)(v0 + 1400) = v40;
  *v40 = v0;
  v40[1] = sub_1002FE998;
  return sub_1002BB76C();
}

uint64_t sub_1002FE998()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1088);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1400));
  return swift_task_switch(sub_1002FE9F0, v1, 0);
}

uint64_t sub_1002FE9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, uint64_t, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;

  v1 = *(_QWORD *)(v0 + 680);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 744) + 16))(*(_QWORD *)(v0 + 752), v1 + *(_QWORD *)(v0 + 1096), *(_QWORD *)(v0 + 736));
  v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 728);
    v5 = *(_QWORD *)(v0 + 720);
    v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry, v0 + 608, 0, 0);
    sub_100244384(v6, v4, type metadata accessor for SDAirDropSendConnectionTelemetry);
    v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
    sub_100244384(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v8 = 0;
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 728);
    v10 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    v8 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  v11 = *(_QWORD *)(v0 + 680);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 984) + 56))(*(_QWORD *)(v0 + 720), v8, 1, *(_QWORD *)(v0 + 976));
  v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  v13 = swift_retain(v12);
  CurrentValueSubject.value.getter(v13);
  swift_release(v12);
  v77 = *(const char **)(v0 + 656);
  v14 = *(_QWORD *)(v1 + v2);
  if (v14)
  {
    v15 = *(_QWORD *)(v0 + 1384);
    v16 = *(_QWORD *)(v0 + 1376);
    v17 = *(_QWORD *)(v0 + 760);
    v18 = *(_QWORD *)(v0 + 712);
    v19 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest, v0 + 632, 0, 0);
    sub_100221F28(v19, v18, &qword_1007B7E08);
    v20 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    v21 = swift_beginAccess(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType, v0 + 560, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v20, v16, v21);
    v22 = 0;
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 712);
    v24 = _s13UploadRequestVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    v22 = 1;
  }
  v55 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1368);
  v53 = *(_DWORD *)(v0 + 1408);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
  v60 = *(_QWORD *)(v0 + 1344);
  v75 = *(_QWORD *)(v0 + 1032);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = *(_QWORD *)(v0 + 920);
  v71 = *(_QWORD *)(v0 + 888);
  v73 = *(_QWORD *)(v0 + 928);
  v67 = *(_QWORD *)(v0 + 880);
  v69 = *(_QWORD *)(v0 + 872);
  v27 = *(_QWORD *)(v0 + 760);
  v28 = *(_QWORD *)(v0 + 752);
  v63 = *(_QWORD *)(v0 + 744);
  v65 = *(_QWORD *)(v0 + 736);
  v49 = *(_QWORD *)(v0 + 728);
  v29 = *(_QWORD *)(v0 + 720);
  v30 = *(_QWORD *)(v0 + 712);
  v31 = *(_QWORD *)(v0 + 704);
  v58 = *(_QWORD *)(v0 + 696);
  v32 = *(_QWORD *)(v0 + 688);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 1392))(v27, v22, 1, *(_QWORD *)(v0 + 1376));
  *(_QWORD *)(v0 + 552) = 0;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  v51(v31, v25, v26);
  v55(v31, v53, v32);
  sub_100337894(v28, v49, v29, (uint64_t)v77, v0 + 456, v30, v27, v31);
  swift_bridgeObjectRelease(v77);
  swift_errorRelease(v60);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v31, v32);
  sub_10000D0F0(v27, &qword_1007C5E70);
  sub_10000D0F0(v30, &qword_1007B7E08);
  sub_10000D0F0(v29, &qword_1007B7760);
  sub_10000D0F0(v49, &qword_1007BA310);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v28, v65);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v71, v69);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v25, v26);
  v33 = *(void (**)(_QWORD, uint64_t, _QWORD))(v75 + 32);
  v34 = *(_QWORD *)(v0 + 1040);
  v35 = *(_QWORD *)(v0 + 1080);
  v36 = *(_QWORD *)(v0 + 1072);
  v37 = *(_QWORD *)(v0 + 1064);
  v38 = *(_QWORD *)(v0 + 1056);
  v39 = *(_QWORD *)(v0 + 1048);
  v40 = *(_QWORD *)(v0 + 1016);
  v41 = *(_QWORD *)(v0 + 1008);
  v42 = *(_QWORD *)(v0 + 1000);
  v44 = *(_QWORD *)(v0 + 992);
  v45 = *(_QWORD *)(v0 + 968);
  v46 = *(_QWORD *)(v0 + 960);
  v47 = *(_QWORD *)(v0 + 952);
  v48 = *(_QWORD *)(v0 + 944);
  v50 = *(_QWORD *)(v0 + 936);
  v52 = *(_QWORD *)(v0 + 912);
  v54 = *(_QWORD *)(v0 + 888);
  v56 = *(_QWORD *)(v0 + 864);
  v57 = *(_QWORD *)(v0 + 856);
  v59 = *(_QWORD *)(v0 + 832);
  v61 = *(_QWORD *)(v0 + 824);
  v62 = *(_QWORD *)(v0 + 816);
  v64 = *(_QWORD *)(v0 + 792);
  v66 = *(_QWORD *)(v0 + 768);
  v68 = *(_QWORD *)(v0 + 760);
  v70 = *(_QWORD *)(v0 + 752);
  v72 = *(_QWORD *)(v0 + 728);
  v74 = *(_QWORD *)(v0 + 720);
  v76 = *(_QWORD *)(v0 + 712);
  v78 = *(_QWORD *)(v0 + 704);
  v33(*(_QWORD *)(v0 + 672), v34, *(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v34);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FEF88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[139];
  v0[168] = v1;
  v2 = v0[114];
  v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0))
  {
    v5 = v0[114];
    v6 = v0[113];
    v7 = v0[112];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }
  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }
  sub_100397D48();
  v8 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[169] = v8;
  *v8 = v0;
  v8[1] = sub_1002FE564;
  return sub_100305890(1);
}

uint64_t sub_1002FF0A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[143];
  v0[168] = v1;
  v2 = v0[114];
  v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0))
  {
    v5 = v0[114];
    v6 = v0[113];
    v7 = v0[112];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }
  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }
  sub_100397D48();
  v8 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[169] = v8;
  *v8 = v0;
  v8[1] = sub_1002FE564;
  return sub_100305890(1);
}

uint64_t sub_1002FF1B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[145];
  v0[168] = v1;
  v2 = v0[114];
  v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0))
  {
    v5 = v0[114];
    v6 = v0[113];
    v7 = v0[112];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }
  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }
  sub_100397D48();
  v8 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[169] = v8;
  *v8 = v0;
  v8[1] = sub_1002FE564;
  return sub_100305890(1);
}

uint64_t sub_1002FF2D0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v1 = v0[159];
  v2 = v0[158];
  v3 = (const char *)v0[157];
  v4 = (const char *)v0[155];
  v5 = (const char *)v0[153];
  v6 = (const char *)v0[149];
  v7 = (void *)v0[147];
  v22 = v0[127];
  v8 = v0[125];
  v9 = v0[121];
  *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)v0[151]).n128_u64[0];
  swift_bridgeObjectRelease(v6, v10);

  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100225AA0(v2, v1);
  sub_10000D0F0(v9, &qword_1007BA320);
  sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v22, _s10AskRequestVMa);
  v13 = v0[161];
  v0[168] = v13;
  v14 = v0[114];
  v15 = v0[112];
  v0[83] = v13;
  swift_errorRetain(v13);
  v16 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v14, v0 + 83, v16, v15, 0))
  {
    v17 = v0[114];
    v18 = v0[113];
    v19 = v0[112];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_errorRelease(v0[83]);
  }
  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v13);
    SFAirDropSend.Failure.init(_:)(v13);
  }
  sub_100397D48();
  v20 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[169] = v20;
  *v20 = v0;
  v20[1] = sub_1002FE564;
  return sub_100305890(1);
}

uint64_t sub_1002FF498()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v1 = v0[159];
  v2 = v0[158];
  v3 = (const char *)v0[157];
  v4 = (const char *)v0[155];
  v5 = (const char *)v0[153];
  v6 = (const char *)v0[149];
  v7 = (void *)v0[147];
  v22 = v0[127];
  v8 = v0[125];
  v9 = v0[121];
  *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)v0[151]).n128_u64[0];
  swift_bridgeObjectRelease(v6, v10);

  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100225AA0(v2, v1);
  sub_10000D0F0(v9, &qword_1007BA320);
  sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v22, _s10AskRequestVMa);
  v13 = v0[165];
  v0[168] = v13;
  v14 = v0[114];
  v15 = v0[112];
  v0[83] = v13;
  swift_errorRetain(v13);
  v16 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v14, v0 + 83, v16, v15, 0))
  {
    v17 = v0[114];
    v18 = v0[113];
    v19 = v0[112];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_errorRelease(v0[83]);
  }
  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v13);
    SFAirDropSend.Failure.init(_:)(v13);
  }
  sub_100397D48();
  v20 = (_QWORD *)swift_task_alloc(dword_1007BA334);
  v0[169] = v20;
  *v20 = v0;
  v20[1] = sub_1002FE564;
  return sub_100305890(1);
}

uint64_t sub_1002FF660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v6 = sub_100008384(&qword_1007BA4D0);
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CodableError(0);
  v5[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[24] = v8;
  v5[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.TransferType(0);
  v5[26] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[27] = v10;
  v5[28] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v5[29] = static AirDropActor.shared;
  return swift_task_switch(sub_1002FF748, v11, 0);
}

uint64_t sub_1002FF748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = *(_QWORD *)(v1 + 216);
  v2 = *(_QWORD *)(v1 + 224);
  v4 = *(_QWORD *)(v1 + 208);
  v5 = SFAirDropSend.Request.type.getter(a1);
  v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v1 + 200);
    v8 = *(_QWORD *)(v1 + 176);
    swift_task_dealloc(*(_QWORD *)(v1 + 224));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_10022E718(*(_QWORD *)(v1 + 160), v1 + 16, &qword_1007BA4D8);
    v10 = *(_QWORD *)(v1 + 24);
    if (v10)
      v11 = *(_QWORD *)(v1 + 104);
    else
      v11 = 0;
    if (v10)
      v12 = *(_QWORD *)(v1 + 112);
    else
      v12 = 0xF000000000000000;
    v13 = (_QWORD *)swift_task_alloc(dword_1007C0AC4);
    *(_QWORD *)(v1 + 240) = v13;
    *v13 = v1;
    v13[1] = sub_1002FF844;
    return sub_100433000(v11, v12);
  }
}

uint64_t sub_1002FF844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 240);
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1002FFCD0;
  else
    v5 = sub_1002FF8B0;
  return swift_task_switch(v5, v3[29], 0);
}

uint64_t sub_1002FF8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = *(_QWORD *)(v0 + 248);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 200);
    v3 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    v5 = v0 + 120;
    swift_bridgeObjectRelease(*(const char **)(v0 + 248));
    v6 = type metadata accessor for SFAirDropSend.Failure(0);
    v7 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v8 = swift_allocError(v6, v7, 0, 0);
    v10 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v9, enum case for SFAirDropSend.Failure.badRequest(_:), v6);
    swift_willThrow(v10);
    *(_QWORD *)(v0 + 264) = v8;
    swift_errorRetain(v8);
    v11 = swift_errorRetain(v8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 138412290;
      swift_errorRetain(v8);
      v16 = _swift_stdlib_bridgeErrorToNSError(v8);
      *(_QWORD *)(v0 + 128) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v14 + 4);
      *v15 = v16;
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load final URLs %@", v14, 0xCu);
      v17 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v15, 1, v17);
      v18 = v15;
      v5 = v0 + 120;
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_errorRelease(v8);
      swift_errorRelease(v8);
    }
    v19 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 120) = v8;
    swift_errorRetain(v8);
    v22 = sub_100008384(&qword_1007B5A60);
    v23 = swift_dynamicCast(v21, v5, v22, v19, 6);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v25 = *(_QWORD *)(v0 + 200);
    if (v23)
    {
      v26 = *(_QWORD *)(v0 + 184);
      v27 = *(_QWORD *)(v0 + 192);
      v28 = *(_QWORD *)(v0 + 176);
      v24(v28, 0, 1, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v25, v28, v26);
    }
    else
    {
      v29 = *(_QWORD *)(v0 + 176);
      v24(v29, 1, 1, *(_QWORD *)(v0 + 184));
      swift_errorRetain(v8);
      CodableError.init(_:)(v8);
      sub_10000D0F0(v29, &qword_1007BA4D0);
    }
    v30 = *(_QWORD *)(v0 + 152);
    v31 = (_QWORD *)swift_task_alloc(dword_1007BA4E4);
    *(_QWORD *)(v0 + 272) = v31;
    *v31 = v0;
    v31[1] = sub_1002FFBF0;
    return sub_100317440(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v30 & 0xFFFFFFFFFFLL, *(_QWORD *)(v0 + 200));
  }
}

uint64_t sub_1002FFBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 272));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1002FFC68, v1, 0);
}

uint64_t sub_1002FFC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  swift_willThrow();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FFCD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = v0[32];
  v0[33] = v1;
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    swift_errorRetain(v1);
    v7 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 17, v5 + 4);
    *v6 = v7;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to load final URLs %@", v5, 0xCu);
    v8 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }
  v9 = v0[23];
  v10 = v0[24];
  v11 = v0[22];
  v0[15] = v1;
  swift_errorRetain(v1);
  v12 = sub_100008384(&qword_1007B5A60);
  v13 = swift_dynamicCast(v11, v0 + 15, v12, v9, 6);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v15 = v0[25];
  if (v13)
  {
    v16 = v0[23];
    v17 = v0[24];
    v18 = v0[22];
    v14(v18, 0, 1, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v18, v16);
  }
  else
  {
    v19 = v0[22];
    v14(v19, 1, 1, v0[23]);
    swift_errorRetain(v1);
    CodableError.init(_:)(v1);
    sub_10000D0F0(v19, &qword_1007BA4D0);
  }
  v20 = v0[19];
  v21 = (_QWORD *)swift_task_alloc(dword_1007BA4E4);
  v0[34] = v21;
  *v21 = v0;
  v21[1] = sub_1002FFBF0;
  return sub_100317440(v0[17], v0[18], v20 & 0xFFFFFFFFFFLL, v0[25]);
}

uint64_t sub_1002FFF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[34] = a2;
  v3[35] = a3;
  v3[33] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA318) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v4);
  v3[37] = swift_task_alloc(v4);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA320) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[38] = swift_task_alloc(v5);
  v3[39] = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[40] = swift_task_alloc(v6);
  v3[41] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(_s10AskRequestVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[42] = swift_task_alloc(v7);
  v3[43] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v3[44] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[45] = v9;
  v3[46] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384((uint64_t *)&unk_1007B5200);
  v3[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100300090, 0, 0);
}

uint64_t sub_100300090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 248) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 360);
  if (v2)
  {
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v20 = *(_QWORD *)(v3 + 72);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain((const char *)v1);
    while (1)
    {
      v6 = *(_QWORD *)(v0 + 376);
      v7 = *(_QWORD *)(v0 + 352);
      v5(v6, v4, v7);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v8(v6, 0, 1, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) == 1)
        break;
      v9 = *(_QWORD *)(v0 + 368);
      v10 = *(_QWORD *)(v0 + 352);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v9, *(_QWORD *)(v0 + 376), v10);
      URL._bridgeToObjectiveC()(v11);
      v13 = v12;
      v14 = objc_msgSend(v12, "isiWorkDocument");

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v10);
      if ((v14 & 1) != 0)
      {
        v15 = 8;
        goto LABEL_11;
      }
      v4 += v20;
      if (!--v2)
        goto LABEL_8;
    }
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain((const char *)v1);
LABEL_8:
    v8(*(_QWORD *)(v0 + 376), 1, 1, *(_QWORD *)(v0 + 352));
  }
  v15 = 131074;
LABEL_11:
  swift_bridgeObjectRelease(*(const char **)(v0 + 272));
  v16 = (_QWORD *)swift_task_alloc(async function pointer to Sequence<>.coordinateRead(withSaveToTempDir:options:)[1]);
  *(_QWORD *)(v0 + 384) = v16;
  v17 = sub_100008384((uint64_t *)&unk_1007B6820);
  v18 = sub_10026E2FC(&qword_1007BA360, (uint64_t *)&unk_1007B6820, (uint64_t)&protocol conformance descriptor for [A]);
  *v16 = v0;
  v16[1] = sub_100300258;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0, v15, v17, v18);
}

uint64_t sub_100300258(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t **v6;

  v3 = (*v2)[48];
  v4 = *v2;
  v4[49] = a1;
  v4[50] = v1;
  swift_task_dealloc(v3);
  if (v1)
    return swift_task_switch(sub_1003007C0, 0, 0);
  v6 = (uint64_t **)swift_task_alloc(dword_1007BA36C);
  v4[51] = (uint64_t)v6;
  *v6 = v4;
  v6[1] = (uint64_t *)sub_1003002F0;
  return sub_100300B30(v4[34]);
}

uint64_t sub_1003002F0()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t **v5;

  v2 = (*v1)[51];
  v3 = *v1;
  v3[52] = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100300874, 0, 0);
  v5 = (uint64_t **)swift_task_alloc(dword_1007BA32C);
  v3[53] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = (uint64_t *)sub_1003003A0;
  return sub_1003027BC((uint64_t)(v3 + 2), v3[42], v3[40], v3[38], v3[36]);
}

uint64_t sub_1003003A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 424);
  v4 = *(_QWORD *)(*v1 + 24);
  v5 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(v2 + 432) = v0;
  *(_QWORD *)(v2 + 440) = v4;
  v6 = *(_QWORD *)(v2 + 40);
  v19 = *(_QWORD *)(v2 + 48);
  v20 = v5;
  v7 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 448) = v6;
  *(_QWORD *)(v2 + 456) = v7;
  v18 = *(_BYTE *)(v2 + 64);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 96);
  v16 = *(_QWORD *)(v2 + 88);
  v17 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 464) = v8;
  *(_QWORD *)(v2 + 472) = v9;
  v11 = *(_QWORD *)(v2 + 104);
  v10 = *(_QWORD *)(v2 + 112);
  v12 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 480) = v10;
  *(_QWORD *)(v2 + 488) = v12;
  v15 = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v2 + 496) = v15;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 392));
    v13 = sub_100300930;
  }
  else
  {
    *(_QWORD *)(v2 + 144) = v20;
    *(_QWORD *)(v2 + 152) = v6;
    *(_QWORD *)(v2 + 160) = v19;
    *(_QWORD *)(v2 + 168) = v7;
    *(_BYTE *)(v2 + 176) = v18;
    *(_QWORD *)(v2 + 184) = v17;
    *(_QWORD *)(v2 + 192) = v8;
    *(_QWORD *)(v2 + 200) = v16;
    *(_QWORD *)(v2 + 208) = v9;
    *(_QWORD *)(v2 + 216) = v11;
    *(_QWORD *)(v2 + 224) = v10;
    *(_QWORD *)(v2 + 232) = v12;
    *(_QWORD *)(v2 + 240) = v15;
    v13 = sub_1003004A8;
  }
  return swift_task_switch(v13, 0, 0);
}

uint64_t sub_1003004A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t **v14;

  v1 = v0[63];
  v2 = v0[40];
  v3 = v0[41];
  v5 = v0[38];
  v4 = v0[39];
  v7 = v0[36];
  v6 = v0[37];
  sub_100221DB4(v0[42], v0[43], _s10AskRequestVMa);
  sub_100221DB4(v2, v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v5, v4, &qword_1007BA320);
  sub_10022E718(v7, v6, &qword_1007BA318);
  if (v1)
  {
    v8 = (const char *)v0[63];
    v9 = (const char *)v0[49];
    v0[32] = (uint64_t)v8;
    v10 = sub_100008384(&qword_1007BA378);
    v11 = sub_10026E2FC(&qword_1007BA380, &qword_1007BA378, (uint64_t)&protocol conformance descriptor for [A]);
    v12 = RandomAccessCollection<>.urls.getter(v10, v11);
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v8).n128_u64[0];
    swift_bridgeObjectRelease(v9, v13);
  }
  else
  {
    v12 = v0[49];
  }
  v0[64] = v12;
  v14 = (uint64_t **)swift_task_alloc(dword_1007BA374);
  v0[65] = (uint64_t)v14;
  *v14 = v0;
  v14[1] = (uint64_t *)sub_1003005F8;
  return sub_10030400C(v0[33], v0[43], v0[55], v0[41], v0 + 18, v0[39], v12, v0[37]);
}

uint64_t sub_1003005F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 520);
  v3 = *(const char **)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 528) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_1003009E4;
  else
    v4 = sub_100300668;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100300668()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 488);
  v1 = *(_QWORD *)(v0 + 496);
  v4 = *(const char **)(v0 + 472);
  v3 = *(const char **)(v0 + 480);
  v5 = *(const char **)(v0 + 456);
  v6 = *(const char **)(v0 + 464);
  v7 = *(void **)(v0 + 440);
  v17 = *(_QWORD *)(v0 + 376);
  v18 = *(_QWORD *)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 320);
  v15 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  v22 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 448)).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v5, v10).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v6, v11).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v4, v12).n128_u64[0];
  swift_bridgeObjectRelease(v3, v13);
  sub_100225AA0(v2, v1);

  sub_10000D0F0(v9, &qword_1007BA318);
  sub_10000D0F0(v15, &qword_1007BA320);
  sub_1002443C8(v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v8, _s10AskRequestVMa);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v8);
  swift_task_dealloc(v19);
  swift_task_dealloc(v16);
  swift_task_dealloc(v20);
  swift_task_dealloc(v15);
  swift_task_dealloc(v21);
  swift_task_dealloc(v9);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003007C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100300874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 392));
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100300930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003009E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v4 = *(const char **)(v0 + 472);
  v3 = *(const char **)(v0 + 480);
  v6 = *(const char **)(v0 + 456);
  v5 = *(const char **)(v0 + 464);
  v7 = *(void **)(v0 + 440);
  v24 = *(_QWORD *)(v0 + 328);
  v25 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 448)).n128_u64[0];
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v6, v10).n128_u64[0];
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v5, v11).n128_u64[0];
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v4, v12).n128_u64[0];
  swift_bridgeObjectRelease(v3, v13);
  sub_100225AA0(v1, v2);

  sub_10000D0F0(v9, &qword_1007BA318);
  sub_10000D0F0(v8, &qword_1007BA320);
  sub_1002443C8(v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v25, _s10AskRequestVMa);
  v14 = *(_QWORD *)(v0 + 368);
  v16 = *(_QWORD *)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 328);
  v20 = *(_QWORD *)(v0 + 304);
  v19 = *(_QWORD *)(v0 + 312);
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100300B30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for SFInterventionResponse(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v6 = type metadata accessor for SFInterventionWorkflow(0);
  v2[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[14] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v8);
  v2[16] = swift_task_alloc(v8);
  v9 = sub_100008384((uint64_t *)&unk_1007C3420);
  v2[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[18] = v10;
  v2[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008384(&qword_1007BA4A0);
  v2[20] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[21] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v13);
  v2[23] = swift_task_alloc(v13);
  v14 = type metadata accessor for Date(0);
  v2[24] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[25] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v16);
  v2[27] = swift_task_alloc(v16);
  v17 = type metadata accessor for UUID(0);
  v2[28] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[29] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[30] = swift_task_alloc(v19);
  v2[31] = swift_task_alloc(v19);
  v20 = sub_100008384((uint64_t *)&unk_1007C5E10);
  v2[32] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[33] = v21;
  v2[34] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v2[35] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v2[36] = v23;
  v2[37] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2[38] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v2[39] = v25;
  v2[40] = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v2[41] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v2[42] = v27;
  v2[43] = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v2[44] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v2[45] = v29;
  v2[46] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100008384(&qword_1007B6BE8);
  v2[47] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v2[48] = v31;
  v32 = *(_QWORD *)(v31 + 64);
  v2[49] = v32;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[50] = swift_task_alloc(v33);
  v2[51] = swift_task_alloc(v33);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v34 = static AirDropActor.shared;
  v2[52] = static AirDropActor.shared;
  return swift_task_switch(sub_100300DF0, v34, 0);
}

uint64_t sub_100300DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  unsigned __int8 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  const char *v15;
  unsigned __int8 v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unint64_t v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  const char **v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(const char **);
  void (*v40)(const char **, uint64_t);
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  Swift::String v77;

  v1 = type metadata accessor for SDAirDropUserSafetyContentHandler();
  v2 = swift_allocObject(v1, 16, 7);
  *(_QWORD *)(v0 + 424) = v2;
  v3 = sub_1003B0844();
  v6 = v3;
  v7 = (char *)v4;
  *(_QWORD *)(v0 + 432) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  if (v5 == 2)
  {
    v8 = swift_bridgeObjectRetain(v4);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v75 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain(v7);
      v76._countAndFlagsBits = v6;
      v76._object = v7;
      v13 = sub_1003ABB94(v76, 2);
      v15 = v14;
      sub_10031B7F4(v6, (uint64_t)v7, 2u);
      *(_QWORD *)(v0 + 48) = sub_100228BD8(v13, (unint64_t)v15, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v11 + 4);
      swift_bridgeObjectRelease(v15);
      sub_10031B7F4(v6, (uint64_t)v7, 2u);
      sub_10031B7F4(v6, (uint64_t)v7, 2u);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Send StateMachine UserSafety ANALYZE START {userSafetyMode: %s}", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      sub_10031B7F4(v6, (uint64_t)v7, 2u);
      sub_10031B7F4(v6, (uint64_t)v7, 2u);
    }
    v25 = *(_QWORD *)(v0 + 408);
    v26 = *(_QWORD *)(v0 + 384);
    v55 = *(_QWORD *)(v0 + 400);
    v56 = *(_QWORD *)(v0 + 392);
    v27 = *(_QWORD *)(v0 + 376);
    v57 = *(_QWORD *)(v0 + 368);
    v58 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD **)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 328);
    v30 = *(_QWORD *)(v0 + 336);
    v63 = *(_QWORD *)(v0 + 320);
    v65 = *(_QWORD *)(v0 + 312);
    v31 = *(const char ***)(v0 + 296);
    v59 = *(_QWORD *)(v0 + 288);
    v60 = *(_QWORD *)(v0 + 352);
    v68 = *(_QWORD *)(v0 + 304);
    v32 = *(const char **)(v0 + 56);
    v61 = *(_QWORD *)(v0 + 280);
    sub_1003ABCA0((uint64_t)v32);
    *v28 = 0x656E696C636544;
    v28[1] = 0xE700000000000000;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v28, enum case for SFAirDrop.ButtonConfiguration.text(_:), v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v55, v25, v27);
    v33 = *(unsigned __int8 *)(v26 + 80);
    v34 = (v33 + 16) & ~v33;
    v35 = swift_allocObject(&unk_100722370, v34 + v56, v33 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v35 + v34, v55, v27);
    SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x656E696C636544, 0xE700000000000000, v28, 1, sub_10031B874, v35);
    v36 = sub_100008384(&qword_1007BA4A8);
    *(_QWORD *)(v0 + 440) = v36;
    v37 = (char *)v31 + *(int *)(v36 + 64);
    *v31 = v32;
    swift_bridgeObjectRetain(v32);
    SFProgressTask.initialValue.getter(v27);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    *(_QWORD *)(v0 + 448) = v38;
    v38(v37, v57, v60);
    *(_DWORD *)(v0 + 528) = enum case for SFAirDropSend.Transfer.State.analyzingFullContent(_:);
    v39 = *(void (**)(const char **))(v59 + 104);
    *(_QWORD *)(v0 + 456) = v39;
    v39(v31);
    sub_1002BC504((uint64_t)v31, v63);
    v40 = *(void (**)(const char **, uint64_t))(v59 + 8);
    *(_QWORD *)(v0 + 464) = v40;
    v40(v31, v61);
    v41 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    *(_QWORD *)(v0 + 472) = v41;
    v41(v63, v68);
    SFProgressTask.makeAsyncIterator()(v27);
    v42 = static AirDropActor.shared;
    v43 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v44 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 480) = v44;
    *v44 = v0;
    v44[1] = sub_1003014F4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v42, v43, *(_QWORD *)(v0 + 256), v0 + 40);
  }
  else
  {
    v16 = v5;
    v17 = sub_10031B7DC(v3, (uint64_t)v4, v5);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v73 = v2;
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v71 = swift_slowAlloc(32, -1);
      v75 = v71;
      *(_DWORD *)v20 = 136315138;
      sub_10031B7DC(v6, (uint64_t)v7, v16);
      v77._countAndFlagsBits = v6;
      v77._object = v7;
      v21 = sub_1003ABB94(v77, v16);
      v23 = v22;
      sub_10031B7F4(v6, (uint64_t)v7, v16);
      *(_QWORD *)(v0 + 32) = sub_100228BD8(v21, (unint64_t)v23, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v20 + 4);
      swift_bridgeObjectRelease(v23);
      sub_10031B7F4(v6, (uint64_t)v7, v16);
      sub_10031B7F4(v6, (uint64_t)v7, v16);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Send StateMachine UserSafety SKIP {userSafetyMode: %s}", v20, 0xCu);
      swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      v24 = v73;
    }
    else
    {

      sub_10031B7F4(v6, (uint64_t)v7, v16);
      sub_10031B7F4(v6, (uint64_t)v7, v16);
      v24 = v2;
    }
    swift_release(v24);
    v46 = *(_QWORD *)(v0 + 400);
    v47 = *(_QWORD *)(v0 + 368);
    v48 = *(_QWORD *)(v0 + 344);
    v49 = *(_QWORD *)(v0 + 320);
    v50 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 272);
    v53 = *(_QWORD *)(v0 + 240);
    v52 = *(_QWORD *)(v0 + 248);
    v54 = *(_QWORD *)(v0 + 216);
    v62 = *(_QWORD *)(v0 + 208);
    v64 = *(_QWORD *)(v0 + 184);
    v66 = *(_QWORD *)(v0 + 176);
    v67 = *(_QWORD *)(v0 + 152);
    v69 = *(_QWORD *)(v0 + 128);
    v70 = *(_QWORD *)(v0 + 120);
    v72 = *(_QWORD *)(v0 + 96);
    v74 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 408));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003014F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 480));
  if (v0)
    v3 = sub_100302350;
  else
    v3 = sub_100301558;
  return swift_task_switch(v3, *(_QWORD *)(v2 + 416), 0);
}

uint64_t sub_100301558()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  void (*v4)(double *, uint64_t, uint64_t);
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  const char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(double *, uint64_t);
  void (*v19)(uint64_t, uint64_t);

  v1 = *(double *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, double))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256), v1);
    v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 488) = v2;
    *v2 = v0;
    v2[1] = sub_10030170C;
    return SFProgressTask.finalValue.getter(v0 + 25, *(_QWORD *)(v0 + 376));
  }
  else
  {
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    v4 = *(void (**)(double *, uint64_t, uint64_t))(v0 + 456);
    v18 = *(void (**)(double *, uint64_t))(v0 + 464);
    v5 = *(unsigned int *)(v0 + 528);
    v6 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 448);
    v7 = *(_QWORD *)(v0 + 368);
    v8 = *(_QWORD *)(v0 + 352);
    v9 = *(_QWORD *)(v0 + 320);
    v11 = *(double **)(v0 + 296);
    v10 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 280);
    v13 = *(const char **)(v0 + 56);
    v14 = (char *)v11 + *(int *)(*(_QWORD *)(v0 + 440) + 64);
    *(_QWORD *)v11 = v13;
    v11[1] = v1;
    v6(v14, v7, v8);
    v4(v11, v5, v12);
    swift_bridgeObjectRetain(v13);
    sub_1002BC504((uint64_t)v11, v9);
    v18(v11, v12);
    v19(v9, v10);
    v15 = static AirDropActor.shared;
    v16 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v17 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 480) = v17;
    *v17 = v0;
    v17[1] = sub_1003014F4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v15, v16, *(_QWORD *)(v0 + 256), v0 + 40);
  }
}

uint64_t sub_10030170C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 488);
  *(_QWORD *)(*v1 + 496) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003024C8;
  else
    v4 = sub_100301770;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 416), 0);
}

uint64_t sub_100301770(uint64_t a1)
{
  uint64_t v1;
  int v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char **v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(const char **, _QWORD, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(const char **, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;

  v2 = *(unsigned __int8 *)(v1 + 25);
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v1 + 28) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 28, v1 + 32, v5 + 4);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Send StateMachine UserSafety ANALYZE END {isSensitiveContent: %{BOOL}d}", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 408);
  v7 = *(_QWORD *)(v1 + 376);
  v8 = *(_QWORD *)(v1 + 384);
  v10 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 368);
  v74 = v2;
  v11 = *(_QWORD *)(v1 + 352);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  if (v74)
  {
    if (v15)
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Send StateMachine UserSafety INTERVENTION START", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v75 = *(void (**)(uint64_t, uint64_t))(v1 + 472);
    v64 = *(void (**)(const char **, _QWORD, uint64_t))(v1 + 456);
    v66 = *(_QWORD *)(v1 + 320);
    v68 = *(void (**)(const char **, uint64_t))(v1 + 464);
    v70 = *(_QWORD *)(v1 + 304);
    v56 = *(const char ***)(v1 + 296);
    v62 = *(_QWORD *)(v1 + 280);
    v18 = *(_QWORD *)(v1 + 240);
    v17 = *(_QWORD *)(v1 + 248);
    v20 = *(_QWORD *)(v1 + 224);
    v19 = *(_QWORD *)(v1 + 232);
    v44 = *(_QWORD *)(v1 + 216);
    v47 = *(_QWORD *)(v1 + 200);
    v51 = *(_QWORD *)(v1 + 208);
    v52 = *(_QWORD *)(v1 + 192);
    v45 = *(_QWORD *)(v1 + 184);
    v53 = *(_QWORD *)(v1 + 168);
    v54 = *(_QWORD *)(v1 + 176);
    v55 = *(_QWORD *)(v1 + 160);
    v57 = *(_QWORD *)(v1 + 152);
    v59 = *(_QWORD *)(v1 + 144);
    v60 = *(_QWORD *)(v1 + 136);
    v50 = *(_QWORD *)(v1 + 128);
    v72 = *(_QWORD *)(v1 + 120);
    v46 = *(_QWORD *)(v1 + 112);
    v49 = *(_QWORD *)(v1 + 104);
    v21 = *(_QWORD *)(v1 + 64);
    v22 = *(_QWORD *)(v1 + 72);
    v58 = *(const char **)(v1 + 56);

    v24 = UUID.init()(v23);
    static Date.now.getter(v24);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v25(v18, v17, v20);
    v26 = swift_allocObject(&unk_100722320, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v21);
    v43 = sub_100220D78(&qword_1007BA4B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFInterventionResponse, (uint64_t)&protocol conformance descriptor for SFInterventionResponse);
    v27 = sub_100220D78(&qword_1007BA4B8, (uint64_t (*)(uint64_t))&type metadata accessor for SFInterventionResponse, (uint64_t)&protocol conformance descriptor for SFInterventionResponse);
    v28 = sub_100220D78(&qword_1007BA4C0, (uint64_t (*)(uint64_t))&type metadata accessor for SFInterventionResponse, (uint64_t)&protocol conformance descriptor for SFInterventionResponse);
    SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)(v18, sub_10031B8C0, v26, v22, v43, v27, v28);
    v25(v18, v17, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v51, v44, v52);
    LODWORD(v52) = enum case for SFInterventionWorkflow.send(_:);
    v48 = *(void (**)(uint64_t))(v46 + 104);
    v48(v50);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v54, v45, v55);
    SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)(v18, v51, v50, v54, 0, v22, v43, v27, v28);
    v29 = (char *)v56 + *(int *)(sub_100008384(&qword_1007BA4C8) + 48);
    *v56 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v29, v57, v60);
    v64(v56, enum case for SFAirDropSend.Transfer.State.waitingForSensitiveContentResponse(_:), v62);
    swift_bridgeObjectRetain(v58);
    sub_1002BC504((uint64_t)v56, v66);
    v68(v56, v62);
    v75(v66, v70);
    *(_QWORD *)(v1 + 504) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()), "init");
    ((void (*)(uint64_t, _QWORD, uint64_t))v48)(v72, v52, v49);
    v30 = (_QWORD *)swift_task_alloc(dword_1007BE6FC);
    *(_QWORD *)(v1 + 512) = v30;
    *v30 = v1;
    v30[1] = sub_100301D74;
    return sub_1003CAA6C(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 120));
  }
  else
  {
    v32 = *(_QWORD *)(v1 + 424);
    if (v15)
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Send StateMachine UserSafety INTERVENTION SKIP. Content is not sensitive", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    swift_release(v32);
    v34 = *(_QWORD *)(v1 + 400);
    v35 = *(_QWORD *)(v1 + 368);
    v36 = *(_QWORD *)(v1 + 344);
    v37 = *(_QWORD *)(v1 + 320);
    v38 = *(_QWORD *)(v1 + 296);
    v39 = *(_QWORD *)(v1 + 272);
    v41 = *(_QWORD *)(v1 + 240);
    v40 = *(_QWORD *)(v1 + 248);
    v42 = *(_QWORD *)(v1 + 216);
    v61 = *(_QWORD *)(v1 + 208);
    v63 = *(_QWORD *)(v1 + 184);
    v65 = *(_QWORD *)(v1 + 176);
    v67 = *(_QWORD *)(v1 + 152);
    v69 = *(_QWORD *)(v1 + 128);
    v71 = *(_QWORD *)(v1 + 120);
    v73 = *(_QWORD *)(v1 + 96);
    v76 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(*(_QWORD *)(v1 + 408));
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v76);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100301D74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc(v3);
  v4 = (void *)v2[63];
  v5 = v2[52];
  (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);

  if (v0)
    v6 = sub_100302628;
  else
    v6 = sub_100301DFC;
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_100301DFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v1 = v0[11];
  v2 = v0[9];
  v3 = v0[10];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, v0[12], v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if ((_DWORD)v4 == enum case for SFInterventionResponse.accept(_:))
  {
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Send StateMachine UserSafety INTERVENTION ACCEPTED", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
    v77 = v0[31];
    v81 = v0[53];
    v69 = v0[29];
    v73 = v0[28];
    v61 = v0[24];
    v65 = v0[27];
    v53 = v0[23];
    v57 = v0[25];
    v9 = v0[20];
    v8 = v0[21];
    v10 = v0[18];
    v11 = v0[19];
    v12 = v0[17];
    v13 = v0[12];
    v14 = v0[9];
    v15 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v53, v9);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v65, v61);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v77, v73);
    swift_release(v81);
    v16 = v0[50];
    v17 = v0[46];
    v18 = v0[43];
    v19 = v0[40];
    v20 = v0[37];
    v21 = v0[34];
    v23 = v0[30];
    v22 = v0[31];
    v24 = v0[27];
    v54 = v0[26];
    v58 = v0[23];
    v62 = v0[22];
    v66 = v0[19];
    v70 = v0[16];
    v74 = v0[15];
    v78 = v0[12];
    v82 = v0[11];
    swift_task_dealloc(v0[51]);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v54);
    swift_task_dealloc(v58);
    swift_task_dealloc(v62);
    swift_task_dealloc(v66);
    swift_task_dealloc(v70);
    swift_task_dealloc(v74);
    swift_task_dealloc(v78);
    swift_task_dealloc(v82);
    v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  if ((_DWORD)v4 == enum case for SFInterventionResponse.reject(_:))
  {
    v26 = Logger.logObject.getter(v4);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Send StateMachine UserSafety INTERVENTION REJECTED", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
    v75 = v0[31];
    v79 = v0[53];
    v67 = v0[29];
    v71 = v0[28];
    v59 = v0[24];
    v63 = v0[27];
    v51 = v0[23];
    v55 = v0[25];
    v29 = v0[21];
    v50 = v0[20];
    v31 = v0[18];
    v30 = v0[19];
    v32 = v0[17];
    v33 = v0[12];
    v34 = v0[9];
    v35 = v0[10];

    v36 = type metadata accessor for SFAirDropSend.Failure(0);
    v37 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v36, v37, 0, 0);
    v39 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, enum case for SFAirDropSend.Failure.cancelled(_:), v36);
    swift_willThrow(v39);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v51, v50);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v63, v59);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v75, v71);
    swift_release(v79);
    v40 = v0[50];
    v41 = v0[46];
    v42 = v0[43];
    v43 = v0[40];
    v44 = v0[37];
    v45 = v0[34];
    v47 = v0[30];
    v46 = v0[31];
    v48 = v0[27];
    v52 = v0[26];
    v56 = v0[23];
    v60 = v0[22];
    v64 = v0[19];
    v68 = v0[16];
    v72 = v0[15];
    v76 = v0[12];
    v80 = v0[11];
    swift_task_dealloc(v0[51]);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v52);
    swift_task_dealloc(v56);
    swift_task_dealloc(v60);
    swift_task_dealloc(v64);
    swift_task_dealloc(v68);
    swift_task_dealloc(v72);
    swift_task_dealloc(v76);
    swift_task_dealloc(v80);
    v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x8000000100616020, "DaemoniOSLibrary/SDAirDropSendStateMachine+Runner.swift", 55, 2, 711, 0);
}

uint64_t sub_100302350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 352);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release(v1);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 368);
  v10 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 296);
  v13 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003024C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 152);
  v19 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 120);
  v21 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100302628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_release(v28);
  v10 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 368);
  v12 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 184);
  v22 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 128);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003027BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6[56] = a5;
  v6[57] = v5;
  v6[54] = a3;
  v6[55] = a4;
  v6[52] = a1;
  v6[53] = a2;
  v7 = sub_100008384(&qword_1007BA4F8);
  v6[58] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[59] = swift_task_alloc(v8);
  v6[60] = swift_task_alloc(v8);
  v6[61] = swift_task_alloc(v8);
  v6[62] = swift_task_alloc(v8);
  v6[63] = swift_task_alloc(v8);
  v6[64] = swift_task_alloc(v8);
  v6[65] = swift_task_alloc(v8);
  v6[66] = swift_task_alloc(v8);
  v6[67] = swift_task_alloc(v8);
  v6[68] = swift_task_alloc(v8);
  v6[69] = swift_task_alloc(v8);
  v9 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v6[70] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[71] = v10;
  v6[72] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropSend.Transfer(0);
  v6[73] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[74] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[75] = swift_task_alloc(v13);
  v6[76] = swift_task_alloc(v13);
  v6[77] = swift_task_alloc(v13);
  v14 = type metadata accessor for SFAirDrop.TransferType(0);
  v6[78] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[79] = v15;
  v6[80] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v16 = static AirDropActor.shared;
  v6[81] = static AirDropActor.shared;
  return swift_task_switch(sub_100302968, v16, 0);
}

uint64_t sub_100302968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t, __n128);
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(v1 + 640);
  v3 = *(_QWORD *)(v1 + 632);
  v4 = *(_QWORD *)(v1 + 624);
  v5 = *(_QWORD *)(v1 + 456) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  SFAirDropSend.Request.type.getter(a1);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4) == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    v6 = *(_QWORD *)(v1 + 640);
    v7 = *(_QWORD *)(v1 + 456);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 632) + 96))(v6, *(_QWORD *)(v1 + 624));
    swift_bridgeObjectRelease(*(const char **)(v6 + 8));
    v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
    v9 = swift_retain(v8);
    CurrentValueSubject.value.getter(v9);
    swift_release(v8);
    v10 = *(_QWORD *)(v1 + 408);
    v11 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRelease((const char *)v10);
    if (v11 == 1)
    {
      v13 = (_QWORD *)swift_task_alloc(dword_1007BA50C);
      *(_QWORD *)(v1 + 656) = v13;
      *v13 = v1;
      v13[1] = sub_100302CFC;
      return sub_1003061CC(v1 + 144, *(_QWORD *)(v1 + 424), *(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 448));
    }
  }
  else
  {
    v12 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 632) + 8))(*(_QWORD *)(v1 + 640), *(_QWORD *)(v1 + 624));
  }
  v43 = v5;
  *(_QWORD *)(v1 + 664) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  v15 = Logger.logObject.getter(v12);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Send StateMachine ASK START", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }
  v18 = *(_QWORD *)(v1 + 616);
  v19 = *(_QWORD *)(v1 + 608);
  v42 = *(_QWORD *)(v1 + 600);
  v20 = *(_QWORD *)(v1 + 592);
  v21 = *(_QWORD *)(v1 + 584);
  v22 = *(_QWORD *)(v1 + 576);
  v23 = *(_QWORD *)(v1 + 568);
  v24 = *(_QWORD *)(v1 + 560);
  v41 = *(_QWORD *)(v1 + 552);
  v25 = *(_QWORD *)(v1 + 456);
  v40 = *(int **)(v1 + 464);

  v38 = *(void (**)(uint64_t))(v25
                                       + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield);
  v26 = v25 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v27 = swift_beginAccess(v25 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer, v1 + 376, 0, 0);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v20 + 16);
  v39(v19, v26, v21, v27);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for SFAirDropSend.Transfer.State.waitingForAskResponse(_:), v24);
  SFAirDropSend.Transfer.update(state:)(v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  v28 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(_QWORD *)(v1 + 672) = v28;
  v28(v19, v21);
  v38(v18);
  v28(v18, v21);
  v29 = v40[12];
  *(_DWORD *)(v1 + 824) = v29;
  v30 = v41 + v29;
  v31 = v40[20];
  *(_DWORD *)(v1 + 828) = v31;
  v32 = v41 + v31;
  v33 = v40[32];
  *(_DWORD *)(v1 + 832) = v33;
  v34 = v41 + v33;
  v35 = *(_QWORD *)(v25 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  *(_QWORD *)(v1 + 680) = v35;
  ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v42, v26, v21);
  v36 = dword_1007BA504;
  swift_retain(v35);
  v37 = (_QWORD *)swift_task_alloc(v36);
  *(_QWORD *)(v1 + 688) = v37;
  *v37 = v1;
  v37[1] = sub_100302FBC;
  return sub_10030859C(v1 + 16, v30, v32, v34, v35, v43);
}

uint64_t sub_100302CFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v2 = *(_QWORD **)v1;
  v38 = *(_QWORD **)v1;
  v15 = *(unsigned __int8 *)(*(_QWORD *)v1 + 148);
  v14 = *(unsigned int *)(*(_QWORD *)v1 + 144);
  v29 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v30 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v27 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v28 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v26 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v25 = *(_BYTE *)(*(_QWORD *)v1 + 192);
  v23 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v24 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v21 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  v22 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  v19 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  v20 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  v17 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v18 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v16 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 656));
  v3 = v2[80];
  v4 = v2[77];
  v5 = v2[76];
  v6 = v2[75];
  v7 = v2[72];
  v8 = v2[69];
  v9 = v2[68];
  v10 = v2[67];
  v11 = v2[66];
  v31 = v2[65];
  v32 = v2[64];
  v33 = v2[63];
  v34 = v2[62];
  v35 = v2[61];
  v36 = v2[60];
  v37 = v2[59];
  if (v0)
  {
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
  }
  else
  {
    v12 = v2[52];
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    *(_BYTE *)(v12 + 4) = (v14 | (unint64_t)(v15 << 32)) >> 32;
    *(_DWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v30;
    *(_QWORD *)(v12 + 16) = v29;
    *(_QWORD *)(v12 + 24) = v28;
    *(_QWORD *)(v12 + 32) = v27;
    *(_QWORD *)(v12 + 40) = v26;
    *(_BYTE *)(v12 + 48) = v25;
    *(_QWORD *)(v12 + 56) = v24;
    *(_QWORD *)(v12 + 64) = v23;
    *(_QWORD *)(v12 + 72) = v22;
    *(_QWORD *)(v12 + 80) = v21;
    *(_QWORD *)(v12 + 88) = v20;
    *(_QWORD *)(v12 + 96) = v19;
    *(_QWORD *)(v12 + 104) = v18;
    *(_QWORD *)(v12 + 112) = v17;
    *(_QWORD *)(v12 + 120) = v16;
  }
  return ((uint64_t (*)(void))v38[1])();
}

uint64_t sub_100302FBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  _DWORD *v14;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 688);
  *(_QWORD *)(v2 + 696) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 708) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 704) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 712) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 720) = v5;
  *(_OWORD *)(v2 + 728) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 744) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v2 + 848) = *(_BYTE *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 752) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 768) = v6;
  v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 784) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 800) = v7;
  *(_QWORD *)(v2 + 816) = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(v3);
  v8 = *(_QWORD *)(v2 + 680);
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 672);
  v10 = *(_QWORD *)(v2 + 648);
  v11 = *(_QWORD *)(v2 + 600);
  v12 = *(_QWORD *)(v2 + 584);
  if (v0)
  {
    v9(v11, v12);
    swift_release(v8);
    v13 = sub_100303EF0;
  }
  else
  {
    v14 = *(_DWORD **)(v2 + 464);
    *(_DWORD *)(v2 + 836) = v14[16];
    *(_DWORD *)(v2 + 840) = v14[24];
    *(_DWORD *)(v2 + 844) = v14[28];
    v9(v11, v12);
    swift_release(v8);
    v13 = sub_1003030C8;
  }
  return swift_task_switch(v13, v10, 0);
}

uint64_t sub_1003030C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;
  char v4;
  const char *v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  _DWORD *v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  uint64_t v172;
  uint64_t v173;
  uint8_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  const char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;

  v167 = *(int *)(v0 + 844);
  v1 = *(int *)(v0 + 836);
  v180 = *(const char **)(v0 + 816);
  v2 = *(_QWORD *)(v0 + 800);
  v138 = *(const char **)(v0 + 792);
  v141 = *(_QWORD *)(v0 + 808);
  v3 = *(const char **)(v0 + 776);
  v152 = *(_QWORD *)(v0 + 768);
  v155 = *(_QWORD *)(v0 + 784);
  v184 = *(const char **)(v0 + 760);
  v149 = *(_QWORD *)(v0 + 752);
  v4 = *(_BYTE *)(v0 + 848);
  v147 = v4;
  v5 = *(const char **)(v0 + 744);
  v135 = *(const char **)(v0 + 728);
  v143 = *(_QWORD *)(v0 + 720);
  v145 = *(_QWORD *)(v0 + 736);
  v6 = *(_DWORD *)(v0 + 704);
  v7 = *(_BYTE *)(v0 + 708);
  v8 = *(int *)(v0 + 824);
  v9 = *(_QWORD *)(v0 + 552);
  v10 = *(_QWORD *)(v0 + 544);
  v173 = *(_QWORD *)(v0 + 536);
  v176 = *(_QWORD *)(v0 + 528);
  v11 = *(int **)(v0 + 464);
  v12 = v9 + *(int *)(v0 + 840);
  v170 = v9 + *(int *)(v0 + 832);
  v158 = v9 + *(int *)(v0 + 828);
  v161 = *(void **)(v0 + 712);
  *(_BYTE *)(v9 + 4) = v7;
  *(_DWORD *)v9 = v6;
  *(_QWORD *)(v9 + v1) = v161;
  *(_QWORD *)v12 = v143;
  *(_QWORD *)(v12 + 8) = v135;
  *(_QWORD *)(v12 + 16) = v145;
  *(_QWORD *)(v12 + 24) = v5;
  v13 = v5;
  *(_BYTE *)(v12 + 32) = v4;
  *(_QWORD *)(v12 + 40) = v149;
  *(_QWORD *)(v12 + 48) = v184;
  *(_QWORD *)(v12 + 56) = v152;
  *(_QWORD *)(v12 + 64) = v3;
  v14 = v3;
  *(_QWORD *)(v12 + 72) = v155;
  *(_QWORD *)(v12 + 80) = v138;
  *(_QWORD *)(v12 + 88) = v2;
  *(_QWORD *)(v12 + 96) = v141;
  v15 = v2;
  *(_QWORD *)(v9 + v167) = v180;
  v16 = v11[12];
  v17 = v11[16];
  v18 = v11[20];
  v19 = v11[24];
  v164 = v2;
  v168 = v11[28];
  v20 = v11[32];
  *(_BYTE *)(v10 + 4) = v7;
  *(_DWORD *)v10 = v6;
  v21 = v10 + v18;
  v22 = v10 + v19;
  v132 = v10 + v20;
  sub_100244384(v9 + v8, v10 + v16, _s10AskRequestVMa);
  *(_QWORD *)(v10 + v17) = v161;
  sub_100244384(v158, v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v22 = v143;
  *(_QWORD *)(v22 + 8) = v135;
  *(_QWORD *)(v22 + 16) = v145;
  *(_QWORD *)(v22 + 24) = v13;
  *(_BYTE *)(v22 + 32) = v147;
  *(_QWORD *)(v22 + 40) = v149;
  *(_QWORD *)(v22 + 48) = v184;
  *(_QWORD *)(v22 + 56) = v152;
  *(_QWORD *)(v22 + 64) = v14;
  *(_QWORD *)(v22 + 72) = v155;
  *(_QWORD *)(v22 + 80) = v138;
  *(_QWORD *)(v22 + 88) = v15;
  *(_QWORD *)(v22 + 96) = v141;
  *(_QWORD *)(v10 + v168) = v180;
  sub_100221F28(v170, v132, &qword_1007BA318);
  sub_100221F28(v10, v173, &qword_1007BA4F8);
  sub_10022E718(v10, v176, &qword_1007BA4F8);
  swift_bridgeObjectRetain(v138);
  v23 = v161;
  swift_bridgeObjectRetain(v135);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v184);
  swift_bridgeObjectRetain(v14);
  sub_100244404(v164, v141);
  v24 = swift_bridgeObjectRetain(v180);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = *(_QWORD *)(v0 + 536);
    v178 = *(_QWORD *)(v0 + 528);
    v28 = *(_QWORD *)(v0 + 520);
    v29 = *(int **)(v0 + 464);
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v181 = swift_slowAlloc(32, -1);
    v187 = v181;
    v171 = v25;
    v174 = v30;
    *(_DWORD *)v30 = 136315138;
    v31 = v29[12];
    v32 = v28 + v31;
    v162 = v28 + v31;
    v165 = v30 + 4;
    v33 = v29[16];
    v34 = v29[20];
    v35 = v28 + v34;
    v36 = v29[24];
    v153 = (void *)(v28 + v36);
    v37 = v29[28];
    v38 = v29[32];
    v39 = v27 + v31;
    v40 = v27 + v34;
    v41 = (_OWORD *)(v27 + v36);
    v156 = v27 + v38;
    v159 = v28 + v38;
    LODWORD(v31) = *(_DWORD *)v27;
    *(_BYTE *)(v28 + 4) = *(_BYTE *)(v27 + 4);
    *(_DWORD *)v28 = v31;
    sub_100244384(v39, v32, _s10AskRequestVMa);
    *(_QWORD *)(v28 + v33) = *(_QWORD *)(v27 + v33);
    sub_100244384(v40, v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v43 = v41[1];
    v42 = v41[2];
    *(_OWORD *)(v0 + 272) = *v41;
    *(_OWORD *)(v0 + 288) = v43;
    *(_OWORD *)(v0 + 304) = v42;
    v45 = v41[4];
    v44 = v41[5];
    v46 = v41[3];
    *(_QWORD *)(v0 + 368) = *((_QWORD *)v41 + 12);
    *(_OWORD *)(v0 + 336) = v45;
    *(_OWORD *)(v0 + 352) = v44;
    *(_OWORD *)(v0 + 320) = v46;
    memmove(v153, v41, 0x68uLL);
    *(_QWORD *)(v28 + v37) = *(_QWORD *)(v27 + v37);
    sub_100221F28(v156, v159, &qword_1007BA318);
    sub_10031B8C8((_QWORD *)(v0 + 272));
    sub_10000D0F0(v159, &qword_1007BA318);
    sub_1002443C8(v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002443C8(v162, _s10AskRequestVMa);
    v47 = sub_100497120();
    v49 = v48;
    sub_1002A80BC((_QWORD *)(v0 + 272));
    *(_QWORD *)(v0 + 400) = sub_100228BD8(v47, (unint64_t)v49, &v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408, v165);
    swift_bridgeObjectRelease(v49);
    sub_10000D0F0(v178, &qword_1007BA4F8);
    sub_10000D0F0(v27, &qword_1007BA4F8);
    _os_log_impl((void *)&_mh_execute_header, v171, v26, "Send StateMachine ASK END {response: %s}", v174, 0xCu);
    swift_arrayDestroy(v181, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v181, -1, -1);
    swift_slowDealloc(v174, -1, -1);

  }
  else
  {
    v50 = *(_QWORD *)(v0 + 536);
    v51 = *(_QWORD *)(v0 + 528);

    sub_10000D0F0(v51, &qword_1007BA4F8);
    sub_10000D0F0(v50, &qword_1007BA4F8);
  }
  v139 = *(int *)(v0 + 844);
  v182 = *(int *)(v0 + 836);
  v185 = *(int *)(v0 + 840);
  v52 = *(int **)(v0 + 552);
  v53 = *(_QWORD *)(v0 + 520);
  v54 = *(_QWORD *)(v0 + 512);
  v124 = *(_QWORD *)(v0 + 504);
  v101 = *(_QWORD *)(v0 + 496);
  v103 = *(_QWORD *)(v0 + 488);
  v109 = *(_QWORD *)(v0 + 480);
  v55 = *(int **)(v0 + 464);
  v113 = *(_QWORD *)(v0 + 472);
  v116 = *(_QWORD *)(v0 + 448);
  v119 = *(_QWORD *)(v0 + 440);
  v121 = *(_QWORD *)(v0 + 432);
  v127 = *(_QWORD *)(v0 + 424);
  v56 = (uint64_t)v52 + *(int *)(v0 + 828);
  v133 = (uint64_t)v52 + *(int *)(v0 + 832);
  v136 = v56;
  v150 = (uint64_t)v52 + *(int *)(v0 + 824);
  v57 = v55[16];
  v58 = v53 + v55[20];
  v117 = v58;
  v118 = v53 + v55[12];
  v59 = v53 + v55[24];
  v114 = v55[28];
  v130 = v53 + v55[32];
  v148 = *v52;
  v166 = *((_BYTE *)v52 + 4);
  *(_BYTE *)(v53 + 4) = v166;
  *(_DWORD *)v53 = v148;
  sub_100244384(v150, v118, _s10AskRequestVMa);
  v157 = *(_QWORD *)((char *)v52 + v182);
  *(_QWORD *)(v53 + v57) = v157;
  sub_100244384(v56, v58, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v175 = *(_QWORD *)(v12 + 8);
  v177 = *(_QWORD *)((char *)v52 + v185);
  v169 = *(_QWORD *)(v12 + 24);
  v172 = *(_QWORD *)(v12 + 16);
  v163 = *(_BYTE *)(v12 + 32);
  v160 = *(_QWORD *)(v12 + 40);
  v60 = *(_QWORD *)(v12 + 56);
  v183 = *(_QWORD *)(v12 + 64);
  v186 = *(_QWORD *)(v12 + 48);
  v144 = *(_QWORD *)(v12 + 72);
  v179 = *(_QWORD *)(v12 + 80);
  v61 = *(_QWORD *)(v12 + 96);
  v154 = *(_QWORD *)(v12 + 88);
  *(_QWORD *)v59 = v177;
  *(_QWORD *)(v59 + 8) = v175;
  *(_QWORD *)(v59 + 16) = v172;
  *(_QWORD *)(v59 + 24) = v169;
  *(_BYTE *)(v59 + 32) = v163;
  *(_QWORD *)(v59 + 40) = v160;
  *(_QWORD *)(v59 + 48) = v186;
  *(_QWORD *)(v59 + 56) = v60;
  *(_QWORD *)(v59 + 64) = v183;
  v146 = v60;
  *(_QWORD *)(v59 + 72) = v144;
  *(_QWORD *)(v59 + 80) = v179;
  *(_QWORD *)(v59 + 88) = v154;
  *(_QWORD *)(v59 + 96) = v61;
  v140 = *(_QWORD *)((char *)v52 + v139);
  v142 = v61;
  *(_QWORD *)(v53 + v114) = v140;
  sub_100221F28(v133, v130, &qword_1007BA318);
  v62 = v55[16];
  v63 = v54 + v55[20];
  v115 = v63;
  v64 = v54 + v55[24];
  v107 = v55[28];
  v65 = v54 + v55[32];
  v111 = v54 + v55[12];
  *(_BYTE *)(v54 + 4) = v166;
  *(_DWORD *)v54 = v148;
  sub_100244384(v150, v111, _s10AskRequestVMa);
  *(_QWORD *)(v54 + v62) = v157;
  sub_100244384(v136, v63, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v64 = v177;
  *(_QWORD *)(v64 + 8) = v175;
  *(_QWORD *)(v64 + 16) = v172;
  *(_QWORD *)(v64 + 24) = v169;
  *(_BYTE *)(v64 + 32) = v163;
  *(_QWORD *)(v64 + 40) = v160;
  *(_QWORD *)(v64 + 48) = v186;
  *(_QWORD *)(v64 + 56) = v60;
  *(_QWORD *)(v64 + 64) = v183;
  *(_QWORD *)(v64 + 72) = v144;
  *(_QWORD *)(v64 + 80) = v179;
  *(_QWORD *)(v64 + 88) = v154;
  *(_QWORD *)(v64 + 96) = v142;
  *(_QWORD *)(v54 + v107) = v140;
  sub_100221F28(v133, v65, &qword_1007BA318);
  sub_100221DB4(v111, v127, _s10AskRequestVMa);
  v66 = v124 + v55[12];
  v112 = v66;
  v67 = v55[16];
  v68 = v124 + v55[20];
  v69 = v124 + v55[24];
  v105 = v55[28];
  v108 = v68;
  v128 = v124 + v55[32];
  *(_BYTE *)(v124 + 4) = v166;
  *(_DWORD *)v124 = v148;
  sub_100244384(v150, v66, _s10AskRequestVMa);
  *(_QWORD *)(v124 + v67) = v157;
  sub_100244384(v136, v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v69 = v177;
  *(_QWORD *)(v69 + 8) = v175;
  *(_QWORD *)(v69 + 16) = v172;
  *(_QWORD *)(v69 + 24) = v169;
  *(_BYTE *)(v69 + 32) = v163;
  *(_QWORD *)(v69 + 40) = v160;
  *(_QWORD *)(v69 + 48) = v186;
  *(_QWORD *)(v69 + 56) = v146;
  *(_QWORD *)(v69 + 64) = v183;
  *(_QWORD *)(v69 + 72) = v144;
  *(_QWORD *)(v69 + 80) = v179;
  *(_QWORD *)(v69 + 88) = v154;
  *(_QWORD *)(v69 + 96) = v142;
  *(_QWORD *)(v124 + v105) = v140;
  sub_100221F28(v133, v128, &qword_1007BA318);
  v70 = v101 + v55[12];
  v106 = v70;
  v98 = v55[16];
  v71 = v101 + v55[20];
  v72 = v101 + v55[24];
  v100 = v55[28];
  v125 = v101 + v55[32];
  *(_BYTE *)(v101 + 4) = v166;
  *(_DWORD *)v101 = v148;
  sub_100244384(v150, v70, _s10AskRequestVMa);
  *(_QWORD *)(v101 + v98) = v157;
  sub_100244384(v136, v71, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v72 = v177;
  *(_QWORD *)(v72 + 8) = v175;
  *(_QWORD *)(v72 + 16) = v172;
  *(_QWORD *)(v72 + 24) = v169;
  *(_BYTE *)(v72 + 32) = v163;
  *(_QWORD *)(v72 + 40) = v160;
  *(_QWORD *)(v72 + 48) = v186;
  *(_QWORD *)(v72 + 56) = v146;
  *(_QWORD *)(v72 + 64) = v183;
  *(_QWORD *)(v72 + 72) = v144;
  *(_QWORD *)(v72 + 80) = v179;
  *(_QWORD *)(v72 + 88) = v154;
  *(_QWORD *)(v72 + 96) = v142;
  *(_QWORD *)(v101 + v100) = v140;
  sub_100221F28(v133, v125, &qword_1007BA318);
  sub_100221DB4(v71, v121, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v95 = v55[16];
  v73 = v103 + v55[20];
  v102 = v103 + v55[12];
  v74 = v103 + v55[24];
  v99 = v55[28];
  v122 = v103 + v55[32];
  *(_BYTE *)(v103 + 4) = v166;
  *(_DWORD *)v103 = v148;
  sub_100244384(v150, v102, _s10AskRequestVMa);
  *(_QWORD *)(v103 + v95) = v157;
  sub_100244384(v136, v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v74 = v177;
  *(_QWORD *)(v74 + 8) = v175;
  *(_QWORD *)(v74 + 16) = v172;
  *(_QWORD *)(v74 + 24) = v169;
  *(_BYTE *)(v74 + 32) = v163;
  *(_QWORD *)(v74 + 40) = v160;
  *(_QWORD *)(v74 + 48) = v186;
  *(_QWORD *)(v74 + 56) = v146;
  *(_QWORD *)(v74 + 64) = v183;
  *(_QWORD *)(v74 + 72) = v144;
  *(_QWORD *)(v74 + 80) = v179;
  *(_QWORD *)(v74 + 88) = v154;
  *(_QWORD *)(v74 + 96) = v142;
  *(_QWORD *)(v103 + v99) = v140;
  sub_100221F28(v133, v122, &qword_1007BA318);
  v75 = type metadata accessor for SFAirDrop.ContactRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v119, 1, 1, v75);
  v76 = v109 + v55[12];
  v104 = v76;
  v77 = v55[16];
  v78 = v109 + v55[20];
  v79 = v109 + v55[24];
  v96 = v55[28];
  v120 = v109 + v55[32];
  *(_BYTE *)(v109 + 4) = v166;
  *(_DWORD *)v109 = v148;
  sub_100244384(v150, v76, _s10AskRequestVMa);
  *(_QWORD *)(v109 + v77) = v157;
  sub_100244384(v136, v78, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v79 = v177;
  *(_QWORD *)(v79 + 8) = v175;
  *(_QWORD *)(v79 + 16) = v172;
  *(_QWORD *)(v79 + 24) = v169;
  *(_BYTE *)(v79 + 32) = v163;
  *(_QWORD *)(v79 + 40) = v160;
  *(_QWORD *)(v79 + 48) = v186;
  *(_QWORD *)(v79 + 56) = v146;
  *(_QWORD *)(v79 + 64) = v183;
  *(_QWORD *)(v79 + 72) = v144;
  *(_QWORD *)(v79 + 80) = v179;
  *(_QWORD *)(v79 + 88) = v154;
  *(_QWORD *)(v79 + 96) = v142;
  *(_QWORD *)(v109 + v96) = v140;
  sub_100221F28(v133, v120, &qword_1007BA318);
  v80 = v113 + v55[12];
  v110 = v80;
  v94 = v55[16];
  v81 = v113 + v55[20];
  v82 = v113 + v55[24];
  v97 = v55[28];
  v83 = v113 + v55[32];
  *(_BYTE *)(v113 + 4) = v166;
  *(_DWORD *)v113 = v148;
  sub_100221DB4(v150, v80, _s10AskRequestVMa);
  *(_QWORD *)(v113 + v94) = v157;
  sub_100221DB4(v136, v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v82 = v177;
  *(_QWORD *)(v82 + 8) = v175;
  *(_QWORD *)(v82 + 16) = v172;
  *(_QWORD *)(v82 + 24) = v169;
  *(_BYTE *)(v82 + 32) = v163;
  *(_QWORD *)(v82 + 40) = v160;
  *(_QWORD *)(v82 + 48) = v186;
  *(_QWORD *)(v82 + 56) = v146;
  *(_QWORD *)(v82 + 64) = v183;
  *(_QWORD *)(v82 + 72) = v144;
  *(_QWORD *)(v82 + 80) = v179;
  *(_QWORD *)(v82 + 88) = v154;
  *(_QWORD *)(v82 + 96) = v142;
  *(_QWORD *)(v113 + v97) = v140;
  sub_10022E718(v133, v83, &qword_1007BA318);
  sub_10022E718(v83, v116, &qword_1007BA318);
  sub_1002443C8(v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v110, _s10AskRequestVMa);
  sub_10000D0F0(v120, &qword_1007BA318);
  sub_1002443C8(v78, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v104, _s10AskRequestVMa);
  sub_10000D0F0(v122, &qword_1007BA318);
  sub_1002443C8(v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v102, _s10AskRequestVMa);
  sub_10000D0F0(v125, &qword_1007BA318);
  sub_1002443C8(v106, _s10AskRequestVMa);
  sub_10000D0F0(v128, &qword_1007BA318);
  sub_1002443C8(v108, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v112, _s10AskRequestVMa);
  sub_10000D0F0(v65, &qword_1007BA318);
  sub_1002443C8(v115, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10000D0F0(v130, &qword_1007BA318);
  sub_1002443C8(v117, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v118, _s10AskRequestVMa);
  v84 = *(_QWORD *)(v0 + 616);
  v85 = *(_QWORD *)(v0 + 608);
  v86 = *(_QWORD *)(v0 + 600);
  v87 = *(_QWORD *)(v0 + 576);
  v88 = *(_QWORD *)(v0 + 552);
  v89 = *(_QWORD *)(v0 + 544);
  v90 = *(_QWORD *)(v0 + 536);
  v91 = *(_QWORD *)(v0 + 528);
  v123 = *(_QWORD *)(v0 + 520);
  v126 = *(_QWORD *)(v0 + 512);
  v129 = *(_QWORD *)(v0 + 504);
  v131 = *(_QWORD *)(v0 + 496);
  v134 = *(_QWORD *)(v0 + 488);
  v137 = *(_QWORD *)(v0 + 480);
  v151 = *(_QWORD *)(v0 + 472);
  v92 = *(_QWORD *)(v0 + 416);
  swift_task_dealloc(*(_QWORD *)(v0 + 640));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v123);
  swift_task_dealloc(v126);
  swift_task_dealloc(v129);
  swift_task_dealloc(v131);
  swift_task_dealloc(v134);
  swift_task_dealloc(v137);
  swift_task_dealloc(v151);
  *(_BYTE *)(v92 + 4) = v166;
  *(_DWORD *)v92 = v148;
  *(_QWORD *)(v92 + 8) = v157;
  *(_QWORD *)(v92 + 16) = v177;
  *(_QWORD *)(v92 + 24) = v175;
  *(_QWORD *)(v92 + 32) = v172;
  *(_QWORD *)(v92 + 40) = v169;
  *(_BYTE *)(v92 + 48) = v163;
  *(_QWORD *)(v92 + 56) = v160;
  *(_QWORD *)(v92 + 64) = v186;
  *(_QWORD *)(v92 + 72) = v146;
  *(_QWORD *)(v92 + 80) = v183;
  *(_QWORD *)(v92 + 88) = v144;
  *(_QWORD *)(v92 + 96) = v179;
  *(_QWORD *)(v92 + 104) = v154;
  *(_QWORD *)(v92 + 112) = v142;
  *(_QWORD *)(v92 + 120) = v140;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100303EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 616);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 576);
  v5 = *(_QWORD *)(v0 + 552);
  v6 = *(_QWORD *)(v0 + 544);
  v7 = *(_QWORD *)(v0 + 536);
  v8 = *(_QWORD *)(v0 + 528);
  v9 = *(_QWORD *)(v0 + 520);
  v11 = *(_QWORD *)(v0 + 512);
  v12 = *(_QWORD *)(v0 + 504);
  v13 = *(_QWORD *)(v0 + 496);
  v14 = *(_QWORD *)(v0 + 488);
  v15 = *(_QWORD *)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 472);
  swift_task_dealloc(*(_QWORD *)(v0 + 640));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030400C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v9 + 272) = a7;
  *(_QWORD *)(v9 + 280) = a8;
  *(_QWORD *)(v9 + 256) = a5;
  *(_QWORD *)(v9 + 264) = a6;
  *(_QWORD *)(v9 + 240) = a3;
  *(_QWORD *)(v9 + 248) = a4;
  *(_QWORD *)(v9 + 224) = a1;
  *(_QWORD *)(v9 + 232) = a2;
  v10 = *a5;
  *(_QWORD *)(v9 + 288) = v8;
  *(_QWORD *)(v9 + 296) = v10;
  *(_OWORD *)(v9 + 304) = *(_OWORD *)(a5 + 1);
  *(_QWORD *)(v9 + 320) = a5[3];
  *(_BYTE *)(v9 + 756) = *((_BYTE *)a5 + 32);
  v11 = *(_OWORD *)(a5 + 7);
  *(_OWORD *)(v9 + 328) = *(_OWORD *)(a5 + 5);
  *(_OWORD *)(v9 + 344) = v11;
  v12 = *(_OWORD *)(a5 + 11);
  *(_OWORD *)(v9 + 360) = *(_OWORD *)(a5 + 9);
  *(_OWORD *)(v9 + 376) = v12;
  v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0);
  *(_QWORD *)(v9 + 392) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 400) = v14;
  *(_QWORD *)(v9 + 408) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007C5E70);
  *(_QWORD *)(v9 + 416) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007B7E08);
  *(_QWORD *)(v9 + 424) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008384(&qword_1007B7760);
  *(_QWORD *)(v9 + 432) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008384(&qword_1007BA310);
  *(_QWORD *)(v9 + 440) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDropSend.Request(0);
  *(_QWORD *)(v9 + 448) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v9 + 456) = v20;
  *(_QWORD *)(v9 + 464) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  *(_QWORD *)(v9 + 472) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v9 + 480) = v22;
  *(_QWORD *)(v9 + 488) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100008384(&qword_1007C4330);
  *(_QWORD *)(v9 + 496) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008384((uint64_t *)&unk_1007C33D0);
  *(_QWORD *)(v9 + 504) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v24 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Date(0);
  *(_QWORD *)(v9 + 512) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v9 + 520) = v26;
  *(_QWORD *)(v9 + 528) = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  *(_QWORD *)(v9 + 536) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDropSend.Transfer(0);
  *(_QWORD *)(v9 + 544) = v28;
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v9 + 552) = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 560) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 568) = swift_task_alloc(v30);
  v31 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0);
  *(_QWORD *)(v9 + 576) = v31;
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v9 + 584) = v32;
  *(_QWORD *)(v9 + 592) = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for SFAirDrop.TransferType(0);
  *(_QWORD *)(v9 + 600) = v33;
  v34 = *(_QWORD *)(v33 - 8);
  *(_QWORD *)(v9 + 608) = v34;
  *(_QWORD *)(v9 + 616) = swift_task_alloc((*(_QWORD *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7E48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 624) = swift_task_alloc(v35);
  *(_QWORD *)(v9 + 632) = swift_task_alloc(v35);
  v36 = _s10AskRequestVMa(0);
  *(_QWORD *)(v9 + 640) = v36;
  v37 = (*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 648) = swift_task_alloc(v37);
  *(_QWORD *)(v9 + 656) = swift_task_alloc(v37);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v38 = static AirDropActor.shared;
  *(_QWORD *)(v9 + 664) = static AirDropActor.shared;
  return swift_task_switch(sub_100304348, v38, 0);
}

uint64_t sub_100304348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  uint64_t ObjectType;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 272) + 16);
  sub_100244384(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 656), _s10AskRequestVMa);
  v2 = *(_QWORD *)(v0 + 656);
  if (!v1)
  {
    v20 = *(_QWORD *)(v0 + 640);
    v21 = *(_QWORD *)(v0 + 632);
    v22 = *(_QWORD *)(v0 + 608);
    v23 = *(_QWORD *)(v0 + 600);
    sub_100221F28(v2 + *(int *)(v20 + 20), v21, &qword_1007B7E48);
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    v25 = v24(v21, 1, v23);
    v26 = *(_QWORD *)(v0 + 656);
    v27 = *(_QWORD *)(v0 + 648);
    v28 = *(_QWORD *)(v0 + 632);
    if ((_DWORD)v25 == 1)
    {
      v29 = *(_QWORD *)(v0 + 232);
      sub_1002443C8(*(_QWORD *)(v0 + 656), _s10AskRequestVMa);
      sub_10000D0F0(v28, &qword_1007B7E48);
      sub_100244384(v29, v27, _s10AskRequestVMa);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 608);
      v31 = *(_QWORD *)(v0 + 600);
      v32 = *(_QWORD *)(v0 + 232);
      v33 = SFAirDrop.TransferType.isOnlyExchange.getter(v25);
      sub_1002443C8(v26, _s10AskRequestVMa);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v31);
      sub_100244384(v32, v27, _s10AskRequestVMa);
      if ((v33 & 1) != 0)
        goto LABEL_3;
    }
    v34 = *(_QWORD *)(v0 + 624);
    v35 = *(_QWORD *)(v0 + 600);
    sub_100221F28(*(_QWORD *)(v0 + 648) + *(int *)(v20 + 20), v34, &qword_1007B7E48);
    v36 = v24(v34, 1, v35);
    v37 = *(_QWORD *)(v0 + 648);
    v38 = *(_QWORD *)(v0 + 624);
    if ((_DWORD)v36 == 1)
    {
      sub_1002443C8(*(_QWORD *)(v0 + 648), _s10AskRequestVMa);
      sub_10000D0F0(v38, &qword_1007B7E48);
    }
    else
    {
      v39 = *(_QWORD *)(v0 + 608);
      v40 = *(_QWORD *)(v0 + 600);
      v41 = SFAirDrop.TransferType.isCustom.getter(v36);
      sub_1002443C8(v37, _s10AskRequestVMa);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      if ((v41 & 1) != 0)
        goto LABEL_4;
    }
    v42 = type metadata accessor for SFAirDropSend.Failure(0);
    v43 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v42, v43, 0, 0);
    v45 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v44, enum case for SFAirDropSend.Failure.badRequest(_:), v42);
    swift_willThrow(v45);
    v46 = *(_QWORD *)(v0 + 648);
    v47 = *(_QWORD *)(v0 + 632);
    v48 = *(_QWORD *)(v0 + 624);
    v49 = *(_QWORD *)(v0 + 616);
    v50 = *(_QWORD *)(v0 + 592);
    v51 = *(_QWORD *)(v0 + 568);
    v52 = *(_QWORD *)(v0 + 560);
    v53 = *(_QWORD *)(v0 + 536);
    v54 = *(_QWORD *)(v0 + 528);
    v55 = *(_QWORD *)(v0 + 504);
    v56 = *(_QWORD *)(v0 + 496);
    v57 = *(_QWORD *)(v0 + 488);
    v58 = *(_QWORD *)(v0 + 464);
    v59 = *(_QWORD *)(v0 + 440);
    v60 = *(_QWORD *)(v0 + 432);
    v61 = *(_QWORD *)(v0 + 424);
    v62 = *(_QWORD *)(v0 + 416);
    v63 = *(_QWORD *)(v0 + 408);
    swift_task_dealloc(*(_QWORD *)(v0 + 656));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 648);
  v4 = *(_QWORD *)(v0 + 232);
  sub_1002443C8(v2, _s10AskRequestVMa);
  sub_100244384(v4, v3, _s10AskRequestVMa);
LABEL_3:
  sub_1002443C8(*(_QWORD *)(v0 + 648), _s10AskRequestVMa);
LABEL_4:
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(const char **)(v0 + 272);
  v10 = *(const char **)(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls);
  *(_QWORD *)(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls) = v9;
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  *(_QWORD *)(v0 + 672) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  v12 = swift_bridgeObjectRetain(v9, v11);
  v13 = SFAirDropSend.Request.type.getter(v12);
  LOBYTE(v8) = SFAirDrop.TransferType.isOnlyExchange.getter(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 680) = v14;
  v14(v5, v7);
  if ((v8 & 1) == 0)
  {
    v15 = (_QWORD *)(*(_QWORD *)(v0 + 288)
                   + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager);
    v16 = v15[1];
    ObjectType = swift_getObjectType(*v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(1, ObjectType, v16);
  }
  v18 = (_QWORD *)swift_task_alloc(dword_1007BA38C);
  *(_QWORD *)(v0 + 688) = v18;
  *v18 = v0;
  v18[1] = sub_1003047B4;
  return sub_100310EF8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 280));
}

uint64_t sub_1003047B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 688);
  *(_QWORD *)(*v1 + 696) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100305130;
  else
    v4 = sub_100304818;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 664), 0);
}

uint64_t sub_100304818(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  uint64_t **v12;

  v2 = (void (*)(uint64_t, uint64_t))v1[85];
  v3 = v1[77];
  v4 = v1[75];
  v5 = sub_1002BD26C(a1);
  v6 = SFAirDropSend.Request.type.getter(v5);
  v7 = SFAirDrop.TransferType.isOnlyExchange.getter(v6);
  v2(v3, v4);
  if ((v7 & 1) == 0)
  {
    v8 = (_QWORD *)(v1[36] + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager);
    v9 = v8[1];
    ObjectType = swift_getObjectType(*v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(2, ObjectType, v9);
  }
  v11 = *(_BYTE *)(v1[32] + 32);
  v12 = (uint64_t **)swift_task_alloc(dword_1007BA394);
  v1[88] = (uint64_t)v12;
  *v12 = v1;
  v12[1] = (uint64_t *)sub_100304900;
  return sub_1003125C4(v1[29], v1[30], v1[33], v11);
}

uint64_t sub_100304900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 704);
  *(_QWORD *)(*(_QWORD *)v3 + 712) = v2;
  swift_task_dealloc(v7);
  v8 = v6[83];
  if (v2)
  {
    v9 = sub_100305278;
  }
  else
  {
    v6[90] = a2;
    v6[91] = a1;
    v9 = sub_10030497C;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_10030497C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)(v0 + 720);
  v32 = *(_QWORD *)(v0 + 728);
  v28 = *(_QWORD *)(v0 + 584);
  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 552);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 536);
  v24 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 504);
  v25 = *(_QWORD *)(v0 + 512);
  v7 = *(_QWORD *)(v0 + 488);
  v22 = *(_QWORD *)(v0 + 592);
  v23 = *(_QWORD *)(v0 + 496);
  v26 = *(_QWORD *)(v0 + 480);
  v29 = *(_QWORD *)(v0 + 472);
  v30 = *(_QWORD *)(v0 + 576);
  v19 = *(_QWORD *)(v0 + 528);
  v20 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 392);
  v8 = *(_QWORD *)(v0 + 288)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v27 = *(_QWORD *)(v0 + 224);
  v9 = swift_beginAccess(v8, v0 + 120, 0, 0);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v11 = v10(v1, v8, v4, v9);
  SFAirDropSend.Transfer.id.getter(v11);
  v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v1, v4);
  v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v2, v8, v4);
  SFAirDropSend.Transfer.startDate.getter(v13);
  v12(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v5, v19);
  *(_DWORD *)(v0 + 752) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:);
  v14 = *(void (**)(uint64_t))(v20 + 104);
  *(_QWORD *)(v0 + 736) = v14;
  v14(v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v6, 0, 1, v21);
  v15 = SFAirDropSend.Transfer.Metrics.result.setter(v6);
  static Date.now.getter(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v25);
  SFAirDropSend.Transfer.Metrics.endDate.setter(v23);
  v16 = (_QWORD *)(v7 + *(int *)(sub_100008384((uint64_t *)&unk_1007BCFD0) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v7, v22, v30);
  *v16 = v32;
  v16[1] = v31;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v7, enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:), v29);
  sub_1002BC504(v7, v27);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v29);
  v17 = (_QWORD *)swift_task_alloc(dword_1007B8834);
  *(_QWORD *)(v0 + 744) = v17;
  *v17 = v0;
  v17[1] = sub_100304BE4;
  return sub_1002BB76C();
}

uint64_t sub_100304BE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 664);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 744));
  return swift_task_switch(sub_100304C3C, v1, 0);
}

uint64_t sub_100304C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  void (*v44)(uint64_t, _QWORD, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;

  v1 = *(_QWORD *)(v0 + 288);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 456) + 16))(*(_QWORD *)(v0 + 464), v1 + *(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 448));
  v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  v5 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  if (v3)
  {
    v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry, v0 + 144, 0, 0);
    sub_100244384(v6, v4, type metadata accessor for SDAirDropSendConnectionTelemetry);
    v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
    sub_100244384(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  }
  else
  {
    v9 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v0 + 288)
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  v12 = swift_retain(v11);
  CurrentValueSubject.value.getter(v12);
  swift_release(v11);
  v62 = *(const char **)(v0 + 216);
  v13 = *(_QWORD *)(v1 + v2);
  v14 = *(_QWORD *)(v0 + 424);
  if (v13)
  {
    v15 = *(_QWORD *)(v0 + 416);
    v16 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest, v0 + 168, 0, 0);
    sub_100221F28(v16, v14, &qword_1007B7E08);
    v17 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    swift_beginAccess(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType, v0 + 192, 0, 0);
    v18 = type metadata accessor for SFNWInterfaceType(0);
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v17, v18);
    v20 = 0;
  }
  else
  {
    v21 = _s13UploadRequestVMa(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v14, 1, 1, v21);
    v22 = type metadata accessor for SFNWInterfaceType(0);
    v20 = 1;
    v18 = v22;
    v19 = *(_QWORD *)(v22 - 8);
  }
  v44 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 736);
  v43 = *(_DWORD *)(v0 + 752);
  v50 = *(_QWORD *)(v0 + 656);
  v51 = *(_QWORD *)(v0 + 648);
  v52 = *(_QWORD *)(v0 + 632);
  v53 = *(_QWORD *)(v0 + 624);
  v54 = *(_QWORD *)(v0 + 616);
  v47 = *(_QWORD *)(v0 + 584);
  v48 = *(_QWORD *)(v0 + 576);
  v49 = *(_QWORD *)(v0 + 592);
  v55 = *(_QWORD *)(v0 + 568);
  v56 = *(_QWORD *)(v0 + 560);
  v57 = *(_QWORD *)(v0 + 536);
  v58 = *(_QWORD *)(v0 + 528);
  v59 = *(_QWORD *)(v0 + 504);
  v60 = *(_QWORD *)(v0 + 496);
  v61 = *(_QWORD *)(v0 + 488);
  v45 = *(_QWORD *)(v0 + 456);
  v46 = *(_QWORD *)(v0 + 448);
  v38 = *(_QWORD *)(v0 + 440);
  v39 = *(_QWORD *)(v0 + 432);
  v40 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 416);
  v24 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 424);
  v42 = *(_QWORD *)(v0 + 400);
  v26 = *(_QWORD *)(v0 + 384);
  v25 = *(_QWORD *)(v0 + 392);
  v27 = *(_QWORD *)(v0 + 376);
  v36 = *(_OWORD *)(v0 + 344);
  v37 = *(_OWORD *)(v0 + 360);
  v34 = *(_OWORD *)(v0 + 296);
  v35 = *(_OWORD *)(v0 + 328);
  v28 = *(unsigned __int8 *)(v0 + 756);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v30 = *(_QWORD *)(v0 + 312);
  v31 = *(_QWORD *)(v0 + 320);
  v29(v23, v20, 1, v18);
  *(_OWORD *)(v0 + 16) = v34;
  *(_QWORD *)(v0 + 32) = v30;
  *(_QWORD *)(v0 + 40) = v31;
  *(_QWORD *)(v0 + 48) = v28;
  *(_OWORD *)(v0 + 56) = v35;
  *(_OWORD *)(v0 + 72) = v36;
  *(_OWORD *)(v0 + 88) = v37;
  *(_QWORD *)(v0 + 104) = v27;
  *(_QWORD *)(v0 + 112) = v26;
  v44(v24, v43, v25);
  sub_100337894(v40, v38, v39, (uint64_t)v62, v0 + 16, v41, v23, v24);
  v32 = swift_bridgeObjectRelease(v62);
  (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v24, v25, v32);
  sub_10000D0F0(v23, &qword_1007C5E70);
  sub_10000D0F0(v41, &qword_1007B7E08);
  sub_10000D0F0(v39, &qword_1007B7760);
  sub_10000D0F0(v38, &qword_1007BA310);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v40, v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v49);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v40);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100305130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 624);
  v4 = *(_QWORD *)(v0 + 616);
  v5 = *(_QWORD *)(v0 + 592);
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 560);
  v8 = *(_QWORD *)(v0 + 536);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 488);
  v14 = *(_QWORD *)(v0 + 464);
  v15 = *(_QWORD *)(v0 + 440);
  v16 = *(_QWORD *)(v0 + 432);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 416);
  v19 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 656));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100305278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 624);
  v4 = *(_QWORD *)(v0 + 616);
  v5 = *(_QWORD *)(v0 + 592);
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 560);
  v8 = *(_QWORD *)(v0 + 536);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 488);
  v14 = *(_QWORD *)(v0 + 464);
  v15 = *(_QWORD *)(v0 + 440);
  v16 = *(_QWORD *)(v0 + 432);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 416);
  v19 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 656));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003053C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  v9 = sub_100008384(&qword_1007BA318);
  v8[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v8[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[13] = v11;
  v8[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384((uint64_t *)&unk_1007B5200);
  v8[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100305474, 0, 0);
}

uint64_t sub_100305474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 104);
  if (v2)
  {
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v20 = *(_QWORD *)(v3 + 72);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain((const char *)v1);
    while (1)
    {
      v6 = *(_QWORD *)(v0 + 120);
      v7 = *(_QWORD *)(v0 + 96);
      v5(v6, v4, v7);
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v8(v6, 0, 1, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) == 1)
        break;
      v9 = *(_QWORD *)(v0 + 112);
      v10 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v9, *(_QWORD *)(v0 + 120), v10);
      URL._bridgeToObjectiveC()(v11);
      v13 = v12;
      v14 = objc_msgSend(v12, "isiWorkDocument");

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v10);
      if ((v14 & 1) != 0)
      {
        v15 = 8;
        goto LABEL_11;
      }
      v4 += v20;
      if (!--v2)
        goto LABEL_8;
    }
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain((const char *)v1);
LABEL_8:
    v8(*(_QWORD *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 96));
  }
  v15 = 131074;
LABEL_11:
  swift_bridgeObjectRelease(*(const char **)(v0 + 32));
  v16 = (_QWORD *)swift_task_alloc(async function pointer to Sequence<>.coordinateRead(withSaveToTempDir:options:)[1]);
  *(_QWORD *)(v0 + 128) = v16;
  v17 = sub_100008384((uint64_t *)&unk_1007B6820);
  v18 = sub_10026E2FC(&qword_1007BA360, (uint64_t *)&unk_1007B6820, (uint64_t)&protocol conformance descriptor for [A]);
  *v16 = v0;
  v16[1] = sub_10030563C;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0, v15, v17, v18);
}

uint64_t sub_10030563C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 128);
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003057F0;
  }
  else
  {
    *(_QWORD *)(v4 + 144) = a1;
    v6 = sub_1003056B0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003056B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = sub_100008384(&qword_1007BA490);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc(dword_1007BA374);
  *(_QWORD *)(v0 + 152) = v3;
  *v3 = v0;
  v3[1] = sub_10030573C;
  return sub_10030400C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(uint64_t **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 88));
}

uint64_t sub_10030573C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v3 = *(const char **)(*v1 + 144);
  v2 = *(_QWORD *)(*v1 + 152);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *v1;
  *(_QWORD *)(v5 + 160) = v0;
  swift_task_dealloc(v2);
  sub_10000D0F0(v4, &qword_1007BA318);
  swift_bridgeObjectRelease(v3);
  if (v0)
    return swift_task_switch(sub_100305840, 0, 0);
  v7 = *(_QWORD *)(v5 + 112);
  v8 = *(_QWORD *)(v5 + 88);
  swift_task_dealloc(*(_QWORD *)(v5 + 120));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1003057F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100305840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100305890(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003058FC, static AirDropActor.shared, 0);
}

void sub_1003058FC()
{
  uint64_t v0;
  uint64_t *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  const char *v26;
  __n128 v27;
  const char **v28;
  uint64_t v29;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 96)
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  *(_QWORD *)&v2 = swift_beginAccess(v1, v0 + 56, 1, 0).n128_u64[0];
  v3 = *v1;
  v28 = (const char **)v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)v3, v2);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for SDAirDropSendConnection(0);
    v7 = sub_100220D78(&qword_1007BA4F0, type metadata accessor for SDAirDropSendConnection, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)((_QWORD *)(v0 + 16), v5, v6, v7);
    v3 = *(_QWORD *)(v0 + 16);
    v29 = *(_QWORD *)(v0 + 24);
    v9 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v29 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    swift_bridgeObjectRetain((const char *)v3, v2);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | (v10 << 6);
      v18 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v23 >= v15)
      goto LABEL_33;
    v24 = *(_QWORD *)(v29 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_33;
      v24 = *(_QWORD *)(v29 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_33;
        v24 = *(_QWORD *)(v29 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_33;
          v24 = *(_QWORD *)(v29 + 8 * v18);
          if (!v24)
          {
            v25 = v10 + 5;
            while (v15 != v25)
            {
              v24 = *(_QWORD *)(v29 + 8 * v25++);
              if (v24)
              {
                v18 = v25 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_10022E5B4(v3);
            v26 = *v28;
            *v28 = (const char *)&_swiftEmptySetSingleton;
            v27 = swift_bridgeObjectRelease(v26);
            (*(void (**)(__n128))(v0 + 8))(v27);
            return;
          }
        }
      }
    }
LABEL_29:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_30:
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    if (!v22)
      goto LABEL_33;
    while (1)
    {
      sub_10029FDFC(*(unsigned __int8 *)(v0 + 104));

      v10 = v18;
      v11 = v16;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v19 = __CocoaSet.Iterator.next()(v8);
      if (v19)
      {
        v20 = v19;
        *(_QWORD *)(v0 + 88) = v19;
        v21 = type metadata accessor for SDAirDropSendConnection(0);
        swift_unknownObjectRetain(v20);
        swift_dynamicCast(v0 + 80, v0 + 88, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v22 = *(id *)(v0 + 80);
        swift_unknownObjectRelease(v20);
        v18 = v10;
        v16 = v11;
        if (v22)
          continue;
      }
      goto LABEL_33;
    }
  }
  __break(1u);
}

uint64_t sub_100305BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a4;
  v36 = a5;
  v37 = a6;
  v32._countAndFlagsBits = a2;
  v32._object = a3;
  v33 = sub_100008384(&qword_1007BA490);
  v31 = *(_QWORD *)(v33 - 8);
  v7 = *(_QWORD *)(v31 + 64);
  __chkstk_darwin(v33);
  v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SFAirDropSend.Transfer(0);
  v8 = *(_QWORD *)(v30 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v30);
  v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = 0x2D6C65636E6143;
  v39 = 0xE700000000000000;
  String.append(_:)(v32);
  v32._countAndFlagsBits = v39;
  v32._object = (void *)v38;
  *v13 = 0x662E657261757173;
  v13[1] = 0xEB000000006C6C69;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v10);
  v14 = swift_allocObject(&unk_100722320, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v34);
  v15 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v30);
  v16 = v31;
  v17 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v33);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (v9 + v20 + v19) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_100722348, v22 + 8, v18 | v20 | 7);
  *(_QWORD *)(v23 + 16) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23 + v19, v28, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v23 + v21, v29, v17);
  v24 = v36;
  *(_QWORD *)(v23 + v22) = v36;
  v25 = v24;
  return SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(v32._object, v32._countAndFlagsBits, v13, 0, sub_10031B760, v23);
}

double sub_100305E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  const char *v30;
  __n128 v31;
  os_log_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint8_t *v41;
  uint8_t *v42;
  os_log_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[24];

  v48 = a3;
  v49 = a4;
  v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropSend.Transfer(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v17);
  if (Strong)
  {
    v19 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v13);

    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc(12, -1);
      v45 = v23;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      v46 = v26;
      v51 = v26;
      v42 = v25;
      v43 = v21;
      *(_DWORD *)v25 = 136315138;
      v41 = v25 + 4;
      SFAirDropSend.Transfer.id.getter(v26);
      v27 = sub_100220D78(&qword_1007B7E60, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v6, v27);
      v44 = v13;
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
      v50 = sub_100228BD8(v28, (unint64_t)v30, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v41);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v31);
      v33 = v42;
      v32 = v43;
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v45, "Transfer %s was cancelled.", v42, 0xCu);
      v34 = v46;
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v44);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  v35 = type metadata accessor for SFAirDropSend.Failure(0);
  v36 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  v37 = swift_allocError(v35, v36, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v38, enum case for SFAirDropSend.Failure.cancelled(_:), v35);
  v39 = sub_100008384(&qword_1007BA490);
  SFProgressTask.cancel(_:)(v37, v39);
  swift_errorRelease(v37);
  *(_QWORD *)&result = sub_10029FDFC(1).n128_u64[0];
  return result;
}

uint64_t sub_1003061CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6[152] = v5;
  v6[151] = a5;
  v6[150] = a4;
  v6[149] = a3;
  v6[148] = a2;
  v6[147] = a1;
  v7 = type metadata accessor for SFAirDropSend.Failure(0);
  v6[153] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[154] = v8;
  v6[155] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v6[156] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[157] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[158] = swift_task_alloc(v11);
  v6[159] = swift_task_alloc(v11);
  v6[160] = swift_task_alloc(v11);
  v12 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v6[161] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[162] = v13;
  v6[163] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDropSend.Transfer(0);
  v6[164] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[165] = v15;
  v6[166] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007BA3A8);
  v6[167] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(_s10AskRequestVMa(0) - 8);
  v6[168] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v6[169] = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[170] = swift_task_alloc(v19);
  v6[171] = swift_task_alloc(v19);
  v20 = sub_100008384(&qword_1007BA510);
  v6[172] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v6[173] = v21;
  v6[174] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = _s12HelloRequestVMa(0);
  v6[175] = v22;
  v6[176] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDropSend.Request(0);
  v6[177] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v6[178] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[179] = swift_task_alloc(v25);
  v6[180] = swift_task_alloc(v25);
  v26 = type metadata accessor for SFAirDrop.TransferType(0);
  v6[181] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v6[182] = v27;
  v6[183] = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100008384(&qword_1007B7760);
  v6[184] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6[185] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v6[186] = v30;
  v31 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[187] = swift_task_alloc(v31);
  v6[188] = swift_task_alloc(v31);
  v32 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v6[189] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v6[190] = v33;
  v6[191] = swift_task_alloc((*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100008384(&qword_1007BA300);
  v6[192] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v34 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SFAirDrop.ContactInfo(0);
  v6[193] = v35;
  v36 = *(_QWORD *)(v35 - 8);
  v6[194] = v36;
  v6[195] = swift_task_alloc((*(_QWORD *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v37 = static AirDropActor.shared;
  v6[196] = static AirDropActor.shared;
  return swift_task_switch(sub_1003064E4, v37, 0);
}

uint64_t sub_1003064E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  const char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  const char *v74[2];

  v1 = *(_QWORD *)(v0 + 1552);
  v2 = *(_QWORD *)(v0 + 1544);
  v3 = *(_QWORD *)(v0 + 1536);
  sub_100221F28(*(_QWORD *)(v0 + 1216) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact, v3, &qword_1007BA300);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 1536);
    v5 = *(_QWORD **)(v0 + 1528);
    v6 = *(_QWORD *)(v0 + 1520);
    v7 = *(_QWORD *)(v0 + 1512);
    *v5 = 0xD000000000000012;
    v5[1] = 0x8000000100616050;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v5, enum case for SFAirDrop.ContactInfo.Handle.email(_:), v7);
    SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)(0, 0, 0x65502064656B6146, 0xEC0000006E6F7372, v5, 0, 0xC000000000000000);
    sub_10000D0F0(v4, &qword_1007BA300);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1552) + 32))(*(_QWORD *)(v0 + 1560), *(_QWORD *)(v0 + 1536), *(_QWORD *)(v0 + 1544));
  }
  v8 = *(_QWORD *)(v0 + 1488);
  v9 = *(_QWORD *)(v0 + 1480);
  v10 = *(_QWORD *)(v0 + 1472);
  v11 = *(_QWORD *)(*(_QWORD *)(v0 + 1216)
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  v12 = swift_retain(v11);
  CurrentValueSubject.value.getter(v12);
  swift_release(v11);
  v13 = *(const char **)(v0 + 1048);
  sub_100298F30((uint64_t)v13, v10);
  v14 = swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v10, 1, v9, v14) == 1)
  {
    v15 = *(_QWORD *)(v0 + 1560);
    v16 = *(_QWORD *)(v0 + 1552);
    v17 = *(_QWORD *)(v0 + 1544);
    v18 = *(_QWORD *)(v0 + 1232);
    v19 = *(_QWORD *)(v0 + 1224);
    sub_10000D0F0(*(_QWORD *)(v0 + 1472), &qword_1007B7760);
    v20 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v72 = swift_allocError(v19, v20, 0, 0);
    v22 = v21;
    UUID.init()(v72);
    v23 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v22, enum case for SFAirDropSend.Failure.missingEndpoint(_:), v19);
    swift_willThrow(v23);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    v24 = *(_QWORD *)(v0 + 1536);
    v25 = *(_QWORD *)(v0 + 1528);
    v26 = *(_QWORD *)(v0 + 1504);
    v27 = *(_QWORD *)(v0 + 1496);
    v28 = *(_QWORD *)(v0 + 1472);
    v29 = *(_QWORD *)(v0 + 1464);
    v30 = *(_QWORD *)(v0 + 1440);
    v31 = *(_QWORD *)(v0 + 1432);
    v32 = *(_QWORD *)(v0 + 1408);
    v61 = *(_QWORD *)(v0 + 1392);
    v62 = *(_QWORD *)(v0 + 1368);
    v63 = *(_QWORD *)(v0 + 1360);
    v64 = *(_QWORD *)(v0 + 1336);
    v65 = *(_QWORD *)(v0 + 1328);
    v66 = *(_QWORD *)(v0 + 1304);
    v67 = *(_QWORD *)(v0 + 1280);
    v68 = *(_QWORD *)(v0 + 1272);
    v69 = *(_QWORD *)(v0 + 1264);
    v71 = *(_QWORD *)(v0 + 1240);
    swift_task_dealloc(*(_QWORD *)(v0 + 1560));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v34 = *(void **)(v0 + 1216);
    sub_100221DB4(*(_QWORD *)(v0 + 1472), *(_QWORD *)(v0 + 1504), type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_QWORD *)(v0 + 1576) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = *(_QWORD *)(v0 + 1464);
      v70 = *(_QWORD *)(v0 + 1456);
      v38 = *(_QWORD *)(v0 + 1448);
      v39 = *(void **)(v0 + 1216);
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = (const char *)swift_slowAlloc(32, -1);
      v74[0] = v73;
      *(_DWORD *)v40 = 136315138;
      SFAirDropSend.Request.type.getter(v73);
      v41 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      v42 = dispatch thunk of CustomStringConvertible.description.getter(v38, v41);
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v37, v38);
      *(_QWORD *)(v0 + 1168) = sub_100228BD8(v42, (unint64_t)v44, (uint64_t *)v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1168, v0 + 1176, v40 + 4);
      swift_bridgeObjectRelease(v44);

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Send StateMachine ASK START - Async {type: %s}", v40, 0xCu);
      swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v40, -1, -1);

    }
    else
    {
      v45 = *(void **)(v0 + 1216);

    }
    v46 = *(_QWORD *)(v0 + 1496);
    v47 = *(_QWORD *)(v0 + 1440);
    v48 = *(_QWORD *)(v0 + 1424);
    v49 = *(_QWORD *)(v0 + 1416);
    v50 = *(_QWORD *)(v0 + 1216);
    sub_100244384(*(_QWORD *)(v0 + 1504), v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v51 = *(void **)(v50 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
    *(_QWORD *)(v0 + 1584) = v51;
    v52 = *(_QWORD *)(v50 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
    v53 = *(void **)(v50 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
    v54 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    *(_QWORD *)(v0 + 1592) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    v55 = v50 + v54;
    v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
    *(_QWORD *)(v0 + 1600) = v56;
    v56(v47, v55, v49);
    objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0));
    v57 = v51;
    swift_retain(v52);
    v58 = v53;
    v59 = sub_1002A6D60(v46, v57, v52, v58, v47);
    *(_QWORD *)(v0 + 1608) = v59;

    swift_release(v52);
    swift_beginAccess(v50 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections, v0 + 984, 33, 0);
    sub_10045EDAC(v74, v59);
    swift_endAccess(v0 + 984);

    v60 = static AirDropActor.shared;
    *(_QWORD *)(v0 + 1616) = static AirDropActor.shared;
    return swift_task_switch(sub_100306B4C, v60, 0);
  }
}

uint64_t sub_100306B4C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  v1 = sub_1002B3B68();
  if ((v1 & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(0, v2),
        v3 = (void *)static SFAirDropUserDefaults.shared.getter(),
        v4 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v3,
        (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(v0 + 1464);
    v6 = *(_QWORD *)(v0 + 1456);
    v7 = *(_QWORD *)(v0 + 1448);
    v8 = *(_QWORD *)(v0 + 1408);
    v9 = *(_QWORD *)(v0 + 1400);
    v10 = *(_QWORD *)(v0 + 1392);
    v11 = SFAirDropSend.Request.type.getter(v1);
    v12 = SFAirDrop.TransferType.isPeerPayment.getter(v11);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    SFAirDropSend.Request.id.getter(v13);
    v14 = *(int *)(v9 + 24);
    *(_DWORD *)(v8 + *(int *)(v9 + 20)) = 3;
    *(_BYTE *)(v8 + v14) = v12 & 1;
    sub_100299FE8(v8, v10);
    v15 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 1624) = v15;
    *v15 = v0;
    v15[1] = sub_100306D30;
    return SFProgressTask.finalValue.getter(v0 + 1848, *(_QWORD *)(v0 + 1376));
  }
  else
  {
    v17 = Logger.logObject.getter(v1);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Receiver does not support HELLO, skipping", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    *(_DWORD *)(v0 + 1632) = 0;
    *(_BYTE *)(v0 + 1636) = 3;
    return swift_task_switch(sub_100306E78, *(_QWORD *)(v0 + 1568), 0);
  }
}

uint64_t sub_100306D30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1624));
  v3 = *(_QWORD *)(v2 + 1616);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_100306E10;
  }
  else
  {
    v4 = sub_100306D9C;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_100306D9C()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;

  v1 = *(_DWORD *)(v0 + 1848);
  v2 = *(_BYTE *)(v0 + 1852);
  v3 = *(_QWORD *)(v0 + 1408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1384) + 8))(*(_QWORD *)(v0 + 1392), *(_QWORD *)(v0 + 1376));
  sub_1002443C8(v3, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 1636) = v2;
  *(_DWORD *)(v0 + 1632) = v1;
  return swift_task_switch(sub_100306E78, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_100306E10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1384) + 8))(*(_QWORD *)(v0 + 1392), *(_QWORD *)(v0 + 1376));
  sub_1002443C8(v1, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 1636) = 3;
  *(_DWORD *)(v0 + 1632) = 0;
  return swift_task_switch(sub_100306E78, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_100306E78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = *(void **)(v0 + 1584);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1600))(*(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1216) + *(_QWORD *)(v0 + 1592), *(_QWORD *)(v0 + 1416));
  sub_1002B6B38();
  v3 = v2;
  v5 = v4;
  v6 = dword_1007C24C4;
  v7 = v1;
  v8 = (_QWORD *)swift_task_alloc(v6);
  *(_QWORD *)(v0 + 1640) = v8;
  *v8 = v0;
  v8[1] = sub_100306F34;
  return sub_100494D0C(*(_QWORD *)(v0 + 1368), *(_QWORD *)(v0 + 1432), v3, v5, *(_QWORD *)(v0 + 1584), 0, 0, 0);
}

uint64_t sub_100306F34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1640);
  *(_QWORD *)(*v1 + 1648) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100307E40;
  else
    v4 = sub_100306F98;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1568), 0);
}

uint64_t sub_100306F98()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (void *)v0[201];
  v2 = v0[170];
  v3 = v0[169];
  v4 = v0[168];
  sub_100244384(v0[171], v2, _s10AskRequestVMa);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = swift_allocObject(&unk_100722398, v6 + v3, v5 | 7);
  v0[207] = v7;
  *(_QWORD *)(v7 + 16) = v1;
  sub_100221DB4(v2, v7 + v6, _s10AskRequestVMa);
  v8 = v1;
  swift_retain(v7);
  v9 = swift_asyncLet_begin(v0 + 2, 0, &_s11AskResponseVN, &unk_1007BA520, v7, v0 + 105);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Send StateMachine SHARE CONTACT PERMISSION START", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }
  v13 = v0[195];
  v14 = v0[194];
  v15 = v0[193];
  v16 = v0[167];
  v27 = v0[166];
  v28 = v0[165];
  v29 = v0[164];
  v17 = v0[163];
  v18 = v0[162];
  v19 = v0[161];

  sub_100317A30(v13, 0, v16);
  v20 = v17 + *(int *)(sub_100008384(&qword_1007BA3B0) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v13, v15);
  v21 = sub_100008384((uint64_t *)&unk_1007BB630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v16, v21);
  v22 = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104);
  v0[208] = v23;
  v23(v17, v22, v19);
  sub_1002BC504(v17, v27);
  v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[209] = v24;
  v24(v17, v19);
  v25 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v0[210] = v25;
  v25(v27, v29);
  return swift_task_switch(sub_1003071E8, 0, 0);
}

uint64_t sub_1003071E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[167];
  v2 = swift_task_alloc(32);
  v0[211] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[212] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[213] = v4;
  *v4 = v0;
  v4[1] = sub_100307290;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[159], &unk_1007BA528, v2, sub_10031D950, v3, 0, 0, v0[156]);
}

uint64_t sub_100307290()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1704);
  *(_QWORD *)(*(_QWORD *)v1 + 1712) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100307310;
    v5 = 0;
  }
  else
  {
    v6 = v2[212];
    v7 = v2[211];
    v8 = v2[196];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_100307590;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100307310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[211];
  v2 = v0[196];
  swift_task_dealloc(v0[212]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10030735C, v2, 0);
}

uint64_t sub_10030735C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[214];
  v2 = v0[155];
  v3 = v0[153];
  v0[137] = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (swift_dynamicCast(v2, v0 + 137, v4, v3, 0))
  {
    v5 = (*(uint64_t (**)(_QWORD, _QWORD))(v0[154] + 88))(v0[155], v0[153]);
    if ((_DWORD)v5 == enum case for SFAirDropSend.Failure.cancelled(_:))
    {
      v6 = v5;
      v7 = swift_errorRelease(v0[214]);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Send StateMachine SHARE CONTACT PERMISSION END - Cancelling exchange", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }
      v11 = v0 + 82;
      v12 = v0[167];
      v13 = v0[154];
      v14 = v0[153];

      v15 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      v0[230] = swift_allocError(v14, v15, 0, 0);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(v16, v6, v14);
      swift_willThrow(v17);
      sub_10000D0F0(v12, &qword_1007BA3A8);
      swift_errorRelease(v0[137]);
      v18 = sub_100307FCC;
    }
    else
    {
      v11 = v0 + 132;
      v19 = v0[155];
      v20 = v0[154];
      v21 = v0[153];
      sub_10000D0F0(v0[167], &qword_1007BA3A8);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      swift_errorRelease(v0[137]);
      v18 = sub_100308190;
    }
  }
  else
  {
    v11 = v0 + 126;
    sub_10000D0F0(v0[167], &qword_1007BA3A8);
    swift_errorRelease(v0[137]);
    v18 = sub_100308354;
  }
  return swift_asyncLet_finish(v0 + 2, v0 + 105, v18, v11);
}

uint64_t sub_100307590()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const char *v17;
  __n128 v18;
  void (*v19)(uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;

  v1 = v0[160];
  v2 = v0[159];
  v3 = v0[158];
  v4 = v0[157];
  v5 = v0[156];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[215] = v6;
  v6(v1, v2, v5);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7 = v38(v3, v1, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v0[158];
    v37 = v0[157];
    v11 = v0[156];
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(32, -1);
    v39 = v13;
    *(_DWORD *)v12 = 141558275;
    v0[144] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 145, v12 + 4);
    *(_WORD *)(v12 + 12) = 2081;
    v14 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v11, v14);
    v17 = (const char *)v16;
    v0[145] = sub_100228BD8(v15, v16, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 145, v0 + 146, v12 + 14);
    v18 = swift_bridgeObjectRelease(v17);
    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
    v19(v10, v11, v18);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Send StateMachine SHARE CONTACT PERMISSION END {contactRequest: %{private,mask.hash}s}", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {
    v21 = v0[158];
    v22 = v0[157];
    v23 = v0[156];

    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 8);
    v20 = ((uint64_t (*)(uint64_t, uint64_t))v19)(v21, v23);
  }
  v0[216] = v19;
  v24 = Logger.logObject.getter(v20);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Send StateMachine EXCHANGING START", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }
  v36 = (void (*)(uint64_t, uint64_t))v0[210];
  v27 = (void (*)(uint64_t, uint64_t))v0[209];
  v28 = (void (*)(uint64_t, _QWORD, uint64_t))v0[208];
  v29 = v0[166];
  v35 = v0[164];
  v30 = v0[163];
  v31 = v0[161];
  v32 = v0[160];
  v33 = v0[156];

  v38(v30, v32, v33);
  v28(v30, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v31);
  sub_1002BC504(v30, v29);
  v27(v30, v31);
  v36(v29, v35);
  return swift_asyncLet_get_throwing(v0 + 2, v0 + 105, sub_1003078BC, v0 + 138);
}

uint64_t sub_1003078BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 1736) = v0;
  if (v0)
    v2 = sub_100308368;
  else
    v2 = sub_1003078E8;
  return swift_task_switch(v2, *(_QWORD *)(v1 + 1568), 0);
}

uint64_t sub_1003078E8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_OWORD *)(v0 + 920);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 904);
  *(_OWORD *)(v0 + 776) = v1;
  v2 = *(_OWORD *)(v0 + 856);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 840);
  *(_OWORD *)(v0 + 712) = v2;
  v3 = *(_OWORD *)(v0 + 888);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 872);
  *(_OWORD *)(v0 + 744) = v3;
  v4 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 1776) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 1792) = v4;
  v5 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 1808) = *(_OWORD *)(v0 + 912);
  *(_QWORD *)(v0 + 792) = *(_QWORD *)(v0 + 936);
  *(_QWORD *)(v0 + 1744) = *(_QWORD *)(v0 + 840);
  *(_QWORD *)(v0 + 1752) = *(_QWORD *)(v0 + 848);
  *(_QWORD *)(v0 + 1760) = *(_QWORD *)(v0 + 856);
  *(_QWORD *)(v0 + 1768) = *(_QWORD *)(v0 + 864);
  *(_BYTE *)(v0 + 1853) = *(_BYTE *)(v0 + 872);
  *(_OWORD *)(v0 + 1824) = v5;
  sub_10031B8C8((_QWORD *)(v0 + 696));
  sub_10031B8C8((_QWORD *)(v0 + 696));
  v6 = sub_10031B8C8((_QWORD *)(v0 + 696));
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v26 = *(_QWORD *)(v0 + 1336);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v27 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_10031B8C8((_QWORD *)(v0 + 696));
    v11 = sub_100497120();
    v13 = v12;
    sub_1002A80BC((_QWORD *)(v0 + 696));
    *(_QWORD *)(v0 + 1144) = sub_100228BD8(v11, (unint64_t)v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1144, v0 + 1152, v9 + 4);
    swift_bridgeObjectRelease(v13);
    sub_1002A80BC((_QWORD *)(v0 + 696));
    sub_1002A80BC((_QWORD *)(v0 + 696));
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Send StateMachine ASK END - Async {response: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    v14 = v26;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 1336);
    sub_1002A80BC((_QWORD *)(v0 + 696));
    sub_1002A80BC((_QWORD *)(v0 + 696));

    v14 = v15;
  }
  sub_10000D0F0(v14, &qword_1007BA3A8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1720);
  v17 = *(_QWORD *)(v0 + 1504);
  v18 = *(_QWORD *)(v0 + 1280);
  v19 = *(_QWORD *)(v0 + 1256);
  v20 = *(_QWORD *)(v0 + 1248);
  v21 = *(_QWORD *)(v0 + 1208);
  v22 = *(_QWORD *)(v0 + 1200);
  v23 = *(_QWORD *)(v0 + 1192);
  sub_100244384(*(_QWORD *)(v0 + 1368), *(_QWORD *)(v0 + 1184), _s10AskRequestVMa);
  sub_100244384(v17, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v16(v22, v18, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v20);
  v24 = sub_100008384(&qword_1007BA490);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 1, 1, v24);
  return swift_asyncLet_finish(v0 + 16, v0 + 840, sub_100307BCC, v0 + 944);
}

uint64_t sub_100307BCC()
{
  uint64_t v0;

  return swift_task_switch(sub_100307BE0, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_100307BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v37 = *(_QWORD *)(v0 + 1824);
  v38 = *(_QWORD *)(v0 + 1832);
  v35 = *(_OWORD *)(v0 + 1792);
  v36 = *(_OWORD *)(v0 + 1808);
  v34 = *(_OWORD *)(v0 + 1776);
  v33 = *(_BYTE *)(v0 + 1853);
  v32 = *(_QWORD *)(v0 + 1768);
  v30 = *(_QWORD *)(v0 + 1752);
  v31 = *(_QWORD *)(v0 + 1760);
  v1 = *(_QWORD *)(v0 + 1656);
  v28 = *(_DWORD *)(v0 + 1632);
  v29 = *(_QWORD *)(v0 + 1744);
  v26 = *(_BYTE *)(v0 + 1636);
  v27 = *(_QWORD *)(v0 + 1608);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1544);
  v5 = *(_QWORD *)(v0 + 1536);
  v6 = *(_QWORD *)(v0 + 1528);
  v7 = *(_QWORD *)(v0 + 1504);
  v11 = *(_QWORD *)(v0 + 1496);
  v12 = *(_QWORD *)(v0 + 1472);
  v13 = *(_QWORD *)(v0 + 1464);
  v14 = *(_QWORD *)(v0 + 1440);
  v15 = *(_QWORD *)(v0 + 1432);
  v16 = *(_QWORD *)(v0 + 1408);
  v8 = *(_QWORD *)(v0 + 1368);
  v17 = *(_QWORD *)(v0 + 1392);
  v18 = *(_QWORD *)(v0 + 1360);
  v19 = *(_QWORD *)(v0 + 1336);
  v20 = *(_QWORD *)(v0 + 1328);
  v21 = *(_QWORD *)(v0 + 1304);
  v22 = *(_QWORD *)(v0 + 1280);
  v23 = *(_QWORD *)(v0 + 1272);
  v24 = *(_QWORD *)(v0 + 1264);
  v25 = *(_QWORD *)(v0 + 1240);
  v9 = *(_QWORD *)(v0 + 1176);
  sub_1002443C8(v8, _s10AskRequestVMa);
  sub_1002443C8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release_n(v1, 2);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v8);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  *(_BYTE *)(v9 + 4) = v26;
  *(_DWORD *)v9 = v28;
  *(_QWORD *)(v9 + 8) = v27;
  *(_QWORD *)(v9 + 16) = v29;
  *(_QWORD *)(v9 + 24) = v30;
  *(_QWORD *)(v9 + 32) = v31;
  *(_QWORD *)(v9 + 40) = v32;
  *(_BYTE *)(v9 + 48) = v33;
  *(_OWORD *)(v9 + 56) = v34;
  *(_OWORD *)(v9 + 72) = v35;
  *(_OWORD *)(v9 + 88) = v36;
  *(_QWORD *)(v9 + 104) = v37;
  *(_QWORD *)(v9 + 112) = v38;
  *(_QWORD *)(v9 + 120) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100307E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 1560);
  v2 = *(_QWORD *)(v0 + 1552);
  v3 = *(_QWORD *)(v0 + 1544);
  v4 = *(_QWORD *)(v0 + 1504);

  sub_1002443C8(v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(_QWORD *)(v0 + 1536);
  v6 = *(_QWORD *)(v0 + 1528);
  v7 = *(_QWORD *)(v0 + 1504);
  v8 = *(_QWORD *)(v0 + 1496);
  v9 = *(_QWORD *)(v0 + 1472);
  v10 = *(_QWORD *)(v0 + 1464);
  v11 = *(_QWORD *)(v0 + 1440);
  v12 = *(_QWORD *)(v0 + 1432);
  v13 = *(_QWORD *)(v0 + 1408);
  v15 = *(_QWORD *)(v0 + 1392);
  v16 = *(_QWORD *)(v0 + 1368);
  v17 = *(_QWORD *)(v0 + 1360);
  v18 = *(_QWORD *)(v0 + 1336);
  v19 = *(_QWORD *)(v0 + 1328);
  v20 = *(_QWORD *)(v0 + 1304);
  v21 = *(_QWORD *)(v0 + 1280);
  v22 = *(_QWORD *)(v0 + 1272);
  v23 = *(_QWORD *)(v0 + 1264);
  v24 = *(_QWORD *)(v0 + 1240);
  swift_task_dealloc(*(_QWORD *)(v0 + 1560));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100307FCC()
{
  uint64_t v0;

  return swift_task_switch(sub_100307FE0, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_100307FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1544);
  v5 = *(_QWORD *)(v0 + 1504);
  v6 = *(_QWORD *)(v0 + 1368);

  sub_1002443C8(v6, _s10AskRequestVMa);
  sub_1002443C8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release_n(v1, 2);
  v7 = *(_QWORD *)(v0 + 1536);
  v8 = *(_QWORD *)(v0 + 1528);
  v9 = *(_QWORD *)(v0 + 1504);
  v10 = *(_QWORD *)(v0 + 1496);
  v11 = *(_QWORD *)(v0 + 1472);
  v12 = *(_QWORD *)(v0 + 1464);
  v13 = *(_QWORD *)(v0 + 1440);
  v14 = *(_QWORD *)(v0 + 1432);
  v15 = *(_QWORD *)(v0 + 1408);
  v17 = *(_QWORD *)(v0 + 1392);
  v18 = *(_QWORD *)(v0 + 1368);
  v19 = *(_QWORD *)(v0 + 1360);
  v20 = *(_QWORD *)(v0 + 1336);
  v21 = *(_QWORD *)(v0 + 1328);
  v22 = *(_QWORD *)(v0 + 1304);
  v23 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1264);
  v26 = *(_QWORD *)(v0 + 1240);
  swift_task_dealloc(*(_QWORD *)(v0 + 1560));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100308190()
{
  uint64_t v0;

  return swift_task_switch(sub_1003081A4, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_1003081A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1544);
  v5 = *(_QWORD *)(v0 + 1504);
  v6 = *(_QWORD *)(v0 + 1368);

  sub_1002443C8(v6, _s10AskRequestVMa);
  sub_1002443C8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release_n(v1, 2);
  v7 = *(_QWORD *)(v0 + 1536);
  v8 = *(_QWORD *)(v0 + 1528);
  v9 = *(_QWORD *)(v0 + 1504);
  v10 = *(_QWORD *)(v0 + 1496);
  v11 = *(_QWORD *)(v0 + 1472);
  v12 = *(_QWORD *)(v0 + 1464);
  v13 = *(_QWORD *)(v0 + 1440);
  v14 = *(_QWORD *)(v0 + 1432);
  v15 = *(_QWORD *)(v0 + 1408);
  v17 = *(_QWORD *)(v0 + 1392);
  v18 = *(_QWORD *)(v0 + 1368);
  v19 = *(_QWORD *)(v0 + 1360);
  v20 = *(_QWORD *)(v0 + 1336);
  v21 = *(_QWORD *)(v0 + 1328);
  v22 = *(_QWORD *)(v0 + 1304);
  v23 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1264);
  v26 = *(_QWORD *)(v0 + 1240);
  swift_task_dealloc(*(_QWORD *)(v0 + 1560));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100308354()
{
  uint64_t v0;

  return swift_task_switch(sub_10031D958, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_100308368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1336);
  (*(void (**)(_QWORD, _QWORD))(v0 + 1728))(*(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1248));
  sub_10000D0F0(v1, &qword_1007BA3A8);
  return swift_asyncLet_finish(v0 + 16, v0 + 840, sub_1003083D8, v0 + 800);
}

uint64_t sub_1003083D8()
{
  uint64_t v0;

  return swift_task_switch(sub_1003083EC, *(_QWORD *)(v0 + 1568), 0);
}

uint64_t sub_1003083EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1544);
  v5 = *(_QWORD *)(v0 + 1504);
  v6 = *(_QWORD *)(v0 + 1368);

  sub_1002443C8(v6, _s10AskRequestVMa);
  sub_1002443C8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release_n(v1, 2);
  v7 = *(_QWORD *)(v0 + 1536);
  v8 = *(_QWORD *)(v0 + 1528);
  v9 = *(_QWORD *)(v0 + 1504);
  v10 = *(_QWORD *)(v0 + 1496);
  v11 = *(_QWORD *)(v0 + 1472);
  v12 = *(_QWORD *)(v0 + 1464);
  v13 = *(_QWORD *)(v0 + 1440);
  v14 = *(_QWORD *)(v0 + 1432);
  v15 = *(_QWORD *)(v0 + 1408);
  v17 = *(_QWORD *)(v0 + 1392);
  v18 = *(_QWORD *)(v0 + 1368);
  v19 = *(_QWORD *)(v0 + 1360);
  v20 = *(_QWORD *)(v0 + 1336);
  v21 = *(_QWORD *)(v0 + 1328);
  v22 = *(_QWORD *)(v0 + 1304);
  v23 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1264);
  v26 = *(_QWORD *)(v0 + 1240);
  swift_task_dealloc(*(_QWORD *)(v0 + 1560));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v8 = sub_100008384(&qword_1007BA4F8);
  v7[9] = v8;
  v7[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v7[11] = static AirDropActor.shared;
  return swift_task_switch(sub_10030863C, v9, 0);
}

uint64_t sub_10030863C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t *v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = static AirDropActor.shared;
  v3 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v4 = (int8x16_t *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 96) = v4;
  v4[1] = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  v4[2].i64[0] = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_100308704;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 72), v2, v3, &unk_1007BA540, v4, *(_QWORD *)(v0 + 72));
}

uint64_t sub_100308704()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003088D0;
  else
    v4 = sub_100308768;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 88), 0);
}

uint64_t sub_100308768()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;

  v1 = *(int **)(v0 + 72);
  v2 = *(int **)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *v2;
  v21 = *((_BYTE *)v2 + 4);
  v20 = *(_QWORD *)((char *)v2 + v1[16]);
  v6 = (uint64_t)v2 + v1[20];
  v7 = (__int128 *)((char *)v2 + v1[24]);
  v19 = *v7;
  v8 = *((_QWORD *)v7 + 3);
  v18 = *((_QWORD *)v7 + 2);
  v9 = *((_BYTE *)v7 + 32);
  v16 = *(__int128 *)((char *)v7 + 56);
  v17 = *(__int128 *)((char *)v7 + 40);
  v15 = *(__int128 *)((char *)v7 + 72);
  v13 = *((_QWORD *)v7 + 12);
  v14 = *((_QWORD *)v7 + 11);
  v10 = (uint64_t)v2 + v1[32];
  v11 = *(_QWORD *)((char *)v2 + v1[28]);
  sub_100221DB4((uint64_t)v2 + v1[12], *(_QWORD *)(v0 + 24), _s10AskRequestVMa);
  sub_100221DB4(v6, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v10, v3, &qword_1007BA318);
  swift_task_dealloc(v22);
  swift_task_dealloc(v2);
  *(_BYTE *)(v5 + 4) = v21;
  *(_DWORD *)v5 = v23;
  *(_QWORD *)(v5 + 8) = v20;
  *(_OWORD *)(v5 + 16) = v19;
  *(_QWORD *)(v5 + 32) = v18;
  *(_QWORD *)(v5 + 40) = v8;
  *(_BYTE *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 56) = v17;
  *(_OWORD *)(v5 + 72) = v16;
  *(_OWORD *)(v5 + 88) = v15;
  *(_QWORD *)(v5 + 104) = v14;
  *(_QWORD *)(v5 + 112) = v13;
  *(_QWORD *)(v5 + 120) = v11;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003088D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100308910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  v5[18] = *a5;
  v6 = sub_100008384(&qword_1007B68A0);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA548);
  v5[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s15EndpointFailureVMa(0);
  v5[21] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[22] = v9;
  v5[23] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384(&qword_1007B7760);
  v5[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDropSend.Failure(0);
  v5[25] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[26] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[27] = swift_task_alloc(v13);
  v5[28] = swift_task_alloc(v13);
  v5[29] = swift_task_alloc(v13);
  v5[30] = swift_task_alloc(v13);
  v5[31] = swift_task_alloc(v13);
  v14 = sub_100008384(&qword_1007BA550);
  v5[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007BA4F8);
  v5[33] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[34] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[35] = swift_task_alloc(v17);
  v5[36] = swift_task_alloc(v17);
  v18 = type metadata accessor for SFAirDropSend.Request(0);
  v5[37] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v5[38] = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v5[39] = v20;
  v5[40] = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA558) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[41] = swift_task_alloc(v21);
  v5[42] = swift_task_alloc(v21);
  v5[43] = swift_task_alloc(v21);
  v5[44] = swift_task_alloc(v21);
  v5[45] = swift_task_alloc(v21);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v22 = static AirDropActor.shared;
  v5[46] = static AirDropActor.shared;
  return swift_task_switch(sub_100308B60, v22, 0);
}

uint64_t sub_100308B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 304);
  v76 = *(_QWORD *)(v0 + 312);
  v64 = *(_QWORD *)(v0 + 296);
  v65 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 136);
  v83 = *(_QWORD *)(v0 + 264);
  v85 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v81 = v6;
  v71 = *(void **)(v0 + 120);
  v7 = *(uint64_t **)(v0 + 112);
  v87 = v7;
  v8 = swift_allocObject(&unk_1007223C0, 17, 7);
  *(_QWORD *)(v0 + 376) = v8;
  *(_BYTE *)(v8 + 16) = 1;
  *(_QWORD *)(v0 + 88) = 0;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  *(_QWORD *)(v0 + 384) = v9;
  v9(v1, 1, 1, v3);
  *(_QWORD *)(v0 + 48) = &_swiftEmptySetSingleton;
  v10 = swift_allocObject(&unk_1007223E8, 24, 7);
  *(_QWORD *)(v0 + 392) = v10;
  *(_QWORD *)(v10 + 16) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 56) = v5;
  v11 = *v7;
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v79(v65, v6, v64);
  v12 = *(unsigned __int8 *)(v2 + 80);
  v13 = (v12 + 48) & ~v12;
  v77 = v13 + v76;
  v74 = v12 | 7;
  v14 = (char *)swift_allocObject(&unk_100722410, v77, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = v71;
  *((_QWORD *)v14 + 4) = v10;
  *((_QWORD *)v14 + 5) = v8;
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  v69(&v14[v13], v65, v64);
  v67 = sub_10026E2FC(&qword_1007BA560, &qword_1007B8870, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v15 = v71;
  swift_retain(v10);
  swift_retain(v8);
  *(_QWORD *)(v0 + 400) = Publisher<>.sink(receiveValue:)(sub_10031BCB8, v14, v85, v67);
  swift_release(v14);
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints];
  *(_QWORD *)(v0 + 64) = v16;
  v17 = *v7;
  v79(v65, v81, v64);
  v18 = (char *)swift_allocObject(&unk_100722438, v77, v74);
  *((_QWORD *)v18 + 2) = v17;
  *((_QWORD *)v18 + 3) = v15;
  *((_QWORD *)v18 + 4) = v10;
  *((_QWORD *)v18 + 5) = v8;
  v69(&v18[v13], v65, v64);
  v19 = v15;
  swift_retain(v10);
  swift_retain(v8);
  swift_retain(v16);
  *(_QWORD *)(v0 + 408) = Publisher<>.sink(receiveValue:)(sub_10031BD4C, v18, v85, v67);
  swift_release(v18);
  swift_release(*(_QWORD *)(v0 + 64));
  v20 = *v87;
  v21 = sub_100008384(&qword_1007B5A60);
  *(_QWORD *)(v0 + 416) = v21;
  if ((ThrowingTaskGroup.isEmpty.getter(v20, v83, v21, &protocol self-conformance witness table for Error) & 1) != 0)
  {
    v22 = *(_QWORD *)(v0 + 352);
    v23 = *(_QWORD *)(v0 + 360);
    v24 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 208);
    swift_bridgeObjectRelease(*(const char **)(v0 + 48));
    sub_100221F28(v23, v22, &qword_1007BA558);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24);
    v27 = *(_QWORD *)(v0 + 400);
    v28 = *(_QWORD *)(v0 + 408);
    v29 = *(_QWORD *)(v0 + 360);
    if (v26 == 1)
    {
      v30 = *(_QWORD *)(v0 + 200);
      v31 = *(_QWORD *)(v0 + 208);
      v33 = *(_QWORD *)(v0 + 112);
      v32 = *(_QWORD *)(v0 + 120);
      sub_10000D0F0(*(_QWORD *)(v0 + 352), &qword_1007BA558);
      v34 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      swift_allocError(v30, v34, 0, 0);
      v36 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v35, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v30);
      swift_willThrow(v36);
      v37 = v33;
      v38 = v27;
      v39 = v28;
      v40 = v32;
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 248);
      v48 = *(_QWORD *)(v0 + 200);
      v49 = *(_QWORD *)(v0 + 208);
      v51 = *(_QWORD *)(v0 + 112);
      v50 = *(_QWORD *)(v0 + 120);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 32))(v47, *(_QWORD *)(v0 + 352), v48);
      v52 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      swift_allocError(v48, v52, 0, 0);
      v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v53, v47, v48);
      swift_willThrow(v54);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
      v37 = v51;
      v38 = v27;
      v39 = v28;
      v40 = v50;
    }
    sub_10030F464(v37, v38, v39, v40, (void **)(v0 + 88));
    swift_release(v28);
    swift_release(v27);
    sub_10000D0F0(v29, &qword_1007BA558);
    v55 = *(_QWORD *)(v0 + 376);
    v57 = *(_QWORD *)(v0 + 352);
    v56 = *(_QWORD *)(v0 + 360);
    v59 = *(_QWORD *)(v0 + 336);
    v58 = *(_QWORD *)(v0 + 344);
    v61 = *(_QWORD *)(v0 + 320);
    v60 = *(_QWORD *)(v0 + 328);
    v62 = *(_QWORD *)(v0 + 288);
    v66 = *(_QWORD *)(v0 + 280);
    v68 = *(_QWORD *)(v0 + 256);
    v70 = *(_QWORD *)(v0 + 248);
    v72 = *(_QWORD *)(v0 + 240);
    v73 = *(_QWORD *)(v0 + 232);
    v75 = *(_QWORD *)(v0 + 224);
    v78 = *(_QWORD *)(v0 + 216);
    v80 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 184);
    v84 = *(_QWORD *)(v0 + 160);
    v86 = *(_QWORD *)(v0 + 152);
    v63 = *(void **)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 392));
    swift_release(v55);

    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v75);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v41 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService;
    *(_QWORD *)(v0 + 424) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
    *(_QWORD *)(v0 + 432) = v41;
    *(_DWORD *)(v0 + 456) = enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    *(_DWORD *)(v0 + 460) = enum case for SFAirDropSend.Failure.unexpected(_:);
    *(_DWORD *)(v0 + 464) = enum case for SFAirDropSend.Failure.resolveFailure(_:);
    *(_DWORD *)(v0 + 468) = enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    v42 = static AirDropActor.shared;
    v43 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v44 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 440) = v44;
    v45 = sub_100008384(&qword_1007BA568);
    *v44 = v0;
    v44[1] = sub_1003091A0;
    return ThrowingTaskGroup.next(isolation:)(*(_QWORD *)(v0 + 256), v42, v43, v45);
  }
}

uint64_t sub_1003091A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  _DWORD *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 440);
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 368);
  if (v0)
  {
    v5 = sub_10030A43C;
  }
  else
  {
    v6 = *(_DWORD **)(v2 + 264);
    *(_DWORD *)(v2 + 472) = v6[12];
    *(_DWORD *)(v2 + 476) = v6[16];
    *(_DWORD *)(v2 + 480) = v6[20];
    *(_DWORD *)(v2 + 484) = v6[24];
    *(_DWORD *)(v2 + 488) = v6[28];
    *(_DWORD *)(v2 + 492) = v6[32];
    v5 = sub_100309238;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100309238()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  void *v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  const char *v121;
  __n128 v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, __n128);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t ObjectType;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v257;
  uint64_t (*v258)(uint64_t, uint64_t, uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void **v264;
  uint64_t v265;
  uint64_t v266[3];

  v1 = *(int **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v264 = (void **)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*(_QWORD *)(v0 + 272) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(unsigned int *)(v0 + 456);
    v5 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 208);
    sub_10000D0F0(v2, &qword_1007BA550);
    v260 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    v6 = swift_allocError(v5, v260, 0, 0);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v7, v3, v5);
    swift_willThrow(v8);
    v9 = *(_QWORD *)(v0 + 416);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 160);
    v14 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v15(v10, 1, 1, v14);
    *(_QWORD *)(v0 + 72) = v6;
    swift_errorRetain(v6);
    v16 = swift_dynamicCast(v13, v0 + 72, v9, v12, 6);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    if ((v16 & 1) != 0)
    {
      v18 = *(_QWORD *)(v0 + 360);
      v19 = *(_QWORD *)(v0 + 200);
      v252 = *(_QWORD *)(v0 + 208);
      v256 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 384);
      v21 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 192);
      v23 = *(_QWORD *)(v0 + 160);
      v22 = *(_QWORD *)(v0 + 168);
      v17(v23, 0, 1, v22);
      sub_10000D0F0(v20, &qword_1007B7760);
      sub_10000D0F0(v18, &qword_1007BA558);
      sub_100221DB4(v23, v21, _s15EndpointFailureVMa);
      sub_100221DB4(v21, v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v15(v20, 0, 1, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v252 + 32))(v18, v21 + *(int *)(v22 + 20), v19);
      v256(v18, 0, 1, v19);
    }
    else
    {
      v57 = *(_QWORD *)(v0 + 416);
      v58 = *(_QWORD *)(v0 + 344);
      v59 = *(_QWORD *)(v0 + 200);
      v60 = *(_QWORD *)(v0 + 160);
      v17(v60, 1, 1, *(_QWORD *)(v0 + 168));
      sub_10000D0F0(v60, &qword_1007BA548);
      *(_QWORD *)(v0 + 80) = v6;
      swift_errorRetain(v6);
      if ((swift_dynamicCast(v58, v0 + 80, v57, v59, 6) & 1) != 0)
      {
        v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 384);
        v62 = *(_QWORD *)(v0 + 360);
        v63 = *(_QWORD *)(v0 + 344);
        v64 = *(_QWORD *)(v0 + 240);
        v66 = *(_QWORD *)(v0 + 200);
        v65 = *(_QWORD *)(v0 + 208);
        v61(v63, 0, 1, v66);
        sub_10000D0F0(v62, &qword_1007BA558);
        v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32);
        v67(v64, v63, v66);
        v67(v62, v64, v66);
        v61(v62, 0, 1, v66);
      }
      else
      {
        v68 = *(unsigned int *)(v0 + 460);
        v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 384);
        v70 = *(_QWORD *)(v0 + 360);
        v72 = *(_QWORD *)(v0 + 336);
        v71 = *(_QWORD *)(v0 + 344);
        v74 = *(_QWORD *)(v0 + 200);
        v73 = *(_QWORD *)(v0 + 208);
        v69(v71, 1, 1, v74);
        sub_10000D0F0(v71, &qword_1007BA558);
        swift_errorRetain(v6);
        CodableError.init(_:)(v6);
        sub_10000D0F0(v70, &qword_1007BA558);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v72, v68, v74);
        v69(v72, 0, 1, v74);
        sub_10022E718(v72, v70, &qword_1007BA558);
      }
    }
    v75 = v6;
    v76 = *(_QWORD *)(v0 + 328);
    v77 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    sub_100221F28(*(_QWORD *)(v0 + 360), v76, &qword_1007BA558);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77) == 1)
    {
      v79 = *(_QWORD *)(v0 + 328);
      sub_10000D0F0(*(_QWORD *)(v0 + 192), &qword_1007B7760);
      swift_errorRelease(v75);
      v80 = &qword_1007BA558;
      v81 = v79;
    }
    else
    {
      v82 = *(_DWORD *)(v0 + 464);
      v83 = *(_QWORD *)(v0 + 224);
      v84 = *(_QWORD *)(v0 + 232);
      v85 = *(_QWORD *)(v0 + 200);
      v86 = *(_QWORD *)(v0 + 208);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 32))(v84, *(_QWORD *)(v0 + 328), v85);
      v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
      v87(v83, v84, v85);
      v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88))(v83, v85);
      if ((_DWORD)v88 != v82)
      {
        if ((_DWORD)v88 == *(_DWORD *)(v0 + 456) || (_DWORD)v88 == *(_DWORD *)(v0 + 468))
        {
          v106 = *(_QWORD *)(v0 + 232);
          v107 = *(_QWORD *)(v0 + 216);
          v108 = *(_QWORD *)(v0 + 200);
          v109 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 48));
          v110 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v87)(v107, v106, v108, v109);
          v111 = Logger.logObject.getter(v110);
          v112 = static os_log_type_t.default.getter();
          v113 = os_log_type_enabled(v111, v112);
          v115 = *(_QWORD *)(v0 + 208);
          v114 = *(_QWORD *)(v0 + 216);
          v116 = *(_QWORD *)(v0 + 200);
          v250 = v75;
          v258 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v87;
          if (v113)
          {
            v254 = *(_QWORD *)(v0 + 208);
            v117 = (uint8_t *)swift_slowAlloc(12, -1);
            v118 = swift_slowAlloc(32, -1);
            v266[0] = v118;
            *(_DWORD *)v117 = 136315138;
            v119 = SFAirDropSend.Failure.errorDescription.getter(v118);
            v121 = (const char *)v120;
            *(_QWORD *)(v0 + 96) = sub_100228BD8(v119, v120, v266);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v117 + 4);
            v122 = swift_bridgeObjectRelease(v121);
            v123 = v116;
            v124 = *(void (**)(uint64_t, uint64_t, __n128))(v254 + 8);
            v124(v114, v123, v122);
            _os_log_impl((void *)&_mh_execute_header, v111, v112, "Fatal Ask failure %s", v117, 0xCu);
            swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v118, -1, -1);
            swift_slowDealloc(v117, -1, -1);

          }
          else
          {

            v125 = v116;
            v124 = *(void (**)(uint64_t, uint64_t, __n128))(v115 + 8);
            ((void (*)(uint64_t, uint64_t))v124)(v114, v125);
          }
          v126 = v260;
          v128 = *(_QWORD *)(v0 + 400);
          v127 = *(_QWORD *)(v0 + 408);
          v129 = *(_QWORD *)(v0 + 360);
          v130 = *(_QWORD *)(v0 + 232);
          v132 = *(_QWORD *)(v0 + 192);
          v131 = *(_QWORD *)(v0 + 200);
          v133 = *(_QWORD *)(v0 + 112);
          v262 = *(_QWORD *)(v0 + 120);
          swift_allocError(v131, v126, 0, 0);
          v135 = v258(v134, v130, v131);
          swift_willThrow(v135);
          swift_errorRelease(v250);
          ((void (*)(uint64_t, uint64_t))v124)(v130, v131);
          sub_10000D0F0(v132, &qword_1007B7760);
          v136 = v133;
          v137 = v128;
          v138 = v127;
          v139 = v262;
LABEL_41:
          sub_10030F464(v136, v137, v138, v139, v264);
          swift_release(v127);
          swift_release(v128);
          sub_10000D0F0(v129, &qword_1007BA558);
          v189 = *(_QWORD *)(v0 + 376);
          v191 = *(_QWORD *)(v0 + 352);
          v190 = *(_QWORD *)(v0 + 360);
          v193 = *(_QWORD *)(v0 + 336);
          v192 = *(_QWORD *)(v0 + 344);
          v195 = *(_QWORD *)(v0 + 320);
          v194 = *(_QWORD *)(v0 + 328);
          v196 = *(_QWORD *)(v0 + 288);
          v238 = *(_QWORD *)(v0 + 280);
          v240 = *(_QWORD *)(v0 + 256);
          v242 = *(_QWORD *)(v0 + 248);
          v244 = *(_QWORD *)(v0 + 240);
          v246 = *(_QWORD *)(v0 + 232);
          v248 = *(_QWORD *)(v0 + 224);
          v251 = *(_QWORD *)(v0 + 216);
          v255 = *(_QWORD *)(v0 + 192);
          v259 = *(_QWORD *)(v0 + 184);
          v263 = *(_QWORD *)(v0 + 160);
          v265 = *(_QWORD *)(v0 + 152);
          v197 = *(void **)(v0 + 88);
          swift_release(*(_QWORD *)(v0 + 392));
          swift_release(v189);

          swift_task_dealloc(v190);
          swift_task_dealloc(v191);
          swift_task_dealloc(v192);
          swift_task_dealloc(v193);
          swift_task_dealloc(v194);
          swift_task_dealloc(v195);
          swift_task_dealloc(v196);
          swift_task_dealloc(v238);
          swift_task_dealloc(v240);
          swift_task_dealloc(v242);
          swift_task_dealloc(v244);
          swift_task_dealloc(v246);
          swift_task_dealloc(v248);
          swift_task_dealloc(v251);
          swift_task_dealloc(v255);
          swift_task_dealloc(v259);
          swift_task_dealloc(v263);
          swift_task_dealloc(v265);
          v56 = *(uint64_t (**)(void))(v0 + 8);
          return v56();
        }
        swift_errorRetain(v75);
        v140 = swift_errorRetain(v75);
        v141 = Logger.logObject.getter(v140);
        v142 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v141, v142))
        {
          v143 = swift_slowAlloc(12, -1);
          v144 = (uint64_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v143 = 138412290;
          swift_errorRetain(v75);
          v145 = _swift_stdlib_bridgeErrorToNSError(v75);
          *(_QWORD *)(v143 + 4) = v145;
          *v144 = v145;
          swift_errorRelease(v75);
          swift_errorRelease(v75);
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "Ask failed %@ - waiting for other asks if appropriate", (uint8_t *)v143, 0xCu);
          v146 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v144, 1, v146);
          swift_slowDealloc(v144, -1, -1);
          swift_slowDealloc(v143, -1, -1);

        }
        else
        {

          swift_errorRelease(v75);
          swift_errorRelease(v75);
        }
        v153 = *(_QWORD *)(v0 + 224);
        v154 = *(_QWORD *)(v0 + 232);
        v155 = *(_QWORD *)(v0 + 200);
        v156 = *(_QWORD *)(v0 + 208);
        v157 = *(_QWORD *)(v0 + 192);
        swift_errorRelease(v75);
        v158 = *(void (**)(uint64_t, uint64_t))(v156 + 8);
        v158(v154, v155);
        sub_10000D0F0(v157, &qword_1007B7760);
        v158(v153, v155);
LABEL_36:
        if ((ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 112), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 416), &protocol self-conformance witness table for Error) & 1) == 0)
        {
          v177 = static AirDropActor.shared;
          v178 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
          v179 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
          *(_QWORD *)(v0 + 440) = v179;
          v180 = sub_100008384(&qword_1007BA568);
          *v179 = v0;
          v179[1] = sub_1003091A0;
          return ThrowingTaskGroup.next(isolation:)(*(_QWORD *)(v0 + 256), v177, v178, v180);
        }
        v166 = *(_QWORD *)(v0 + 352);
        v167 = *(_QWORD *)(v0 + 360);
        v168 = *(_QWORD *)(v0 + 200);
        v169 = *(_QWORD *)(v0 + 208);
        swift_bridgeObjectRelease(*(const char **)(v0 + 48));
        sub_100221F28(v167, v166, &qword_1007BA558);
        v170 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v166, 1, v168);
        v128 = *(_QWORD *)(v0 + 400);
        v127 = *(_QWORD *)(v0 + 408);
        v129 = *(_QWORD *)(v0 + 360);
        if (v170 == 1)
        {
          v171 = *(_QWORD *)(v0 + 200);
          v172 = *(_QWORD *)(v0 + 208);
          v174 = *(_QWORD *)(v0 + 112);
          v173 = *(_QWORD *)(v0 + 120);
          sub_10000D0F0(*(_QWORD *)(v0 + 352), &qword_1007BA558);
          swift_allocError(v171, v260, 0, 0);
          v176 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v172 + 104))(v175, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v171);
          swift_willThrow(v176);
          v136 = v174;
          v137 = v128;
          v138 = v127;
          v139 = v173;
        }
        else
        {
          v182 = *(_QWORD *)(v0 + 248);
          v184 = *(_QWORD *)(v0 + 200);
          v183 = *(_QWORD *)(v0 + 208);
          v186 = *(_QWORD *)(v0 + 112);
          v185 = *(_QWORD *)(v0 + 120);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v183 + 32))(v182, *(_QWORD *)(v0 + 352), v184);
          swift_allocError(v184, v260, 0, 0);
          v188 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 16))(v187, v182, v184);
          swift_willThrow(v188);
          (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v182, v184);
          v136 = v186;
          v137 = v128;
          v138 = v127;
          v139 = v185;
        }
        goto LABEL_41;
      }
      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Resolve failed - waiting for other asks if appropriate and attempting fallback", v91, 2u);
        swift_slowDealloc(v91, -1, -1);
      }
      v92 = *(_QWORD *)(v0 + 432);
      v93 = *(_QWORD *)(v0 + 120);

      v94 = *(_QWORD *)(v93 + v92);
      sub_10039A4B8();
      sub_10038E61C();
      swift_bridgeObjectRelease(v95);
      sub_10039A69C();
      if (!*(_QWORD *)(v94 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser))
      {
        v96 = *(_QWORD *)(v0 + 152);
        v97 = type metadata accessor for TaskPriority(0);
        v98 = *(_QWORD *)(v97 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v96, 1, 1, v97);
        v99 = swift_allocObject(&unk_100722460, 24, 7);
        swift_unknownObjectWeakInit(v99 + 16, v94);
        type metadata accessor for MainActor(0);
        v100 = swift_retain(v99);
        v101 = static MainActor.shared.getter(v100);
        v102 = (_QWORD *)swift_allocObject(&unk_100722488, 40, 7);
        v102[2] = v101;
        v102[3] = &protocol witness table for MainActor;
        v102[4] = v99;
        swift_release(v99);
        v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97);
        v104 = *(_QWORD *)(v0 + 152);
        if ((_DWORD)v103 == 1)
        {
          sub_10000D0F0(*(_QWORD *)(v0 + 152), &qword_1007B68A0);
          v105 = 7168;
        }
        else
        {
          v147 = TaskPriority.rawValue.getter(v103);
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v104, v97);
          v105 = v147 | 0x1C00;
          v101 = v102[2];
        }
        if (v101)
        {
          v148 = v102[3];
          ObjectType = swift_getObjectType(v101);
          swift_unknownObjectRetain(v101);
          v150 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v148);
          v152 = v151;
          swift_unknownObjectRelease(v101);
        }
        else
        {
          v150 = 0;
          v152 = 0;
        }
        v159 = swift_allocObject(&unk_1007224B0, 32, 7);
        *(_QWORD *)(v159 + 16) = &unk_1007BDA00;
        *(_QWORD *)(v159 + 24) = v102;
        if (v152 | v150)
        {
          v160 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v150;
          *(_QWORD *)(v0 + 40) = v152;
        }
        else
        {
          v160 = 0;
        }
        v161 = swift_task_create(v105, v160, (char *)&type metadata for () + 8, &unk_1007B9C70, v159);
        swift_release(v161);
      }
      v162 = *(_QWORD *)(v0 + 232);
      v163 = *(_QWORD *)(v0 + 200);
      v164 = *(_QWORD *)(v0 + 208);
      v165 = *(_QWORD *)(v0 + 192);
      sub_10030CADC(v165, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), (const char **)(v0 + 48), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 392));
      swift_errorRelease(v75);
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v162, v163);
      v80 = &qword_1007B7760;
      v81 = v165;
    }
    sub_10000D0F0(v81, v80);
    goto LABEL_36;
  }
  v261 = *(int *)(v0 + 488);
  v257 = *(int *)(v0 + 476);
  v219 = *(_QWORD *)(v0 + 400);
  v220 = *(_QWORD *)(v0 + 408);
  v222 = *(_QWORD *)(v0 + 392);
  v223 = *(_QWORD *)(v0 + 376);
  v221 = *(_QWORD *)(v0 + 360);
  v224 = *(_QWORD *)(v0 + 352);
  v225 = *(_QWORD *)(v0 + 344);
  v226 = *(_QWORD *)(v0 + 336);
  v227 = *(_QWORD *)(v0 + 328);
  v228 = *(_QWORD *)(v0 + 320);
  v24 = *(_QWORD *)(v0 + 288);
  v249 = *(_QWORD *)(v0 + 280);
  v229 = *(_QWORD *)(v0 + 248);
  v230 = *(_QWORD *)(v0 + 240);
  v231 = *(_QWORD *)(v0 + 232);
  v232 = *(_QWORD *)(v0 + 224);
  v233 = *(_QWORD *)(v0 + 216);
  v234 = *(_QWORD *)(v0 + 192);
  v235 = *(_QWORD *)(v0 + 184);
  v236 = *(_QWORD *)(v0 + 160);
  v237 = *(_QWORD *)(v0 + 152);
  v253 = *(_QWORD *)(v0 + 120);
  v241 = v24 + *(int *)(v0 + 492);
  v218 = *(_QWORD *)(v0 + 112);
  v216 = *(_QWORD *)(v0 + 104);
  v25 = v24 + *(int *)(v0 + 484);
  v26 = v24 + *(int *)(v0 + 480);
  v239 = v26;
  v27 = v24 + *(int *)(v0 + 472);
  v243 = v27;
  swift_bridgeObjectRelease(*(const char **)(v0 + 48));

  v28 = v2 + v1[12];
  v29 = v1[16];
  v30 = v2 + v1[20];
  v31 = v2 + v1[24];
  v213 = v1[28];
  v217 = v2 + v1[32];
  v32 = *(_DWORD *)v2;
  v245 = *(_DWORD *)v2;
  v247 = *(_BYTE *)(v2 + 4);
  *(_BYTE *)(v24 + 4) = v247;
  *(_DWORD *)v24 = v32;
  sub_100221DB4(v28, v27, _s10AskRequestVMa);
  v33 = *(void **)(v2 + v29);
  *(_QWORD *)(v24 + v257) = v33;
  v215 = v24;
  sub_100221DB4(v30, v26, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v211 = *(_QWORD *)(v31 + 8);
  v212 = *(_QWORD *)v31;
  v209 = *(_QWORD *)(v31 + 24);
  v210 = *(_QWORD *)(v31 + 16);
  v34 = *(_BYTE *)(v31 + 32);
  v208 = v34;
  v206 = *(_QWORD *)(v31 + 48);
  v207 = *(_QWORD *)(v31 + 40);
  v204 = *(_QWORD *)(v31 + 64);
  v205 = *(_QWORD *)(v31 + 56);
  v202 = *(_QWORD *)(v31 + 80);
  v203 = *(_QWORD *)(v31 + 72);
  v200 = *(_QWORD *)(v31 + 96);
  v201 = *(_QWORD *)(v31 + 88);
  *(_QWORD *)v25 = *(_QWORD *)v31;
  *(_QWORD *)(v25 + 8) = v211;
  *(_QWORD *)(v25 + 16) = v210;
  *(_QWORD *)(v25 + 24) = v209;
  *(_BYTE *)(v25 + 32) = v34;
  *(_QWORD *)(v25 + 40) = v207;
  *(_QWORD *)(v25 + 48) = v206;
  *(_QWORD *)(v25 + 56) = v205;
  *(_QWORD *)(v25 + 64) = v204;
  *(_QWORD *)(v25 + 72) = v203;
  *(_QWORD *)(v25 + 80) = v202;
  *(_QWORD *)(v25 + 88) = v201;
  *(_QWORD *)(v25 + 96) = v200;
  v199 = *(_QWORD *)(v2 + v213);
  *(_QWORD *)(v24 + v261) = v199;
  sub_10022E718(v217, v241, &qword_1007BA318);
  v35 = v249 + v1[12];
  v214 = v35;
  v36 = v1[16];
  v37 = v249 + v1[20];
  v38 = v249 + v1[24];
  v198 = v1[28];
  v39 = v249 + v1[32];
  *(_BYTE *)(v249 + 4) = v247;
  *(_DWORD *)v249 = v245;
  sub_100244384(v243, v35, _s10AskRequestVMa);
  *(_QWORD *)(v249 + v36) = v33;
  sub_100244384(v239, v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_QWORD *)v38 = v212;
  *(_QWORD *)(v38 + 8) = v211;
  *(_QWORD *)(v38 + 16) = v210;
  *(_QWORD *)(v38 + 24) = v209;
  *(_BYTE *)(v38 + 32) = v208;
  *(_QWORD *)(v38 + 40) = v207;
  *(_QWORD *)(v38 + 48) = v206;
  *(_QWORD *)(v38 + 56) = v205;
  *(_QWORD *)(v38 + 64) = v204;
  *(_QWORD *)(v38 + 72) = v203;
  *(_QWORD *)(v38 + 80) = v202;
  *(_QWORD *)(v38 + 88) = v201;
  *(_QWORD *)(v38 + 96) = v200;
  *(_QWORD *)(v249 + v198) = v199;
  sub_100221F28(v241, v39, &qword_1007BA318);
  *(_QWORD *)(v0 + 88) = v33;
  v40 = v33;
  sub_10000D0F0(v39, &qword_1007BA318);
  sub_1002443C8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8(v214, _s10AskRequestVMa);
  v41 = *(void **)(v253 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  *(_QWORD *)(v253 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection) = v33;

  v42 = v216 + v1[12];
  v43 = v1[16];
  v44 = v216 + v1[20];
  v45 = v216 + v1[24];
  v46 = v1[28];
  v47 = v216 + v1[32];
  *(_BYTE *)(v216 + 4) = v247;
  *(_DWORD *)v216 = v245;
  sub_100221DB4(v243, v42, _s10AskRequestVMa);
  *(_QWORD *)(v216 + v43) = *(_QWORD *)(v215 + v257);
  sub_100221DB4(v239, v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v48 = *(_QWORD *)(v25 + 16);
  v49 = *(_QWORD *)(v25 + 24);
  v50 = *(_BYTE *)(v25 + 32);
  v51 = *(_OWORD *)(v25 + 40);
  v52 = *(_OWORD *)(v25 + 56);
  v53 = *(_OWORD *)(v25 + 72);
  v54 = *(_OWORD *)(v25 + 88);
  *(_OWORD *)v45 = *(_OWORD *)v25;
  *(_QWORD *)(v45 + 16) = v48;
  *(_QWORD *)(v45 + 24) = v49;
  *(_BYTE *)(v45 + 32) = v50;
  *(_OWORD *)(v45 + 40) = v51;
  *(_OWORD *)(v45 + 56) = v52;
  *(_OWORD *)(v45 + 72) = v53;
  *(_OWORD *)(v45 + 88) = v54;
  *(_QWORD *)(v216 + v46) = *(_QWORD *)(v215 + v261);
  sub_10022E718(v241, v47, &qword_1007BA318);
  sub_10030F464(v218, v219, v220, v253, v264);
  swift_release(v220);
  swift_release(v219);
  sub_10000D0F0(v221, &qword_1007BA558);
  v55 = *(void **)(v0 + 88);
  swift_release(v222);
  swift_release(v223);

  swift_task_dealloc(v221);
  swift_task_dealloc(v224);
  swift_task_dealloc(v225);
  swift_task_dealloc(v226);
  swift_task_dealloc(v227);
  swift_task_dealloc(v228);
  swift_task_dealloc(v215);
  swift_task_dealloc(v249);
  swift_task_dealloc(v2);
  swift_task_dealloc(v229);
  swift_task_dealloc(v230);
  swift_task_dealloc(v231);
  swift_task_dealloc(v232);
  swift_task_dealloc(v233);
  swift_task_dealloc(v234);
  swift_task_dealloc(v235);
  swift_task_dealloc(v236);
  swift_task_dealloc(v237);
  v56 = *(uint64_t (**)(void))(v0 + 8);
  return v56();
}

uint64_t sub_10030A43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  const char *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, __n128);
  uint64_t v174;
  void (*v175)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v3, 1, 1, v7);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v9 = swift_dynamicCast(v6, v0 + 72, v2, v5, 6);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  if ((v9 & 1) != 0)
  {
    v11 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 200);
    v171 = *(_QWORD *)(v0 + 208);
    v175 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 384);
    v14 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    v15 = v1;
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 168);
    v10(v16, 0, 1, v17);
    sub_10000D0F0(v13, &qword_1007B7760);
    sub_10000D0F0(v11, &qword_1007BA558);
    sub_100221DB4(v16, v14, _s15EndpointFailureVMa);
    sub_100221DB4(v14, v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v8(v13, 0, 1, v7);
    v18 = *(int *)(v17 + 20);
    v1 = v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 32))(v11, v14 + v18, v12);
    v175(v11, 0, 1, v12);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 416);
    v20 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 160);
    v10(v22, 1, 1, *(_QWORD *)(v0 + 168));
    sub_10000D0F0(v22, &qword_1007BA548);
    *(_QWORD *)(v0 + 80) = v1;
    swift_errorRetain(v1);
    if ((swift_dynamicCast(v20, v0 + 80, v19, v21, 6) & 1) != 0)
    {
      v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 384);
      v24 = *(_QWORD *)(v0 + 360);
      v25 = *(_QWORD *)(v0 + 344);
      v26 = *(_QWORD *)(v0 + 240);
      v28 = *(_QWORD *)(v0 + 200);
      v27 = *(_QWORD *)(v0 + 208);
      v23(v25, 0, 1, v28);
      sub_10000D0F0(v24, &qword_1007BA558);
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
      v29(v26, v25, v28);
      v29(v24, v26, v28);
      v23(v24, 0, 1, v28);
    }
    else
    {
      v30 = *(unsigned int *)(v0 + 460);
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 384);
      v32 = *(_QWORD *)(v0 + 360);
      v34 = *(_QWORD *)(v0 + 336);
      v33 = *(_QWORD *)(v0 + 344);
      v36 = *(_QWORD *)(v0 + 200);
      v35 = *(_QWORD *)(v0 + 208);
      v31(v33, 1, 1, v36);
      sub_10000D0F0(v33, &qword_1007BA558);
      swift_errorRetain(v1);
      CodableError.init(_:)(v1);
      sub_10000D0F0(v32, &qword_1007BA558);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 104))(v34, v30, v36);
      v31(v34, 0, 1, v36);
      sub_10022E718(v34, v32, &qword_1007BA558);
    }
  }
  v37 = *(_QWORD *)(v0 + 328);
  v38 = *(_QWORD *)(v0 + 200);
  v39 = *(_QWORD *)(v0 + 208);
  sub_100221F28(*(_QWORD *)(v0 + 360), v37, &qword_1007BA558);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    v40 = *(_QWORD *)(v0 + 328);
    sub_10000D0F0(*(_QWORD *)(v0 + 192), &qword_1007B7760);
    swift_errorRelease(v1);
    v41 = &qword_1007BA558;
    v42 = v40;
LABEL_30:
    sub_10000D0F0(v42, v41);
    goto LABEL_31;
  }
  v43 = *(_DWORD *)(v0 + 464);
  v44 = *(_QWORD *)(v0 + 224);
  v45 = *(_QWORD *)(v0 + 232);
  v47 = *(_QWORD *)(v0 + 200);
  v46 = *(_QWORD *)(v0 + 208);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 32))(v45, *(_QWORD *)(v0 + 328), v47);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
  v48(v44, v45, v47);
  v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 88))(v44, v47);
  if ((_DWORD)v49 == v43)
  {
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Resolve failed - waiting for other asks if appropriate and attempting fallback", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
    }
    v53 = *(_QWORD *)(v0 + 432);
    v54 = *(_QWORD *)(v0 + 120);

    v55 = *(_QWORD *)(v54 + v53);
    sub_10039A4B8();
    sub_10038E61C();
    swift_bridgeObjectRelease(v56);
    sub_10039A69C();
    if (*(_QWORD *)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser))
      goto LABEL_29;
    v57 = v1;
    v58 = *(_QWORD *)(v0 + 152);
    v59 = type metadata accessor for TaskPriority(0);
    v60 = *(_QWORD *)(v59 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v58, 1, 1, v59);
    v61 = swift_allocObject(&unk_100722460, 24, 7);
    swift_unknownObjectWeakInit(v61 + 16, v55);
    type metadata accessor for MainActor(0);
    v62 = swift_retain(v61);
    v63 = static MainActor.shared.getter(v62);
    v64 = (_QWORD *)swift_allocObject(&unk_100722488, 40, 7);
    v64[2] = v63;
    v64[3] = &protocol witness table for MainActor;
    v64[4] = v61;
    swift_release(v61);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59);
    v66 = *(_QWORD *)(v0 + 152);
    if ((_DWORD)v65 == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 152), &qword_1007B68A0);
      v67 = 7168;
      if (v63)
      {
LABEL_14:
        v68 = v64[3];
        ObjectType = swift_getObjectType(v63);
        swift_unknownObjectRetain(v63);
        v70 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v68);
        v72 = v71;
        swift_unknownObjectRelease(v63);
LABEL_25:
        v115 = swift_allocObject(&unk_1007224B0, 32, 7);
        *(_QWORD *)(v115 + 16) = &unk_1007BDA00;
        *(_QWORD *)(v115 + 24) = v64;
        if (v72 | v70)
        {
          v116 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v70;
          *(_QWORD *)(v0 + 40) = v72;
        }
        else
        {
          v116 = 0;
        }
        v1 = v57;
        v117 = swift_task_create(v67, v116, (char *)&type metadata for () + 8, &unk_1007B9C70, v115);
        swift_release(v117);
LABEL_29:
        v118 = *(_QWORD *)(v0 + 232);
        v119 = *(_QWORD *)(v0 + 200);
        v120 = *(_QWORD *)(v0 + 208);
        v121 = *(_QWORD *)(v0 + 192);
        sub_10030CADC(v121, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), (const char **)(v0 + 48), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 392));
        swift_errorRelease(v1);
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v119);
        v41 = &qword_1007B7760;
        v42 = v121;
        goto LABEL_30;
      }
    }
    else
    {
      v114 = TaskPriority.rawValue.getter(v65);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v66, v59);
      v67 = v114 | 0x1C00;
      v63 = v64[2];
      if (v63)
        goto LABEL_14;
    }
    v70 = 0;
    v72 = 0;
    goto LABEL_25;
  }
  if ((_DWORD)v49 == *(_DWORD *)(v0 + 456) || (_DWORD)v49 == *(_DWORD *)(v0 + 468))
  {
    v176 = v1;
    v73 = *(_QWORD *)(v0 + 232);
    v74 = *(_QWORD *)(v0 + 216);
    v75 = *(_QWORD *)(v0 + 200);
    v76 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 48));
    v77 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v48)(v74, v73, v75, v76);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter();
    v80 = os_log_type_enabled(v78, v79);
    v82 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 216);
    v83 = *(_QWORD *)(v0 + 200);
    if (v80)
    {
      v84 = (uint8_t *)swift_slowAlloc(12, -1);
      v172 = v83;
      v85 = swift_slowAlloc(32, -1);
      v179 = v85;
      *(_DWORD *)v84 = 136315138;
      v86 = SFAirDropSend.Failure.errorDescription.getter(v85);
      v88 = (const char *)v87;
      *(_QWORD *)(v0 + 96) = sub_100228BD8(v86, v87, &v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v84 + 4);
      v89 = swift_bridgeObjectRelease(v88);
      v90 = v172;
      v173 = *(void (**)(uint64_t, uint64_t, __n128))(v82 + 8);
      v173(v81, v90, v89);
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Fatal Ask failure %s", v84, 0xCu);
      swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v84, -1, -1);

    }
    else
    {

      v173 = *(void (**)(uint64_t, uint64_t, __n128))(v82 + 8);
      ((void (*)(uint64_t, uint64_t))v173)(v81, v83);
    }
    v92 = *(_QWORD *)(v0 + 400);
    v91 = *(_QWORD *)(v0 + 408);
    v93 = *(_QWORD *)(v0 + 360);
    v94 = *(_QWORD *)(v0 + 232);
    v96 = *(_QWORD *)(v0 + 192);
    v95 = *(_QWORD *)(v0 + 200);
    v97 = *(_QWORD *)(v0 + 112);
    v169 = *(_QWORD *)(v0 + 120);
    v98 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v95, v98, 0, 0);
    v100 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v99, v94, v95);
    swift_willThrow(v100);
    swift_errorRelease(v176);
    ((void (*)(uint64_t, uint64_t))v173)(v94, v95);
    v101 = v96;
    v102 = v93;
    sub_10000D0F0(v101, &qword_1007B7760);
    v103 = v97;
    v104 = v92;
    v105 = v91;
    v106 = v169;
    goto LABEL_36;
  }
  swift_errorRetain(v1);
  v107 = swift_errorRetain(v1);
  v108 = Logger.logObject.getter(v107);
  v109 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v108, v109))
  {
    v110 = swift_slowAlloc(12, -1);
    v111 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v110 = 138412290;
    swift_errorRetain(v1);
    v112 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v110 + 4) = v112;
    *v111 = v112;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "Ask failed %@ - waiting for other asks if appropriate", (uint8_t *)v110, 0xCu);
    v113 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v111, 1, v113);
    swift_slowDealloc(v111, -1, -1);
    swift_slowDealloc(v110, -1, -1);

  }
  else
  {

    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }
  v156 = *(_QWORD *)(v0 + 224);
  v157 = *(_QWORD *)(v0 + 232);
  v158 = *(_QWORD *)(v0 + 200);
  v159 = *(_QWORD *)(v0 + 208);
  v160 = *(_QWORD *)(v0 + 192);
  swift_errorRelease(v1);
  v161 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
  v161(v157, v158);
  sub_10000D0F0(v160, &qword_1007B7760);
  v161(v156, v158);
LABEL_31:
  if ((ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 112), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 416), &protocol self-conformance witness table for Error) & 1) == 0)
  {
    v134 = static AirDropActor.shared;
    v135 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v136 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 440) = v136;
    v137 = sub_100008384(&qword_1007BA568);
    *v136 = v0;
    v136[1] = sub_1003091A0;
    return ThrowingTaskGroup.next(isolation:)(*(_QWORD *)(v0 + 256), v134, v135, v137);
  }
  v123 = *(_QWORD *)(v0 + 352);
  v122 = *(_QWORD *)(v0 + 360);
  v125 = *(_QWORD *)(v0 + 200);
  v124 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease(*(const char **)(v0 + 48));
  sub_100221F28(v122, v123, &qword_1007BA558);
  v126 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v123, 1, v125);
  v92 = *(_QWORD *)(v0 + 400);
  v91 = *(_QWORD *)(v0 + 408);
  v102 = *(_QWORD *)(v0 + 360);
  if (v126 == 1)
  {
    v128 = *(_QWORD *)(v0 + 200);
    v127 = *(_QWORD *)(v0 + 208);
    v130 = *(_QWORD *)(v0 + 112);
    v129 = *(_QWORD *)(v0 + 120);
    sub_10000D0F0(*(_QWORD *)(v0 + 352), &qword_1007BA558);
    v131 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v128, v131, 0, 0);
    v133 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v127 + 104))(v132, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v128);
    swift_willThrow(v133);
    v103 = v130;
    v104 = v92;
    v105 = v91;
    v106 = v129;
  }
  else
  {
    v139 = *(_QWORD *)(v0 + 248);
    v141 = *(_QWORD *)(v0 + 200);
    v140 = *(_QWORD *)(v0 + 208);
    v143 = *(_QWORD *)(v0 + 112);
    v142 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v140 + 32))(v139, *(_QWORD *)(v0 + 352), v141);
    v144 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v141, v144, 0, 0);
    v146 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v145, v139, v141);
    swift_willThrow(v146);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
    v103 = v143;
    v104 = v92;
    v105 = v91;
    v106 = v142;
  }
LABEL_36:
  sub_10030F464(v103, v104, v105, v106, (void **)(v0 + 88));
  swift_release(v91);
  swift_release(v92);
  sub_10000D0F0(v102, &qword_1007BA558);
  v147 = *(_QWORD *)(v0 + 376);
  v149 = *(_QWORD *)(v0 + 352);
  v148 = *(_QWORD *)(v0 + 360);
  v151 = *(_QWORD *)(v0 + 336);
  v150 = *(_QWORD *)(v0 + 344);
  v153 = *(_QWORD *)(v0 + 320);
  v152 = *(_QWORD *)(v0 + 328);
  v154 = *(_QWORD *)(v0 + 288);
  v162 = *(_QWORD *)(v0 + 280);
  v163 = *(_QWORD *)(v0 + 256);
  v164 = *(_QWORD *)(v0 + 248);
  v165 = *(_QWORD *)(v0 + 240);
  v166 = *(_QWORD *)(v0 + 232);
  v167 = *(_QWORD *)(v0 + 224);
  v168 = *(_QWORD *)(v0 + 216);
  v170 = *(_QWORD *)(v0 + 192);
  v174 = *(_QWORD *)(v0 + 184);
  v177 = *(_QWORD *)(v0 + 160);
  v178 = *(_QWORD *)(v0 + 152);
  v155 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 392));
  swift_release(v147);

  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  swift_task_dealloc(v162);
  swift_task_dealloc(v163);
  swift_task_dealloc(v164);
  swift_task_dealloc(v165);
  swift_task_dealloc(v166);
  swift_task_dealloc(v167);
  swift_task_dealloc(v168);
  swift_task_dealloc(v170);
  swift_task_dealloc(v174);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10030B144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  double v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  const char *v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[16];
  uint64_t v62;
  _BYTE v63[24];
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;

  v60 = a4;
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v8 = __chkstk_darwin(v7);
  v59 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v58 = (uint64_t)&v57 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v57 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v57 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v57 - v18;
  v62 = a1;
  sub_1003559D8((uint64_t (*)(id *))sub_10031C728, (uint64_t)v61, a2);
  v21 = v20;
  sub_1002B33BC();
  v23 = v22;
  swift_bridgeObjectRelease(v22);
  sub_100244384(a1, (uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (!v23)
  {
    sub_1002443C8((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100244384(a1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
LABEL_8:
    sub_1002443C8((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v21 & 1) == 0)
      return;
    goto LABEL_9;
  }
  v24 = a3 + 16;
  *(_QWORD *)&v25 = swift_beginAccess(a3 + 16, v63, 0, 0).n128_u64[0];
  v26 = *(const char **)(a3 + 16);
  swift_bridgeObjectRetain(v26, v25);
  sub_1002B33BC();
  if (!v28)
  {
    __break(1u);
    goto LABEL_19;
  }
  v29 = (const char *)v28;
  v30 = sub_100455328(v27, v28, (uint64_t)v26);
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0];
  swift_bridgeObjectRelease(v26, v31);
  sub_1002443C8((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100244384(a1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v30 & 1) == 0)
    goto LABEL_8;
  sub_100244384((uint64_t)v17, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload(v14, v7) == 1)
  {
    sub_1002443C8((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1002443C8((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v32 = v58;
    v33 = sub_100244384(a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v64[0] = v37;
      *(_DWORD *)v36 = 136315138;
      sub_1002B26F0();
      v39 = (const char *)v38;
      v65 = sub_100228BD8(v40, v38, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v36 + 4);
      swift_bridgeObjectRelease(v39);
      sub_1002443C8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Running fallback Ask for endpoint %s", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {

      sub_1002443C8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    sub_1002B33BC();
    if (v51)
    {
      v52 = v50;
      v53 = v51;
      swift_beginAccess(v24, v64, 33, 0);
      sub_100471DBC(v52, (uint64_t)v53);
      v55 = v54;
      swift_endAccess(v64);
      *(_QWORD *)&v56 = swift_bridgeObjectRelease(v53).n128_u64[0];
      swift_bridgeObjectRelease(v55, v56);
      return;
    }
LABEL_19:
    __break(1u);
    return;
  }
  sub_1002443C8((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002443C8((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v21 & 1) == 0)
    return;
LABEL_9:
  v41 = v59;
  v42 = sub_100244384(a1, v59, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v64[0] = v46;
    *(_DWORD *)v45 = 136315138;
    sub_1002B26F0();
    v48 = (const char *)v47;
    v65 = sub_100228BD8(v49, v47, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v45 + 4);
    swift_bridgeObjectRelease(v48);
    sub_1002443C8(v41, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Endpoint already exists in runner endpoints, ignoring %s", v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);

  }
  else
  {

    sub_1002443C8(v41, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
}

uint64_t sub_10030B6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  const char *v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  char v24;
  uint64_t v26;

  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B0AF0();
  v7 = v6;
  v9 = v8;
  sub_1002B0AF0();
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    sub_100244384(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_14;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v9).n128_u64[0];
  swift_bridgeObjectRelease(v13, v15);
  sub_100244384(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v14 & 1) != 0)
  {
LABEL_14:
    sub_1002443C8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_15;
  }
  sub_1002B33BC();
  v17 = v16;
  v19 = v18;
  sub_1002B33BC();
  v22 = v21;
  if (!v19)
  {
    sub_1002443C8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v22)
    {
      swift_bridgeObjectRelease(v22);
LABEL_20:
      v24 = 0;
      return v24 & 1;
    }
LABEL_15:
    v24 = 1;
    return v24 & 1;
  }
  if (!v21)
  {
    sub_1002443C8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_bridgeObjectRelease(v19);
    goto LABEL_20;
  }
  if (v17 == v20 && v19 == v21)
    v24 = 1;
  else
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
  swift_bridgeObjectRelease(v22);
  sub_1002443C8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_bridgeObjectRelease(v19);
  return v24 & 1;
}

uint64_t sub_10030B884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[32] = a8;
  v8[33] = v11;
  v8[30] = a6;
  v8[31] = a7;
  v8[28] = a4;
  v8[29] = a5;
  v8[27] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v8[34] = static AirDropActor.shared;
  return swift_task_switch(sub_10030B900, v9, 0);
}

uint64_t sub_10030B900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char **v8;
  double v9;
  const char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 224) + 16;
  swift_beginAccess(v1, v0 + 144, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 280) = Strong;
  if (Strong)
  {
    v4 = (void *)Strong;
    v6 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 232);
    v8 = (const char **)(Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
    *(_QWORD *)&v9 = swift_beginAccess(Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections, v0 + 168, 0, 0).n128_u64[0];
    v10 = *v8;
    swift_bridgeObjectRetain(v10, v9);
    sub_10030B144(v5, (uint64_t)v10, v7, v6);
    LOBYTE(v5) = v11;
    swift_bridgeObjectRelease(v10);
    if ((v5 & 1) != 0)
    {
      v12 = *(_QWORD *)(v0 + 216);
      v13 = *(_QWORD *)(v0 + 256) + 16;
      v14 = (int *)sub_100008384(&qword_1007BA4F8);
      *(_QWORD *)(v0 + 288) = v14;
      v15 = v12 + v14[12];
      v16 = v12 + v14[20];
      v17 = v12 + v14[32];
      swift_beginAccess(v13, v0 + 192, 33, 0);
      v18 = (_QWORD *)swift_task_alloc(dword_1007BA584);
      *(_QWORD *)(v0 + 296) = v18;
      *v18 = v0;
      v18[1] = sub_10030BB4C;
      return sub_10030BD68(v0 + 16, v15, v16, v17, *(_QWORD *)(v0 + 248), v13, *(_QWORD *)(v0 + 264));
    }
    v24 = type metadata accessor for SFAirDropSend.Failure(0);
    v25 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v24, v25, 0, 0);
    v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, enum case for SFAirDropSend.Failure.badRequest(_:), v24);
    swift_willThrow(v27);

  }
  else
  {
    v20 = type metadata accessor for SFAirDropSend.Failure(0);
    v21 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v20, v21, 0, 0);
    v23 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, enum case for SFAirDropSend.Failure.cancelled(_:), v20);
    swift_willThrow(v23);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030BB4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t (*v9)();
  _DWORD *v10;
  uint64_t v11;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(v2 + 304) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 316) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 312) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 320) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 328) = v5;
  *(_OWORD *)(v2 + 336) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 352) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v2 + 444) = *(_BYTE *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 360) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 376) = v6;
  v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 392) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 408) = v7;
  *(_QWORD *)(v2 + 424) = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
  {
    v8 = *(_QWORD *)(v2 + 272);
    v9 = sub_10030BD2C;
  }
  else
  {
    v10 = *(_DWORD **)(v2 + 288);
    v11 = *(_QWORD *)(v2 + 272);
    *(_DWORD *)(v2 + 432) = v10[16];
    *(_DWORD *)(v2 + 436) = v10[24];
    *(_DWORD *)(v2 + 440) = v10[28];
    swift_endAccess(v2 + 192);
    v9 = sub_10030BC34;
    v8 = v11;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_10030BC34()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *(int *)(v0 + 440);
  v1 = *(int *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 424);
  v2 = *(_BYTE *)(v0 + 444);
  v4 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 320);
  v6 = *(_DWORD *)(v0 + 312);
  v7 = *(_BYTE *)(v0 + 316);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = v8 + *(int *)(v0 + 436);
  v14 = *(_OWORD *)(v0 + 360);
  v15 = *(_OWORD *)(v0 + 328);
  v12 = *(_OWORD *)(v0 + 392);
  v13 = *(_OWORD *)(v0 + 376);
  v11 = *(_OWORD *)(v0 + 408);

  *(_BYTE *)(v8 + 4) = v7;
  *(_DWORD *)v8 = v6;
  *(_QWORD *)(v8 + v1) = v5;
  *(_OWORD *)v9 = v15;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v3;
  *(_BYTE *)(v9 + 32) = v2;
  *(_OWORD *)(v9 + 40) = v14;
  *(_OWORD *)(v9 + 56) = v13;
  *(_OWORD *)(v9 + 72) = v12;
  *(_OWORD *)(v9 + 88) = v11;
  *(_QWORD *)(v8 + v17) = v16;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030BD2C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 280);
  swift_endAccess(v0 + 192);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030BD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v8[30] = a7;
  v8[31] = v7;
  v8[28] = a5;
  v8[29] = a6;
  v8[26] = a3;
  v8[27] = a4;
  v8[24] = a1;
  v8[25] = a2;
  v9 = sub_100008384(&qword_1007BA558);
  v8[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SFAirDropSend.Failure(0);
  v8[33] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[34] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[35] = swift_task_alloc(v12);
  v8[36] = swift_task_alloc(v12);
  v13 = type metadata accessor for CancellationError(0);
  v8[37] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[38] = v14;
  v8[39] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007BA4F8);
  v8[40] = v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[41] = swift_task_alloc(v16);
  v8[42] = swift_task_alloc(v16);
  v17 = type metadata accessor for SFAirDropSend.Request(0);
  v8[43] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v8[44] = v18;
  v8[45] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[46] = swift_task_alloc(v19);
  v8[47] = swift_task_alloc(v19);
  v8[48] = swift_task_alloc(v19);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v20 = static AirDropActor.shared;
  v8[49] = static AirDropActor.shared;
  return swift_task_switch(sub_10030BF00, v20, 0);
}

uint64_t sub_10030BF00()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  const char *v6;
  unint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  void *v29;
  char v30;
  char v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v1 = sub_100244384(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 384), type metadata accessor for SDAirDropDiscoveredEndpoint);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v44 = v0 + 144;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 384);
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (const char *)swift_slowAlloc(32, -1);
    v45 = (char *)v6;
    *(_DWORD *)v5 = 136315138;
    sub_1002B26F0();
    v8 = (const char *)v7;
    *(_QWORD *)(v0 + 184) = sub_100228BD8(v9, v7, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v5 + 4);
    swift_bridgeObjectRelease(v8);
    sub_1002443C8(v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending Ask to new endpoint: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    v10 = *(_QWORD *)(v0 + 384);

    sub_1002443C8(v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v11 = *(_QWORD *)(v0 + 376);
  v13 = *(_QWORD *)(v0 + 352);
  v12 = *(_QWORD *)(v0 + 360);
  v14 = *(_QWORD *)(v0 + 344);
  v16 = *(_QWORD *)(v0 + 240);
  v15 = *(_QWORD *)(v0 + 248);
  v42 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 368);
  sub_100244384(v42, v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v17 = *(void **)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
  v19 = *(void **)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v16, v14);
  v20 = objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0));
  v21 = v17;
  swift_retain(v18);
  v22 = v19;
  v23 = sub_1002A6D60(v11, v21, v18, v22, v12);
  *(_QWORD *)(v0 + 400) = v23;

  swift_release(v18);
  swift_beginAccess(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections, v44, 33, 0);
  v24 = v23;
  sub_10045EDAC((const char **)&v45, v24);
  swift_endAccess(v44);

  LOBYTE(v12) = SFAirDropSend.Request.supportsPipelining.getter();
  sub_100244384(v42, v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v25 = *(_QWORD *)(v0 + 368);
  if ((v12 & 1) == 0)
  {
    sub_1002443C8(*(_QWORD *)(v0 + 368), type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_8;
  }
  v26 = sub_1002B3B68();
  sub_1002443C8(v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v26 & 1) == 0)
  {
LABEL_8:
    v31 = 0;
    goto LABEL_9;
  }
  v28 = *(_BYTE **)(v0 + 232);
  type metadata accessor for SFAirDropUserDefaults(0, v27);
  v29 = (void *)static SFAirDropUserDefaults.shared.getter();
  v30 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  v31 = v30 & *v28;
LABEL_9:
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(int **)(v0 + 320);
  **(_BYTE **)(v0 + 232) &= ~v31 & 1;
  v34 = v33[12];
  *(_DWORD *)(v0 + 544) = v34;
  v35 = v32 + v34;
  v36 = v33[20];
  *(_DWORD *)(v0 + 548) = v36;
  v37 = v32 + v36;
  v38 = v33[32];
  *(_DWORD *)(v0 + 552) = v38;
  v39 = v32 + v38;
  v40 = (_QWORD *)swift_task_alloc(dword_1007BA58C);
  *(_QWORD *)(v0 + 408) = v40;
  *v40 = v0;
  v40[1] = sub_10030C2B4;
  return sub_10030F770(v0 + 16, v35, v37, v39, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 240), (uint64_t)v24, (uint64_t)v21);
}

uint64_t sub_10030C2B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(v2 + 416) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 428) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 424) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 432) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 440) = v5;
  *(_OWORD *)(v2 + 448) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 464) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v2 + 556) = *(_BYTE *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 472) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 488) = v6;
  v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 504) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 520) = v7;
  *(_QWORD *)(v2 + 536) = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
    v8 = sub_10030C5B8;
  else
    v8 = sub_10030C370;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 392), 0);
}

uint64_t sub_10030C370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v35 = *(_QWORD *)(v0 + 536);
  v33 = *(_OWORD *)(v0 + 504);
  v34 = *(_OWORD *)(v0 + 520);
  v31 = *(_OWORD *)(v0 + 472);
  v32 = *(_OWORD *)(v0 + 488);
  v30 = *(_BYTE *)(v0 + 556);
  v29 = *(_QWORD *)(v0 + 464);
  v27 = *(_OWORD *)(v0 + 432);
  v28 = *(_OWORD *)(v0 + 448);
  v26 = *(_DWORD *)(v0 + 424);
  v25 = *(_BYTE *)(v0 + 428);
  v1 = *(int *)(v0 + 552);
  v2 = *(int *)(v0 + 548);
  v3 = *(int *)(v0 + 544);
  v17 = *(_QWORD *)(v0 + 384);
  v18 = *(_QWORD *)(v0 + 376);
  v19 = *(_QWORD *)(v0 + 368);
  v20 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(int **)(v0 + 320);
  v21 = *(_QWORD *)(v0 + 312);
  v22 = *(_QWORD *)(v0 + 288);
  v23 = *(_QWORD *)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 200);

  v13 = v5 + v1;
  v8 = v5 + v2;
  v9 = v4 + v6[12];
  v10 = v4 + v6[20];
  v11 = v4 + v6[32];
  sub_100221DB4(v5 + v3, v9, _s10AskRequestVMa);
  sub_100221DB4(v8, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v13, v11, &qword_1007BA318);
  sub_100221DB4(v9, v14, _s10AskRequestVMa);
  sub_100221DB4(v10, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v11, v16, &qword_1007BA318);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  *(_BYTE *)(v7 + 4) = v25;
  *(_DWORD *)v7 = v26;
  *(_OWORD *)(v7 + 8) = v27;
  *(_OWORD *)(v7 + 24) = v28;
  *(_QWORD *)(v7 + 40) = v29;
  *(_BYTE *)(v7 + 48) = v30;
  *(_OWORD *)(v7 + 56) = v31;
  *(_OWORD *)(v7 + 72) = v32;
  *(_OWORD *)(v7 + 88) = v33;
  *(_OWORD *)(v7 + 104) = v34;
  *(_QWORD *)(v7 + 120) = v35;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030C5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;

  v1 = *(_QWORD *)(v0 + 416);
  *(_QWORD *)(v0 + 168) = v1;
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  v5 = swift_dynamicCast(v2, v0 + 168, v4, v3, 0);
  v6 = *(_QWORD *)(v0 + 416);
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 376);
    v8 = *(_QWORD *)(v0 + 304);
    v55 = *(_QWORD *)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 288);
    v52 = *(void **)(v0 + 400);
    v53 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 224);
    swift_errorRelease(v6);
    sub_100244384(v12, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, enum case for SFAirDropSend.Failure.cancelled(_:), v11);
    v13 = _s15EndpointFailureVMa(0);
    v14 = sub_100220D78(&qword_1007BA590, _s15EndpointFailureVMa, (uint64_t)&unk_1005D23F4);
    swift_allocError(v13, v14, 0, 0);
    v16 = v15;
    sub_100221DB4(v7, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v16 + *(int *)(v13 + 20), v9, v11);
    swift_willThrow(v17);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v55, v53);
    swift_errorRelease(*(_QWORD *)(v0 + 168));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 256);
    swift_errorRelease(*(_QWORD *)(v0 + 168));
    *(_QWORD *)(v0 + 176) = v6;
    swift_errorRetain(v6);
    v21 = swift_dynamicCast(v20, v0 + 176, v4, v18, 6);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    if (v21)
    {
      v24 = *(_QWORD *)(v0 + 272);
      v23 = *(_QWORD *)(v0 + 280);
      v26 = *(_QWORD *)(v0 + 256);
      v25 = *(_QWORD *)(v0 + 264);
      v22(v26, 0, 1, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v26, v25);
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 416);
      v29 = *(_QWORD *)(v0 + 272);
      v28 = *(_QWORD *)(v0 + 280);
      v31 = *(_QWORD *)(v0 + 256);
      v30 = *(_QWORD *)(v0 + 264);
      v22(v31, 1, 1, v30);
      swift_errorRetain(v27);
      CodableError.init(_:)(v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v28, enum case for SFAirDropSend.Failure.unexpected(_:), v30);
      sub_10000D0F0(v31, &qword_1007BA558);
    }
    v54 = *(_QWORD *)(v0 + 416);
    v56 = *(void **)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 376);
    v33 = *(_QWORD *)(v0 + 280);
    v34 = *(_QWORD *)(v0 + 288);
    v36 = *(_QWORD *)(v0 + 264);
    v35 = *(_QWORD *)(v0 + 272);
    sub_100244384(*(_QWORD *)(v0 + 224), v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v33, v36);
    v37 = _s15EndpointFailureVMa(0);
    v38 = sub_100220D78(&qword_1007BA590, _s15EndpointFailureVMa, (uint64_t)&unk_1005D23F4);
    swift_allocError(v37, v38, 0, 0);
    v40 = v39;
    sub_100221DB4(v32, v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v40 + *(int *)(v37 + 20), v34, v36);
    swift_willThrow(v41);
    swift_errorRelease(v54);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v36);
  }
  v42 = *(_QWORD *)(v0 + 376);
  v44 = *(_QWORD *)(v0 + 360);
  v43 = *(_QWORD *)(v0 + 368);
  v46 = *(_QWORD *)(v0 + 328);
  v45 = *(_QWORD *)(v0 + 336);
  v47 = *(_QWORD *)(v0 + 312);
  v49 = *(_QWORD *)(v0 + 280);
  v48 = *(_QWORD *)(v0 + 288);
  v50 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 384));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030C948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v28[3];
  _QWORD v29[4];

  v4 = v3;
  v8 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100221F28(a1, (uint64_t)v10, &qword_1007B68A0);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if ((_DWORD)v13 == 1)
  {
    sub_10000D0F0((uint64_t)v10, &qword_1007B68A0);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v15);
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v21 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = sub_100008384(&qword_1007BA4F8);
  v24 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v29[0] = 0;
    v29[1] = 0;
    v24 = v29;
    v29[2] = v18;
    v29[3] = v20;
  }
  v28[0] = 1;
  v28[1] = v24;
  v28[2] = v22;
  v25 = swift_task_create(v14, v28, v23, a2, a3);
  return swift_release(v25);
}

void sub_10030CADC(uint64_t a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  const char **v40;
  double v41;
  const char *v42;
  char v43;
  __n128 v44;
  uint64_t (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const char **v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[24];
  char v86[32];

  v82 = a7;
  v71 = a6;
  v74 = a5;
  v75 = a2;
  v77 = a4;
  v84 = a3;
  v81 = type metadata accessor for SFAirDropSend.Request(0);
  v73 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v72 = v8;
  v79 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v9);
  v80 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v76 - 8);
  v12 = __chkstk_darwin(v76);
  v69 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - v14;
  v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v70 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v70 + 64);
  v18 = __chkstk_darwin(v16);
  v78 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v83 = (uint64_t)&v68 - v19;
  v20 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v20);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v68 - v28;
  sub_100221F28(a1, (uint64_t)v22, &qword_1007B7760);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    v34 = v84;
    sub_100221DB4((uint64_t)v22, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100244384((uint64_t)v29, (uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (swift_getEnumCaseMultiPayload(v27, v23))
    {
      v35 = sub_1002443C8((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "We only handle Application Service endpoints for fallbacks", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

    }
    else
    {
      v39 = v83;
      sub_100221DB4((uint64_t)v27, v83, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      v40 = v77;
      *(_QWORD *)&v41 = swift_beginAccess(v77, v86, 0, 0).n128_u64[0];
      v42 = *v40;
      swift_bridgeObjectRetain(*v40, v41);
      sub_1002B107C();
      v43 = sub_1004551A4((uint64_t)v15, (uint64_t)v42);
      v44 = swift_bridgeObjectRelease(v42);
      v45 = *(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8);
      v46 = v76;
      v47 = v45(v15, v76, v44);
      if ((v43 & 1) == 0)
      {
        v68 = v29;
        v52 = v69;
        sub_1002B107C();
        swift_beginAccess(v40, v85, 33, 0);
        sub_10045DC08((uint64_t)v15, v52);
        swift_endAccess(v85);
        ((void (*)(char *, uint64_t))v45)(v15, v46);
        v53 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v80, 1, 1, v53);
        v54 = swift_allocObject(&unk_100722320, 24, 7);
        swift_unknownObjectWeakInit(v54 + 16, v34);
        sub_100244384(v39, v78, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        v55 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v79, v71, v81);
        v56 = qword_1007B3D98;
        swift_retain(v54);
        v57 = v74;
        swift_retain(v74);
        swift_retain(v82);
        if (v56 != -1)
          swift_once(&qword_1007B3D98, sub_1002ACAEC);
        v58 = static AirDropActor.shared;
        v59 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
        v60 = *(unsigned __int8 *)(v70 + 80);
        v61 = (v60 + 40) & ~v60;
        v62 = (v17 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
        v63 = *(unsigned __int8 *)(v55 + 80);
        v64 = (v63 + v62 + 8) & ~v63;
        v65 = (v72 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
        v66 = (char *)swift_allocObject(&unk_1007224D8, v65 + 8, v60 | v63 | 7);
        *((_QWORD *)v66 + 2) = v58;
        *((_QWORD *)v66 + 3) = v59;
        *((_QWORD *)v66 + 4) = v54;
        sub_100221DB4(v78, (uint64_t)&v66[v61], type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        *(_QWORD *)&v66[v62] = v57;
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v66[v64], v79, v81);
        *(_QWORD *)&v66[v65] = v82;
        swift_retain(v58);
        swift_release(v54);
        v67 = v80;
        sub_10030C948(v80, (uint64_t)&unk_1007BA578, (uint64_t)v66);
        sub_10000D0F0(v67, &qword_1007B68A0);
        sub_1002443C8(v83, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        v51 = (uint64_t)v68;
        goto LABEL_14;
      }
      v48 = Logger.logObject.getter(v47);
      v49 = static os_log_type_t.error.getter(v48);
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "We only attempt a fallback once per endpoint, for each send", v50, 2u);
        swift_slowDealloc(v50, -1, -1);
      }

      sub_1002443C8(v39, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    }
    v51 = (uint64_t)v29;
LABEL_14:
    sub_1002443C8(v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return;
  }
  v30 = sub_10000D0F0((uint64_t)v22, &qword_1007B7760);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.error.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "No endpoint provided from failure, skipping fallback", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }

}

uint64_t sub_10030D1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v8[34] = a7;
  v8[35] = a8;
  v8[32] = a5;
  v8[33] = a6;
  v8[30] = a1;
  v8[31] = a4;
  v9 = type metadata accessor for ContinuousClock(0);
  v8[36] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[37] = v10;
  v8[38] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SFAirDrop.TransferType(0);
  v8[39] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[40] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[41] = swift_task_alloc(v13);
  v8[42] = swift_task_alloc(v13);
  v14 = sub_100008384(&qword_1007B7760);
  v8[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v8[44] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v8[45] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[46] = swift_task_alloc(v17);
  v8[47] = swift_task_alloc(v17);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v18 = static AirDropActor.shared;
  v8[48] = static AirDropActor.shared;
  return swift_task_switch(sub_10030D2FC, v18, 0);
}

uint64_t sub_10030D2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t device_id;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v67[3];

  v1 = *(_QWORD *)(v0 + 248) + 16;
  swift_beginAccess(v1, v0 + 144, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 392) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 352);
    v5 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 344);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
    v9 = swift_retain(v8);
    CurrentValueSubject.value.getter(v9);
    swift_release(v8);
    v10 = *(const char **)(v0 + 224);
    v11 = swift_task_alloc(32);
    *(_QWORD *)(v11 + 16) = v7;
    sub_10034610C((uint64_t (*)(char *))sub_10031C008, (uint64_t)v10, v6);
    swift_bridgeObjectRelease(v10);
    swift_task_dealloc(v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      v12 = sub_10000D0F0(*(_QWORD *)(v0 + 344), &qword_1007B7760);
      result = NWEndpoint.nw.getter(v12);
      if (result)
      {
        v14 = result;
        device_id = nw_endpoint_get_device_id();
        v16 = swift_unknownObjectRelease(v14);
        if (device_id)
        {
          v17 = v0 + 168;
          v18 = String.init(cString:)(device_id);
          v20 = v19;
          v21 = swift_bridgeObjectRetain_n(v19, 2);
          v22 = Logger.logObject.getter(v21);
          v23 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v22, v23))
          {
            v65 = v18;
            v24 = (uint8_t *)swift_slowAlloc(12, -1);
            v25 = swift_slowAlloc(32, -1);
            v67[0] = v25;
            *(_DWORD *)v24 = 136315138;
            swift_bridgeObjectRetain(v20);
            *(_QWORD *)(v0 + 216) = sub_100228BD8(v65, (unint64_t)v20, v67);
            v17 = v0 + 168;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v24 + 4);
            swift_bridgeObjectRelease_n(v20, 3);
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "No backup endpoint present, adding deviceID for needsFallback %s", v24, 0xCu);
            swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v25, -1, -1);
            v26 = v24;
            v18 = v65;
            swift_slowDealloc(v26, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v20, 2);
          }

          swift_beginAccess(*(_QWORD *)(v0 + 280) + 16, v17, 33, 0);
          sub_10045DF5C(v67, v18, (uint64_t)v20);
          swift_endAccess(v17);
          swift_bridgeObjectRelease((const char *)v67[1]);
        }
        v56 = *(_QWORD *)(v0 + 328);
        v55 = *(_QWORD *)(v0 + 336);
        v57 = *(_QWORD *)(v0 + 312);
        v58 = *(_QWORD *)(v0 + 320);
        SFAirDropSend.Request.type.getter(v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v56, enum case for SFAirDrop.TransferType.peerPayment(_:), v57);
        v59 = static SFAirDrop.TransferType.== infix(_:_:)(v55, v56);
        v60 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
        v60(v56, v57);
        v61 = ((uint64_t (*)(uint64_t, uint64_t))v60)(v55, v57);
        if ((v59 & 1) != 0)
          v62 = 0x8155A43676E00000;
        else
          v62 = 0x70801D946C940000;
        if ((v59 & 1) != 0)
          v63 = 6;
        else
          v63 = 2;
        ContinuousClock.init()(v61);
        v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518
                                                                               + dword_1007B6518);
        v64 = (_QWORD *)swift_task_alloc(unk_1007B651C);
        *(_QWORD *)(v0 + 544) = v64;
        *v64 = v0;
        v64[1] = sub_10030DBE0;
        return v66(v62, v63, 0, 0, 1);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 368);
      v37 = *(_QWORD *)(v0 + 376);
      sub_100221DB4(*(_QWORD *)(v0 + 344), v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v38 = sub_100244384(v37, v36, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter();
      v41 = os_log_type_enabled(v39, v40);
      v42 = *(_QWORD *)(v0 + 368);
      if (v41)
      {
        v43 = (uint8_t *)swift_slowAlloc(12, -1);
        v44 = swift_slowAlloc(32, -1);
        v67[0] = v44;
        *(_DWORD *)v43 = 136315138;
        sub_1002B26F0();
        v46 = (const char *)v45;
        *(_QWORD *)(v0 + 232) = sub_100228BD8(v47, v45, v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v43 + 4);
        swift_bridgeObjectRelease(v46);
        sub_1002443C8(v42, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Sending backup Ask to new endpoint: %s", v43, 0xCu);
        swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v43, -1, -1);
      }
      else
      {
        sub_1002443C8(*(_QWORD *)(v0 + 368), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      v48 = *(_QWORD *)(v0 + 240);
      v49 = *(_QWORD *)(v0 + 264) + 16;
      v50 = (int *)sub_100008384(&qword_1007BA4F8);
      *(_QWORD *)(v0 + 400) = v50;
      v51 = v48 + v50[12];
      v52 = v48 + v50[20];
      v53 = v48 + v50[32];
      swift_beginAccess(v49, v0 + 192, 33, 0);
      v54 = (_QWORD *)swift_task_alloc(dword_1007BA584);
      *(_QWORD *)(v0 + 408) = v54;
      *v54 = v0;
      v54[1] = sub_10030D978;
      return sub_10030BD68(v0 + 16, v51, v52, v53, *(_QWORD *)(v0 + 376), v49, *(_QWORD *)(v0 + 272));
    }
  }
  else
  {
    v27 = type metadata accessor for SFAirDropSend.Failure(0);
    v28 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v27, v28, 0, 0);
    v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, enum case for SFAirDropSend.Failure.cancelled(_:), v27);
    swift_willThrow(v30);
    v31 = *(_QWORD *)(v0 + 368);
    v33 = *(_QWORD *)(v0 + 336);
    v32 = *(_QWORD *)(v0 + 344);
    v34 = *(_QWORD *)(v0 + 328);
    v35 = *(_QWORD *)(v0 + 304);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_10030D978()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t (*v9)();
  _DWORD *v10;
  uint64_t v11;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(v2 + 416) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 428) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 424) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 432) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 440) = v5;
  *(_OWORD *)(v2 + 448) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 464) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v2 + 572) = *(_BYTE *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 472) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 488) = v6;
  v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 504) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 520) = v7;
  *(_QWORD *)(v2 + 536) = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
  {
    v8 = *(_QWORD *)(v2 + 384);
    v9 = sub_10030DDEC;
  }
  else
  {
    v10 = *(_DWORD **)(v2 + 400);
    v11 = *(_QWORD *)(v2 + 384);
    *(_DWORD *)(v2 + 560) = v10[16];
    *(_DWORD *)(v2 + 564) = v10[24];
    *(_DWORD *)(v2 + 568) = v10[28];
    swift_endAccess(v2 + 192);
    v9 = sub_10030DA60;
    v8 = v11;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_10030DA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *(int *)(v0 + 568);
  v1 = *(int *)(v0 + 564);
  v18 = *(int *)(v0 + 560);
  v23 = *(_QWORD *)(v0 + 528);
  v24 = *(_QWORD *)(v0 + 536);
  v21 = *(_QWORD *)(v0 + 520);
  v19 = *(_OWORD *)(v0 + 504);
  v16 = *(_OWORD *)(v0 + 488);
  v14 = *(_OWORD *)(v0 + 472);
  v13 = *(_BYTE *)(v0 + 572);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v12 = *(_OWORD *)(v0 + 440);
  v4 = *(_QWORD *)(v0 + 432);
  v5 = *(_DWORD *)(v0 + 424);
  v6 = *(_BYTE *)(v0 + 428);
  v7 = *(_QWORD *)(v0 + 368);
  v8 = *(_QWORD *)(v0 + 376);
  v15 = *(_QWORD *)(v0 + 344);
  v17 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 328);
  v22 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 240);

  v10 = v9 + v1;
  sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(_BYTE *)(v9 + 4) = v6;
  *(_DWORD *)v9 = v5;
  *(_QWORD *)(v9 + v18) = v4;
  *(_OWORD *)v10 = v12;
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v3;
  *(_BYTE *)(v10 + 32) = v13;
  *(_OWORD *)(v10 + 40) = v14;
  *(_OWORD *)(v10 + 56) = v16;
  *(_OWORD *)(v10 + 72) = v19;
  *(_QWORD *)(v10 + 88) = v21;
  *(_QWORD *)(v10 + 96) = v23;
  *(_QWORD *)(v9 + v25) = v24;
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030DBE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[48];
    (*(void (**)(_QWORD, _QWORD))(v2[37] + 8))(v2[38], v2[36]);
    v5 = sub_10030DD6C;
  }
  else
  {
    v4 = v2[48];
    (*(void (**)(_QWORD, _QWORD))(v2[37] + 8))(v2[38], v2[36]);
    v5 = sub_10030DC6C;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_10030DC6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 392);
  v2 = type metadata accessor for SFAirDropSend.Failure(0);
  v3 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v2, v3, 0, 0);
  v5 = v4;
  sub_1002B107C();
  v6 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v5, enum case for SFAirDropSend.Failure.missingEndpoint(_:), v2);
  swift_willThrow(v6);

  v7 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 328);
  v11 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030DD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030DDEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 376);
  swift_endAccess(v0 + 192);

  sub_1002443C8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030DE88()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t device_id;
  double v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  char v11;

  sub_1002B33BC();
  v1 = v0;
  v3 = v2;
  result = NWEndpoint.nw.getter(v0);
  if (result)
  {
    v5 = result;
    device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v5);
    if (device_id)
    {
      v8 = String.init(cString:)(device_id);
      v10 = v9;
      if (v3)
      {
        if (v9)
        {
          if (v1 == v8 && v3 == v9)
          {
            *(_QWORD *)&v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
            v11 = 1;
          }
          else
          {
            v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v8, v9, 0);
            *(_QWORD *)&v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
          }
          goto LABEL_14;
        }
        goto LABEL_9;
      }
      if (v9)
      {
        v11 = 0;
LABEL_14:
        swift_bridgeObjectRelease(v10, v7);
        return v11 & 1;
      }
    }
    else if (v3)
    {
LABEL_9:
      v11 = 0;
      swift_bridgeObjectRelease(v3, v7);
      return v11 & 1;
    }
    v11 = 1;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

void sub_10030DF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(_QWORD);
  char *v19;
  _BYTE v20[32];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;

  v22 = a6;
  v29 = a3;
  v26 = a2;
  v25 = type metadata accessor for SFAirDropSend.Request(0);
  v27 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v23 = v7;
  v31 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v8);
  v24 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v10);
  v11 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v11);
  v12 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v21 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v21 + 64);
  v14 = __chkstk_darwin(v12);
  v28 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  v17 = &v20[-v16];
  v30 = a1;
  sub_100244384(a1, (uint64_t)&v20[-v16], v18);
  v19 = (char *)&loc_10030E14C + *((int *)qword_10030E650 + swift_getEnumCaseMultiPayload(v17, v12));
  __asm { BR              X10 }
}

void sub_10030E15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t device_id;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  const char **v26;
  double v27;
  const char *v28;
  uint64_t v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;

  *(_QWORD *)(v6 - 232) = v1;
  v7 = sub_100221DB4(v0, v4, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v8 = NWEndpoint.nw.getter(v7);
  if (!v8)
  {
    __break(1u);
    JUMPOUT(0x10030E650);
  }
  v9 = v8;
  device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v9);
  if (device_id)
  {
    v11 = v5;
    *(_QWORD *)(v6 - 248) = String.init(cString:)(device_id);
    v13 = v12;
    sub_1002443C8(v4, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    v14 = *(_QWORD *)(v6 - 160) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
    v15 = sub_100244384(*(_QWORD *)(v6 - 152), v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_QWORD *)(v6 - 256) = v14;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    *(_QWORD *)(v6 - 240) = v5;
    if (v18)
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      *(_QWORD *)(v6 - 112) = v20;
      *(_DWORD *)v19 = 136315138;
      sub_1002B26F0();
      v22 = (const char *)v21;
      *(_QWORD *)(v6 - 136) = sub_100228BD8(v23, v21, (uint64_t *)(v6 - 112));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 136, v6 - 128, v19 + 4);
      swift_bridgeObjectRelease(v22);
      sub_1002443C8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Checking if backup Ask needed for %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      v24 = v19;
      v11 = *(_QWORD *)(v6 - 240);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

      sub_1002443C8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    v25 = *(_QWORD *)(v6 - 144);
    v26 = *(const char ***)(v6 - 232);
    *(_QWORD *)&v27 = swift_beginAccess(v26, v6 - 112, 0, 0).n128_u64[0];
    v28 = *v26;
    swift_bridgeObjectRetain(*v26, v27);
    v29 = *(_QWORD *)(v6 - 248);
    v30 = sub_100455328(v29, (uint64_t)v13, (uint64_t)v28);
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v28).n128_u64[0];
    v32 = *(_QWORD *)(v6 - 176);
    v33 = *(_QWORD *)(v6 - 168);
    if ((v30 & 1) != 0)
    {
      swift_beginAccess(v26, v6 - 136, 33, 0);
      sub_100471DBC(v29, (uint64_t)v13);
      v35 = v34;
      swift_endAccess(v6 - 136);
      *(_QWORD *)&v36 = swift_bridgeObjectRelease(v13).n128_u64[0];
      swift_bridgeObjectRelease(v35, v36);
      v37 = type metadata accessor for TaskPriority(0);
      v38 = *(_QWORD *)(v6 - 200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v38, 1, 1, v37);
      v39 = swift_allocObject(&unk_100722320, 24, 7);
      swift_unknownObjectWeakInit(v39 + 16, *(_QWORD *)(v6 - 160));
      sub_100244384(*(_QWORD *)(v6 - 152), v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v40 = *(_QWORD *)(v6 - 192);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 16))(v25, *(_QWORD *)(v6 - 216), v40);
      v41 = qword_1007B3D98;
      swift_retain(v39);
      swift_retain(v11);
      v42 = v32;
      if (v41 != -1)
        swift_once(&qword_1007B3D98, sub_1002ACAEC);
      v43 = static AirDropActor.shared;
      v44 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
      v45 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 224) + 80);
      v46 = (v45 + 40) & ~v45;
      v47 = (v2 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
      v48 = *(unsigned __int8 *)(v42 + 80);
      v49 = (v48 + v47 + 8) & ~v48;
      v50 = (char *)swift_allocObject(&unk_100722500, v49 + *(_QWORD *)(v6 - 208), v45 | v48 | 7);
      *((_QWORD *)v50 + 2) = v43;
      *((_QWORD *)v50 + 3) = v44;
      *((_QWORD *)v50 + 4) = v39;
      sub_100221DB4(*(_QWORD *)(v6 - 168), (uint64_t)&v50[v46], type metadata accessor for SDAirDropDiscoveredEndpoint);
      *(_QWORD *)&v50[v47] = *(_QWORD *)(v6 - 240);
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 32))(&v50[v49], *(_QWORD *)(v6 - 144), v40);
      swift_retain(v43);
      swift_release(v39);
      sub_10030C948(v38, (uint64_t)&unk_1007BA5A0, (uint64_t)v50);
      sub_10000D0F0(v38, &qword_1007B68A0);
    }
    else
    {
      swift_bridgeObjectRelease(v13, v31);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Fallback not needed", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

    }
  }
  else
  {
    sub_1002443C8(v4, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }
}

uint64_t sub_10030E660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[28] = a6;
  v7[29] = a7;
  v7[26] = a4;
  v7[27] = a5;
  v7[25] = a1;
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v7[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v7[31] = static AirDropActor.shared;
  return swift_task_switch(sub_10030E6F4, v9, 0);
}

uint64_t sub_10030E6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 208) + 16;
  swift_beginAccess(v1, v0 + 144, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(_QWORD *)(v0 + 256) = Strong;
  if (Strong)
  {
    v4 = sub_100244384(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 240);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v26 = v10;
      *(_DWORD *)v9 = 136315138;
      sub_1002B26F0();
      v12 = (const char *)v11;
      *(_QWORD *)(v0 + 192) = sub_100228BD8(v13, v11, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v9 + 4);
      swift_bridgeObjectRelease(v12);
      sub_1002443C8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Sending backup Ask to new endpoint: %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      sub_1002443C8(*(_QWORD *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 224) + 16;
    v21 = (int *)sub_100008384(&qword_1007BA4F8);
    *(_QWORD *)(v0 + 264) = v21;
    v22 = v19 + v21[12];
    v23 = v19 + v21[20];
    v24 = v19 + v21[32];
    swift_beginAccess(v20, v0 + 168, 33, 0);
    v25 = (_QWORD *)swift_task_alloc(dword_1007BA584);
    *(_QWORD *)(v0 + 272) = v25;
    *v25 = v0;
    v25[1] = sub_10030E9D0;
    return sub_10030BD68(v0 + 16, v22, v23, v24, *(_QWORD *)(v0 + 216), v20, *(_QWORD *)(v0 + 232));
  }
  else
  {
    v14 = type metadata accessor for SFAirDropSend.Failure(0);
    v15 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v14, v15, 0, 0);
    v17 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, enum case for SFAirDropSend.Failure.cancelled(_:), v14);
    swift_willThrow(v17);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10030E9D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t (*v9)();
  _DWORD *v10;
  uint64_t v11;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 272);
  *(_QWORD *)(v2 + 280) = v0;
  v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 292) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 288) = v4;
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 296) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 304) = v5;
  *(_OWORD *)(v2 + 312) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v2 + 420) = *(_BYTE *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 336) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 352) = v6;
  v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 368) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 384) = v7;
  *(_QWORD *)(v2 + 400) = *(_QWORD *)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
  {
    v8 = *(_QWORD *)(v2 + 248);
    v9 = sub_10030EBB8;
  }
  else
  {
    v10 = *(_DWORD **)(v2 + 264);
    v11 = *(_QWORD *)(v2 + 248);
    *(_DWORD *)(v2 + 408) = v10[16];
    *(_DWORD *)(v2 + 412) = v10[24];
    *(_DWORD *)(v2 + 416) = v10[28];
    swift_endAccess(v2 + 168);
    v9 = sub_10030EAB4;
    v8 = v11;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_10030EAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *(int *)(v0 + 416);
  v1 = *(int *)(v0 + 408);
  v17 = *(_QWORD *)(v0 + 400);
  v16 = *(_BYTE *)(v0 + 420);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_DWORD *)(v0 + 288);
  v6 = *(_BYTE *)(v0 + 292);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 200);
  v9 = v8 + *(int *)(v0 + 412);
  v14 = *(_OWORD *)(v0 + 336);
  v15 = *(_OWORD *)(v0 + 304);
  v12 = *(_OWORD *)(v0 + 368);
  v13 = *(_OWORD *)(v0 + 352);
  v11 = *(_OWORD *)(v0 + 384);

  *(_BYTE *)(v8 + 4) = v6;
  *(_DWORD *)v8 = v5;
  *(_QWORD *)(v8 + v1) = v4;
  *(_OWORD *)v9 = v15;
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v2;
  *(_BYTE *)(v9 + 32) = v16;
  *(_OWORD *)(v9 + 40) = v14;
  *(_OWORD *)(v9 + 56) = v13;
  *(_OWORD *)(v9 + 72) = v12;
  *(_OWORD *)(v9 + 88) = v11;
  *(_QWORD *)(v8 + v18) = v17;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030EBB8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 256);
  swift_endAccess(v0 + 168);

  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030EBFC(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t ObjectType;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  _QWORD v103[3];
  _QWORD v104[5];

  v92 = a6;
  v89 = a2;
  v90 = a3;
  v9 = type metadata accessor for SFAirDropSend.Request(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v88 = v11;
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007B68A0);
  v14 = __chkstk_darwin(v13);
  v87 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v79 - v16;
  v18 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v100 = (uint64_t)&v79 - v24;
  __chkstk_darwin(v23);
  v84 = (uint64_t)&v79 - v26;
  v27 = *a1;
  v28 = *(_QWORD *)(*a1 + 56);
  v80 = *a1 + 56;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v81 = (unint64_t)(v29 + 63) >> 6;
  v83 = v25 + 7;
  v93 = v27;
  result = swift_bridgeObjectRetain((const char *)v27);
  v33 = v19;
  v34 = 0;
  v101 = v17;
  v102 = v12;
  v91 = a4;
  v86 = v19;
  v85 = v22;
  v99 = a5;
  v82 = v9;
  while (1)
  {
    if (v31)
    {
      v36 = v17;
      v97 = (v31 - 1) & v31;
      v98 = v34;
      v37 = __clz(__rbit64(v31)) | (v34 << 6);
      goto LABEL_21;
    }
    v38 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v38 >= v81)
      return swift_release(v93);
    v39 = *(_QWORD *)(v80 + 8 * v38);
    v40 = v34 + 1;
    if (!v39)
    {
      v40 = v34 + 2;
      if (v34 + 2 >= v81)
        return swift_release(v93);
      v39 = *(_QWORD *)(v80 + 8 * v40);
      if (!v39)
      {
        v40 = v34 + 3;
        if (v34 + 3 >= v81)
          return swift_release(v93);
        v39 = *(_QWORD *)(v80 + 8 * v40);
        if (!v39)
          break;
      }
    }
LABEL_20:
    v36 = v17;
    v97 = (v39 - 1) & v39;
    v98 = v40;
    v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_21:
    v42 = v84;
    v43 = v33;
    sub_100244384(*(_QWORD *)(v93 + 48) + *(_QWORD *)(v33 + 72) * v37, v84, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v44 = v42;
    v45 = v100;
    sub_100221DB4(v44, v100, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v46 = type metadata accessor for TaskPriority(0);
    v95 = *(_QWORD *)(v46 - 8);
    v96 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 56))(v36, 1, 1);
    v47 = swift_allocObject(&unk_100722320, 24, 7);
    v48 = v90;
    swift_unknownObjectWeakInit(v47 + 16, v90);
    sub_100244384(v45, (uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v92, v9);
    v49 = qword_1007B3D98;
    swift_retain(v47);
    v50 = v91;
    swift_retain(v91);
    v94 = v48;
    swift_retain(v99);
    v51 = v49 == -1;
    v52 = v50;
    if (!v51)
      swift_once(&qword_1007B3D98, sub_1002ACAEC);
    v53 = static AirDropActor.shared;
    v54 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
    v55 = *(unsigned __int8 *)(v43 + 80);
    v56 = (v55 + 56) & ~v55;
    v57 = (v83 + v56) & 0xFFFFFFFFFFFFFFF8;
    v58 = *(unsigned __int8 *)(v10 + 80);
    v59 = (v58 + v57 + 8) & ~v58;
    v60 = v10;
    v61 = (char *)swift_allocObject(&unk_100722528, v59 + v88, v55 | v58 | 7);
    *((_QWORD *)v61 + 2) = v53;
    *((_QWORD *)v61 + 3) = v54;
    *((_QWORD *)v61 + 4) = v47;
    *((_QWORD *)v61 + 5) = v52;
    *((_QWORD *)v61 + 6) = v94;
    sub_100221DB4((uint64_t)v22, (uint64_t)&v61[v56], type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_QWORD *)&v61[v57] = v99;
    v62 = v60;
    v9 = v82;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v61[v59], v102, v82);
    swift_retain(v53);
    swift_release(v47);
    v63 = v87;
    sub_100221F28((uint64_t)v101, v87, &qword_1007B68A0);
    v65 = v95;
    v64 = v96;
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v63, 1, v96);
    if ((_DWORD)v66 == 1)
    {
      sub_10000D0F0(v63, &qword_1007B68A0);
      v67 = 0;
      v68 = *((_QWORD *)v61 + 2);
      if (v68)
        goto LABEL_25;
    }
    else
    {
      v76 = TaskPriority.rawValue.getter(v66);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      v67 = v76;
      v68 = *((_QWORD *)v61 + 2);
      if (v68)
      {
LABEL_25:
        v69 = v9;
        v70 = *((_QWORD *)v61 + 3);
        ObjectType = swift_getObjectType(v68);
        swift_unknownObjectRetain(v68);
        v72 = v70;
        v9 = v69;
        v73 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v72);
        v75 = v74;
        swift_unknownObjectRelease(v68);
        goto LABEL_28;
      }
    }
    v73 = 0;
    v75 = 0;
LABEL_28:
    v77 = sub_100008384(&qword_1007BA4F8);
    v78 = (_QWORD *)(v75 | v73);
    v12 = v102;
    if (v75 | v73)
    {
      v104[0] = 0;
      v104[1] = 0;
      v78 = v104;
      v104[2] = v73;
      v104[3] = v75;
    }
    v31 = v97;
    v103[0] = 1;
    v103[1] = v78;
    v103[2] = v89;
    v35 = swift_task_create(v67 | 0x3100, v103, v77, &unk_1007BA5B0, v61);
    swift_release(v35);
    v17 = v101;
    sub_10000D0F0((uint64_t)v101, &qword_1007B68A0);
    result = sub_1002443C8(v100, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v10 = v62;
    v33 = v86;
    v22 = v85;
    v34 = v98;
  }
  v41 = v34 + 4;
  if (v34 + 4 >= v81)
    return swift_release(v93);
  v39 = *(_QWORD *)(v80 + 8 * v41);
  if (v39)
  {
    v40 = v34 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v40 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v40 >= v81)
      return swift_release(v93);
    v39 = *(_QWORD *)(v80 + 8 * v40);
    ++v41;
    if (v39)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10030F260(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;

  v12 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = *(_QWORD *)(v16 + 56);
  v29 = v16 + 56;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v30 = (unint64_t)(v18 + 63) >> 6;
  v31 = a2;
  result = swift_bridgeObjectRetain((const char *)v16);
  v22 = 0;
  while (1)
  {
    if (v20)
    {
      v23 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v24 = v23 | (v22 << 6);
      goto LABEL_5;
    }
    v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v25 >= v30)
      return swift_release(v16);
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v22;
    if (!v26)
    {
      v22 = v25 + 1;
      if (v25 + 1 >= v30)
        return swift_release(v16);
      v26 = *(_QWORD *)(v29 + 8 * v22);
      if (!v26)
      {
        v22 = v25 + 2;
        if (v25 + 2 >= v30)
          return swift_release(v16);
        v26 = *(_QWORD *)(v29 + 8 * v22);
        if (!v26)
          break;
      }
    }
LABEL_20:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_5:
    sub_100244384(*(_QWORD *)(v16 + 48) + *(_QWORD *)(v13 + 72) * v24, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10030DF7C((uint64_t)v15, (uint64_t)&v31, a3, a4, a5, a6);
    result = sub_1002443C8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v27 = v25 + 3;
  if (v27 >= v30)
    return swift_release(v16);
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v22 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v30)
      return swift_release(v16);
    v26 = *(_QWORD *)(v29 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_10030F464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  const char **v7;
  double v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD v35[4];
  _BYTE v36[24];
  _QWORD v37[5];

  sub_100008384(&qword_1007BA4F8);
  sub_100008384(&qword_1007B5A60);
  ThrowingTaskGroup.cancelAll()();
  AnyCancellable.cancel()();
  AnyCancellable.cancel()();
  v7 = (const char **)(a4 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  *(_QWORD *)&v8 = swift_beginAccess(v7, v36, 0, 0).n128_u64[0];
  v9 = swift_bridgeObjectRetain(*v7, v8);
  v10 = sub_10031A1A0(v9, a5);
  v11 = v10;
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = __CocoaSet.makeIterator()(v10);
    v13 = type metadata accessor for SDAirDropSendConnection(0);
    v14 = sub_100220D78(&qword_1007BA4F0, type metadata accessor for SDAirDropSendConnection, (uint64_t)&protocol conformance descriptor for NSObject);
    v10 = (Swift::Int)Set.Iterator.init(_cocoa:)(v37, v12, v13, v14);
    v11 = v37[0];
    v15 = v37[1];
    v16 = v37[2];
    v17 = v37[3];
    v18 = v37[4];
  }
  else
  {
    v17 = 0;
    v19 = -1 << *(_BYTE *)(v10 + 32);
    v15 = v10 + 56;
    v16 = ~v19;
    v20 = -v19;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v18 = v21 & *(_QWORD *)(v10 + 56);
  }
  v22 = (unint64_t)(v16 + 64) >> 6;
  if (v11 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v18)
    {
      v23 = (v18 - 1) & v18;
      v24 = __clz(__rbit64(v18)) | (v17 << 6);
      v25 = v17;
      goto LABEL_27;
    }
    v30 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v30 >= v22)
      goto LABEL_30;
    v31 = *(_QWORD *)(v15 + 8 * v30);
    v25 = v17 + 1;
    if (!v31)
    {
      v25 = v17 + 2;
      if (v17 + 2 >= v22)
        goto LABEL_30;
      v31 = *(_QWORD *)(v15 + 8 * v25);
      if (!v31)
      {
        v25 = v17 + 3;
        if (v17 + 3 >= v22)
          goto LABEL_30;
        v31 = *(_QWORD *)(v15 + 8 * v25);
        if (!v31)
        {
          v25 = v17 + 4;
          if (v17 + 4 >= v22)
            goto LABEL_30;
          v31 = *(_QWORD *)(v15 + 8 * v25);
          if (!v31)
          {
            v32 = v17 + 5;
            while (v22 != v32)
            {
              v31 = *(_QWORD *)(v15 + 8 * v32++);
              if (v31)
              {
                v25 = v32 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_10022E5B4(v11);
            return;
          }
        }
      }
    }
LABEL_26:
    v23 = (v31 - 1) & v31;
    v24 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_27:
    v29 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v24);
    if (!v29)
      goto LABEL_30;
    while (1)
    {
      sub_10029FDFC(0);
      swift_beginAccess(v7, v35, 33, 0);
      v33 = (void *)sub_10047297C(v29);
      swift_endAccess(v35);

      v17 = v25;
      v18 = v23;
      if ((v11 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v26 = __CocoaSet.Iterator.next()(v10);
      if (v26)
      {
        v27 = v26;
        v34 = v26;
        v28 = type metadata accessor for SDAirDropSendConnection(0);
        swift_unknownObjectRetain(v27);
        swift_dynamicCast(v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v28, 7);
        v29 = (id)v35[0];
        swift_unknownObjectRelease(v27);
        v25 = v17;
        v23 = v18;
        if (v29)
          continue;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_10030F770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v30;

  *(_QWORD *)(v9 + 200) = a8;
  *(_QWORD *)(v9 + 208) = v8;
  *(_BYTE *)(v9 + 645) = v30;
  *(_QWORD *)(v9 + 184) = a6;
  *(_QWORD *)(v9 + 192) = a7;
  *(_QWORD *)(v9 + 168) = a4;
  *(_QWORD *)(v9 + 176) = a5;
  *(_QWORD *)(v9 + 152) = a2;
  *(_QWORD *)(v9 + 160) = a3;
  *(_QWORD *)(v9 + 144) = a1;
  v10 = type metadata accessor for SFSecurityScopedURL(0);
  *(_QWORD *)(v9 + 216) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 224) = v11;
  *(_QWORD *)(v9 + 232) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  *(_QWORD *)(v9 + 240) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 248) = v13;
  *(_QWORD *)(v9 + 256) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  *(_QWORD *)(v9 + 264) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v9 + 272) = v15;
  *(_QWORD *)(v9 + 280) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA318) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 288) = swift_task_alloc(v16);
  *(_QWORD *)(v9 + 296) = swift_task_alloc(v16);
  v17 = sub_100008384(&qword_1007BA530);
  *(_QWORD *)(v9 + 304) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v9 + 312) = v18;
  *(_QWORD *)(v9 + 320) = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s10AskRequestVMa(0);
  *(_QWORD *)(v9 + 328) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008384(&qword_1007BA510);
  *(_QWORD *)(v9 + 336) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v9 + 344) = v21;
  *(_QWORD *)(v9 + 352) = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = _s12HelloRequestVMa(0);
  *(_QWORD *)(v9 + 360) = v22;
  *(_QWORD *)(v9 + 368) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDrop.TransferType(0);
  *(_QWORD *)(v9 + 376) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v9 + 384) = v24;
  *(_QWORD *)(v9 + 392) = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SFAirDropSend.Request(0);
  *(_QWORD *)(v9 + 400) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v9 + 408) = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 416) = swift_task_alloc(v27);
  *(_QWORD *)(v9 + 424) = swift_task_alloc(v27);
  *(_QWORD *)(v9 + 432) = swift_task_alloc(v27);
  *(_QWORD *)(v9 + 440) = swift_task_alloc(v27);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v28 = static AirDropActor.shared;
  *(_QWORD *)(v9 + 448) = static AirDropActor.shared;
  return swift_task_switch(sub_10030F9B4, v28, 0);
}

uint64_t sub_10030F9B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;

  v2 = SFAirDropSend.Request.urls.getter(a1);
  *(_QWORD *)(v1 + 456) = v2;
  if (v2)
  {
    v3 = v2;
    v4 = SFAirDropSend.Request.requestSource.getter(v2);
    v6 = v5;
    *(_QWORD *)(v1 + 464) = v5;
    v21 = (char *)&dword_1007BA8B0 + dword_1007BA8B0;
    v7 = (_QWORD *)swift_task_alloc(unk_1007BA8B4);
    *(_QWORD *)(v1 + 472) = v7;
    *v7 = v1;
    v7[1] = sub_10030FB1C;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))v21)(*(_QWORD *)(v1 + 184), v3, v4, v6, *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 200));
  }
  else
  {
    v9 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 408) + 16);
    v10 = v9(*(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 400));
    v11 = SFAirDropSend.Request.urls.getter(v10);
    *(_QWORD *)(v1 + 504) = 0;
    *(_QWORD *)(v1 + 512) = v11;
    *(_QWORD *)(v1 + 496) = v9;
    *(_BYTE *)(v1 + 646) = 1;
    v12 = *(_QWORD *)(v1 + 440);
    v13 = *(_QWORD *)(v1 + 400);
    v14 = *(_QWORD *)(v1 + 408);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    *(_QWORD *)(v1 + 520) = v15;
    v16 = v15(v12, v13);
    v17 = SFAirDropSend.Request.requestSource.getter(v16);
    v19 = v18;
    *(_QWORD *)(v1 + 528) = v18;
    v20 = (_QWORD *)swift_task_alloc(dword_1007BA884);
    *(_QWORD *)(v1 + 536) = v20;
    *v20 = v1;
    v20[1] = sub_10030FDA0;
    return sub_100324F20(v11, v17, v19, *(_QWORD *)(v1 + 176));
  }
}

uint64_t sub_10030FB1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  const char *v8;
  uint64_t v9;
  double v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 472);
  *(_QWORD *)(*(_QWORD *)v2 + 480) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[56];
    v7 = sub_10030FBA8;
  }
  else
  {
    v8 = (const char *)v4[58];
    v9 = v4[56];
    *(_QWORD *)&v10 = swift_bridgeObjectRelease((const char *)v4[57]).n128_u64[0];
    v4[61] = a1;
    swift_bridgeObjectRelease(v8, v10);
    v7 = sub_10030FCA8;
    v6 = v9;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10030FBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 456));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 288);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030FCA8()
{
  uint64_t v0;
  const char *v1;
  uint64_t (*v2)(_QWORD, _QWORD, _QWORD);
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(const char **)(v0 + 488);
  v2 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 16);
  v3 = v2(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 400));
  v4 = v1;
  v5 = (uint64_t)v1;
  if (!v1)
    v5 = SFAirDropSend.Request.urls.getter(v3);
  *(_QWORD *)(v0 + 504) = v1;
  *(_QWORD *)(v0 + 512) = v5;
  *(_QWORD *)(v0 + 496) = v2;
  *(_BYTE *)(v0 + 646) = v1 == 0;
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 400);
  v8 = *(_QWORD *)(v0 + 408);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v0 + 520) = v9;
  swift_bridgeObjectRetain(v4);
  v10 = v9(v6, v7);
  v11 = SFAirDropSend.Request.requestSource.getter(v10);
  v13 = v12;
  *(_QWORD *)(v0 + 528) = v12;
  v14 = (_QWORD *)swift_task_alloc(dword_1007BA884);
  *(_QWORD *)(v0 + 536) = v14;
  *v14 = v0;
  v14[1] = sub_10030FDA0;
  return sub_100324F20(v5, v11, v13, *(_QWORD *)(v0 + 176));
}

uint64_t sub_10030FDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  const char *v7;
  const char *v8;
  uint64_t v9;
  double v10;
  uint64_t (*v11)();

  v5 = *(_QWORD **)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 536);
  v5[68] = a1;
  v5[69] = a2;
  v5[70] = a3;
  v5[71] = v3;
  swift_task_dealloc(v6);
  v7 = (const char *)v5[66];
  v8 = (const char *)v5[64];
  v9 = v5[56];
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v7).n128_u64[0];
  swift_bridgeObjectRelease(v8, v10);
  if (v3)
    v11 = sub_100310BD4;
  else
    v11 = sub_10030FE38;
  return swift_task_switch(v11, v9, 0);
}

uint64_t sub_10030FE38()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  double v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(const char **)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 560);
    v6 = *(const char **)(v0 + 552);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 496);
    v8 = *(_QWORD *)(v0 + 432);
    sub_10031C05C(*(_QWORD *)(v0 + 544), (uint64_t)v6, v5);
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v1).n128_u64[0];
    swift_bridgeObjectRelease(v6, v9);
    swift_beginAccess(v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_mediaConversionDestinations, v0 + 120, 33, 0);
    sub_10034334C(v5);
    swift_endAccess(v0 + 120);
    swift_bridgeObjectRetain(v1);
    v7(v8, v4, v2);
    v10 = *(_QWORD *)(v0 + 544);
  }
  else
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 496);
    v12 = *(_BYTE *)(v0 + 646);
    v14 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 432);
    swift_beginAccess(v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_mediaConversionDestinations, v0 + 120, 33, 0);
    sub_10034334C((uint64_t)_swiftEmptyArrayStorage);
    swift_endAccess(v0 + 120);
    v11(v13, v4, v2);
    v15 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v14, v13, v2);
    if ((v12 & 1) != 0)
    {
      v10 = SFAirDropSend.Request.urls.getter(v15);
      v16 = *(const char **)(v0 + 504);
    }
    else
    {
      v16 = *(const char **)(v0 + 504);
      v10 = (uint64_t)v16;
    }
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v18 = *(_QWORD *)(v0 + 424);
    v19 = *(_QWORD *)(v0 + 400);
    swift_bridgeObjectRetain(v16);
    v17(v18, v19);
  }
  *(_QWORD *)(v0 + 576) = v10;
  (*(void (**)(_QWORD, _QWORD))(v0 + 520))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 400));
  v20 = static AirDropActor.shared;
  *(_QWORD *)(v0 + 584) = static AirDropActor.shared;
  return swift_task_switch(sub_10030FFEC, v20, 0);
}

uint64_t sub_10030FFEC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  v1 = sub_1002B3B68();
  if ((v1 & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(0, v2),
        v3 = (void *)static SFAirDropUserDefaults.shared.getter(),
        v4 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v3,
        (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(v0 + 384);
    v6 = *(_QWORD *)(v0 + 392);
    v8 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 352);
    v10 = *(_QWORD *)(v0 + 360);
    v11 = SFAirDropSend.Request.type.getter(v1);
    v12 = SFAirDrop.TransferType.isPeerPayment.getter(v11);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    SFAirDropSend.Request.id.getter(v13);
    v14 = *(int *)(v10 + 24);
    *(_DWORD *)(v8 + *(int *)(v10 + 20)) = 3;
    *(_BYTE *)(v8 + v14) = v12 & 1;
    sub_100299FE8(v8, v9);
    v15 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 592) = v15;
    *v15 = v0;
    v15[1] = sub_1003101C0;
    return SFProgressTask.finalValue.getter(v0 + 640, *(_QWORD *)(v0 + 336));
  }
  else
  {
    v17 = Logger.logObject.getter(v1);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Receiver does not support HELLO, skipping", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    *(_DWORD *)(v0 + 600) = 0;
    *(_BYTE *)(v0 + 604) = 3;
    return swift_task_switch(sub_100310300, *(_QWORD *)(v0 + 448), 0);
  }
}

uint64_t sub_1003101C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 592));
  v3 = *(_QWORD *)(v2 + 584);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_10031029C;
  }
  else
  {
    v4 = sub_10031022C;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_10031022C()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;

  v1 = *(_DWORD *)(v0 + 640);
  v2 = *(_BYTE *)(v0 + 644);
  v3 = *(_QWORD *)(v0 + 368);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
  sub_1002443C8(v3, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 604) = v2;
  *(_DWORD *)(v0 + 600) = v1;
  return swift_task_switch(sub_100310300, *(_QWORD *)(v0 + 448), 0);
}

uint64_t sub_10031029C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
  sub_1002443C8(v1, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 604) = 3;
  *(_DWORD *)(v0 + 600) = 0;
  return swift_task_switch(sub_100310300, *(_QWORD *)(v0 + 448), 0);
}

uint64_t sub_100310300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  const char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = *(unsigned __int8 *)(v1 + 604);
  v3 = *(unsigned int *)(v1 + 600);
  v5 = *(_QWORD *)(v1 + 384);
  v4 = *(_QWORD *)(v1 + 392);
  v6 = *(_QWORD *)(v1 + 376);
  v7 = SFAirDropSend.Request.type.getter(a1);
  v8 = SFAirDrop.TransferType.isPeerPayment.getter(v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if ((v8 & 1) != 0 && (((v3 | (v2 << 32)) & 0xFF00000000) != 0x300000000 ? (v9 = (v3 & 2) == 0) : (v9 = 0), v9))
  {
    v10 = *(const char **)(v1 + 576);
    sub_10031C024(*(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552), *(_QWORD *)(v1 + 560));
    swift_bridgeObjectRelease(v10);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Hello response - peerPayment type is not supported by receiver device", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    v15 = *(const char **)(v1 + 504);

    v16 = type metadata accessor for SFAirDropSend.Failure(0);
    v17 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v16, v17, 0, 0);
    v19 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, enum case for SFAirDropSend.Failure.unsupportedConnection(_:), v16);
    swift_willThrow(v19);
    swift_bridgeObjectRelease(v15);
    v20 = *(_QWORD *)(v1 + 432);
    v22 = *(_QWORD *)(v1 + 416);
    v21 = *(_QWORD *)(v1 + 424);
    v23 = *(_QWORD *)(v1 + 392);
    v24 = *(_QWORD *)(v1 + 368);
    v25 = *(_QWORD *)(v1 + 352);
    v27 = *(_QWORD *)(v1 + 320);
    v26 = *(_QWORD *)(v1 + 328);
    v28 = *(_QWORD *)(v1 + 296);
    v43 = *(_QWORD *)(v1 + 288);
    v44 = *(_QWORD *)(v1 + 280);
    v45 = *(_QWORD *)(v1 + 256);
    v46 = *(_QWORD *)(v1 + 232);
    swift_task_dealloc(*(_QWORD *)(v1 + 440));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 496);
    v30 = *(const char **)(v1 + 504);
    v32 = *(_QWORD *)(v1 + 416);
    v33 = *(_QWORD *)(v1 + 400);
    v34 = *(void **)(v1 + 200);
    v35 = *(_QWORD *)(v1 + 184);
    sub_1002B6B38();
    v37 = v36;
    v39 = v38;
    v31(v32, v35, v33);
    v40 = dword_1007C24C4;
    swift_bridgeObjectRetain(v30);
    v41 = v34;
    v42 = (_QWORD *)swift_task_alloc(v40);
    *(_QWORD *)(v1 + 608) = v42;
    *v42 = v1;
    v42[1] = sub_100310610;
    return sub_100494D0C(*(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 416), v37, v39, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 504), *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552));
  }
}

uint64_t sub_100310610()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 608);
  *(_QWORD *)(*v1 + 616) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 448);
    swift_bridgeObjectRelease(*(const char **)(v2 + 576));
    v5 = sub_100310CCC;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 448);
    v5 = sub_100310684;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_100310684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  _QWORD *v27;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 296);
  sub_10029B7C8(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 320));
  v3 = sub_100008384(&qword_1007BA490);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v5 = v4(v2, 1, 1, v3);
  if (v1
    && ((*(unsigned int *)(v0 + 600) | ((unint64_t)*(unsigned __int8 *)(v0 + 604) << 32)) & 0xFF00000000) != 0x300000000
    && (*(_DWORD *)(v0 + 600) & 1) != 0
    && *(_BYTE *)(v0 + 645))
  {
    v6 = *(_QWORD *)(v0 + 576);
    v7 = *(_QWORD *)(v6 + 16);
    v8 = _swiftEmptyArrayStorage;
    if (v7)
    {
      v30 = v3;
      v9 = *(_QWORD *)(v0 + 248);
      v10 = *(_QWORD *)(v0 + 224);
      v32 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain((const char *)v6);
      sub_100229810(0, v7, 0);
      v29 = (const char *)v6;
      v11 = v6 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v31 = *(_QWORD *)(v10 + 72);
      v12 = v10;
      v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v8 = _swiftEmptyArrayStorage;
      do
      {
        v14 = *(_QWORD *)(v0 + 232);
        v15 = *(_QWORD *)(v0 + 216);
        v16 = v13(v14, v11, v15);
        SFSecurityScopedURL.url.getter(v16);
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        {
          sub_100229810(0, v8[2] + 1, 1);
          v8 = v32;
        }
        v18 = v8[2];
        v17 = v8[3];
        if (v18 >= v17 >> 1)
        {
          sub_100229810(v17 > 1, v18 + 1, 1);
          v8 = v32;
        }
        v19 = *(_QWORD *)(v0 + 256);
        v20 = *(_QWORD *)(v0 + 240);
        v8[2] = v18 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, v19, v20);
        v32 = v8;
        v11 += v31;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease(v29);
      v3 = v30;
    }
    v22 = *(_QWORD *)(v0 + 288);
    v21 = *(_QWORD *)(v0 + 296);
    v23 = *(_QWORD *)(v0 + 272);
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(_QWORD *)(v0 + 264);
    SFAirDropSend.Request.id.getter(v5);
    sub_10029D140((const char *)v8, v24, v22);
    v26 = swift_bridgeObjectRelease((const char *)v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v24, v25, v26);
    sub_10000D0F0(v21, &qword_1007BA318);
    v4(v22, 0, 1, v3);
    sub_10022E718(v22, v21, &qword_1007BA318);
  }
  v27 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(_QWORD *)(v0 + 624) = v27;
  *v27 = v0;
  v27[1] = sub_10031093C;
  return SFProgressTask.finalValue.getter(v0 + 16, *(_QWORD *)(v0 + 304));
}

uint64_t sub_10031093C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 624);
  *(_QWORD *)(*v1 + 632) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 448);
    swift_bridgeObjectRelease(*(const char **)(v2 + 576));
    v5 = sub_100310DC4;
    v6 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 448);
    v5 = sub_1003109B0;
  }
  return swift_task_switch(v5, v6, 0);
}

uint64_t sub_1003109B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;

  v35 = *(_DWORD *)(v0 + 600);
  v34 = *(_BYTE *)(v0 + 604);
  v36 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 440);
  v17 = *(_QWORD *)(v0 + 432);
  v18 = *(_QWORD *)(v0 + 424);
  v19 = *(_QWORD *)(v0 + 416);
  v20 = *(_QWORD *)(v0 + 392);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 288);
  v31 = *(_QWORD *)(v0 + 280);
  v32 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 232);
  v15 = *(void **)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 504));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v4, v10);
  v29 = *(_OWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 32);
  v28 = *(_QWORD *)(v0 + 40);
  v27 = *(_BYTE *)(v0 + 48);
  v25 = *(_OWORD *)(v0 + 72);
  v26 = *(_OWORD *)(v0 + 56);
  v23 = *(_OWORD *)(v0 + 104);
  v24 = *(_OWORD *)(v0 + 88);
  sub_100221DB4(v2, v8, _s10AskRequestVMa);
  sub_100244384(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10022E718(v14, v5, &qword_1007BA318);
  v12 = v15;
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v14);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  *(_BYTE *)(v9 + 4) = v34;
  *(_DWORD *)v9 = v35;
  *(_QWORD *)(v9 + 8) = v12;
  *(_OWORD *)(v9 + 16) = v29;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v28;
  *(_BYTE *)(v9 + 48) = v27;
  *(_OWORD *)(v9 + 56) = v26;
  *(_OWORD *)(v9 + 72) = v25;
  *(_OWORD *)(v9 + 88) = v24;
  *(_OWORD *)(v9 + 104) = v23;
  *(_QWORD *)(v9 + 120) = v36;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100310BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 504));
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100310CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 504));
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100310DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease(*(const char **)(v0 + 504));
  sub_10000D0F0(v5, &qword_1007BA318);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1002443C8(v2, _s10AskRequestVMa);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 424);
  v9 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 328);
  v14 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100310EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_100008384(&qword_1007BA300);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B7E48);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s10AskRequestVMa(0);
  v5[16] = v8;
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFNWInterfaceTypeCategory(0);
  v5[18] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[19] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[20] = swift_task_alloc(v11);
  v5[21] = swift_task_alloc(v11);
  v12 = sub_100008384(&qword_1007C5E70);
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFAirDrop.Progress(0);
  v5[23] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[24] = v14;
  v5[25] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008384(&qword_1007BA480);
  v5[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008384(&qword_1007BA488);
  v5[27] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v5[28] = v17;
  v5[29] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFNWInterfaceType(0);
  v5[30] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v5[31] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[32] = swift_task_alloc(v20);
  v5[33] = swift_task_alloc(v20);
  v5[34] = swift_task_alloc(v20);
  v21 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  v5[35] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v5[36] = v22;
  v5[37] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SFAirDropSend.Transfer(0);
  v5[38] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v5[39] = v24;
  v5[40] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v5[41] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v5[42] = v26;
  v5[43] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008384(&qword_1007BA318);
  v5[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v5[45] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v5[46] = v29;
  v5[47] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100008384(&qword_1007BA490);
  v5[48] = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v5[49] = v31;
  v5[50] = swift_task_alloc((*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v32 = static AirDropActor.shared;
  v5[51] = static AirDropActor.shared;
  return swift_task_switch(sub_1003111E0, v32, 0);
}

uint64_t sub_1003111E0()
{
  uint64_t v0;
  char *v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  const char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  __n128 v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  void (*v70)(_QWORD *);
  void (*v71)(_QWORD *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v1 = *(char **)(v0 + 104);
  v2 = *(const char **)&v1[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls];
  *(_QWORD *)(v0 + 416) = v2;
  if (!v2)
    goto LABEL_8;
  v3 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain(v2);
  v4 = sub_10031B4E8(v3);
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease(v2);
    v1 = *(char **)(v0 + 104);
LABEL_8:
    sub_100244384(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 136), _s10AskRequestVMa);
    v16 = Logger.logObject.getter(v1);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 136);
    if (v18)
    {
      v94 = v0 + 56;
      v21 = *(_QWORD *)(v0 + 120);
      v20 = *(_QWORD *)(v0 + 128);
      v22 = swift_slowAlloc(32, -1);
      v97 = swift_slowAlloc(64, -1);
      v103 = v97;
      *(_DWORD *)v22 = 136315651;
      sub_100221F28(v19 + *(int *)(v20 + 20), v21, &qword_1007B7E48);
      v23 = type metadata accessor for SFAirDrop.TransferType(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23);
      v26 = *(_QWORD *)(v0 + 120);
      v100 = v17;
      if ((_DWORD)v25 == 1)
      {
        sub_10000D0F0(v26, &qword_1007B7E48);
        v27 = 0xD000000000000020;
        v28 = (const char *)0x8000000100615E50;
      }
      else
      {
        v27 = SFAirDrop.TransferType.description.getter(v25);
        v28 = v30;
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
      }
      v31 = *(_QWORD *)(v0 + 136);
      v33 = *(_QWORD *)(v0 + 104);
      v32 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 40) = sub_100228BD8(v27, (unint64_t)v28, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v22 + 4);
      swift_bridgeObjectRelease(v28);
      sub_1002443C8(v31, _s10AskRequestVMa);
      *(_WORD *)(v22 + 12) = 2160;
      *(_QWORD *)(v0 + 48) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v94, v22 + 14);
      *(_WORD *)(v22 + 22) = 2081;
      sub_100221F28(v33 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact, v32, &qword_1007BA300);
      v34 = type metadata accessor for SFAirDrop.ContactInfo(0);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34);
      v37 = *(_QWORD *)(v0 + 112);
      if (v36 == 1)
      {
        v38 = 0xD00000000000001CLL;
        sub_10000D0F0(*(_QWORD *)(v0 + 112), &qword_1007BA300);
        v39 = (const char *)0x8000000100615E30;
      }
      else
      {
        v38 = SFAirDrop.ContactInfo.description.getter();
        v39 = v40;
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v34);
      }
      v41 = *(void **)(v0 + 104);
      *(_QWORD *)(v0 + 56) = sub_100228BD8(v38, (unint64_t)v39, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v94, v0 + 64, v22 + 24);
      swift_bridgeObjectRelease(v39);

      _os_log_impl((void *)&_mh_execute_header, v16, v100, "Send StateMachine UPLOAD SKIPPED {type: %s, senderContact: %{private,mask.hash}s}", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy(v97, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {
      v29 = *(void **)(v0 + 104);

      sub_1002443C8(v19, _s10AskRequestVMa);
    }
    v42 = *(_QWORD *)(v0 + 376);
    v44 = *(_QWORD *)(v0 + 344);
    v43 = *(_QWORD *)(v0 + 352);
    v45 = *(_QWORD *)(v0 + 320);
    v46 = *(_QWORD *)(v0 + 296);
    v47 = *(_QWORD *)(v0 + 264);
    v48 = *(_QWORD *)(v0 + 272);
    v49 = *(_QWORD *)(v0 + 256);
    v50 = *(_QWORD *)(v0 + 232);
    v86 = *(_QWORD *)(v0 + 208);
    v88 = *(_QWORD *)(v0 + 200);
    v89 = *(_QWORD *)(v0 + 176);
    v91 = *(_QWORD *)(v0 + 168);
    v93 = *(_QWORD *)(v0 + 160);
    v95 = *(_QWORD *)(v0 + 136);
    v98 = *(_QWORD *)(v0 + 120);
    v101 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 400));
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v98);
    swift_task_dealloc(v101);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 424) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Send StateMachine UPLOAD START", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 96);

  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v11(v10, 1, v8) == 1)
  {
    v12 = *(_QWORD *)(v0 + 400);
    v14 = *(_QWORD *)(v0 + 368);
    v13 = *(_QWORD *)(v0 + 376);
    v15 = *(_QWORD *)(v0 + 360);
    SFAirDropSend.Request.id.getter();
    sub_10029D140(v2, v13, v12);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  else
  {
    v52 = *(_QWORD *)(v0 + 384);
    v53 = *(_QWORD *)(v0 + 352);
    sub_100221F28(*(_QWORD *)(v0 + 96), v53, &qword_1007BA318);
    result = v11(v53, 1, v52);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 32))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
  }
  v54 = *(_QWORD *)(v0 + 400);
  v55 = *(_QWORD *)(v0 + 344);
  v87 = v55;
  v90 = *(_QWORD *)(v0 + 384);
  v92 = *(_QWORD *)(v0 + 336);
  v56 = *(_QWORD *)(v0 + 320);
  v57 = *(_QWORD *)(v0 + 304);
  v58 = *(_QWORD *)(v0 + 312);
  v59 = *(_QWORD **)(v0 + 296);
  v96 = *(_QWORD *)(v0 + 328);
  v99 = *(_QWORD *)(v0 + 288);
  v102 = *(_QWORD *)(v0 + 280);
  v60 = *(char **)(v0 + 80);
  v61 = *(_QWORD *)(v0 + 104)
      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v62 = swift_beginAccess(v61, v0 + 16, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v58 + 16))(v56, v61, v57, v62);
  sub_100305BD8(v56, 0x726566736E617274, (void *)0xEC000000676E6972, v54, v60, v55);
  v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  *(_QWORD *)(v0 + 432) = v63;
  v63(v56, v57);
  v64 = sub_100008384((uint64_t *)&unk_1007C3410);
  *(_QWORD *)(v0 + 440) = v64;
  v65 = (_QWORD *)((char *)v59 + *(int *)(v64 + 64));
  v66 = (char *)v59 + *(int *)(v64 + 80);
  sub_1002B0AF0();
  *v59 = v67;
  v59[1] = v68;
  SFProgressTask.initialValue.getter(v90);
  *v65 = 0;
  v65[1] = 0;
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
  *(_QWORD *)(v0 + 448) = v69;
  v69(v66, v87, v96);
  *(_DWORD *)(v0 + 504) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
  v70 = *(void (**)(_QWORD *))(v99 + 104);
  *(_QWORD *)(v0 + 456) = v70;
  v70(v59);
  sub_1002BC504((uint64_t)v59, v56);
  v71 = *(void (**)(_QWORD *, uint64_t))(v99 + 8);
  *(_QWORD *)(v0 + 464) = v71;
  v71(v59, v102);
  v63(v56, v57);
  v72 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
  *(_QWORD *)(v0 + 472) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
  v73 = *(_QWORD *)&v60[v72];
  if (v73)
  {
    v74 = *(_QWORD *)(v0 + 272);
    swift_retain(*(_QWORD *)&v60[v72]);
    sub_1004FA6E0(v74);
    swift_release(v73);
  }
  else
  {
    if (qword_1007B3D80 != -1)
      swift_once(&qword_1007B3D80, sub_100299F58);
    v75 = type metadata accessor for Logger(0);
    v76 = sub_100221DF8(v75, (uint64_t)qword_1007B7C20);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.error.getter(v77);
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "UPLOAD connection is not active", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }
    v80 = *(_QWORD *)(v0 + 272);
    v81 = *(_QWORD *)(v0 + 240);
    v82 = *(_QWORD *)(v0 + 248);

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v82 + 104))(v80, enum case for SFNWInterfaceType.other(_:), v81);
  }
  SFProgressTask.makeAsyncIterator()(*(_QWORD *)(v0 + 384));
  v83 = static AirDropActor.shared;
  v84 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  *(_QWORD *)(v0 + 480) = v84;
  v85 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 488) = v85;
  *v85 = v0;
  v85[1] = sub_100311ABC;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 208), v83, v84, *(_QWORD *)(v0 + 216), v0 + 64);
}

uint64_t sub_100311ABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 488));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 408);
    swift_bridgeObjectRelease(*(const char **)(v2 + 416));
    v4 = sub_100312440;
    v5 = v3;
  }
  else
  {
    *(_DWORD *)(v2 + 508) = enum case for SFNWInterfaceType.other(_:);
    *(_DWORD *)(v2 + 512) = enum case for SFNWInterfaceTypeCategory.regular(_:);
    v5 = *(_QWORD *)(v2 + 408);
    v4 = sub_100311B48;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100311B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  void (*v105)(char *, uint64_t, uint64_t);
  unsigned int v106;
  uint64_t v107;
  void (*v108)(_QWORD *, _QWORD, uint64_t);
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_QWORD *, _QWORD, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  void (*v122)(_QWORD *, uint64_t);
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  void (*v126)(_QWORD *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v126 = *(void (**)(_QWORD *, uint64_t))(v0 + 464);
    v106 = *(_DWORD *)(v0 + 504);
    v108 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v0 + 456);
    v4 = *(int **)(v0 + 440);
    v97 = *(_QWORD *)(v0 + 416);
    v101 = *(_QWORD *)(v0 + 344);
    v5 = *(_QWORD *)(v0 + 320);
    v99 = *(_QWORD *)(v0 + 328);
    v6 = *(_QWORD **)(v0 + 296);
    v114 = *(_QWORD *)(v0 + 304);
    v102 = *(_QWORD *)(v0 + 280);
    v104 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 448);
    v117 = *(_QWORD *)(v0 + 248);
    v120 = *(_QWORD *)(v0 + 240);
    v123 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v111 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    v7 = (_QWORD *)((char *)v6 + v4[12]);
    v8 = (_QWORD *)((char *)v6 + v4[16]);
    v9 = (char *)v6 + v4[20];
    sub_1002B0AF0();
    *v6 = v10;
    v6[1] = v11;
    *v7 = v97;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v7, enum case for SFAirDrop.Progress.completed(_:), v3);
    *v8 = 0;
    v8[1] = 0;
    v104(v9, v101, v99);
    v108(v6, v106, v102);
    sub_1002BC504((uint64_t)v6, v5);
    v126(v6, v102);
    v123(v5, v114);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v111, 1, 1, v120);
    sub_1002BC9D4(v111, v5);
    sub_10000D0F0(v111, &qword_1007C5E70);
    v12 = ((uint64_t (*)(uint64_t, uint64_t))v123)(v5, v114);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Send StateMachine UPLOAD END", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    v16 = *(_QWORD *)(v0 + 392);
    v127 = *(_QWORD *)(v0 + 384);
    v130 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 336);
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 272);
    v22 = *(_QWORD *)(v0 + 240);
    v21 = *(_QWORD *)(v0 + 248);

    v23 = sub_10029FDFC(0);
    (*(void (**)(uint64_t, uint64_t, __n128))(v21 + 8))(v20, v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v130, v127);
    v24 = *(_QWORD *)(v0 + 376);
    v26 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 352);
    v27 = *(_QWORD *)(v0 + 320);
    v28 = *(_QWORD *)(v0 + 296);
    v29 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 256);
    v32 = *(_QWORD *)(v0 + 232);
    v109 = *(_QWORD *)(v0 + 208);
    v112 = *(_QWORD *)(v0 + 200);
    v115 = *(_QWORD *)(v0 + 176);
    v118 = *(_QWORD *)(v0 + 168);
    v121 = *(_QWORD *)(v0 + 160);
    v124 = *(_QWORD *)(v0 + 136);
    v128 = *(_QWORD *)(v0 + 120);
    v131 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 400));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v30);
    swift_task_dealloc(v29);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v109);
    swift_task_dealloc(v112);
    swift_task_dealloc(v115);
    swift_task_dealloc(v118);
    swift_task_dealloc(v121);
    swift_task_dealloc(v124);
    swift_task_dealloc(v128);
    swift_task_dealloc(v131);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 472);
    v35 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 200), v1, v3);
    v36 = *(_QWORD *)(v35 + v34);
    if (v36)
    {
      v37 = *(_QWORD *)(v0 + 264);
      swift_retain(v36);
      sub_1004FA6E0(v37);
      swift_release(v36);
    }
    else
    {
      if (qword_1007B3D80 != -1)
        swift_once(&qword_1007B3D80, sub_100299F58);
      v38 = type metadata accessor for Logger(0);
      v39 = sub_100221DF8(v38, (uint64_t)qword_1007B7C20);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "UPLOAD connection is not active", v42, 2u);
        swift_slowDealloc(v42, -1, -1);
      }
      v43 = *(unsigned int *)(v0 + 508);
      v44 = *(_QWORD *)(v0 + 264);
      v45 = *(_QWORD *)(v0 + 240);
      v46 = *(_QWORD *)(v0 + 248);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 104))(v44, v43, v45);
    }
    v110 = *(_DWORD *)(v0 + 504);
    v105 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 448);
    v47 = *(int **)(v0 + 440);
    v119 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v122 = *(void (**)(_QWORD *, uint64_t))(v0 + 464);
    v98 = *(_QWORD *)(v0 + 328);
    v100 = *(_QWORD *)(v0 + 344);
    v107 = *(_QWORD *)(v0 + 320);
    v48 = *(_QWORD **)(v0 + 296);
    v113 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v0 + 456);
    v116 = *(_QWORD *)(v0 + 304);
    v103 = *(_QWORD *)(v0 + 280);
    v132 = *(_QWORD *)(v0 + 272);
    v125 = *(_QWORD *)(v0 + 264);
    v129 = *(_QWORD *)(v0 + 240);
    v49 = *(_QWORD *)(v0 + 192);
    v50 = *(_QWORD *)(v0 + 200);
    v51 = *(_QWORD *)(v0 + 184);
    v52 = (char *)v48 + v47[12];
    v53 = (_QWORD *)((char *)v48 + v47[16]);
    v54 = (char *)v48 + v47[20];
    sub_1002B0AF0();
    *v48 = v55;
    v48[1] = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v52, v50, v51);
    *v53 = sub_1002BB098();
    v53[1] = v57;
    v105(v54, v100, v98);
    v113(v48, v110, v103);
    sub_1002BC504((uint64_t)v48, v107);
    v122(v48, v103);
    v119(v107, v116);
    v58 = sub_100220D78(&qword_1007BA108, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType, (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
    v59 = dispatch thunk of static Equatable.== infix(_:_:)(v125, v132, v129, v58);
    if ((v59 & 1) == 0)
    {
      v60 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 432);
      v61 = *(_QWORD *)(v0 + 320);
      v62 = *(_QWORD *)(v0 + 304);
      v63 = *(_QWORD *)(v0 + 240);
      v64 = *(_QWORD *)(v0 + 248);
      v65 = *(_QWORD *)(v0 + 176);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v64 + 16))(v65, *(_QWORD *)(v0 + 264), v63);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
      sub_1002BC9D4(v65, v61);
      sub_10000D0F0(v65, &qword_1007C5E70);
      v59 = v60(v61, v62);
    }
    v66 = *(unsigned int *)(v0 + 512);
    v67 = *(_QWORD *)(v0 + 264);
    v133 = *(_QWORD *)(v0 + 256);
    v69 = *(_QWORD *)(v0 + 240);
    v68 = *(_QWORD *)(v0 + 248);
    v71 = *(_QWORD *)(v0 + 160);
    v70 = *(_QWORD *)(v0 + 168);
    v72 = *(_QWORD *)(v0 + 144);
    v73 = *(_QWORD *)(v0 + 152);
    SFNWInterfaceType.category()(v59);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v71, v66, v72);
    v74 = sub_100220D78(&qword_1007BA498, (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceTypeCategory, (uint64_t)&protocol conformance descriptor for SFNWInterfaceTypeCategory);
    v75 = dispatch thunk of static Equatable.== infix(_:_:)(v70, v71, v72, v74);
    v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v76(v71, v72);
    v76(v70, v72);
    v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v133, v67, v69);
    if ((v75 & 1) != 0)
    {
      v78 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 8);
      v78(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    }
    else
    {
      v80 = *(_QWORD *)(v0 + 248);
      v79 = *(_QWORD *)(v0 + 256);
      v134 = *(_QWORD *)(v0 + 240);
      v82 = *(_QWORD *)(v0 + 160);
      v81 = *(_QWORD *)(v0 + 168);
      v83 = *(_QWORD *)(v0 + 144);
      v84 = SFNWInterfaceType.category()(v77);
      SFNWInterfaceType.category()(v84);
      v85 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v82, v83, v74);
      v76(v82, v83);
      v76(v81, v83);
      v78 = *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8);
      v86 = v78(v79, v134);
      if ((v85 & 1) == 0)
      {
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v89 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "AirDrop interface changed to high priority category", v89, 2u);
          swift_slowDealloc(v89, -1, -1);
        }

        sub_1002BD3EC(3.0);
      }
    }
    v90 = *(_QWORD *)(v0 + 480);
    v92 = *(_QWORD *)(v0 + 264);
    v91 = *(_QWORD *)(v0 + 272);
    v94 = *(_QWORD *)(v0 + 240);
    v93 = *(_QWORD *)(v0 + 248);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    v78(v91, v94);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v91, v92, v94);
    v95 = static AirDropActor.shared;
    v96 = (_QWORD *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 496) = v96;
    *v96 = v0;
    v96[1] = sub_1003123D4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(*(_QWORD *)(v0 + 208), v95, v90, *(_QWORD *)(v0 + 216), v0 + 64);
  }
}

uint64_t sub_1003123D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 496));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 408);
    swift_bridgeObjectRelease(*(const char **)(v2 + 416));
    v4 = sub_100312440;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 408);
    v4 = sub_100311B48;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100312440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 352);
  v14 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v9, *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc(v2);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v3);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v6);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v9);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003125C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v5 + 1208) = v4;
  *(_BYTE *)(v5 + 2045) = a4;
  *(_QWORD *)(v5 + 1200) = a3;
  *(_QWORD *)(v5 + 1192) = a2;
  *(_QWORD *)(v5 + 1184) = a1;
  v6 = _s10AskRequestVMa(0);
  *(_QWORD *)(v5 + 1216) = v6;
  *(_QWORD *)(v5 + 1224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007BA398);
  *(_QWORD *)(v5 + 1232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008384(&qword_1007BA3A0);
  *(_QWORD *)(v5 + 1240) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 1248) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1256) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 1264) = swift_task_alloc(v10);
  v11 = _s16ExchangeResponseVMa(0);
  *(_QWORD *)(v5 + 1272) = v11;
  *(_QWORD *)(v5 + 1280) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  *(_QWORD *)(v5 + 1288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(_s15ExchangeRequestVMa(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1296) = swift_task_alloc(v13);
  *(_QWORD *)(v5 + 1304) = swift_task_alloc(v13);
  v14 = type metadata accessor for SFAirDropSend.Failure(0);
  *(_QWORD *)(v5 + 1312) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v5 + 1320) = v15;
  *(_QWORD *)(v5 + 1328) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDropSend.Transfer.State(0);
  *(_QWORD *)(v5 + 1336) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v5 + 1344) = v17;
  *(_QWORD *)(v5 + 1352) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFAirDropSend.Transfer(0);
  *(_QWORD *)(v5 + 1360) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v5 + 1368) = v19;
  *(_QWORD *)(v5 + 1376) = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008384(&qword_1007BA3A8);
  *(_QWORD *)(v5 + 1384) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA300) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1392) = swift_task_alloc(v21);
  *(_QWORD *)(v5 + 1400) = swift_task_alloc(v21);
  *(_QWORD *)(v5 + 1408) = swift_task_alloc(v21);
  v22 = type metadata accessor for SFAirDrop.ContactInfo(0);
  *(_QWORD *)(v5 + 1416) = v22;
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v5 + 1424) = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1432) = swift_task_alloc(v24);
  *(_QWORD *)(v5 + 1440) = swift_task_alloc(v24);
  v25 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007BA320) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1448) = swift_task_alloc(v25);
  *(_QWORD *)(v5 + 1456) = swift_task_alloc(v25);
  *(_QWORD *)(v5 + 1464) = swift_task_alloc(v25);
  v26 = type metadata accessor for SFAirDrop.ContactRequest(0);
  *(_QWORD *)(v5 + 1472) = v26;
  v27 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v5 + 1480) = v27;
  v28 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1488) = swift_task_alloc(v28);
  *(_QWORD *)(v5 + 1496) = swift_task_alloc(v28);
  *(_QWORD *)(v5 + 1504) = swift_task_alloc(v28);
  *(_QWORD *)(v5 + 1512) = swift_task_alloc(v28);
  *(_QWORD *)(v5 + 1520) = swift_task_alloc(v28);
  *(_QWORD *)(v5 + 1528) = swift_task_alloc(v28);
  v29 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B7E48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1536) = swift_task_alloc(v29);
  *(_QWORD *)(v5 + 1544) = swift_task_alloc(v29);
  v30 = type metadata accessor for SFAirDrop.TransferType(0);
  *(_QWORD *)(v5 + 1552) = v30;
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v5 + 1560) = v31;
  v32 = (*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 1568) = swift_task_alloc(v32);
  *(_QWORD *)(v5 + 1576) = swift_task_alloc(v32);
  *(_QWORD *)(v5 + 1584) = swift_task_alloc(v32);
  *(_QWORD *)(v5 + 1592) = swift_task_alloc(v32);
  *(_QWORD *)(v5 + 1600) = swift_task_alloc(v32);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v33 = static AirDropActor.shared;
  *(_QWORD *)(v5 + 1608) = static AirDropActor.shared;
  return swift_task_switch(sub_100312984, v33, 0);
}

uint64_t sub_100312984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  const char *v7;
  const char *v8;
  __n128 v9;
  int v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  __n128 v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  void *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  const char *v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t);
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  _BOOL4 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  void (*v131)(uint64_t, uint64_t);
  void (*v132)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  const char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  const char *v142;
  uint64_t v143;
  __n128 v144;
  void (*v145)(uint64_t, __n128);
  char v146;
  void (*v147)(uint64_t, uint64_t);
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  const char *v154;
  uint64_t v155;
  uint64_t v156;
  const char *v157;
  uint64_t v158;
  uint64_t v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(void);
  uint64_t v167;
  __n128 v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  const char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  const char *v193;
  uint64_t v194;
  uint64_t v195;
  NSObject *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  os_log_type_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t, __n128);
  uint64_t v220;
  void (*v221)(uint64_t, uint64_t, __n128);
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225[2];

  v1 = *(_QWORD *)(v0 + 1560);
  v2 = *(_QWORD *)(v0 + 1552);
  v3 = *(_QWORD *)(v0 + 1544);
  v4 = *(_QWORD *)(v0 + 1216);
  sub_100221F28(*(_QWORD *)(v0 + 1184) + *(int *)(v4 + 20), v3, &qword_1007B7E48);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v5(v3, 1, v2) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 1544), &qword_1007B7E48);
    goto LABEL_15;
  }
  v6 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1560) + 32))(*(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1544), *(_QWORD *)(v0 + 1552));
  SFAirDrop.TransferType.exchangeType.getter(v6);
  v8 = v7;
  v9 = swift_bridgeObjectRelease(v7);
  if (!v8)
  {
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1560) + 8))(*(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1552), v9);
LABEL_15:
    v34 = *(void **)(v0 + 1208);
    sub_100244384(*(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1224), _s10AskRequestVMa);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v189 = v4;
      v214 = v36;
      v37 = *(_QWORD *)(v0 + 1424);
      v38 = *(_QWORD *)(v0 + 1416);
      v39 = *(_QWORD *)(v0 + 1392);
      v40 = *(_QWORD *)(v0 + 1208);
      v41 = swift_slowAlloc(38, -1);
      v194 = swift_slowAlloc(64, -1);
      v225[0] = v194;
      *(_DWORD *)v41 = 141558787;
      *(_QWORD *)(v0 + 1136) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1136, v0 + 1144, v41 + 4);
      *(_WORD *)(v41 + 12) = 2081;
      sub_100221F28(v40 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact, v39, &qword_1007BA300);
      v196 = v35;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v38) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 1392), &qword_1007BA300);
        v42 = 0xD00000000000001CLL;
        v43 = (const char *)0x8000000100615E30;
      }
      else
      {
        v46 = *(_QWORD *)(v0 + 1424);
        v47 = *(_QWORD *)(v0 + 1416);
        v48 = *(_QWORD *)(v0 + 1392);
        v42 = SFAirDrop.ContactInfo.description.getter();
        v43 = v49;
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
      }
      v200 = *(_QWORD *)(v0 + 1552);
      v50 = *(_QWORD *)(v0 + 1536);
      v51 = *(_QWORD *)(v0 + 1224);
      v52 = *(void **)(v0 + 1208);
      *(_QWORD *)(v0 + 1128) = sub_100228BD8(v42, (unint64_t)v43, v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1128, v0 + 1136, v41 + 14);
      swift_bridgeObjectRelease(v43);

      *(_WORD *)(v41 + 22) = 1024;
      v53 = sub_10031AF00();
      v54 = (void *)static NSUserDefaults.airdrop.getter(v53);
      v55 = SFAirDropUserDefaults.alwaysExchangeContacts.getter();

      *(_DWORD *)(v0 + 2032) = v55 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2032, v0 + 2036, v41 + 24);
      *(_WORD *)(v41 + 28) = 2080;
      sub_100221F28(v51 + *(int *)(v189 + 20), v50, &qword_1007B7E48);
      v56 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v50, 1, v200);
      if ((_DWORD)v56 == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 1536), &qword_1007B7E48);
        v57 = 0xD000000000000020;
        v58 = (const char *)0x8000000100615E50;
      }
      else
      {
        v59 = *(_QWORD *)(v0 + 1560);
        v60 = *(_QWORD *)(v0 + 1552);
        v61 = *(_QWORD *)(v0 + 1536);
        v57 = SFAirDrop.TransferType.description.getter(v56);
        v58 = v62;
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v60);
      }
      v63 = *(_QWORD *)(v0 + 1224);
      *(_QWORD *)(v0 + 1144) = sub_100228BD8(v57, (unint64_t)v58, v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1144, v0 + 1152, v41 + 30);
      swift_bridgeObjectRelease(v58);
      sub_1002443C8(v63, _s10AskRequestVMa);
      _os_log_impl((void *)&_mh_execute_header, v196, v214, "Send StateMachine CONTACTS SKIPPED - Not needed {senderContact: %{private,mask.hash}s, alwaysExchangeContacts: %{BOOL}d, type: %s}", (uint8_t *)v41, 0x26u);
      swift_arrayDestroy(v194, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v194, -1, -1);
      swift_slowDealloc(v41, -1, -1);

    }
    else
    {
      v44 = *(_QWORD *)(v0 + 1224);
      v45 = *(void **)(v0 + 1208);

      sub_1002443C8(v44, _s10AskRequestVMa);
    }
LABEL_24:
    v64 = *(_QWORD *)(v0 + 1592);
    v65 = *(_QWORD *)(v0 + 1584);
    v66 = *(_QWORD *)(v0 + 1576);
    v67 = *(_QWORD *)(v0 + 1568);
    v68 = *(_QWORD *)(v0 + 1544);
    v69 = *(_QWORD *)(v0 + 1536);
    v70 = *(_QWORD *)(v0 + 1528);
    v71 = *(_QWORD *)(v0 + 1520);
    v72 = *(_QWORD *)(v0 + 1512);
    v172 = *(_QWORD *)(v0 + 1504);
    v173 = *(_QWORD *)(v0 + 1496);
    v174 = *(_QWORD *)(v0 + 1488);
    v175 = *(_QWORD *)(v0 + 1464);
    v176 = *(_QWORD *)(v0 + 1456);
    v177 = *(_QWORD *)(v0 + 1448);
    v178 = *(_QWORD *)(v0 + 1440);
    v179 = *(_QWORD *)(v0 + 1432);
    v180 = *(_QWORD *)(v0 + 1408);
    v181 = *(_QWORD *)(v0 + 1400);
    v182 = *(_QWORD *)(v0 + 1392);
    v183 = *(_QWORD *)(v0 + 1384);
    v185 = *(_QWORD *)(v0 + 1376);
    v187 = *(_QWORD *)(v0 + 1352);
    v190 = *(_QWORD *)(v0 + 1328);
    v192 = *(_QWORD *)(v0 + 1304);
    v195 = *(_QWORD *)(v0 + 1296);
    v197 = *(_QWORD *)(v0 + 1288);
    v201 = *(_QWORD *)(v0 + 1280);
    v205 = *(_QWORD *)(v0 + 1264);
    v209 = *(_QWORD *)(v0 + 1256);
    v215 = *(_QWORD *)(v0 + 1232);
    v220 = *(_QWORD *)(v0 + 1224);
    swift_task_dealloc(*(_QWORD *)(v0 + 1600));
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v172);
    swift_task_dealloc(v173);
    swift_task_dealloc(v174);
    swift_task_dealloc(v175);
    swift_task_dealloc(v176);
    swift_task_dealloc(v177);
    swift_task_dealloc(v178);
    swift_task_dealloc(v179);
    swift_task_dealloc(v180);
    swift_task_dealloc(v181);
    swift_task_dealloc(v182);
    swift_task_dealloc(v183);
    swift_task_dealloc(v185);
    swift_task_dealloc(v187);
    swift_task_dealloc(v190);
    swift_task_dealloc(v192);
    swift_task_dealloc(v195);
    swift_task_dealloc(v197);
    swift_task_dealloc(v201);
    swift_task_dealloc(v205);
    swift_task_dealloc(v209);
    swift_task_dealloc(v215);
    swift_task_dealloc(v220);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
  v10 = *(unsigned __int8 *)(v0 + 2045);
  v11 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1560) + 16);
  v12 = v11(*(_QWORD *)(v0 + 1592), *(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1552), v9);
  v13 = *(_QWORD *)(v0 + 1592);
  v14 = *(_QWORD *)(v0 + 1560);
  v15 = *(_QWORD *)(v0 + 1552);
  if ((v10 & 1) != 0)
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(*(_QWORD *)(v0 + 1592), *(_QWORD *)(v0 + 1552));
  }
  else
  {
    v16 = SFAirDrop.TransferType.isOnlyExchange.getter(v12);
    v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(v13, v15);
    if ((v16 & 1) == 0)
    {
      v18 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 1568), *(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1552));
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      v21 = os_log_type_enabled(v19, v20);
      v22 = *(_QWORD *)(v0 + 1600);
      v23 = *(_QWORD *)(v0 + 1568);
      v24 = *(_QWORD *)(v0 + 1552);
      if (v21)
      {
        v204 = v0 + 1104;
        v219 = (void (*)(uint64_t, uint64_t, __n128))v17;
        v25 = swift_slowAlloc(22, -1);
        v26 = swift_slowAlloc(64, -1);
        v225[0] = v26;
        *(_DWORD *)v25 = 136315394;
        if (v10 == 2)
          v27 = 0xD000000000000024;
        else
          v27 = 0x65736C6166;
        v213 = v22;
        if (v10 == 2)
          v28 = (const char *)0x8000000100615E80;
        else
          v28 = (const char *)0xE500000000000000;
        *(_QWORD *)(v0 + 1096) = sub_100228BD8(v27, (unint64_t)v28, v225);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1096, v204, v25 + 4);
        swift_bridgeObjectRelease(v28);
        *(_WORD *)(v25 + 12) = 2080;
        v29 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        v30 = dispatch thunk of CustomStringConvertible.description.getter(v24, v29);
        v32 = (const char *)v31;
        *(_QWORD *)(v0 + 1104) = sub_100228BD8(v30, v31, v225);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v204, v0 + 1112, v25 + 14);
        v33 = swift_bridgeObjectRelease(v32);
        v219(v23, v24, v33);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Send StateMachine CONTACTS SKIPPED - {receiverSupportsContactExchange: %s, type: %s} ", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);

        ((void (*)(uint64_t, uint64_t))v219)(v213, v24);
      }
      else
      {
        v17(*(_QWORD *)(v0 + 1568), *(_QWORD *)(v0 + 1552));

        v17(v22, v24);
      }
      goto LABEL_24;
    }
  }
  *(_QWORD *)(v0 + 1616) = v17;
  v74 = *(_QWORD *)(v0 + 1600);
  v75 = *(_QWORD *)(v0 + 1584);
  v76 = *(_QWORD *)(v0 + 1552);
  *(_QWORD *)(v0 + 1624) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  v77 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v75, v74, v76);
  v78 = Logger.logObject.getter(v77);
  v79 = static os_log_type_t.default.getter();
  v80 = os_log_type_enabled(v78, v79);
  v81 = *(_QWORD *)(v0 + 1584);
  v82 = *(_QWORD *)(v0 + 1552);
  if (v80)
  {
    v221 = (void (*)(uint64_t, uint64_t, __n128))v17;
    v83 = swift_slowAlloc(22, -1);
    v84 = swift_slowAlloc(64, -1);
    v225[0] = v84;
    *(_DWORD *)v83 = 136315394;
    v85 = 1702195828;
    if ((v10 & 1) == 0)
      v85 = 0x65736C6166;
    v86 = 0xE400000000000000;
    if ((v10 & 1) == 0)
      v86 = 0xE500000000000000;
    if (v10 == 2)
      v87 = 0xD000000000000024;
    else
      v87 = v85;
    if (v10 == 2)
      v88 = (const char *)0x8000000100615E80;
    else
      v88 = (const char *)v86;
    *(_QWORD *)(v0 + 1120) = sub_100228BD8(v87, (unint64_t)v88, v225);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1120, v0 + 1128, v83 + 4);
    swift_bridgeObjectRelease(v88);
    *(_WORD *)(v83 + 12) = 2080;
    v89 = sub_100220D78((unint64_t *)&unk_1007C5E50, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
    v90 = dispatch thunk of CustomStringConvertible.description.getter(v82, v89);
    v92 = (const char *)v91;
    *(_QWORD *)(v0 + 1160) = sub_100228BD8(v90, v91, v225);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1160, v0 + 1168, v83 + 14);
    v93 = swift_bridgeObjectRelease(v92);
    v221(v81, v82, v93);
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Send StateMachine CONTACTS START {receiverSupportsContactExchange: %s, type: %s}", (uint8_t *)v83, 0x16u);
    swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v84, -1, -1);
    v94 = v83;
    v17 = (void (*)(uint64_t, uint64_t))v221;
    swift_slowDealloc(v94, -1, -1);

  }
  else
  {

    v17(v81, v82);
  }
  v95 = *(_QWORD *)(v0 + 1472);
  v96 = *(_QWORD *)(v0 + 1464);
  v97 = *(_QWORD *)(v0 + 1200);
  v98 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1480) + 48);
  *(_QWORD *)(v0 + 1632) = v98;
  v99 = v98(v97, 1, v95);
  *(_DWORD *)(v0 + 2036) = v99;
  sub_100221F28(v97, v96, &qword_1007BA320);
  if (v98(v96, 1, v95) == 1)
  {
    v100 = *(_QWORD *)(v0 + 1424);
    v101 = *(_QWORD *)(v0 + 1416);
    v102 = *(_QWORD *)(v0 + 1408);
    v103 = *(_QWORD *)(v0 + 1208);
    sub_10000D0F0(*(_QWORD *)(v0 + 1464), &qword_1007BA320);
    sub_100221F28(v103 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact, v102, &qword_1007BA300);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v102, 1, v101) == 1)
    {
      v104 = sub_10000D0F0(*(_QWORD *)(v0 + 1408), &qword_1007BA300);
      v105 = Logger.logObject.getter(v104);
      v106 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v105, v106))
      {
        v107 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v107 = 0;
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Send StateMachine CONTACTS FAILED - Unexpectedly missing sender contact", v107, 2u);
        swift_slowDealloc(v107, -1, -1);
      }
      v108 = *(_QWORD *)(v0 + 1600);
      v109 = *(_QWORD *)(v0 + 1552);

      v17(v108, v109);
      goto LABEL_24;
    }
    v116 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1424) + 32))(*(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1408), *(_QWORD *)(v0 + 1416));
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v117, v118))
    {
      v119 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v119 = 0;
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Send StateMachine SHARE CONTACT PERMISSION START", v119, 2u);
      swift_slowDealloc(v119, -1, -1);
    }
    v120 = *(_QWORD *)(v0 + 1440);
    v121 = v99 == 1;
    v122 = *(_QWORD *)(v0 + 1424);
    v123 = *(_QWORD *)(v0 + 1416);
    v124 = *(_QWORD *)(v0 + 1384);
    v210 = *(_QWORD *)(v0 + 1376);
    v216 = *(_QWORD *)(v0 + 1368);
    v222 = *(_QWORD *)(v0 + 1360);
    v125 = *(_QWORD *)(v0 + 1352);
    v126 = *(_QWORD *)(v0 + 1344);
    v206 = *(_QWORD *)(v0 + 1336);

    sub_100317A30(v120, v121, v124);
    v127 = v125 + *(int *)(sub_100008384(&qword_1007BA3B0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v125, v120, v123);
    v128 = sub_100008384((uint64_t *)&unk_1007BB630);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v127, v124, v128);
    v129 = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
    v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 104);
    *(_QWORD *)(v0 + 1640) = v130;
    v130(v125, v129, v206);
    sub_1002BC504(v125, v210);
    v131 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
    *(_QWORD *)(v0 + 1648) = v131;
    v131(v125, v206);
    v132 = *(void (**)(uint64_t, uint64_t))(v216 + 8);
    *(_QWORD *)(v0 + 1656) = v132;
    v132(v210, v222);
    return swift_task_switch(sub_100313A9C, 0, 0);
  }
  else
  {
    v110 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1480) + 32))(*(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
    v111 = *(_QWORD *)(v0 + 1424);
    v112 = *(_QWORD *)(v0 + 1416);
    v113 = *(_QWORD *)(v0 + 1400);
    SFAirDrop.ContactRequest.contact.getter(v110);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v113, 1, v112) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v0 + 1400), &qword_1007BA300);
      v114 = 0;
      v115 = 0;
    }
    else
    {
      v133 = *(_QWORD *)(v0 + 1424);
      v134 = *(_QWORD *)(v0 + 1416);
      v135 = *(_QWORD *)(v0 + 1400);
      v114 = SFAirDrop.ContactInfo.accountHandle.getter();
      v115 = v136;
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v135, v134);
    }
    v137 = *(_QWORD *)(v0 + 1528);
    v138 = *(_QWORD *)(v0 + 1512);
    v139 = *(_QWORD *)(v0 + 1480);
    v140 = *(_QWORD *)(v0 + 1472);
    sub_10038F828(v114, v115, (_QWORD *)(v0 + 960));
    v141 = *(_QWORD *)(v0 + 960);
    v142 = *(const char **)(v0 + 968);
    v143 = *(_QWORD *)(v0 + 976);
    v217 = *(_QWORD *)(v0 + 992);
    v223 = *(_QWORD *)(v0 + 984);
    v207 = *(_QWORD *)(v0 + 1008);
    v211 = *(_QWORD *)(v0 + 1000);
    v198 = *(_QWORD *)(v0 + 1024);
    v202 = *(_QWORD *)(v0 + 1016);
    v191 = *(_QWORD *)(v0 + 1040);
    v193 = *(const char **)(v0 + 1032);
    v144 = swift_bridgeObjectRelease(v115);
    *(_DWORD *)(v0 + 2040) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    v145 = *(void (**)(uint64_t, __n128))(v139 + 104);
    *(_QWORD *)(v0 + 1696) = v145;
    v145(v138, v144);
    v146 = static SFAirDrop.ContactRequest.== infix(_:_:)(v137, v138);
    v147 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
    *(_QWORD *)(v0 + 1704) = v147;
    v147(v138, v140);
    if ((v146 & 1) != 0)
    {
      v141 = 0;
      v142 = 0;
      v143 = 0;
      v148 = 0;
      v149 = 0;
      v150 = 0;
      v151 = 0;
      v152 = 0;
      v153 = 0;
      v154 = 0;
      v155 = 0;
    }
    else
    {
      sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
      v149 = v217;
      v148 = v223;
      v151 = v207;
      v150 = v211;
      v153 = v198;
      v152 = v202;
      v155 = v191;
      v154 = v193;
    }
    v218 = v149;
    v224 = v148;
    v208 = v151;
    v212 = v150;
    v203 = v152;
    *(_QWORD *)(v0 + 1792) = v155;
    *(_QWORD *)(v0 + 1784) = v154;
    *(_QWORD *)(v0 + 1776) = v153;
    *(_QWORD *)(v0 + 1768) = v152;
    *(_QWORD *)(v0 + 1760) = v151;
    *(_QWORD *)(v0 + 1752) = v150;
    *(_QWORD *)(v0 + 1744) = v149;
    *(_QWORD *)(v0 + 1736) = v148;
    *(_QWORD *)(v0 + 1728) = v143;
    *(_QWORD *)(v0 + 1720) = v142;
    *(_QWORD *)(v0 + 1712) = v141;
    v184 = *(_QWORD *)(v0 + 1512);
    v156 = v153;
    v199 = v153;
    v157 = v154;
    v158 = *(_QWORD *)(v0 + 1480);
    v159 = *(_QWORD *)(v0 + 1376);
    v160 = v142;
    v186 = v142;
    v161 = *(_QWORD *)(v0 + 1368);
    v162 = *(_QWORD *)(v0 + 1360);
    v163 = *(_QWORD *)(v0 + 1288);
    v164 = v143;
    v165 = *(_QWORD *)(v0 + 1208);
    v188 = *(_QWORD *)(v0 + 1304);
    *(_QWORD *)(v0 + 784) = v141;
    *(_QWORD *)(v0 + 792) = v160;
    *(_QWORD *)(v0 + 800) = v164;
    *(_QWORD *)(v0 + 808) = v148;
    *(_QWORD *)(v0 + 816) = v149;
    *(_QWORD *)(v0 + 824) = v150;
    *(_QWORD *)(v0 + 832) = v151;
    *(_QWORD *)(v0 + 840) = v152;
    *(_QWORD *)(v0 + 848) = v156;
    *(_QWORD *)(v0 + 856) = v157;
    *(_QWORD *)(v0 + 864) = v155;
    v166 = *(void (**)(void))(v158 + 16);
    *(_QWORD *)(v0 + 1800) = v166;
    v166();
    v167 = v165 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    v168 = swift_beginAccess(v167, v0 + 1072, 0, 0);
    v169 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v161 + 16))(v159, v167, v162, v168);
    SFAirDropSend.Transfer.id.getter(v169);
    v170 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
    *(_QWORD *)(v0 + 1808) = v170;
    v170(v159, v162);
    sub_10031B004(v141, v186, v164, v224, v218, v212, v208, v203, v199, v157);
    sub_100478C34(v184, v163, v0 + 784, v188);
    sub_10029DD8C(v188);
    v171 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 1816) = v171;
    *v171 = v0;
    v171[1] = sub_10031467C;
    return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1240));
  }
}

uint64_t sub_100313A9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[173];
  v2 = swift_task_alloc(32);
  v0[208] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[209] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[210] = v4;
  *v4 = v0;
  v4[1] = sub_100313B44;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0[190], &unk_1007BA3B8, v2, sub_10031AF94, v3, 0, 0, v0[184]);
}

uint64_t sub_100313B44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1680);
  *(_QWORD *)(*(_QWORD *)v1 + 1688) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10031412C;
    v5 = 0;
  }
  else
  {
    v6 = v2[209];
    v7 = v2[208];
    v8 = v2[201];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    v4 = sub_100313BC4;
    v5 = v8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100313BC4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(uint64_t, _QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  __n128 v32;
  void (*v33)(uint64_t, __n128);
  char v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void);
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1480) + 32))(*(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1520), *(_QWORD *)(v0 + 1472));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine SHARE CONTACT PERMISSION END", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send StateMachine EXCHANGING START", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v72 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v66 = *(void (**)(uint64_t, uint64_t))(v0 + 1648);
  v9 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1640);
  v10 = *(_QWORD *)(v0 + 1528);
  v11 = *(_QWORD *)(v0 + 1480);
  v12 = *(_QWORD *)(v0 + 1472);
  v81 = *(_QWORD *)(v0 + 1440);
  v75 = *(_QWORD *)(v0 + 1424);
  v78 = *(_QWORD *)(v0 + 1416);
  v69 = *(_QWORD *)(v0 + 1384);
  v13 = *(_QWORD *)(v0 + 1376);
  v64 = *(_QWORD *)(v0 + 1360);
  v14 = *(_QWORD *)(v0 + 1352);
  v15 = *(_QWORD *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v10, v12);
  v9(v14, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v15);
  sub_1002BC504(v14, v13);
  v66(v14, v15);
  v72(v13, v64);
  sub_10000D0F0(v69, &qword_1007BA3A8);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v81, v78);
  v17 = *(_QWORD *)(v0 + 1424);
  v18 = *(_QWORD *)(v0 + 1416);
  v19 = *(_QWORD *)(v0 + 1400);
  SFAirDrop.ContactRequest.contact.getter(v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v18) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 1400), &qword_1007BA300);
    v20 = 0;
    v21 = 0;
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 1424);
    v23 = *(_QWORD *)(v0 + 1416);
    v24 = *(_QWORD *)(v0 + 1400);
    v20 = SFAirDrop.ContactInfo.accountHandle.getter();
    v21 = v25;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  v26 = *(_QWORD *)(v0 + 1528);
  v27 = *(_QWORD *)(v0 + 1512);
  v28 = *(_QWORD *)(v0 + 1480);
  v29 = *(_QWORD *)(v0 + 1472);
  sub_10038F828(v20, v21, (_QWORD *)(v0 + 960));
  v30 = *(_QWORD *)(v0 + 960);
  v31 = *(const char **)(v0 + 968);
  v82 = *(_QWORD *)(v0 + 984);
  v84 = *(_QWORD *)(v0 + 976);
  v79 = *(_QWORD *)(v0 + 992);
  v73 = *(_QWORD *)(v0 + 1008);
  v76 = *(_QWORD *)(v0 + 1000);
  v67 = *(_QWORD *)(v0 + 1024);
  v70 = *(_QWORD *)(v0 + 1016);
  v63 = *(_QWORD *)(v0 + 1040);
  v65 = *(const char **)(v0 + 1032);
  v32 = swift_bridgeObjectRelease(v21);
  *(_DWORD *)(v0 + 2040) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
  v33 = *(void (**)(uint64_t, __n128))(v28 + 104);
  *(_QWORD *)(v0 + 1696) = v33;
  v33(v27, v32);
  v34 = static SFAirDrop.ContactRequest.== infix(_:_:)(v26, v27);
  v35 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  *(_QWORD *)(v0 + 1704) = v35;
  v35(v27, v29);
  if ((v34 & 1) != 0)
  {
    v30 = 0;
    v31 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
  }
  else
  {
    sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B004);
    v37 = v82;
    v36 = v84;
    v38 = v79;
    v40 = v73;
    v39 = v76;
    v42 = v67;
    v41 = v70;
    v44 = v63;
    v43 = v65;
  }
  v80 = v38;
  v83 = v37;
  v74 = v40;
  v77 = v39;
  v68 = v42;
  v71 = v41;
  *(_QWORD *)(v0 + 1792) = v44;
  *(_QWORD *)(v0 + 1784) = v43;
  *(_QWORD *)(v0 + 1776) = v42;
  *(_QWORD *)(v0 + 1768) = v41;
  *(_QWORD *)(v0 + 1760) = v40;
  *(_QWORD *)(v0 + 1752) = v39;
  *(_QWORD *)(v0 + 1744) = v38;
  *(_QWORD *)(v0 + 1736) = v37;
  *(_QWORD *)(v0 + 1728) = v36;
  *(_QWORD *)(v0 + 1720) = v31;
  *(_QWORD *)(v0 + 1712) = v30;
  v61 = *(_QWORD *)(v0 + 1512);
  v45 = v42;
  v46 = v43;
  v47 = *(_QWORD *)(v0 + 1480);
  v48 = *(_QWORD *)(v0 + 1376);
  v49 = v31;
  v50 = *(_QWORD *)(v0 + 1368);
  v51 = *(_QWORD *)(v0 + 1360);
  v62 = *(_QWORD *)(v0 + 1304);
  v52 = *(_QWORD *)(v0 + 1288);
  v53 = *(_QWORD *)(v0 + 1208);
  *(_QWORD *)(v0 + 784) = v30;
  *(_QWORD *)(v0 + 792) = v49;
  *(_QWORD *)(v0 + 800) = v36;
  *(_QWORD *)(v0 + 808) = v37;
  *(_QWORD *)(v0 + 816) = v38;
  *(_QWORD *)(v0 + 824) = v39;
  *(_QWORD *)(v0 + 832) = v40;
  *(_QWORD *)(v0 + 840) = v41;
  *(_QWORD *)(v0 + 848) = v45;
  *(_QWORD *)(v0 + 856) = v46;
  *(_QWORD *)(v0 + 864) = v44;
  v54 = *(void (**)(void))(v47 + 16);
  *(_QWORD *)(v0 + 1800) = v54;
  v54();
  v55 = v53 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v56 = swift_beginAccess(v55, v0 + 1072, 0, 0);
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v50 + 16))(v48, v55, v51, v56);
  SFAirDropSend.Transfer.id.getter(v57);
  v58 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  *(_QWORD *)(v0 + 1808) = v58;
  v58(v48, v51);
  sub_10031B004(v30, v49, v36, v83, v80, v77, v74, v71, v68, v46);
  sub_100478C34(v61, v52, v0 + 784, v62);
  sub_10029DD8C(v62);
  v59 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(_QWORD *)(v0 + 1816) = v59;
  *v59 = v0;
  v59[1] = sub_10031467C;
  return SFProgressTask.finalValue.getter(*(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1240));
}

uint64_t sub_10031412C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[208];
  v2 = v0[201];
  swift_task_dealloc(v0[209]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100314178, v2, 0);
}

uint64_t sub_100314178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 1688);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1312);
  *(_QWORD *)(v0 + 1112) = v1;
  swift_errorRetain(v1);
  v4 = sub_100008384(&qword_1007B5A60);
  if (!swift_dynamicCast(v2, v0 + 1112, v4, v3, 0))
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
    v22 = *(_QWORD *)(v0 + 1600);
    v23 = *(_QWORD *)(v0 + 1552);
    v24 = *(_QWORD *)(v0 + 1440);
    v25 = *(_QWORD *)(v0 + 1424);
    v26 = *(_QWORD *)(v0 + 1416);
    sub_10000D0F0(*(_QWORD *)(v0 + 1384), &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    v21(v22, v23);
LABEL_8:
    swift_errorRelease(*(_QWORD *)(v0 + 1112));
    v36 = *(_QWORD *)(v0 + 1592);
    v37 = *(_QWORD *)(v0 + 1584);
    v38 = *(_QWORD *)(v0 + 1576);
    v39 = *(_QWORD *)(v0 + 1568);
    v40 = *(_QWORD *)(v0 + 1544);
    v41 = *(_QWORD *)(v0 + 1536);
    v42 = *(_QWORD *)(v0 + 1528);
    v43 = *(_QWORD *)(v0 + 1520);
    v44 = *(_QWORD *)(v0 + 1512);
    v45 = *(_QWORD *)(v0 + 1504);
    v46 = *(_QWORD *)(v0 + 1496);
    v47 = *(_QWORD *)(v0 + 1488);
    v48 = *(_QWORD *)(v0 + 1464);
    v49 = *(_QWORD *)(v0 + 1456);
    v50 = *(_QWORD *)(v0 + 1448);
    v51 = *(_QWORD *)(v0 + 1440);
    v52 = *(_QWORD *)(v0 + 1432);
    v53 = *(_QWORD *)(v0 + 1408);
    v54 = *(_QWORD *)(v0 + 1400);
    v55 = *(_QWORD *)(v0 + 1392);
    v56 = *(_QWORD *)(v0 + 1384);
    v57 = *(_QWORD *)(v0 + 1376);
    v58 = *(_QWORD *)(v0 + 1352);
    v59 = *(_QWORD *)(v0 + 1328);
    v60 = *(_QWORD *)(v0 + 1304);
    v62 = *(_QWORD *)(v0 + 1296);
    v64 = *(_QWORD *)(v0 + 1288);
    v66 = *(_QWORD *)(v0 + 1280);
    v68 = *(_QWORD *)(v0 + 1264);
    v70 = *(_QWORD *)(v0 + 1256);
    v72 = *(_QWORD *)(v0 + 1232);
    v73 = *(_QWORD *)(v0 + 1224);
    swift_task_dealloc(*(_QWORD *)(v0 + 1600));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1320) + 88))(*(_QWORD *)(v0 + 1328), *(_QWORD *)(v0 + 1312)) != enum case for SFAirDropSend.Failure.cancelled(_:))
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
    v28 = *(_QWORD *)(v0 + 1600);
    v29 = *(_QWORD *)(v0 + 1552);
    v30 = *(_QWORD *)(v0 + 1440);
    v31 = *(_QWORD *)(v0 + 1424);
    v32 = *(_QWORD *)(v0 + 1416);
    v33 = *(_QWORD *)(v0 + 1328);
    v34 = *(_QWORD *)(v0 + 1320);
    v35 = *(_QWORD *)(v0 + 1312);
    sub_10000D0F0(*(_QWORD *)(v0 + 1384), &qword_1007BA3A8);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v27(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    goto LABEL_8;
  }
  v5 = swift_errorRelease(*(_QWORD *)(v0 + 1688));
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send StateMachine SHARE CONTACT PERMISSION END - Not exchanging contacts", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1656);
  v9 = *(_QWORD *)(v0 + 1512);
  v10 = *(_QWORD *)(v0 + 1480);
  v11 = *(_QWORD *)(v0 + 1472);
  v12 = *(_QWORD *)(v0 + 1376);
  v61 = *(_QWORD *)(v0 + 1368);
  v13 = *(_QWORD *)(v0 + 1360);
  v14 = *(_QWORD *)(v0 + 1288);
  v69 = *(_QWORD *)(v0 + 1240);
  v71 = *(_QWORD *)(v0 + 1256);
  v15 = *(_QWORD *)(v0 + 1208);
  v65 = *(_QWORD *)(v0 + 1296);
  v67 = *(_QWORD *)(v0 + 1192);

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v11);
  v16 = v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  v17 = swift_beginAccess(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer, v0 + 1048, 0, 0);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v61 + 16))(v12, v16, v13, v17);
  SFAirDropSend.Transfer.id.getter(v18);
  v63(v12, v13);
  *(_QWORD *)(v0 + 776) = 0;
  *(_OWORD *)(v0 + 744) = 0u;
  *(_OWORD *)(v0 + 760) = 0u;
  *(_OWORD *)(v0 + 712) = 0u;
  *(_OWORD *)(v0 + 728) = 0u;
  *(_OWORD *)(v0 + 696) = 0u;
  sub_100478C34(v9, v14, v0 + 696, v65);
  v19 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 2016) = v19;
  *(_QWORD *)(v19 + 16) = v67;
  *(_QWORD *)(v19 + 24) = v65;
  swift_asyncLet_begin(v0 + 16, 0, v69, &unk_1007BA3C8, v19, v71);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1256), sub_100316F1C, v0 + 656);
}

uint64_t sub_10031467C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1816);
  *(_QWORD *)(*(_QWORD *)v1 + 1824) = v0;
  swift_task_dealloc(v3);
  v4 = v2[201];
  (*(void (**)(_QWORD, _QWORD))(v2[156] + 8))(v2[158], v2[155]);
  if (v0)
    v5 = sub_1003171A8;
  else
    v5 = sub_100314700;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100314700()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  const char *v43;
  __n128 v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124[2];

  v1 = sub_100478C40(*(_QWORD *)(v0 + 1504));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine EXCHANGING END", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1800);
  v6 = *(_QWORD *)(v0 + 1504);
  v7 = *(_QWORD *)(v0 + 1496);
  v8 = *(_QWORD *)(v0 + 1480);
  v9 = *(_QWORD *)(v0 + 1472);

  v5(v7, v6, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9) == enum case for SFAirDrop.ContactRequest.contact(_:))
  {
    v10 = *(_QWORD *)(v0 + 1496);
    v11 = *(_QWORD *)(v0 + 1456);
    v12 = *(_QWORD *)(v0 + 1432);
    v13 = *(_QWORD *)(v0 + 1424);
    v14 = *(_QWORD *)(v0 + 1416);
    v15 = *(_QWORD *)(v0 + 1200);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1480) + 96))(v10, *(_QWORD *)(v0 + 1472));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v10, v14);
    v16 = sub_100221F28(v15, v11, &qword_1007BA320);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v111 = *(_QWORD *)(v0 + 1472);
      v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1632);
      v19 = *(_QWORD *)(v0 + 1456);
      v20 = *(_QWORD *)(v0 + 1448);
      v21 = *(_DWORD *)(v0 + 2036) == 1;
      v22 = swift_slowAlloc(28, -1);
      v23 = swift_slowAlloc(32, -1);
      v124[0] = v23;
      *(_DWORD *)v22 = 67109635;
      *(_DWORD *)(v0 + 2024) = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2024, v0 + 2028, v22 + 4);
      *(_WORD *)(v22 + 8) = 2160;
      *(_QWORD *)(v0 + 1176) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1176, v0 + 1184, v22 + 10);
      *(_WORD *)(v22 + 18) = 2081;
      sub_100221F28(v19, v20, &qword_1007BA320);
      if (v114(v20, 1, v111) == 1)
      {
        sub_10000D0F0(*(_QWORD *)(v0 + 1448), &qword_1007BA320);
        v24 = (const char *)0x8000000100615EB0;
        v25 = 0xD000000000000013;
      }
      else
      {
        v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
        v64 = *(_QWORD *)(v0 + 1472);
        v65 = *(_QWORD *)(v0 + 1448);
        v25 = SFAirDrop.ContactRequest.description.getter();
        v24 = v66;
        v63(v65, v64);
      }
      v67 = *(_QWORD *)(v0 + 1456);
      *(_QWORD *)(v0 + 1168) = sub_100228BD8(v25, (unint64_t)v24, v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1168, v0 + 1176, v22 + 20);
      swift_bridgeObjectRelease(v24);
      sub_10000D0F0(v67, &qword_1007BA320);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Should Import CONTACT START {afterAirDrop: %{BOOL}d, contactRequest: %{private,mask.hash}s}", (uint8_t *)v22, 0x1Cu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {
      v45 = *(_QWORD *)(v0 + 1456);

      sub_10000D0F0(v45, &qword_1007BA320);
    }
    v68 = *(_QWORD *)(v0 + 1432);
    v69 = *(_QWORD *)(v0 + 1424);
    v70 = *(_QWORD *)(v0 + 1416);
    v117 = *(_QWORD *)(v0 + 1376);
    v120 = *(_QWORD *)(v0 + 1360);
    v123 = *(void (**)(uint64_t, uint64_t))(v0 + 1808);
    v71 = *(_QWORD *)(v0 + 1352);
    v72 = *(_QWORD *)(v0 + 1344);
    v73 = *(_QWORD *)(v0 + 1336);
    v74 = *(_QWORD *)(v0 + 1232);
    sub_10031853C(v68, *(_DWORD *)(v0 + 2036) == 1, v74);
    v75 = v71 + *(int *)(sub_100008384(&qword_1007BA3D8) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v71, v68, v70);
    v76 = sub_100008384((uint64_t *)&unk_1007C3400);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v75, v74, v76);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v72 + 104))(v71, enum case for SFAirDropSend.Transfer.State.waitingForImportContactResponse(_:), v73);
    sub_1002BC504(v71, v117);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
    v123(v117, v120);
    return swift_task_switch(sub_100315064, 0, 0);
  }
  else
  {
    v121 = (_QWORD *)(v0 + 960);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1800);
    v27 = *(_QWORD *)(v0 + 1504);
    v28 = *(_QWORD *)(v0 + 1488);
    v29 = *(_QWORD *)(v0 + 1472);
    (*(void (**)(_QWORD, uint64_t))(v0 + 1704))(*(_QWORD *)(v0 + 1496), v29);
    v30 = v26(v28, v27, v29);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    v33 = os_log_type_enabled(v31, v32);
    v34 = *(_QWORD *)(v0 + 1736);
    v115 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
    v109 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1704);
    v112 = *(_QWORD *)(v0 + 1600);
    v118 = *(_QWORD *)(v0 + 1552);
    v35 = *(_QWORD *)(v0 + 1488);
    v105 = *(_QWORD *)(v0 + 1304);
    v107 = *(_QWORD *)(v0 + 1528);
    v101 = *(_QWORD *)(v0 + 1504);
    v103 = *(_QWORD *)(v0 + 1280);
    v97 = *(_QWORD *)(v0 + 1760);
    v99 = *(_QWORD *)(v0 + 1768);
    v93 = *(_QWORD *)(v0 + 1744);
    v95 = *(_QWORD *)(v0 + 1752);
    if (v33)
    {
      v36 = *(_QWORD *)(v0 + 1472);
      v89 = *(_QWORD *)(v0 + 1736);
      v91 = *(const char **)(v0 + 1720);
      v85 = *(_QWORD *)(v0 + 1776);
      v87 = *(_QWORD *)(v0 + 1728);
      v81 = *(const char **)(v0 + 1784);
      v83 = *(_QWORD *)(v0 + 1712);
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v124[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v39 = sub_100220D78(&qword_1007BA3D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      v40 = v36;
      v41 = dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
      v43 = (const char *)v42;
      *(_QWORD *)(v0 + 1152) = sub_100228BD8(v41, v42, v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1152, v0 + 1160, v37 + 4);
      v44 = swift_bridgeObjectRelease(v43);
      v109(v35, v40, v44);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Import CONTACT SKIP. No contact from receiver {exchangeContactResponse: %s}", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      sub_10031B09C(v83, v91, v87, v89, v93, v95, v97, v99, v85, v81);
      sub_10031B134(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
      ((void (*)(uint64_t, uint64_t))v109)(v101, v40);
      sub_1002443C8(v103, _s16ExchangeResponseVMa);
      sub_1002443C8(v105, _s15ExchangeRequestVMa);
      ((void (*)(uint64_t, uint64_t))v109)(v107, v40);
    }
    else
    {
      v46 = v31;
      v47 = *(_QWORD *)(v0 + 1776);
      v48 = *(_QWORD *)(v0 + 1472);
      v49 = *(const char **)(v0 + 1784);
      v50 = *(_QWORD *)(v0 + 1728);
      v51 = *(const char **)(v0 + 1720);
      v52 = *(_QWORD *)(v0 + 1712);

      ((void (*)(uint64_t, uint64_t))v109)(v35, v48);
      sub_10031B09C(v52, v51, v50, v34, v93, v95, v97, v99, v47, v49);
      sub_10031B134(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
      ((void (*)(uint64_t, uint64_t))v109)(v101, v48);
      sub_1002443C8(v103, _s16ExchangeResponseVMa);
      sub_1002443C8(v105, _s15ExchangeRequestVMa);
      ((void (*)(uint64_t, uint64_t))v109)(v107, v48);
    }
    v115(v112, v118);
    v53 = *(_QWORD *)(v0 + 1592);
    v54 = *(_QWORD *)(v0 + 1584);
    v55 = *(_QWORD *)(v0 + 1576);
    v56 = *(_QWORD *)(v0 + 1568);
    v57 = *(_QWORD *)(v0 + 1544);
    v58 = *(_QWORD *)(v0 + 1536);
    v59 = *(_QWORD *)(v0 + 1528);
    v60 = *(_QWORD *)(v0 + 1520);
    v61 = *(_QWORD *)(v0 + 1512);
    v77 = *(_QWORD *)(v0 + 1504);
    v78 = *(_QWORD *)(v0 + 1496);
    v79 = *(_QWORD *)(v0 + 1488);
    v80 = *(_QWORD *)(v0 + 1464);
    v82 = *(_QWORD *)(v0 + 1456);
    v84 = *(_QWORD *)(v0 + 1448);
    v86 = *(_QWORD *)(v0 + 1440);
    v88 = *(_QWORD *)(v0 + 1432);
    v90 = *(_QWORD *)(v0 + 1408);
    v92 = *(_QWORD *)(v0 + 1400);
    v94 = *(_QWORD *)(v0 + 1392);
    v96 = *(_QWORD *)(v0 + 1384);
    v98 = *(_QWORD *)(v0 + 1376);
    v100 = *(_QWORD *)(v0 + 1352);
    v102 = *(_QWORD *)(v0 + 1328);
    v104 = *(_QWORD *)(v0 + 1304);
    v106 = *(_QWORD *)(v0 + 1296);
    v108 = *(_QWORD *)(v0 + 1288);
    v110 = *(_QWORD *)(v0 + 1280);
    v113 = *(_QWORD *)(v0 + 1264);
    v116 = *(_QWORD *)(v0 + 1256);
    v119 = *(_QWORD *)(v0 + 1232);
    v122 = *(_QWORD *)(v0 + 1224);
    swift_task_dealloc(*(_QWORD *)(v0 + 1600));
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v94);
    swift_task_dealloc(v96);
    swift_task_dealloc(v98);
    swift_task_dealloc(v100);
    swift_task_dealloc(v102);
    swift_task_dealloc(v104);
    swift_task_dealloc(v106);
    swift_task_dealloc(v108);
    swift_task_dealloc(v110);
    swift_task_dealloc(v113);
    swift_task_dealloc(v116);
    swift_task_dealloc(v119);
    swift_task_dealloc(v122);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_100315064()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[154];
  v2 = swift_task_alloc(32);
  v0[229] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[230] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[231] = v4;
  *v4 = v0;
  v4[1] = sub_100315114;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)((char *)v0 + 2044, &unk_1007BA3E8, v2, sub_10031B1F4, v3, 0, 0, &type metadata for Bool);
}

uint64_t sub_100315114()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1848);
  *(_QWORD *)(*(_QWORD *)v1 + 1856) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003156B4;
    v5 = 0;
  }
  else
  {
    v6 = (char *)v2 + 2044;
    v7 = v2[230];
    v8 = v2[229];
    v9 = v2[201];
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    v6[2] = *v6;
    v4 = sub_1003151A8;
    v5 = v9;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003151A8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;
  int v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v1 + 2046);
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v1 + 2028) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 2028, v1 + 2032, v5 + 4);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Should Import CONTACT END {shouldImportContact: %{BOOL}d}", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(unsigned __int8 *)(v1 + 2046);

  if (v6 == 1)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v1 + 1616);
    v9 = *(_QWORD *)(v1 + 1576);
    v10 = *(_QWORD *)(v1 + 1552);
    v11 = SFAirDropSend.Request.type.getter(v7);
    v12 = SFAirDrop.TransferType.isOnlyExchange.getter(v11);
    v8(v9, v10);
    v69 = (char *)&dword_1007B9770 + dword_1007B9770;
    v13 = (_QWORD *)swift_task_alloc(unk_1007B9774);
    *(_QWORD *)(v1 + 1864) = v13;
    *v13 = v1;
    v13[1] = sub_1003159F8;
    return ((uint64_t (*)(_QWORD, _QWORD))v69)(*(_QWORD *)(v1 + 1432), v12 & 1);
  }
  else
  {
    v15 = Logger.logObject.getter(v7);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Import CONTACT SKIP. Declined.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    v41 = *(_OWORD *)(v1 + 1776);
    v46 = *(_QWORD *)(v1 + 1768);
    v42 = *(_QWORD *)(v1 + 1760);
    v18 = *(_QWORD *)(v1 + 1752);
    v19 = *(_QWORD *)(v1 + 1744);
    v20 = *(_QWORD *)(v1 + 1736);
    v21 = *(_QWORD *)(v1 + 1728);
    v22 = *(const char **)(v1 + 1720);
    v23 = *(_QWORD *)(v1 + 1712);
    v67 = *(_QWORD *)(v1 + 1600);
    v70 = *(void (**)(uint64_t, uint64_t))(v1 + 1616);
    v63 = *(_QWORD *)(v1 + 1528);
    v65 = *(_QWORD *)(v1 + 1552);
    v57 = *(_QWORD *)(v1 + 1504);
    v59 = *(void (**)(uint64_t, uint64_t))(v1 + 1704);
    v53 = *(_QWORD *)(v1 + 1472);
    v44 = *(_QWORD *)(v1 + 1424);
    v48 = *(_QWORD *)(v1 + 1416);
    v50 = *(_QWORD *)(v1 + 1432);
    v61 = *(_QWORD *)(v1 + 1304);
    v55 = *(_QWORD *)(v1 + 1280);
    v24 = *(_QWORD *)(v1 + 1232);

    sub_10031B09C(v23, v22, v21, v20, v19, v18, v42, v46, v41, *((const char **)&v41 + 1));
    sub_10031B134((_QWORD *)(v1 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_10000D0F0(v24, &qword_1007BA398);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v50, v48);
    v59(v57, v53);
    sub_1002443C8(v55, _s16ExchangeResponseVMa);
    sub_1002443C8(v61, _s15ExchangeRequestVMa);
    v59(v63, v53);
    v70(v67, v65);
    v25 = *(_QWORD *)(v1 + 1592);
    v26 = *(_QWORD *)(v1 + 1584);
    v27 = *(_QWORD *)(v1 + 1576);
    v28 = *(_QWORD *)(v1 + 1568);
    v29 = *(_QWORD *)(v1 + 1544);
    v30 = *(_QWORD *)(v1 + 1536);
    v31 = *(_QWORD *)(v1 + 1528);
    v32 = *(_QWORD *)(v1 + 1520);
    v33 = *(_QWORD *)(v1 + 1512);
    v34 = *(_QWORD *)(v1 + 1504);
    v35 = *(_QWORD *)(v1 + 1496);
    v36 = *(_QWORD *)(v1 + 1488);
    v37 = *(_QWORD *)(v1 + 1464);
    v38 = *(_QWORD *)(v1 + 1456);
    v39 = *(_QWORD *)(v1 + 1448);
    v40 = *(_QWORD *)(v1 + 1440);
    *(_QWORD *)&v41 = *(_QWORD *)(v1 + 1432);
    v43 = *(_QWORD *)(v1 + 1408);
    v45 = *(_QWORD *)(v1 + 1400);
    v47 = *(_QWORD *)(v1 + 1392);
    v49 = *(_QWORD *)(v1 + 1384);
    v51 = *(_QWORD *)(v1 + 1376);
    v52 = *(_QWORD *)(v1 + 1352);
    v54 = *(_QWORD *)(v1 + 1328);
    v56 = *(_QWORD *)(v1 + 1304);
    v58 = *(_QWORD *)(v1 + 1296);
    v60 = *(_QWORD *)(v1 + 1288);
    v62 = *(_QWORD *)(v1 + 1280);
    v64 = *(_QWORD *)(v1 + 1264);
    v66 = *(_QWORD *)(v1 + 1256);
    v68 = *(_QWORD *)(v1 + 1232);
    v71 = *(_QWORD *)(v1 + 1224);
    swift_task_dealloc(*(_QWORD *)(v1 + 1600));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v54);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v71);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(0, 0);
  }
}

uint64_t sub_1003156B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[229];
  v2 = v0[201];
  swift_task_dealloc(v0[230]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100315700, v2, 0);
}

uint64_t sub_100315700()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
  v44 = *(_QWORD *)(v0 + 1600);
  v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v40 = *(_QWORD *)(v0 + 1528);
  v42 = *(_QWORD *)(v0 + 1552);
  v2 = *(_QWORD *)(v0 + 1504);
  v3 = *(_QWORD *)(v0 + 1472);
  v4 = *(_QWORD *)(v0 + 1432);
  v5 = *(_QWORD *)(v0 + 1424);
  v6 = *(_QWORD *)(v0 + 1416);
  v38 = *(_QWORD *)(v0 + 1304);
  v7 = *(_QWORD *)(v0 + 1280);
  v8 = *(_QWORD *)(v0 + 1232);
  sub_10031B09C(*(_QWORD *)(v0 + 1712), *(const char **)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(const char **)(v0 + 1784));
  sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_10000D0F0(v8, &qword_1007BA398);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1002443C8(v7, _s16ExchangeResponseVMa);
  sub_1002443C8(v38, _s15ExchangeRequestVMa);
  v1(v40, v3);
  v46(v44, v42);
  v9 = *(_QWORD *)(v0 + 1592);
  v10 = *(_QWORD *)(v0 + 1584);
  v11 = *(_QWORD *)(v0 + 1576);
  v12 = *(_QWORD *)(v0 + 1568);
  v13 = *(_QWORD *)(v0 + 1544);
  v14 = *(_QWORD *)(v0 + 1536);
  v15 = *(_QWORD *)(v0 + 1528);
  v16 = *(_QWORD *)(v0 + 1520);
  v17 = *(_QWORD *)(v0 + 1512);
  v19 = *(_QWORD *)(v0 + 1504);
  v20 = *(_QWORD *)(v0 + 1496);
  v21 = *(_QWORD *)(v0 + 1488);
  v22 = *(_QWORD *)(v0 + 1464);
  v23 = *(_QWORD *)(v0 + 1456);
  v24 = *(_QWORD *)(v0 + 1448);
  v25 = *(_QWORD *)(v0 + 1440);
  v26 = *(_QWORD *)(v0 + 1432);
  v27 = *(_QWORD *)(v0 + 1408);
  v28 = *(_QWORD *)(v0 + 1400);
  v29 = *(_QWORD *)(v0 + 1392);
  v30 = *(_QWORD *)(v0 + 1384);
  v31 = *(_QWORD *)(v0 + 1376);
  v32 = *(_QWORD *)(v0 + 1352);
  v33 = *(_QWORD *)(v0 + 1328);
  v34 = *(_QWORD *)(v0 + 1304);
  v35 = *(_QWORD *)(v0 + 1296);
  v36 = *(_QWORD *)(v0 + 1288);
  v37 = *(_QWORD *)(v0 + 1280);
  v39 = *(_QWORD *)(v0 + 1264);
  v41 = *(_QWORD *)(v0 + 1256);
  v43 = *(_QWORD *)(v0 + 1232);
  v45 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003159F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 1864);
  v4[234] = a1;
  v4[235] = a2;
  v4[236] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_1003164E0;
  else
    v6 = sub_100315A6C;
  return swift_task_switch(v6, v4[201], 0);
}

uint64_t sub_100315A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v54;
  uint8_t *v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (*v151)(uint64_t, uint64_t);
  NSObject *v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;

  v2 = *(_QWORD *)(v1 + 1880);
  v155 = (_QWORD *)(v1 + 960);
  if (v2)
  {
    v3 = (uint64_t *)(*(_QWORD *)(v1 + 1280) + *(int *)(*(_QWORD *)(v1 + 1272) + 36));
    v4 = *v3;
    *(_QWORD *)(v1 + 1896) = *v3;
    v5 = (const char *)v3[1];
    *(_QWORD *)(v1 + 1904) = v5;
    v6 = v3[2];
    *(_QWORD *)(v1 + 1912) = v6;
    v7 = v3[3];
    *(_QWORD *)(v1 + 1920) = v7;
    v8 = v3[4];
    *(_QWORD *)(v1 + 1928) = v8;
    v9 = v3[5];
    *(_QWORD *)(v1 + 1936) = v9;
    v10 = v3[6];
    *(_QWORD *)(v1 + 1944) = v10;
    v11 = v3[7];
    *(_QWORD *)(v1 + 1952) = v11;
    v12 = v3[8];
    *(_QWORD *)(v1 + 1960) = v12;
    v13 = (const char *)v3[9];
    *(_QWORD *)(v1 + 1968) = v13;
    v14 = v3[10];
    *(_QWORD *)(v1 + 1976) = v14;
    if (!v13)
    {
      v29 = Logger.logObject.getter(a1);
      v54 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v54, "Import Identity SKIP. Not provided", v55, 2u);
        swift_slowDealloc(v55, -1, -1);
      }
      goto LABEL_15;
    }
    v129 = v4;
    v133 = v2;
    v151 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 1704);
    v15 = *(void (**)(uint64_t, uint64_t))(v1 + 1696);
    v16 = *(unsigned int *)(v1 + 2040);
    v17 = *(_QWORD *)(v1 + 1512);
    v137 = *(_QWORD *)(v1 + 1472);
    v142 = *(_QWORD *)(v1 + 1528);
    *(_QWORD *)(v1 + 872) = v4;
    *(_QWORD *)(v1 + 880) = v5;
    *(_QWORD *)(v1 + 888) = v6;
    *(_QWORD *)(v1 + 896) = v7;
    *(_QWORD *)(v1 + 904) = v8;
    *(_QWORD *)(v1 + 912) = v9;
    *(_QWORD *)(v1 + 920) = v10;
    *(_QWORD *)(v1 + 928) = v11;
    v111 = v12;
    *(_QWORD *)(v1 + 936) = v12;
    *(_QWORD *)(v1 + 944) = v13;
    *(_QWORD *)(v1 + 952) = v14;
    v18 = v9;
    v15(v17, v16);
    v118 = v5;
    swift_bridgeObjectRetain(v5);
    v19 = v6;
    v20 = v6;
    v21 = v8;
    v22 = v18;
    sub_100244404(v20, v7);
    sub_10022E4A8(v21, v18);
    v125 = v10;
    sub_10022E4A8(v10, v11);
    swift_bridgeObjectRetain(v13);
    v23 = static SFAirDrop.ContactRequest.== infix(_:_:)(v142, v17);
    v24 = v151(v17, v137);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter();
    v152 = v25;
    v27 = os_log_type_enabled(v25, v26);
    if ((v23 & 1) != 0)
    {
      if (v27)
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        v29 = v152;
        _os_log_impl((void *)&_mh_execute_header, v152, v26, "Exchange Contact IDENTITY IMPORT SKIP. User chose to only receive", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
        sub_10031B09C(v129, v118, v19, v7, v21, v22, v125, v11, v111, v13);
      }
      else
      {
        sub_10031B09C(v129, v118, v19, v7, v21, v22, v125, v11, v111, v13);
        v29 = v25;
      }
LABEL_15:

      v63 = *(void (**)(uint64_t, uint64_t))(v1 + 1704);
      v149 = *(_QWORD *)(v1 + 1600);
      v153 = *(void (**)(uint64_t, uint64_t))(v1 + 1616);
      v140 = *(_QWORD *)(v1 + 1528);
      v145 = *(_QWORD *)(v1 + 1552);
      v64 = *(_QWORD *)(v1 + 1504);
      v65 = *(_QWORD *)(v1 + 1472);
      v66 = *(_QWORD *)(v1 + 1432);
      v67 = *(_QWORD *)(v1 + 1424);
      v68 = *(_QWORD *)(v1 + 1416);
      v69 = *(_QWORD *)(v1 + 1304);
      v70 = *(_QWORD *)(v1 + 1280);
      v71 = *(_QWORD *)(v1 + 1232);
      sub_10031B09C(*(_QWORD *)(v1 + 1712), *(const char **)(v1 + 1720), *(_QWORD *)(v1 + 1728), *(_QWORD *)(v1 + 1736), *(_QWORD *)(v1 + 1744), *(_QWORD *)(v1 + 1752), *(_QWORD *)(v1 + 1760), *(_QWORD *)(v1 + 1768), *(_QWORD *)(v1 + 1776), *(const char **)(v1 + 1784));
      sub_10031B134(v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
      sub_10000D0F0(v71, &qword_1007BA398);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
      v63(v64, v65);
      sub_1002443C8(v70, _s16ExchangeResponseVMa);
      sub_1002443C8(v69, _s15ExchangeRequestVMa);
      v63(v140, v65);
      v153(v149, v145);
      v154 = *(_QWORD *)(v1 + 1872);
      v158 = *(_QWORD *)(v1 + 1880);
      v72 = *(_QWORD *)(v1 + 1592);
      v73 = *(_QWORD *)(v1 + 1584);
      v74 = *(_QWORD *)(v1 + 1576);
      v75 = *(_QWORD *)(v1 + 1568);
      v76 = *(_QWORD *)(v1 + 1544);
      v77 = *(_QWORD *)(v1 + 1536);
      v78 = *(_QWORD *)(v1 + 1528);
      v79 = *(_QWORD *)(v1 + 1520);
      v80 = *(_QWORD *)(v1 + 1512);
      v81 = *(_QWORD *)(v1 + 1504);
      v83 = *(_QWORD *)(v1 + 1496);
      v85 = *(_QWORD *)(v1 + 1488);
      v87 = *(_QWORD *)(v1 + 1464);
      v89 = *(_QWORD *)(v1 + 1456);
      v91 = *(_QWORD *)(v1 + 1448);
      v94 = *(_QWORD *)(v1 + 1440);
      v96 = *(_QWORD *)(v1 + 1432);
      v98 = *(_QWORD *)(v1 + 1408);
      v101 = *(_QWORD *)(v1 + 1400);
      v104 = *(_QWORD *)(v1 + 1392);
      v107 = *(_QWORD *)(v1 + 1384);
      v110 = *(_QWORD *)(v1 + 1376);
      v114 = *(_QWORD *)(v1 + 1352);
      v117 = *(_QWORD *)(v1 + 1328);
      v121 = *(_QWORD *)(v1 + 1304);
      v124 = *(_QWORD *)(v1 + 1296);
      v128 = *(_QWORD *)(v1 + 1288);
      v132 = *(_QWORD *)(v1 + 1280);
      v136 = *(_QWORD *)(v1 + 1264);
      v141 = *(_QWORD *)(v1 + 1256);
      v146 = *(_QWORD *)(v1 + 1232);
      v150 = *(_QWORD *)(v1 + 1224);
      swift_task_dealloc(*(_QWORD *)(v1 + 1600));
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      swift_task_dealloc(v76);
      swift_task_dealloc(v77);
      swift_task_dealloc(v78);
      swift_task_dealloc(v79);
      swift_task_dealloc(v80);
      swift_task_dealloc(v81);
      swift_task_dealloc(v83);
      swift_task_dealloc(v85);
      swift_task_dealloc(v87);
      swift_task_dealloc(v89);
      swift_task_dealloc(v91);
      swift_task_dealloc(v94);
      swift_task_dealloc(v96);
      swift_task_dealloc(v98);
      swift_task_dealloc(v101);
      swift_task_dealloc(v104);
      swift_task_dealloc(v107);
      swift_task_dealloc(v110);
      swift_task_dealloc(v114);
      swift_task_dealloc(v117);
      swift_task_dealloc(v121);
      swift_task_dealloc(v124);
      swift_task_dealloc(v128);
      swift_task_dealloc(v132);
      swift_task_dealloc(v136);
      swift_task_dealloc(v141);
      swift_task_dealloc(v146);
      swift_task_dealloc(v150);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v154, v158);
    }
    if (v27)
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Import Identity CONTINUE. Attempting identity import", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }
    v57 = *(_QWORD *)(v1 + 1280);
    v58 = *(_QWORD *)(v1 + 1272);

    v59 = (uint64_t *)(v57 + *(int *)(v58 + 32));
    v60 = *v59;
    *(_QWORD *)(v1 + 1984) = *v59;
    v61 = v59[1];
    *(_QWORD *)(v1 + 1992) = v61;
    sub_100244404(v60, v61);
    v157 = (char *)&dword_1007B97A0 + dword_1007B97A0;
    v62 = (_QWORD *)swift_task_alloc(unk_1007B97A4);
    *(_QWORD *)(v1 + 2000) = v62;
    *v62 = v1;
    v62[1] = sub_1003167D8;
    return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, uint64_t))v157)(v1 + 872, v60, v61, *(_QWORD *)(v1 + 1872), v133);
  }
  else
  {
    v30 = Logger.logObject.getter(a1);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Import CONTACT FAILED", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    v95 = *(_OWORD *)(v1 + 1776);
    v112 = *(_QWORD *)(v1 + 1768);
    v102 = *(_QWORD *)(v1 + 1752);
    v105 = *(_QWORD *)(v1 + 1760);
    v99 = *(_QWORD *)(v1 + 1744);
    v92 = *(_QWORD *)(v1 + 1736);
    v33 = *(_QWORD *)(v1 + 1728);
    v34 = *(const char **)(v1 + 1720);
    v35 = *(_QWORD *)(v1 + 1712);
    v36 = *(void (**)(uint64_t, uint64_t))(v1 + 1704);
    v143 = *(_QWORD *)(v1 + 1600);
    v147 = *(void (**)(uint64_t, uint64_t))(v1 + 1616);
    v134 = *(_QWORD *)(v1 + 1528);
    v138 = *(_QWORD *)(v1 + 1552);
    v126 = *(_QWORD *)(v1 + 1504);
    v37 = *(_QWORD *)(v1 + 1472);
    v108 = *(_QWORD *)(v1 + 1424);
    v115 = *(_QWORD *)(v1 + 1416);
    v119 = *(_QWORD *)(v1 + 1432);
    v38 = *(_QWORD *)(v1 + 1320);
    v39 = *(_QWORD *)(v1 + 1312);
    v130 = *(_QWORD *)(v1 + 1304);
    v122 = *(_QWORD *)(v1 + 1280);
    v40 = *(_QWORD *)(v1 + 1232);

    v41 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v39, v41, 0, 0);
    v43 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v42, enum case for SFAirDropSend.Failure.badRequest(_:), v39);
    swift_willThrow(v43);
    sub_10031B09C(v35, v34, v33, v92, v99, v102, v105, v112, v95, *((const char **)&v95 + 1));
    sub_10031B134(v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
    sub_10000D0F0(v40, &qword_1007BA398);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v119, v115);
    v36(v126, v37);
    sub_1002443C8(v122, _s16ExchangeResponseVMa);
    sub_1002443C8(v130, _s15ExchangeRequestVMa);
    v36(v134, v37);
    v147(v143, v138);
    v44 = *(_QWORD *)(v1 + 1592);
    v45 = *(_QWORD *)(v1 + 1584);
    v46 = *(_QWORD *)(v1 + 1576);
    v47 = *(_QWORD *)(v1 + 1568);
    v48 = *(_QWORD *)(v1 + 1544);
    v49 = *(_QWORD *)(v1 + 1536);
    v50 = *(_QWORD *)(v1 + 1528);
    v51 = *(_QWORD *)(v1 + 1520);
    v52 = *(_QWORD *)(v1 + 1512);
    v82 = *(_QWORD *)(v1 + 1504);
    v84 = *(_QWORD *)(v1 + 1496);
    v86 = *(_QWORD *)(v1 + 1488);
    v88 = *(_QWORD *)(v1 + 1464);
    v90 = *(_QWORD *)(v1 + 1456);
    v93 = *(_QWORD *)(v1 + 1448);
    *(_QWORD *)&v95 = *(_QWORD *)(v1 + 1440);
    v97 = *(_QWORD *)(v1 + 1432);
    v100 = *(_QWORD *)(v1 + 1408);
    v103 = *(_QWORD *)(v1 + 1400);
    v106 = *(_QWORD *)(v1 + 1392);
    v109 = *(_QWORD *)(v1 + 1384);
    v113 = *(_QWORD *)(v1 + 1376);
    v116 = *(_QWORD *)(v1 + 1352);
    v120 = *(_QWORD *)(v1 + 1328);
    v123 = *(_QWORD *)(v1 + 1304);
    v127 = *(_QWORD *)(v1 + 1296);
    v131 = *(_QWORD *)(v1 + 1288);
    v135 = *(_QWORD *)(v1 + 1280);
    v139 = *(_QWORD *)(v1 + 1264);
    v144 = *(_QWORD *)(v1 + 1256);
    v148 = *(_QWORD *)(v1 + 1232);
    v156 = *(_QWORD *)(v1 + 1224);
    swift_task_dealloc(*(_QWORD *)(v1 + 1600));
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v82);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v97);
    swift_task_dealloc(v100);
    swift_task_dealloc(v103);
    swift_task_dealloc(v106);
    swift_task_dealloc(v109);
    swift_task_dealloc(v113);
    swift_task_dealloc(v116);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    swift_task_dealloc(v127);
    swift_task_dealloc(v131);
    swift_task_dealloc(v135);
    swift_task_dealloc(v139);
    swift_task_dealloc(v144);
    swift_task_dealloc(v148);
    swift_task_dealloc(v156);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1003164E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
  v44 = *(_QWORD *)(v0 + 1600);
  v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v40 = *(_QWORD *)(v0 + 1528);
  v42 = *(_QWORD *)(v0 + 1552);
  v2 = *(_QWORD *)(v0 + 1504);
  v3 = *(_QWORD *)(v0 + 1472);
  v4 = *(_QWORD *)(v0 + 1432);
  v5 = *(_QWORD *)(v0 + 1424);
  v6 = *(_QWORD *)(v0 + 1416);
  v38 = *(_QWORD *)(v0 + 1304);
  v7 = *(_QWORD *)(v0 + 1280);
  v8 = *(_QWORD *)(v0 + 1232);
  sub_10031B09C(*(_QWORD *)(v0 + 1712), *(const char **)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(const char **)(v0 + 1784));
  sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_10000D0F0(v8, &qword_1007BA398);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1002443C8(v7, _s16ExchangeResponseVMa);
  sub_1002443C8(v38, _s15ExchangeRequestVMa);
  v1(v40, v3);
  v46(v44, v42);
  v9 = *(_QWORD *)(v0 + 1592);
  v10 = *(_QWORD *)(v0 + 1584);
  v11 = *(_QWORD *)(v0 + 1576);
  v12 = *(_QWORD *)(v0 + 1568);
  v13 = *(_QWORD *)(v0 + 1544);
  v14 = *(_QWORD *)(v0 + 1536);
  v15 = *(_QWORD *)(v0 + 1528);
  v16 = *(_QWORD *)(v0 + 1520);
  v17 = *(_QWORD *)(v0 + 1512);
  v19 = *(_QWORD *)(v0 + 1504);
  v20 = *(_QWORD *)(v0 + 1496);
  v21 = *(_QWORD *)(v0 + 1488);
  v22 = *(_QWORD *)(v0 + 1464);
  v23 = *(_QWORD *)(v0 + 1456);
  v24 = *(_QWORD *)(v0 + 1448);
  v25 = *(_QWORD *)(v0 + 1440);
  v26 = *(_QWORD *)(v0 + 1432);
  v27 = *(_QWORD *)(v0 + 1408);
  v28 = *(_QWORD *)(v0 + 1400);
  v29 = *(_QWORD *)(v0 + 1392);
  v30 = *(_QWORD *)(v0 + 1384);
  v31 = *(_QWORD *)(v0 + 1376);
  v32 = *(_QWORD *)(v0 + 1352);
  v33 = *(_QWORD *)(v0 + 1328);
  v34 = *(_QWORD *)(v0 + 1304);
  v35 = *(_QWORD *)(v0 + 1296);
  v36 = *(_QWORD *)(v0 + 1288);
  v37 = *(_QWORD *)(v0 + 1280);
  v39 = *(_QWORD *)(v0 + 1264);
  v41 = *(_QWORD *)(v0 + 1256);
  v43 = *(_QWORD *)(v0 + 1232);
  v45 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003167D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 2000);
  *(_QWORD *)(*(_QWORD *)v1 + 2008) = v0;
  swift_task_dealloc(v3);
  v4 = v2[249];
  v5 = v2[248];
  if (v0)
  {
    v6 = (const char *)v2[235];
    v7 = v2[201];
    sub_100225AA0(v5, v4);
    swift_bridgeObjectRelease(v6);
    v8 = sub_100316BA0;
    v9 = v7;
  }
  else
  {
    v10 = v2[201];
    sub_100225AA0(v5, v4);
    v8 = sub_100316864;
    v9 = v10;
  }
  return swift_task_switch(v8, v9, 0);
}

uint64_t sub_100316864()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;

  sub_10031B09C(*(_QWORD *)(v0 + 1896), *(const char **)(v0 + 1904), *(_QWORD *)(v0 + 1912), *(_QWORD *)(v0 + 1920), *(_QWORD *)(v0 + 1928), *(_QWORD *)(v0 + 1936), *(_QWORD *)(v0 + 1944), *(_QWORD *)(v0 + 1952), *(_QWORD *)(v0 + 1960), *(const char **)(v0 + 1968));
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
  v47 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v42 = *(_QWORD *)(v0 + 1552);
  v44 = *(_QWORD *)(v0 + 1600);
  v40 = *(_QWORD *)(v0 + 1528);
  v2 = *(_QWORD *)(v0 + 1504);
  v3 = *(_QWORD *)(v0 + 1472);
  v4 = *(_QWORD *)(v0 + 1432);
  v5 = *(_QWORD *)(v0 + 1424);
  v6 = *(_QWORD *)(v0 + 1416);
  v7 = *(_QWORD *)(v0 + 1304);
  v8 = *(_QWORD *)(v0 + 1280);
  v9 = *(_QWORD *)(v0 + 1232);
  sub_10031B09C(*(_QWORD *)(v0 + 1712), *(const char **)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(const char **)(v0 + 1784));
  sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_10000D0F0(v9, &qword_1007BA398);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1002443C8(v8, _s16ExchangeResponseVMa);
  sub_1002443C8(v7, _s15ExchangeRequestVMa);
  v1(v40, v3);
  v47(v44, v42);
  v46 = *(_QWORD *)(v0 + 1872);
  v48 = *(_QWORD *)(v0 + 1880);
  v10 = *(_QWORD *)(v0 + 1592);
  v11 = *(_QWORD *)(v0 + 1584);
  v12 = *(_QWORD *)(v0 + 1576);
  v13 = *(_QWORD *)(v0 + 1568);
  v14 = *(_QWORD *)(v0 + 1544);
  v15 = *(_QWORD *)(v0 + 1536);
  v16 = *(_QWORD *)(v0 + 1528);
  v17 = *(_QWORD *)(v0 + 1520);
  v18 = *(_QWORD *)(v0 + 1512);
  v20 = *(_QWORD *)(v0 + 1504);
  v21 = *(_QWORD *)(v0 + 1496);
  v22 = *(_QWORD *)(v0 + 1488);
  v23 = *(_QWORD *)(v0 + 1464);
  v24 = *(_QWORD *)(v0 + 1456);
  v25 = *(_QWORD *)(v0 + 1448);
  v26 = *(_QWORD *)(v0 + 1440);
  v27 = *(_QWORD *)(v0 + 1432);
  v28 = *(_QWORD *)(v0 + 1408);
  v29 = *(_QWORD *)(v0 + 1400);
  v30 = *(_QWORD *)(v0 + 1392);
  v31 = *(_QWORD *)(v0 + 1384);
  v32 = *(_QWORD *)(v0 + 1376);
  v33 = *(_QWORD *)(v0 + 1352);
  v34 = *(_QWORD *)(v0 + 1328);
  v35 = *(_QWORD *)(v0 + 1304);
  v36 = *(_QWORD *)(v0 + 1296);
  v37 = *(_QWORD *)(v0 + 1288);
  v38 = *(_QWORD *)(v0 + 1280);
  v39 = *(_QWORD *)(v0 + 1264);
  v41 = *(_QWORD *)(v0 + 1256);
  v43 = *(_QWORD *)(v0 + 1232);
  v45 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v46, v48);
}

uint64_t sub_100316BA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);

  v28 = *(_OWORD *)(v0 + 1776);
  v35 = *(_QWORD *)(v0 + 1768);
  v31 = *(_QWORD *)(v0 + 1760);
  v1 = *(_QWORD *)(v0 + 1752);
  v2 = *(_QWORD *)(v0 + 1744);
  v3 = *(_QWORD *)(v0 + 1736);
  v4 = *(_QWORD *)(v0 + 1728);
  v5 = *(const char **)(v0 + 1720);
  v6 = *(_QWORD *)(v0 + 1712);
  v52 = *(_QWORD *)(v0 + 1600);
  v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v48 = *(_QWORD *)(v0 + 1528);
  v50 = *(_QWORD *)(v0 + 1552);
  v41 = *(_QWORD *)(v0 + 1504);
  v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
  v7 = *(_QWORD *)(v0 + 1472);
  v37 = *(_QWORD *)(v0 + 1432);
  v29 = *(_QWORD *)(v0 + 1424);
  v33 = *(_QWORD *)(v0 + 1416);
  v45 = *(_QWORD *)(v0 + 1304);
  v39 = *(_QWORD *)(v0 + 1280);
  v8 = *(_QWORD *)(v0 + 1232);
  sub_10031B09C(*(_QWORD *)(v0 + 1896), *(const char **)(v0 + 1904), *(_QWORD *)(v0 + 1912), *(_QWORD *)(v0 + 1920), *(_QWORD *)(v0 + 1928), *(_QWORD *)(v0 + 1936), *(_QWORD *)(v0 + 1944), *(_QWORD *)(v0 + 1952), *(_QWORD *)(v0 + 1960), *(const char **)(v0 + 1968));
  sub_10031B09C(v6, v5, v4, v3, v2, v1, v31, v35, v28, *((const char **)&v28 + 1));
  sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_10000D0F0(v8, &qword_1007BA398);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v37, v33);
  v43(v41, v7);
  sub_1002443C8(v39, _s16ExchangeResponseVMa);
  sub_1002443C8(v45, _s15ExchangeRequestVMa);
  v43(v48, v7);
  v54(v52, v50);
  v9 = *(_QWORD *)(v0 + 1592);
  v10 = *(_QWORD *)(v0 + 1584);
  v11 = *(_QWORD *)(v0 + 1576);
  v12 = *(_QWORD *)(v0 + 1568);
  v13 = *(_QWORD *)(v0 + 1544);
  v14 = *(_QWORD *)(v0 + 1536);
  v15 = *(_QWORD *)(v0 + 1528);
  v16 = *(_QWORD *)(v0 + 1520);
  v17 = *(_QWORD *)(v0 + 1512);
  v19 = *(_QWORD *)(v0 + 1504);
  v20 = *(_QWORD *)(v0 + 1496);
  v21 = *(_QWORD *)(v0 + 1488);
  v22 = *(_QWORD *)(v0 + 1464);
  v23 = *(_QWORD *)(v0 + 1456);
  v24 = *(_QWORD *)(v0 + 1448);
  v25 = *(_QWORD *)(v0 + 1440);
  v26 = *(_QWORD *)(v0 + 1432);
  v27 = *(_QWORD *)(v0 + 1408);
  *(_QWORD *)&v28 = *(_QWORD *)(v0 + 1400);
  v30 = *(_QWORD *)(v0 + 1392);
  v32 = *(_QWORD *)(v0 + 1384);
  v34 = *(_QWORD *)(v0 + 1376);
  v36 = *(_QWORD *)(v0 + 1352);
  v38 = *(_QWORD *)(v0 + 1328);
  v40 = *(_QWORD *)(v0 + 1304);
  v42 = *(_QWORD *)(v0 + 1296);
  v44 = *(_QWORD *)(v0 + 1288);
  v46 = *(_QWORD *)(v0 + 1280);
  v47 = *(_QWORD *)(v0 + 1264);
  v49 = *(_QWORD *)(v0 + 1256);
  v51 = *(_QWORD *)(v0 + 1232);
  v53 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100316F1C()
{
  uint64_t v0;

  return swift_task_switch(sub_100316F30, *(_QWORD *)(v0 + 1608), 0);
}

uint64_t sub_100316F30()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v2 = *(_QWORD *)(v0 + 1600);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1440);
  v5 = *(_QWORD *)(v0 + 1424);
  v6 = *(_QWORD *)(v0 + 1416);
  v7 = *(_QWORD *)(v0 + 1384);
  v8 = *(_QWORD *)(v0 + 1296);
  swift_task_dealloc(*(_QWORD *)(v0 + 2016));
  sub_10000D0F0(v7, &qword_1007BA3A8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1002443C8(v8, _s15ExchangeRequestVMa);
  swift_errorRelease(*(_QWORD *)(v0 + 1112));
  v9 = *(_QWORD *)(v0 + 1592);
  v10 = *(_QWORD *)(v0 + 1584);
  v11 = *(_QWORD *)(v0 + 1576);
  v12 = *(_QWORD *)(v0 + 1568);
  v13 = *(_QWORD *)(v0 + 1544);
  v14 = *(_QWORD *)(v0 + 1536);
  v15 = *(_QWORD *)(v0 + 1528);
  v16 = *(_QWORD *)(v0 + 1520);
  v17 = *(_QWORD *)(v0 + 1512);
  v19 = *(_QWORD *)(v0 + 1504);
  v20 = *(_QWORD *)(v0 + 1496);
  v21 = *(_QWORD *)(v0 + 1488);
  v22 = *(_QWORD *)(v0 + 1464);
  v23 = *(_QWORD *)(v0 + 1456);
  v24 = *(_QWORD *)(v0 + 1448);
  v25 = *(_QWORD *)(v0 + 1440);
  v26 = *(_QWORD *)(v0 + 1432);
  v27 = *(_QWORD *)(v0 + 1408);
  v28 = *(_QWORD *)(v0 + 1400);
  v29 = *(_QWORD *)(v0 + 1392);
  v30 = *(_QWORD *)(v0 + 1384);
  v31 = *(_QWORD *)(v0 + 1376);
  v32 = *(_QWORD *)(v0 + 1352);
  v33 = *(_QWORD *)(v0 + 1328);
  v34 = *(_QWORD *)(v0 + 1304);
  v35 = *(_QWORD *)(v0 + 1296);
  v36 = *(_QWORD *)(v0 + 1288);
  v37 = *(_QWORD *)(v0 + 1280);
  v38 = *(_QWORD *)(v0 + 1264);
  v39 = *(_QWORD *)(v0 + 1256);
  v40 = *(_QWORD *)(v0 + 1232);
  v41 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_1003171A8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1704);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1616);
  v3 = *(_QWORD *)(v0 + 1600);
  v4 = *(_QWORD *)(v0 + 1552);
  v5 = *(_QWORD *)(v0 + 1528);
  v6 = *(_QWORD *)(v0 + 1472);
  v7 = *(_QWORD *)(v0 + 1304);
  sub_10031B09C(*(_QWORD *)(v0 + 1712), *(const char **)(v0 + 1720), *(_QWORD *)(v0 + 1728), *(_QWORD *)(v0 + 1736), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1752), *(_QWORD *)(v0 + 1760), *(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(const char **)(v0 + 1784));
  sub_10031B134((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031B09C);
  sub_1002443C8(v7, _s15ExchangeRequestVMa);
  v1(v5, v6);
  v2(v3, v4);
  v8 = *(_QWORD *)(v0 + 1592);
  v9 = *(_QWORD *)(v0 + 1584);
  v10 = *(_QWORD *)(v0 + 1576);
  v11 = *(_QWORD *)(v0 + 1568);
  v12 = *(_QWORD *)(v0 + 1544);
  v13 = *(_QWORD *)(v0 + 1536);
  v14 = *(_QWORD *)(v0 + 1528);
  v15 = *(_QWORD *)(v0 + 1520);
  v16 = *(_QWORD *)(v0 + 1512);
  v18 = *(_QWORD *)(v0 + 1504);
  v19 = *(_QWORD *)(v0 + 1496);
  v20 = *(_QWORD *)(v0 + 1488);
  v21 = *(_QWORD *)(v0 + 1464);
  v22 = *(_QWORD *)(v0 + 1456);
  v23 = *(_QWORD *)(v0 + 1448);
  v24 = *(_QWORD *)(v0 + 1440);
  v25 = *(_QWORD *)(v0 + 1432);
  v26 = *(_QWORD *)(v0 + 1408);
  v27 = *(_QWORD *)(v0 + 1400);
  v28 = *(_QWORD *)(v0 + 1392);
  v29 = *(_QWORD *)(v0 + 1384);
  v30 = *(_QWORD *)(v0 + 1376);
  v31 = *(_QWORD *)(v0 + 1352);
  v32 = *(_QWORD *)(v0 + 1328);
  v33 = *(_QWORD *)(v0 + 1304);
  v34 = *(_QWORD *)(v0 + 1296);
  v35 = *(_QWORD *)(v0 + 1288);
  v36 = *(_QWORD *)(v0 + 1280);
  v37 = *(_QWORD *)(v0 + 1264);
  v38 = *(_QWORD *)(v0 + 1256);
  v39 = *(_QWORD *)(v0 + 1232);
  v40 = *(_QWORD *)(v0 + 1224);
  swift_task_dealloc(*(_QWORD *)(v0 + 1600));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100317440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v6 = sub_100008384(&qword_1007BA4E8);
  v5[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[10] = v7;
  v5[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s12ErrorRequestVMa(0);
  v5[12] = v8;
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v5[14] = static AirDropActor.shared;
  return swift_task_switch(sub_100317504, v9, 0);
}

uint64_t sub_100317504()
{
  uint64_t v0;
  void *v1;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    if ((*(_QWORD *)(v0 + 48) & 0xFF00000000) != 0x300000000 && (*(_QWORD *)(v0 + 48) & 4) != 0)
    {
      v9 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 104);
      v10 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 56);
      SFAirDropSend.Request.id.getter(v1);
      v12 = v8 + *(int *)(v9 + 20);
      v13 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
      sub_10029EE08(v8, v10);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
      *(_QWORD *)(v0 + 120) = v14;
      *v14 = v0;
      v14[1] = sub_1003176B4;
      return SFProgressTask.finalValue.getter(v0 + 16, *(_QWORD *)(v0 + 72));
    }
    v3 = v1;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No HELLO response present with .errorMessage support", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  v7 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003176B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 120));
  v3 = *(_QWORD *)(v2 + 112);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_1003177A0;
  }
  else
  {
    v4 = sub_100317720;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_100317720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1002443C8(v1, _s12ErrorRequestVMa);
  sub_100225AB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  v5 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003177A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1002443C8(v1, _s12ErrorRequestVMa);
  v5 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100317818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_100008384(&qword_1007BA530);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100317880, 0, 0);
}

uint64_t sub_100317880()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003178E4, static AirDropActor.shared, 0);
}

uint64_t sub_1003178E4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_10029B7C8(v0[4], v0[7]);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_100317948;
  return SFProgressTask.finalValue.getter(v0[2], v0[5]);
}

uint64_t sub_100317948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_1003179FC;
  else
    v6 = sub_1003179C8;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003179C8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003179FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100317A30@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, _BYTE *, uint64_t);
  _BOOL8 v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  Swift::String v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  const char *v56;
  __n128 v57;
  Swift::String v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  Swift::String v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  const char *object;
  __n128 v68;
  unint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t result;
  _BYTE v97[12];
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v106;
  void (*v107)(_QWORD *);
  void (*v108)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  unint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;

  v125 = a1;
  v121 = a3;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v120 = &v97[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Date(0);
  __chkstk_darwin(v6);
  v115 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v116 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100008384((uint64_t *)&unk_1007BB630);
  v118 = *(_QWORD *)(v10 - 8);
  v119 = v10;
  __chkstk_darwin(v10);
  v131 = &v97[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = &v97[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for SFAirDrop.ContactRequest(0);
  v114 = *(_QWORD *)(v13 - 8);
  v126 = v13;
  __chkstk_darwin(v13);
  v123 = &v97[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_100008384(&qword_1007BA428);
  v129 = *(_QWORD *)(v15 - 8);
  v130 = v15;
  __chkstk_darwin(v15);
  v124 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v18 = *(_QWORD *)(v17 - 8);
  v112 = (_BYTE *)v17;
  __chkstk_darwin(v17);
  v20 = &v97[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v128 = *(_QWORD *)(v117 - 8);
  v21 = __chkstk_darwin(v117);
  v109 = &v97[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v127 = &v97[-v23];
  v24 = sub_100008384(&qword_1007BA430);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  v27 = __chkstk_darwin(v24);
  v28 = &v97[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v30 = &v97[-v29];
  v122 = 0xD000000000000017;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD00000000000001DLL, 0x8000000100615ED0, v31, 0xD000000000000067, 0x8000000100615EF0, 602, (char *)&type metadata for () + 8, v13);
  *v20 = 0x776F4E20746F4ELL;
  v20[1] = 0xE700000000000000;
  LODWORD(v105) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  v107 = *(void (**)(_QWORD *))(v18 + 104);
  v107(v20);
  v98 = ~a2;
  v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 16);
  v32(v28, v30, v24);
  v33 = *(unsigned __int8 *)(v25 + 80);
  v34 = (v33 + 16) & ~v33;
  v110 = v26;
  v108 = (void (*)(uint64_t, _BYTE *, uint64_t))(v34 + v26);
  v106 = v33;
  v35 = v33 | 7;
  v36 = swift_allocObject(&unk_1007222A8, v34 + v26, v33 | 7);
  v113 = v25;
  v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32);
  v37(v36 + v34, v28, v24);
  v38 = (a2 & 1) == 0;
  v39 = v28;
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x776F4E20746F4ELL, 0xE700000000000000, v20, v38, sub_10031B37C, v36);
  *v20 = 0x6572616853;
  v20[1] = 0xE500000000000000;
  ((void (*)(_QWORD *, _QWORD, _BYTE *))v107)(v20, v105, v112);
  v40 = type metadata accessor for SFAirDrop.ContactInfo(0);
  v41 = v123;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v123, v125, v40);
  v42 = v126;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v114 + 104))(v41, enum case for SFAirDrop.ContactRequest.contact(_:), v126);
  v112 = v30;
  v105 = v32;
  v32(v39, v30, v24);
  v43 = v39;
  v44 = v124;
  v107 = (void (*)(_QWORD *))v35;
  v45 = swift_allocObject(&unk_1007222D0, v108, v35);
  v114 = v24;
  v108 = v37;
  v37(v45 + v34, v39, v24);
  v46 = sub_100220D78(&qword_1007BA438, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v47 = sub_100220D78(&qword_1007BA440, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v99 = sub_100220D78(&qword_1007BA448, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  v100 = v47;
  v101 = v46;
  v48 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)(0x6572616853, 0xE500000000000000, v20, 0, 0, v123, sub_10031B39C, v45, v42, v46, v47, v99);
  v111 = v43;
  v49 = v44;
  if ((v98 & 1) != 0)
  {
    v132 = SFAirDrop.ContactInfo.fullName.getter(v48);
    v133 = v61;
    v62._countAndFlagsBits = 10;
    v62._object = (void *)0xE100000000000000;
    String.append(_:)(v62);
    v63 = v102;
    SFAirDrop.ContactInfo.handle.getter();
    v64 = sub_100220D78(&qword_1007BA3F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    v65 = v104;
    v66._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v104, v64);
    object = (const char *)v66._object;
    String.append(_:)(v66);
    v68 = swift_bridgeObjectRelease(object);
    v59 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v103 + 8))(v63, v65, v68);
    v123 = (_BYTE *)v132;
    v104 = v133;
    v60 = "Exchange Contact Cards?";
  }
  else
  {
    v132 = SFAirDrop.ContactInfo.fullName.getter(v48);
    v133 = v50;
    v51._countAndFlagsBits = 10272;
    v51._object = (void *)0xE200000000000000;
    String.append(_:)(v51);
    v52 = v102;
    SFAirDrop.ContactInfo.handle.getter();
    v53 = sub_100220D78(&qword_1007BA3F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    v54 = v104;
    v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v104, v53);
    v56 = (const char *)v55._object;
    String.append(_:)(v55);
    v57 = swift_bridgeObjectRelease(v56);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v103 + 8))(v52, v54, v57);
    v58._countAndFlagsBits = 41;
    v58._object = (void *)0xE100000000000000;
    String.append(_:)(v58);
    v123 = (_BYTE *)v132;
    v104 = v133;
    v122 = 0xD00000000000001FLL;
    v60 = "Share Your Contact Information?";
  }
  v69 = (unint64_t)(v60 - 32) | 0x8000000000000000;
  v70 = v106;
  v125 = ~v106;
  v71 = v116;
  v72 = UUID.init()(v59);
  v73 = v115;
  static Date.now.getter(v72);
  v74 = sub_100008384(&qword_1007BA450);
  v75 = sub_100008384(&qword_1007BA458);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned __int8 *)(v76 + 80);
  v78 = (v77 + 32) & ~v77;
  v79 = swift_allocObject(v74, v78 + *(_QWORD *)(v76 + 72), v77 | 7);
  *(_OWORD *)(v79 + 16) = xmmword_1005CD2A0;
  v80 = v79 + v78;
  sub_100008384(&qword_1007BA460);
  v81 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v129 + 16))(v80, v49, v130);
  UUID.init()(v81);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 104))(v80, enum case for SFAirDrop.AcceptAction.single<A>(_:), v75);
  v82 = v127;
  v83 = v109;
  v84 = v117;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v128 + 16))(v109, v127, v117);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)(v71, v73, v122, v69, v123, v104, v79, v83, 0, v126, v101, v100, v99);
  v85 = type metadata accessor for TaskPriority(0);
  v86 = (uint64_t)v120;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v120, 1, 1, v85);
  v87 = v111;
  v88 = v112;
  v89 = v114;
  v105(v111, v112, v114);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v90 = static AirDropActor.shared;
  v91 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v92 = (v70 + 32) & v125;
  v93 = swift_allocObject(&unk_1007222F8, v92 + v110, v107);
  *(_QWORD *)(v93 + 16) = v90;
  *(_QWORD *)(v93 + 24) = v91;
  v108(v93 + v92, v87, v89);
  swift_retain(v90);
  v94 = sub_100252C44(v86, (uint64_t)&unk_1007BA470, v93);
  (*(void (**)(_BYTE *, uint64_t))(v129 + 8))(v124, v130);
  (*(void (**)(_BYTE *, uint64_t))(v128 + 8))(v82, v84);
  (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v88, v89);
  v95 = v121;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v118 + 32))(v121, v131, v119);
  result = sub_100008384(&qword_1007BA3A8);
  *(_QWORD *)(v95 + *(int *)(result + 52)) = v94;
  return result;
}

uint64_t sub_100318484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1003184A0, 0, 0);
}

uint64_t sub_1003184A0()
{
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100318504, static AirDropActor.shared, 0);
}

uint64_t sub_100318504()
{
  uint64_t v0;
  __n128 v1;

  v1 = sub_10029DD8C(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10031853C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  Swift::String v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  const char *object;
  __n128 v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v3 = a2;
  LODWORD(v89) = a2;
  v93 = a1;
  v106 = a3;
  v4 = sub_100008384(&qword_1007B68A0);
  __chkstk_darwin(v4);
  v105 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  __chkstk_darwin(v6);
  v102 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v100 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008384((uint64_t *)&unk_1007C3400);
  v103 = *(_QWORD *)(v10 - 8);
  v104 = v10;
  __chkstk_darwin(v10);
  v113 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v84 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384(&qword_1007BA3F0);
  v111 = *(_QWORD *)(v13 - 8);
  v112 = v13;
  __chkstk_darwin(v13);
  v107 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SFAirDrop.ButtonConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v91 = v15;
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = type metadata accessor for SFAirDrop.DeclineAction(0);
  v110 = *(_QWORD *)(v101 - 8);
  v19 = __chkstk_darwin(v101);
  v94 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v109 = (char *)&v83 - v21;
  v22 = sub_100008384((uint64_t *)&unk_1007B5A10);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  v25 = __chkstk_darwin(v22);
  v26 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v83 - v27;
  SFProgressContinuation.init(_:initialProgress:file:line:)(0xD00000000000001DLL, 0x8000000100615ED0, v29, 0xD000000000000067, 0x8000000100615EF0, 625, (char *)&type metadata for () + 8, &type metadata for Bool);
  v30 = 0x6574656C6544;
  if ((v3 & 1) != 0)
    v30 = 0x656E696C636544;
  v31 = 0xE700000000000000;
  if ((v3 & 1) == 0)
    v31 = 0xE600000000000000;
  *v18 = v30;
  v18[1] = v31;
  LODWORD(v88) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  v32 = *(void (**)(char *, char *, uint64_t))(v16 + 104);
  v90 = v32;
  v33 = 1885693259;
  if ((v3 & 1) != 0)
    v33 = 0x747065636341;
  v92 = (void (*)(uint64_t, char *, uint64_t))v33;
  v34 = 0xE400000000000000;
  if ((v3 & 1) != 0)
    v34 = 0xE600000000000000;
  v87 = v34;
  ((void (*)(uint64_t *))v32)(v18);
  v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v35(v26, v28, v22);
  v36 = *(unsigned __int8 *)(v23 + 80);
  v37 = (v36 + 16) & ~v36;
  v95 = v24;
  v38 = v37 + v24;
  v108 = v36;
  v39 = v36 | 7;
  v40 = swift_allocObject(&unk_100722230, v38, v36 | 7);
  v98 = v23;
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v41(v40 + v37, v26, v22);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)(0x656E696C636544, 0xE700000000000000, v18, 0, sub_10031B208, v40);
  v42 = v87;
  *v18 = (uint64_t)v92;
  v18[1] = v42;
  v90((char *)v18, (char *)v88, v91);
  LOBYTE(v114) = 1;
  v90 = v35;
  v35(v26, v28, v22);
  v43 = v107;
  v91 = v39;
  v44 = swift_allocObject(&unk_100722258, v38, v39);
  v92 = v41;
  v41(v44 + v37, v26, v22);
  v45 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)(0x747065636341, 0xE600000000000000, v18, 0, 0, &v114, sub_10031B270, v44, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v99 = v22;
  v96 = v26;
  v97 = v28;
  if ((v89 & 1) != 0)
  {
    v46 = SFAirDrop.ContactInfo.fullName.getter(v45);
    v86 = v46;
    v87 = v47;
    v89 = 0xD000000000000013;
    v48 = 0x8000000100615F80;
    v49 = &v117;
  }
  else
  {
    v114 = SFAirDrop.ContactInfo.fullName.getter(v45);
    v115 = v50;
    v51._countAndFlagsBits = 10;
    v51._object = (void *)0xE100000000000000;
    String.append(_:)(v51);
    v52 = v84;
    SFAirDrop.ContactInfo.handle.getter();
    v53 = sub_100220D78(&qword_1007BA3F8, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle, (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    v54 = v86;
    v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v86, v53);
    object = (const char *)v55._object;
    String.append(_:)(v55);
    v57 = swift_bridgeObjectRelease(object);
    v46 = (*(uint64_t (**)(char *, uint64_t, __n128))(v85 + 8))(v52, v54, v57);
    v89 = v114;
    v88 = v115;
    v87 = 0x8000000100615F60;
    v48 = 0xD000000000000012;
    v49 = &v116;
  }
  *(v49 - 32) = v48;
  v93 = ~v108;
  v58 = v100;
  v59 = UUID.init()(v46);
  v60 = v102;
  static Date.now.getter(v59);
  v61 = sub_100008384(&qword_1007BA400);
  v62 = sub_100008384(&qword_1007BA408);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(unsigned __int8 *)(v63 + 80);
  v65 = (v64 + 32) & ~v64;
  v66 = swift_allocObject(v61, v65 + *(_QWORD *)(v63 + 72), v64 | 7);
  *(_OWORD *)(v66 + 16) = xmmword_1005CD2A0;
  sub_100008384(&qword_1007BA410);
  v67 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v111 + 16))(v66 + v65, v43, v112);
  UUID.init()(v67);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v66 + v65, enum case for SFAirDrop.AcceptAction.single<A>(_:), v62);
  v68 = v109;
  v69 = v94;
  v70 = v101;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v94, v109, v101);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)(v58, v60, v86, v87, v89, v88, v66, v69, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v71 = type metadata accessor for TaskPriority(0);
  v72 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v105, 1, 1, v71);
  v74 = v96;
  v73 = v97;
  v75 = v99;
  v90(v96, v97, v99);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v76 = static AirDropActor.shared;
  v77 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v78 = (v108 + 32) & v93;
  v79 = swift_allocObject(&unk_100722280, v78 + v95, v91);
  *(_QWORD *)(v79 + 16) = v76;
  *(_QWORD *)(v79 + 24) = v77;
  v92(v79 + v78, v74, v75);
  swift_retain(v76);
  v80 = sub_100252D84(v72, (uint64_t)&unk_1007BA420, v79);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v107, v112);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v68, v70);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v73, v75);
  v81 = v106;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v106, v113, v104);
  result = sub_100008384(&qword_1007BA398);
  *(_QWORD *)(v81 + *(int *)(result + 52)) = v80;
  return result;
}

uint64_t sub_100318E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for SFAirDropSend.Failure(0);
  v1 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  v2 = swift_allocError(v0, v1, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v3, enum case for SFAirDropSend.Failure.cancelled(_:), v0);
  v4 = sub_100008384(&qword_1007BA430);
  SFProgressContinuation.fail(with:)(v2, v4);
  return swift_errorRelease(v2);
}

uint64_t sub_100318F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_100008384(&qword_1007BA478);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100318FB0, v7, 0);
}

uint64_t sub_100318FB0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_100008384(&qword_1007BA430);
  SFProgressContinuation.task.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_100319024;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_100319024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 40);
  v4 = *(_QWORD *)(*v1 + 48);
  v6 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1003190E4;
  else
    v7 = sub_1003190B0;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_1003190B0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003190E4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100319118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_100008384(&qword_1007B5B10);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1003191B0, v7, 0);
}

uint64_t sub_1003191B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_100008384((uint64_t *)&unk_1007B5A10);
  SFProgressContinuation.task.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_100319224;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_100319224()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 40);
  v4 = *(_QWORD *)(*v1 + 48);
  v6 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_10031D94C;
  else
    v7 = sub_10031D948;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_1003192B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for SFAirDropSend.Failure(0);
  v1 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  v2 = swift_allocError(v0, v1, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v3, enum case for SFAirDropSend.Failure.cancelled(_:), v0);
  v4 = sub_100008384(&qword_1007B6BE8);
  SFProgressTask.cancel(_:)(v2, v4);
  return swift_errorRelease(v2);
}

uint64_t sub_100319350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v15[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2, v7);
  if (result)
  {
    v9 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, result + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v3);

    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Accepted intervention via permission request", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_100319484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  const char *v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  double v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[3];

  v2 = v1;
  v89 = a1;
  v3 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v3);
  v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6 = *(_QWORD *)(v88 - 8);
  v7 = __chkstk_darwin(v88);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v84 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v84 - v13;
  v15 = type metadata accessor for SFAirDrop.TransferType(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = SFAirDropSend.Request.type.getter(v17);
  v21 = SFAirDrop.TransferType.isOnlyExchange.getter(v20);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if ((v21 & 1) != 0)
    return result;
  v84 = v12;
  v85 = v9;
  v23 = (uint64_t)v14;
  v86 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints;
  v87 = v2;
  v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  v25 = swift_retain(v24);
  CurrentValueSubject.value.getter(v25);
  v26 = swift_release(v24);
  v27 = (const char *)v91[2];
  __chkstk_darwin(v26);
  v28 = v89;
  *(&v84 - 2) = (char *)v89;
  sub_10034610C((uint64_t (*)(char *))sub_10031A184, (uint64_t)v27, (uint64_t)v5);
  v29 = swift_bridgeObjectRelease(v27);
  v30 = v88;
  v31 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v5, 1, v88, v29) == 1)
  {
    sub_10000D0F0((uint64_t)v5, &qword_1007B7760);
LABEL_8:
    v46 = v87;
    v47 = (uint64_t)v85;
    v48 = sub_100244384(v28, (uint64_t)v85, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      v91[0] = v52;
      *(_DWORD *)v51 = 136315138;
      sub_1002B26F0();
      v54 = (const char *)v53;
      v90 = sub_100228BD8(v55, v53, v91);
      v46 = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v51 + 4);
      swift_bridgeObjectRelease(v54);
      sub_1002443C8(v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Adding connectable endpoint to runner endpoints %s", v51, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      v56 = v51;
      v28 = v89;
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {

      sub_1002443C8(v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    v57 = v86;
    v58 = sub_100008384(&qword_1007B5498);
    v59 = *(unsigned __int8 *)(v31 + 80);
    v60 = (v59 + 32) & ~v59;
    v61 = swift_allocObject(v58, v60 + *(_QWORD *)(v31 + 72), v59 | 7);
    *(_OWORD *)(v61 + 16) = xmmword_1005CD2A0;
    v62 = v61 + v60;
    sub_100244384(v28, v61 + v60, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v63 = (const char *)sub_10022D214(v61);
    swift_setDeallocating(v61);
    swift_arrayDestroy(v62, 1, v30);
    swift_deallocClassInstance(v61, 32, 7);
    v64 = *(_QWORD *)(v46 + v57);
    v65 = swift_retain(v64);
    CurrentValueSubject.value.getter(v65);
    swift_release(v64);
    v66 = *(_QWORD *)(v46 + v57);
    v67 = v91[0];
    swift_retain(v66);
    swift_bridgeObjectRetain(v63);
    v69 = (const char *)sub_100545E38(v68, v67);
    v90 = (uint64_t)v69;
    CurrentValueSubject.send(_:)(&v90);
    *(_QWORD *)&v70 = swift_bridgeObjectRelease(v63).n128_u64[0];
    swift_bridgeObjectRelease(v69, v70);
    return swift_release(v66);
  }
  v32 = v23;
  sub_100221DB4((uint64_t)v5, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002B6D3C();
  v34 = v33;
  sub_1002B6D3C();
  if (v35 >= v34)
  {
    sub_1002443C8(v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_8;
  }
  v36 = v87;
  v37 = (uint64_t)v84;
  v38 = sub_100244384(v28, (uint64_t)v84, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(12, -1);
    v42 = swift_slowAlloc(32, -1);
    v91[0] = v42;
    *(_DWORD *)v41 = 136315138;
    v86 = (uint64_t)(v41 + 4);
    sub_1002B26F0();
    v44 = (const char *)v43;
    v90 = sub_100228BD8(v45, v43, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v86);
    swift_bridgeObjectRelease(v44);
    sub_1002443C8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Adding connectable endpoint to backup endpoints %s", v41, 0xCu);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    v36 = v87;
    v30 = v88;
    swift_slowDealloc(v41, -1, -1);

  }
  else
  {

    sub_1002443C8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  v71 = sub_100008384(&qword_1007B5498);
  v72 = *(unsigned __int8 *)(v31 + 80);
  v73 = (v72 + 32) & ~v72;
  v74 = swift_allocObject(v71, v73 + *(_QWORD *)(v31 + 72), v72 | 7);
  *(_OWORD *)(v74 + 16) = xmmword_1005CD2A0;
  sub_100244384(v28, v74 + v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v75 = (const char *)sub_10022D214(v74);
  swift_setDeallocating(v74);
  swift_arrayDestroy(v74 + v73, 1, v30);
  swift_deallocClassInstance(v74, 32, 7);
  v76 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints;
  v77 = *(_QWORD *)(v36 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
  v78 = swift_retain(v77);
  CurrentValueSubject.value.getter(v78);
  swift_release(v77);
  v79 = *(_QWORD *)(v36 + v76);
  v80 = v91[0];
  swift_retain(v79);
  swift_bridgeObjectRetain(v75);
  v82 = (const char *)sub_100545E38(v81, v80);
  v90 = (uint64_t)v82;
  CurrentValueSubject.send(_:)(&v90);
  *(_QWORD *)&v83 = swift_bridgeObjectRelease(v75).n128_u64[0];
  swift_bridgeObjectRelease(v82, v83);
  swift_release(v79);
  return sub_1002443C8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
}

void sub_100319B8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - v7;
  sub_100244384(a1, (uint64_t)&v11 - v7, v9);
  v10 = (char *)&loc_100319CBC + dword_100319F3C[swift_getEnumCaseMultiPayload(v8, v5)];
  __asm { BR              X10 }
}

void sub_100319CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t device_id;
  char *v9;

  v5 = sub_100221DB4(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  v6 = NWEndpoint.nw.getter(v5);
  if (v6)
  {
    v7 = v6;
    device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v7);
    if (device_id)
      String.init(cString:)(device_id);
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100244384(v2, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v9 = (char *)&loc_100319DB4 + dword_100319F4C[swift_getEnumCaseMultiPayload(v4, v0)];
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x100319F38);
}

__n128 sub_100319F5C()
{
  uint64_t v0;

  sub_10000D0F0(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact, &qword_1007BA300);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService));

  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections));

  return swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls));
}

uint64_t sub_10031A070()
{
  return _s6RunnerCMa(0);
}

uint64_t _s6RunnerCMa(uint64_t a1)
{
  return sub_1002442D0(a1, (uint64_t *)&unk_1007BA2E8, (uint64_t)&_s6RunnerCMn);
}

void sub_10031A08C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_10031A130(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = "\b";
    v4[6] = "\b";
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 464);
  }
}

void sub_10031A130(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1007BA2F8)
  {
    v2 = type metadata accessor for SFAirDrop.ContactInfo(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1007BA2F8);
  }
}

uint64_t sub_10031A184(uint64_t a1)
{
  char v1;

  sub_100319B8C(a1);
  return v1 & 1;
}

Swift::Int sub_10031A1A0(uint64_t a1, void **a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int result;
  void *v9;
  id v10;
  id v11;
  char v12;
  id v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_10031A3D0(a1, a2);
  v3 = &_swiftEmptySetSingleton;
  v27 = &_swiftEmptySetSingleton;
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.makeIterator()(a1);
  v5 = __CocoaSet.Iterator.next()(v4);
  if (v5)
  {
    v6 = v5;
    v7 = type metadata accessor for SDAirDropSendConnection(0);
    do
    {
      v25 = v6;
      swift_dynamicCast(&v26, &v25, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
      v9 = *a2;
      if (*a2
        && (v10 = v26,
            v11 = v9,
            v12 = static NSObject.== infix(_:_:)(v10, v11),
            v10,
            v11,
            (v12 & 1) != 0))
      {

      }
      else
      {
        v13 = v26;
        v14 = v27;
        v15 = v27[2];
        if (v27[3] <= v15)
        {
          sub_100460A6C(v15 + 1);
          v14 = v27;
        }
        result = NSObject._rawHashValue(seed:)(v14[5]);
        v16 = v14 + 7;
        v17 = -1 << *((_BYTE *)v14 + 32);
        v18 = result & ~v17;
        v19 = v18 >> 6;
        if (((-1 << v18) & ~v14[(v18 >> 6) + 7]) != 0)
        {
          v20 = __clz(__rbit64((-1 << v18) & ~v14[(v18 >> 6) + 7])) | v18 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v21 = 0;
          v22 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v22 && (v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v23 = v19 == v22;
            if (v19 == v22)
              v19 = 0;
            v21 |= v23;
            v24 = v16[v19];
          }
          while (v24 == -1);
          v20 = __clz(__rbit64(~v24)) + (v19 << 6);
        }
        *(_QWORD *)((char *)v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        *(_QWORD *)(v14[6] + 8 * v20) = v13;
        ++v14[2];
      }
      v6 = __CocoaSet.Iterator.next()(result);
    }
    while (v6);
    v3 = v27;
  }
  swift_release(v4);
  return (Swift::Int)v3;
}

uint64_t sub_10031A3D0(uint64_t isStackAllocationSafe, void **a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = isStackAllocationSafe;
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = v5 & 0x3F;
  v7 = (1 << v5) + 63;
  v8 = v7 >> 6;
  v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_10031A540((unint64_t *)((char *)&v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v4, a2);
    v11 = v10;
    v12 = swift_release(v4);
    if (v2)
      swift_willThrow(v12);
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v9, -1);
    bzero(v13, v9);
    sub_10031A540((unint64_t *)v13, v8, v4, a2);
    v11 = v14;
    swift_release(v4);
    swift_slowDealloc(v13, -1, -1);
  }
  return v11;
}

void sub_10031A540(unint64_t *a1, uint64_t a2, uint64_t a3, void **a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  uint64_t v24;
  uint64_t v25;

  v6 = 0;
  v25 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    while (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v6 << 6);
      v14 = *a4;
      if (!*a4)
        goto LABEL_4;
LABEL_22:
      v18 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v13);
      type metadata accessor for SDAirDropSendConnection(0);
      v19 = v18;
      v20 = v14;
      v21 = static NSObject.== infix(_:_:)(v19, v20);

      if ((v21 & 1) == 0)
        goto LABEL_4;
    }
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v10)
      goto LABEL_24;
    v16 = *(_QWORD *)(v25 + 8 * v15);
    ++v6;
    if (!v16)
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_24;
      v16 = *(_QWORD *)(v25 + 8 * v6);
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_24;
        v16 = *(_QWORD *)(v25 + 8 * v6);
        if (!v16)
          break;
      }
    }
LABEL_21:
    v9 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v6 << 6);
    v14 = *a4;
    if (*a4)
      goto LABEL_22;
LABEL_4:
    *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v24++, 1))
      goto LABEL_27;
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_24:
    swift_retain(a3);
    sub_100569090(a1, a2, v24, a3);
    return;
  }
  v16 = *(_QWORD *)(v25 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v10)
      goto LABEL_24;
    v16 = *(_QWORD *)(v25 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_10031A738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_10031A750, 0, 0);
}

uint64_t sub_10031A750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + *(int *)(sub_100008384(&qword_1007BA398) + 52));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *(_QWORD *)(v0 + 32) = v3;
  v4 = sub_100008384(&qword_1007B5A60);
  *v3 = v0;
  v3[1] = sub_10031A7E8;
  return Task.value.getter(v0 + 48, v2, &type metadata for Bool, v4, &protocol self-conformance witness table for Error);
}

uint64_t sub_10031A7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10031A864;
  else
    v3 = sub_10031A84C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10031A84C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031A864()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031A870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  const char *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v4 = sub_100008384(&qword_1007B7760);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10031AF00();
  v12 = (void *)static NSUserDefaults.airdrop.getter(v11);
  v13 = SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter();

  if ((v13 & 1) == 0)
    goto LABEL_8;
  v14 = type metadata accessor for SFAirDrop.ContactInfo(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14) == 1
    || *(_QWORD *)(a2 + 16) != 1)
  {
    goto LABEL_8;
  }
  sub_100298F30(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000D0F0((uint64_t)v6, &qword_1007B7760);
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  sub_100221DB4((uint64_t)v6, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002B37F4();
  if ((v15 & 1) != 0)
  {
    sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_8;
  }
  sub_1002B35A4();
  v19 = v18;
  swift_bridgeObjectRelease(v18);
  if (v19)
  {
    v21 = (void *)static NSUserDefaults.airdrop.getter(v20);
    v16 = SFAirDropUserDefaults.alwaysExchangeContacts.getter();

  }
  else
  {
    v16 = 1;
  }
  sub_1002443C8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  return v16 & 1;
}

id sub_10031AA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void (**a10)(_QWORD, _QWORD), uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  char v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (**v54)(_QWORD, _QWORD);
  char *v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v68 = a8;
  v69 = a6;
  v71 = a5;
  v73 = a2;
  v62 = (void *)a1;
  v56 = a14;
  v66 = a11;
  v67 = a12;
  v54 = a10;
  v65 = type metadata accessor for Logger(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v60 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SFAirDropSend.Transfer(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v58 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for SFAirDropSend.Request(0);
  v22 = *(_QWORD *)(v61 - 8);
  v23 = __chkstk_darwin(v61);
  v55 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v72 = (char *)&v51 - v25;
  v59 = type metadata accessor for SFAirDrop.TransferType(0);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v14;
  v70 = a7;
  v64 = a13;
  v29 = a4;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v30 = a3;
    sub_100285F8C((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v30 = a3;
    v31 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections] = v31;
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls] = 0;
  v32 = v29;
  v52 = v29;
  sub_100221F28(v29, (uint64_t)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_senderContact], &qword_1007BA300);
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService] = a9;
  v33 = v54;
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_nearbyAgent] = v54;
  v34 = v56;
  *(_QWORD *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService] = v56;
  swift_retain(a9);
  v35 = v33;
  v36 = v34;

  v37 = v62;
  v38 = sub_10031A870(v32, (uint64_t)v62);
  v53 = v27;
  static SFAirDrop.TransferType.transferType(for:shouldExchangeContacts:)(v73, v38 & 1);
  v39 = v72;
  SFAirDropSend.Request.requestWithType(_:)(v27);
  v51 = v22;
  v40 = (uint64_t)v55;
  v41 = v39;
  v42 = v61;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v55, v41, v61);
  v43 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v58, v30, v19);
  v54 = (void (**)(_QWORD, _QWORD))v20;
  v56 = (void *)v19;
  v44 = v63;
  v45 = (uint64_t)v60;
  v46 = v71;
  v47 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v60, v71, v65);
  v48 = sub_1002BDFA0(v37, v68, v40, v43, v69, v70, v66, v67, v64, v45);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v47);
  sub_10000D0F0(v52, &qword_1007BA300);
  ((void (**)(uint64_t, void *))v54)[1](v30, v56);
  v49 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v49(v73, v42);
  v49((uint64_t)v72, v42);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v59);
  return v48;
}

uint64_t sub_10031AE04(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc(dword_1007BA344);
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_10000D098;
  return sub_1003053C0(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_10031AE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1007BA354);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000D098;
  return sub_1002FFF40(a1, a2, v6);
}

unint64_t sub_10031AF00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007B5210;
  if (!qword_1007B5210)
  {
    v1 = objc_opt_self(NSUserDefaults);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1007B5210);
  }
  return result;
}

uint64_t sub_10031AF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C040C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return sub_100422D64(a1, v4);
}

void sub_10031AF94()
{
  uint64_t v0;

  sub_100422E34(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031AF9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1007BA3C4);
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000D098;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_1003184A0, 0, 0);
}

uint64_t sub_10031B004(uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, const char *a10)
{
  uint64_t result;

  if (a10)
  {
    swift_bridgeObjectRetain(a2);
    sub_100244404(a3, a4);
    sub_10022E4A8(a5, a6);
    sub_10022E4A8(a7, a8);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

__n128 sub_10031B09C(uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, const char *a10)
{
  __n128 result;

  if (a10)
  {
    swift_bridgeObjectRelease(a2);
    sub_100225AA0(a3, a4);
    sub_100225AB4(a5, a6);
    sub_100225AB4(a7, a8);
    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

_QWORD *sub_10031B134(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  return a1;
}

uint64_t sub_10031B188(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007BA3E4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D098;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007BA3E0 + dword_1007BA3E0))(a1, v4);
}

void sub_10031B1F4()
{
  uint64_t v0;

  sub_100423128(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10031B1FC()
{
  return sub_10031B818((uint64_t *)&unk_1007B5A10);
}

uint64_t sub_10031B208()
{
  uint64_t v0;
  char v2;

  sub_100008384((uint64_t *)&unk_1007B5A10);
  v2 = 0;
  v0 = sub_100008384((uint64_t *)&unk_1007B5A10);
  return SFProgressContinuation.finish(with:)(&v2, v0);
}

uint64_t sub_10031B264()
{
  return sub_10031B818((uint64_t *)&unk_1007B5A10);
}

uint64_t sub_10031B270(char *a1)
{
  uint64_t v2;
  char v4;

  sub_100008384((uint64_t *)&unk_1007B5A10);
  v4 = *a1;
  v2 = sub_100008384((uint64_t *)&unk_1007B5A10);
  return SFProgressContinuation.finish(with:)(&v4, v2);
}

uint64_t sub_10031B2DC()
{
  return sub_10031B3F0((uint64_t *)&unk_1007B5A10);
}

uint64_t sub_10031B2E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5A10) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1007BA41C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_100319118(a1, v5, v6, v7);
}

uint64_t sub_10031B370()
{
  return sub_10031B818(&qword_1007BA430);
}

uint64_t sub_10031B37C()
{
  return sub_10031B888(&qword_1007BA430, (uint64_t (*)(uint64_t))sub_100318E78);
}

uint64_t sub_10031B390()
{
  return sub_10031B818(&qword_1007BA430);
}

uint64_t sub_10031B39C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007BA430);
  return SFProgressContinuation.finish(with:)(a1, v2);
}

uint64_t sub_10031B3E4()
{
  return sub_10031B3F0(&qword_1007BA430);
}

uint64_t sub_10031B3F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100008384(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10031B460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(&qword_1007BA430) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1007BA46C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000D098;
  return sub_100318F18(a1, v5, v6, v7);
}

uint64_t sub_10031B4E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v2 = sub_100008384(&qword_1007B7E48);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SFAirDrop.TransferType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v20 - v10;
  v12 = _s10AskRequestVMa(0);
  sub_100221F28(a1 + *(int *)(v12 + 20), (uint64_t)v4, &qword_1007B7E48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    v14 = SFAirDrop.TransferType.isFiles.getter(v13);
    v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if ((v14 & 1) != 0)
    {
      v16 = *(void (**)(char *, uint64_t))(v6 + 8);
      v16(v9, v5);
      v16(v11, v5);
    }
    else
    {
      v17 = SFAirDrop.TransferType.isCustom.getter(v15);
      v18 = *(void (**)(char *, uint64_t))(v6 + 8);
      v18(v9, v5);
      v18(v11, v5);
      if ((v17 & 1) == 0)
        return 0;
    }
    return 1;
  }
  sub_10000D0F0((uint64_t)v4, &qword_1007B7E48);
  return 0;
}

uint64_t sub_10031B68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for SFAirDropSend.Transfer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_100008384(&qword_1007BA490);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return swift_deallocObject(v0, v11 + 8, v10);
}

double sub_10031B760()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Transfer(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_100008384(&qword_1007BA490) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_100305E40(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10031B7DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_10031B7F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_10031B80C()
{
  return sub_10031B818(&qword_1007B6BE8);
}

uint64_t sub_10031B818(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100008384(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10031B874()
{
  return sub_10031B888(&qword_1007B6BE8, (uint64_t (*)(uint64_t))sub_1003192B0);
}

uint64_t sub_10031B888(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100008384(a1) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_10031B8C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100319350(a1, v1);
}

_QWORD *sub_10031B8C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[11];
  v7 = a1[12];
  swift_bridgeObjectRetain(a1[10]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_100244404(v6, v7);
  return a1;
}

uint64_t sub_10031B948()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;

  v1 = (int *)_s10AskRequestVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = v6 + v1[5];
  v10 = type metadata accessor for SFAirDrop.TransferType(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = (uint64_t *)(v6 + v1[6]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_100225AB4(*v12, v13);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[7] + 8)).n128_u64[0];
  *(_QWORD *)&v15 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[8] + 8), v14).n128_u64[0];
  *(_QWORD *)&v16 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[9] + 8), v15).n128_u64[0];
  *(_QWORD *)&v17 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[10] + 8), v16).n128_u64[0];
  *(_QWORD *)&v18 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[11]), v17).n128_u64[0];
  *(_QWORD *)&v19 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v1[12]), v18).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v6 + v1[13] + 8), v19);
  v20 = (uint64_t *)(v6 + v1[14]);
  v21 = v20[1];
  if (v21 >> 60 != 15)
    sub_100225AB4(*v20, v21);
  v22 = (uint64_t *)(v6 + v1[15]);
  v23 = v22[1];
  if (v23 >> 60 != 15)
    sub_100225AB4(*v22, v23);
  v24 = (uint64_t *)(v6 + v1[17]);
  v25 = v24[1];
  if (v25 >> 60 != 15)
    sub_100225AB4(*v24, v25);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10031BB18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s10AskRequestVMa(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1007BA51C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_100317818(a1, v5, v6);
}

uint64_t sub_10031BB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1007C040C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000D12C;
  return sub_100422D64(a1, v4);
}

uint64_t sub_10031BBF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = (_QWORD *)v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1007BA53C);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10000D098;
  return sub_100308910(a1, a2, v6, v7, v8);
}

uint64_t _s15EndpointFailureVMa(uint64_t a1)
{
  return sub_1002442D0(a1, qword_1007BA610, (uint64_t)&_s15EndpointFailureVMn);
}

uint64_t sub_10031BC80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10031BC90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031BCB8(uint64_t a1)
{
  return sub_10031BD58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_10030EBFC);
}

uint64_t sub_10031BCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SFAirDropSend.Request(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10031BD4C(uint64_t a1)
{
  return sub_10031BD58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_10030F260);
}

uint64_t sub_10031BD58(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), *((_QWORD *)v2 + 5), &v2[(v4 + 48) & ~v4]);
}

uint64_t sub_10031BDAC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031BDD0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10031BDFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031BE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for SFAirDropSend.Request(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7 + 8) & ~v7;
  v9 = v2 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v11 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v3, v11);
  swift_release(*(_QWORD *)(v0 + v4));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v9);
}

uint64_t sub_10031BF18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = *(_QWORD *)((char *)v1 + v6);
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + v8;
  v15 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc(dword_1007BA574);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000D098;
  return sub_10030D1CC(a1, v9, v10, v11, v13, v12, v14, v15);
}

uint64_t sub_10031C008()
{
  return sub_10030DE88() & 1;
}

uint64_t sub_10031C024(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_10031C05C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_10031C094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for SFAirDropSend.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v10 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v11 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(v10 + 8));
      v17 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v33 = v9;
      v18 = v5;
      v19 = v10 + v17[5];
      v20 = type metadata accessor for NWEndpoint(0);
      v21 = v19;
      v5 = v18;
      v9 = v33;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
      *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[7] + 8)).n128_u64[0];
      *(_QWORD *)&v23 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[8] + 8), v22).n128_u64[0];
      *(_QWORD *)&v24 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[9] + 8), v23).n128_u64[0];
      *(_QWORD *)&v25 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[10] + 8), v24).n128_u64[0];
      *(_QWORD *)&v26 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[11] + 8), v25).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v10 + v17[12] + 8), v26);
      v27 = (uint64_t *)(v10 + v17[14]);
      v28 = v27[1];
      if (v28 >> 60 != 15)
        sub_100225AB4(*v27, v28);
      break;
    case 2u:
      sub_100225AB4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
      v12 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v32 = v9;
      v13 = v5;
      v14 = v10 + v12[5];
      v15 = type metadata accessor for UUID(0);
      v16 = v14;
      v5 = v13;
      v9 = v32;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
      swift_unknownObjectRelease(*(_QWORD *)(v10 + v12[6]));
      swift_bridgeObjectRelease(*(const char **)(v10 + v12[7] + 8));
      break;
    case 3u:

      break;
    default:
      break;
  }
  v29 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + v8 + 8) & ~v8;
  swift_release(*(_QWORD *)(v0 + v29));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v30, v6);
  return swift_deallocObject(v0, v30 + v9, v3 | v8 | 7);
}

uint64_t sub_10031C2F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SFAirDropSend.Request(0) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1007BA59C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10000D098;
  return sub_10030E660(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_10031C3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for SFAirDropSend.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  v10 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v11 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(v10 + 8));
      v17 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v33 = v9;
      v18 = v5;
      v19 = v10 + v17[5];
      v20 = type metadata accessor for NWEndpoint(0);
      v21 = v19;
      v5 = v18;
      v9 = v33;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
      *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[7] + 8)).n128_u64[0];
      *(_QWORD *)&v23 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[8] + 8), v22).n128_u64[0];
      *(_QWORD *)&v24 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[9] + 8), v23).n128_u64[0];
      *(_QWORD *)&v25 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[10] + 8), v24).n128_u64[0];
      *(_QWORD *)&v26 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[11] + 8), v25).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v10 + v17[12] + 8), v26);
      v27 = (uint64_t *)(v10 + v17[14]);
      v28 = v27[1];
      if (v28 >> 60 != 15)
        sub_100225AB4(*v27, v28);
      break;
    case 2u:
      sub_100225AB4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
      v12 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v32 = v9;
      v13 = v5;
      v14 = v10 + v12[5];
      v15 = type metadata accessor for UUID(0);
      v16 = v14;
      v5 = v13;
      v9 = v32;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
      swift_unknownObjectRelease(*(_QWORD *)(v10 + v12[6]));
      swift_bridgeObjectRelease(*(const char **)(v10 + v12[7] + 8));
      break;
    case 3u:

      break;
    default:
      break;
  }
  v29 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + v8 + 8) & ~v8;
  swift_release(*(_QWORD *)(v0 + v29));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v30, v6);
  return swift_deallocObject(v0, v30 + v9, v3 | v8 | 7);
}

uint64_t sub_10031C63C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for SFAirDropSend.Request(0);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = v1[6];
  v12 = *(_QWORD *)((char *)v1 + v6);
  v13 = (_QWORD *)swift_task_alloc(dword_1007BA5AC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10000D098;
  return sub_10030B884(a1, v7, v8, v9, v10, v11, (uint64_t)v1 + v5, v12);
}

uint64_t sub_10031C728(uint64_t a1)
{
  uint64_t v1;

  return sub_10030B6A0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10031C744(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    v7 = (char *)&loc_10031C7B0 + 4 * byte_1005D2388[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }
  v8 = *a2;
  *a1 = *a2;
  v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain(v8);
  return v9;
}

uint64_t sub_10031CA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
      v5 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(a1 + 8));
      v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v10 = a1 + v9[5];
      v11 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      *(_QWORD *)&v12 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + v9[7] + 8)).n128_u64[0];
      *(_QWORD *)&v13 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + v9[8] + 8), v12).n128_u64[0];
      *(_QWORD *)&v14 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + v9[9] + 8), v13).n128_u64[0];
      *(_QWORD *)&v15 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + v9[10] + 8), v14).n128_u64[0];
      *(_QWORD *)&v16 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(a1 + v9[11] + 8), v15).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(a1 + v9[12] + 8), v16);
      v17 = (uint64_t *)(a1 + v9[14]);
      v18 = v17[1];
      if (v18 >> 60 != 15)
        sub_100225AB4(*v17, v18);
      break;
    case 2u:
      sub_100225AB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v6 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v7 = a1 + v6[5];
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      swift_unknownObjectRelease(*(_QWORD *)(a1 + v6[6]));
      swift_bridgeObjectRelease(*(const char **)(a1 + v6[7] + 8));
      break;
    case 3u:

      break;
    default:
      break;
  }
  v19 = a1 + *(int *)(a2 + 20);
  v20 = type metadata accessor for SFAirDropSend.Failure(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

void sub_10031CC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4 = (char *)sub_10031CCB8 + 4 * byte_1005D2390[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10031CCB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for NWEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v1, v4);
  swift_storeEnumTagMultiPayload(v0, v2, 0);
  v5 = *(int *)(v3 + 20);
  v6 = v0 + v5;
  v7 = v1 + v5;
  v8 = type metadata accessor for SFAirDropSend.Failure(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return v0;
}

uint64_t sub_10031CF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1002443C8(a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    v6 = (char *)&loc_10031D000 + 4 * byte_1005D2394[swift_getEnumCaseMultiPayload(a2, v5)];
    __asm { BR              X10 }
  }
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for SFAirDropSend.Failure(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_10031D30C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
    *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
    swift_storeEnumTagMultiPayload(a1, v6, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
    v15 = v14[5];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    v19 = v14[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
    *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
    *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
    *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
    *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
    *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
    *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
    *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
    *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
    *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for NWEndpoint(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, v6, 0);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for SFAirDropSend.Failure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_OWORD *sub_10031D558(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1002443C8((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
      *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
      swift_storeEnumTagMultiPayload(a1, v6, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v15 = v14[5];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      v19 = v14[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
      *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
      *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
      *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
      *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
      *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
      *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
      *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
      *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v8 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for SFAirDropSend.Failure(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_10031D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031D7C8);
}

uint64_t sub_10031D7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for SFAirDropSend.Failure(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10031D83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031D848);
}

uint64_t sub_10031D848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for SFAirDropSend.Failure(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10031D8C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for SDAirDropDiscoveredEndpoint(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SFAirDropSend.Failure(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10031D95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA648);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA648);
  if (qword_1007B3E60 != -1)
    swift_once(&qword_1007B3E60, sub_1002E9E84);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10031D9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  objc_class *ObjectType;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType(v8);
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnectionTimeout] = 5;
  v17 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v18 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint];
  v19 = type metadata accessor for NWEndpoint(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags] = a4;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus] = a5;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent] = a6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue] = a8;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient] = a7;
  v24.receiver = v8;
  v24.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v24, "init");
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);
  return v21;
}

uint64_t sub_10031DB2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2[84] = v1;
  v2[83] = a1;
  v3 = type metadata accessor for NWEndpoint(0);
  v2[85] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[86] = v4;
  v2[87] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v2[88] = v5;
  v2[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v2[90] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[91] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[92] = swift_task_alloc(v8);
  v2[93] = swift_task_alloc(v8);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v2[94] = static AirDropActor.shared;
  return swift_task_switch(sub_10031DC20, v9, 0);
}

uint64_t sub_10031DC20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  Date.init()(a1);
  v2 = (_QWORD *)swift_task_alloc(dword_1007BA6D4);
  *(_QWORD *)(v1 + 760) = v2;
  *v2 = v1;
  v2[1] = sub_10031DC7C;
  return sub_10031F07C(v1 + 16);
}

uint64_t sub_10031DC7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 760);
  *(_QWORD *)(v2 + 768) = v0;
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v30 = *(_QWORD *)(v2 + 64);
  v28 = *(_QWORD *)(v2 + 80);
  v29 = *(_QWORD *)(v2 + 72);
  v26 = *(_QWORD *)(v2 + 96);
  v27 = *(_QWORD *)(v2 + 88);
  v24 = *(_QWORD *)(v2 + 112);
  v25 = *(_QWORD *)(v2 + 104);
  v22 = *(_QWORD *)(v2 + 128);
  v23 = *(_QWORD *)(v2 + 120);
  v21 = *(_BYTE *)(v2 + 136);
  v10 = *(_QWORD *)(v2 + 160);
  v19 = *(_QWORD *)(v2 + 152);
  v20 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v2 + 776) = v10;
  swift_task_dealloc(v3);
  v11 = *(_QWORD *)(v2 + 752);
  if (v0)
  {
    v12 = sub_10031F008;
  }
  else
  {
    *(_QWORD *)(v2 + 320) = v4;
    *(_QWORD *)(v2 + 328) = v5;
    *(_QWORD *)(v2 + 336) = v6;
    *(_QWORD *)(v2 + 344) = v7;
    *(_QWORD *)(v2 + 352) = v8;
    *(_QWORD *)(v2 + 360) = v9;
    *(_QWORD *)(v2 + 368) = v30;
    *(_QWORD *)(v2 + 376) = v29;
    *(_QWORD *)(v2 + 384) = v28;
    *(_QWORD *)(v2 + 392) = v27;
    *(_QWORD *)(v2 + 400) = v26;
    *(_QWORD *)(v2 + 408) = v25;
    *(_QWORD *)(v2 + 416) = v24;
    *(_QWORD *)(v2 + 424) = v23;
    *(_QWORD *)(v2 + 432) = v22;
    *(_BYTE *)(v2 + 440) = v21;
    *(_QWORD *)(v2 + 448) = v20;
    *(_QWORD *)(v2 + 456) = v19;
    *(_QWORD *)(v2 + 464) = v10;
    v13 = *(_OWORD *)(v2 + 336);
    *(_OWORD *)(v2 + 472) = *(_OWORD *)(v2 + 320);
    *(_OWORD *)(v2 + 488) = v13;
    v14 = *(_OWORD *)(v2 + 448);
    v15 = *(_OWORD *)(v2 + 416);
    *(_OWORD *)(v2 + 584) = *(_OWORD *)(v2 + 432);
    *(_OWORD *)(v2 + 600) = v14;
    v16 = *(_OWORD *)(v2 + 384);
    *(_OWORD *)(v2 + 552) = *(_OWORD *)(v2 + 400);
    *(_OWORD *)(v2 + 568) = v15;
    v17 = *(_OWORD *)(v2 + 352);
    *(_OWORD *)(v2 + 520) = *(_OWORD *)(v2 + 368);
    *(_OWORD *)(v2 + 536) = v16;
    *(_OWORD *)(v2 + 504) = v17;
    v12 = sub_10031DDE8;
  }
  return swift_task_switch(v12, v11, 0);
}

uint64_t sub_10031DDE8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  SecTrustRef v6;
  SecTrustRef v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  __SecTrust *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  os_log_type_t type;
  uint64_t v61;
  uint64_t v62[2];

  v1 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 400);
  v2 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 280) = v2;
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 448);
  v3 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 336);
  v4 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 216) = v4;
  *(_OWORD *)(v0 + 232) = v1;
  v5 = *(_QWORD *)(v0 + 776);
  *(_OWORD *)(v0 + 168) = v3;
  *(_QWORD *)(v0 + 312) = v5;
  v6 = sub_1004FB6D8();
  *(_QWORD *)(v0 + 784) = v6;
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)(v0 + 776);
    sub_100321668((uint64_t *)(v0 + 168));
    swift_release(v8);
    if (qword_1007B3F08 != -1)
      swift_once(&qword_1007B3F08, sub_10031D95C);
    v9 = *(_QWORD *)(v0 + 744);
    v10 = *(_QWORD *)(v0 + 736);
    v11 = *(_QWORD *)(v0 + 728);
    v12 = *(_QWORD *)(v0 + 720);
    v13 = *(void **)(v0 + 672);
    v14 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 792) = sub_100221DF8(v14, (uint64_t)qword_1007BA648);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    sub_100321728((uint64_t *)(v0 + 320));
    v15 = v13;
    sub_100321728((uint64_t *)(v0 + 320));
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 736);
    v20 = *(_QWORD *)(v0 + 728);
    v21 = *(_QWORD *)(v0 + 720);
    v22 = *(void **)(v0 + 672);
    if (v18)
    {
      type = v17;
      v23 = swift_slowAlloc(32, -1);
      v61 = swift_slowAlloc(64, -1);
      v62[0] = v61;
      *(_DWORD *)v23 = 134218498;
      *(double *)(v0 + 640) = -Date.timeIntervalSinceNow.getter(v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v23 + 4);
      v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(v19, v21);
      *(_WORD *)(v23 + 12) = 2080;
      v25 = sub_100357C04();
      v27 = (const char *)v26;
      *(_QWORD *)(v0 + 648) = sub_100228BD8(v25, v26, v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v23 + 14);
      swift_bridgeObjectRelease(v27);
      sub_1003217E0((uint64_t *)(v0 + 320));
      v28 = sub_1003217E0((uint64_t *)(v0 + 320));
      *(_WORD *)(v23 + 22) = 2080;
      v29 = NWEndpoint.debugDescription.getter(v28);
      v31 = (const char *)v30;
      *(_QWORD *)(v0 + 656) = sub_100228BD8(v29, v30, v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664, v23 + 24);
      swift_bridgeObjectRelease(v31);

      _os_log_impl((void *)&_mh_execute_header, v16, type, "Got DISCOVER response - %fs - %s for endpoint %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 720));
      sub_1003217E0((uint64_t *)(v0 + 320));
      sub_1003217E0((uint64_t *)(v0 + 320));

    }
    *(_QWORD *)(v0 + 800) = v24;
    v48 = *(_QWORD *)(v0 + 672);
    v49 = *(void **)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus);
    *(_QWORD *)(v0 + 808) = v49;
    v50 = type metadata accessor for SDAirDropBonjourContactFetcher();
    v51 = swift_allocObject(v50, 128, 15);
    v52 = v49;
    v53 = v7;
    swift_defaultActor_initialize(v51);
    *(_QWORD *)(v51 + 112) = v52;
    *(_QWORD *)(v51 + 120) = v53;
    *(_QWORD *)(v0 + 616) = v51;
    *(_QWORD *)(v0 + 624) = v50;
    *(_QWORD *)(v0 + 816) = objc_msgSendSuper2((objc_super *)(v0 + 616), "init");
    v54 = *(_QWORD *)(v0 + 352);
    v55 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 824) = v54;
    *(_QWORD *)(v0 + 832) = v55;
    v56 = v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName;
    v57 = *(_QWORD *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName);
    *(_QWORD *)(v0 + 840) = v57;
    v58 = *(_QWORD *)(v56 + 8);
    *(_QWORD *)(v0 + 848) = v58;
    v59 = (_QWORD *)swift_task_alloc(dword_1007C35D4);
    *(_QWORD *)(v0 + 856) = v59;
    *v59 = v0;
    v59[1] = sub_10031E348;
    return sub_1004BDFAC(v54, v55, v57, v58);
  }
  else
  {
    if (qword_1007B3F08 != -1)
      swift_once(&qword_1007B3F08, sub_10031D95C);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100221DF8(v32, (uint64_t)qword_1007BA648);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing SecTrust dropping", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
    v37 = *(_QWORD *)(v0 + 744);
    v38 = *(_QWORD *)(v0 + 728);
    v39 = *(_QWORD *)(v0 + 720);

    v40 = type metadata accessor for SFAirDropSend.Failure(0);
    v41 = sub_100321560();
    swift_allocError(v40, v41, 0, 0);
    v43 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, enum case for SFAirDropSend.Failure.badRequest(_:), v40);
    swift_willThrow(v43);
    sub_1003215A8((uint64_t *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    v44 = *(_QWORD *)(v0 + 736);
    v45 = *(_QWORD *)(v0 + 712);
    v46 = *(_QWORD *)(v0 + 696);
    swift_task_dealloc(*(_QWORD *)(v0 + 744));
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10031E348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD **)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 856);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 752);
  v5[108] = a1;
  v5[109] = a2;
  v5[110] = a3;
  v5[111] = a4;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_10031E3B4, v7, 0);
}

uint64_t sub_10031E3B4()
{
  uint64_t v0;
  unint64_t v1;
  Class isa;
  uint64_t v3;
  __SecTrust *v4;
  NSString v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  const char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  __n128 v27;
  const char *v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  double v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  char *v47;
  char *v48;
  uint64_t *v49;
  const char *v50;
  const char *v51;
  double v52;
  double v53;
  uint64_t v54;
  _QWORD *v55;
  const char *v57;
  double v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  const char *v82;
  const char *v83;
  uint64_t v84;
  char v85;
  uint64_t v86[14];

  v1 = *(_QWORD *)(v0 + 832);
  if (v1 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 824);
    sub_10022E4A8(v3, *(_QWORD *)(v0 + 832));
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100225AA0(v3, v1);
  }
  v4 = (__SecTrust *)*(id *)(v0 + 784);
  v5 = String._bridgeToObjectiveC()();
  v6 = (uint64_t)sub_10004FF20(isa, v4, v5);

  if (v6)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    swift_bridgeObjectRetain(v10);
    LOBYTE(v6) = sub_10038FA88();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  *(_QWORD *)(v0 + 904) = v10;
  *(_QWORD *)(v0 + 896) = v8;
  *(_BYTE *)(v0 + 952) = v6 & 1;
  v11 = *(const char **)(v0 + 872);
  v85 = v6;
  v82 = v10;
  v83 = v11;
  if (v11)
  {
    v12 = objc_msgSend(*(id *)(v0 + 808), "meCard", swift_bridgeObjectRetain(v11, v7).n128_f64[0]);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)(v0 + 872);
      v15 = *(_QWORD *)(v0 + 864);
      v16 = objc_msgSend(v12, "identifier");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v6 = v18;

      if (v15 == v17 && v14 == v6)
      {
        v19 = 1;
        v11 = v83;
      }
      else
      {
        v11 = v83;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v0 + 864), v83, v17, v6, 0);
      }
      swift_bridgeObjectRelease((const char *)v6);

      LOBYTE(v6) = v85;
    }
    else
    {
      v19 = 0;
    }
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v19 = 0;
  }
  v20 = Logger.logObject.getter(*(id *)(v0 + 672));
  v21 = static os_log_type_t.default.getter(v20);
  v84 = v8;
  if (os_log_type_enabled(v20, v21))
  {
    v80 = v19;
    v22 = *(const char **)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 840);
    v76 = *(void **)(v0 + 672);
    v23 = swift_slowAlloc(24, -1);
    v24 = swift_slowAlloc(32, -1);
    v86[0] = v24;
    *(_DWORD *)v23 = 136315650;
    swift_bridgeObjectRetain(v22);
    *(_QWORD *)(v0 + 632) = sub_100228BD8(v6, (unint64_t)v22, v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640, v23 + 4);
    v25 = v22;
    v19 = v80;
    swift_bridgeObjectRelease(v25);

    *(_WORD *)(v23 + 12) = 1024;
    *(_DWORD *)(v0 + 944) = v80 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 944, v0 + 948, v23 + 14);
    *(_WORD *)(v23 + 18) = 1024;
    LOBYTE(v6) = v85;
    *(_DWORD *)(v0 + 948) = v85 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 948, v0 + 952, v23 + 20);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s - isContactIDMe: %{BOOL}d isSameAccount: %{BOOL}d", (uint8_t *)v23, 0x18u);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

  }
  v26 = *(_QWORD *)(v0 + 672);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 688) + 16))(*(_QWORD *)(v0 + 696), v26 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint, *(_QWORD *)(v0 + 680));
  v81 = *(_QWORD *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags);
  if (v6 & 1 | ((v19 & 1) == 0))
  {
    v28 = *(const char **)(v0 + 424);
    v79 = *(_QWORD *)(v0 + 416);
    v27 = swift_bridgeObjectRetain(v28);
    if ((v6 & 1) == 0)
      goto LABEL_22;
LABEL_25:
    v77 = 0;
    v78 = 0;
    v30 = 0;
    v31 = *(_QWORD *)(v0 + 368);
    v29 = *(const char **)(v0 + 344);
    v74 = 0;
    v75 = *(_QWORD *)(v0 + 336);
    v32 = *(const char **)(v0 + 376);
    v27 = swift_bridgeObjectRetain(v32, v27.n128_f64[0]);
    goto LABEL_27;
  }
  v79 = 0;
  v28 = 0;
  if ((v6 & 1) != 0)
    goto LABEL_25;
LABEL_22:
  v29 = *(const char **)(v0 + 344);
  v75 = *(_QWORD *)(v0 + 336);
  if ((v19 & 1) != 0)
  {
    v77 = 0;
    v78 = 0;
    v74 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v78 = *(const char **)(v0 + 888);
    *(_QWORD *)&v33 = swift_bridgeObjectRetain(v78, v27.n128_f64[0]).n128_u64[0];
    v31 = 0;
    v32 = 0;
    v77 = *(_QWORD *)(v0 + 880);
    v74 = *(_QWORD *)(v0 + 864);
    v30 = *(const char **)(v0 + 872);
    v27 = swift_bridgeObjectRetain(v30, v33);
  }
LABEL_27:
  v34 = *(_QWORD *)(v0 + 848);
  v35 = *(char **)(v0 + 712);
  v36 = *(int **)(v0 + 704);
  v37 = *(_QWORD *)(v0 + 696);
  v38 = *(_QWORD *)(v0 + 688);
  v39 = *(_QWORD *)(v0 + 680);
  v40 = *(_QWORD *)(v0 + 320);
  v41 = *(_QWORD *)(v0 + 328);
  *(_QWORD *)v35 = *(_QWORD *)(v0 + 840);
  *((_QWORD *)v35 + 1) = v34;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v38 + 32))(&v35[v36[5]], v37, v39, v27);
  v42 = &v35[v36[6]];
  *(_QWORD *)v42 = v81;
  v42[8] = 0;
  v43 = &v35[v36[7]];
  *(_QWORD *)v43 = v79;
  *((_QWORD *)v43 + 1) = v28;
  v44 = &v35[v36[8]];
  *(_QWORD *)v44 = v31;
  *((_QWORD *)v44 + 1) = v32;
  v45 = &v35[v36[9]];
  *(_QWORD *)v45 = v75;
  *((_QWORD *)v45 + 1) = v29;
  v46 = (uint64_t *)&v35[v36[10]];
  *v46 = v84;
  v46[1] = (uint64_t)v82;
  v47 = &v35[v36[11]];
  *(_QWORD *)v47 = v74;
  *((_QWORD *)v47 + 1) = v30;
  v48 = &v35[v36[12]];
  *(_QWORD *)v48 = v77;
  *((_QWORD *)v48 + 1) = v78;
  v35[v36[13]] = v85 & 1;
  v49 = (uint64_t *)&v35[v36[14]];
  *v49 = v40;
  v49[1] = v41;
  v35[v36[15]] = 1;
  v35[v36[16]] = 1;
  if (v83 && *(_QWORD *)(v0 + 392) >> 60 != 15 && (v81 & 0x2000) != 0)
  {
    v50 = *(const char **)(v0 + 872);
    v51 = *(const char **)(v0 + 848);
    *(_QWORD *)&v52 = swift_bridgeObjectRetain(v29).n128_u64[0];
    *(_QWORD *)&v53 = swift_bridgeObjectRetain(v50, v52).n128_u64[0];
    swift_bridgeObjectRetain(v51, v53);
    sub_100244404(v40, v41);
    v54 = dword_1007BA6E4;
    swift_bridgeObjectRetain(v82);
    v55 = (_QWORD *)swift_task_alloc(v54);
    *(_QWORD *)(v0 + 912) = v55;
    *v55 = v0;
    v55[1] = sub_10031EAE4;
    return sub_100321898();
  }
  else
  {
    v57 = *(const char **)(v0 + 848);
    *(_QWORD *)&v58 = swift_bridgeObjectRetain(v29).n128_u64[0];
    swift_bridgeObjectRetain(v57, v58);
    sub_100244404(v40, v41);
    swift_bridgeObjectRetain(v82);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.default.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "No receiver deviceIRKData or contactID or unsupported client - skipping IDENTITY-SHARE", v62, 2u);
      swift_slowDealloc(v62, -1, -1);
    }

    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Finished DISCOVER", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
    }

    v67 = *(_QWORD *)(v0 + 432);
    v68 = *(_BYTE *)(v0 + 440);
    v69 = *(_QWORD *)(v0 + 448);
    v70 = *(_QWORD *)(v0 + 456);
    v71 = (_QWORD *)swift_task_alloc(dword_1007BA6DC);
    *(_QWORD *)(v0 + 936) = v71;
    *v71 = v0;
    v71[1] = sub_10031EE9C;
    v72 = *(_QWORD *)(v0 + 872);
    v73 = *(_QWORD *)(v0 + 864);
    v86[12] = v69;
    v86[13] = v70;
    return sub_10031F904(v0 + 472, v84, (uint64_t)v82, v73, v72, v85 & 1, v67, v68);
  }
}

uint64_t sub_10031EAE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(*v1 + 912);
  v3 = *v1;
  *(_QWORD *)(v3 + 920) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v4 = *(const char **)(v3 + 888);
    v5 = *(_QWORD *)(v3 + 872);
    v6 = *(_QWORD *)(v3 + 752);
    swift_bridgeObjectRelease(*(const char **)(v3 + 904));
    swift_bridgeObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease(v4);
    return swift_task_switch(sub_10031EDD8, v6, 0);
  }
  else
  {
    swift_bridgeObjectRelease(*(const char **)(v3 + 872));
    v8 = *(_QWORD *)(v3 + 432);
    v9 = *(_BYTE *)(v3 + 440);
    v10 = (_QWORD *)swift_task_alloc(dword_1007BA6DC);
    *(_QWORD *)(v3 + 928) = v10;
    *v10 = v3;
    v10[1] = sub_10031EBFC;
    return sub_10031F904(v3 + 472, *(_QWORD *)(v3 + 896), *(_QWORD *)(v3 + 904), *(_QWORD *)(v3 + 864), *(_QWORD *)(v3 + 872), *(_BYTE *)(v3 + 952), v8, v9);
  }
}

uint64_t sub_10031EBFC()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  double v5;
  double v6;

  v1 = *(const char **)(*(_QWORD *)v0 + 904);
  v2 = *(const char **)(*(_QWORD *)v0 + 888);
  v3 = *(const char **)(*(_QWORD *)v0 + 872);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 752);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 928));
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v3, v5).n128_u64[0];
  swift_bridgeObjectRelease(v2, v6);
  return swift_task_switch(sub_10031EC80, v4, 0);
}

uint64_t sub_10031EC80(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Finished DISCOVER and IDENTITY-SHARE", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(void **)(v1 + 784);

  v6 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
  v7 = *(_QWORD *)(v1 + 744);
  v8 = *(_QWORD *)(v1 + 736);
  v9 = *(_QWORD *)(v1 + 720);
  v10 = *(_QWORD *)(v1 + 712);
  v11 = *(_QWORD *)(v1 + 696);
  v12 = *(_QWORD *)(v1 + 664);

  sub_1003217E0((uint64_t *)(v1 + 320));
  sub_1003215A8((uint64_t *)(v1 + 168));
  v6(v7, v9);
  sub_100221DB4(v10, v12, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  swift_storeEnumTagMultiPayload(v12, v13, 1);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10031EDD8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  v2 = *(void **)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 744);
  v4 = *(_QWORD *)(v0 + 720);
  v5 = *(_QWORD *)(v0 + 712);

  sub_1003217E0((uint64_t *)(v0 + 320));
  sub_1003215A8((uint64_t *)(v0 + 168));
  sub_1002443C8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v1(v3, v4);
  v6 = *(_QWORD *)(v0 + 736);
  v7 = *(_QWORD *)(v0 + 712);
  v8 = *(_QWORD *)(v0 + 696);
  swift_task_dealloc(*(_QWORD *)(v0 + 744));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031EE9C()
{
  uint64_t v0;
  const char *v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  double v5;
  double v6;

  v1 = *(const char **)(*(_QWORD *)v0 + 904);
  v2 = *(const char **)(*(_QWORD *)v0 + 888);
  v3 = *(const char **)(*(_QWORD *)v0 + 872);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 752);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 936));
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v3, v5).n128_u64[0];
  swift_bridgeObjectRelease(v2, v6);
  return swift_task_switch(sub_10031EF20, v4, 0);
}

uint64_t sub_10031EF20()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 720);
  v5 = *(_QWORD *)(v0 + 712);
  v6 = *(_QWORD *)(v0 + 696);
  v7 = *(_QWORD *)(v0 + 664);

  sub_1003217E0((uint64_t *)(v0 + 320));
  sub_1003215A8((uint64_t *)(v0 + 168));
  v1(v2, v4);
  sub_100221DB4(v5, v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  swift_storeEnumTagMultiPayload(v7, v8, 1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031F008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 728) + 8))(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 720));
  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 712);
  v3 = *(_QWORD *)(v0 + 696);
  swift_task_dealloc(*(_QWORD *)(v0 + 744));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031F07C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_100008384(&qword_1007B68A0);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SDAirDropMessage(0);
  v2[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[11] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v7);
  v2[13] = swift_task_alloc(v7);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v8 = static AirDropActor.shared;
  v2[14] = static AirDropActor.shared;
  return swift_task_switch(sub_10031F148, v8, 0);
}

uint64_t sub_10031F148()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v1 = (void *)v0[7];
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA648);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = (void *)v0[7];
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v14 = v8;
    v9 = NWEndpoint.debugDescription.getter(v8);
    v11 = (const char *)v10;
    v0[5] = sub_100228BD8(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6, v7 + 4);
    swift_bridgeObjectRelease(v11, v14);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending DISCOVER request %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v12 = (_QWORD *)swift_task_alloc(dword_1007BA6EC);
  v0[15] = v12;
  *v12 = v0;
  v12[1] = sub_10031F310;
  return sub_10032017C();
}

uint64_t sub_10031F310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10031F36C, v3, 0);
}

uint64_t sub_10031F36C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v21;

  v1 = v0[16];
  v2 = v0[12];
  v3 = (uint64_t *)v0[13];
  v4 = v0[10];
  v21 = v0[11];
  v6 = v0[8];
  v5 = v0[9];
  v7 = (char *)v0[7];
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection];
  *(_QWORD *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = v1;
  swift_retain(v1);
  swift_release(v8);
  v9 = sub_10038FBF4();
  v0[17] = v9;
  v0[18] = v10;
  if (v10 >> 60 == 15)
    v11 = 0;
  else
    v11 = (uint64_t)v9;
  if (v10 >> 60 == 15)
    v12 = 0xC000000000000000;
  else
    v12 = v10;
  *v3 = v11;
  v3[1] = v12;
  swift_storeEnumTagMultiPayload(v3, v5, 2);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_100322434((uint64_t)v3, v2);
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_100722638, v15 + v21, v14 | 7);
  v0[19] = v16;
  *(_QWORD *)(v16 + 16) = v1;
  sub_100221DB4(v2, v16 + v15, type metadata accessor for SDAirDropMessage);
  v17 = swift_allocObject(&unk_100722660, 32, 7);
  v0[20] = v17;
  *(_QWORD *)(v17 + 16) = v7;
  *(_QWORD *)(v17 + 24) = v1;
  swift_retain_n(v1, 2);
  v18 = v7;
  sub_10022E4A8(v11, v12);
  v19 = (_QWORD *)swift_task_alloc(async function pointer to concurrentRace<A>(priority:operation:against:)[1]);
  v0[21] = v19;
  *v19 = v0;
  v19[1] = sub_10031F528;
  return concurrentRace<A>(priority:operation:against:)(v0 + 2, v0[8], &unk_1007BA720, v16, &unk_1007BA730, v17, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10031F528()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = (*v1)[21];
  (*v1)[22] = v0;
  swift_task_dealloc(v3);
  v5 = v2[19];
  v4 = v2[20];
  v6 = v2[14];
  sub_100322564(v2[8]);
  swift_release(v4);
  swift_release(v5);
  if (v0)
    v7 = sub_10031F848;
  else
    v7 = sub_10031F5BC;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_10031F5BC()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v6 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v6 = v5;
    v7 = type metadata accessor for SFAirDropSend.Failure(0);
    v8 = sub_100321560();
    swift_allocError(v7, v8, 0, 0);
    v10 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *v6, v7);
    swift_willThrow(v10);
    goto LABEL_10;
  }
  v4 = *(_QWORD *)(v0 + 176);
  sub_10022E4A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_10052DC00(v3, v2);
  if (v4)
  {
    sub_100225AB4(v3, v2);
LABEL_10:
    sub_100225AB4(v3, v2);
    v11 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 64);
    if (v11 >> 60 == 15)
      v16 = 0;
    else
      v16 = *(_QWORD *)(v0 + 136);
    if (v11 >> 60 == 15)
      v17 = 0xC000000000000000;
    else
      v17 = *(_QWORD *)(v0 + 144);
    NWConnection.forceCancel()();
    swift_willThrow(v18);
    sub_100225AB4(v16, v17);
    swift_release(v12);
    sub_1002443C8(v13, type metadata accessor for SDAirDropMessage);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 96);
  v28 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 48);
  if (v20 >> 60 == 15)
    v24 = 0;
  else
    v24 = *(_QWORD *)(v0 + 136);
  if (v20 >> 60 == 15)
    v25 = 0xC000000000000000;
  else
    v25 = *(_QWORD *)(v0 + 144);
  sub_100225AB4(v3, v2);
  NWConnection.forceCancel()();
  sub_100225AB4(v3, v2);
  sub_100225AB4(v24, v25);
  sub_1002443C8(v22, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  *(_OWORD *)v23 = v29;
  *(_OWORD *)(v23 + 16) = v30;
  *(_OWORD *)(v23 + 32) = v31;
  *(_OWORD *)(v23 + 48) = v32;
  *(_OWORD *)(v23 + 64) = v33;
  *(_OWORD *)(v23 + 80) = v34;
  *(_OWORD *)(v23 + 96) = v35;
  *(_QWORD *)(v23 + 112) = v36;
  *(_BYTE *)(v23 + 120) = v37 & 1;
  *(_QWORD *)(v23 + 128) = v38;
  *(_QWORD *)(v23 + 136) = v39;
  *(_QWORD *)(v23 + 144) = v21;
  v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_10031F848()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 == 15)
    v6 = 0;
  else
    v6 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 == 15)
    v7 = 0xC000000000000000;
  else
    v7 = *(_QWORD *)(v0 + 144);
  NWConnection.forceCancel()();
  swift_willThrow(v8);
  sub_100225AB4(v6, v7);
  swift_release(v2);
  sub_1002443C8(v3, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v9 + 272) = v13;
  *(_QWORD *)(v9 + 280) = v8;
  *(_QWORD *)(v9 + 256) = a7;
  *(_QWORD *)(v9 + 264) = v12;
  *(_BYTE *)(v9 + 313) = a8;
  *(_BYTE *)(v9 + 312) = a6;
  *(_QWORD *)(v9 + 240) = a4;
  *(_QWORD *)(v9 + 248) = a5;
  *(_QWORD *)(v9 + 224) = a2;
  *(_QWORD *)(v9 + 232) = a3;
  *(_QWORD *)(v9 + 216) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v10 = static AirDropActor.shared;
  *(_QWORD *)(v9 + 288) = static AirDropActor.shared;
  return swift_task_switch(sub_10031F98C, v10, 0);
}

uint64_t sub_10031F98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  id v17;
  void *v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if ((*(_BYTE *)(v0 + 312) & 1) != 0)
  {
    if (qword_1007B3F08 != -1)
      swift_once(&qword_1007B3F08, sub_10031D95C);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100221DF8(v1, (uint64_t)qword_1007BA648);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_16;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "SameAccount device detected, skipping identity update";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc(v5, -1, -1);
LABEL_16:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 232);
  if (!v7)
    goto LABEL_11;
  sub_10022E718(*(_QWORD *)(v0 + 216) + 96, v0 + 136, &qword_1007B54E0);
  sub_10022E718(v0 + 136, v0 + 120, &qword_1007B54E0);
  v8 = *(_QWORD *)(v0 + 128);
  if (!v8)
    goto LABEL_11;
  v9 = *(const char **)(v0 + 248);
  if (!v9)
    goto LABEL_11;
  v10 = *(_QWORD *)(v0 + 120);
  sub_10022E718(*(_QWORD *)(v0 + 216) + 64, v0 + 152, &qword_1007B5220);
  sub_10022E718(v0 + 152, v0 + 184, &qword_1007B5220);
  v11 = *(_QWORD *)(v0 + 192);
  if (v11 >> 60 == 15
    || (v29 = *(_QWORD *)(v0 + 184),
        sub_10022E718(*(_QWORD *)(v0 + 216) + 80, v0 + 168, &qword_1007B5220),
        sub_10022E718(v0 + 168, v0 + 200, &qword_1007B5220),
        v12 = *(_QWORD *)(v0 + 208),
        v12 >> 60 == 15))
  {
LABEL_11:
    if (qword_1007B3F08 != -1)
      swift_once(&qword_1007B3F08, sub_10031D95C);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100221DF8(v13, (uint64_t)qword_1007BA648);
    v3 = Logger.logObject.getter(v14);
    v4 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_16;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "Missing data for identity update, skipping";
    goto LABEL_15;
  }
  v27 = *(_QWORD *)(v0 + 280);
  v28 = v0 + 16;
  v22 = *(_QWORD *)(v0 + 264);
  v24 = *(void **)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 240);
  v23 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 200);
  if ((*(_BYTE *)(v0 + 313) & 1) != 0)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain(v9);
  sub_100322628(v0 + 152);
  sub_100322628(v0 + 168);
  v17 = sub_1002F0254(v23, v7, v25, (uint64_t)v9, v29, v11, v26, v12, v10, v8, v16, v22, v24);
  *(_QWORD *)(v0 + 296) = v17;
  v18 = *(void **)(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10031FD10;
  v20 = swift_continuation_init(v28, 1, v19);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v21 = (_QWORD *)(v0 + 80);
  v21[1] = 0x40000000;
  v21[2] = sub_1002EF5D4;
  v21[3] = &unk_100722610;
  v21[4] = v20;
  objc_msgSend(v18, "addOrUpdateIdentity:completion:", v17, v21);
  return swift_continuation_await(v28);
}

uint64_t sub_10031FD10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(v1 + 304) = v2;
  v3 = *(_QWORD *)(v1 + 288);
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v1 + 248));
    v4 = sub_10031FF68;
  }
  else
  {
    v4 = sub_10031FD7C;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_10031FD7C()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;

  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v1 = *(const char **)(v0 + 248);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA648);
  swift_bridgeObjectRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 296);
  v8 = *(const char **)(v0 + 248);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 240);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v13 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(_QWORD *)(v0 + 80) = sub_100228BD8(v9, (unint64_t)v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4);
    swift_bridgeObjectRelease_n(v8, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Added/updated identity for contact %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    sub_100322654(v0 + 152);

  }
  else
  {
    sub_100322654(v0 + 152);
    swift_bridgeObjectRelease_n(v8, 2);

  }
  sub_100322654(v0 + 168);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031FF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  void *v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;

  swift_willThrow(a1);
  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v2 = *(_QWORD *)(v1 + 304);
  v3 = type metadata accessor for Logger(0);
  sub_100221DF8(v3, (uint64_t)qword_1007BA648);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(void **)(v1 + 296);
  v8 = *(_QWORD *)(v1 + 304);
  if (v7)
  {
    v15 = *(void **)(v1 + 296);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v8);
    v12 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v1 + 80) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Identity update failed %@", v10, 0xCu);
    v13 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
    sub_100322654(v1 + 152);

    sub_100322654(v1 + 168);
    swift_errorRelease(v8);
  }
  else
  {
    sub_100322654(v1 + 152);

    sub_100322654(v1 + 168);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10032017C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = v0;
  v2 = type metadata accessor for NWEndpoint(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_100320234, static AirDropActor.shared, 0);
}

uint64_t sub_100320234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  uint64_t v13;
  nw_content_context_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(v1 + 56);
  v2 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = UUID.init()(a1);
  v10 = UUID.uuidString.getter(v9);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  v13 = String.utf8CString.getter(v10, v12);
  swift_bridgeObjectRelease(v12);
  v14 = nw_content_context_create((const char *)(v13 + 32));
  swift_release(v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v8 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint, v6);
  v15 = *(NSObject **)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue);
  v16 = swift_allocObject(&unk_1007225F8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v8);
  v17 = swift_allocObject(&unk_1007225F8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v8);
  swift_unknownObjectRetain(v14);
  swift_retain(v16);
  swift_retain(v17);
  v18 = sub_10050298C(v15, (uint64_t)v14, 0, (uint64_t)sub_100322618, v16, (uint64_t)sub_100322620, v17);
  swift_release_n(v17, 2);
  swift_release_n(v16, 2);
  swift_unknownObjectRelease(v14);
  v19 = type metadata accessor for NWConnection(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = NWConnection.init(to:using:)(v4, v18);
  NWConnection.start(queue:)(v15);
  swift_unknownObjectRelease(v14);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v20);
}

void sub_100320400(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6, v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    a3(1);

  }
}

uint64_t sub_100320464(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  sec_identity_t v9;
  _BYTE v10[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = sub_10038E260();
    a2();

    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_1003204EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_10032055C, v4, 0);
}

uint64_t sub_10032055C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10052C154();
  v0[9] = v1;
  sub_10052C718();
  v0[10] = v2;
  v0[11] = v3;
  return swift_task_switch(sub_1003205DC, 0, 0);
}

uint64_t sub_1003205DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  *(_BYTE *)(v3 + 48) = 1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_10032069C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10032069C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100320808;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 96));
    v4 = sub_100320708;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100320708()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[9];
  sub_100225AB4(v0[10], v0[11]);
  swift_unknownObjectRelease(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v2;
  *v2 = v0;
  v2[1] = sub_1003207A4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, v0[6], &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1003207A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003208CC;
  else
    v3 = sub_100320888;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100320808()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_100320848, v1, 0);
}

uint64_t sub_100320848()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_100225AB4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100320888()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 152) = *(_BYTE *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return swift_task_switch(sub_1003208AC, v1, 0);
}

uint64_t sub_1003208AC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_OWORD *)(v0 + 136);
  *(_BYTE *)v1 = *(_BYTE *)(v0 + 152);
  *(_OWORD *)(v1 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003208CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003208D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v4 = type metadata accessor for ContinuousClock(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_10032096C, v6, 0);
}

uint64_t sub_10032096C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()(a1);
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v2 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_1003209EC;
  return v4(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1003209EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  v4 = v2[8];
  (*(void (**)(_QWORD, _QWORD))(v2[6] + 8))(v2[7], v2[5]);
  if (v0)
    v5 = sub_100320A68;
  else
    v5 = sub_100320A9C;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100320A68()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100320A9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  char *v6;
  uint8_t *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v15;

  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v1 = *(void **)(v0 + 24);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA648);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(char **)(v0 + 24);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    v9 = *(const char **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)(v0 + 16) = sub_100228BD8(v10, (unint64_t)v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    swift_bridgeObjectRelease(v9);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "DISCOVER request timeout for serviceName %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  NWConnection.forceCancel()();
  v11 = sub_1003225A4();
  v12 = swift_allocError(&type metadata for SDNWHTTPResponseError, v11, 0, 0);
  *v13 = 504;
  swift_willThrow(v12);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100320C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100320D00, v4, 0);
}

uint64_t sub_100320D00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10052C154();
  v0[9] = v1;
  sub_10052C718();
  v0[10] = v2;
  v0[11] = v3;
  return swift_task_switch(sub_100320D80, 0, 0);
}

uint64_t sub_100320D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  *(_BYTE *)(v3 + 48) = 1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_100320E40;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000029, 0x8000000100616140, sub_1003225E8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100320E40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100320FAC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 96));
    v4 = sub_100320EAC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100320EAC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[9];
  sub_100225AB4(v0[10], v0[11]);
  swift_unknownObjectRelease(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v2;
  *v2 = v0;
  v2[1] = sub_100320F48;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x8000000100616170, sub_1003225EC, v0[6], &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100320F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100322CB0;
  else
    v3 = sub_100320FEC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100320FAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_100322CAC, v1, 0);
}

uint64_t sub_100320FEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 152) = *(_BYTE *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return swift_task_switch(sub_100322CA4, v1, 0);
}

uint64_t sub_100321010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v4 = type metadata accessor for ContinuousClock(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v6 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_1003210A4, v6, 0);
}

uint64_t sub_1003210A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()(a1);
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1007B6518 + dword_1007B6518);
  v2 = (_QWORD *)swift_task_alloc(unk_1007B651C);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_100321124;
  return v4(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_100321124()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  v4 = v2[8];
  (*(void (**)(_QWORD, _QWORD))(v2[6] + 8))(v2[7], v2[5]);
  if (v0)
    v5 = sub_100322CA8;
  else
    v5 = sub_1003211A0;
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003211A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  char *v6;
  uint8_t *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v15;

  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v1 = *(void **)(v0 + 24);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA648);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(char **)(v0 + 24);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    v9 = *(const char **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)(v0 + 16) = sub_100228BD8(v10, (unint64_t)v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    swift_bridgeObjectRelease(v9);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "IDENTITY-SHARE request timeout for serviceName %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  NWConnection.forceCancel()();
  v11 = sub_1003225A4();
  v12 = swift_allocError(&type metadata for SDNWHTTPResponseError, v11, 0, 0);
  *v13 = 504;
  swift_willThrow(v12);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100321474()
{
  return type metadata accessor for SDAirDropBonjourDiscoverConnection(0);
}

uint64_t type metadata accessor for SDAirDropBonjourDiscoverConnection(uint64_t a1)
{
  uint64_t result;

  result = qword_1007BA6B8;
  if (!qword_1007BA6B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropBonjourDiscoverConnection);
  return result;
}

uint64_t sub_1003214B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_1005D2488;
  result = type metadata accessor for NWEndpoint(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_1005D24A0;
    v4[4] = &unk_1005D24A0;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_100321560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1007BD9D0;
  if (!qword_1007BD9D0)
  {
    v1 = type metadata accessor for SFAirDropSend.Failure(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SFAirDropSend.Failure, v1);
    atomic_store(result, &qword_1007BD9D0);
  }
  return result;
}

uint64_t *sub_1003215A8(uint64_t *a1)
{
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  const char *v13;
  const char *v14;

  v2 = (const char *)a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (const char *)a1[7];
  v6 = a1[8];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v10 = a1[18];
  v13 = (const char *)a1[13];
  v14 = (const char *)a1[17];
  sub_100225AA0(*a1, a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_100225AA0(v3, v4);
  swift_bridgeObjectRelease(v5);
  sub_100225AA0(v6, v7);
  sub_100225AA0(v8, v9);
  swift_release(v10);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v13).n128_u64[0];
  swift_bridgeObjectRelease(v14, v11);
  return a1;
}

uint64_t *sub_100321668(uint64_t *a1)
{
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v12;
  const char *v13;

  v2 = (const char *)a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (const char *)a1[7];
  v6 = a1[8];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v10 = (const char *)a1[17];
  v12 = a1[18];
  v13 = (const char *)a1[13];
  sub_100244404(*a1, a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_100244404(v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_100244404(v6, v7);
  sub_100244404(v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_retain(v12);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t *sub_100321728(uint64_t *a1)
{
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  const char *v12;

  v2 = (const char *)a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (const char *)a1[7];
  v6 = a1[8];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v12 = (const char *)a1[13];
  v10 = (const char *)a1[17];
  sub_100244404(*a1, a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_100244404(v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_100244404(v6, v7);
  sub_100244404(v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t *sub_1003217E0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[8];
  v7 = a1[9];
  v8 = a1[10];
  v9 = a1[11];
  v10 = a1[13];
  v12 = a1[17];
  sub_100225AA0(*a1, a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_100225AA0(v3, v4);
  swift_bridgeObjectRelease(v5);
  sub_100225AA0(v6, v7);
  sub_100225AA0(v8, v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_100321898()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1[6] = v0;
  v2 = sub_100008384(&qword_1007B68A0);
  v1[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SDAirDropMessage(0);
  v1[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[9] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v1[10] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v6);
  v1[12] = swift_task_alloc(v6);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  v1[13] = static AirDropActor.shared;
  return swift_task_switch(sub_100321964, v7, 0);
}

uint64_t sub_100321964()
{
  uint64_t v0;
  void **v1;
  NSObject *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  void *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t v43;

  v1 = (void **)(v0 + 48);
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 48)+ OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent), "idSelfIdentity");
  *(_QWORD *)(v0 + 112) = v2;
  v3 = sub_10038FBF4();
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = v4;
  if (v4 >> 60 != 15)
  {
    v5 = (uint64_t)v3;
    v6 = v4;
    if (v2)
    {
      v7 = -[NSObject idsDeviceID](v2, "idsDeviceID");
      if (v7)
      {
        v8 = v7;
        v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v11 = v10;

        *(_QWORD *)(v0 + 136) = v9;
        *(_QWORD *)(v0 + 144) = v11;
        v12 = -[NSObject deviceIRKData](v2, "deviceIRKData");
        if (v12)
        {
          v13 = v12;
          v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v16 = v15;

          *(_QWORD *)(v0 + 152) = v14;
          *(_QWORD *)(v0 + 160) = v16;
          v17 = -[NSObject edPKData](v2, "edPKData");
          if (v17)
          {
            v18 = v17;
            v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
            v21 = v20;

            *(_QWORD *)(v0 + 168) = v19;
            *(_QWORD *)(v0 + 176) = v21;
            if (qword_1007B3F08 != -1)
              swift_once(&qword_1007B3F08, sub_10031D95C);
            v22 = *v1;
            v23 = type metadata accessor for Logger(0);
            sub_100221DF8(v23, (uint64_t)qword_1007BA648);
            v24 = Logger.logObject.getter(v22);
            v25 = static os_log_type_t.default.getter(v24);
            v26 = os_log_type_enabled(v24, v25);
            v27 = *v1;
            if (v26)
            {
              v28 = (uint8_t *)swift_slowAlloc(12, -1);
              v29 = swift_slowAlloc(32, -1);
              *(_DWORD *)v28 = 136315138;
              v43 = v29;
              v30 = NWEndpoint.debugDescription.getter();
              v32 = (const char *)v31;
              *(_QWORD *)(v0 + 40) = sub_100228BD8(v30, v31, &v43);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v28 + 4);
              swift_bridgeObjectRelease(v32);

              _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending IDENTITY-SHARE request %s", v28, 0xCu);
              swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v29, -1, -1);
              swift_slowDealloc(v28, -1, -1);
            }
            else
            {

            }
            v42 = (_QWORD *)swift_task_alloc(dword_1007BA6EC);
            *(_QWORD *)(v0 + 184) = v42;
            *v42 = v0;
            v42[1] = sub_100321D54;
            return sub_10032017C();
          }
          swift_bridgeObjectRelease(v11);
          sub_100225AB4(v14, v16);
        }
        else
        {
          swift_bridgeObjectRelease(v11);
        }
      }
    }
    sub_100225AA0(v5, v6);
  }
  if (qword_1007B3F08 != -1)
    swift_once(&qword_1007B3F08, sub_10031D95C);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_100221DF8(v33, (uint64_t)qword_1007BA648);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Missing data for identity update, skipping IDENTITY-SHARE", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
    v38 = v35;
  }
  else
  {
    v38 = v2;
    v2 = v35;
  }

  v39 = *(_QWORD *)(v0 + 88);
  v40 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100321D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100321DB4, v3, 0);
}

uint64_t sub_100321DB4()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;

  v1 = v0[24];
  v3 = v0[21];
  v2 = v0[22];
  v4 = v0[19];
  v5 = v0[20];
  v29 = v2;
  v6 = v0[16];
  v22 = v0[17];
  v23 = (const char *)v0[18];
  v7 = v0[15];
  v28 = v7;
  v8 = (_QWORD *)v0[12];
  v27 = v0[10];
  v25 = v0[11];
  v26 = v0[9];
  v20 = (id)v0[14];
  v21 = v0[8];
  v24 = v0[7];
  v30 = (char *)v0[6];
  v9 = *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection];
  *(_QWORD *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = v1;
  swift_retain(v1);
  swift_release(v9);
  v10 = objc_msgSend(v20, "featureFlags");
  *v8 = 0;
  v8[1] = 0;
  v8[2] = v7;
  v8[3] = v6;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v3;
  v8[7] = v2;
  v8[8] = v22;
  v8[9] = v23;
  v8[10] = v10;
  swift_storeEnumTagMultiPayload(v8, v21, 10);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v24, 1, 1, v11);
  sub_100322434((uint64_t)v8, v25);
  v12 = *(unsigned __int8 *)(v26 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_1007225A8, v13 + v27, v12 | 7);
  v0[25] = v14;
  *(_QWORD *)(v14 + 16) = v1;
  sub_100221DB4(v25, v14 + v13, type metadata accessor for SDAirDropMessage);
  v15 = swift_allocObject(&unk_1007225D0, 32, 7);
  v0[26] = v15;
  *(_QWORD *)(v15 + 16) = v30;
  *(_QWORD *)(v15 + 24) = v1;
  swift_retain_n(v1, 2);
  v16 = v30;
  sub_100244404(v28, v6);
  sub_10022E4A8(v4, v5);
  sub_10022E4A8(v3, v29);
  sub_100244404(v28, v6);
  sub_10022E4A8(v4, v5);
  sub_10022E4A8(v3, v29);
  v17 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
  swift_bridgeObjectRetain(v23);
  v18 = (_QWORD *)swift_task_alloc(v17);
  v0[27] = v18;
  *v18 = v0;
  v18[1] = sub_100322010;
  return concurrentRace<A>(priority:operation:against:)(v0 + 2, v0[7], &unk_1007BA6F8, v14, &unk_1007BA708, v15, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100322010()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = (*v1)[27];
  (*v1)[28] = v0;
  swift_task_dealloc(v3);
  v5 = v2[25];
  v4 = v2[26];
  v6 = v2[13];
  sub_100322564(v2[7]);
  swift_release(v4);
  swift_release(v5);
  if (v0)
    v7 = sub_100322320;
  else
    v7 = sub_1003220A4;
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003220A4()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  if (v1 >= 3)
  {
    v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9)
      v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    if (v1 == 4)
      v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    else
      v15 = v14;
    v16 = type metadata accessor for SFAirDropSend.Failure(0);
    v17 = sub_100321560();
    swift_allocError(v16, v17, 0, 0);
    v19 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *v15, v16);
    swift_willThrow(v19);
    sub_100225AB4(v2, v3);
    v20 = *(_QWORD *)(v0 + 192);
    v22 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 152);
    v24 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 128);
    v29 = *(const char **)(v0 + 144);
    v30 = *(void **)(v0 + 112);
    v32 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 88);
    v36 = *(_QWORD *)(v0 + 56);
    NWConnection.forceCancel()();
    swift_willThrow(v27);
    swift_bridgeObjectRelease(0);
    sub_100225AA0(v26, v25);
    sub_100225AB4(v23, v24);
    sub_100225AB4(v22, v21);
    swift_bridgeObjectRelease(v29);
    sub_100225AB4(v22, v21);
    sub_100225AB4(v23, v24);
    sub_100225AA0(v26, v25);
    swift_release(v20);

    sub_1002443C8(v32, type metadata accessor for SDAirDropMessage);
    swift_task_dealloc(v32);
    swift_task_dealloc(v34);
    swift_task_dealloc(v36);
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
    v31 = *(const char **)(v0 + 144);
    v33 = *(void **)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 96);
    NWConnection.forceCancel()();
    sub_100225AB4(v2, v3);
    swift_bridgeObjectRelease(0);
    sub_100225AA0(v10, v9);
    sub_100225AB4(v8, v7);
    sub_100225AB4(v6, v5);
    swift_bridgeObjectRelease(v31);
    sub_100225AB4(v6, v5);
    sub_100225AB4(v8, v7);
    sub_100225AA0(v10, v9);
    swift_release(v4);

    sub_1002443C8(v35, type metadata accessor for SDAirDropMessage);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_100322320()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v11 = *(const char **)(v0 + 144);
  v12 = *(void **)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 56);
  NWConnection.forceCancel()();
  swift_willThrow(v9);
  swift_bridgeObjectRelease(0);
  sub_100225AA0(v7, v6);
  sub_100225AB4(v4, v5);
  sub_100225AB4(v3, v2);
  swift_bridgeObjectRelease(v11);
  sub_100225AB4(v3, v2);
  sub_100225AB4(v4, v5);
  sub_100225AA0(v7, v6);
  swift_release(v1);

  sub_1002443C8(v8, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v8);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100322434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDAirDropMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032247C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropMessage(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1007BA6F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_100320C90(a1, v5, v6);
}

uint64_t sub_100322500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1007BA704);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D098;
  return sub_100321010(a1, v5, v4);
}

uint64_t sub_100322564(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008384(&qword_1007B68A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003225A4()
{
  unint64_t result;

  result = qword_1007BA710;
  if (!qword_1007BA710)
  {
    result = swift_getWitnessTable(&unk_1005DB5C0, &type metadata for SDNWHTTPResponseError);
    atomic_store(result, &qword_1007BA710);
  }
  return result;
}

uint64_t sub_1003225EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1005010FC(a1, v1);
}

uint64_t sub_1003225F4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100322618(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_100320400(a1, a2, a3, a4, v4);
}

uint64_t sub_100322620(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_100320464(a1, a2, a3, v3);
}

uint64_t sub_100322628(uint64_t a1)
{
  sub_100244404(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100322654(uint64_t a1)
{
  sub_100225AA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100322684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t *v41;
  unint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v1 = type metadata accessor for SDAirDropMessage(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      goto LABEL_46;
    case 2u:
      v8 = *(_QWORD *)(v6 + 8);
      if (v8 >> 60 == 15)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      v7 = *(_QWORD *)v6;
      goto LABEL_3;
    case 3u:
      v10 = *(_QWORD *)(v6 + 8);
      if (v10 >> 60 != 15)
        sub_100225AB4(*(_QWORD *)v6, v10);
      swift_bridgeObjectRelease(*(const char **)(v6 + 24));
      v11 = *(_QWORD *)(v6 + 40);
      if (v11 >> 60 != 15)
        sub_100225AB4(*(_QWORD *)(v6 + 32), v11);
      swift_bridgeObjectRelease(*(const char **)(v6 + 56));
      v12 = *(_QWORD *)(v6 + 72);
      if (v12 >> 60 != 15)
        sub_100225AB4(*(_QWORD *)(v6 + 64), v12);
      v13 = *(_QWORD *)(v6 + 88);
      if (v13 >> 60 != 15)
        sub_100225AB4(*(_QWORD *)(v6 + 80), v13);
      *(_QWORD *)&v14 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 104)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v6 + 136), v14);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:
      v15 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v0 + v4, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v4, v15);
      v17 = (int *)_s10AskRequestVMa(0);
      v18 = v6 + v17[5];
      v19 = type metadata accessor for SFAirDrop.TransferType(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      v21 = (uint64_t *)(v6 + v17[6]);
      v22 = v21[1];
      if (v22 >> 60 != 15)
        sub_100225AB4(*v21, v22);
      *(_QWORD *)&v23 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[7] + 8)).n128_u64[0];
      *(_QWORD *)&v24 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[8] + 8), v23).n128_u64[0];
      *(_QWORD *)&v25 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[9] + 8), v24).n128_u64[0];
      *(_QWORD *)&v26 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[10] + 8), v25).n128_u64[0];
      *(_QWORD *)&v27 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[11]), v26).n128_u64[0];
      *(_QWORD *)&v28 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v17[12]), v27).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v6 + v17[13] + 8), v28);
      v29 = (uint64_t *)(v6 + v17[14]);
      v30 = v29[1];
      if (v30 >> 60 != 15)
        sub_100225AB4(*v29, v30);
      v31 = (uint64_t *)(v6 + v17[15]);
      v32 = v31[1];
      if (v32 >> 60 != 15)
        sub_100225AB4(*v31, v32);
      v33 = (uint64_t *)(v6 + v17[17]);
      v8 = v33[1];
      if (v8 >> 60 == 15)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      v7 = *v33;
      goto LABEL_3;
    case 5u:
      *(_QWORD *)&v34 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 8)).n128_u64[0];
      *(_QWORD *)&v35 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 24), v34).n128_u64[0];
      *(_QWORD *)&v36 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 48), v35).n128_u64[0];
      *(_QWORD *)&v37 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + 64), v36).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v6 + 80), v37);
      v8 = *(_QWORD *)(v6 + 96);
      if (v8 >> 60 == 15)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      v7 = *(_QWORD *)(v6 + 88);
LABEL_3:
      sub_100225AB4(v7, v8);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 6u:
      v38 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      v39 = *(_QWORD *)(v38 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v0 + v4, 1, v38))
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v0 + v4, v38);
      v40 = (int *)_s13UploadRequestVMa(0);
      swift_bridgeObjectRelease(*(const char **)(v6 + v40[6] + 8));
      v41 = (uint64_t *)(v6 + v40[7]);
      v42 = v41[1];
      if (v42 >> 60 != 15)
        sub_100225AB4(*v41, v42);
      *(_QWORD *)&v43 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + v40[9] + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v6 + v40[10] + 8), v43);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 7u:
    case 0xBu:
    case 0xDu:
      v7 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(v6 + 8);
      goto LABEL_3;
    case 8u:
      v44 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v0 + v4, v44);
      v45 = _s15ExchangeRequestVMa(0);
      goto LABEL_37;
    case 9u:
      v46 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v0 + v4, v46);
      v45 = _s16ExchangeResponseVMa(0);
LABEL_37:
      v47 = (int *)v45;
      *(_QWORD *)&v48 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v6 + *(int *)(v45 + 20) + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v6 + v47[6] + 8), v48);
      v49 = v6 + v47[7];
      v50 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0);
      v51 = *(_QWORD *)(v50 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
      v52 = (uint64_t *)(v6 + v47[8]);
      v53 = v52[1];
      if (v53 >> 60 != 15)
        sub_100225AB4(*v52, v53);
      v6 += v47[9];
      if (*(_QWORD *)(v6 + 72))
        goto LABEL_42;
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0xAu:
LABEL_42:
      swift_bridgeObjectRelease(*(const char **)(v6 + 8));
      v54 = *(_QWORD *)(v6 + 24);
      if (v54 >> 60 != 15)
        sub_100225AB4(*(_QWORD *)(v6 + 16), v54);
      sub_100225AB4(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40));
      sub_100225AB4(*(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56));
      swift_bridgeObjectRelease(*(const char **)(v6 + 72));
      break;
    case 0xCu:
      v55 = type metadata accessor for SFAirDrop.TransferIdentifier(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v0 + v4, v55);
      v6 += *(int *)(_s12ErrorRequestVMa(0) + 20);
      v9 = type metadata accessor for CodableError(0);
LABEL_46:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100322B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SDAirDropMessage(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc(dword_1007BA71C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000D098;
  return sub_1003204EC(a1, v5, v6);
}

uint64_t sub_100322C04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100322C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1007BA72C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000D12C;
  return sub_1003208D8(a1, v5, v4);
}

void sub_100322C94(uint64_t a1)
{
  uint64_t v1;

  sub_1004FFBB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_100322CB4(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _OWORD v37[4];
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100008384(&qword_1007B4C90);
    v3 = (_BYTE *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v34 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 64;
  swift_bridgeObjectRetain((const char *)a1, -1 << *(_BYTE *)(a1 + 32));
  swift_retain(v3);
  v35 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v35 << 6);
      goto LABEL_28;
    }
    v11 = v35 + 1;
    if (__OFADD__(v35, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v35 + 1;
    if (!v12)
    {
      v13 = v35 + 2;
      if (v35 + 2 >= v33)
        goto LABEL_37;
      v12 = *(_QWORD *)(v34 + 8 * v13);
      if (!v12)
      {
        v13 = v35 + 3;
        if (v35 + 3 >= v33)
          goto LABEL_37;
        v12 = *(_QWORD *)(v34 + 8 * v13);
        if (!v12)
        {
          v13 = v35 + 4;
          if (v35 + 4 >= v33)
            goto LABEL_37;
          v12 = *(_QWORD *)(v34 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v35 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v39[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v39[0];
    *(_QWORD *)&v38[0] = v16;
    type metadata accessor for FileProtectionType(0);
    v18 = v17;
    v19 = v15;
    v20 = v16;
    swift_dynamicCast((char *)v39 + 8, v38, v18, (char *)&type metadata for Any + 8, 7);
    v21 = *(_QWORD *)&v39[0];
    sub_10022138C((_OWORD *)((char *)v39 + 8), v37);
    sub_10022138C(v37, v39);
    sub_10022138C(v39, v38);
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;
    Hasher.init(_seed:)(&v36);
    String.hash(into:)(&v36, v22, v24);
    v25 = Hasher._finalize()();
    swift_bridgeObjectRelease(v24);
    v26 = -1 << v3[32];
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)&v7[8 * v28];
      }
      while (v32 == -1);
      v8 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(*((_QWORD *)v3 + 6) + 8 * v8) = v21;
    sub_10022138C(v38, (_OWORD *)(*((_QWORD *)v3 + 7) + 32 * v8));
    ++*((_QWORD *)v3 + 2);
  }
  v14 = v35 + 5;
  if (v35 + 5 >= v33)
  {
LABEL_37:
    swift_release(v3);
    sub_10022E5B4(a1);
    return;
  }
  v12 = *(_QWORD *)(v34 + 8 * v14);
  if (v12)
  {
    v13 = v35 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_100323054(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100008384(&qword_1007B4AF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain((const char *)a1, -1 << *(_BYTE *)(a1 + 32));
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = (const char *)v18[1];
    sub_10022E77C(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10022138C(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_10022138C(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_10022138C(v37, v38);
    sub_10022138C(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_10022138C(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10022E5B4(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_100323418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100008384(&qword_1007B5AF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = &v43;
  v8 = &v45;
  result = swift_bridgeObjectRetain((const char *)v1, v4);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  v12 = &type metadata for Bool;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v36)
    goto LABEL_32;
  v22 = *(_QWORD *)(v37 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v36)
      goto LABEL_32;
    v22 = *(_QWORD *)(v37 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v36)
        goto LABEL_32;
      v22 = *(_QWORD *)(v37 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v36)
          goto LABEL_32;
        v22 = *(_QWORD *)(v37 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v36)
          {
            v22 = *(_QWORD *)(v37 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v36)
                break;
              v22 = *(_QWORD *)(v37 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10022E5B4(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v39 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v27 = *v25;
    v26 = (const char *)v25[1];
    LOBYTE(v25) = *(_BYTE *)(*(_QWORD *)(v1 + 56) + v20);
    v41 = v27;
    v42 = v26;
    v40 = (char)v25;
    swift_bridgeObjectRetain(v26);
    swift_dynamicCast(v7, &v40, v12, v11, 7);
    v28 = v41;
    v29 = (uint64_t)v42;
    sub_10022138C(v7, v8);
    sub_10022138C(v8, v46);
    sub_10022138C(v46, &v44);
    result = sub_10045C200(v28, v29);
    v30 = result;
    if ((v31 & 1) != 0)
    {
      v38 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(const char **)(v18 + 8));
      *(_QWORD *)v18 = v28;
      *(_QWORD *)(v18 + 8) = v29;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v38;
      v19 = (_QWORD *)(v3[7] + 32 * v30);
      sub_10022E75C(v19);
      result = (unint64_t)sub_10022138C(&v44, v19);
      v6 = v39;
      if (!v39)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v32 = (uint64_t *)(v3[6] + 16 * result);
    *v32 = v28;
    v32[1] = v29;
    result = (unint64_t)sub_10022138C(&v44, (_OWORD *)(v3[7] + 32 * result));
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_34;
    v3[2] = v35;
    v6 = v39;
    if (!v39)
      goto LABEL_11;
LABEL_10:
    v39 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_100323770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  unint64_t *v10;
  _QWORD *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  const char *v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _OWORD v48[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100008384(&qword_1007B5AF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v39 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(63 - v4) >> 6;
  v7 = &v45;
  v8 = &v47;
  result = swift_bridgeObjectRetain((const char *)v1);
  v40 = 0;
  v10 = (unint64_t *)&qword_1007BD000;
  v11 = NSNumber_ptr;
  v12 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = v40 + 1;
  if (__OFADD__(v40, 1))
    goto LABEL_35;
  if (v21 >= v38)
    goto LABEL_32;
  v22 = *(_QWORD *)(v39 + 8 * v21);
  v23 = v40 + 1;
  if (!v22)
  {
    v23 = v40 + 2;
    if (v40 + 2 >= v38)
      goto LABEL_32;
    v22 = *(_QWORD *)(v39 + 8 * v23);
    if (!v22)
    {
      v23 = v40 + 3;
      if (v40 + 3 >= v38)
        goto LABEL_32;
      v22 = *(_QWORD *)(v39 + 8 * v23);
      if (!v22)
      {
        v23 = v40 + 4;
        if (v40 + 4 >= v38)
          goto LABEL_32;
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          v24 = v40 + 5;
          if (v40 + 5 < v38)
          {
            v22 = *(_QWORD *)(v39 + 8 * v24);
            if (v22)
            {
              v23 = v40 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v38)
                break;
              v22 = *(_QWORD *)(v39 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10022E5B4(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v40 = v23;
  v41 = (v22 - 1) & v22;
  for (i = __clz(__rbit64(v22)) + (v23 << 6); ; i = __clz(__rbit64(v6)) | (v40 << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v26 = (const char *)v25[1];
    v27 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v43 = *v25;
    v44 = v26;
    v42 = v27;
    v28 = sub_100221EDC(0, v10, v11);
    swift_bridgeObjectRetain(v26);
    v29 = v27;
    swift_dynamicCast(v7, &v42, v28, v12, 7);
    v31 = v43;
    v30 = (uint64_t)v44;
    sub_10022138C(v7, v8);
    sub_10022138C(v8, v48);
    sub_10022138C(v48, &v46);
    result = sub_10045C200(v31, v30);
    v32 = result;
    if ((v33 & 1) != 0)
    {
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v11;
      v17 = v10;
      v18 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(const char **)(v18 + 8));
      *(_QWORD *)v18 = v31;
      *(_QWORD *)(v18 + 8) = v30;
      v10 = v17;
      v11 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      v12 = (char *)&type metadata for Any + 8;
      v19 = (_QWORD *)(v3[7] + 32 * v32);
      sub_10022E75C(v19);
      result = (unint64_t)sub_10022138C(&v46, v19);
      v6 = v41;
      if (!v41)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v34 = (uint64_t *)(v3[6] + 16 * result);
    *v34 = v31;
    v34[1] = v30;
    result = (unint64_t)sub_10022138C(&v46, (_OWORD *)(v3[7] + 32 * result));
    v35 = v3[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_34;
    v3[2] = v37;
    v6 = v41;
    if (!v41)
      goto LABEL_11;
LABEL_10:
    v41 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100323AEC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100008384(&qword_1007B4AF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v27 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain((const char *)a1);
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v26)
      goto LABEL_37;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v26)
        goto LABEL_37;
      v15 = *(_QWORD *)(v27 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v26)
          goto LABEL_37;
        v15 = *(_QWORD *)(v27 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v26)
            goto LABEL_37;
          v15 = *(_QWORD *)(v27 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v13);
    sub_10022E77C(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v39 + 8);
    LODWORD(v39[0]) = v18;
    v37[0] = v39[0];
    v37[1] = v39[1];
    v38 = v40;
    LODWORD(v36[0]) = v18;
    swift_dynamicCast(&v28, v36, &type metadata for Int32, &type metadata for AnyHashable, 7);
    sub_10022138C((_OWORD *)((char *)v37 + 8), v31);
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_10022138C(v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_10022138C(v35, v36);
    sub_10022138C(v36, &v32);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v19 = -1 << *((_BYTE *)v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)&v7[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)&v7[8 * v21];
      }
      while (v25 == -1);
      v10 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v28;
    *(_OWORD *)(v11 + 16) = v29;
    *(_QWORD *)(v11 + 32) = v30;
    result = (uint64_t)sub_10022138C(&v32, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v26)
  {
LABEL_37:
    swift_release(v3);
    sub_10022E5B4(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v27 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v26)
      goto LABEL_37;
    v15 = *(_QWORD *)(v27 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100323EA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v37;
  void *v38;
  id v39;
  _BYTE v40[12];
  int v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  void (*v50)(_BYTE *, uint64_t, uint64_t);
  _QWORD *v51;

  v41 = a3;
  v44 = a2;
  v45 = a4;
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v5);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v49 = &v40[-v13];
  v51 = _swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v42 = v14;
  v43 = a1;
  if (v14)
  {
    v47 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v48 = v12;
    v15 = a1 + v47;
    v16 = *(_QWORD *)(v9 + 72);
    v50 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
    v17 = v49;
    v46 = v16;
    v50(v7, v15, v8);
    while (1)
    {
      v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v18(v7, 0, 1, v8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        break;
      v19 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
      v20 = v19(v17, v7, v8);
      if ((URL.isFileURL.getter(v20) & 1) != 0)
      {
        (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v17, v8);
      }
      else
      {
        v19(v12, v17, v8);
        v21 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
        {
          sub_100229810(0, v21[2] + 1, 1);
          v21 = v51;
        }
        v23 = v21[2];
        v22 = v21[3];
        if (v23 >= v22 >> 1)
        {
          sub_100229810(v22 > 1, v23 + 1, 1);
          v21 = v51;
        }
        v21[2] = v23 + 1;
        v16 = v46;
        v24 = (unint64_t)v21 + v47 + v23 * v46;
        v12 = v48;
        v19((_BYTE *)v24, v48, v8);
        v51 = v21;
        v17 = v49;
      }
      v15 += v16;
      if (!--v14)
        goto LABEL_14;
      v50(v7, v15, v8);
    }
  }
  else
  {
    v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_14:
    v18(v7, 1, 1, v8);
  }
  v25 = v43;
  swift_bridgeObjectRelease(v43);
  sub_10000D0F0((uint64_t)v7, (uint64_t *)&unk_1007B5200);
  v26 = v51;
  v27 = v51[2];
  if (v27)
  {
    if (v27 != v42)
    {
      if (qword_1007B3F10 != -1)
        swift_once(&qword_1007B3F10, sub_10032539C);
      v28 = type metadata accessor for Logger(0);
      v29 = sub_100221DF8(v28, (uint64_t)qword_1007BA738);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Asked to view mixed files and links, only viewing links", v32, 2u);
        swift_slowDealloc(v32, -1, -1);
      }

    }
    v51 = 0;
    v33 = swift_allocObject(&unk_1007226A0, 32, 7);
    v34 = v44;
    *(_QWORD *)(v33 + 16) = v26;
    *(_QWORD *)(v33 + 24) = v34;
    v35 = v34;
    return SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, &v51, &unk_1007B9780, v33, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
  }
  else
  {
    swift_release(v51);
    v51 = 0;
    v37 = swift_allocObject(&unk_1007226C8, 40, 7);
    v38 = v44;
    *(_QWORD *)(v37 + 16) = v44;
    *(_BYTE *)(v37 + 24) = v41 & 1;
    *(_QWORD *)(v37 + 32) = v25;
    v39 = v38;
    swift_bridgeObjectRetain(v25);
    return SFProgressTask.init(_:initialProgress:operation:file:line:)(0xD000000000000013, 0x80000001006162B0, &v51, &unk_1007BA828, v37, 0xD000000000000067, 0x8000000100614E10, 214, &type metadata for Double, &type metadata for Bool);
  }
}

const char *sub_100324310(void (*a1)(char *), uint64_t a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  const char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  double v33;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, const char *, uint64_t);
  char *v44;
  void (*v45)(char *);
  uint64_t v46;
  const char *v47;
  const char *v48;
  uint64_t v49;

  v45 = a1;
  v46 = a2;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v42 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v38 = (char *)&v35 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - v10;
  v12 = sub_100008384((uint64_t *)&unk_1007B5200);
  v13 = __chkstk_darwin(v12);
  v44 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - v15;
  v17 = *((_QWORD *)a3 + 2);
  if (v17)
  {
    v18 = *(unsigned __int8 *)(v5 + 80);
    v35 = a3;
    v36 = (v18 + 32) & ~v18;
    v19 = &a3[v36];
    v20 = *(_QWORD *)(v5 + 72);
    v43 = *(void (**)(char *, const char *, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(a3);
    v47 = (const char *)_swiftEmptyArrayStorage;
    v37 = v5;
    v40 = v20;
    v41 = v11;
    do
    {
      v43(v16, v19, v4);
      v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v39(v16, 0, 1, v4);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v23(v16, 1, v4) == 1)
      {
        swift_bridgeObjectRelease(v35);
        return v47;
      }
      v48 = v19;
      v24 = v17;
      v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v25(v11, v16, v4);
      v26 = (uint64_t)v44;
      v27 = v49;
      v45(v11);
      if (v27)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
        *(_QWORD *)&v33 = swift_bridgeObjectRelease(v47).n128_u64[0];
        swift_bridgeObjectRelease(v35, v33);
        return v47;
      }
      v49 = 0;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      if (v23((char *)v26, 1, v4) == 1)
      {
        sub_10000D0F0(v26, (uint64_t *)&unk_1007B5200);
        v21 = v40;
        v11 = v41;
        v22 = v24;
      }
      else
      {
        v28 = v38;
        v25(v38, (char *)v26, v4);
        v25(v42, v28, v4);
        v22 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
          v47 = (const char *)sub_100227A54(0, *((_QWORD *)v47 + 2) + 1, 1, (unint64_t)v47);
        v11 = v41;
        v30 = *((_QWORD *)v47 + 2);
        v29 = *((_QWORD *)v47 + 3);
        if (v30 >= v29 >> 1)
          v47 = (const char *)sub_100227A54(v29 > 1, v30 + 1, 1, (unint64_t)v47);
        v31 = v47;
        *((_QWORD *)v47 + 2) = v30 + 1;
        v21 = v40;
        v25((char *)&v31[v36 + v30 * v40], v42, v4);
        v5 = v37;
      }
      v19 = &v48[v21];
      v17 = v22 - 1;
    }
    while (v17);
    a3 = v35;
    v32 = v39;
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain(a3);
    v47 = (const char *)_swiftEmptyArrayStorage;
  }
  v32(v16, 1, 1, v4);
  swift_bridgeObjectRelease(a3);
  return v47;
}

void sub_1003246A4(uint64_t a1, const char **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  const char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  const char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  char *v31;
  const char *v32;
  const char **v33;
  uint64_t v34;
  void *v35;

  v3 = v2;
  v33 = a2;
  v5 = sub_100008384(&qword_1007BA758);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFSecurityScopedURL(0);
  v9 = *(void **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v31 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v28 = (char *)&v27 - v12;
  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (*(_QWORD *)&v14 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
        v13;
        v13 = _CocoaArrayWrapper.endIndex.getter(v26))
  {
    v34 = v8;
    v30 = a1 & 0xC000000000000001;
    v32 = (const char *)_swiftEmptyArrayStorage;
    v15 = 4;
    v29 = v7;
    v27 = (const char *)a1;
    while (1)
    {
      v8 = (uint64_t)v9;
      v16 = v30 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1) : *(id *)(a1 + 8 * v15);
      v9 = v16;
      v17 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      v35 = v16;
      sub_10032C4B8(&v35, v33, (uint64_t)v7);
      if (v3)
      {
        *(_QWORD *)&v25 = swift_bridgeObjectRelease(v32).n128_u64[0];
        swift_bridgeObjectRelease((const char *)a1, v25);

        return;
      }

      v9 = (void *)v8;
      v18 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v34) == 1)
      {
        sub_10000D0F0((uint64_t)v7, &qword_1007BA758);
      }
      else
      {
        v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v20 = v28;
        v19(v28, v7, v18);
        v19(v31, v20, v18);
        v21 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
          v21 = (const char *)sub_1002286E4(0, *((_QWORD *)v21 + 2) + 1, 1, (unint64_t)v21);
        v23 = *((_QWORD *)v21 + 2);
        v22 = *((_QWORD *)v21 + 3);
        if (v23 >= v22 >> 1)
          v21 = (const char *)sub_1002286E4(v22 > 1, v23 + 1, 1, (unint64_t)v21);
        *((_QWORD *)v21 + 2) = v23 + 1;
        v9 = (void *)v8;
        v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v32 = v21;
        v19((char *)&v21[v24 + *(_QWORD *)(v8 + 72) * v23], v31, v34);
        a1 = (uint64_t)v27;
      }
      ++v15;
      v7 = v29;
      if (v17 == v13)
      {
        swift_bridgeObjectRelease((const char *)a1);
        return;
      }
    }
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v26 = a1;
    else
      v26 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain((const char *)a1, v27);
  }
  swift_bridgeObjectRelease((const char *)a1, v14);
}

uint64_t sub_100324988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[12];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a3;
  v32 = a1;
  v33 = a4;
  v5 = sub_100008384((uint64_t *)&unk_1007B5200);
  v31 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v31 + 64);
  v7 = __chkstk_darwin(v5);
  v8 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v10 = &v29[-v9];
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v16 + 88))(v18, v15) == enum case for SFAirDropReceive.ItemDestination.customURL(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v18, v11);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v10, v14, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    v34 = 0;
    sub_100330F1C((uint64_t)v10, (uint64_t)v8);
    v19 = *(unsigned __int8 *)(v31 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = (v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_1007227B8, v21 + 8, v19 | 7);
    sub_10022E718((uint64_t)v8, v22 + v20, (uint64_t *)&unk_1007B5200);
    v23 = v32;
    *(_QWORD *)(v22 + v21) = v32;
    swift_bridgeObjectRetain(v23);
    v24 = sub_100008384((uint64_t *)&unk_1007B6820);
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6C69462065766F4DLL, 0xEA00000000007365, &v34, &unk_1007BA870, v22, 0xD000000000000067, 0x8000000100614E10, 252, &type metadata for Double, v24);
    sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007B5200);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v34 = 0;
    v26 = swift_allocObject(&unk_100722790, 25, 7);
    v27 = v32;
    *(_QWORD *)(v26 + 16) = v32;
    *(_BYTE *)(v26 + 24) = v30 & 1;
    swift_bridgeObjectRetain(v27);
    v28 = sub_100008384((uint64_t *)&unk_1007B6820);
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0x552074726F706D49, 0xEB00000000734C52, &v34, &unk_1007BA860, v26, 0xD000000000000067, 0x8000000100614E10, 163, &type metadata for Double, v28);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_100324CC0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v3 = sub_100008384(&qword_1007B9928);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1[1];
  v16 = *(_QWORD *)(*v1 + 16);
  if (v15 == v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_5:
    sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007B5200);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  if (v15 >= v16)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *v1+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v15, v10);
    v1[1] = v15 + 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      goto LABEL_5;
    v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v14, v9, v10);
    v18 = &v6[*(int *)(v3 + 48)];
    v19 = v1[2];
    result = ((uint64_t (*)(char *, char *, uint64_t))v17)(v18, v14, v10);
    if (!__OFADD__(v19, 1))
    {
      v1[2] = v19 + 1;
      v20 = (char *)a1 + *(int *)(v3 + 48);
      *a1 = v19;
      v17(v20, v18, v10);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t Sequence<>.fileCoordinatorReadingOptions()(uint64_t a1, uint64_t a2)
{
  if ((Sequence.contains(where:)(sub_10032CB38, 0, a1, a2) & 1) != 0)
    return 8;
  else
    return 131074;
}

uint64_t sub_100324F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = type metadata accessor for URL(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v5[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFSecurityScopedURL(0);
  v5[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[14] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[15] = swift_task_alloc(v10);
  v5[16] = swift_task_alloc(v10);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v11 = static AirDropActor.shared;
  v5[17] = static AirDropActor.shared;
  return swift_task_switch(sub_100324FF4, v11, 0);
}

uint64_t sub_100324FF4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD, unint64_t, _QWORD);
  char *v33;

  v1 = *(_QWORD *)(v0 + 40);
  if (!v1)
    goto LABEL_14;
  v2 = (char *)_swiftEmptyArrayStorage;
  v33 = (char *)_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_bridgeObjectRetain((const char *)v1);
  v29 = (const char *)v4;
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v5 + 72);
    v30 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v31 = v6;
    v8 = v4 + v30;
    v32 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v5 + 16);
    do
    {
      v9 = *(_QWORD *)(v0 + 96);
      v10 = *(_QWORD *)(v0 + 80);
      v11 = v32(*(_QWORD *)(v0 + 128), v8, *(_QWORD *)(v0 + 104));
      v12 = SFSecurityScopedURL.url.getter(v11);
      v13 = URL.isFileURL.getter(v12);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v10);
      if ((v13 & 1) != 0)
      {
        v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
        v14(*(char **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
        if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
        {
          sub_100229A44(0, *((_QWORD *)v2 + 2) + 1, 1);
          v2 = v33;
        }
        v16 = *((_QWORD *)v2 + 2);
        v15 = *((_QWORD *)v2 + 3);
        if (v16 >= v15 >> 1)
        {
          sub_100229A44(v15 > 1, v16 + 1, 1);
          v2 = v33;
        }
        v17 = *(_QWORD *)(v0 + 120);
        v18 = *(_QWORD *)(v0 + 104);
        *((_QWORD *)v2 + 2) = v16 + 1;
        v14(&v2[v30 + v16 * v7], v17, v18);
        v33 = v2;
        v6 = v31;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
      }
      v8 += v7;
      --v3;
    }
    while (v3);
  }
  v19 = v29;
  swift_bridgeObjectRelease(v29, v29);
  v20 = *((_QWORD *)v2 + 2);
  swift_release(v2);
  if (v20)
  {
    v22 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    v23 = (int8x16_t *)swift_task_alloc(64);
    *(_QWORD *)(v0 + 144) = v23;
    v23[1] = vextq_s8(*(int8x16_t *)(v0 + 64), *(int8x16_t *)(v0 + 64), 8uLL);
    v23[2].i64[0] = v22;
    v23[2].i64[1] = v21;
    v23[3].i64[0] = (uint64_t)v19;
    v24 = (_QWORD *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
    *(_QWORD *)(v0 + 152) = v24;
    v25 = sub_100008384(&qword_1007BA898);
    *v24 = v0;
    v24[1] = sub_100325264;
    return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0 + 16, v19, &unk_1007BA890, v23, v25);
  }
  else
  {
LABEL_14:
    v27 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0);
  }
}

uint64_t sub_100325264()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 136);
    v5 = sub_100325340;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 136);
    swift_task_dealloc(*(_QWORD *)(v2 + 144));
    v5 = sub_1003252D4;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003252D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v1, v3);
}

uint64_t sub_100325340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032539C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100221E9C(v0, qword_1007BA738);
  v1 = sub_100221DF8(v0, (uint64_t)qword_1007BA738);
  if (qword_1007B3E48 != -1)
    swift_once(&qword_1007B3E48, sub_1002E9E20);
  v2 = sub_100221DF8(v0, (uint64_t)qword_1007D81A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10032542C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v13 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003BLL, 0x8000000100616310, v9, v6, v3, 0);
  qword_1007BA750 = result;
  return result;
}

uint64_t sub_100325600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_BYTE *)(v5 + 248) = a5;
  *(_QWORD *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a2;
  v6 = sub_100008384(&qword_1007B9928);
  *(_QWORD *)(v5 + 72) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 80) = v7;
  *(_QWORD *)(v5 + 88) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 96) = swift_task_alloc(v8);
  *(_QWORD *)(v5 + 104) = swift_task_alloc(v8);
  v9 = type metadata accessor for SFPlatform(0);
  *(_QWORD *)(v5 + 112) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 120) = v10;
  *(_QWORD *)(v5 + 128) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 136) = swift_task_alloc(v11);
  *(_QWORD *)(v5 + 144) = swift_task_alloc(v11);
  *(_QWORD *)(v5 + 152) = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  *(_QWORD *)(v5 + 160) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v5 + 168) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 176) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 184) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 192) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 200) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 208) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 216) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 224) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 232) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 240) = swift_task_alloc(v14);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_1003257F0, static AirDropActor.shared, 0);
}

uint64_t sub_1003257F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD, _QWORD, _QWORD, __n128);
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  char v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  void *v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  BOOL v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  void (*v67)(const char *, char *, uint64_t);
  NSURL *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t *);
  uint64_t v88;
  void *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(void);
  const char *v108;
  double v109;
  __n128 v110;
  unint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(unint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  id v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  const char *v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  const char *v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  void (*v188)(uint64_t, uint64_t, __n128);
  void (*v189)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192[2];

  v1 = *(_QWORD *)(v0 + 64);
  v192[0] = (uint64_t)_swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(v1 + 16);
  v4 = swift_bridgeObjectRetain((const char *)v1);
  v5 = *(_QWORD *)(v0 + 168);
  v175 = v2;
  if (v2)
  {
    v183 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v6 = v3 + v183;
    v7 = *(_QWORD *)(v5 + 72);
    v8 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v5 + 16);
    v9 = (char *)_swiftEmptyArrayStorage;
    v179 = v8;
    while (1)
    {
      v11 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 160);
      v8(v11, v6, v10, v4);
      v189 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
      v189(v11, 0, 1, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v10) == 1)
        break;
      v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32);
      v13 = v12(*(char **)(v0 + 240), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
      if ((URL.isFileURL.getter(v13) & 1) != 0)
      {
        v12(*(char **)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 160));
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        {
          sub_100229810(0, *((_QWORD *)v9 + 2) + 1, 1);
          v9 = (char *)v192[0];
        }
        v15 = *((_QWORD *)v9 + 2);
        v14 = *((_QWORD *)v9 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_100229810(v14 > 1, v15 + 1, 1);
          v9 = (char *)v192[0];
        }
        v16 = *(_QWORD *)(v0 + 232);
        v17 = *(_QWORD *)(v0 + 160);
        *((_QWORD *)v9 + 2) = v15 + 1;
        v12(&v9[v183 + v15 * v7], v16, v17);
        v192[0] = (uint64_t)v9;
        v8 = v179;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 160));
      }
      v6 += v7;
      if (!--v2)
        goto LABEL_13;
    }
  }
  else
  {
    v189 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
    v9 = (char *)_swiftEmptyArrayStorage;
LABEL_13:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v189)(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 160), v4);
  }
  v18 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease(*(const char **)(v0 + 64));
  sub_10000D0F0(v18, (uint64_t *)&unk_1007B5200);
  v19 = *((_QWORD *)v9 + 2);
  v20 = swift_release(v9);
  v21 = v175;
  if (!v19)
    goto LABEL_47;
  v23 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 112);
  static SFPlatform.visionOS.getter(v20);
  v25 = static SFPlatform.isPlatform(_:)(v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  if ((v25 & 1) != 0)
  {
    if (!*(_BYTE *)(v0 + 248))
      goto LABEL_42;
    v26 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
    v27 = (void *)static NSUserDefaults.airdrop.getter(v26);
    v28 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter();

    if ((v28 & 1) != 0)
      goto LABEL_42;
  }
  else if (!*(_BYTE *)(v0 + 248)
         || (v29 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr),
             v30 = (void *)static NSUserDefaults.airdrop.getter(v29),
             v31 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter(),
             v30,
             (v31 & 1) != 0)
         || (v33 = (void *)static NSUserDefaults.airdrop.getter(v32),
             v34 = SFAirDropUserDefaults.moveToAppEnabled.getter(),
             v33,
             (v34 & 1) == 0))
  {
LABEL_42:
    v88 = sub_100221EDC(0, (unint64_t *)&qword_1007B5210, NSUserDefaults_ptr);
    v89 = (void *)static NSUserDefaults.airdrop.getter(v88);
    v90 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter();

    if ((v90 & 1) != 0)
    {
      if (qword_1007B3F10 != -1)
LABEL_70:
        swift_once(&qword_1007B3F10, sub_10032539C);
      v91 = type metadata accessor for Logger(0);
      v92 = sub_100221DF8(v91, (uint64_t)qword_1007BA738);
      v93 = Logger.logObject.getter(v92);
      v94 = static os_log_type_t.default.getter(v93);
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v95 = 0;
        _os_log_impl((void *)&_mh_execute_header, v93, v94, "Not saving files to Downloads because path was overridden", v95, 2u);
        swift_slowDealloc(v95, -1, -1);
      }

    }
LABEL_47:
    v96 = *(const char **)(v0 + 64);
    **(_QWORD **)(v0 + 40) = v96;
    swift_bridgeObjectRetain(v96, v156);
    goto LABEL_48;
  }
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v156 = v0 + 24;
  v157 = v0 + 32;
  v35 = type metadata accessor for Logger(0);
  v159 = sub_100221DF8(v35, (uint64_t)qword_1007BA738);
  v36 = Logger.logObject.getter(v159);
  v37 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Saving files to Downloads", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }
  v39 = *(_QWORD *)(v0 + 168);
  v40 = *(_QWORD *)(v0 + 80);
  v167 = *(_QWORD *)(v0 + 72);
  v41 = *(const char **)(v0 + 64);

  v166 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v42 = swift_bridgeObjectRetain(v41);
  v43 = 0;
  v44 = 0;
  v45 = (const char *)_swiftEmptyArrayStorage;
  v161 = _swiftEmptyArrayStorage;
  v163 = v40;
  v180 = v39;
  v46 = v175 == 0;
  if (v175)
    goto LABEL_28;
LABEL_27:
  v189(*(_QWORD *)(v0 + 144), 1, 1, *(_QWORD *)(v0 + 160));
  v47 = v21;
LABEL_30:
  v50 = *(_QWORD *)(v0 + 96);
  v51 = *(_QWORD *)(v0 + 72);
  sub_10000D0F0(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_1007B5200);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v50, 1, 1, v51);
  while (1)
  {
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 72);
    sub_10022E718(*(_QWORD *)(v0 + 96), v63, &qword_1007B9930);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v63, 1, v64) == 1)
      break;
    v170 = v43;
    v65 = *(uint64_t **)(v0 + 104);
    v66 = *v65;
    v67 = *(void (**)(const char *, char *, uint64_t))(v39 + 32);
    v67(*(const char **)(v0 + 216), (char *)v65 + *(int *)(v167 + 48), *(_QWORD *)(v0 + 160));
    URL._bridgeToObjectiveC()(v68);
    v70 = v69;
    *(_QWORD *)(v0 + 16) = 0;
    v71 = objc_msgSend(v166, "_doc_importItemAtURL:toDestination:error:", v69, 1, v0 + 16);

    v72 = *(void **)(v0 + 16);
    if (!v71)
    {
      v123 = *(_QWORD *)(v0 + 216);
      v124 = *(_QWORD *)(v0 + 176);
      v125 = *(_QWORD *)(v0 + 160);
      v126 = *(const char **)(v0 + 64);
      v127 = v72;
      *(_QWORD *)&v128 = swift_bridgeObjectRelease(v126).n128_u64[0];
      swift_bridgeObjectRelease(v45, v128);
      v129 = _convertNSErrorToError(_:)(v72);

      swift_willThrow(v130);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v124, v123, v125);
      swift_errorRetain(v129);
      v191 = v129;
      v131 = swift_errorRetain(v129);
      v132 = Logger.logObject.getter(v131);
      v133 = static os_log_type_t.error.getter(v132);
      v134 = os_log_type_enabled(v132, v133);
      v135 = *(_QWORD *)(v0 + 176);
      v136 = *(_QWORD *)(v0 + 160);
      if (v134)
      {
        v137 = swift_slowAlloc(22, -1);
        v173 = (uint64_t *)swift_slowAlloc(8, -1);
        v177 = swift_slowAlloc(32, -1);
        v192[0] = v177;
        *(_DWORD *)v137 = 136315394;
        v138 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v139 = dispatch thunk of CustomStringConvertible.description.getter(v136, v138);
        v141 = (const char *)v140;
        *(_QWORD *)(v0 + 24) = sub_100228BD8(v139, v140, v192);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v156, v157, v137 + 4);
        v142 = swift_bridgeObjectRelease(v141);
        v188 = *(void (**)(uint64_t, uint64_t, __n128))(v39 + 8);
        v188(v135, v136, v142);
        *(_WORD *)(v137 + 12) = 2112;
        swift_errorRetain(v191);
        v143 = _swift_stdlib_bridgeErrorToNSError(v191);
        *(_QWORD *)(v0 + 32) = v143;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v157, v0 + 40, v137 + 14);
        *v173 = v143;
        swift_errorRelease(v191);
        swift_errorRelease(v191);
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "Failed to save file %s to Downloads: %@", (uint8_t *)v137, 0x16u);
        v144 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v173, 1, v144);
        swift_slowDealloc(v173, -1, -1);
        swift_arrayDestroy(v177, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v177, -1, -1);
        swift_slowDealloc(v137, -1, -1);
      }
      else
      {
        v188 = *(void (**)(uint64_t, uint64_t, __n128))(v39 + 8);
        ((void (*)(_QWORD, _QWORD))v188)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
        swift_errorRelease(v191);
        swift_errorRelease(v191);
      }

      v148 = *(_QWORD *)(v0 + 232);
      v147 = *(_QWORD *)(v0 + 240);
      v150 = *(_QWORD *)(v0 + 216);
      v149 = *(_QWORD *)(v0 + 224);
      v152 = *(_QWORD *)(v0 + 200);
      v151 = *(_QWORD *)(v0 + 208);
      v153 = *(_QWORD *)(v0 + 192);
      v158 = *(_QWORD *)(v0 + 184);
      v160 = *(_QWORD *)(v0 + 176);
      v154 = *(_QWORD *)(v0 + 160);
      v162 = *(_QWORD *)(v0 + 152);
      v164 = *(_QWORD *)(v0 + 144);
      v165 = *(_QWORD *)(v0 + 136);
      v169 = *(_QWORD *)(v0 + 128);
      v174 = *(_QWORD *)(v0 + 104);
      v178 = *(_QWORD *)(v0 + 96);
      v182 = *(_QWORD *)(v0 + 88);
      swift_willThrow(v155);

      ((void (*)(uint64_t, uint64_t))v188)(v150, v154);
      swift_task_dealloc(v147);
      swift_task_dealloc(v148);
      swift_task_dealloc(v149);
      swift_task_dealloc(v150);
      swift_task_dealloc(v151);
      swift_task_dealloc(v152);
      swift_task_dealloc(v153);
      swift_task_dealloc(v158);
      swift_task_dealloc(v160);
      swift_task_dealloc(v162);
      swift_task_dealloc(v164);
      swift_task_dealloc(v165);
      swift_task_dealloc(v169);
      swift_task_dealloc(v174);
      swift_task_dealloc(v178);
      swift_task_dealloc(v182);
      v106 = *(uint64_t (**)(void))(v0 + 8);
      return v106();
    }
    v185 = v47;
    v73 = (unint64_t)v45;
    v75 = *(_QWORD *)(v0 + 200);
    v74 = *(_QWORD *)(v0 + 208);
    v76 = *(_QWORD *)(v0 + 160);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v77 = v72;

    v78 = v75;
    v45 = (const char *)v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v78, v74, v76);
    if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
      v45 = (const char *)sub_100227A54(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
    v80 = *((_QWORD *)v45 + 2);
    v79 = *((_QWORD *)v45 + 3);
    if (v80 >= v79 >> 1)
      v45 = (const char *)sub_100227A54(v79 > 1, v80 + 1, 1, (unint64_t)v45);
    v81 = *(char **)(v0 + 200);
    v82 = *(_QWORD *)(v0 + 208);
    v83 = *(_QWORD *)(v0 + 160);
    *((_QWORD *)v45 + 2) = v80 + 1;
    v67(&v45[((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(_QWORD *)(v180 + 72) * v80], v81, v83);
    v84 = *(void (**)(uint64_t, uint64_t))(v180 + 8);
    v84(v82, v83);
    if (__OFADD__(v66, 1))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v85 = *(_QWORD *)(v0 + 216);
    v86 = *(_QWORD *)(v0 + 160);
    v87 = *(void (**)(uint64_t *))(v0 + 48);
    *(double *)v192 = (double)(v66 + 1) / (double)v175;
    v87(v192);
    v84(v85, v86);
    v21 = v175;
    v39 = v180;
    v40 = v163;
    v44 = v185;
    v43 = v170;
    v46 = v185 >= v175;
    if (v185 == v175)
      goto LABEL_27;
LABEL_28:
    if (v46)
      goto LABEL_68;
    v48 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v39 + 16))(v49, *(_QWORD *)(v0 + 64)+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v44, v48, v42);
    v47 = v44 + 1;
    v189(v49, 0, 1, v48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v49, 1, v48) == 1)
      goto LABEL_30;
    v184 = v47;
    v52 = *(_QWORD *)(v0 + 224);
    v53 = *(_QWORD *)(v0 + 160);
    v54 = *(_QWORD *)(v0 + 88);
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
    v55(v52, *(_QWORD *)(v0 + 144), v53);
    v56 = v54 + *(int *)(v167 + 48);
    v55(v56, v52, v53);
    v57 = v43;
    if (__OFADD__(v43++, 1))
      goto LABEL_69;
    v59 = *(_QWORD *)(v0 + 160);
    v60 = *(_QWORD **)(v0 + 96);
    v61 = *(_QWORD *)(v0 + 72);
    v62 = (char *)v60 + *(int *)(v167 + 48);
    *v60 = v57;
    v55((uint64_t)v62, v56, v59);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v60, 0, 1, v61);
    v21 = v175;
    v47 = v184;
  }
  v172 = v45;
  v108 = *(const char **)(v0 + 64);
  *(_QWORD *)&v109 = swift_bridgeObjectRelease(v108, v156).n128_u64[0];
  v192[0] = (uint64_t)_swiftEmptyArrayStorage;
  v110 = swift_bridgeObjectRetain(v108, v109);
  if (v21)
  {
    v187 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v111 = *(_QWORD *)(v0 + 64) + v187;
    v112 = *(_QWORD *)(v39 + 72);
    v113 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v39 + 16);
    v161 = _swiftEmptyArrayStorage;
    while (1)
    {
      v114 = *(_QWORD *)(v0 + 160);
      v115 = *(_QWORD *)(v0 + 136);
      v113(v115, v111, v114, v110);
      v189(v115, 0, 1, v114);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v115, 1, v114) == 1)
        break;
      v116 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v39 + 32);
      v117 = v116(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
      if ((URL.isFileURL.getter(v117) & 1) != 0)
      {
        (*(void (**)(_QWORD, _QWORD))(v39 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
      }
      else
      {
        v116(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
        v118 = (uint64_t)v161;
        if ((swift_isUniquelyReferenced_nonNull_native(v161) & 1) == 0)
        {
          sub_100229810(0, v161[2] + 1, 1);
          v118 = v192[0];
        }
        v120 = *(_QWORD *)(v118 + 16);
        v119 = *(_QWORD *)(v118 + 24);
        if (v120 >= v119 >> 1)
        {
          sub_100229810(v119 > 1, v120 + 1, 1);
          v118 = v192[0];
        }
        v121 = *(_QWORD *)(v0 + 184);
        v122 = *(_QWORD *)(v0 + 160);
        *(_QWORD *)(v118 + 16) = v120 + 1;
        v116(v118 + v187 + v120 * v112, v121, v122);
        v161 = (_QWORD *)v118;
        v192[0] = v118;
      }
      v111 += v112;
      if (!--v21)
        goto LABEL_63;
    }
  }
  else
  {
LABEL_63:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v189)(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 160), v110);
  }
  v145 = *(_QWORD *)(v0 + 136);
  v146 = *(_QWORD **)(v0 + 40);
  swift_bridgeObjectRelease(*(const char **)(v0 + 64));
  sub_10000D0F0(v145, (uint64_t *)&unk_1007B5200);
  v192[0] = (uint64_t)v172;
  swift_bridgeObjectRetain(v172);
  swift_retain(v161);
  sub_100343338((uint64_t)v161);

  swift_release(v161);
  swift_bridgeObjectRelease(v172);
  *v146 = v192[0];
LABEL_48:
  v97 = *(_QWORD *)(v0 + 232);
  v99 = *(_QWORD *)(v0 + 216);
  v98 = *(_QWORD *)(v0 + 224);
  v101 = *(_QWORD *)(v0 + 200);
  v100 = *(_QWORD *)(v0 + 208);
  v103 = *(_QWORD *)(v0 + 184);
  v102 = *(_QWORD *)(v0 + 192);
  v104 = *(_QWORD *)(v0 + 176);
  v105 = *(_QWORD *)(v0 + 152);
  v168 = *(_QWORD *)(v0 + 144);
  v171 = *(_QWORD *)(v0 + 136);
  v176 = *(_QWORD *)(v0 + 128);
  v181 = *(_QWORD *)(v0 + 104);
  v186 = *(_QWORD *)(v0 + 96);
  v190 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v168);
  swift_task_dealloc(v171);
  swift_task_dealloc(v176);
  swift_task_dealloc(v181);
  swift_task_dealloc(v186);
  swift_task_dealloc(v190);
  v106 = *(uint64_t (**)(void))(v0 + 8);
  return v106();
}

uint64_t sub_100326638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a6;
  *(_BYTE *)(v6 + 81) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v7 = static AirDropActor.shared;
  *(_QWORD *)(v6 + 40) = static AirDropActor.shared;
  return swift_task_switch(sub_1003266AC, v7, 0);
}

uint64_t sub_1003266AC()
{
  uint64_t v0;
  void *v1;
  BOOL v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  uint64_t (*v7)(uint64_t);

  v1 = *(void **)(v0 + 24);
  if (v1)
    v2 = *(_BYTE *)(v0 + 81) == 0;
  else
    v2 = 1;
  if (v2)
  {
    v7 = (uint64_t (*)(uint64_t))((char *)&dword_1007BA830 + dword_1007BA830);
    v3 = (_QWORD *)swift_task_alloc(unk_1007BA834);
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_1003268EC;
    return v7(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v4 = static AirDropActor.shared;
    *(_QWORD *)(v0 + 48) = static AirDropActor.shared;
    v5 = v1;
    return swift_task_switch(sub_100326754, v4, 0);
  }
}

uint64_t sub_100326754()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[3];
  v1 = v0[4];
  v3 = static AirDropActor.shared;
  v4 = sub_100220D78((unint64_t *)&qword_1007BCF00, (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor, (uint64_t)&protocol conformance descriptor for AirDropActor);
  v5 = swift_task_alloc(32);
  v0[7] = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_100326830;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 10, v3, v4, 0xD00000000000001ALL, 0x80000001006162D0, sub_100330E50, v5, &type metadata for Bool);
}

uint64_t sub_100326830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100326890, v2, 0);
}

uint64_t sub_100326890()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v0 + 82) = *(_BYTE *)(v0 + 80);
  return swift_task_switch(sub_1003268AC, v1, 0);
}

uint64_t sub_1003268AC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 82);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003268EC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  v8 = *(_QWORD *)(v4 + 40);
  *(_BYTE *)(v4 + 83) = a1 & 1;
  return swift_task_switch(sub_10032696C, v8, 0);
}

uint64_t sub_10032696C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 83);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100326984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5[12] = a4;
  v5[13] = a5;
  v5[11] = a1;
  v6 = type metadata accessor for Logger(0);
  v5[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[15] = v7;
  v5[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SFSandboxTokenURLPair(0);
  v5[17] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[18] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v10);
  v5[20] = swift_task_alloc(v10);
  v5[21] = swift_task_alloc(v10);
  v11 = type metadata accessor for SFSecurityScopedURL(0);
  v5[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[23] = v12;
  v5[24] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008384((uint64_t *)&unk_1007B5200);
  v5[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v5[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[27] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[28] = swift_task_alloc(v16);
  v5[29] = swift_task_alloc(v16);
  v5[30] = swift_task_alloc(v16);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v17 = static AirDropActor.shared;
  v5[31] = static AirDropActor.shared;
  return swift_task_switch(sub_100326B1C, v17, 0);
}

uint64_t sub_100326B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  const char **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  sub_100330F1C(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_1007B5200);
    if (qword_1007B3F10 != -1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    v4 = sub_100221DF8(*(_QWORD *)(v0 + 112), (uint64_t)qword_1007BA738);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.error.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not move files to nil folder", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
    v8 = *(const char **)(v0 + 104);
    v9 = *(const char ***)(v0 + 88);

    *v9 = v8;
    v11 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRetain(v8);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    if (qword_1007B3F18 != -1)
      swift_once(&qword_1007B3F18, sub_10032542C);
    return swift_task_switch(sub_100326D78, *(_QWORD *)(v0 + 248), 0);
  }
}

uint64_t sub_100326D78()
{
  uint64_t v0;

  return swift_task_switch(sub_100326DD8, *(_QWORD *)(v0 + 248), 0);
}

uint64_t sub_100326DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  __n128 v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  NSURL *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  __n128 v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  void (*v89)(uint64_t, uint64_t, __n128);
  uint64_t v90[2];

  v1 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 16))(v1, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  SFSecurityScopedURL.init(_:readWrite:)(v1, 1);
  static SFSecurityScopedURL.consumeSandboxToken(item:)(*(_QWORD *)(v0 + 192));
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = sub_100221DF8(*(_QWORD *)(v0 + 112), (uint64_t)qword_1007BA738);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9 = v8(v3, v4, v6);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 208);
    v79 = *(_QWORD *)(v0 + 160);
    v80 = *(_QWORD *)(v0 + 216);
    v82 = *(_QWORD *)(v0 + 144);
    v83 = *(_QWORD *)(v0 + 136);
    v86 = v7;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v88 = v8;
    v15 = swift_slowAlloc(32, -1);
    v90[0] = v15;
    *(_DWORD *)v14 = 136315138;
    SFSandboxTokenURLPair.url.getter();
    v16 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v12, v13);
    *(_QWORD *)(v0 + 80) = sub_100228BD8(v17, (unint64_t)v19, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v14 + 4);
    v20 = swift_bridgeObjectRelease(v19);
    v21 = *(void (**)(uint64_t, uint64_t, __n128))(v82 + 8);
    v21(v79, v83, v20);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Moving downloaded files to folder %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    v22 = v15;
    v8 = v88;
    swift_slowDealloc(v22, -1, -1);
    v23 = v14;
    v7 = v86;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    v21 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 144) + 8);
    ((void (*)(_QWORD, _QWORD))v21)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
  }

  v25 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 56) = 0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  SFSandboxTokenURLPair.url.getter();
  URL._bridgeToObjectiveC()(v28);
  v30 = v29;
  v87 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v87(v24, v26);
  v31 = *(void **)(v0 + 56);
  *(_QWORD *)(v0 + 40) = v31;
  v32 = sub_10019C2B8(isa, v30, 0, (_QWORD *)(v0 + 40));

  v33 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 56) = v33;
  v34 = v33;

  v89 = v21;
  if (v32)
  {
    v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, *(_QWORD *)(v0 + 208));

    if (*(_QWORD *)(v36 + 16))
      goto LABEL_16;
    v35 = swift_bridgeObjectRelease((const char *)v36);
  }
  v37 = *(_QWORD *)(v0 + 168);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 128), v7, *(_QWORD *)(v0 + 112), v35);
  v40 = v8(v38, v37, v39);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = *(_QWORD *)(v0 + 224);
    v44 = *(_QWORD *)(v0 + 208);
    v45 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 136);
    v46 = swift_slowAlloc(22, -1);
    v84 = (_QWORD *)swift_slowAlloc(8, -1);
    v85 = swift_slowAlloc(32, -1);
    v90[0] = v85;
    *(_DWORD *)v46 = 136315394;
    SFSandboxTokenURLPair.url.getter();
    v47 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v48 = dispatch thunk of CustomStringConvertible.description.getter(v44, v47);
    v50 = v49;
    v87(v43, v44);
    *(_QWORD *)(v0 + 48) = sub_100228BD8(v48, (unint64_t)v50, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v46 + 4);
    v51 = swift_bridgeObjectRelease(v50);
    v89(v45, v81, v51);
    *(_WORD *)(v46 + 12) = 2112;
    swift_beginAccess(v0 + 56, v0 + 16, 0, 0);
    v52 = *(void **)(v0 + 56);
    if (v52)
    {
      *(_QWORD *)(v0 + 72) = v52;
      v53 = v52;
      v54 = v0 + 72;
      v55 = v0 + 80;
    }
    else
    {
      v54 = v0 + 64;
      *(_QWORD *)(v0 + 64) = 0;
      v55 = v0 + 72;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v46 + 14);
    v60 = *(_QWORD *)(v0 + 120);
    v59 = *(_QWORD *)(v0 + 128);
    v61 = *(_QWORD *)(v0 + 112);
    *v84 = v52;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Failed to save files to %s: %@", (uint8_t *)v46, 0x16u);
    v62 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v84, 1, v62);
    swift_slowDealloc(v84, -1, -1);
    swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  }
  else
  {
    v56 = *(_QWORD *)(v0 + 128);
    v57 = *(_QWORD *)(v0 + 112);
    v58 = *(_QWORD *)(v0 + 120);
    ((void (*)(_QWORD, _QWORD))v21)(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  }
  v36 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain((const char *)v36);
LABEL_16:
  v63 = *(_QWORD *)(v0 + 240);
  v64 = *(_QWORD *)(v0 + 208);
  v66 = *(_QWORD *)(v0 + 184);
  v65 = *(_QWORD *)(v0 + 192);
  v67 = *(_QWORD *)(v0 + 168);
  v68 = *(_QWORD *)(v0 + 176);
  v69 = *(_QWORD *)(v0 + 136);
  v70 = *(uint64_t **)(v0 + 88);
  SFSandboxTokenURLPair.releaseSandboxExtension()();
  ((void (*)(uint64_t, uint64_t))v89)(v67, v69);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v68);
  v87(v63, v64);

  *v70 = v36;
  v71 = *(_QWORD *)(v0 + 232);
  v72 = *(_QWORD *)(v0 + 224);
  v74 = *(_QWORD *)(v0 + 192);
  v73 = *(_QWORD *)(v0 + 200);
  v76 = *(_QWORD *)(v0 + 160);
  v75 = *(_QWORD *)(v0 + 168);
  v77 = *(_QWORD *)(v0 + 152);
  v78 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100327528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5[32] = a4;
  v5[33] = a5;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  v6 = type metadata accessor for URL(0);
  v5[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[35] = v7;
  v5[36] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100008384(&qword_1007B9930) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[37] = swift_task_alloc(v8);
  v5[38] = swift_task_alloc(v8);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v9 = static AirDropActor.shared;
  v5[39] = static AirDropActor.shared;
  return swift_task_switch(sub_1003275F8, v9, 0);
}

id sub_1003275F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  id v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  Class isa;
  id v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  const char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t inited;
  uint64_t v56;
  const char *v57;
  id result;
  NSURL *v59;
  void *v60;
  void *v61;
  void *v62;
  unint64_t v63;
  Class v64;
  void *v65;
  id v66;
  void *v67;
  const char *v68;
  const char *v69;
  uint64_t v70;
  NSURL *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(double *);
  id v81;
  const char *v82;
  Class v83;
  NSURL *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  const char *v98;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 320) = v2;
  if (!v2)
  {
    if (qword_1007B3F10 != -1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100221DF8(v18, (uint64_t)qword_1007BA738);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot open empty list of URLs", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    v23 = 0;
LABEL_45:
    v93 = *(_QWORD *)(v0 + 296);
    v92 = *(_QWORD *)(v0 + 304);
    v94 = *(_QWORD *)(v0 + 288);
    **(_BYTE **)(v0 + 232) = v23;
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (void *)(v0 + 216);
  v4 = *(void **)(v0 + 264);
  if (!v4)
  {
    if (qword_1007B3F10 != -1)
    {
      swift_once(&qword_1007B3F10, sub_10032539C);
      v1 = *(_QWORD *)(v0 + 256);
    }
    v24 = type metadata accessor for Logger(0);
    sub_100221DF8(v24, (uint64_t)qword_1007BA738);
    v25 = swift_bridgeObjectRetain_n(v1, 2);
    v9 = Logger.logObject.getter(v25);
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v96 = v28;
      *(_DWORD *)v27 = 136315138;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v30 = (id)SFCompactStringFromCollection(isa);

      if (v30)
      {
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v33 = v32;

      }
      else
      {
        v31 = 0xD000000000000015;
        v97 = 0.0;
        v98 = (const char *)0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease((const char *)0xE000000000000000);
        v33 = (const char *)0x8000000100612DF0;
      }
      v42 = *(_QWORD *)(v0 + 256);
      *(_QWORD *)(v0 + 208) = sub_100228BD8(v31, (unint64_t)v33, &v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v27 + 4);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease_n(v42, 2);
      _os_log_impl((void *)&_mh_execute_header, v9, v26, "Opening URLs: %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
      goto LABEL_27;
    }
    v35 = *(_QWORD *)(v0 + 256);
LABEL_19:
    swift_bridgeObjectRelease_n(v35, 2);
LABEL_27:

    goto LABEL_28;
  }
  v5 = qword_1007B3F10;
  v6 = v4;
  if (v5 != -1)
  {
LABEL_47:
    swift_once(&qword_1007B3F10, sub_10032539C);
    v1 = *(_QWORD *)(v0 + 256);
  }
  v7 = type metadata accessor for Logger(0);
  sub_100221DF8(v7, (uint64_t)qword_1007BA738);
  swift_bridgeObjectRetain_n(v1, 2);
  v8 = v6;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v9, v10))
  {
    v34 = *(_QWORD *)(v0 + 256);

    v35 = v34;
    goto LABEL_19;
  }
  v95 = v0 + 224;
  v11 = swift_slowAlloc(22, -1);
  v12 = swift_slowAlloc(64, -1);
  v96 = v12;
  *(_DWORD *)v11 = 136315394;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  v14 = (id)SFCompactStringFromCollection(v13);

  if (v14)
  {
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

  }
  else
  {
    v15 = 0xD000000000000015;
    v97 = 0.0;
    v98 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v98);
    v17 = (const char *)0x8000000100612DF0;
  }
  v36 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 216) = sub_100228BD8(v15, (unint64_t)v17, &v96);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v95, v11 + 4);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease_n(v36, 2);
  *(_WORD *)(v11 + 12) = 2080;
  v37 = objc_msgSend(v8, "bundleIdentifier");
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v41 = v40;

  }
  else
  {
    v39 = 0xD000000000000015;
    v97 = 0.0;
    v98 = (const char *)0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v98);
    v41 = (const char *)0x8000000100612DF0;
  }
  *(_QWORD *)(v0 + 224) = sub_100228BD8(v39, (unint64_t)v41, &v96);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v95, v0 + 232, v11 + 14);
  swift_bridgeObjectRelease(v41);

  _os_log_impl((void *)&_mh_execute_header, v9, v10, "Opening URLs: %s in %s", (uint8_t *)v11, 0x16u);
  swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v12, -1, -1);
  swift_slowDealloc(v11, -1, -1);

LABEL_28:
  v44 = *(_QWORD **)(v0 + 296);
  v43 = *(_QWORD *)(v0 + 304);
  v45 = *(const char **)(v0 + 256);
  *(_QWORD *)(v0 + 184) = 0;
  *(_QWORD *)(v0 + 192) = 0;
  *(_QWORD *)(v0 + 176) = v45;
  swift_bridgeObjectRetain(v45);
  sub_100324CC0(v44);
  sub_10022E718((uint64_t)v44, v43, &qword_1007B9930);
  v46 = sub_100008384(&qword_1007B9928);
  v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v43, 1, v46);
  *(_DWORD *)(v0 + 384) = v47;
  if (v47 == 1)
  {
LABEL_43:
    v23 = 0;
LABEL_44:
    swift_bridgeObjectRelease(*(const char **)(v0 + 176));
    goto LABEL_45;
  }
  v48 = FBSOpenApplicationOptionKeyPromptUnlockDevice;
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 32);
  *(_QWORD *)(v0 + 336) = v48;
  while (1)
  {
    v49 = *(void (**)(uint64_t, char *, uint64_t))(v0 + 328);
    v50 = *(_QWORD *)(v0 + 336);
    v51 = *(char **)(v0 + 304);
    v52 = *(_QWORD *)(v0 + 288);
    v53 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 344) = *(_QWORD *)v51;
    v49(v52, &v51[*(int *)(v46 + 48)], v53);
    v54 = sub_100008384(&qword_1007BA810);
    inited = swift_initStackObject(v54, v0 + 80);
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    *(_QWORD *)(inited + 40) = v56;
    *(_BYTE *)(inited + 48) = 1;
    v57 = (const char *)sub_10021F520(inited);
    if ((sub_10033092C(v52) & 1) == 0)
      break;
    result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (!result)
    {
      __break(1u);
      goto LABEL_49;
    }
    v60 = result;
    URL._bridgeToObjectiveC()(v59);
    v62 = v61;
    v63 = sub_100323418((uint64_t)v57);
    swift_bridgeObjectRelease(v57);
    v64 = Dictionary._bridgeToObjectiveC()().super.isa;
    LOBYTE(v63) = objc_msgSend(v60, "openSensitiveURL:withOptions:", v62, v64, swift_bridgeObjectRelease((const char *)v63).n128_f64[0]);

    if ((v63 & 1) == 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
      goto LABEL_43;
    }
    v65 = *(void **)(v0 + 264);
    if (v65 && (v66 = objc_msgSend(v65, "bundleIdentifier")) != 0)
    {
      v67 = v66;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v69 = v68;

      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v69);
    }
    else
    {
      v6 = 0;
    }
    v70 = *(_QWORD *)(v0 + 344);
    v3 = (void *)objc_opt_self(SDAirDropHandler);
    URL._bridgeToObjectiveC()(v71);
    v73 = v72;
    objc_msgSend(v3, "logReceiverBundleID:forURL:", v6, v72);

    v74 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    v76 = *(_QWORD **)(v0 + 296);
    v75 = *(_QWORD *)(v0 + 304);
    v77 = *(_QWORD *)(v0 + 280);
    v78 = *(_QWORD *)(v0 + 288);
    v79 = *(_QWORD *)(v0 + 272);
    v80 = *(void (**)(double *))(v0 + 240);
    v97 = (double)v74 / (double)(*(_QWORD *)(v0 + 320) + 1);
    v80(&v97);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v79);
    sub_100324CC0(v76);
    sub_10022E718((uint64_t)v76, v75, &qword_1007B9930);
    v46 = sub_100008384(&qword_1007B9928);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v75, 1, v46) == 1)
    {
      v23 = *(_DWORD *)(v0 + 384) != 1;
      goto LABEL_44;
    }
  }
  v81 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
  *(_QWORD *)(v0 + 352) = v81;
  v82 = (const char *)sub_100323418((uint64_t)v57);
  swift_bridgeObjectRelease(v57);
  v83 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v81, "setFrontBoardOptions:", v83, swift_bridgeObjectRelease(v82).n128_f64[0]);

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  *(_QWORD *)(v0 + 360) = result;
  if (result)
  {
    v85 = result;
    v86 = v0 + 16;
    URL._bridgeToObjectiveC()(v84);
    v88 = v87;
    *(_QWORD *)(v0 + 368) = v87;
    *(_QWORD *)(v0 + 56) = v0 + 200;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10032803C;
    v90 = swift_continuation_init(v0 + 16, 1, v89);
    *(_QWORD *)(v0 + 136) = _NSConcreteStackBlock;
    v91 = (_QWORD *)(v0 + 136);
    v91[1] = 0x40000000;
    v91[2] = sub_1003285D0;
    v91[3] = &unk_100722678;
    v91[4] = v90;
    objc_msgSend(v85, "openURL:configuration:completionHandler:", v88, v81, v91);
    return (id)swift_continuation_await(v86);
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_10032803C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 376) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 312);
    swift_bridgeObjectRelease(*(const char **)(v1 + 176));
    v4 = sub_100328534;
    v5 = v3;
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 312);
    v4 = sub_1003280AC;
  }
  return swift_task_switch(v4, v5, 0);
}

void sub_1003280AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  const char *v4;
  __n128 v5;
  void *v6;
  id v7;
  void *v8;
  const char *v9;
  const char *v10;
  NSString v11;
  uint64_t v12;
  void *v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(double *);
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  const char *v33;
  id v34;
  NSURL *v35;
  void *v36;
  void *v37;
  void *v38;
  unint64_t v39;
  Class isa;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  const char *v46;
  Class v47;
  id v48;
  NSURL *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  _QWORD *v56;
  double v57;

  v2 = *(void **)(v0 + 360);
  v1 = *(void **)(v0 + 368);
  v3 = *(void **)(v0 + 352);

  v4 = *(const char **)(v0 + 200);
  v5 = swift_bridgeObjectRelease(v4);
  if (v4)
  {
    while (1)
    {
      v6 = *(void **)(v0 + 264);
      if (v6 && (v7 = objc_msgSend(v6, "bundleIdentifier")) != 0)
      {
        v8 = v7;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v10 = v9;

        v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        v11 = 0;
      }
      v12 = *(_QWORD *)(v0 + 344);
      v13 = (void *)objc_opt_self(SDAirDropHandler);
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      objc_msgSend(v13, "logReceiverBundleID:forURL:", v11, v15);

      v17 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v19 = *(_QWORD **)(v0 + 296);
      v18 = *(_QWORD *)(v0 + 304);
      v20 = *(_QWORD *)(v0 + 280);
      v21 = *(_QWORD *)(v0 + 288);
      v22 = *(_QWORD *)(v0 + 272);
      v23 = *(void (**)(double *))(v0 + 240);
      v57 = (double)v17 / (double)(*(_QWORD *)(v0 + 320) + 1);
      v23(&v57);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
      sub_100324CC0(v19);
      sub_10022E718((uint64_t)v19, v18, &qword_1007B9930);
      v24 = sub_100008384(&qword_1007B9928);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 1, v24) == 1)
      {
        v41 = *(_DWORD *)(v0 + 384) != 1;
        goto LABEL_13;
      }
      v25 = *(void (**)(uint64_t, char *, uint64_t))(v0 + 328);
      v26 = *(_QWORD *)(v0 + 336);
      v27 = *(char **)(v0 + 304);
      v28 = *(_QWORD *)(v0 + 288);
      v29 = *(_QWORD *)(v0 + 272);
      *(_QWORD *)(v0 + 344) = *(_QWORD *)v27;
      v25(v28, &v27[*(int *)(v24 + 48)], v29);
      v30 = sub_100008384(&qword_1007BA810);
      inited = swift_initStackObject(v30, v0 + 80);
      *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      *(_QWORD *)(inited + 40) = v32;
      *(_BYTE *)(inited + 48) = 1;
      v33 = (const char *)sub_10021F520(inited);
      if ((sub_10033092C(v28) & 1) == 0)
        break;
      v34 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
      if (!v34)
        goto LABEL_17;
      v36 = v34;
      URL._bridgeToObjectiveC()(v35);
      v38 = v37;
      v39 = sub_100323418((uint64_t)v33);
      swift_bridgeObjectRelease(v33);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      LOBYTE(v39) = objc_msgSend(v36, "openSensitiveURL:withOptions:", v38, isa, swift_bridgeObjectRelease((const char *)v39).n128_f64[0]);

      if ((v39 & 1) == 0)
        goto LABEL_11;
    }
    v45 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
    *(_QWORD *)(v0 + 352) = v45;
    v46 = (const char *)sub_100323418((uint64_t)v33);
    swift_bridgeObjectRelease(v33);
    v47 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v45, "setFrontBoardOptions:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

    v48 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    *(_QWORD *)(v0 + 360) = v48;
    if (v48)
    {
      v50 = v48;
      v51 = v0 + 16;
      URL._bridgeToObjectiveC()(v49);
      v53 = v52;
      *(_QWORD *)(v0 + 368) = v52;
      *(_QWORD *)(v0 + 56) = v0 + 200;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_10032803C;
      v55 = swift_continuation_init(v0 + 16, 1, v54);
      *(_QWORD *)(v0 + 136) = _NSConcreteStackBlock;
      v56 = (_QWORD *)(v0 + 136);
      v56[1] = 0x40000000;
      v56[2] = sub_1003285D0;
      v56[3] = &unk_100722678;
      v56[4] = v55;
      objc_msgSend(v50, "openURL:configuration:completionHandler:", v53, v45, v56);
      swift_continuation_await(v51);
      return;
    }
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_11:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272), v5);
    v41 = 0;
LABEL_13:
    swift_bridgeObjectRelease(*(const char **)(v0 + 176));
    v43 = *(_QWORD *)(v0 + 296);
    v42 = *(_QWORD *)(v0 + 304);
    v44 = *(_QWORD *)(v0 + 288);
    **(_BYTE **)(v0 + 232) = v41;
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100328534()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 368);
  v3 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 272);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003285D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008384(&qword_1007B5A60);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    if (a2)
      v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
    else
      v10 = 0;
    v11 = v10;
    sub_10022E718((uint64_t)&v11, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_1007BA818);
    return swift_continuation_throwingResume(v3);
  }
}

void sub_1003286A4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  unsigned int v23;
  id v24;
  unsigned int v25;
  int v26;
  id v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  __n128 v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void *v41;
  const char *v42;
  _QWORD *v43;
  uint64_t v44;
  const char *v45;
  Class v46;
  objc_class *v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  const char *v58;
  Class v59;
  const char *v60;
  Class v61;
  double v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  const char *v78;
  __n128 v79;
  os_log_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  NSURL *v86;
  void *v87;
  void *v88;
  id v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v91;
  double v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  void *v101;
  id v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  char *v108;
  uint64_t v109;
  int v110;
  os_log_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  const char *v118;
  char *v119;
  char *v120;
  const char *v121;
  void (*v122)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  const char *v135;
  Class isa;
  uint64_t aBlock[5];
  uint64_t v138;
  char v139[8];
  uint64_t v140;

  v131 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v131 - 8);
  v7 = __chkstk_darwin(v131);
  v120 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v130 = (char *)&v103 - v9;
  v10 = sub_100008384(&qword_1007BA838);
  v115 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v113 = v11;
  v114 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008384((uint64_t *)&unk_1007B5200);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v127 = (char *)&v103 - v16;
  v17 = objc_opt_self(LSApplicationRecord);
  v18 = swift_dynamicCastObjCClass(a2, v17);
  v129 = v6;
  if (v18)
  {
    v19 = (void *)v18;
    v20 = a3;
    v21 = a2;
    v22 = objc_msgSend(v19, "applicationState");
    v23 = objc_msgSend(v22, "isInstalled");

    if (v23)
    {
      v24 = objc_msgSend(v19, "applicationState");
      v25 = objc_msgSend(v24, "isRestricted");

      v26 = v25 ^ 1;
    }
    else
    {

      v26 = 0;
    }
    a3 = v20;
    v6 = v129;
  }
  else
  {
    v26 = 1;
  }
  v27 = objc_msgSend(a2, "bundleIdentifier");
  if (!v27)
  {
LABEL_25:
    v83 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v83)
    {
      v84 = v83;
      if (*(_QWORD *)(a3 + 16))
      {
        v85 = v131;
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v15, a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v131);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v85);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v85) == 1)
        {
          v87 = 0;
        }
        else
        {
          URL._bridgeToObjectiveC()(v86);
          v87 = v88;
          (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v131);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v15, 1, 1, v131);
        v87 = 0;
      }
      v89 = objc_msgSend(a2, "bundleIdentifier");
      objc_msgSend(v84, "_LSFailedToOpenURL:withBundle:", v87, v89);

      LOBYTE(aBlock[0]) = 1;
      CheckedContinuation.resume(returning:)(aBlock, v10);
    }
    else
    {
LABEL_37:
      __break(1u);
    }
    return;
  }
  v28 = v27;
  v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  if (!v26)
  {
    swift_bridgeObjectRelease(v29);

    goto LABEL_25;
  }
  v118 = v29;
  v105 = v10;
  v106 = a1;
  v30 = sub_100008384(&qword_1007BA810);
  inited = swift_initStackObject(v30, v139);
  *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(inited + 40) = v32;
  *(_BYTE *)(inited + 48) = 1;
  v121 = (const char *)sub_10021F520(inited);
  v117 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v126 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v33 = *(_QWORD *)(a3 + 16);
  v104 = (const char *)a3;
  if (v33)
  {
    v34 = (const char *)a3;
    v35 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v124 = *(_QWORD *)(v6 + 72);
    v128 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v123 = &v134;
    v125 = LSMoveDocumentOnOpenKey;
    v108 = &v133;
    v36 = swift_bridgeObjectRetain(v34);
    v119 = (char *)&type metadata for Any + 8;
    v36.n128_u64[0] = 136315394;
    v107 = v36;
    v37 = v127;
    while (1)
    {
      v39 = v131;
      v128(v37, v35, v131);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v40)(v37, 0, 1, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v37, 1, v39) == 1)
        break;
      v122 = v40;
      v41 = v28;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v130, v37, v131);
      v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
      v135 = v42;
      sub_100221EDC(0, (unint64_t *)&qword_1007BD000, NSNumber_ptr);
      isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      sub_100008384(&qword_1007B4B88);
      v43 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
      v44 = v134;
      v45 = v135;
      v46 = isa;
      swift_bridgeObjectRetain(v135);
      v47 = v46;
      v48 = sub_10045C200(v44, (uint64_t)v45);
      if ((v49 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v43[(v48 >> 6) + 8] |= 1 << v48;
      v50 = (uint64_t *)(v43[6] + 16 * v48);
      *v50 = v44;
      v50[1] = (uint64_t)v45;
      *(_QWORD *)(v43[7] + 8 * v48) = v47;
      v51 = v43[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_36;
      v43[2] = v53;
      v54 = sub_100008384(&qword_1007BA840);
      swift_arrayDestroy(v123, 1, v54);
      if (v126)
      {
        v55 = v126;
        URL._bridgeToObjectiveC()((NSURL *)&v140);
        v57 = v56;
        v58 = (const char *)sub_100323770((uint64_t)v43);
        swift_release(v43);
        v59 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v58);
        v60 = (const char *)sub_100323418((uint64_t)v121);
        v61 = Dictionary._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v62 = swift_bridgeObjectRelease(v60).n128_u64[0];
        v28 = v41;
        v63 = objc_msgSend(v55, "operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:userInfo:options:delegate:", v57, v41, 0, 0, 0, v59, v62, v61, 0);

        if (v63)
        {
          if (qword_1007B3F10 != -1)
            swift_once(&qword_1007B3F10, sub_10032539C);
          v64 = type metadata accessor for Logger(0);
          sub_100221DF8(v64, (uint64_t)qword_1007BA738);
          v65 = v120;
          v66 = v131;
          v128(v120, (uint64_t)v130, v131);
          v67 = v118;
          v68 = swift_bridgeObjectRetain_n(v118, 2);
          v69 = Logger.logObject.getter(v68);
          v70 = static os_log_type_t.default.getter();
          v71 = v70;
          if (os_log_type_enabled(v69, v70))
          {
            v72 = swift_slowAlloc(22, -1);
            v112 = swift_slowAlloc(64, -1);
            aBlock[0] = v112;
            *(_DWORD *)v72 = v107.n128_u32[0];
            v111 = v69;
            swift_bridgeObjectRetain(v67);
            v132 = sub_100228BD8(v116, (unint64_t)v67, aBlock);
            v110 = v71;
            v73 = v66;
            v74 = v108;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v108, v72 + 4);
            swift_bridgeObjectRelease_n(v67, 3);
            *(_WORD *)(v72 + 12) = 2080;
            v109 = v72 + 14;
            v75 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v76 = dispatch thunk of CustomStringConvertible.description.getter(v73, v75);
            v78 = (const char *)v77;
            v132 = sub_100228BD8(v76, v77, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v74, v109);
            v79 = swift_bridgeObjectRelease(v78);
            (*(void (**)(char *, uint64_t, __n128))(v129 + 8))(v65, v73, v79);
            v80 = v111;
            _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v110, "Enqueuing resource open operation for %s, with URL: %s", (uint8_t *)v72, 0x16u);
            v81 = v112;
            swift_arrayDestroy(v112, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v81, -1, -1);
            v82 = v72;
            v28 = v41;
            swift_slowDealloc(v82, -1, -1);

          }
          else
          {
            swift_bridgeObjectRelease_n(v67, 2);
            (*(void (**)(char *, uint64_t))(v129 + 8))(v65, v66);

          }
          objc_msgSend(v117, "addOperation:", v63);

        }
      }
      else
      {
        swift_release(v43);
        v28 = v41;
      }
      objc_msgSend((id)objc_opt_self(SDAirDropHandler), "logReceiverBundleID:forURL:", v28, 0);
      v6 = v129;
      (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v131);
      v35 += v124;
      --v33;
      v37 = v127;
      if (!v33)
      {
        v122(v127, 1, 1, v131, v38);
        break;
      }
    }
  }
  else
  {
    v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v91 = swift_bridgeObjectRetain((const char *)a3);
    v90(v127, 1, 1, v131, v91);
  }

  *(_QWORD *)&v92 = swift_bridgeObjectRelease(v104).n128_u64[0];
  v93 = swift_bridgeObjectRelease(v121, v92);
  v94 = v115;
  v95 = v114;
  v96 = v105;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v115 + 16))(v114, v106, v105, v93);
  v97 = *(unsigned __int8 *)(v94 + 80);
  v98 = (v97 + 32) & ~v97;
  v99 = swift_allocObject(&unk_1007226F0, v98 + v113, v97 | 7);
  v100 = v118;
  *(_QWORD *)(v99 + 16) = v116;
  *(_QWORD *)(v99 + 24) = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v99 + v98, v95, v96);
  aBlock[4] = (uint64_t)sub_100330ED0;
  v138 = v99;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10025BBB4;
  aBlock[3] = (uint64_t)&unk_100722708;
  v101 = _Block_copy(aBlock);
  swift_release(v138);
  v102 = v117;
  objc_msgSend(v117, "addBarrierBlock:", v101);
  _Block_release(v101);

}

uint64_t sub_100329220(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v4 = type metadata accessor for Logger(0);
  sub_100221DF8(v4, (uint64_t)qword_1007BA738);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(a2);
    v12 = sub_100228BD8(a1, (unint64_t)a2, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Resource open operation completed for %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  LOBYTE(v13) = 1;
  v10 = sub_100008384(&qword_1007BA838);
  return CheckedContinuation.resume(returning:)(&v13, v10);
}

uint64_t sub_1003293EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3[20] = a2;
  v3[21] = a3;
  v4 = type metadata accessor for URL.DirectoryHint(0);
  v3[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[23] = v5;
  v3[24] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[25] = swift_task_alloc(v6);
  v3[26] = swift_task_alloc(v6);
  v3[27] = swift_task_alloc(v6);
  v7 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v3[28] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[29] = v8;
  v3[30] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  v3[31] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[32] = v10;
  v3[33] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v3[34] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[35] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v13);
  v3[37] = swift_task_alloc(v13);
  v3[38] = swift_task_alloc(v13);
  v3[39] = swift_task_alloc(v13);
  v3[40] = swift_task_alloc(v13);
  v3[41] = swift_task_alloc(v13);
  v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v3[42] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[43] = v15;
  v3[44] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SFAirDropReceive.Transfer(0);
  v3[45] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[46] = v17;
  v3[47] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SFPlatform(0);
  v3[48] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[49] = v19;
  v3[50] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3[51] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[52] = v21;
  v3[53] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  v3[54] = v22;
  v3[55] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v3[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v24 = static AirDropActor.shared;
  v3[57] = static AirDropActor.shared;
  return swift_task_switch(sub_100329688, v24, 0);
}

uint64_t sub_100329688()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  __objc2_meth_list **p_opt_class_meths;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned int v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;

  v1 = v0;
  v3 = v0[55];
  v2 = v0[56];
  v4 = v0[53];
  v5 = v0[54];
  v6 = v0[50];
  v88 = v0[52];
  v90 = v0[51];
  v92 = v0[49];
  v94 = v0[48];
  v103 = v0[45];
  v107 = v0[47];
  v97 = v0[46];
  v100 = v0[20];
  sub_100221EDC(0, (unint64_t *)&qword_1007B42D0, OS_dispatch_queue_ptr);
  static DispatchQoS.default.getter();
  v0[17] = _swiftEmptyArrayStorage;
  v7 = sub_100220D78((unint64_t *)&unk_1007BD2A0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v8 = sub_100008384((uint64_t *)&unk_1007B42E0);
  v9 = v0 + 17;
  v10 = sub_10026E2FC((unint64_t *)&qword_1007BD2B0, (uint64_t *)&unk_1007B42E0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 17, v8, v10, v5, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v88 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v90);
  v11 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x8000000100616210, v2, v3, v4, 0);
  v9[41] = v11;
  static SFPlatform.macOS.getter(v11);
  LOBYTE(v5) = static SFPlatform.isPlatform(_:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v6, v94);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v107, v100, v103);
  v14 = v1[46];
  v13 = v1[47];
  v15 = v1[45];
  if ((v5 & 1) != 0)
  {
    v17 = v1[43];
    v16 = v1[44];
    v18 = v1[42];
    v19 = SFAirDropReceive.Transfer.state.getter(v12);
    v20 = SFAirDropReceive.Transfer.State.completedSuccessfully.getter(v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    if ((v20 & 1) == 0)
    {
      v21 = v1[57];
      v22 = type metadata accessor for SDAirDropDownloadDestinationProvideriOS();
      v1[59] = swift_initStackObject(v22, v1 + 8);
      return swift_task_switch(sub_100329FAC, v21, 0);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(v1[47], v1[45]);
  }
  v104 = (void *)v11;
  v108 = v9 - 1;
  v24 = sub_10019BD30();
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  if (!v24)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1[35] + 56))(v1[25], 1, 1, v1[34]);
    goto LABEL_14;
  }
  v26 = v24;
  v28 = v1[35];
  v27 = v1[36];
  v29 = v1[34];
  v30 = v1[25];
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
  v31(v30, v27, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v29) == 1)
  {
LABEL_14:
    sub_10000D0F0(v1[25], (uint64_t *)&unk_1007B5200);
    v64 = type metadata accessor for SFAirDropReceive.Failure(0);
    v65 = sub_100220D78(&qword_1007B4C70, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v66 = swift_allocError(v64, v65, 0, 0);
    v68 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v67, enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:), v64);
    swift_willThrow(v68);
LABEL_15:
    if (p_opt_class_meths[482] != (__objc2_meth_list *)-1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    v69 = type metadata accessor for Logger(0);
    sub_100221DF8(v69, (uint64_t)qword_1007BA738);
    swift_errorRetain(v66);
    v70 = swift_errorRetain(v66);
    v71 = Logger.logObject.getter(v70);
    v72 = static os_log_type_t.error.getter(v71);
    if (os_log_type_enabled(v71, v72))
    {
      v105 = (void *)v1[58];
      v73 = (uint8_t *)swift_slowAlloc(12, -1);
      v74 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v73 = 138412290;
      swift_errorRetain(v66);
      v75 = _swift_stdlib_bridgeErrorToNSError(v66);
      *(v9 - 2) = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v9 - 2, v108, v73 + 4);
      *v74 = v75;
      swift_errorRelease(v66);
      swift_errorRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Remove URL failed with error %@", v73, 0xCu);
      v76 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v74, 1, v76);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      swift_errorRelease(v66);
    }
    else
    {

      swift_errorRelease(v66);
      swift_errorRelease(v66);
      swift_errorRelease(v66);

    }
    goto LABEL_20;
  }
  v95 = v9 - 12;
  v98 = v9 - 3;
  v101 = v9;
  v32 = v1[24];
  v33 = v1[22];
  v34 = v1[23];
  v31(v1[37], v1[25], v1[34]);
  v1[10] = 0xD000000000000011;
  v1[11] = 0x80000001006117D0;
  v35 = enum case for URL.DirectoryHint.isDirectory(_:);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 104);
  v36(v32, enum case for URL.DirectoryHint.isDirectory(_:), v33);
  v37 = sub_100221E10();
  URL.append<A>(path:directoryHint:)(v9 - 7, v32, &type metadata for String, v37);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
  v39 = v38(v32, v33);
  v1[12] = UUID.uuidString.getter(v39);
  v1[13] = v40;
  v36(v32, v35, v33);
  URL.append<A>(path:directoryHint:)(v9 - 5, v32, &type metadata for String, v37);
  v41 = v33;
  p_opt_class_meths = &OBJC_PROTOCOL___SDSharePointBrowserDelegate.opt_class_meths;
  v38(v32, v41);
  swift_bridgeObjectRelease((const char *)v1[13]);
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v42 = type metadata accessor for Logger(0);
  v43 = sub_100221DF8(v42, (uint64_t)qword_1007BA738);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = v1[37];
    v47 = (uint8_t *)swift_slowAlloc(12, -1);
    v48 = swift_slowAlloc(32, -1);
    v110 = v48;
    *(_DWORD *)v47 = 136315138;
    v49 = swift_beginAccess(v46, v101 - 15, 0, 0);
    v50 = URL.path.getter(v49);
    v52 = (const char *)v51;
    v1[16] = sub_100228BD8(v50, v51, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, v101, v47 + 4);
    swift_bridgeObjectRelease(v52);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Cleaning up transfer folder %s", v47, 0xCu);
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    v53 = v48;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___SDSharePointBrowserDelegate + 48);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }

  v54 = v1[37];
  v55 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  swift_beginAccess(v54, v95, 0, 0);
  URL._bridgeToObjectiveC()(v56);
  v58 = v57;
  v1[14] = 0;
  v59 = objc_msgSend(v55, "removeItemAtURL:error:", v57, v98);

  v60 = (id)v1[14];
  v61 = v1[37];
  v62 = v1[34];
  v63 = v1[35];
  if (!v59)
  {
    v86 = v60;
    v66 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v87);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
    v9 = v101;
    goto LABEL_15;
  }

  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
LABEL_20:
  v77 = v1[55];
  v78 = v1[53];
  v79 = v1[50];
  v80 = v1[47];
  v81 = v1[44];
  v82 = v1[40];
  v83 = v1[41];
  v85 = v1[38];
  v84 = v1[39];
  v89 = v1[37];
  v91 = v1[36];
  v93 = v1[33];
  v96 = v1[30];
  v99 = v1[27];
  v102 = v1[26];
  v106 = v1[25];
  v109 = v1[24];
  swift_task_dealloc(v1[56]);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v102);
  swift_task_dealloc(v106);
  swift_task_dealloc(v109);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_100329FAC()
{
  uint64_t *v0;
  uint64_t **v1;

  v1 = (uint64_t **)swift_task_alloc(dword_1007B43C4);
  v0[60] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10032A02C;
  return sub_10021DDA8(v0[41], v0[21]);
}

uint64_t sub_10032A02C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 480);
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10032A9CC;
  else
    v4 = sub_10032A0DC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 456), 0);
}

uint64_t sub_10032A0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, unint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char **v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  __n128 v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  void (*v34)(const char *, const char *, uint64_t);
  unint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, const char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v60;
  NSURL *v61;
  void *v62;
  void *v63;
  unsigned int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  _BOOL4 v93;
  void *v94;
  uint8_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v2 = *(_QWORD *)(v1 + 256);
  v3 = *(_QWORD *)(v1 + 264);
  v4 = *(_QWORD *)(v1 + 248);
  v5 = SFAirDropReceive.Transfer.askRequest.getter(a1);
  v6 = SFAirDropReceive.AskRequest.files.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v1 + 232);
    v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v106 = v6;
    v109 = *(_QWORD *)(v8 + 72);
    v10 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain((const char *)v6);
    v11 = _swiftEmptyArrayStorage;
    do
    {
      v12 = *(_QWORD *)(v1 + 240);
      v13 = *(_QWORD *)(v1 + 224);
      v14 = v10(v12, v9, v13);
      v15 = SFAirDropReceive.AskRequest.ItemInfo.fileBomPath.getter(v14);
      v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v13);
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
        v11 = sub_100227A68(0, v11[2] + 1, 1, v11);
      v19 = v11[2];
      v18 = v11[3];
      if (v19 >= v18 >> 1)
        v11 = sub_100227A68((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
      v11[2] = v19 + 1;
      v20 = &v11[2 * v19];
      v20[4] = v15;
      v20[5] = v17;
      v9 += v109;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n(v106, 2);
    v22 = v11[2];
    if (v22)
      goto LABEL_9;
LABEL_20:
    v25 = (const char *)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v21 = swift_bridgeObjectRelease((const char *)v6).n128_u64[0];
  v11 = _swiftEmptyArrayStorage;
  v22 = _swiftEmptyArrayStorage[2];
  if (!v22)
    goto LABEL_20;
LABEL_9:
  v23 = *(_QWORD *)(v1 + 280);
  swift_bridgeObjectRetain((const char *)v11);
  v24 = (const char **)(v11 + 5);
  v25 = (const char *)_swiftEmptyArrayStorage;
  do
  {
    v26 = *(_QWORD *)(v1 + 272);
    v27 = *(_QWORD *)(v1 + 216);
    v28 = (uint64_t)*(v24 - 1);
    v29 = *v24;
    swift_bridgeObjectRetain(*v24);
    URL.init(string:)(v28, v29);
    v30 = swift_bridgeObjectRelease(v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v23 + 48))(v27, 1, v26, v30) == 1)
    {
      sub_10000D0F0(*(_QWORD *)(v1 + 216), (uint64_t *)&unk_1007B5200);
    }
    else
    {
      v32 = *(const char **)(v1 + 312);
      v31 = *(const char **)(v1 + 320);
      v33 = *(_QWORD *)(v1 + 272);
      v34 = *(void (**)(const char *, const char *, uint64_t))(v23 + 32);
      v34(v31, *(const char **)(v1 + 216), v33);
      v34(v32, v31, v33);
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        v25 = (const char *)sub_100227A54(0, *((_QWORD *)v25 + 2) + 1, 1, (unint64_t)v25);
      v36 = *((_QWORD *)v25 + 2);
      v35 = *((_QWORD *)v25 + 3);
      if (v36 >= v35 >> 1)
        v25 = (const char *)sub_100227A54(v35 > 1, v36 + 1, 1, (unint64_t)v25);
      v37 = *(const char **)(v1 + 312);
      v38 = *(_QWORD *)(v1 + 272);
      *((_QWORD *)v25 + 2) = v36 + 1;
      v34(&v25[((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v36], v37, v38);
    }
    v24 += 2;
    --v22;
  }
  while (v22);
  v21 = swift_bridgeObjectRelease((const char *)v11).n128_u64[0];
LABEL_21:
  v39 = *(_QWORD *)(v1 + 328);
  swift_bridgeObjectRelease((const char *)v11, *(double *)&v21);
  v40 = swift_task_alloc(32);
  *(_QWORD *)(v40 + 16) = v39;
  v41 = sub_100324310((void (*)(char *))sub_10032D484, v40, v25);
  swift_bridgeObjectRelease(v25);
  swift_task_dealloc(v40);
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v103 = type metadata accessor for Logger(0);
  sub_100221DF8(v103, (uint64_t)qword_1007BA738);
  v42 = swift_bridgeObjectRetain_n(v41, 2);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  v107 = v41;
  if (os_log_type_enabled(v43, v44))
  {
    v45 = *(_QWORD *)(v1 + 272);
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v111 = v47;
    *(_DWORD *)v46 = 136315138;
    swift_bridgeObjectRetain(v41);
    v48 = Array.description.getter(v41, v45);
    v50 = v49;
    swift_bridgeObjectRelease(v107);
    *(_QWORD *)(v1 + 152) = sub_100228BD8(v48, v50, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 152, v1 + 160, v46 + 4);
    v51 = (const char *)v50;
    v41 = v107;
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease_n(v107, 2);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Removing placeholder files %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v41, 2);
  }

  v52 = *((_QWORD *)v41 + 2);
  v53 = *(_QWORD *)(v1 + 280);
  if (v52)
  {
    v54 = &v41[(*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)];
    v55 = *(_QWORD *)(v53 + 72);
    v56 = *(void (**)(uint64_t, const char *, uint64_t))(v53 + 16);
    while (1)
    {
      v57 = *(_QWORD *)(v1 + 272);
      v58 = *(_QWORD *)(v1 + 208);
      v56(v58, v54, v57);
      v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
      v59(v58, 0, 1, v57);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v58, 1, v57) == 1)
        break;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v53 + 32))(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 272));
      v60 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      URL._bridgeToObjectiveC()(v61);
      v63 = v62;
      *(_QWORD *)(v1 + 144) = 0;
      v64 = objc_msgSend(v60, "removeItemAtURL:error:", v62, v1 + 144);

      v65 = *(void **)(v1 + 144);
      if (!v64)
      {
        v83 = *(_QWORD *)(v1 + 328);
        v84 = *(_QWORD *)(v1 + 304);
        v85 = *(_QWORD *)(v1 + 272);
        v86 = v65;
        swift_bridgeObjectRelease(v107);
        v87 = _convertNSErrorToError(_:)(v65);

        swift_willThrow(v88);
        v89 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v89(v84, v85);
        v89(v83, v85);
        if (qword_1007B3F10 != -1)
          swift_once(&qword_1007B3F10, sub_10032539C);
        sub_100221DF8(v103, (uint64_t)qword_1007BA738);
        swift_errorRetain(v87);
        v90 = swift_errorRetain(v87);
        v91 = Logger.logObject.getter(v90);
        v92 = static os_log_type_t.error.getter(v91);
        v93 = os_log_type_enabled(v91, v92);
        v94 = *(void **)(v1 + 464);
        if (v93)
        {
          v95 = (uint8_t *)swift_slowAlloc(12, -1);
          v96 = (uint64_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v95 = 138412290;
          swift_errorRetain(v87);
          v97 = _swift_stdlib_bridgeErrorToNSError(v87);
          *(_QWORD *)(v1 + 120) = v97;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 128, v95 + 4);
          *v96 = v97;
          swift_errorRelease(v87);
          swift_errorRelease(v87);
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "Remove URL failed with error %@", v95, 0xCu);
          v98 = sub_100008384(&qword_1007B4C30);
          swift_arrayDestroy(v96, 1, v98);
          swift_slowDealloc(v96, -1, -1);
          swift_slowDealloc(v95, -1, -1);

          swift_errorRelease(v87);
        }
        else
        {

          swift_errorRelease(v87);
          swift_errorRelease(v87);
          swift_errorRelease(v87);

        }
        goto LABEL_35;
      }
      v66 = *(_QWORD *)(v1 + 304);
      v67 = *(_QWORD *)(v1 + 272);
      v68 = v65;
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v66, v67);
      v54 += v55;
      if (!--v52)
        goto LABEL_33;
    }
  }
  else
  {
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
LABEL_33:
    v59(*(_QWORD *)(v1 + 208), 1, 1, *(_QWORD *)(v1 + 272));
  }
  v69 = *(void **)(v1 + 464);
  v70 = *(_QWORD *)(v1 + 328);
  v71 = *(_QWORD *)(v1 + 272);
  v72 = *(_QWORD *)(v1 + 280);
  swift_bridgeObjectRelease(v107);

  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
LABEL_35:
  v73 = *(_QWORD *)(v1 + 440);
  v74 = *(_QWORD *)(v1 + 424);
  v75 = *(_QWORD *)(v1 + 400);
  v76 = *(_QWORD *)(v1 + 376);
  v77 = *(_QWORD *)(v1 + 352);
  v78 = *(_QWORD *)(v1 + 320);
  v79 = *(_QWORD *)(v1 + 328);
  v81 = *(_QWORD *)(v1 + 304);
  v80 = *(_QWORD *)(v1 + 312);
  v99 = *(_QWORD *)(v1 + 296);
  v100 = *(_QWORD *)(v1 + 288);
  v101 = *(_QWORD *)(v1 + 264);
  v102 = *(_QWORD *)(v1 + 240);
  v104 = *(_QWORD *)(v1 + 216);
  v105 = *(_QWORD *)(v1 + 208);
  v108 = *(_QWORD *)(v1 + 200);
  v110 = *(_QWORD *)(v1 + 192);
  swift_task_dealloc(*(_QWORD *)(v1 + 448));
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  swift_task_dealloc(v108);
  swift_task_dealloc(v110);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10032A9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 488);
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v2 = type metadata accessor for Logger(0);
  sub_100221DF8(v2, (uint64_t)qword_1007BA738);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v27 = *(void **)(v0 + 464);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 120) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Remove URL failed with error %@", v6, 0xCu);
    v9 = sub_100008384(&qword_1007B4C30);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v10 = *(_QWORD *)(v0 + 440);
  v11 = *(_QWORD *)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 400);
  v13 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 352);
  v15 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032ACA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = URL.standardized.getter(v4);
  v8 = URL.absoluteString.getter(v7);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  URL.appendingPathComponent(_:)(v8, v10);
  swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
}

uint64_t sub_10032AD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  v8 = sub_100008384((uint64_t *)&unk_1007B5200);
  v7[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v7[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[10] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[11] = swift_task_alloc(v11);
  v7[12] = swift_task_alloc(v11);
  return swift_task_switch(sub_10032AE20, 0, 0);
}

uint64_t sub_10032AE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v24;

  v1 = *(_QWORD *)(v0 + 24);
  v24 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(v1 + 16);
  v4 = swift_bridgeObjectRetain((const char *)v1);
  v5 = *(_QWORD *)(v0 + 80);
  if (v2)
  {
    v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v6 = v3 + v22;
    v7 = *(_QWORD *)(v5 + 72);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
    v8 = _swiftEmptyArrayStorage;
    v21 = v7;
    while (1)
    {
      v10 = *(_QWORD *)(v0 + 64);
      v9 = *(_QWORD *)(v0 + 72);
      v23(v10, v6, v9, v4);
      v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
      v11(v10, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v9) == 1)
        break;
      v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32);
      v13 = v12(*(char **)(v0 + 96), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
      if ((URL.isFileURL.getter(v13) & 1) != 0)
      {
        v12(*(char **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        {
          sub_100229810(0, v8[2] + 1, 1);
          v8 = v24;
        }
        v15 = v8[2];
        v14 = v8[3];
        if (v15 >= v14 >> 1)
        {
          sub_100229810(v14 > 1, v15 + 1, 1);
          v8 = v24;
        }
        v16 = *(_QWORD *)(v0 + 88);
        v17 = *(_QWORD *)(v0 + 72);
        v8[2] = v15 + 1;
        v18 = (char *)v8 + v22 + v15 * v21;
        v7 = v21;
        v12(v18, v16, v17);
        v24 = v8;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      }
      v6 += v7;
      if (!--v2)
        goto LABEL_13;
    }
  }
  else
  {
    v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56);
    v8 = _swiftEmptyArrayStorage;
LABEL_13:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v11)(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 72), v4);
  }
  *(_QWORD *)(v0 + 104) = v8;
  v19 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease(*(const char **)(v0 + 24));
  sub_10000D0F0(v19, (uint64_t *)&unk_1007B5200);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10032B048, static AirDropActor.shared, 0);
}

uint64_t sub_10032B048()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_1003312A8(*(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 112) = v1;
  *(_DWORD *)(v0 + 144) = v2;
  return swift_task_switch(sub_10032B08C, 0, 0);
}

uint64_t sub_10032B08C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;

  v1 = *(_DWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v10 = *(_OWORD *)(v0 + 32);
  v6 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 120) = v6;
  *(_OWORD *)(v6 + 16) = v10;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v3;
  *(_QWORD *)(v6 + 48) = v2;
  *(_BYTE *)(v6 + 56) = v1 & 1;
  *(_BYTE *)(v6 + 57) = BYTE1(v1) & 1;
  *(_BYTE *)(v6 + 58) = BYTE2(v1) & 1;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v7;
  v8 = sub_100008384(&qword_1007BA898);
  *v7 = v0;
  v7[1] = sub_10032B180;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000023, 0x8000000100616350, sub_10033142C, v6, v8);
}

uint64_t sub_10032B180()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10032B254;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 120);
    swift_release(*(_QWORD *)(v2 + 104));
    swift_task_dealloc(v5);
    v4 = sub_10032B1F8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10032B1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);

  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032B254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 104));

  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10032B2C8(objc_class *a1, id a2, void *a3, const char *a4, const char *a5, uint64_t a6, int a7, int a8, unsigned __int8 a9, const char *a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  uint64_t v43;
  double v44;
  Class v45;
  void *v46;
  id v47;
  Class isa;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  NSString v58;
  const char *v59;
  uint64_t v60;
  uint64_t aBlock;
  const char *v62[4];
  uint64_t v63;

  v55 = a7;
  v56 = a8;
  v57 = a6;
  v58 = a3;
  v59 = a5;
  v54 = sub_100008384(&qword_1007BA8A0);
  v52 = *(_QWORD *)(v54 - 8);
  v13 = *(_QWORD *)(v52 + 64);
  __chkstk_darwin(v54);
  v53 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v51 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v51 + 64);
  v16 = __chkstk_darwin(v14);
  v50 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - v17;
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v19 = type metadata accessor for Logger(0);
  sub_100221DF8(v19, (uint64_t)qword_1007BA738);
  sub_10022E534((uint64_t)a2, (uint64_t)v18);
  v20 = swift_bridgeObjectRetain_n(a4, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v47 = a2;
    isa = a1;
    v49 = v13;
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v60 = v24;
    *(_DWORD *)v23 = 136315394;
    sub_1002B0AF0();
    v26 = (const char *)v25;
    aBlock = sub_100228BD8(v27, v25, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62, v23 + 4);
    swift_bridgeObjectRelease(v26);
    sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_WORD *)(v23 + 12) = 2080;
    v28 = (uint64_t)v58;
    v29 = a4;
    if (!a4)
    {
      aBlock = 0;
      v62[0] = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v62[0]);
      v29 = (const char *)0x8000000100612DF0;
      v28 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain(a4);
    aBlock = sub_100228BD8(v28, (unint64_t)v29, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62, v23 + 14);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Converting media items for endpoint %s from requestSource %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    a1 = isa;
    v13 = v49;
    a2 = v47;
  }
  else
  {
    sub_1002443C8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);

    swift_bridgeObjectRelease_n(a4, 2);
  }
  LODWORD(v49) = a9;
  type metadata accessor for URL(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  if (a4)
    v58 = String._bridgeToObjectiveC()();
  else
    v58 = 0;
  v47 = (id)objc_opt_self(SDAirDropLegacyHelper);
  v30 = v50;
  sub_10022E534((uint64_t)a2, v50);
  v32 = v52;
  v31 = v53;
  v33 = v54;
  (*(void (**)(char *, objc_class *, uint64_t))(v52 + 16))(v53, a1, v54);
  v34 = *(unsigned __int8 *)(v51 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = (v15 + v36 + v35) & ~v36;
  v38 = (v13 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_1007227E0, v39 + 8, v34 | v36 | 7);
  sub_100221DB4(v30, v40 + v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v40 + v37, v31, v33);
  v41 = v59;
  *(_QWORD *)(v40 + v38) = v59;
  *(_QWORD *)(v40 + v39) = a10;
  v62[3] = (const char *)sub_1003316D0;
  v63 = v40;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v62[0] = (const char *)1107296256;
  v62[1] = (const char *)sub_10032CAAC;
  v62[2] = (const char *)&unk_1007227F8;
  v42 = _Block_copy(&aBlock);
  v43 = v63;
  *(_QWORD *)&v44 = swift_bridgeObjectRetain(v41).n128_u64[0];
  swift_bridgeObjectRetain(a10, v44);
  swift_release(v43);
  v45 = isa;
  v46 = v58;
  objc_msgSend(v47, "convertMediaItemsWithFileURLs:clientBundleID:mediaCapabilities:supportsLivePhoto:supportsAssetBundles:supportsWideGamut:completionHandler:", isa, v58, v57, v55 & 1, v56 & 1, v49 & 1, v42);
  _Block_release(v42);

}

uint64_t sub_10032B784(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, const char *a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  uint8_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  uint64_t i;
  __n128 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint8_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  uint64_t j;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  const char *v115;
  uint64_t v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  const char *v122;
  const char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  const char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char v144[24];
  uint64_t v145;
  _QWORD v146[2];
  uint64_t v147[4];
  const char *v148[2];

  v133 = a6;
  v142 = a5;
  v135 = a3;
  v136 = a4;
  v134 = (uint64_t)a1;
  v137 = type metadata accessor for Logger(0);
  v132 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFSecurityScopedURL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v126 - v18;
  v20 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v21 = __chkstk_darwin(v20);
  v22 = __chkstk_darwin(v21);
  v23 = __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  v28 = (char *)&v126 - v27;
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1007B3F10 != -1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    sub_100221DF8(v137, (uint64_t)qword_1007BA738);
    sub_10022E534(v135, (uint64_t)v28);
    swift_errorRetain(a2);
    v29 = swift_errorRetain(a2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(22, -1);
      v33 = (uint64_t *)swift_slowAlloc(8, -1);
      v143 = swift_slowAlloc(32, -1);
      v147[0] = v143;
      *(_DWORD *)v32 = 136315394;
      sub_1002B0AF0();
      v35 = (const char *)v34;
      v145 = sub_100228BD8(v36, v34, v147);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v32 + 4);
      swift_bridgeObjectRelease(v35);
      sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
      *(_WORD *)(v32 + 12) = 2112;
      swift_errorRetain(a2);
      v37 = _swift_stdlib_bridgeErrorToNSError(a2);
      v145 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v32 + 14);
      *v33 = v37;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Conversion of media items for endpoint %s failed: %@", (uint8_t *)v32, 0x16u);
      v38 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v33, 1, v38);
      swift_slowDealloc(v33, -1, -1);
      v39 = v143;
      swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      sub_1002443C8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v147[0] = a2;
    v56 = sub_100008384(&qword_1007BA8A0);
    return CheckedContinuation.resume(throwing:)(v147, v56);
  }
  v40 = v142;
  v143 = (uint64_t)v17;
  v139 = v14;
  v140 = v10;
  v141 = v13;
  v131 = v8;
  v41 = (const char *)v134;
  if (!v134)
  {
    v44 = v26;
    if (qword_1007B3F10 == -1)
    {
LABEL_17:
      sub_100221DF8(v137, (uint64_t)qword_1007BA738);
      v58 = sub_10022E534(v135, v44);
      v59 = Logger.logObject.getter(v58);
      v60 = static os_log_type_t.error.getter(v59);
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc(12, -1);
        v62 = swift_slowAlloc(32, -1);
        v147[0] = v62;
        *(_DWORD *)v61 = 136315138;
        sub_1002B0AF0();
        v64 = (const char *)v63;
        v145 = sub_100228BD8(v65, v63, v147);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v61 + 4);
        swift_bridgeObjectRelease(v64);
        sub_1002443C8(v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "Conversion of media items for endpoint %s failed", v61, 0xCu);
        swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v61, -1, -1);
      }
      else
      {
        sub_1002443C8(v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      v66 = type metadata accessor for SFAirDropSend.Failure(0);
      v67 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      v68 = swift_allocError(v66, v67, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v69, enum case for SFAirDropSend.Failure.badRequest(_:), v66);
      v147[0] = v68;
      v56 = sub_100008384(&qword_1007BA8A0);
      return CheckedContinuation.resume(throwing:)(v147, v56);
    }
LABEL_61:
    swift_once(&qword_1007B3F10, sub_10032539C);
    goto LABEL_17;
  }
  v42 = v25;
  v130 = v24;
  v148[0] = (const char *)sub_10021F548((uint64_t)_swiftEmptyArrayStorage);
  sub_1003246A4((uint64_t)v41, v148);
  v44 = v43;
  v45 = v141;
  if (!*(_QWORD *)(v43 + 16) && v40[2])
  {
    if (qword_1007B3F10 != -1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    sub_100221DF8(v137, (uint64_t)qword_1007BA738);
    v46 = v42;
    v47 = sub_10022E534(v135, v42);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v142 = (_QWORD *)swift_slowAlloc(32, -1);
      v147[0] = (uint64_t)v142;
      v128 = v44;
      v138 = v50;
      *(_DWORD *)v50 = 136315138;
      v127 = v50 + 4;
      sub_1002B0AF0();
      v52 = (const char *)v51;
      v145 = sub_100228BD8(v53, v51, v147);
      v44 = v128;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v127);
      swift_bridgeObjectRelease(v52);
      sub_1002443C8(v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v54 = v138;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Conversion of media items for endpoint %s returned no results, falling back to initial URLs", v138, 0xCu);
      v55 = v142;
      swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      sub_1002443C8(v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    memset(v147, 0, 24);
    v70 = sub_100008384(&qword_1007BA8A0);
    CheckedContinuation.resume(returning:)(v147, v70);
  }
  v147[0] = (uint64_t)_swiftEmptyArrayStorage;
  v71 = *((_QWORD *)v133 + 2);
  v73 = swift_bridgeObjectRetain(v133);
  if (v71)
  {
    v128 = v44;
    v75 = v139;
    v74 = v140;
    v76 = *(_QWORD *)(v139 + 72);
    v138 = (uint8_t *)((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
    v77 = &v138[(_QWORD)v72];
    v142 = *(_QWORD **)(v139 + 16);
    for (i = ((uint64_t (*)(char *, uint8_t *, uint64_t, __n128))v142)(v19, &v138[(_QWORD)v72], v45, v73);
          ;
          i = ((uint64_t (*)(char *, uint8_t *, uint64_t, __n128))v142)(v19, v77, v45, v79))
    {
      v80 = SFSecurityScopedURL.url.getter(i);
      v81 = URL.isFileURL.getter(v80);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v12, v9);
      if ((v81 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v45);
      }
      else
      {
        v82 = v75;
        v83 = v9;
        v84 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 32);
        v84(v143, v19, v45);
        v85 = v147[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v147[0]) & 1) == 0)
        {
          sub_100229A44(0, *(_QWORD *)(v85 + 16) + 1, 1);
          v85 = v147[0];
        }
        v87 = *(_QWORD *)(v85 + 16);
        v86 = *(_QWORD *)(v85 + 24);
        if (v87 >= v86 >> 1)
        {
          sub_100229A44(v86 > 1, v87 + 1, 1);
          v85 = v147[0];
        }
        *(_QWORD *)(v85 + 16) = v87 + 1;
        v88 = &v138[v85 + v87 * v76];
        v45 = v141;
        v84((uint64_t)v88, (char *)v143, v141);
        v147[0] = v85;
        v9 = v83;
        v75 = v139;
        v74 = v140;
      }
      v77 += v76;
      if (!--v71)
        break;
    }
    v89 = (_QWORD *)v147[0];
    v44 = v128;
    swift_bridgeObjectRelease(v133);
  }
  else
  {
    v89 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v72);
  }
  v147[0] = (uint64_t)v89;
  sub_100343504(v44);
  v90 = v147[0];
  v147[0] = (uint64_t)_swiftEmptyArrayStorage;
  v91 = v134;
  v92 = v137;
  v129 = v9;
  v143 = v90;
  if ((unint64_t)v134 >> 62)
  {
    if (v134 >= 0)
      v104 = v134 & 0xFFFFFFFFFFFFFF8;
    else
      v104 = v134;
    swift_bridgeObjectRetain((const char *)v134);
    v93 = _CocoaArrayWrapper.endIndex.getter(v104);
    if (v93)
      goto LABEL_38;
  }
  else
  {
    v93 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)&v94 = swift_bridgeObjectRetain((const char *)v134).n128_u64[0];
    if (v93)
    {
LABEL_38:
      if (v93 >= 1)
      {
        for (j = 0; j != v93; ++j)
        {
          if ((v91 & 0xC000000000000001) != 0)
            v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v91);
          else
            v97 = *(id *)(v91 + 8 * j + 32);
          v98 = v97;
          v99 = objc_msgSend(v97, "conversionDestination");

          if (v99)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
            v102 = *(_QWORD *)((v147[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v101 = *(_QWORD *)((v147[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v102 >= v101 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
            v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v99);
            specialized Array._endMutation()(v96);
          }
        }
        swift_bridgeObjectRelease((const char *)v91);
        v103 = (_QWORD *)v147[0];
        v92 = v137;
        goto LABEL_54;
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease((const char *)v91, v94);
  v103 = _swiftEmptyArrayStorage;
LABEL_54:
  v105 = v132;
  v106 = v131;
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v107 = sub_100221DF8(v92, (uint64_t)qword_1007BA738);
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v106, v107, v92);
  v108 = v130;
  v109 = sub_10022E534(v135, v130);
  v110 = Logger.logObject.getter(v109);
  v111 = static os_log_type_t.default.getter(v110);
  if (os_log_type_enabled(v110, v111))
  {
    v112 = swift_slowAlloc(22, -1);
    v113 = swift_slowAlloc(64, -1);
    v147[0] = v113;
    *(_DWORD *)v112 = 136315394;
    v142 = v103;
    sub_1002B26F0();
    v115 = (const char *)v114;
    v145 = sub_100228BD8(v116, v114, v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v112 + 4);
    swift_bridgeObjectRelease(v115);
    sub_1002443C8(v108, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_WORD *)(v112 + 12) = 2080;
    swift_beginAccess(v148, v144, 0, 0);
    v117 = v148[0];
    v118 = v105;
    v119 = sub_100220D78(&qword_1007B5528, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    swift_bridgeObjectRetain(v117);
    v121 = Dictionary.description.getter(v120, v129, &type metadata for Bool, v119);
    v123 = v122;
    swift_bridgeObjectRelease(v117);
    v145 = sub_100228BD8(v121, (unint64_t)v123, v147);
    v103 = v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146, v112 + 14);
    swift_bridgeObjectRelease(v123);
    _os_log_impl((void *)&_mh_execute_header, v110, v111, "Conversion of media items for endpoint %s returned map of conversion needed: %s", (uint8_t *)v112, 0x16u);
    swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1, -1);
    swift_slowDealloc(v112, -1, -1);

    (*(void (**)(char *, uint64_t))(v118 + 8))(v131, v137);
  }
  else
  {
    sub_1002443C8(v108, type metadata accessor for SDAirDropDiscoveredEndpoint);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v92);
  }
  v124 = v143;
  swift_beginAccess(v148, v147, 0, 0);
  v145 = v124;
  v146[0] = v148[0];
  v146[1] = v103;
  v125 = sub_100008384(&qword_1007BA8A0);
  return CheckedContinuation.resume(returning:)(&v145, v125);
}

uint64_t sub_10032C4B8@<X0>(void **a1@<X0>, const char **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  void *v31;
  char v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  const char *v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  const char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;

  v67 = a3;
  v5 = sub_100008384(&qword_1007BA758);
  __chkstk_darwin(v5);
  v65 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v64 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v62 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v62 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v62 - v21;
  __chkstk_darwin(v20);
  v66 = (char *)&v62 - v23;
  v24 = *a1;
  v25 = objc_msgSend(v24, "url");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  v26 = v25;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v27(v9, v22, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_10000D0F0((uint64_t)v9, (uint64_t *)&unk_1007B5200);
    v33 = type metadata accessor for SFSecurityScopedURL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v67, 1, 1, v33);
  }
  v28 = v66;
  v27(v66, v9, v10);
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v29(v19, v28, v10);
  v30 = objc_msgSend(v24, "conversionNeeded");
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, "BOOLValue");

  }
  else
  {
    v32 = 0;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
  v71 = *a2;
  *a2 = (const char *)0x8000000000000000;
  sub_10046CB78(v32, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
  v36 = *a2;
  *a2 = v71;
  v37 = swift_bridgeObjectRelease(v36);
  v38 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v38(v19, v10, v37);
  v39 = v66;
  v29(v16, v66, v10);
  v40 = (uint64_t)v65;
  v41 = v68;
  SFSecurityScopedURL.init(_:readWrite:)(v16, 0);
  if (v41)
  {
    if (qword_1007B3F10 != -1)
      swift_once(&qword_1007B3F10, sub_10032539C);
    v42 = type metadata accessor for Logger(0);
    sub_100221DF8(v42, (uint64_t)qword_1007BA738);
    v43 = v64;
    v29(v64, v39, v10);
    swift_errorRetain(v41);
    v44 = swift_errorRetain(v41);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc(22, -1);
      v68 = v41;
      v48 = v47;
      v63 = (uint64_t *)swift_slowAlloc(8, -1);
      v65 = (char *)swift_slowAlloc(32, -1);
      v71 = v65;
      *(_DWORD *)v48 = 136315394;
      v49 = sub_100220D78((unint64_t *)&qword_1007B5518, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v50 = dispatch thunk of CustomStringConvertible.description.getter(v10, v49);
      v52 = (const char *)v51;
      v69 = sub_100228BD8(v50, v51, (uint64_t *)&v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v48 + 4);
      v53 = swift_bridgeObjectRelease(v52);
      v38(v43, v10, v53);
      *(_WORD *)(v48 + 12) = 2112;
      v54 = v68;
      swift_errorRetain(v68);
      v55 = _swift_stdlib_bridgeErrorToNSError(v54);
      v69 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v48 + 14);
      v56 = v63;
      *v63 = v55;
      swift_errorRelease(v54);
      swift_errorRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to get security scoped URL for URL: %s. Error: %@", (uint8_t *)v48, 0x16u);
      v57 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v56, 1, v57);
      swift_slowDealloc(v56, -1, -1);
      v58 = v65;
      swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      swift_errorRelease(v54);
      v59 = v66;
    }
    else
    {

      swift_errorRelease(v41);
      swift_errorRelease(v41);
      ((void (*)(char *, uint64_t))v38)(v43, v10);
      swift_errorRelease(v41);
      v59 = v39;
    }
    ((void (*)(char *, uint64_t))v38)(v59, v10);
    v61 = type metadata accessor for SFSecurityScopedURL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v67, 1, 1, v61);
  }
  else
  {
    ((void (*)(char *, uint64_t))v38)(v39, v10);
    v60 = type metadata accessor for SFSecurityScopedURL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v40, 0, 1, v60);
    return sub_10022E718(v40, v67, &qword_1007BA758);
  }
}

__n128 sub_10032CAAC(uint64_t a1, const char *a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  void (*v6)(const char *, void *);
  uint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(const char *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100221EDC(0, &qword_1007BA8A8, off_100711288);
    v4 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

id sub_10032CB38@<X0>(NSURL *a1@<X8>)
{
  void *v1;
  void *v2;
  id v3;

  URL._bridgeToObjectiveC()(a1);
  v2 = v1;
  v3 = objc_msgSend(v1, "isiWorkDocument");

  return v3;
}

__n128 Sequence<>.markAllRecent()(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 result;
  uint64_t v38;
  char *v39;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v41;
  __int128 v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;

  v4 = sub_100008384((uint64_t *)&unk_1007C5E60);
  __chkstk_darwin(v4);
  v78 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SFSandboxTokenURLPair(0);
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  v7 = __chkstk_darwin(v6);
  v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v69 = (char *)&v67 - v10;
  __chkstk_darwin(v9);
  v68 = (char *)&v67 - v11;
  v12 = sub_100008384(&qword_1007BA758);
  __chkstk_darwin(v12);
  v87 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SFSecurityScopedURL(0);
  v88 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  __chkstk_darwin(v14);
  v73 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v71 = *(_QWORD **)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v83 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v86 = (char *)&v67 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v67 - v21;
  v23 = sub_100008384((uint64_t *)&unk_1007B5200);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v24);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = a2;
  v85 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2);
  v72 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v31 = (char *)&v67 - v30;
  v32 = type metadata accessor for SFPlatform(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v67 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter(v34);
  LOBYTE(a2) = static SFPlatform.isPlatform(_:)(v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
  if ((a2 & 1) != 0)
  {
    v38 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v28, v82, v85);
    v39 = v84;
    dispatch thunk of Sequence.makeIterator()(v38);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v39, v38, AssociatedTypeWitness, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
    v84 = v31;
    v85 = AssociatedTypeWitness;
    v82 = AssociatedConformanceWitness;
    dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
    v41 = v71;
    v81 = v71[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v26, 1, v16) == 1)
    {
      v43 = _swiftEmptyArrayStorage;
    }
    else
    {
      v79 = (void (*)(char *, char *, uint64_t))v41[4];
      v43 = _swiftEmptyArrayStorage;
      *(_QWORD *)&v42 = 136315138;
      v75 = v42;
      v74 = (char *)&type metadata for Any + 8;
      v44 = v78;
      v46 = v88;
      v45 = v89;
      v80 = v26;
      do
      {
        v71 = v43;
        v79(v22, v26, v16);
        v47 = v41;
        v48 = v86;
        ((void (*)(char *, char *, uint64_t))v41[2])(v86, v22, v16);
        v49 = v87;
        SFSecurityScopedURL.init(_:readWrite:)(v48, 0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v45);
        v50 = v73;
        (*(void (**)(void))(v46 + 32))();
        static SFSecurityScopedURL.consumeSandboxToken(item:)(v50);
        v52 = v76;
        v51 = v77;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v77);
        v53 = v68;
        v67 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
        v67(v68, v44, v51);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v69, v53, v51);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v71);
        v26 = v80;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v71 = (_QWORD *)sub_1002280C0(0, v71[2] + 1, 1, (unint64_t)v71);
        v56 = v71[2];
        v55 = v71[3];
        if (v56 >= v55 >> 1)
          v71 = (_QWORD *)sub_1002280C0(v55 > 1, v56 + 1, 1, (unint64_t)v71);
        v57 = (char *)v71;
        v71[2] = v56 + 1;
        v59 = v76;
        v58 = v77;
        v67(&v57[((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v76 + 72) * v56], v69, v77);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v68, v58);
        v41 = v47;
        v43 = v57;
        ((void (*)(char *, uint64_t))v41[1])(v22, v16);
        v46 = v88;
        v45 = v89;
        (*(void (**)(char *, uint64_t))(v88 + 8))(v73, v89);
        dispatch thunk of IteratorProtocol.next()(v85, v82);
      }
      while (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v26, 1, v16) != 1);
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v84, v85);
    v60 = v43[2];
    if (v60)
    {
      v61 = v76;
      v62 = (char *)v43 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      v63 = *(_QWORD *)(v76 + 72);
      v64 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
      swift_bridgeObjectRetain((const char *)v43);
      v65 = v77;
      v66 = v70;
      do
      {
        v64(v66, v62, v65);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v66, v65);
        v62 += v63;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease_n(v43, 2);
    }
    else
    {
      return swift_bridgeObjectRelease((const char *)v43);
    }
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerUtilities()
{
  return objc_opt_self(_TtC16DaemoniOSLibrary32SDAirDropContentHandlerUtilities);
}

uint64_t sub_10032D484@<X0>(uint64_t a1@<X8>)
{
  return sub_10032ACA8(a1);
}

void sub_10032D49C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  double v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  const char *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  const char *v43;
  uint64_t v44;
  char v45;
  NSString v46;
  id v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  Swift::String v54;
  Swift::String v55;
  double v56;
  Swift::String v57;
  Swift::String v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  double v68;
  __int128 v69;
  char v70[56];
  uint64_t v71;
  unint64_t v72;
  char v73[56];

  v3 = type metadata accessor for SFPlatform(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v7 = sub_100008384(&qword_1007BA800);
  v8 = __chkstk_darwin(v7);
  v10 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v11 = SFAirDropReceive.AskRequest.files.getter(v8);
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease((const char *)v11);
  if (v12 != 1)
    goto LABEL_7;
  v14 = SFAirDropReceive.AskRequest.files.getter(v13);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (v15)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v10, v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, v18, 1, v16);
  swift_bridgeObjectRelease((const char *)v14);
  type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16);
  if ((_DWORD)v19 == 1)
  {
    sub_10000D0F0((uint64_t)v10, &qword_1007BA800);
LABEL_7:
    v20 = sub_100008384(&qword_1007B7600);
    inited = swift_initStackObject(v20, v73);
    v69 = xmmword_1005CD2A0;
    *(_OWORD *)(inited + 16) = xmmword_1005CD2A0;
    *(_QWORD *)(inited + 32) = 0x5F434952454E4547;
    v22 = inited + 32;
    *(_QWORD *)(inited + 40) = 0xEC000000454C4946;
    *(_QWORD *)(inited + 48) = v12;
    v71 = 0x545F4E5245444F4DLL;
    v72 = 0xEF524546534E4152;
    *(_QWORD *)&v23 = swift_bridgeObjectRetain((const char *)0xEC000000454C4946).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v23);
    v24._countAndFlagsBits = 95;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    v25._countAndFlagsBits = 0x5F434952454E4547;
    v25._object = (void *)0xEC000000454C4946;
    String.append(_:)(v25);
    swift_bridgeObjectRelease((const char *)0xEC000000454C4946);
    if (v12 > 1)
    {
      v26._countAndFlagsBits = 0x4C4152554C505FLL;
      v26._object = (void *)0xE700000000000000;
      String.append(_:)(v26);
    }
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v27._countAndFlagsBits = 0x4C4154495041435FLL;
      v27._object = (void *)0xEC00000044455A49;
      String.append(_:)(v27);
    }
    v28._countAndFlagsBits = 0x545845545FLL;
    v28._object = (void *)0xE500000000000000;
    String.append(_:)(v28);
    v29 = (const char *)v72;
    swift_setDeallocating(inited);
    v30 = *(_QWORD *)(inited + 16);
    v31 = sub_100008384(&qword_1007B7608);
    swift_arrayDestroy(v22, v30, v31);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v34 = (id)SFLocalizedStringForKey(v32, v33);

    if (v34)
    {
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      v38 = sub_100008384((uint64_t *)&unk_1007B86C0);
      v39 = swift_allocObject(v38, 72, 7);
      *(_OWORD *)(v39 + 16) = v69;
      *(_QWORD *)(v39 + 56) = &type metadata for Int;
      *(_QWORD *)(v39 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v39 + 32) = v12;
      v40 = v35;
LABEL_20:
      static String.localizedStringWithFormat(_:_:)(v40, v37, v39);
      *(_QWORD *)&v68 = swift_bridgeObjectRelease(v37).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v39, v68);
      return;
    }
    __break(1u);
    goto LABEL_22;
  }
  v41 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v19);
  v43 = v42;
  v44 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v16);
  static SFPlatform.macOS.getter(v44);
  v45 = static SFPlatform.isPlatform(_:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v45 & 1) == 0)
  {
    v46 = String._bridgeToObjectiveC()();
    v47 = (id)SFTruncateAirDropFilenameForUI();

    if (v47)
    {
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v49 = v48;
      swift_bridgeObjectRelease(v43);

      v43 = v49;
    }
  }
  v50 = sub_100008384(&qword_1007B7600);
  v51 = swift_initStackObject(v50, v70);
  *(_QWORD *)(v51 + 32) = 0xD000000000000017;
  v52 = v51 + 32;
  v69 = xmmword_1005CD2A0;
  *(_OWORD *)(v51 + 16) = xmmword_1005CD2A0;
  *(_QWORD *)(v51 + 40) = 0x8000000100616240;
  *(_QWORD *)(v51 + 48) = 1;
  v71 = 0x545F4E5245444F4DLL;
  v72 = 0xEF524546534E4152;
  *(_QWORD *)&v53 = swift_bridgeObjectRetain((const char *)0x8000000100616240).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v51, v53);
  v54._countAndFlagsBits = 95;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  v55._countAndFlagsBits = 0xD000000000000017;
  v55._object = (void *)0x8000000100616240;
  String.append(_:)(v55);
  *(_QWORD *)&v56 = swift_bridgeObjectRelease((const char *)v51).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0x8000000100616240, v56);
  if ((a2 & 1) != 0)
  {
    v57._countAndFlagsBits = 0x4C4154495041435FLL;
    v57._object = (void *)0xEC00000044455A49;
    String.append(_:)(v57);
  }
  v58._countAndFlagsBits = 0x545845545FLL;
  v58._object = (void *)0xE500000000000000;
  String.append(_:)(v58);
  v59 = (const char *)v72;
  swift_setDeallocating(v51);
  v60 = *(_QWORD *)(v51 + 16);
  v61 = sub_100008384(&qword_1007B7608);
  swift_arrayDestroy(v52, v60, v61);
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  v64 = (id)SFLocalizedStringForKey(v62, v63);

  if (v64)
  {
    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v37 = v66;

    v67 = sub_100008384((uint64_t *)&unk_1007B86C0);
    v39 = swift_allocObject(v67, 72, 7);
    *(_OWORD *)(v39 + 16) = v69;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = sub_100299AB0();
    *(_QWORD *)(v39 + 32) = v41;
    *(_QWORD *)(v39 + 40) = v43;
    v40 = v65;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
}

_QWORD *sub_10032DA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  __int128 v7;
  id v8;
  const char *v9;
  id v10;
  id v11;
  const char *v12;
  Class v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  const char *v17;
  const char *v18;
  NSString v19;
  NSString v20;
  double v21;
  id v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  NSString v26;
  char **v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  double v35;
  uint64_t i;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  const char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  Class isa;
  double v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  double v71;
  uint64_t j;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  const char *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  double v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  id v107;
  const char *v108;
  Class v109;
  id v110;
  uint64_t v111;
  const char *v112;
  const char *v113;
  double v114;
  id v115;
  id v116;
  const char *v117;
  _QWORD *v118;
  __int128 v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  id v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  const char *v134;

  v0 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = objc_msgSend(objc_allocWithZone((Class)NSMutableOrderedSet), "init");
  v4 = SFAirDropReceive.AskRequest.files.getter(v131);
  v128 = *(_QWORD *)(v4 + 16);
  if (!v128)
  {
LABEL_64:
    swift_bridgeObjectRelease((const char *)v4);
    if (qword_1007B3F10 != -1)
      goto LABEL_75;
    goto LABEL_65;
  }
  v5 = (void *)objc_opt_self(LSDocumentProxy);
  v6 = 0;
  v122 = 0;
  v126 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v127 = v5;
  *(_QWORD *)&v7 = 138412290;
  v120 = v7;
  v121 = (char *)&type metadata for Any + 8;
  v124 = v1;
  v125 = v0;
  v123 = v4;
  while (v6 < *(_QWORD *)(v4 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v126 + *(_QWORD *)(v1 + 72) * v6, v0);
    v130 = objc_msgSend(objc_allocWithZone((Class)NSMutableOrderedSet), "init");
    v14 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v130);
    v16 = v15;
    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v14);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v20 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v18).n128_u64[0];
    v22 = objc_msgSend(v127, "documentProxyForName:type:MIMEType:", v19, v20, 0, v21);

    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v23);
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    LOBYTE(v25) = SFIsCoreType(v26);

    v129 = v22;
    if ((v25 & 1) != 0)
      goto LABEL_7;
    v133 = 0;
    v28 = objc_msgSend(v22, "availableClaimBindingsForMode:error:", 1, &v133);
    v29 = (id)v133;
    if (!v28)
    {
      v46 = (id)v133;
      v47 = _convertNSErrorToError(_:)(v29);

      swift_willThrow(v48);
      if (qword_1007B3F10 != -1)
        swift_once(&qword_1007B3F10, sub_10032539C);
      v122 = 0;
      v49 = type metadata accessor for Logger(0);
      sub_100221DF8(v49, (uint64_t)qword_1007BA738);
      swift_errorRetain(v47);
      v50 = swift_errorRetain(v47);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.error.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc(12, -1);
        v54 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v53 = v120;
        swift_errorRetain(v47);
        v55 = _swift_stdlib_bridgeErrorToNSError(v47);
        *(_QWORD *)(v53 + 4) = v55;
        *v54 = v55;
        swift_errorRelease(v47);
        swift_errorRelease(v47);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to get airdrop available applications for opening: %@", (uint8_t *)v53, 0xCu);
        v56 = sub_100008384(&qword_1007B4C30);
        swift_arrayDestroy(v54, 1, v56);
        swift_slowDealloc(v54, -1, -1);
        swift_slowDealloc(v53, -1, -1);

        swift_errorRelease(v47);
      }
      else
      {
        swift_errorRelease(v47);
        swift_errorRelease(v47);
        swift_errorRelease(v47);

      }
LABEL_7:
      v27 = &selRef_sessionSendEvent_session_;
      goto LABEL_29;
    }
    v30 = v28;
    v31 = sub_100221EDC(0, &qword_1007BA878, LSClaimBinding_ptr);
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);
    v33 = v29;

    v133 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v32 >> 62)
    {
      if (v32 < 0)
        v99 = v32;
      else
        v99 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain((const char *)v32, v120, v121, v122);
      v34 = _CocoaArrayWrapper.endIndex.getter(v99);
    }
    else
    {
      v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)&v35 = swift_bridgeObjectRetain((const char *)v32).n128_u64[0];
    }
    if (v34)
    {
      if (v34 < 1)
        goto LABEL_73;
      for (i = 0; i != v34; ++i)
      {
        if ((v32 & 0xC000000000000001) != 0)
          v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v32);
        else
          v38 = *(id *)(v32 + 8 * i + 32);
        v39 = v38;
        v40 = objc_msgSend(v38, "bundleRecord", (_QWORD)v120);

        if (v40)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
          v43 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v42 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v43 >= v42 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
          v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v40);
          specialized Array._endMutation()(v37);
        }
      }
      v44 = swift_bridgeObjectRelease((const char *)v32).n128_u64[0];
      v45 = (const char *)v133;
    }
    else
    {
      v44 = swift_bridgeObjectRelease((const char *)v32, v35).n128_u64[0];
      v45 = (const char *)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease((const char *)v32, *(double *)&v44, (_QWORD)v120);
    v57 = (const char *)sub_10038D780((uint64_t)v45);
    swift_bridgeObjectRelease(v45);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    objc_msgSend(v130, "addObjectsFromArray:", isa, v59);

    v27 = &selRef_sessionSendEvent_session_;
LABEL_29:
    v60 = objc_msgSend(v130, v27[9], (_QWORD)v120);
    v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v60, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

    v62 = *(_QWORD *)(v61 + 16);
    *(_QWORD *)&v63 = swift_bridgeObjectRelease((const char *)v61).n128_u64[0];
    if (!v62)
    {
      v133 = 0;
      v64 = objc_msgSend(v129, "availableClaimBindingsReturningError:", &v133, v63);
      v65 = (id)v133;
      if (v64)
      {
        v66 = v64;
        v67 = sub_100221EDC(0, &qword_1007BA878, LSClaimBinding_ptr);
        v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);
        v69 = v65;

        v133 = (uint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)v68 >> 62)
        {
          if (v68 < 0)
            v100 = v68;
          else
            v100 = v68 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain((const char *)v68);
          v70 = _CocoaArrayWrapper.endIndex.getter(v100);
        }
        else
        {
          v70 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
          *(_QWORD *)&v71 = swift_bridgeObjectRetain((const char *)v68).n128_u64[0];
        }
        if (v70)
        {
          if (v70 < 1)
            goto LABEL_74;
          for (j = 0; j != v70; ++j)
          {
            if ((v68 & 0xC000000000000001) != 0)
              v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v68);
            else
              v74 = *(id *)(v68 + 8 * j + 32);
            v75 = v74;
            v76 = objc_msgSend(v74, "bundleRecord");

            if (v76)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
              v79 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v78 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v79 >= v78 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
              v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v76);
              specialized Array._endMutation()(v73);
            }
          }
          v80 = swift_bridgeObjectRelease((const char *)v68).n128_u64[0];
          v81 = (const char *)v133;
        }
        else
        {
          v80 = swift_bridgeObjectRelease((const char *)v68, v71).n128_u64[0];
          v81 = (const char *)_swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease((const char *)v68, *(double *)&v80);
        v93 = (const char *)sub_10038D780((uint64_t)v81);
        swift_bridgeObjectRelease(v81);
        v87 = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v94 = swift_bridgeObjectRelease(v93).n128_u64[0];
        objc_msgSend(v130, "addObjectsFromArray:", v87, v94);
        goto LABEL_53;
      }
      v82 = (id)v133;
      v83 = _convertNSErrorToError(_:)(v65);

      swift_willThrow(v84);
      if (qword_1007B3F10 != -1)
        swift_once(&qword_1007B3F10, sub_10032539C);
      v122 = 0;
      v85 = type metadata accessor for Logger(0);
      sub_100221DF8(v85, (uint64_t)qword_1007BA738);
      swift_errorRetain(v83);
      v86 = swift_errorRetain(v83);
      v87 = Logger.logObject.getter(v86);
      v88 = static os_log_type_t.error.getter(v87);
      if (!os_log_type_enabled(v87, v88))
      {
        swift_errorRelease(v83);
        swift_errorRelease(v83);
        swift_errorRelease(v83);
LABEL_53:

        v27 = &selRef_sessionSendEvent_session_;
        goto LABEL_54;
      }
      v89 = swift_slowAlloc(12, -1);
      v90 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v89 = v120;
      swift_errorRetain(v83);
      v91 = _swift_stdlib_bridgeErrorToNSError(v83);
      *(_QWORD *)(v89 + 4) = v91;
      *v90 = v91;
      swift_errorRelease(v83);
      swift_errorRelease(v83);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Failed to get airdrop available applications for opening: %@", (uint8_t *)v89, 0xCu);
      v92 = sub_100008384(&qword_1007B4C30);
      swift_arrayDestroy(v90, 1, v92);
      swift_slowDealloc(v90, -1, -1);
      swift_slowDealloc(v89, -1, -1);

      swift_errorRelease(v83);
      v27 = &selRef_sessionSendEvent_session_;
    }
LABEL_54:
    v95 = v131;
    v96 = objc_msgSend(v131, v27[9], v63);
    v97 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v96, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

    v98 = *(_QWORD *)(v97 + 16);
    swift_bridgeObjectRelease((const char *)v97);
    if (v98)
    {
      v8 = v95;
      v9 = v27[9];
      v10 = v130;
      v11 = objc_msgSend(v130, v9);
      v12 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v13 = Set._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "intersectSet:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

      v1 = v124;
      v0 = v125;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v3, v125);
    }
    else
    {

      v1 = v124;
      v0 = v125;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v3, v125);

      v131 = v130;
    }
    v4 = v123;
    if (++v6 == v128)
      goto LABEL_64;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  swift_once(&qword_1007B3F10, sub_10032539C);
LABEL_65:
  v101 = type metadata accessor for Logger(0);
  sub_100221DF8(v101, (uint64_t)qword_1007BA738);
  v102 = v131;
  v103 = Logger.logObject.getter(v102);
  v104 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc(12, -1);
    v106 = swift_slowAlloc(32, -1);
    v132 = v106;
    *(_DWORD *)v105 = 136315138;
    v107 = objc_msgSend(v102, "array");
    v108 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v107, (char *)&type metadata for Any + 8);

    v109 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v108);
    v110 = (id)SFCompactStringFromCollection(v109);

    if (v110)
    {
      v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
      v113 = v112;

    }
    else
    {
      v133 = 0;
      v134 = (const char *)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v134);
      v113 = (const char *)0x8000000100612DF0;
      v111 = 0xD000000000000015;
    }
    v133 = sub_100228BD8(v111, (unint64_t)v113, &v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134, v105 + 4);

    swift_bridgeObjectRelease(v113);
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "Generic handler found available applications %s", v105, 0xCu);
    swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v106, -1, -1);
    swift_slowDealloc(v105, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)&v114 = swift_beginAccess(&v131, &v133, 0, 0).n128_u64[0];
  v115 = v131;
  v116 = objc_msgSend(v131, "array", v114);
  v117 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v116, (char *)&type metadata for Any + 8);

  v118 = sub_10038D9E0((uint64_t)v117);
  swift_bridgeObjectRelease(v117);
  return v118;
}

void sub_10032E6EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  NSURL *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSURL *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = sub_100008384((uint64_t *)&unk_1007B5200);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v41 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v41 - v9;
  v11 = (void *)objc_opt_self(LSApplicationWorkspace);
  v12 = objc_msgSend(v11, "defaultWorkspace");
  if (!v12)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  v14 = v12;
  URL._bridgeToObjectiveC()(v13);
  v16 = v15;
  v17 = objc_msgSend(v14, "URLOverrideForURL:", v15);

  if (v17)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

    v18 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
  }
  else
  {
    v19 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  sub_10022E718((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_1007B5200);
  v20 = objc_msgSend(v11, "defaultWorkspace");
  if (!v20)
    goto LABEL_29;
  v21 = v20;
  sub_100330F1C((uint64_t)v10, (uint64_t)v5);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22) != 1)
  {
    URL._bridgeToObjectiveC()(v24);
    v25 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
  }
  v27 = objc_msgSend(v21, "applicationsAvailableForOpeningURL:", v25);

  if (!v27)
    goto LABEL_24;
  v28 = sub_100221EDC(0, (unint64_t *)&qword_1007B5520, LSApplicationProxy_ptr);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if (!((unint64_t)v29 >> 62))
  {
    if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
LABEL_23:
    swift_bridgeObjectRelease(v29);
    goto LABEL_24;
  }
  if (v29 < 0)
    v39 = v29;
  else
    v39 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v29);
  v40 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v29);
  if (!v40)
    goto LABEL_23;
LABEL_11:
  if ((v29 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v30 = *(id *)(v29 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_28;
  }
  v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v29);
LABEL_14:
  v31 = v30;
  v32 = objc_msgSend(v30, "correspondingApplicationRecord", swift_bridgeObjectRelease(v29).n128_f64[0]);

  if (!v32)
  {
LABEL_24:
    sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007B5200);
    return;
  }
  v33 = objc_msgSend(v32, "bundleIdentifier");
  if (!v33)
  {

    goto LABEL_24;
  }
  v34 = v33;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v37 = v36;

  v38 = sub_1002EF648(v35, v37, a1);
  sub_10000D0F0((uint64_t)v10, (uint64_t *)&unk_1007B5200);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) == 0)

}

void sub_10032EA6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  void *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  const char *object;
  NSString v30;
  char v31;
  char *v32;
  NSURL *v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  int v43;
  NSURL *v44;
  char v45;
  void *v46;
  void *v47;
  char v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;

  v59 = a2;
  v60 = a4;
  v57 = a3;
  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  __chkstk_darwin(v4);
  v58 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v55 - v11;
  v13 = type metadata accessor for SFAirDrop.TransferType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropSend.Request.type.getter(v15);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  v19 = enum case for SFAirDrop.TransferType.links(_:);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v20 = v60;
  if (v18 != v19)
    goto LABEL_10;
  v56 = v10;
  v21 = v12;
  v22 = v60;
  v23 = (uint64_t)v58;
  if (!*(_QWORD *)(v59 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v58, 1, 1, v6);
    goto LABEL_8;
  }
  v24 = type metadata accessor for SFSecurityScopedURL(0);
  SFSecurityScopedURL.url.getter(v24);
  v25 = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v23, 1, v6) == 1)
  {
LABEL_8:
    sub_10000D0F0(v23, (uint64_t *)&unk_1007B5200);
    goto LABEL_9;
  }
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 32))(v12, v23, v6);
  URL.scheme.getter(v26);
  if (v27)
  {
    v28 = v27;
    object = (const char *)String.lowercased()()._object;
    swift_bridgeObjectRelease(v28);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v31 = SFIsCredential(v30);

    v32 = v56;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v56, v12, v25);
    if ((v31 & 1) != 0)
    {
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v32, v25);
    }
    else
    {
      URL._bridgeToObjectiveC()(v33);
      v42 = v41;
      v43 = SFIsPasskeyCredentialLink();

      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v32, v25);
      if (!v43)
      {
LABEL_16:
        v34(v12, v25);
        goto LABEL_9;
      }
    }
    sub_1002B3D00();
    if ((v45 & 1) == 0)
    {
      URL._bridgeToObjectiveC()(v44);
      v47 = v46;
      v48 = SFIsPasskeyCredentialLink();

      _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(v48);
      v50 = v49;
      objc_msgSend(v49, "present");
      v51 = type metadata accessor for SFAirDropSend.Failure(0);
      v52 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      swift_allocError(v51, v52, 0, 0);
      v54 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, enum case for SFAirDropSend.Failure.badRequest(_:), v51);
      swift_willThrow(v54);

      v34(v21, v25);
      return;
    }
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_9:
  v20 = v22;
LABEL_10:
  if (objc_msgSend(v20, "carplayConnected"))
  {
    _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0();
    v36 = v35;
    objc_msgSend(v35, "present");
    v37 = type metadata accessor for SFAirDropSend.Failure(0);
    v38 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v37, v38, 0, 0);
    v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, enum case for SFAirDropSend.Failure.badRequest(_:), v37);
    swift_willThrow(v40);

  }
}

void sub_10032EE9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B3D00();
  sub_10022E534(a1, (uint64_t)v5);
  v6 = (char *)sub_10032EF64 + 4 * byte_1005D24C0[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10032EF64()
{
  uint64_t v0;

  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return 0;
}

uint64_t sub_10032F040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  v7 = type metadata accessor for SFSecurityScopedURL(0);
  v6[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[11] = v8;
  v6[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v6[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[14] = v10;
  v6[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  return swift_task_switch(sub_10032F100, static AirDropActor.shared, 0);
}

uint64_t sub_10032F100()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  unsigned int v22;
  unsigned int v23;
  const char *v24;
  NSArray v25;
  NSString v26;
  NSString v27;
  id v28;
  id v29;
  void *v30;
  const char *v31;
  id v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  const char *v55;
  uint8_t *v56;
  uint64_t v57;
  int64_t *v58;
  int64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (char *)_swiftEmptyArrayStorage;
  if (!v2)
  {
LABEL_30:
    v57 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v57);
    return (*(uint64_t (**)(char *))(v0 + 8))(v3);
  }
  v58 = (int64_t *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v61 = _swiftEmptyArrayStorage;
  sub_100229810(0, v2, 0);
  v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v60 = *(_QWORD *)(v5 + 72);
  v7 = v5;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9 = _swiftEmptyArrayStorage;
  v59 = v2;
  v10 = v0;
  do
  {
    v11 = *(_QWORD *)(v10 + 96);
    v0 = v10;
    v12 = *(_QWORD *)(v10 + 80);
    v13 = v8(v11, v6, v12);
    SFSecurityScopedURL.url.getter(v13);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    {
      sub_100229810(0, v9[2] + 1, 1);
      v9 = v61;
    }
    v15 = v9[2];
    v14 = v9[3];
    if (v15 >= v14 >> 1)
    {
      sub_100229810(v14 > 1, v15 + 1, 1);
      v9 = v61;
    }
    v16 = *(_QWORD *)(v10 + 120);
    v17 = *(_QWORD *)(v10 + 104);
    v9[2] = v15 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, v16, v17);
    v61 = v9;
    v6 += v60;
    --v2;
  }
  while (v2);
  v18 = v10 + 32;
  sub_10032EA6C(*(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 64), *(void **)(v10 + 72));
  v19 = *(_QWORD *)(v10 + 56);
  sub_10032EE9C(*(_QWORD *)(v10 + 64));
  v21 = v20;
  v23 = v22;
  v24 = (const char *)sub_10038D4E0((uint64_t)v9);
  swift_release(v9);
  v25.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  if (!v19)
  {
    v26 = 0;
    if (v21)
      goto LABEL_10;
LABEL_12:
    v27 = 0;
    goto LABEL_13;
  }
  v26 = String._bridgeToObjectiveC()();
  if (!v21)
    goto LABEL_12;
LABEL_10:
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
LABEL_13:
  v28 = objc_msgSend((id)objc_opt_self(SDAirDropLegacyHelper), "preprocessItems:forClientBundleID:receiverIdentifier:receiverSupportsURLs:receiverIsUnknown:", v25.super.isa, v26, v27, v23 & 1, (v23 >> 8) & 1);

  if (objc_msgSend(v28, "success"))
  {
    v29 = objc_msgSend(v28, "files");
    if (v29)
    {
      v30 = v29;
      v31 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, *(_QWORD *)(v0 + 104));

      v32 = objc_msgSend(v28, "links");
      if (v32)
      {
        v33 = v32;
        v34 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, *(_QWORD *)(v0 + 104));

        sub_100343338((uint64_t)v31);
        *(_QWORD *)(v0 + 16) = v34;
        v35 = sub_100008384((uint64_t *)&unk_1007B6820);
        v36 = sub_10026E2FC((unint64_t *)&qword_1007B7F00, (uint64_t *)&unk_1007B6820, (uint64_t)&protocol conformance descriptor for [A]);
        v3 = (char *)RandomAccessCollection<>.securityScopedURLs.getter(v35, v36);
        *(_QWORD *)&v37 = swift_bridgeObjectRelease(v34).n128_u64[0];
        if (*((_QWORD *)v3 + 2))
        {

        }
        else
        {
          swift_bridgeObjectRelease(v3, v37);
          if (qword_1007B3F10 != -1)
            swift_once(&qword_1007B3F10, sub_10032539C);
          v49 = *(const char **)(v0 + 40);
          v50 = type metadata accessor for Logger(0);
          sub_100221DF8(v50, (uint64_t)qword_1007BA738);
          v51 = swift_bridgeObjectRetain(v49);
          v52 = Logger.logObject.getter(v51);
          v53 = static os_log_type_t.error.getter(v52);
          v54 = os_log_type_enabled(v52, v53);
          v55 = *(const char **)(v0 + 40);
          if (v54)
          {
            v56 = (uint8_t *)swift_slowAlloc(12, -1);
            *(_DWORD *)v56 = 134217984;
            *v58 = v59;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v58, v18, v56 + 4);
            swift_bridgeObjectRelease(v55);
            _os_log_impl((void *)&_mh_execute_header, v52, v53, "Preprocessing URLs returned no items, although we were given %ld URLs. Falling back to initial URLs", v56, 0xCu);
            swift_slowDealloc(v56, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease(*(const char **)(v0 + 40));
          }

          v3 = *(char **)(v0 + 40);
          swift_bridgeObjectRetain(v3);
        }
        goto LABEL_30;
      }
      swift_bridgeObjectRelease(v31);
    }
  }
  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v38 = type metadata accessor for Logger(0);
  v39 = sub_100221DF8(v38, (uint64_t)qword_1007BA738);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Failed to preprocess items", v42, 2u);
    swift_slowDealloc(v42, -1, -1);
  }

  v43 = type metadata accessor for SFAirDropSend.Failure(0);
  v44 = sub_100220D78(&qword_1007BD9D0, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v43, v44, 0, 0);
  v46 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, enum case for SFAirDropSend.Failure.badRequest(_:), v43);
  swift_willThrow(v46);

  v47 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032F720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1[11] = a1;
  v2 = type metadata accessor for URLQueryItem(0);
  v1[12] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[13] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v4);
  v1[15] = swift_task_alloc(v4);
  v5 = type metadata accessor for URLComponents(0);
  v1[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[17] = v6;
  v1[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008384(&qword_1007B6BE8);
  v1[19] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[20] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v9);
  v1[22] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[23] = swift_task_alloc(v10);
  v1[24] = swift_task_alloc(v10);
  v1[25] = swift_task_alloc(v10);
  v1[26] = swift_task_alloc(v10);
  v1[27] = swift_task_alloc(v10);
  v11 = type metadata accessor for URL(0);
  v1[28] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[29] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v13);
  v1[31] = swift_task_alloc(v13);
  v1[32] = swift_task_alloc(v13);
  v1[33] = swift_task_alloc(v13);
  if (qword_1007B3D98 != -1)
    swift_once(&qword_1007B3D98, sub_1002ACAEC);
  v14 = static AirDropActor.shared;
  v1[34] = static AirDropActor.shared;
  return swift_task_switch(sub_10032F8D0, v14, 0);
}

uint64_t sub_10032F8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  void (*v60)(uint64_t, uint64_t);
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  const char *v77;
  unint64_t v78;
  uint64_t v79;
  const char *v80;
  const char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD, uint64_t);
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;

  if (qword_1007B3F10 != -1)
    swift_once(&qword_1007B3F10, sub_10032539C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100221DF8(v1, (uint64_t)qword_1007BA738);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Opening files with Files App for transfer", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 88);

  v9 = *(_QWORD *)(v6 + 16);
  if (!v9)
  {
    v61 = Logger.logObject.getter(v7);
    v62 = static os_log_type_t.error.getter(v61);
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "No items to open with Files App", v63, 2u);
      swift_slowDealloc(v63, -1, -1);
    }

    goto LABEL_27;
  }
  if (v9 != 1)
    goto LABEL_9;
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v15(v12, *(_QWORD *)(v0 + 88) + v14, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v16(v12, 1, v10) == 1)
  {
    sub_10000D0F0(*(_QWORD *)(v0 + 216), (uint64_t *)&unk_1007B5200);
LABEL_9:
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 88);
    URLComponents.init()(v8);
    URLComponents.scheme.setter(0x6F64646572616873, 0xEF73746E656D7563);
    URLQueryItem.init(name:value:)(0x6E6F697461636F6CLL, 0xE800000000000000, 0x64616F6C6E776F44, 0xE900000000000073);
    sub_100229940(0, v9, 0);
    v109 = *(unsigned __int8 *)(v17 + 80);
    v110 = (v109 + 32) & ~v109;
    v19 = v18 + v110;
    v118 = *(_QWORD *)(v17 + 72);
    v121 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    do
    {
      v20 = *(_QWORD *)(v0 + 240);
      v21 = *(_QWORD *)(v0 + 224);
      v22 = v121(v20, v19, v21);
      v23 = URL.lastPathComponent.getter(v22);
      v25 = v24;
      v26 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(_QWORD *)(v0 + 296) = v26;
      v26(v20, v21);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_100229940(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v28 = _swiftEmptyArrayStorage[2];
      v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1)
        sub_100229940(v27 > 1, v28 + 1, 1);
      _swiftEmptyArrayStorage[2] = v28 + 1;
      v29 = &_swiftEmptyArrayStorage[2 * v28];
      v29[4] = v23;
      v29[5] = v25;
      v19 += v118;
      --v9;
    }
    while (v9);
    v112 = *(_QWORD *)(v0 + 224);
    v113 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 112);
    v111 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
    v35 = sub_100008384((uint64_t *)&unk_1007BD6A0);
    v36 = sub_10026E2FC((unint64_t *)&qword_1007B6D40, (uint64_t *)&unk_1007BD6A0, (uint64_t)&protocol conformance descriptor for [A]);
    v37 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v35, v36);
    v39 = v38;
    swift_release(_swiftEmptyArrayStorage);
    URLQueryItem.init(name:value:)(0x656D616E656C6966, 0xE900000000000073, v37, v39);
    swift_bridgeObjectRelease(v39);
    v40 = sub_100008384(&qword_1007B9778);
    v41 = *(_QWORD *)(v34 + 72);
    v42 = *(unsigned __int8 *)(v34 + 80);
    v43 = (v42 + 32) & ~v42;
    v44 = swift_allocObject(v40, v43 + 2 * v41, v42 | 7);
    *(_OWORD *)(v44 + 16) = xmmword_1005CF250;
    v45 = v44 + v43;
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
    v46(v45, v111, v33);
    v46(v45 + v41, v32, v33);
    v47 = URLComponents.queryItems.setter(v44);
    URLComponents.url.getter(v47);
    sub_100330F1C(v30, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v31, 1, v112) == 1)
    {
      v48 = sub_10000D0F0(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_1007B5200);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.error.getter(v49);
      v51 = os_log_type_enabled(v49, v50);
      v52 = *(_QWORD *)(v0 + 192);
      v53 = *(_QWORD *)(v0 + 136);
      v54 = *(_QWORD *)(v0 + 144);
      v55 = *(_QWORD *)(v0 + 120);
      v122 = *(_QWORD *)(v0 + 128);
      v56 = *(_QWORD *)(v0 + 104);
      v57 = *(_QWORD *)(v0 + 112);
      v58 = *(_QWORD *)(v0 + 96);
      if (v51)
      {
        v119 = *(_QWORD *)(v0 + 144);
        v59 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v59 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Could not create Files launch URL", v59, 2u);
        swift_slowDealloc(v59, -1, -1);

        sub_10000D0F0(v52, (uint64_t *)&unk_1007B5200);
        v60 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
        v60(v57, v58);
        v60(v55, v58);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v119, v122);
      }
      else
      {

        sub_10000D0F0(v52, (uint64_t *)&unk_1007B5200);
        v91 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
        v91(v57, v58);
        v91(v55, v58);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v122);
      }
LABEL_27:
      v92 = *(_QWORD *)(v0 + 256);
      v94 = *(_QWORD *)(v0 + 240);
      v93 = *(_QWORD *)(v0 + 248);
      v96 = *(_QWORD *)(v0 + 208);
      v95 = *(_QWORD *)(v0 + 216);
      v98 = *(_QWORD *)(v0 + 192);
      v97 = *(_QWORD *)(v0 + 200);
      v100 = *(_QWORD *)(v0 + 176);
      v99 = *(_QWORD *)(v0 + 184);
      v116 = *(_QWORD *)(v0 + 168);
      v117 = *(_QWORD *)(v0 + 144);
      v120 = *(_QWORD *)(v0 + 120);
      v123 = *(_QWORD *)(v0 + 112);
      swift_task_dealloc(*(_QWORD *)(v0 + 264));
      swift_task_dealloc(v92);
      swift_task_dealloc(v93);
      swift_task_dealloc(v94);
      swift_task_dealloc(v95);
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v116);
      swift_task_dealloc(v117);
      swift_task_dealloc(v120);
      swift_task_dealloc(v123);
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    v64 = v0 + 320;
    v65 = *(_QWORD *)(v0 + 248);
    v66 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 232) + 32))(v65, *(_QWORD *)(v0 + 184), v66);
    v67 = sub_100008384(&qword_1007B5318);
    v68 = swift_allocObject(v67, v110 + v118, v109 | 7);
    *(_OWORD *)(v68 + 16) = xmmword_1005CD2A0;
    v121(v68 + v110, v65, v66);
    *(_QWORD *)(v0 + 72) = 0;
    v69 = swift_allocObject(&unk_100722740, 32, 7);
    *(_QWORD *)(v69 + 16) = v68;
    *(_QWORD *)(v69 + 24) = 0;
    SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, v0 + 72, &unk_1007BA848, v69, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
    v70 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(_QWORD *)(v0 + 304) = v70;
    *v70 = v0;
    v70[1] = sub_1003304DC;
    return SFProgressTask.finalValue.getter(v64, *(_QWORD *)(v0 + 152));
  }
  v115 = v15;
  v71 = *(_QWORD *)(v0 + 224);
  v72 = *(_QWORD *)(v0 + 208);
  v73 = *(_QWORD *)(v0 + 200);
  v114 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 232) + 32);
  v74 = v114(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 216), v71);
  v75 = URL.absoluteString.getter(v74);
  v77 = v76;
  *(_QWORD *)(v0 + 48) = v75;
  *(_QWORD *)(v0 + 56) = v76;
  *(_QWORD *)(v0 + 16) = 0x2F2F3A656C6966;
  *(_QWORD *)(v0 + 24) = 0xE700000000000000;
  *(_QWORD *)(v0 + 32) = 0xD000000000000012;
  *(_QWORD *)(v0 + 40) = 0x80000001006162F0;
  v78 = sub_100221E10();
  v79 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 16, v0 + 32, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v78, v78, v78);
  v81 = v80;
  swift_bridgeObjectRelease(v77);
  URL.init(string:)(v79, v81);
  swift_bridgeObjectRelease(v81);
  sub_100330F1C(v72, v73);
  if (v16(v73, 1, v71) == 1)
  {
    v82 = sub_10000D0F0(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_1007B5200);
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.error.getter(v83);
    v85 = os_log_type_enabled(v83, v84);
    v86 = *(_QWORD *)(v0 + 264);
    v87 = *(_QWORD *)(v0 + 224);
    v88 = *(_QWORD *)(v0 + 232);
    v89 = *(_QWORD *)(v0 + 208);
    if (v85)
    {
      v90 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "Could not create Files launch URL", v90, 2u);
      swift_slowDealloc(v90, -1, -1);
    }

    sub_10000D0F0(v89, (uint64_t *)&unk_1007B5200);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
    goto LABEL_27;
  }
  v64 = v0 + 321;
  v102 = *(_QWORD *)(v0 + 256);
  v104 = *(_QWORD *)(v0 + 224);
  v103 = *(_QWORD *)(v0 + 232);
  v114(v102, *(_QWORD *)(v0 + 200), v104);
  v105 = sub_100008384(&qword_1007B5318);
  v106 = swift_allocObject(v105, *(_QWORD *)(v103 + 72) + v14, v13 | 7);
  *(_OWORD *)(v106 + 16) = xmmword_1005CD2A0;
  v115(v106 + v14, v102, v104);
  *(_QWORD *)(v0 + 80) = 0;
  v107 = swift_allocObject(&unk_100722768, 32, 7);
  *(_QWORD *)(v107 + 16) = v106;
  *(_QWORD *)(v107 + 24) = 0;
  SFProgressTask.init(_:initialProgress:operation:file:line:)(0x6E694C2077656956, 0xEA0000000000736BLL, v0 + 80, &unk_1007BA850, v107, 0xD000000000000067, 0x8000000100614E10, 284, &type metadata for Double, &type metadata for Bool);
  v108 = (_QWORD *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(_QWORD *)(v0 + 280) = v108;
  *v108 = v0;
  v108[1] = sub_10033032C;
  return SFProgressTask.finalValue.getter(v64, *(_QWORD *)(v0 + 152));
}

uint64_t sub_10033032C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  v4 = *(_QWORD *)(*v1 + 176);
  v5 = *(_QWORD *)(*v1 + 152);
  v6 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (v0)
    v7 = sub_1003306B8;
  else
    v7 = sub_1003303B8;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 272), 0);
}

uint64_t sub_1003303B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
  v4(*(_QWORD *)(v0 + 256), v2);
  sub_10000D0F0(v3, (uint64_t *)&unk_1007B5200);
  v4(v1, v2);
  v19 = *(unsigned __int8 *)(v0 + 321);
  v5 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v19);
}

uint64_t sub_1003304DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 304);
  v5 = *(_QWORD *)(*v1 + 160);
  v4 = *(_QWORD *)(*v1 + 168);
  v6 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 312) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_1003307DC;
  else
    v7 = sub_100330568;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 272), 0);
}

uint64_t sub_100330568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
  sub_10000D0F0(v1, (uint64_t *)&unk_1007B5200);
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  v9(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v24 = *(unsigned __int8 *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v24);
}

uint64_t sub_1003306B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
  v4(*(_QWORD *)(v0 + 256), v2);
  sub_10000D0F0(v3, (uint64_t *)&unk_1007B5200);
  v4(v1, v2);
  v5 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1003307DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
  sub_10000D0F0(v1, (uint64_t *)&unk_1007B5200);
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  v9(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v10 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10033092C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  char v6;

  URL.scheme.getter(a1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = String.lowercased()();
  swift_bridgeObjectRelease(v2);
  if (v3._countAndFlagsBits == 0x6D656D6563696F76 && v3._object == (void *)0xEA0000000000736FLL)
  {
    object = (void *)0xEA0000000000736FLL;
LABEL_11:
    swift_bridgeObjectRelease(object);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x6D656D6563696F76, 0xEA0000000000736FLL, 0) & 1) != 0)
  {
LABEL_7:
    object = v3._object;
    goto LABEL_11;
  }
  if (v3._countAndFlagsBits == 0x736F746F6870 && v3._object == (void *)0xE600000000000000)
  {
LABEL_10:
    object = (void *)0xE600000000000000;
    goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x736F746F6870, 0xE600000000000000, 0) & 1) != 0)goto LABEL_7;
  if (v3._countAndFlagsBits == 0xD000000000000010)
  {
    object = (void *)0x8000000100616290;
    if (v3._object == (void *)0x8000000100616290)
      goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0xD000000000000010, 0x8000000100616290, 0) & 1) != 0)goto LABEL_7;
  if (v3._countAndFlagsBits == 0x786F62656F6873 && v3._object == (void *)0xE700000000000000)
    goto LABEL_18;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x786F62656F6873, 0xE700000000000000, 0) & 1) != 0)goto LABEL_7;
  if (v3._countAndFlagsBits == 0x736B636F7473 && v3._object == (void *)0xE600000000000000)
    goto LABEL_10;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x736B636F7473, 0xE600000000000000, 0) & 1) != 0)goto LABEL_7;
  if (v3._countAndFlagsBits == 0x6870656C69626F6DLL && v3._object == (void *)0xEB00000000656E6FLL)
  {
    object = (void *)0xEB00000000656E6FLL;
    goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x6870656C69626F6DLL, 0xEB00000000656E6FLL, 0) & 1) != 0)goto LABEL_7;
  if (v3._countAndFlagsBits == 0x746361746E6F63 && v3._object == (void *)0xE700000000000000)
  {
LABEL_18:
    object = (void *)0xE700000000000000;
    goto LABEL_11;
  }
  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v3._countAndFlagsBits, v3._object, 0x746361746E6F63, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v3._object);
  return v6 & 1;
}

uint64_t sub_100330BE4(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for SFAirDropReceive.ItemDestination(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for SFPlatform(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a2 < 8.0;
  static SFPlatform.macOS.getter(v13);
  v17 = static SFPlatform.isPlatform(_:)(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
    if (a2 >= 8.0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for SFAirDropReceive.ItemDestination.default(_:), v4);
      v18 = sub_100220D78(&qword_1007B6C30, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v18);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v8, v4);
      v20(v10, v4);
      v16 = v19 ^ 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v16 = 1;
    }
  }
  return v16 & 1;
}

uint64_t sub_100330D9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100330DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_BYTE *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  v11 = (_QWORD *)swift_task_alloc(dword_1007BA824);
  *(_QWORD *)(v4 + 16) = v11;
  *v11 = v4;
  v11[1] = sub_10000D12C;
  return sub_100326638(a1, a2, a3, v8, v9, v10);
}

void sub_100330E50(uint64_t a1)
{
  uint64_t v1;

  sub_1003286A4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100330E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_100008384(&qword_1007BA838);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100330ED0()
{
  uint64_t v0;

  sub_100008384(&qword_1007BA838);
  return sub_100329220(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24));
}

uint64_t sub_100330F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100330F14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100330F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008384((uint64_t *)&unk_1007B5200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100330F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BA80C);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D098;
  return sub_100327528(a1, a2, a3, v9, v8);
}

uint64_t sub_100330FE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100331014()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100331038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_BYTE *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_1007BA85C);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_10000D098;
  return sub_100325600(a1, a2, a3, v8, v9);
}

uint64_t sub_1003310B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_bridgeObjectRelease(*(const char **)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10033116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *(_QWORD *)(sub_100008384((uint64_t *)&unk_1007B5200) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v3 + v9;
  v11 = *(_QWORD *)(v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1007BA86C);
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_10000D098;
  return sub_100326984(a1, a2, a3, v10, v11);
}

uint64_t sub_100331218(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc(dword_1007BA88C);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_10000D098;
  return sub_10032AD84(a1, a2, v6, v7, v8, v9, v10);
}

void sub_1003312A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10022E534(a1, (uint64_t)v5);
  v6 = (char *)sub_100331364 + 4 * byte_1005D24C4[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100331364()
{
  uint64_t v0;

  sub_1002443C8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return 0;
}

void sub_1003313B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100221DB4(v0, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1003EE9D8();
  v3 = v1 + *(int *)(v2 + 24);
  if (*(_BYTE *)(v3 + 8) == 1)
  {
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }
  else
  {
    v4 = *(_QWORD *)v3;
    sub_1002443C8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if ((v4 & 0x80) != 0)
      JUMPOUT(0x100331394);
  }
  JUMPOUT(0x100331398);
}

void sub_10033142C(objc_class *a1)
{
  uint64_t v1;

  sub_10032B2C8(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(const char **)(v1 + 32), *(const char **)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(_BYTE *)(v1 + 58), *(const char **)(v1 + 64));
}

uint64_t sub_10033146C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  uint64_t v34;
  uint64_t v35;

  v1 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_100008384(&qword_1007BA8A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v11 = type metadata accessor for NWEndpoint(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(v10 + 8));
      v17 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v35 = v9;
      v18 = v5;
      v19 = v10 + v17[5];
      v20 = type metadata accessor for NWEndpoint(0);
      v21 = v19;
      v5 = v18;
      v9 = v35;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
      *(_QWORD *)&v22 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[7] + 8)).n128_u64[0];
      *(_QWORD *)&v23 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[8] + 8), v22).n128_u64[0];
      *(_QWORD *)&v24 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[9] + 8), v23).n128_u64[0];
      *(_QWORD *)&v25 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[10] + 8), v24).n128_u64[0];
      *(_QWORD *)&v26 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v10 + v17[11] + 8), v25).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v10 + v17[12] + 8), v26);
      v27 = (uint64_t *)(v10 + v17[14]);
      v28 = v27[1];
      if (v28 >> 60 != 15)
        sub_100225AB4(*v27, v28);
      break;
    case 2u:
      sub_100225AB4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
      v12 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      v34 = v9;
      v13 = v5;
      v14 = v10 + v12[5];
      v15 = type metadata accessor for UUID(0);
      v16 = v14;
      v5 = v13;
      v9 = v34;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
      swift_unknownObjectRelease(*(_QWORD *)(v10 + v12[6]));
      swift_bridgeObjectRelease(*(const char **)(v10 + v12[7] + 8));
      break;
    case 3u:

      break;
    default:
      break;
  }
  v29 = (v4 + v5 + v8) & ~v8;
  v30 = (v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v29, v6);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease((const char *)*(_QWORD *)(v0 + v30)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + v31), v32);
  return swift_deallocObject(v0, v31 + 8, v3 | v8 | 7);
}

