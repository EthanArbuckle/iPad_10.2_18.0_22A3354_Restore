uint64_t sub_1009BB85C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;

  LODWORD(STACK[0x5E50]) = LODWORD(STACK[0x6670]) + LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x5BC8]) = -1309485120 - LODWORD(STACK[0x66A8]) + LODWORD(STACK[0x6668]);
  LODWORD(STACK[0x5D78]) = LODWORD(STACK[0x6658]) | LODWORD(STACK[0x6790]);
  LODWORD(STACK[0x58A8]) = LODWORD(STACK[0x6720]) | LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x5A60]) = LODWORD(STACK[0x6650]) | LODWORD(STACK[0x6688]);
  v2 = *(unsigned __int8 *)(STACK[0x6AA0] + 3869);
  v3 = (v2 << 8) | ((*(unsigned __int8 *)STACK[0x6980] ^ v1) << 16);
  v4 = (v2 ^ 0x2A34468A) & ~v3 | v3 & 0xCBB900;
  v5 = (((v4 & 0xC01281 ^ 0xC01000) + (v4 & 0x3FED7E ^ 0x3DC473)) << 8) - 256;
  LODWORD(STACK[0x6770]) = ((v5 ^ 0x22503CFF) & (*(unsigned __int8 *)(STACK[0x6980] + 1828) ^ 0x6B527C32) | v5 & 0x94AD8300) ^ 0x14050114;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_1009BBA30()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)(STACK[0xDE60] + v3 - 35072 * (v4 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + 4 * (v1 % 0x2240));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((1948 * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1009BBAB8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x5BE0]) = LODWORD(STACK[0x6698]) | LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x589C]) = LODWORD(STACK[0x6800]) | LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x5890]) = LODWORD(STACK[0x6780]) - LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x6800]) = v2 - 10255;
  LODWORD(STACK[0x6760]) = (v2 - 10255) ^ 0xBF4315D8 | v3;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 8974)) - 12);
  LODWORD(STACK[0x6780]) = 10256 - v2;
  return v4(a1, a2, 36215998);
}

uint64_t sub_1009BBBA0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unint64_t v17;

  v5 = STACK[0x6800];
  v6 = STACK[0xDE68];
  v7 = *(unsigned __int8 *)(STACK[0xDE68] + ((LODWORD(STACK[0x6800]) ^ 0x14F5u) * v3 + 26193860) % 0x1808);
  v8 = STACK[0xDE60];
  v9 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((v7 ^ 0x6F4C2420) - 1867260960) ^ ((v7 ^ 0x11D2243C) - 298984508) ^ ((v7 ^ 0x7E9E00A5u)
                                                                                          - 2124284069))
                   + 17632993)
                  % 0x2240));
  LODWORD(STACK[0x6790]) = *(unsigned __int8 *)STACK[0x69C0];
  v10 = (v9 ^ 0x49 | 0xC7F32133) - (v9 ^ 0x49 | 0x380CDECC) + 940367564;
  v11 = (v10 & 0x15202A9 ^ 0x2800D008) + (v10 & 0xC6A12156 ^ 0xC6802511) - 1;
  v12 = (BYTE1(v9) ^ 0x66 | 0xC57B7EC5) - (BYTE1(v9) ^ 0x66 | 0x3A84813A) + 981762362;
  v13 = (v12 & 0x443B7DE1 ^ 0x208DA0) + (v12 & 0x8140021E ^ 0xA1000005) - 1;
  v14 = ((*(unsigned __int8 *)(v6
                             + (5621
                              * (((BYTE2(v9) ^ 0x783B4C80) - 2119862633) ^ ((BYTE2(v9) ^ 0x8D72F0FE) + 1961675497) ^ ((BYTE2(v9) ^ 0xF549BC5A) + 215451213))
                              + 582276443)
                             % 0x1808) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(v6
                                                                            + (5621
                                                                             * (((HIBYTE(v9) ^ 0xE3C5586B) - 819619084) ^ ((HIBYTE(v9) ^ 0xC2231832) - 289154389) ^ ((HIBYTE(v9) ^ 0x21E6401C) + 218530437))
                                                                             - 1630403916)
                                                                            % 0x1808) ^ 0xB9) << 16);
  v15 = *(unsigned __int8 *)(v6
                           + (5621
                            * (((v11 ^ 0xB9F69B7B) + 1942533895) ^ ((v11 ^ 0xF5A6DFCF) + 1066988467) ^ ((v11 ^ 0x65239029) - 1357005739))
                            + 316609237)
                           % 0x1808);
  v16 = ((((*(unsigned __int8 *)(v6
                               + (5621
                                * (((v13 ^ 0x30CF9459) + 594753799) ^ ((v13 ^ 0xAEF053B) + 424912997) ^ ((v13 ^ 0x5E7B62B7) + 1304940521))
                                + 1186583843)
                               % 0x1808) ^ 0x10181A) & ~v14 | v14 & 0xEFE700) << 8) ^ 0xACC755F2) & (v15 ^ 0xFFFFFF4B);
  *(_DWORD *)(v8 + 4 * (a3 % 0x2240)) = (((2 * ((v16 | v15 & 0xD) ^ 0x1200809)) & 0x3878865E)
                                         - ((v16 | v15 & 0xD) ^ 0x1200809)
                                         - 473711408) ^ 0x1B1890DD;
  HIDWORD(v17) = ((LODWORD(STACK[0x6780]) + v3) | v4) >= 0;
  LODWORD(v17) = ~((LODWORD(STACK[0x6780]) + v3) | v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v5 ^ (16 * (v17 >> 31)) ^ 0x4D1D)) - 12))();
}

uint64_t sub_1009BC0A0@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned __int8 *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unint64_t v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unint64_t v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unint64_t v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t (*v86)(void);

  v21 = LODWORD(STACK[0x6800]) ^ 0x35FB;
  LODWORD(STACK[0x6720]) = v21;
  LODWORD(STACK[0x5A78]) = LODWORD(STACK[0x6740]) - LODWORD(STACK[0x6750]) + ((v21 - 13307) ^ 0xCEFA9F2A);
  LODWORD(STACK[0x5928]) = LODWORD(STACK[0x66A0]) | LODWORD(STACK[0x6700]);
  v22 = ((v12 ^ 0xB9) << 8) | ((v13 ^ 0xB9) << 16);
  v23 = ((v11 ^ 0xF755CC) & ~v22 | v22 & 0x8AA00) << 8;
  v24 = ((v23 ^ 0x8200FF) & (a2 ^ 0x429650A8) | v23 & 0xBD69AF00) ^ 0xBD618E8E;
  LODWORD(STACK[0x66A8]) = v24;
  LODWORD(STACK[0x6700]) = (2 * v24) & 0xA59616D6;
  v25 = ((a5 ^ 0xB9) << 16) | ((a4 ^ 0xB9) << 8);
  v26 = ((a3 ^ 0xF2273AB9) & ~v25 | v25 & 0xD8C500) ^ 0x484059;
  v27 = ((((2 * v26) | 0x48CA7C) - v26) << 8) + 1536868864;
  LODWORD(STACK[0x6800]) = ((v27 ^ 0x34C080FF) & (a1 ^ 0x74CD8449) | v27 & 0x8B327B00) ^ 0x8204308;
  v28 = ((((v19 << 8) | ((a6 ^ 0xB9) << 16)) ^ 0x478742FF) & (v6 ^ 0x4787FBD6) | ((v19 << 8) | ((a6 ^ 0xB9) << 16)) & 0x780400) ^ 0x28480080;
  v29 = (((v28 | 0x98559) - (v28 | 0xF67AA6)) << 8) - 159734272;
  LODWORD(STACK[0x6780]) = ((v29 ^ 0x88040FF) & (LODWORD(STACK[0x6790]) ^ 0xC98623B) | v29 & 0xF3679D00) ^ 0xA1418578;
  v30 = ((v7 ^ 0xB9) << 16) | ((v10 ^ 0xB9) << 8);
  v31 = (v20 ^ 0xB930BF65) & ~v30 | v30 & 0xCF4000;
  v32 = (((v31 ^ 0xF6BFFF) + (v31 | 0xDB49C6) + (v31 & 0x24B639)) << 8) + 256;
  LODWORD(STACK[0x6790]) = ((v32 ^ 0x1540A0FF) & (v16 ^ 0x35F4B25E) | v32 & 0xCA0B4D00) ^ 0x4A004818;
  LODWORD(STACK[0x5C98]) = v8;
  v33 = ((((v8 << 8) | ((v17 ^ 0xB9) << 16)) ^ 0x79AD02FF) & (v9 ^ 0x79AD8344) | ((v8 << 8) | ((v17 ^ 0xB9) << 16)) & 0x527C00) ^ 0x2121802;
  LODWORD(STACK[0x6750]) = ((2 * v33) | 0x36ABEC) - v33;
  v34 = ((((v19 << 8) | (v18 << 16)) ^ 0x684000FF) & (v18 ^ 0x68E92091) | ((v19 << 8) | (v18 << 16)) & 0x16DF00) ^ 0x1214C842;
  v35 = ((((2 * v34) & 0x475A0E) - v34) << 8) - 598542336;
  v36 = ((v35 ^ 0x8C5800FF) & (v15 ^ 0x8D79906E) | v35 & 0x72866F00) ^ 0x2006528;
  v37 = *(unsigned __int8 *)STACK[0x67A0];
  v38 = ((*(unsigned __int8 *)(STACK[0x68B0] + 2883) ^ 0xB9) << 16) | (v37 << 8);
  v39 = (v38 ^ 0x5142FF) & (*(unsigned __int8 *)STACK[0x6860] ^ 0x514A7F) | v38 & 0xAEB500;
  v40 = STACK[0x6A40];
  v41 = *(unsigned __int8 *)(STACK[0x6A40] + 1108);
  v42 = STACK[0x6AC0];
  v43 = (v41 << 8) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 3414) ^ 0xB9) << 16);
  v44 = ((v43 ^ 0xBF04FF) & (*(unsigned __int8 *)STACK[0x68E0] ^ 0xBF956D) | v43 & 0x406A00) << 8;
  v45 = ((v44 ^ 0x400000FF) & (*(unsigned __int8 *)(STACK[0x6A60] + 1441) ^ 0x438D84A2) | v44 & 0xBC727B00) ^ 0x30306024;
  v46 = ((*(unsigned __int8 *)(STACK[0x6A20] + 3945) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6960] + 819) ^ 0xB9) << 8);
  v47 = (((((*(unsigned __int8 *)(STACK[0x6A60] + 235) ^ 0xF8138829) & ~v46 & 0xEFE1B | v46 & 0xC7600) ^ 0x80401)
        + (((*(unsigned __int8 *)(STACK[0x6A60] + 235) ^ 0xF8138829) & ~v46 & 0xF101E4 | v46 & 0xE00100) ^ 0x3101C5)) << 8)
      - 256;
  v48 = ((v47 ^ 0x322AFF) & (v14[2170] ^ 0x3A6EDE) | v47 & 0xFFC59100) ^ 0x6FC40088;
  v49 = STACK[0x6AB0];
  v50 = ((*(unsigned __int8 *)(STACK[0x6AB0] + 3141) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x66D0] + 3285) ^ 0xB9) << 8);
  v51 = ((*(unsigned __int8 *)(STACK[0x6A50] + 1146) ^ 0xC6E5F5) & ~v50 | v50 & 0x391A00) << 8;
  v52 = ((v51 ^ 0x391293FF) & (v37 ^ 0x3DF79F9C) | v51 & 0xC2086000) ^ 0xC2002008;
  v53 = *(unsigned __int8 *)(STACK[0x69A0] + 2041);
  v54 = STACK[0x6A00];
  v55 = (v53 << 8) | ((*(unsigned __int8 *)(STACK[0x6A00] + 1639) ^ 0xB9) << 16);
  v56 = ((v55 ^ 0xFFFFDFFF) & (v53 ^ 0x6AE8647D) | v55 & 0x179B00) ^ 0xBF0CCD81;
  v57 = (((v56 | 0x378D71) - (v56 | 0xC8728E)) << 8) - 932016640;
  v58 = ((v57 ^ 0x2C4280FF) & (*(unsigned __int8 *)(STACK[0x6A70] + 1988) ^ 0x2CEAA01B) | v57 & 0xD3155F00) ^ 0x3040150;
  v59 = ((*(unsigned __int8 *)(STACK[0x6A70] + 2481) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6980] + 1828) ^ 0xB9) << 8);
  v60 = ((*(unsigned __int8 *)STACK[0x66E8] ^ 0xBD778F22) & ~v59 | v59 & 0x887000) ^ 0xCDCCCD33;
  v61 = ((((2 * v60) & 0x5EC204) - v60) << 8) - 794886912;
  v62 = (v61 ^ 0x2220FF) & (*(unsigned __int8 *)(STACK[0x69E0] + 1282) ^ 0xB66206C) | v61 & 0xF499DF00;
  v63 = STACK[0x69F0];
  v64 = ((*(unsigned __int8 *)(STACK[0x6AB0] + 1510) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6A60] + 1168) ^ 0xB9) << 8);
  v65 = (*(unsigned __int8 *)STACK[0x6900] ^ 0x8FA9954E) & ~v64 | v64 & 0x566A00;
  v66 = (((v65 & 0x273E23 ^ 0x251423) + (v65 & 0xD8C1DC ^ 0x404009)) << 8) - 256;
  v67 = ((v66 ^ 0x122601FF) & (*(unsigned __int8 *)(STACK[0x69F0] + 607) ^ 0xDEA70940) | v66 & 0x2158F600) ^ 0x20483604;
  v68 = STACK[0x68C0];
  v69 = (*(unsigned __int8 *)(STACK[0x68C0] + 114) ^ 0xB9) << 8;
  v70 = (v69 & 0x9500 | 0xC4000093) ^ (*(unsigned __int8 *)(STACK[0x6A00] + 1085) ^ 0x3B9F6AD9) & ~v69;
  v71 = (((*(unsigned __int8 *)(STACK[0x6AC0] + 8) ^ 0xB9) << 8) | (((v70 | 0xFB36) - (v70 | 0x4C9)) << 16)) + 80281600;
  v72 = (v71 ^ 0xC0A58FF) & (*(unsigned __int8 *)(STACK[0x6A80] + 3740) ^ 0x1C8B58FA) | v71 & 0xE374A700;
  v73 = v72 ^ 0x83042428;
  LODWORD(STACK[0x6608]) = v72 & 0x164FE635 ^ 0x144BC215;
  v74 = ((*(unsigned __int8 *)STACK[0x68A0] ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x66E0] + 410) ^ 0xB9) << 8);
  v75 = ((*(unsigned __int8 *)(v68 + 91) ^ 0x92D0CA) & ~v74 | v74 & 0x6D2F00) << 8;
  v76 = ((v75 ^ 0x2C2E8CFF) & (*(unsigned __int8 *)(v42 + 812) ^ 0xBC6E8FBF) | v75 & 0x43917000) ^ 0x43913050;
  v77 = STACK[0xDE68];
  STACK[0x6670] = STACK[0xDE68];
  LODWORD(v77) = *(unsigned __int8 *)(v77 + 1950);
  HIDWORD(v78) = (v77 >> 6) ^ 2;
  LODWORD(v78) = ((_DWORD)v77 << 26) ^ 0xE7FFFFFF;
  LOWORD(v69) = (*(unsigned __int8 *)(v40 + 2132) ^ 0x47F8) & (v69 ^ 0x67FF) | v69 & 0xB800;
  LODWORD(v77) = ((((v69 & 0x7AAB ^ 0x5A21) + (v69 & 0x8554 ^ 0x15)) << 16) | ((v78 >> 26) << 8))
               - 0x10000;
  v79 = ((v77 ^ 0x428225FF) & (*(unsigned __int8 *)(v49 + 1821) ^ 0x5AC22512) | v77 & 0xA53DDA00) ^ 0x202D4044;
  v80 = (v41 << 16) | ((*(unsigned __int8 *)(v63 + 865) ^ 0xB9) << 8);
  v81 = (v80 ^ 0x3004ABFF) & (*(unsigned __int8 *)(STACK[0x6A10] + 3338) ^ 0x3094AB3B) | v80 & 0x6B5400;
  v82 = (((v81 & 0x96970B ^ 0x968302) + (v81 & 0x6968F4 ^ 0x94071)) << 8) - 256;
  LODWORD(STACK[0x65E0]) = v82 ^ 0x451503FF;
  LODWORD(STACK[0x6698]) = v82 & 0xBACAEC00;
  v83 = ((*(unsigned __int8 *)(STACK[0x68D0] + 888) ^ 0xB9) << 16) | ((*(unsigned __int8 *)STACK[0x6950] ^ 0xB9) << 8);
  v84 = ((v14[1343] ^ 0xAA8B39) & ~v83 | v83 & 0x557400) << 8;
  LODWORD(v40) = ((v84 ^ 0x100464FF) & (*(unsigned __int8 *)(STACK[0x69D0] + 1381) ^ 0xB20D642D) | v84 & 0x4DF29B00) ^ 0x41D20A61;
  v85 = ((*(unsigned __int8 *)(v54 + 2519) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x68D0] + 3854) ^ 0xB9) << 16);
  LODWORD(v77) = (v14[3892] ^ 0x549E84) & ~v85;
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x6750]) << 8;
  LODWORD(STACK[0x5D30]) = ((v77 | v85 & 0xAB6100) << 8) ^ 0x549E3D00;
  LODWORD(STACK[0x66A0]) = v36;
  LODWORD(STACK[0x6640]) = (2 * v36) & 0x514B8DE6;
  LODWORD(STACK[0x6750]) = (v39 << 8) & 0xE1793E00;
  v86 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6720])) - 4);
  LODWORD(STACK[0x6668]) = v45;
  LODWORD(STACK[0x6630]) = v45 | 0x53DC1502;
  LODWORD(STACK[0x6708]) = v48;
  LODWORD(STACK[0x6688]) = v52;
  LODWORD(STACK[0x6720]) = v58;
  LODWORD(STACK[0x6638]) = (v62 ^ 0x94815A02) & 0x89676555;
  LODWORD(STACK[0x66B0]) = v67;
  LODWORD(STACK[0x6650]) = v73;
  LODWORD(STACK[0x6628]) = v73 & 0x164FE635;
  LODWORD(STACK[0x6740]) = v76;
  LODWORD(STACK[0x6600]) = v79;
  LODWORD(STACK[0x6620]) = v79 | 0x533DAA4F;
  LODWORD(STACK[0x6648]) = v40;
  LODWORD(STACK[0x65A8]) = *(unsigned __int8 *)(STACK[0x6A90] + 706);
  return v86();
}

uint64_t sub_1009BCFF0(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;

  *(_DWORD *)(STACK[0xDE60] + 4 * ((v8 + ((a3 ^ 0x1413u) + 1024) * a4 + 2141) % 0x2240)) = *(_DWORD *)(STACK[0xDE60] + 4 * ((((a3 ^ 0x1413u) + 1024) * a4 + a7) % 0x2240));
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8 * (a3 ^ 0x35FB ^ (462 * (((v9 + a4) | v7) >= 0))))
                                                   - 4))(a1, a2);
}

uint64_t sub_1009BD080@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  LODWORD(STACK[0x5D20]) = LODWORD(STACK[0x6710]) - LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x66A8]) + 1389038443;
  LODWORD(STACK[0x6618]) = v14 & 0xC512B016;
  LODWORD(STACK[0x66A8]) = v13 & 0xA2028160;
  LODWORD(STACK[0x5E30]) = LODWORD(STACK[0x6790]) - 2014603453 - v6 - 2407;
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x66A0]) - 1465530637;
  LODWORD(STACK[0x6710]) = v8 & (v7 ^ 0x1E86C137);
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x6668]) | 0xAC23EAFD;
  LODWORD(STACK[0x6668]) = v17 | 0x38B7C212;
  LODWORD(STACK[0x65F0]) = a3 & 0x87B32F98;
  LODWORD(STACK[0x66A0]) = v16 & 0xF6F4F6DE;
  LODWORD(STACK[0x65E8]) = a4 + v9;
  LODWORD(STACK[0x6658]) = v15 & 0xA0965AC;
  LODWORD(STACK[0x6608]) += LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x6730]) = v12 | 0x51F37832;
  LODWORD(STACK[0x6600]) |= 0xACC255B0;
  LODWORD(STACK[0x6650]) = STACK[0x65E0] & (v11 ^ 0x453513B2);
  LODWORD(STACK[0x65E0]) = v5 | 0x8B3ABB4E;
  LODWORD(STACK[0x5E88]) = a2 + a1 - v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a5) - 12))();
}

uint64_t sub_1009BD300@<X0>(unsigned __int8 *a1@<X3>, int a2@<W4>, unsigned int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;

  v8 = *(unsigned __int8 *)(STACK[0xDE68] + v6 + (a4 ^ 0x18FBAD7) - 6152 * (((a4 ^ 0x18FBAD7u) + v6) / 0x1808));
  v9 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((v8 ^ 0x4D80CF5B) - 1300287323) ^ ((v8 ^ 0xF3CEC019) + 204554215) ^ ((v8 ^ 0xBE4E0FFB)
                                                                                          + 1102180357))
                   + 55582121)
                  % 0x2240));
  v10 = (v9 ^ 0xE5 | 0xB70F06F3) - (v9 ^ 0xE5 | v5) + v5;
  v11 = (((v9 >> 8) & 0x49 ^ 0xBA2DC501) + ((v9 >> 8) & 0xB6 ^ 0x11) - 1) ^ 0x1C2801DF;
  v12 = 5621
      * (((v10 ^ 0x66E9B090) + 494483680) ^ ((v10 ^ 0x1577CF13) + 1860650845) ^ ((v10 ^ 0xC491796A) - 1090391770))
      + 377585239;
  v13 = (((BYTE2(v9) ^ 0xB7) + (HIWORD(v9) & 0x6E ^ 0x7E54F48) - ((BYTE2(v9) ^ 0xB7) & 0x6E)) ^ 0xA9E9CFFF | 0x3C4742BE)
      - (((BYTE2(v9) ^ 0xB7) + (HIWORD(v9) & 0x6E ^ 0x7E54F48) - ((BYTE2(v9) ^ 0xB7) & 0x6E)) ^ 0xA9E9CFFF | v7);
  v14 = *a1;
  v15 = *(unsigned __int8 *)(STACK[0xDE68] + v12 % 0x1808);
  v16 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((HIBYTE(v9) ^ (v4 + 3266)) - 593082411) ^ ((HIBYTE(v9) ^ 0x211B8811) - 1014369045) ^ ((HIBYTE(v9) ^ 0x1F2FB37B) - 37892223))
                              + 662415711)
                             % 0x1808u) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                              + (5621
                                                                               * ((((v13 + v7) ^ 0xDAA51889) + 144725606) ^ (((v13 + v7) ^ 0x13817559) - 1048298570) ^ (((v13 + v7) ^ 0x5B6FAF6C) - 1989484159))
                                                                               + 87672997)
                                                                              % 0x1808) ^ 0xB9) << 8);
  v17 = (*(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * ((((((2 * v11) & 0x4C0A0B22) - v11 + 141224558) ^ 0x99979801) + 849579435) ^ (((((2 * v11) & 0x4C0A0B22) - v11 + 141224558) ^ 0x69AF8E18) - 1029989452) ^ (((((2 * v11) & 0x4C0A0B22) - v11 + 141224558) ^ 0x5E57386B) - 178049599))
                             + 1706003848)
                            % 0x1808) ^ 0xF56FF38F) & ~v16;
  *(_DWORD *)(STACK[0xDE60] + 4 * (a3 % 0x2240)) = ((((((v17 | v16 & 0x900C00) ^ 0x21008C1)
                                                       + 14615544
                                                       - ((2 * ((v17 | v16 & 0x900C00) ^ 0x21008C1)) & 0xBE07F0)) << 8) ^ 0xD90A0427) & (v15 ^ 0xFFFFFF8E) | v15 & 0xD8) ^ 0x3CD6D940;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14921 * (a2 == 0)) ^ a4)) - 12))(v14);
}

uint64_t sub_1009BD76C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  int v26;
  int v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  uint64_t (*v44)(uint64_t);

  STACK[0x6790] = v15;
  LODWORD(STACK[0x5E90]) = LODWORD(STACK[0x65D8]) - LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x58DC]) = LODWORD(STACK[0x6618]) - LODWORD(STACK[0x6780]) + 494315508;
  LODWORD(STACK[0x5908]) = LODWORD(STACK[0x6610]) - LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x5D80]) = 1406932226 - LODWORD(STACK[0x6630]) + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x5998]) = 1009146659 - LODWORD(STACK[0x6688]) + LODWORD(STACK[0x65F0]) + 3344;
  LODWORD(STACK[0x5E60]) = LODWORD(STACK[0x65E8]) - LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x5E80]) = LODWORD(STACK[0x6608]) - LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x5D70]) = 1396550223 - LODWORD(STACK[0x6620]) + LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x5D38]) = LODWORD(STACK[0x65E0]) - LODWORD(STACK[0x6648]) - 1167941031;
  v16 = ((v8 ^ a7) << ((v13 ^ 0x20) + 72)) | ((v7 ^ a7) << 8);
  v17 = ((a1 ^ 0x2039C226) & ~v16 | v16 & 0xC63D00) ^ 0xD5C03440;
  v18 = ((((2 * v17) & 0xD6EFB4) - v17) << 8) - 1803016960;
  v19 = ((v18 ^ 0x128100FF) & (v11 ^ 0x16F5381E) | v18 & 0xE90AC700) ^ 0x2000C418;
  v20 = ((v14 ^ a7) << 16) | ((v12 ^ a7) << 8);
  v21 = (v10 ^ 0x776361DC) & ~v20 | v20 & 0x9C9E00;
  LODWORD(STACK[0x6640]) = ((((v21 & 0xBB3888 ^ 0xA33081) - (~v21 | 0xBB3888)) << 8) - 512) & 0x812C7900;
  v22 = *(unsigned __int8 *)(v9 + 1601);
  v23 = STACK[0x6A60];
  v24 = ((*(unsigned __int8 *)(STACK[0x6A00] + 1965) ^ a7) << 8) | ((*(unsigned __int8 *)STACK[0x6A60] ^ a7) << 16);
  v25 = ((*(unsigned __int8 *)(STACK[0x6678] + 3247) ^ 0x792C9B9A) & ~v24 | v24 & 0xD36400) ^ 0x80126084;
  v26 = (((v25 | 0xB649D0) - (v25 | 0x49B62F)) << 8) + 1236676352;
  LODWORD(STACK[0x6780]) = ((v26 ^ 0x504908FF) & (v22 ^ 0xD0495876) | v26 & 0x2FB6A700) ^ 0x22248300;
  v28 = *(unsigned __int8 *)STACK[0x68A0];
  v29 = STACK[0x6AC0];
  v30 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 1290) ^ a7) << 8) | ((*(unsigned __int8 *)(v23 + 1062) ^ a7) << 16);
  v31 = ((*(unsigned __int8 *)(STACK[0x6AA0] + 2701) ^ 0xC69D4CCF) & ~v30 | v30 & 0x62B300) ^ 0x29422389;
  v32 = ((((2 * v31) | 0xBA2C7A) - v31) << 8) + 585745152;
  LODWORD(STACK[0x590C]) = v32;
  v33 = (v32 ^ 0x8D0439FF) & (v28 ^ 0x8F4DF95A) | v32 & 0x70B20600;
  LODWORD(STACK[0x65B0]) = (((v32 ^ 0x8D0439FF) & (v28 ^ 0x8F4DF95A) & 0x5B738363 | v32 & 0x50320200) ^ 0xB738163)
                         + (v33 ^ 0x70800218)
                         - ((v33 ^ 0x70800218) & 0x5B738363);
  v34 = STACK[0x6930];
  v35 = *(unsigned __int8 *)(STACK[0x6930] + 3065);
  LODWORD(v23) = ((*(unsigned __int8 *)(STACK[0x6A70] + 2481) ^ a7) << 16) | ((*(unsigned __int8 *)(STACK[0x6670] + 1950) ^ a7) << 8);
  LODWORD(v23) = ((v35 ^ 0xD905852B) & ~(_DWORD)v23 | v23 & 0xFA7A00) ^ 0x20805A68;
  LODWORD(v23) = ((_DWORD)v23 + 12446669 - ((2 * (_DWORD)v23) & 0x7BD79A)) << 8;
  LODWORD(STACK[0x6688]) = (((v23 ^ 0xC3FFC3FF) & (*(unsigned __int8 *)(STACK[0x6A10] + 3338) ^ 0xF149141C) | v23 & 0xEB6EB00) ^ 0xA208B1A) & 0x2802EC6D;
  v36 = *(unsigned __int8 *)(STACK[0x6A30] + 1464);
  LODWORD(v23) = ((*(unsigned __int8 *)(a3 + 2974) ^ a7) << 16) | ((*(unsigned __int8 *)(v34 + 2898) ^ a7) << 8);
  v37 = ((*(unsigned __int8 *)(STACK[0x69A0] + 4089) ^ 0x78FB86AB) & ~(_DWORD)v23 | v23 & 0x47900) ^ 0x870429E8;
  v38 = (v28 << 16) | ((*(unsigned __int8 *)(v29 + 2572) ^ a7) << 8);
  v39 = (v38 ^ 0x8F469EFF) & (v35 ^ 0x8F7E9EEF) | v38 & 0x816100;
  v40 = ((v39 & 0x898ED4 ^ 0x888ED4) + (v39 ^ 0x10016100) - ((v39 ^ 0x10016100) & 0x898ED4)) << 8;
  LODWORD(v34) = ((v40 ^ 0x8026CFF) & (*(unsigned __int8 *)(v29 + 3649) ^ 0x3E526EA3) | v40 & 0xC1AD9100) ^ 0x410D9164;
  v41 = ((*(unsigned __int8 *)(STACK[0x6A80] + 3232) ^ a7) << 16) | ((*(unsigned __int8 *)(STACK[0x6A80] + 3634) ^ a7) << 8);
  v42 = (*(unsigned __int8 *)(STACK[0x6970] + 531) ^ 0x113267) & ~v41;
  v43 = (((v42 | v41 & 0xEECD00) << 8) ^ 0xE7FFE7FF) & (*(unsigned __int8 *)STACK[0x6990] ^ 0xD6C929D2) | ((v42 | v41 & 0xEECD00) << 8) & 0x2936D600;
  LODWORD(STACK[0x6630]) = v43 & 0xEAEF16F1;
  LODWORD(STACK[0x6628]) = ((((v37 | 0xBCE841) - (v37 | 0x4317BE)) << 8) + 1125629440) & 0x64CF7700;
  LODWORD(STACK[0x6638]) = (v43 & 0x1510E90E ^ 0x1410690F) - 1;
  v44 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v13) - 8);
  LODWORD(STACK[0x6700]) = v34 & 0xB94D52F5;
  LODWORD(STACK[0x6648]) = (2 * v19) & 0xA1921456;
  return v44(v36);
}

uint64_t sub_1009BE01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  unint64_t v10;

  *(_DWORD *)(STACK[0xDE60] + v9 - 35072 * (a7 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + a8 - 35072 * (v10 / 0x2240));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (a5 | (32 * (((v8 == 0) ^ (a5 - 1)) & 1))))
                            - 8))();
}

uint64_t sub_1009BE0A8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  LODWORD(STACK[0x5C00]) = LODWORD(STACK[0x6760]) - LODWORD(STACK[0x6770]) + 543061396;
  LODWORD(STACK[0x5BF0]) = LODWORD(STACK[0x6690]) + 1688865280;
  LODWORD(STACK[0x57F8]) = -475785889 - LODWORD(STACK[0x6708]) + LODWORD(STACK[0x6668]) + 2456;
  LODWORD(STACK[0x5804]) = LODWORD(STACK[0x6658]) - LODWORD(STACK[0x66B0]) - 84194007;
  LODWORD(STACK[0x5A70]) = LODWORD(STACK[0x6650]) | LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x66B0]) = a6 - 792131029;
  LODWORD(STACK[0x6708]) = v6 & (v12 ^ 0x7ED386D0);
  LODWORD(STACK[0x6760]) = v7 & 0x51F156EA;
  LODWORD(STACK[0x5CE0]) = v10 + v8 - v13;
  LODWORD(STACK[0x6698]) = a3 + v9;
  LODWORD(STACK[0x6690]) = a5 & (a1 ^ 0x9B308863);
  LODWORD(STACK[0x6770]) = v11 + a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a4 + 1492)) - 8))();
}

uint64_t sub_1009BE274(uint64_t a1, unint64_t a2, unsigned int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v6 = *(unsigned __int8 *)(STACK[0xDE68] + a2 % 0x1808);
  v7 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * ((((v4 - 7778) ^ 0xF01B7C57 ^ v6) + 266645139) ^ ((v6 ^ 0x1FCD97C0) - 533567424) ^ ((v6 ^ 0xEFD6C614) + 271137260))
                   + 6130145)
                  % 0x2240));
  v8 = ((2 * (v7 ^ 0x5668A18F)) | 0x8C398E96) - (v7 ^ 0x5668A18F) + 971192501;
  v9 = ((BYTE1(v7) ^ 0x136D29D4) + 1173279647) ^ ((BYTE1(v7) ^ 0x42C1B090) + 339888859) ^ ((BYTE1(v7) ^ 0x51AC9996)
                                                                                         + 120546269);
  v10 = HIBYTE(v7);
  v11 = (BYTE2(v7) ^ 0xFA063207) + (HIWORD(v7) & 0x5B ^ 0x714C58) - ((BYTE2(v7) ^ 0xFA063207) & 0x1800105B);
  v12 = (v11 & 0x22230E1A ^ (v3 + 470)) + (v11 ^ 0xE3F79D78) - ((v11 ^ 0xE3F79D78) & 0x100A21A);
  v13 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((v10 ^ 0x9460801D) - 594076832) ^ ((v10 ^ 0x399DD636) + 1902792053) ^ ((v10 ^ 0xADFD566E) - 452276947))
                              - 583421822)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (5621
                                                                              * (((v12 ^ 0x571733F9) + 488068624) ^ ((v12 ^ 0x4BF518B) + 1321153662) ^ ((v12 ^ 0x69033F68) + 587422367))
                                                                              + 576703321)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v14 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v8 ^ 0xFF02FBF6) + 985971631) ^ ((v8 ^ 0x80CFA034) + 1158275181) ^ ((v8 ^ 0xEFB93DF9) + 712998306))
                            + 1631831414)
                           % 0x1808);
  v15 = ((*(unsigned __int8 *)(STACK[0xDE68] + (5621 * v9 + 1644910013) % 0x1808u) ^ 0xE52203A4) & ~v13 | v13 & 0xDDFC00) ^ 0x2193862;
  v16 = (((((((2 * v15) & 0xB5A622) - v15) << 8) - 1523782144) ^ 0xA9C080E4) & (v14 ^ 0xFFFFFF46) | v14 & 0x1B) ^ 0x802;
  *(_DWORD *)(STACK[0xDE60] + 4 * (a3 % 0x2240)) = (823670033 - v16 + ((2 * v16) | 0x9DCF7B42) + 3406) ^ 0xBC1476A1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1421 * (v5 == 0)) ^ v4)) - 8))();
}

uint64_t sub_1009BE6D4@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  unint64_t v17;
  unsigned __int8 *v18;
  int v19;
  int v20;
  int v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;

  STACK[0x5B88] = v11;
  LODWORD(STACK[0x57D8]) = LODWORD(STACK[0x66A8]) - LODWORD(STACK[0x6800]) + 788447055;
  LODWORD(STACK[0x5A98]) = 75857988 - LODWORD(STACK[0x6720]) + LODWORD(STACK[0x66A0]) + 1100;
  LODWORD(STACK[0x5950]) = LODWORD(STACK[0x6708]) | LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x5E58]) = LODWORD(STACK[0x65B0]) ^ 0xA48E7A98;
  LODWORD(STACK[0x5930]) = LODWORD(STACK[0x6690]) | LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x5880]) = LODWORD(STACK[0x6638]) + LODWORD(STACK[0x6630]);
  v12 = ((v6 ^ a3) << 8) | ((v4 ^ a3) << 16);
  v13 = ((a1 ^ 0x7CEC992F) & ~v12 | v12 & 0x136600) ^ 0x36269;
  LODWORD(STACK[0x66A8]) = ((((v13 | 0x594CE8) - (v13 | 0xA6B317)) << 8) - 1498212608) & 0xEC147A00;
  v14 = ((a2 ^ a3) << 8) | ((v5 ^ a3) << 16);
  v15 = ((v9 ^ 0x6BE21CBA) & ~v14 | v14 & 0x1DE300) ^ 0x940563AC;
  LODWORD(STACK[0x64A8]) = (((((2 * v15) | 0x8807C0) - v15) << 8) + 1006379008) & 0xFC1EA400;
  v16 = (((v7[1343] ^ a3) << 8) | ((*(unsigned __int8 *)(v10 + 3050) ^ a3) << 16) | *(unsigned __int8 *)STACK[0x67F0]) ^ 0x7D3F7FEF;
  LODWORD(STACK[0x6690]) = (((v16 - ((2 * v16) & 0xCC7842)) << 8) + 1715216640) & 0x26D94500;
  v17 = STACK[0x6870];
  v18 = (unsigned __int8 *)STACK[0x6AC0];
  v19 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 1859) ^ a3) << 8) | ((*(unsigned __int8 *)(v3 + 2974) ^ a3) << 16);
  v20 = ((*(unsigned __int8 *)(STACK[0x6870] + 1032) ^ 0x4F6452) & ~v19 | v19 & 0xB09B00) << 8;
  v21 = v7[683];
  v22 = STACK[0x6A70];
  v23 = *(unsigned __int8 *)(STACK[0x6A70] + 2147);
  LODWORD(STACK[0x6800]) = (2
                          * (((v20 ^ 0x300814FF) & (*(unsigned __int8 *)(STACK[0x6A00] + 926) ^ 0x336CFF34) | v20 & 0xCC930000) ^ 0x4130022)) & 0x329F1304;
  v24 = ((v21 ^ a3) << 8) | ((v18[3763] ^ a3) << 16);
  v25 = ((v23 ^ 0x33701E) & ~v24 | v24 & 0xCC8F00) << 8;
  v26 = *(unsigned __int8 *)(STACK[0x6950] + 789);
  LODWORD(STACK[0x6668]) = ((v25 ^ 0xC88348FF) & (v26 ^ 0xC8A3EC83) | v25 & 0x375C1300) ^ 0x111C1104 | 0x2C2DBACD;
  v27 = (v26 << 16) | ((*(unsigned __int8 *)(STACK[0x6A40] + 3012) ^ a3) << 8);
  v28 = (v27 ^ 0xD842BEFF) & (*(unsigned __int8 *)(STACK[0x6980] + 311) ^ 0xD8F3BE49) | v27 & 0xC4100;
  v29 = (((v28 ^ 0xFFBEF7) + (v28 | 0x26D52C) + (v28 & 0xD92AD3)) << 8) + 256;
  v30 = v29 ^ 0x25508FFu;
  LODWORD(STACK[0x6708]) = v29 & 0x25806300;
  v31 = ((*(unsigned __int8 *)(STACK[0x69C0] + 1282) ^ a3) << 8) | ((v18[812] ^ a3) << 16);
  v32 = ((*(unsigned __int8 *)(STACK[0x6A10] + 501) ^ 0xCF40E8) & ~v31 | v31 & 0x30BF00) << 8;
  v33 = *(unsigned __int8 *)(STACK[0x6AB0] + 3452);
  v34 = ((v7[2701] ^ a3) << 8) | ((v18[8] ^ a3) << 16);
  v35 = ((*(unsigned __int8 *)(STACK[0x68C0] + 114) ^ 0xCFC7A6) & ~v34 | v34 & 0x303800) << 8;
  v36 = (v35 ^ 0x201880FF) & (v33 ^ 0xAD1D8DEB) | v35 & 0x52E27200;
  v37 = ((v35 ^ 0x201880FF) & (v33 ^ 0xAD1D8DEB) & 0x803F88E7 | v35 & 0x220000) ^ 0x801D88C2;
  LODWORD(STACK[0x66A0]) = v36 & 0x7FC07718 ^ 0x12C07209;
  v38 = *(unsigned __int8 *)(v3 + 2261);
  v39 = *(unsigned __int8 *)(STACK[0x6940] + 1062) << 8;
  LODWORD(STACK[0x6650]) = v32 & 0xB94A3C00;
  v40 = (((v39 | (v38 << 16)) ^ 0x244FF) & (v38 ^ 0x327538) | (v39 | (v38 << 16)) & 0xCD8A00) << 8;
  LODWORD(STACK[0x6658]) = ((v40 ^ 0x440224FF) & (v33 ^ 0xD742241D) | v40 & 0x28BDDB00) ^ 0x288C491B;
  v41 = v39 | ((*(unsigned __int8 *)(STACK[0x6990] + 1669) ^ a3) << 16);
  v42 = ((v41 ^ 0x8A00FF) & (*(unsigned __int8 *)(v17 + 1328) ^ 0x8A8995) | v41 & 0x757600) << 8;
  v43 = *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  LODWORD(STACK[0x6720]) = ((v42 ^ 0x740603FF) & (*(unsigned __int8 *)(v22 + 2496) ^ 0x742723D2) | v42 & 0x8BD8DC00) ^ 0x88908080;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(v43 - 12))(v30, v37, 144863992);
}

uint64_t sub_1009BEDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>)
{
  unint64_t v5;
  int v6;
  unint64_t v7;

  *(_DWORD *)(STACK[0xDE60] + a4 - 35072 * (v5 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + a3 - 35072 * (v7 / 0x2240));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8 * ((31368 * (a5 == 0)) ^ v6))
                                                            - 12))(a1, a2, a3 + 25676);
}

uint64_t sub_1009BEE7C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  LODWORD(STACK[0x5DD0]) = LODWORD(STACK[0x6710]) | LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x588C]) = LODWORD(STACK[0x66B0]) - LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x5934]) = LODWORD(STACK[0x6698]) - LODWORD(STACK[0x6688]);
  LODWORD(STACK[0x6688]) = v9 & (v8 ^ 0x13EB8595);
  LODWORD(STACK[0x64A0]) = v10 & (v7 ^ 0x3E15B5F);
  LODWORD(STACK[0x6648]) = v12 & (v11 ^ 0xD926BA1E);
  LODWORD(STACK[0x6750]) = a7 + 424642946;
  LODWORD(STACK[0x6640]) = v14 | 0xD3D24532;
  LODWORD(STACK[0x66B0]) = a1 & (v18 ^ 0xDA7F9C97);
  LODWORD(STACK[0x6630]) = v17 & (v13 ^ 0x46B5C396);
  LODWORD(STACK[0x6698]) = a2 - 1;
  LODWORD(STACK[0x6638]) = a6 | 0xF3164206;
  LODWORD(STACK[0x6710]) = v15 | 0xE5577716;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v16 + 1231)) - 4))();
}

uint64_t sub_1009BF050@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v9 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((*(unsigned __int8 *)(STACK[0xDE68] + v6 % 0x1808) ^ (a4 + 944653134)) - 944665943) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v6 % 0x1808) ^ 0x697CB17D) - 1769779581) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v6 % 0x1808) ^ 0x5132C493u) - 1362281619))
                   + 44008664)
                  % 0x2240));
  v10 = HIBYTE(v9);
  v11 = ((v9 & 0x56 ^ 0xE6491E56) - (v9 & 0x56) + (v9 ^ 0x89)) & 0xC00013FF;
  v12 = ((BYTE1(v9) ^ 0x1A) + ((v9 >> 8) & 0x2A ^ 0x34FB8020) - ((BYTE1(v9) ^ 0x1A) & 0x2A)) ^ 0x3DBF2062;
  v13 = (BYTE2(v9) ^ a3) + (HIWORD(v9) & 0xB9 ^ 0xC5688899) - ((BYTE2(v9) ^ a3) & 0x28002B9);
  v14 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((v10 ^ a2) + 1437148549) ^ ((v10 ^ 0x8716E0F8) - 553054900) ^ ((v10 ^ 0x8AA0288A)
                                                                                               - 759184070))
                              + 215267015)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (5621
                                                                              * (((v13 ^ 0xA603DFC5) - 868697015) ^ ((v13 ^ 0x36D12832) + 1558858688) ^ ((v13 ^ 0x45BA3F4C) + 797007042))
                                                                              + 164255879)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v15 = (*(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * (((((v12 | 0x8E561434) - (v12 | v4) + v4) ^ 0xD818619A) + 866965459) ^ ((((v12 | 0x8E561434) - (v12 | v4) + v4) ^ 0xFCBEAACF) + 386538632) ^ ((((v12 | 0x8E561434) - (v12 | v4) + v4) ^ 0xA3B47FE1) + 1208011178))
                             + 1758009865)
                            % 0x1808) ^ 0xF233043C) & ~v14;
  v16 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v11 ^ (v7 + 2917)) - 2082308054) ^ ((v11 ^ 0xE9E697C7) + 578415687) ^ ((v11 ^ 0x619B7E4F) - 1442576945))
                            - 827435744)
                           % 0x1808);
  v17 = ((((((v15 | v14 & 0xCCFB00) ^ (a1 + 2714)) + 7484819 - ((2 * ((v15 | v14 & 0xCCFB00) ^ (a1 + 2714))) & 0xE479AA)) << 8)
        + 475648) ^ 0xB5A11B4F) & (v16 ^ 0xFFFFFFC6) | v16 & 0xB0;
  *(_DWORD *)(STACK[0xDE60] + 4 * (v8 % 0x2240)) = ((v17 & 0xB5D498D0 ^ 0xB4D41851) + (v17 & 0x4A2B672F) - 1) ^ 0x5C2B150;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((47 * (v5 == 0)) ^ a4)) - 4))();
}

uint64_t sub_1009BF490@<X0>(int a1@<W1>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;

  LODWORD(STACK[0x5E98]) = LODWORD(STACK[0x6760]) - LODWORD(STACK[0x6780]) + 1460098186;
  LODWORD(STACK[0x5910]) = LODWORD(STACK[0x6688]) | LODWORD(STACK[0x66A8]);
  LODWORD(STACK[0x5CB0]) = LODWORD(STACK[0x6648]) | LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x5C38]) = 741194445 - LODWORD(STACK[0x6668]) + LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x57C8]) = LODWORD(STACK[0x6630]) | LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x5D10]) = LODWORD(STACK[0x6638]) - LODWORD(STACK[0x6658]) + 108322557;
  v5 = ((v3 ^ a1) << 16) | ((a2 ^ a1) << 8);
  v6 = ((v4 ^ 0x9F593C44) & ~v5 | v5 & 0xA6C300) ^ 0x2024C202;
  LODWORD(STACK[0x66A8]) = (((((2 * v6) & 0x85E508) - v6) << 8) - 1123190016) & 0xF930EB00;
  v7 = STACK[0xDE68];
  v8 = *(unsigned __int8 *)(STACK[0xDE68] + 3960);
  v9 = *(unsigned __int8 *)STACK[0x67C0];
  v10 = *(unsigned __int8 *)(STACK[0x6A60] + 713);
  STACK[0x6668] = STACK[0xDE68];
  v11 = ((v8 ^ a1) << 16) | ((*(unsigned __int8 *)(v7 + 2276) ^ a1) << 8);
  v12 = ((v10 ^ 0x4122B055) & ~v11 | v11 & 0xDD4F00) ^ 0x1E4D4C01;
  v13 = ((v12 + 692305 - ((2 * v12) & 0x1527E6)) << 8) + 238080;
  v14 = ((v13 ^ 0x8210E1FF) & (v9 ^ 0xE71FE7EC) | v13 & 0x18E01800) ^ 0x18200028;
  v15 = *(_QWORD *)(STACK[0x6AD8] + 8 * (a3 - 4088));
  LODWORD(STACK[0x5D90]) = v14 | 0x2B26559D;
  return ((uint64_t (*)(void))(v15 - 8))();
}

uint64_t sub_1009BF740@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  *(_DWORD *)(STACK[0xDE60] + v2 - 35072 * (v3 / 0x2240)) = *(_DWORD *)(STACK[0xDE60]
                                                                      + 4
                                                                      * (v4
                                                                       + ((a1 - 337) | 0x4036)
                                                                       - 8768 * ((((a1 - 337) | 0x4036u) + v4) / 0x2240)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ (2 * (v1 == 0)))) - 8))();
}

uint64_t sub_1009BF7D8(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x57C0]) = LODWORD(STACK[0x6770]) - LODWORD(STACK[0x6700]);
  v4 = 3 * (a1 ^ 0x40BB);
  LODWORD(STACK[0x5D00]) = LODWORD(STACK[0x6750]) - LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x5D40]) = LODWORD(STACK[0x6698]) + LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x6700]) = v1 & (v2 ^ 0x6CF14A8);
  LODWORD(STACK[0x6800]) = v4;
  LODWORD(STACK[0x5CA8]) = (v4 - 723957381) | v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8))();
}

uint64_t sub_1009BF8BC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v4 = STACK[0xDE68];
  v5 = *(unsigned __int8 *)(STACK[0xDE68]
                          + ((((LODWORD(STACK[0x6800]) + 651337095) & 0xD92D57B5) - 16431) * v3 + 26193860) % 0x1808);
  v6 = STACK[0xDE60];
  v7 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((v5 ^ 0x82C28246) + 2101181882) ^ ((v5 ^ 0x70EF0728) - 1894713128) ^ ((v5 ^ 0xF22D85D7)
                                                                                           + 231897641))
                   + 39046777)
                  % 0x2240));
  v8 = STACK[0x6A80];
  LODWORD(STACK[0x6750]) = *(unsigned __int8 *)(STACK[0x6810] + 3778);
  LODWORD(STACK[0x6780]) = a3 % 0x2240;
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(STACK[0x6880] + 622);
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(v8 + 3740);
  v9 = ((2 * (v7 ^ 0x958D0BF)) & 0x1020A01E) - (v7 ^ 0x958D0BF) + 904430064;
  v10 = ((BYTE2(v7) ^ 0x6F) + (HIWORD(v7) & 0x1E ^ 0x1529F710) - ((BYTE2(v7) ^ 0x6F) & 0x1E)) ^ 0x461F416;
  v11 = (((2 * (BYTE1(v7) ^ 0x4E)) | 0x2F19D238) - (BYTE1(v7) ^ 0x4E) + 1752372964) ^ 0xE30FFDCB;
  v12 = (5621 * (((v9 ^ 0xE2225BBF) - 958983614) ^ ((v9 ^ 0x181DD328) + 1021876951) ^ ((v9 ^ 0xC68FD927) - 495284006))
       + 482998415)
      % 0x1808;
  v13 = 5621
      * ((((((2 * v11) & 0xF4C1DE74) - v11 + 94310597) ^ 0x2C3AE403) - 1346317184) ^ (((((2 * v11) & 0xF4C1DE74)
                                                                                      - v11
                                                                                      + 94310597) ^ 0x2CF6FA5)
                                                                                    - 2127208486) ^ (((((2 * v11) & 0xF4C1DE74) - v11 + 94310597) ^ 0x5FE98F28) - 602685611))
      - 1455419075;
  v14 = ((*(unsigned __int8 *)(v4
                             + (5621
                              * (((HIBYTE(v7) ^ 0xCF4ED645) - 466918403) ^ ((HIBYTE(v7) ^ 0x232F6269) + 139122641) ^ ((HIBYTE(v7) ^ 0xEC61B469) - 956038703))
                              + 564382473)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(v4
                                                                             + (5621
                                                                              * ((((v10
                                                                                  - ((2 * v10) & 0x20800A90)
                                                                                  - 792271544) ^ 0x7075EFB2)
                                                                                + 717785438) ^ (((v10
                                                                                                - ((2 * v10) & 0x20800A90)
                                                                                                - 792271544) ^ 0xF1BDEA7C)
                                                                                              - 1426027372) ^ (((v10 - ((2 * v10) & 0x20800A90) - 792271544) ^ 0x4046E3C5) + 452691243))
                                                                              + 1074500353)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v15 = ((*(unsigned __int8 *)(v4 + (v13 + 2654) % 0x1808) ^ 0xBD2AC5B4) & ~v14 | v14 & 0xD53A00) ^ 0xD412D2;
  v16 = ((((((v15 | 0xD519F3) - (v15 | 0x2AE60C)) << 8) + 719719424) ^ 0x5D42D22) & (*(unsigned __int8 *)(v4 + v12) ^ 0xFFFFFF8A) | *(_BYTE *)(v4 + v12) & 0xDD) ^ 0x41A45688;
  *(_DWORD *)(v6 + 4 * LODWORD(STACK[0x6780])) = (((2 * v16) & 0x652CB4D2) - v16 - 848714346) ^ 0xE7F3205A;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v3 != 255) | (16 * (v3 != 255))) ^ LODWORD(STACK[0x6800])))
                            - 8))();
}

uint64_t sub_1009BFE38@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  uint64_t (*v37)(void);
  unint64_t v38;

  LODWORD(STACK[0x57B0]) = 1460028391 - LODWORD(STACK[0x6740]) + LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x5C80]) = LODWORD(STACK[0x66B0]) | LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x5830]) = LODWORD(STACK[0x6700]) | LODWORD(STACK[0x66A8]);
  v17 = ((v11 ^ v6) << 16) | ((v10 ^ v6) << 8);
  v18 = ((v9 ^ 0x1CCBF6) & ~v17 | v17 & 0xE33400) << 8;
  LODWORD(STACK[0x6488]) = ((v18 ^ 0xE11400FF) & (v8 ^ 0xE1160F78) | v18 & 0x1EE9F000) ^ 0x8A95038;
  v19 = LODWORD(STACK[0x6750]) ^ 1;
  v20 = LODWORD(STACK[0x6750]) ^ 0xB8;
  v21 = ((a2 ^ v6) << 16) | ((v4 ^ v6) << 8);
  v22 = ((LODWORD(STACK[0x6760]) ^ 0x5EF9D25A) & ~v21 | v21 & 0x62D00) ^ 0x21000418;
  v23 = (((v22 | 0xC750F0) - (v22 | 0x38AF0F)) << 8) + 950996736;
  LODWORD(STACK[0x5C88]) = ((v23 ^ 0xC15164FF) & (LODWORD(STACK[0x6770]) ^ 0xDBD56651) | v23 & 0x242A9900) ^ 0x24001805;
  v24 = ((a1 ^ v6) << 8) | ((v15 ^ v6) << 16);
  LODWORD(STACK[0x5CA0]) = (((v16 ^ 0x5F4653) & ~v24 | v24 & 0xA0B900) << 8) & 0x7E96CA00;
  v25 = ((v2 ^ v6) << 8) | ((v5 ^ v6) << 16);
  v26 = ((v14 ^ 0x5D6E1446) & ~v25 | v25 & 0x91EB00) ^ 0xA080EB00;
  v27 = (((v26 | 0xA2904C) - (v26 | 0x5D6FB3)) << 8) + 1567601408;
  LODWORD(STACK[0x6498]) = (((v27 ^ 0x319008FF) & (v13 ^ 0x3DF8BB74) | v27 & 0xC2074400) ^ 0x40034422) & 0x5D249AAE;
  v28 = ((((v3 << 8) | ((v12 ^ v6) << 16)) ^ 0xB04FF) & (v3 ^ 0xBBC7D) | ((v3 << 8) | ((v12 ^ v6) << 16)) & 0xF44300) << 8;
  LODWORD(STACK[0x5C48]) = ((v28 ^ 0xA0400AFF) & (v14 ^ 0xAA458A84) | v28 & 0x55BA7500) ^ 0x502A25C2;
  v29 = ((*(unsigned __int8 *)(STACK[0x6A90] + 2443) ^ v6) << 8) | ((*(unsigned __int8 *)(STACK[0x6990] + 1707) ^ v6) << 16);
  v30 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 1654) ^ 0x51415EC0) & ~v29 | v29 & 0xBEA100) ^ 0x8C228182;
  v31 = ((((2 * v30) | 0x6D471A) - v30) << 8) - 916688128;
  LODWORD(STACK[0x5C78]) = ((v31 ^ 0x2A8300FF) & (*(unsigned __int8 *)(STACK[0x6AB0] + 3452) ^ 0x2B9774EA) | v31 & 0xD4688B00) ^ 0x40800A4 | 0xA1490107;
  v32 = ((*(unsigned __int8 *)(STACK[0x6960] + 933) ^ v6) << 8) | ((*(unsigned __int8 *)(STACK[0x6A40] + 577) ^ v6) << 16);
  v33 = ((*(unsigned __int8 *)(STACK[0x6A00] + 1965) ^ 0x993AF6F8) & ~v32 | v32 & 0xC50900) ^ 0x60040822;
  v34 = ((v33 + 13637131 - ((2 * v33) & 0xA041B6)) << 8) + 708608;
  LODWORD(STACK[0x5C10]) = ((v34 ^ 0x12046FF) & (*(unsigned __int8 *)STACK[0x69C0] ^ 0xA36A46DE) | v34 & 0x5C95B900) ^ 0x1C818988 | 0xB22A25EB;
  v35 = ((*(unsigned __int8 *)(STACK[0x68D0] + 3854) ^ v6) << 16) | ((*(unsigned __int8 *)(STACK[0x66D8] + 463) ^ v6) << 8);
  v36 = ((*(unsigned __int8 *)(STACK[0x6920] + 3543) ^ 0x2FEA5EFB) & ~v35 | v35 & 0x15A100) ^ 0x80110029;
  LODWORD(STACK[0x6480]) = (((((2 * v36) & 0x14DE2A) - v36) << 8) - 175052288) & 0x373B0800;
  v37 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8);
  HIDWORD(v38) = __PAIR64__(v19, v20) >> 3;
  LODWORD(v38) = HIDWORD(v38);
  LODWORD(STACK[0x5C08]) = v38 >> 29;
  return v37();
}

uint64_t sub_1009C0508(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;

  *(_DWORD *)(STACK[0xDE60] + 4 * (a4 % (v8 ^ (v10 + 263) ^ (v9 + 3305)))) = *(_DWORD *)(STACK[0xDE60] + a8 - 35072 * (a7 / 0x2240));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * (a6 == 0)) | (8 * (a6 == 0))) ^ v8)) - 8))(a1, a2, a3, a4 + 6419, a5, (a6 - 1), a7 + 6419, a8 + 25676);
}

uint64_t sub_1009C0594@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  LODWORD(STACK[0x6800]) = v8 + 240762846;
  LODWORD(STACK[0x5AB0]) = LODWORD(STACK[0x6710]) - LODWORD(STACK[0x6720]) - 1923857291;
  LODWORD(STACK[0x63B0]) = (v8 - 1049958435) | a3;
  LODWORD(STACK[0x5BE8]) = v6 << 8;
  LODWORD(STACK[0x5C70]) = a5 | 0xB698F4AC;
  LODWORD(STACK[0x5BD8]) = v9 & (v12 | 0x81693500);
  LODWORD(STACK[0x6490]) = a2 + a1;
  LODWORD(STACK[0x5BB8]) = v5 | 0x1BEA244E;
  LODWORD(STACK[0x5C30]) = v7 | 0x5EB6FEF8;
  LODWORD(STACK[0x5BF8]) = v10 | 0x4DD5DA14;
  LODWORD(STACK[0x63A8]) = v11 & (a4 ^ 0xC8C4F7B6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22461 * (v8 != -701120008)) ^ (v8 + 240749857))) - 12))();
}

uint64_t sub_1009C0714()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unint64_t v20;
  unint64_t v21;

  v7 = STACK[0xDE68];
  v8 = STACK[0xDE60];
  v9 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((*(unsigned __int8 *)(v7 + v2 % 0x1808) ^ 0xAAC38F01) + 1430024447) ^ ((*(unsigned __int8 *)(v7 + v2 % 0x1808) ^ (LODWORD(STACK[0x6800]) + 1008246252))
                                                                                            - 1008266025) ^ ((*(unsigned __int8 *)(v7 + v2 % 0x1808) ^ 0x96DB6491) + 1764006767))
                   + 30798362)
                  % 0x2240));
  v10 = STACK[0x6A70];
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(STACK[0x6A70] + 1988);
  LODWORD(STACK[0x65E0]) = *(unsigned __int8 *)(STACK[0x6670] + 1950);
  LODWORD(STACK[0x65E8]) = v3[2170];
  LODWORD(STACK[0x65D8]) = *(unsigned __int8 *)(STACK[0x69A0] + 2390);
  v11 = STACK[0x6A90];
  LODWORD(STACK[0x6638]) = *(unsigned __int8 *)(STACK[0x6A90] + 1730);
  LODWORD(STACK[0x65C0]) = v4[577];
  LODWORD(STACK[0x6630]) = *(unsigned __int8 *)(STACK[0x6930] + 2898);
  LODWORD(STACK[0x6600]) = *(unsigned __int8 *)(STACK[0x6A80] + 3156);
  LODWORD(STACK[0x65D0]) = *(unsigned __int8 *)(STACK[0x6AB0] + 190);
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)STACK[0x6840];
  LODWORD(STACK[0x65C8]) = *(unsigned __int8 *)(v11 + 3323);
  LODWORD(STACK[0x6648]) = *(unsigned __int8 *)(v10 + 46);
  LODWORD(STACK[0x6610]) = *(unsigned __int8 *)(STACK[0x6970] + 531);
  LODWORD(STACK[0x6618]) = v4[1305];
  LODWORD(STACK[0x6628]) = *(unsigned __int8 *)(STACK[0x6A60] + 1153);
  LODWORD(STACK[0x6780]) = v5 % 0x2240;
  LODWORD(STACK[0x6698]) = *(unsigned __int8 *)(STACK[0x6A00] + 2519);
  LODWORD(STACK[0x6650]) = *(unsigned __int8 *)(STACK[0x6990] + 956);
  v12 = (v9 ^ 0x64990896) + (v9 & 0x60 ^ 0x13049460) - ((v9 ^ 0x64990896) & 0x4100060);
  v13 = ((2 * (BYTE2(v9) ^ 0x8703006)) | 0xD1AB035C) - (BYTE2(v9) ^ 0x8703006) + 388660818;
  LODWORD(v11) = ((((BYTE1(v9) ^ 0x4D) + ((v9 >> 8) & 0x46 ^ 0x2BC7BB02) - ((BYTE1(v9) ^ 0x4D) & 0x46)) & 0x1BC ^ 0x6E155029)
                + 0x7FFFFFFF) | ((BYTE1(v9) ^ 0x4D) + ((v9 >> 8) & 0x46 ^ 0x2BC7BB02) - ((BYTE1(v9) ^ 0x4D) & 0x46)) & 0xE43 ^ 0x9002AA43;
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(STACK[0x6A30] + 1464);
  v14 = *(unsigned __int8 *)(v7
                           + (5621
                            * (((v13 ^ 0x35D54D90) - 926379704) ^ ((v13 ^ 0x6615B22B) - 1693946115) ^ ((v13 ^ 0xB3654E37) + 1316524769))
                            + 1869578782)
                           % 0x1808);
  v15 = *(unsigned __int8 *)(v7
                           + (5621
                            * (((v11 ^ 0x898B2F4C) - 1105865499) ^ ((v11 ^ 0x7A424279)
                                                                                + 1306311122) ^ ((v11 ^ 0xDDE9C87)
                                                                                               + 977299248))
                            - 470952877)
                           % 0x1808);
  v16 = *(unsigned __int8 *)(v7
                           + (5621
                            * (((HIBYTE(v9) ^ 0xBA1B3F19) + 808084330) ^ ((HIBYTE(v9) ^ 0x338CDCBF) - 1178763056) ^ ((HIBYTE(v9) ^ 0x8997E3E3) + 61259668))
                            - 1273296516)
                           % 0x1808);
  LODWORD(v7) = *(unsigned __int8 *)(v7
                                   + (5621
                                    * (((v12 ^ 0x618EA627) + 275289662) ^ ((v12 ^ 0x7741FBD7) + 111659982) ^ ((v12 ^ 0x6542C1F9u) + 346354148))
                                    - 608214010)
                                   % 0x1808);
  v17 = ((v14 ^ 0xB9) << 8) | ((v16 ^ 0xB9) << 16);
  LODWORD(STACK[0x65F0]) = *(unsigned __int8 *)(v1 + 3505);
  v18 = ((v15 ^ 0x81100799) & ~v17 | v17 & 0xEFF800) ^ 0x5A45201F;
  LODWORD(v7) = (((((((2 * v18) | 0xF3DD82) - v18) << 8) - 2045690112) ^ 0xABD5AA89) & (v7 ^ 0xFFFFFF56) | v7 & 0x76) ^ 0x28438A56;
  v19 = (((2 * v7) | 0xDD641778) - v7 - 1857162172) ^ 0x84C907AC;
  LODWORD(v7) = *(unsigned __int8 *)(STACK[0x66C0] + 2678);
  *(_QWORD *)(v6 - 152) = 5621;
  LODWORD(STACK[0x6740]) = v7;
  v20 = STACK[0x6A10];
  LODWORD(STACK[0x65F8]) = *(unsigned __int8 *)(STACK[0x69E0] + 167);
  LODWORD(STACK[0x6700]) = *(unsigned __int8 *)STACK[0x6790];
  LODWORD(STACK[0x6708]) = *(unsigned __int8 *)(v20 + 539);
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)(v1 + 4074);
  LODWORD(STACK[0x6608]) = v3[2807];
  v21 = STACK[0x69D0];
  LODWORD(STACK[0x6640]) = *(unsigned __int8 *)STACK[0x69F0];
  LODWORD(STACK[0x6620]) = v4[2587];
  LODWORD(STACK[0x6688]) = *(unsigned __int8 *)(STACK[0x6920] + 2056);
  LODWORD(STACK[0x6690]) = *(unsigned __int8 *)(STACK[0x6A20] + 448);
  LODWORD(STACK[0x6658]) = v3[3581];
  LODWORD(STACK[0x6710]) = *(unsigned __int8 *)(v21 + 774);
  LODWORD(STACK[0x66A8]) = *(unsigned __int8 *)(STACK[0x68D0] + 3854);
  LODWORD(STACK[0x66B0]) = v3[994];
  LODWORD(STACK[0x6730]) = *(unsigned __int8 *)(v10 + 2496);
  LODWORD(STACK[0x6750]) = *(unsigned __int8 *)(STACK[0x68F0] + 372);
  *(_DWORD *)(v8 + 4 * LODWORD(STACK[0x6780])) = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((123 * (v0 == 0)) ^ LODWORD(STACK[0x6800]))) - 12))();
}

uint64_t sub_1009C0E90@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  uint64_t (*v71)(void);

  LODWORD(STACK[0x5C18]) = v8;
  LODWORD(STACK[0x5704]) = LODWORD(STACK[0x5BE8]) + LODWORD(STACK[0x5C08]);
  LODWORD(STACK[0x5CA0]) |= LODWORD(STACK[0x5BD8]);
  v17 = LODWORD(STACK[0x5BB8]) - LODWORD(STACK[0x5C48]);
  v18 = LODWORD(STACK[0x6800]) - 8543;
  LODWORD(STACK[0x5CA8]) += 723932573 - LODWORD(STACK[0x5D90]);
  LODWORD(STACK[0x5C48]) = v17 + 1913318873;
  LODWORD(STACK[0x5D90]) = -1305860629 - LODWORD(STACK[0x5C10]) + LODWORD(STACK[0x5BF8]);
  v19 = ((LODWORD(STACK[0x65E0]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x65D8]) ^ 0xB9) << 16);
  v20 = (LODWORD(STACK[0x65E8]) ^ 0x9ECEE21B) & ~v19;
  LODWORD(STACK[0x65E8]) = v12;
  v21 = (((v20 & 0x34021A | v19 & 0x300000) ^ 0x40202)
       + ((v20 | v19 & 0x311D00) ^ 0x4130181C)
       - (((v20 | v19 & 0x311D00) ^ 0x4130181C) & 0x34021A)) << 8;
  v22 = STACK[0x6760];
  v23 = ((v21 ^ 0x150300FF) & (LODWORD(STACK[0x6760]) ^ 0x1DCB201F) | v21 & 0xE234DF00) ^ 0xA200C451;
  v24 = LODWORD(STACK[0x6630]) ^ 0x2D54E5;
  v25 = LODWORD(STACK[0x6638]) ^ 0xB9;
  v26 = STACK[0x6600];
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x6600]) << 8;
  v27 = (((v26 << 8) | (v25 << 16)) ^ 0x2D44FF) & v24 | ((v26 << 8) | (v25 << 16)) & 0xD2AB00;
  v28 = (((v27 << 8) ^ 0x920220FF) & (LODWORD(STACK[0x65C0]) ^ 0x9BEF708C) | (v27 << 8) & 0x64108F00) ^ 0x24108008;
  v29 = ((LODWORD(STACK[0x65D0]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x65C8]) ^ 0xB9) << 16);
  v30 = ((v26 ^ 0x7DC48D42) & ~v29 | v29 & 0x3B7200) ^ 0x80321200;
  v31 = ((v30 + 11414846 - ((2 * v30) & 0x5C48A0)) << 8) - 585216;
  LODWORD(STACK[0x6638]) = v31 ^ 0x264450FF;
  LODWORD(STACK[0x6800]) = v31 & 0x81A8AF00;
  v32 = ((LODWORD(STACK[0x6610]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x6618]) ^ 0xB9) << 8);
  v33 = ((LODWORD(STACK[0x6628]) ^ 0x5740C7EB) & ~v32 | v32 & 0xBF3800) ^ 0x20230805;
  v34 = (((v33 | 0xB72E93) - (v33 | 0x48D16C)) << 8) + 1221684224;
  LODWORD(STACK[0x6648]) = ((v34 ^ 0x1120BFF) & (LODWORD(STACK[0x6648]) ^ 0x81120B75) | v34 & 0x7EEDF400) ^ 0x7280F402;
  v35 = v15;
  v36 = STACK[0x6720];
  v37 = ((LODWORD(STACK[0x6650]) ^ 0xB9) << 16) | (LODWORD(STACK[0x6720]) << 8);
  v38 = ((v37 ^ 0x293B00FF) & (v14 ^ 0x293B21CF) | v37 & 0xC4DE00) ^ 0x46C0CC01;
  v39 = (((v38 | 0xF19C5B) - (v38 | 0xE63A4)) << 8) + 241411072;
  LODWORD(STACK[0x6698]) = (((v39 ^ 0xB41401FF) & (LODWORD(STACK[0x6698]) ^ 0xB45D052E) | v39 & 0x4BA2FA00) ^ 0xFC5F9FFF)
                         + 467822504;
  v40 = STACK[0x65F0];
  v41 = (((((v16 ^ 0xB9) << 16) | (v40 << 8)) ^ 0x4702FF) & (a7 ^ 0x4733BD) | (((v16 ^ 0xB9) << 16) | (v40 << 8)) & 0xB8CC00) << 8;
  v42 = (v41 ^ 0x9004E9FF) & (a6 ^ 0xD186EDAB) | v41 & 0x2E791200;
  v43 = v42 ^ 0x26380229;
  LODWORD(STACK[0x6650]) = v42 & 0x774C5F28 ^ 0x51445D00;
  v44 = a2 << 8;
  v45 = ((((a2 << 8) | ((a3 ^ 0xB9) << 16)) ^ 0x9A3444FF) & (v13 ^ 0x9A34DDEB) | ((a2 << 8) | ((a3 ^ 0xB9) << 16)) & 0xCB2200) ^ 0x50B222D;
  v46 = (((v45 | 0xFB8E8D) - (v45 | 0x47172)) << 8) + 74543616;
  v47 = (v46 ^ 0x190800FF) & (a1 ^ 0xD9497273) | v46 & 0x26B68D00;
  v48 = ((((v40 << 16) | ((a5 ^ 0xB9) << 8)) ^ 0x4048FF) & (v10 ^ 0xF1485B) | ((v40 << 16) | ((a5 ^ 0xB9) << 8)) & 0xEB700) << 8;
  v49 = STACK[0x6740];
  v50 = ((v48 ^ 0x2101CFF) & (LODWORD(STACK[0x6740]) ^ 0xB181E72) | v48 & 0xF4E7E100) ^ 0xA4458120;
  v51 = ((a4 ^ 0xB9) << 8) | ((a8 ^ 0xB9) << 16);
  v52 = (v9 ^ 0x2EBF1FC3) & ~v51 | v51 & 0x40E000;
  v53 = ((v52 ^ 0x402004) - (v52 & 0x3FDF0A) + (v52 & 0x3FDF0A ^ 0x3FDF0A)) << 8;
  v54 = ((v53 ^ 0x380F03FF) & (LODWORD(STACK[0x65F8]) ^ 0xF8CF63A6) | v53 & 0x7309C00) ^ 0x20088E0;
  v55 = (((v44 | ((LODWORD(STACK[0x6700]) ^ 0xB9) << 16)) ^ 0xF82E04FF) & (LODWORD(STACK[0x6708]) ^ 0xF82E05C6) | (v44 | ((LODWORD(STACK[0x6700]) ^ 0xB9) << 16)) & 0xD1FA00) ^ 0x2818A80;
  v56 = (((v55 | 0xD3FF22) - (v55 | 0x2C00DD)) << 8) + 738254080;
  v57 = ((v56 ^ 0x832120FF) & (LODWORD(STACK[0x66A0]) ^ 0x9369ECCA) | v56 & 0x6C961300) ^ 0x6C121304;
  v58 = (((LODWORD(STACK[0x6770]) << 8) | ((v35 ^ 0xB9) << 16)) ^ 0x3740FF) & (LODWORD(STACK[0x65E8]) ^ 0x37706A) | ((LODWORD(STACK[0x6770]) << 8) | ((v35 ^ 0xB9) << 16)) & 0xC88F00;
  v59 = (((v58 << 8) ^ 0xC80428FF) & (LODWORD(STACK[0x6608]) ^ 0xDE3CAB49) | (v58 << 8) & 0x21C35400) ^ 0xC11001;
  v60 = (((LODWORD(STACK[0x6620]) ^ 0xED844B03) & (((v22 << 8) | (v36 << 16)) ^ 0xED7EC6FF) & 0x5C6773 | ((v22 << 8) | (v36 << 16)) & 0x582400) ^ 0x46332)
      + (((LODWORD(STACK[0x6620]) ^ 0xED844B03) & (((v22 << 8) | (v36 << 16)) ^ 0xED7EC6FF) & 0xA3988C | ((v22 << 8) | (v36 << 16)) & 0x239000) ^ 0x228001);
  LODWORD(STACK[0x6708]) = ((((v60 << 8) - 256) ^ 0x400661FF) & (LODWORD(STACK[0x6640]) ^ 0x530EE953) & 0xF5C583D4 | ((v60 << 8) - 256) & 0xA4C10200) ^ 0x4010205;
  v61 = ((LODWORD(STACK[0x6688]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x6658]) ^ 0xB9) << 16);
  v62 = ((LODWORD(STACK[0x6690]) ^ 0xB778E31F) & ~v61 | v61 & 0x871C00) ^ 0x40021009;
  v63 = ((LODWORD(STACK[0x66A8]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x66B0]) ^ 0xB9) << 8);
  v64 = ((LODWORD(STACK[0x6710]) ^ 0x87D1656B) & ~v63 | v63 & 0x2E9A00) ^ 0x58040001;
  v65 = ((v64 + 15809444 - ((2 * v64) & 0xE2852E)) << 8) + 455424;
  LODWORD(STACK[0x66A0]) = ((v65 ^ 0xFFFFBFFF) & (v49 ^ 0x5148C864) & 0x5F79FADA | v65 & 0xE313200) ^ 0x6211203;
  v66 = v47 ^ 0x4168120;
  LODWORD(STACK[0x6690]) = (2 * v57) & 0x438EED92;
  v67 = LODWORD(STACK[0x6780]) | ((v11 ^ 0xB9) << 16);
  v68 = (v67 ^ 0x7304FF) & (LODWORD(STACK[0x6730]) ^ 0x732D30);
  LODWORD(STACK[0x6710]) = (((((2 * v62) | 0x7081A8) - v62) << 8) + 1203710976) & 0x6294300;
  v69 = (v68 | v67 & 0x8CD200) << 8;
  v70 = STACK[0x6648];
  LODWORD(STACK[0x66B0]) = (((v69 ^ 0x884242FF) & (LODWORD(STACK[0x6750]) ^ 0xB84FC353) | v69 & 0x47B03C00) ^ 0xBCFFFFFF)
                         - 142041684;
  v71 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v18) - 4);
  LODWORD(STACK[0x6760]) = v23;
  LODWORD(STACK[0x6720]) = v28;
  LODWORD(STACK[0x6628]) = v70 | 0xAB79955B;
  LODWORD(STACK[0x6620]) = v43 & 0x774C5F28;
  LODWORD(STACK[0x6780]) = v66;
  LODWORD(STACK[0x6630]) = v50 | 0x14C37EEE;
  LODWORD(STACK[0x6700]) = v54 | 0x6124117C;
  LODWORD(STACK[0x6750]) = v59 & 0x567A78AB;
  return v71();
}

uint64_t sub_1009C1C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_DWORD *)(STACK[0xDE60] + a4 - 35072 * (v6 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + v7 - 35072 * (v8 / 0x2240));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * ((2007 * (v4 == ((v5 - 560) ^ 0x28AE))) ^ v5))
                                                                     - 4))(a1, a2, a3, a4 + 25676);
}

uint64_t sub_1009C1CBC(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x64A0]) | LODWORD(STACK[0x64A8]);
  LODWORD(STACK[0x56E8]) = LODWORD(STACK[0x5C70]) - LODWORD(STACK[0x5C88]) + 615744938;
  LODWORD(STACK[0x5BD8]) = -1589051129 - LODWORD(STACK[0x5C78]) + LODWORD(STACK[0x5C30]);
  LODWORD(STACK[0x6688]) = a8 | 0xB1BB79EC;
  LODWORD(STACK[0x6618]) = a3 | 0xF473A424;
  LODWORD(STACK[0x6740]) = (((v14 ^ 0xD8) + 2119640854) ^ v18) & STACK[0x6638];
  LODWORD(STACK[0x6610]) = v13 | 0x54866AA4;
  LODWORD(STACK[0x6658]) = v8 & 0xC83B30B0;
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x6650]) + v17;
  LODWORD(STACK[0x6770]) = a2 | 0x350367A0;
  LODWORD(STACK[0x6650]) = a7 | 0xEB3C8111;
  LODWORD(STACK[0x6648]) = v12 | 0x9EDBEE83;
  LODWORD(STACK[0x6600]) = v10 - 1580763447;
  LODWORD(STACK[0x6730]) = v11 + v9;
  LODWORD(STACK[0x6638]) = a5 - 1;
  LODWORD(STACK[0x6640]) = v15 & (LODWORD(STACK[0x5C18]) ^ 0xF9D6BCE8);
  LODWORD(STACK[0x65F8]) = a6 - 1;
  LODWORD(STACK[0x66A8]) = v16 & 0x10EEC4A8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v14) - 8))(2207649605);
}

uint64_t sub_1009C1F34(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v12 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419
                    * (((*(unsigned __int8 *)(STACK[0xDE68] + v11 % 0x1808) ^ 0x680C6984) - 1745643908) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v11 % 0x1808) ^ 0xDEC13E04) + 557761020) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v11 % 0x1808) ^ 0xB6CD5739) + 1228056775))
                    + 22569204)
                   % 0x2240));
  v13 = ((v12 & 0xA ^ 0x1C31AF09) + (v12 & 0xF5) - 1) ^ 0x50F15FD7;
  v14 = ((v12 >> 8) & 0xE7 ^ v10) + ((v12 >> 8) & 0x18 ^ 0x15820011) - 1;
  v15 = (BYTE2(v12) ^ 0x86005924) + (HIWORD(v12) & 0xA5 ^ 0x3139A481) - ((BYTE2(v12) ^ 0x86005924) & 0x60018A5);
  v16 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((((v13 | v7) - (v13 | a1) + a1) ^ v9) - 1585924640) ^ ((((v13 | v7) - (v13 | a1) + a1) ^ 0x99E280A0)
                                                                                     + 2081426873) ^ ((((v13 | v7) - (v13 | a1) + a1) ^ 0xEDC1B8FD) + 137573862))
                            + 1320061387)
                           % 0x1808);
  v17 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((HIBYTE(v12) ^ 0x7A322805) + 974236588) ^ ((HIBYTE(v12) ^ 0xFCCF4187) - 1125334486) ^ ((HIBYTE(v12) ^ 0x86FD69C7) - 958469526))
                              - 1239868850)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (5621
                                                                              * (((v15 ^ 0xB86D78A0) - 1905305661) ^ ((v15 ^ 0xC8AD1648) - 22070997) ^ ((v15 ^ 0xC1F98B4D) - 134503376))
                                                                              - 1374863934)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v18 = ((((*(unsigned __int8 *)(STACK[0xDE68]
                               + (5621
                                * (((v14 ^ 0xE9556769) + 1663629504) ^ ((v14 ^ 0xAFAE86E8) + 634591551) ^ ((v14 ^ 0x197D3064) - 1828671565))
                                - 1694721178)
                               % 0x1808) ^ 0xC4E38B) & ~v17 | v17 & 0x3B1C00) << 8) ^ 0xFA337351) & (v16 ^ 0xFFFFFF44) | v16 & 0xAE;
  *(_DWORD *)(STACK[0xDE60] + 4 * (a5 % 0x2240)) = ((v18 & 0x2C28F8BB ^ 0x2C2060BB)
                                                    + (v18 & 0xD3D70744 ^ (v8 + 1899))
                                                    - 1) ^ 0x17D6F7B9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((216 * (v5 != 0)) ^ v6)) - 8))();
}

uint64_t sub_1009C2344(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  int v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;

  LODWORD(STACK[0x55A8]) = LODWORD(STACK[0x63B0]) - LODWORD(STACK[0x6488]) + 645350754;
  LODWORD(STACK[0x559C]) = LODWORD(STACK[0x63A8]) | LODWORD(STACK[0x6480]);
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x6618]) - LODWORD(STACK[0x6720]) - 2050609682;
  LODWORD(STACK[0x5990]) = -1418095269 - LODWORD(STACK[0x6628]) + LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x55AC]) = LODWORD(STACK[0x6608]) - LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x5BB8]) = 348356334 - LODWORD(STACK[0x6630]) + LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x5988]) = LODWORD(STACK[0x6600]) - LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x5938]) = LODWORD(STACK[0x6638]) + LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x65F8]) + LODWORD(STACK[0x66A0]);
  v12 = ((v9 ^ v7) << 16) | ((v11 ^ v7) << 8);
  v13 = ((v10 ^ 0xCDF693CF) & ~v12 | v12 & 0x96C00) ^ 0x4408;
  HIDWORD(v14) = ~v10;
  LODWORD(v14) = (((2 * v13) | 0x1F9430) - v13 + 292566504) ^ 0x791D66;
  HIDWORD(v14) = v14 >> 1;
  LODWORD(v14) = HIDWORD(v14);
  LODWORD(STACK[0x6650]) = ((v14 >> 31) << 8) & 0x4862A000;
  v15 = ((*(unsigned __int8 *)(STACK[0x69C0] + 607) ^ v7) << 8) | ((*(unsigned __int8 *)(a7 + 1464) ^ v7) << 16);
  v16 = ((*(unsigned __int8 *)(STACK[0x6A10] + 3983) ^ 0xD8FA90B0) & ~v15 | v15 & 0x56F00) ^ 0x4056CC6;
  v17 = (((v16 | 0x66C480) - (v16 | 0x993B7F)) << 8) - 1724154112;
  LODWORD(STACK[0x6720]) = ((v17 ^ 0x66C520FF) & (a3[1616] ^ 0xFFF52597) | v17 & 0xADA00) ^ 0xA9051;
  v18 = STACK[0x6A60];
  v19 = ((*(unsigned __int8 *)(STACK[0x6A60] + 235) ^ v7) << 8) | ((a3[3892] ^ v7) << 16);
  v20 = ((*(unsigned __int8 *)(STACK[0x6850] + 137) ^ 0xC068BA4B) & ~v19 | v19 & 0x974500) ^ 0x13950400;
  v21 = ((((2 * v20) & 0x996AC4) - v20) << 8) - 1286955776;
  LODWORD(STACK[0x6630]) = (2
                          * (((v21 ^ 0xB10B10FF) & (*(unsigned __int8 *)(STACK[0x6A80] + 3740) ^ 0xF38B34C6) | v21 & 0xC74CB00) ^ 0x4208900)) & 0x8AC2DD4C;
  v22 = STACK[0x68B0];
  v23 = ((*(unsigned __int8 *)(STACK[0x68B0] + 152) ^ v7) << 8) | ((*(unsigned __int8 *)(STACK[0x6AB0] + 357) ^ v7) << 16);
  LODWORD(STACK[0x66A0]) = (((*(unsigned __int8 *)(STACK[0x6900] + 1176) ^ 0xA3DD73) & ~v23 | v23 & 0x5C2200) << 8) & 0x8FA31100;
  v24 = *(unsigned __int8 *)STACK[0x67F0];
  v25 = *(unsigned __int8 *)STACK[0x6960] << 8;
  v26 = v25 | ((*(unsigned __int8 *)STACK[0x69E0] ^ v7) << 16);
  v27 = ((v26 ^ 0xE6A344FF) & (*(unsigned __int8 *)STACK[0x67B0] ^ 0xE6A3C545) | v26 & 0x5C3A00) ^ 0x1082A02;
  v28 = (((v27 | 0x401F78) - (v27 | 0xBFE087)) << 8) - 1075804416;
  v29 = ((v28 ^ 0x101428FF) & (v24 ^ 0x72D428BB) | v28 & 0x8D2BD700) ^ 0x2AD791;
  v30 = *(unsigned __int8 *)(v18 + 1062);
  v31 = STACK[0x6A20];
  v32 = (v30 << 8) | ((*(unsigned __int8 *)(STACK[0x6A20] + 448) ^ v7) << 16);
  LODWORD(v18) = ((v32 ^ 0xEBE400FF) & (*(unsigned __int8 *)STACK[0x69F0] ^ 0xEBE431EC) | v32 & 0x1BCE00) ^ 0x1402C202;
  LODWORD(v18) = ((((2 * (_DWORD)v18) | 0xC37140) - (_DWORD)v18) << 8) - 1639489536;
  v33 = STACK[0x6AC0];
  v34 = ((v18 ^ 0x403400FF) & (*(unsigned __int8 *)STACK[0x6820] ^ 0x4474108C) | v18 & 0xBB8BEF00) ^ 0x3B888200;
  v35 = ((*(unsigned __int8 *)(STACK[0x67E0] + 2845) ^ v7) << 8) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 1768) ^ v7) << 16);
  v36 = ((v30 ^ 0xDC61460C) & ~v35 | v35 & 0x9EB900) ^ 0x98B048;
  v37 = (((v36 | 0x64E92D) - (v36 | 0x9B16D2)) << 8) - 1693003264;
  v38 = ((v37 ^ 0x628008FF) & (*(unsigned __int8 *)STACK[0x69B0] ^ 0xEB8A5845) | v37 & 0x1475A700) ^ 0x10500602;
  v39 = ((v25 | (*(unsigned __int8 *)(STACK[0x68D0] + 3854) << 16)) ^ 0xE40006FF) & (*(unsigned __int8 *)(STACK[0x69D0] + 1381) ^ 0xE411A7FD) | (v25 | (*(unsigned __int8 *)(STACK[0x68D0] + 3854) << 16)) & 0xEE5800;
  v40 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 1783) ^ v7) << 8) | ((*(unsigned __int8 *)(STACK[0x67F0] + 1168) ^ v7) << 16);
  v41 = ((*(unsigned __int8 *)(STACK[0x6880] + 622) ^ 0xA294C0) & ~v40 | v40 & 0x5D6B00) << 8;
  LODWORD(STACK[0x6690]) = (((v39 & 0xEFA60E ^ 0x47A604) + (v39 ^ 0x3A858AB) - ((v39 ^ 0x3A858AB) & 0xEFA60E)) << 8) & 0x960BA900;
  LODWORD(STACK[0x6628]) = v41 & 0x27F86000;
  v42 = ((*(unsigned __int8 *)(STACK[0x6A90] + 3323) ^ v7) << 16) | ((*(unsigned __int8 *)(STACK[0x6A40] + 979) ^ v7) << 8);
  v43 = (*(unsigned __int8 *)STACK[0x66F0] ^ 0x9D8308) & ~v42;
  v44 = ((((v43 | v42 & 0x627C00) << 8) ^ 0x2400AFF) & (*(unsigned __int8 *)(STACK[0x6890] + 895) ^ 0x86C38A0F) | ((v43 | v42 & 0x627C00) << 8) & 0x793C7500) ^ 0x3EC18EEB;
  v45 = (v24 << 8) | ((*(unsigned __int8 *)(STACK[0x68F0] + 372) ^ v7) << 16);
  v46 = ((a3[2170] ^ 0xCF407E) & ~v45 | v45 & 0x30BF00) << 8;
  v47 = ((v46 ^ 0x300210FF) & (*(unsigned __int8 *)(v22 + 1745) ^ 0x7393D3C6) | v46 & 0x8C6C2C00) ^ 0xD18F3F48;
  v48 = ((*(unsigned __int8 *)(v33 + 8) ^ v7) << 16) | ((*(unsigned __int8 *)(STACK[0x6A90] + 2936) ^ v7) << 8);
  v49 = ((*(unsigned __int8 *)(STACK[0x6930] + 3065) ^ 0xF75E7A) & ~v48 | v48 & 0x8A100) << 8;
  LODWORD(STACK[0x6708]) = ((v49 ^ 0x8A018FF) & (*(unsigned __int8 *)(v31 + 228) ^ 0x68A49950) & 0x2BE1BE56 | v49 & 0x3412600) ^ 0x402005;
  LODWORD(STACK[0x6618]) = (2 * v47) & 0x4F47E404;
  LODWORD(STACK[0x6608]) = v29 | 0x1FF3736F;
  LODWORD(STACK[0x6620]) = v34 | 0x7C3A5B8D;
  LODWORD(STACK[0x6610]) = v38 | 0x73C3E42C;
  LODWORD(STACK[0x6638]) = v44;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v8 + 2211)))();
}

uint64_t sub_1009C2D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;

  *(_DWORD *)(STACK[0xDE60] + 4 * (v8 % (v7 ^ 0x1059u))) = *(_DWORD *)(STACK[0xDE60] + v10 - 35072 * (v9 / 0x2240));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((28862 * (a7 == 0)) ^ v7)))();
}

uint64_t sub_1009C2DE0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  LODWORD(STACK[0x64A8]) = LODWORD(STACK[0x6688]) - LODWORD(STACK[0x6760]) - 1490926838;
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x6698]) + LODWORD(STACK[0x6658]);
  LODWORD(STACK[0x5C70]) = 1629753724 - LODWORD(STACK[0x6700]) + LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x5724]) = LODWORD(STACK[0x6640]) | LODWORD(STACK[0x6710]);
  LODWORD(STACK[0x6648]) = v6 & (v5 ^ 0xB79D5FE7);
  LODWORD(STACK[0x6760]) = v10 | 0xCCFC6082;
  LODWORD(STACK[0x6640]) = a1 - 983470426;
  LODWORD(STACK[0x6698]) = v13 & (v9 ^ 0x705CEEC2);
  LODWORD(STACK[0x6600]) = v7 | 0xE00C8C90;
  LODWORD(STACK[0x6710]) = a2 | 0x83C5A472;
  LODWORD(STACK[0x65F8]) = a3 | 0x8C3C1BD3;
  LODWORD(STACK[0x6688]) = v4 & (v11 ^ 0x69F45648);
  LODWORD(STACK[0x65C0]) = v14 & (v16 ^ 0xD8079F95);
  LODWORD(STACK[0x6658]) = v12 | 0x24619858;
  LODWORD(STACK[0x65F0]) = a4 - 1482427902;
  LODWORD(STACK[0x6700]) = v15 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 ^ 0x7324)) - 8))();
}

uint64_t sub_1009C300C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;

  v10 = *(unsigned __int8 *)(STACK[0xDE68] + ((((v7 + 159436037) | 0x40023180u) - 1233332685) * v8 + 26193860) % 0x1808);
  v11 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419
                    * (((v10 ^ 0xFF091EBA) + 16179526) ^ ((v10 ^ 0x9ABC7E95) + 1698922859) ^ ((v10 ^ 0x65B56096)
                                                                                            - 1706385558))
                    + 32454464)
                   % 0x2240));
  v12 = ((v11 >> 8) & 0x8F ^ 0x5A5AE586) + ((v11 >> 8) & 0x70 ^ 0x21) - 1;
  v13 = ((2 * (v11 ^ 0x56)) | 0x7BAE1CF0) - (v11 ^ 0x56) + 1109979528;
  v14 = ((BYTE2(v11) ^ 0x1E) + (HIWORD(v11) & 0xB4 ^ 0x2F49F0A0) - ((BYTE2(v11) ^ 0x1E) & 0xB4)) & 0x24001FFF;
  v15 = (v13 & 0x15C1053A ^ 0x280410B) + (v13 & 0x28161AC5) - 1;
  v16 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v15 ^ 0x75F40D8B) + 122203984) ^ ((v15 ^ 0x13993D97) + 1629855572) ^ ((v15 ^ 0x593A7FC7u) + 730258692))
                            + 346754946)
                           % 0x1808);
  v17 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((HIBYTE(v11) ^ 0xF96CAFD9) + 787829976) ^ ((HIBYTE(v11) ^ 0x8665F574) + 1375473275) ^ ((HIBYTE(v11) ^ 0x7F095AE8) - 1466916377))
                              + 166591342)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (5621
                                                                              * (((v14 ^ 0x6C3BF793) + 310638447) ^ ((v14 ^ 0x45D5D197) + 997052779) ^ ((v14 ^ a3) + 1935029880))
                                                                              + 375878694)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v18 = (*(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * (((v12 ^ 0xAE5D1671) + 1775005433) ^ ((v12 ^ 0xA36A438E) + 1694186248) ^ ((v12 ^ 0x576DB08B) - 1862481917))
                             + 1242869012)
                            % 0x1808) ^ 0x9ADB6944) & ~v17 ^ 0xD6B5100 ^ (v17 & 0x249600 | 0x65000002);
  *(_DWORD *)(STACK[0xDE60] + 4 * (6419 * ((a7 & 0x2C14) + (v8 ^ 0x160Au)) % 0x2240)) = ((((((v18 | 0x4DF0BB)
                                                                                             - (v18 | (v9 + 2372))) << 8)
                                                                                           - 1307622400) ^ 0xCFA7249) & (v16 ^ 0xFFFFFFE4) | v16 & 0xB6) ^ 0xB416E406;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8663 * (v8 == 255)) ^ v7)) - 8))();
}

uint64_t sub_1009C3490@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  uint64_t (*v22)(void);

  LODWORD(STACK[0x5868]) = LODWORD(STACK[0x6740]) | LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x5578]) = LODWORD(STACK[0x6730]) - LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x5760]) = LODWORD(STACK[0x6648]) | LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x5940]) = LODWORD(STACK[0x6640]) - LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x5C30]) = 536048495 - LODWORD(STACK[0x6608]) + LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x65C8]) = 1942217772 - LODWORD(STACK[0x6610]) + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x64A0]) = LODWORD(STACK[0x65C0]) | LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x5C78]) = LODWORD(STACK[0x65F0]) - LODWORD(STACK[0x6618]);
  v10 = ((v8 ^ a3) << 8) | ((v9 ^ a3) << 16);
  v11 = (((v5 - 1233338307) ^ v10) & (v7 ^ 0xA5BD9A) | v10 & 0x5A4200) << 8;
  v12 = ((v11 ^ 0x120204FF) & (a4 ^ 0x331F2413) | v11 & 0xCCE0DB00) ^ 0x4CC0D815;
  v13 = ((a1 ^ a3) << 16) | ((a2 ^ a3) << 8);
  v14 = ((v4 ^ 0xA2C3D29B) & ~v13 | v13 & 0x3C2D00) ^ 0x9342C81;
  v15 = (v14 + 13428298 - ((2 * v14) & 0x99CC94)) << 8;
  LODWORD(STACK[0x6648]) = (((v15 ^ 0x44E210FF) & (v6 ^ 0x67FA78F7) | v15 & 0x98058700) ^ 0x90018430) & 0xCE45E3D;
  v16 = *(unsigned __int8 *)(STACK[0x6A30] + 1464);
  HIDWORD(v17) = (v16 >> 1) ^ 0x5C;
  LODWORD(v17) = ~(v16 << 7) << 24;
  v18 = ((*(unsigned __int8 *)(STACK[0x68D0] + 888) ^ a3) << 8) | ((v17 >> 31) << 16);
  v19 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 4074) ^ 0xEEE75D) & ~v18 | v18 & 0x111800) << 8;
  LODWORD(STACK[0x6650]) = ((v19 ^ 0x11FF) & (*(unsigned __int8 *)(STACK[0x68C0] + 91) ^ 0x20C17581) & 0x50B5059E | v19 & 0x50340000) ^ 0x50300001;
  v20 = ((*(unsigned __int8 *)(STACK[0x6AA0] + 3581) ^ a3) << 16) | ((*(unsigned __int8 *)(STACK[0x6A50] + 266) ^ a3) << 8);
  v21 = (*(unsigned __int8 *)(STACK[0x6AA0] + 1616) ^ 0x21EBBF46) & ~v20 | v20 & 0x144000;
  LODWORD(STACK[0x6628]) = ((((v21 ^ 0xFBBFFF) + ((2 * v21) | 0x1C8762)) << 8) - 239316992) & 0x1AB1EB00;
  v22 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v5 ^ 0x4983367F ^ (8121 * (v5 > 0x230A829)))) - 4);
  LODWORD(STACK[0x6630]) = (2 * v12) & 0xE93BE8AA;
  return v22();
}

uint64_t sub_1009C3920(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;

  *(_DWORD *)(STACK[0xDE60] + v10 - 35072 * (a4 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + a7 - 35072 * (a6 / 0x2240));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v8 == 0) * (a8 + ((v9 - 1113693702) & (v11 + 4074)) + 200)) ^ v9))
                            - 4))();
}

uint64_t sub_1009C39C0@<X0>(int a1@<W1>, int a2@<W2>, unsigned int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;

  v7 = 5 * (a3 ^ 0x851E7372);
  LODWORD(STACK[0x5574]) = LODWORD(STACK[0x6770]) - LODWORD(STACK[0x6780]) - 444707792;
  LODWORD(STACK[0x5700]) = LODWORD(STACK[0x6760]) - LODWORD(STACK[0x6720]) - 1719545921;
  LODWORD(STACK[0x5504]) = 2084199309 - LODWORD(STACK[0x6620]) + LODWORD(STACK[0x6710]);
  LODWORD(STACK[0x592C]) = LODWORD(STACK[0x6658]) - LODWORD(STACK[0x6638]) - 305187884;
  LODWORD(STACK[0x6658]) = a4 + 1956508757;
  LODWORD(STACK[0x6640]) = v5 + v4;
  LODWORD(STACK[0x6620]) = v6 - 1;
  LODWORD(STACK[0x6800]) = v7;
  LODWORD(STACK[0x6608]) = ((v7 - 447873201) ^ a1) & a2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)((501 * (a3 > 0x4950A7F2)) ^ (a3 + 2061606287)))
                                          - 8))(255);
}

uint64_t sub_1009C3B58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  unsigned int v8;
  unint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;

  v9 = STACK[0xDE68];
  v10 = *(unsigned __int8 *)(STACK[0xDE68] + a8 % 0x1808);
  v11 = (LODWORD(STACK[0x6800]) - 931114351) & 0x377FBFE6;
  LODWORD(STACK[0x6780]) = v11;
  v12 = STACK[0xDE60];
  v13 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419
                    * (((v10 ^ 0x979B2F83) + 1751437437) ^ ((v10 ^ 0x333FAFD6) - 859811798) ^ ((v10 ^ (v11 - 1532733142))
                                                                                             + 1532722964))
                    + 29148679)
                   % 0x2240));
  v14 = STACK[0x6920];
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(STACK[0x6920] + 84);
  v15 = STACK[0x6990];
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(STACK[0x6A20] + 797);
  LODWORD(STACK[0x6730]) = *(unsigned __int8 *)(v14 + 319);
  v16 = STACK[0x6A40];
  LODWORD(STACK[0x6740]) = *(unsigned __int8 *)(STACK[0x6A40] + 3012);
  LODWORD(STACK[0x6750]) = *(unsigned __int8 *)(v16 + 2587);
  LODWORD(STACK[0x6710]) = *(unsigned __int8 *)(v15 + 956);
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(STACK[0x6870] + 1032);
  v17 = ((v13 ^ 0x3D) - ((2 * (v13 ^ 0x3D)) & 0x62) - 85425615) ^ 0xDBA95733;
  v18 = *(unsigned __int8 *)(STACK[0x6A90] + 1457);
  LODWORD(v15) = *(unsigned __int8 *)(v9
                                    + (5621
                                     * ((((v17 - ((2 * v17) & 0x2018120) - 1046820720) ^ 0xAAE8B2FA) - 2014649764) ^ (((v17 - ((2 * v17) & 0x2018120) - 1046820720) ^ 0x3BE8A10E) + 384496048) ^ (((v17 - ((2 * v17) & 0x2018120) - 1046820720) ^ 0x71DB0EA4) + 1557749254))
                                     + 764167312)
                                    % 0x1808);
  v19 = ((*(unsigned __int8 *)(v9
                             + (5621
                              * (((BYTE2(v13) ^ 0xB0945520) - 1035594164) ^ ((BYTE2(v13) ^ 0xBCAE6A22) - 830723766) ^ ((BYTE2(v13) ^ 0xC3A3F26) + 2129165390))
                              - 550978662)
                             % 0x1808) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(v9
                                                                            + (5621
                                                                             * (((HIBYTE(v13) ^ 0x8A95AF1A) + 14295213) ^ ((HIBYTE(v13) ^ 0xEA261A5E) + 1617532393) ^ ((HIBYTE(v13) ^ 0x60B3B501) - 352568648))
                                                                             + 485813926)
                                                                            % 0x1808) ^ 0xB9) << 16);
  v20 = (*(unsigned __int8 *)(v9
                            + (5621
                             * (((BYTE1(v13) ^ 0x7DB57C54) - 957939843) ^ ((BYTE1(v13) ^ 0xE608EA4E) + 1566271847) ^ ((BYTE1(v13) ^ 0x9BBD96C8) + 552474081))
                             - 517484301)
                            % 0x1808) ^ 0x891FE5A5) & ~v19;
  LODWORD(v15) = (((((((2 * ((v20 | v19 & 0xE01A00) ^ 0x62800A23)) & 0x200460) - ((v20 | v19 & 0xE01A00) ^ 0x62800A23)) << 8)
                  - 268579072) ^ 0xE06F3A13) & (v15 ^ 0xFFFFFF82) | v15 & 0xEC) ^ 0x9800080;
  *(_DWORD *)(v12 + 4 * (v8 % 0x2240)) = (v15 - ((2 * v15) & 0x5E2BEF9C) + 789968846) ^ 0xF3CCEF0A;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                              + 8 * ((10210 * (a1 == 0)) ^ LODWORD(STACK[0x6800])))
                                                  - 8))((a1 - 1), v18);
}

uint64_t sub_1009C4070@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  unsigned __int8 *v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unint64_t v57;
  int v58;
  int v59;
  unsigned __int8 *v60;
  int v61;
  int v62;
  unint64_t v63;
  int v64;
  int v65;
  unint64_t v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unint64_t v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unint64_t v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unint64_t v84;
  int v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unint64_t v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  LODWORD(STACK[0x6638]) = a3;
  LODWORD(STACK[0x54FC]) = LODWORD(STACK[0x66B0]) + LODWORD(STACK[0x66A8]);
  LODWORD(STACK[0x58A0]) = LODWORD(STACK[0x6688]) | LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x583C]) = LODWORD(STACK[0x6658]) - LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x5C88]) = LODWORD(STACK[0x6620]) + LODWORD(STACK[0x6650]);
  v17 = v15 ^ a4;
  v18 = STACK[0x6780];
  v19 = (v17 << (LODWORD(STACK[0x6780]) + 78)) | ((v14 ^ a4) << 8);
  v20 = (v13 ^ 0x1D39B380) & ~v19 | v19 & 0xC64C00;
  v21 = ((v20 & 0xF3BF0D ^ 0x31B309) + (v20 ^ 0x82C24CC4) - ((v20 ^ 0x82C24CC4) & 0xF3BF0D)) << 8;
  v22 = (v21 ^ 0x87FF87FF) & (v12 ^ 0x8B2C17E9) | v21 & 0x74D3E800;
  LODWORD(STACK[0x6688]) = v22 & 0x41B9F4B4 ^ 0x1A87431;
  LODWORD(STACK[0x66B0]) = v22 & 0xBE460B4B;
  v23 = ((v11 ^ a4) << 16) | ((v10 ^ a4) << 8);
  v24 = (v8 ^ 0x5A35BA08) & ~v23 | v23 & 0xCA4500;
  v25 = ((v24 & 0xF2C0C3 ^ 0xD0C0C1) + (v24 ^ 0x3427150E) - ((v24 ^ 0x3427150E) & 0xF2C0C3)) << 8;
  LODWORD(STACK[0x6658]) = (v25 ^ 0x131081FF) & (LODWORD(STACK[0x6720]) ^ 0x5331B9A8) | v25 & 0xACCE4600;
  v26 = (LODWORD(STACK[0x6760]) << 16) | ((LODWORD(STACK[0x6730]) ^ a4) << 8);
  v27 = ((v26 ^ 0x46EDFF) & (LODWORD(STACK[0x6740]) ^ 0x4EEDCC) | v26 & 0xB11200) << 8;
  v28 = (v27 ^ 0xAFF) & (LODWORD(STACK[0x6760]) ^ 0xCCC16B16) | v27 & 0x333E9400;
  LODWORD(STACK[0x6730]) = v28 ^ 0x10E8450;
  LODWORD(STACK[0x6600]) = v28 & 0x57B04766 ^ 0x56B04326;
  v29 = ((LODWORD(STACK[0x6770]) ^ a4) << 8) | ((a1 ^ a4) << 16);
  v30 = (LODWORD(STACK[0x6710]) ^ 0x56D4DBED) & ~v29 | v29 & 0x2B2400;
  v31 = (((v30 & 0x720669 ^ 0x220021) + (v30 & 0x8DF996 ^ 0x85F995)) << 8) - 256;
  LODWORD(STACK[0x6770]) = ((v31 ^ 0x84D518FF) & (LODWORD(STACK[0x6750]) ^ 0xE7F7D8B4) | v31 & 0x18082700) ^ 0x80823D0;
  v32 = ((v16 ^ a4) << 16) | ((v7 ^ a4) << 8);
  v33 = ((a2 ^ 0x17C2F7) & ~v32 | v32 & 0xE83D00) << 8;
  LODWORD(STACK[0x65F8]) = v33 ^ 0xC825A0FF;
  LODWORD(STACK[0x6740]) = v33 & 0x30DA5700;
  v34 = ((v6 ^ a4) << 8) | ((v9 ^ a4) << 16);
  v35 = ((a5 ^ 0x7D2746) & ~v34 | v34 & 0x82D800) << 8;
  v36 = (v35 ^ 0x820000FF) & (v5 ^ 0xC607B4FE) | v35 & 0x39F84B00;
  v37 = v36 & 0xB51AB84C ^ 0x841AB84D;
  LODWORD(STACK[0x65C0]) = v36 & 0x4AE547B3;
  v38 = STACK[0x68F0];
  v39 = STACK[0x6A70];
  v40 = STACK[0x6A60];
  v41 = *(unsigned __int8 *)(STACK[0x6A60] + 1153);
  v42 = ((*(unsigned __int8 *)(STACK[0x68F0] + 372) ^ a4) << 16) | ((*(unsigned __int8 *)(STACK[0x6A70] + 1988) ^ a4) << 8);
  v43 = ((v41 ^ 0xD8E0735B) & ~v42 | v42 & 0x1F8C00) ^ 0x20A000D;
  v44 = ((((2 * v43) | 0x9EECC2) - v43) << 8) + 814325504;
  LODWORD(STACK[0x65F0]) = v44 ^ 0x901251FF;
  LODWORD(STACK[0x6710]) = v44 & 0x4BE9AE00;
  v45 = STACK[0x6A20];
  v46 = *(unsigned __int8 *)(STACK[0x6A20] + 2921);
  v47 = STACK[0x6970];
  v48 = ((*(unsigned __int8 *)STACK[0x67C0] ^ a4) << 8) | (v46 << 16);
  v49 = (v48 ^ 0xFFFEFFFF) & (*(unsigned __int8 *)STACK[0x6970] ^ 0x99474A45) | v48 & 0xB8B500;
  v50 = (((v49 & 0xB6E741 ^ 0x200101) + (v49 & 0x4918BE ^ 0x4118BF)) << 8) - 256;
  LODWORD(STACK[0x6488]) = v50 ^ 0x24A0FF;
  LODWORD(STACK[0x63A8]) = v50 & 0xF3D85D00;
  v51 = STACK[0x6AB0];
  v52 = (unsigned __int8 *)STACK[0x6A90];
  v53 = ((*(unsigned __int8 *)(STACK[0x6A90] + 1457) ^ a4) << 16) | ((*(unsigned __int8 *)(STACK[0x67E0] + 2845) ^ a4) << 8);
  v54 = ((*(unsigned __int8 *)(v38 + 175) ^ 0xC4128E9B) & ~v53 | v53 & 0xED7100) ^ 0x18491019;
  v55 = ((v54 + 16607572 - ((2 * v54) & 0xFAE144)) << 8) + 478720;
  v56 = (v55 ^ 0x500120FF) & (*(unsigned __int8 *)(STACK[0x6AB0] + 1510) ^ 0x764D292E) | v55 & 0x89B2D600;
  v57 = STACK[0x69A0];
  v58 = (v46 << 8) | ((*(unsigned __int8 *)(STACK[0x69A0] + 2041) ^ a4) << 16);
  v59 = ((v58 ^ 0x8606FF) & (*(unsigned __int8 *)STACK[0x68E0] ^ 0x86B702) | v58 & 0x794800) << 8;
  LODWORD(STACK[0x6760]) = ((v59 ^ 0x104004FF) & (*(unsigned __int8 *)(v45 + 395) ^ 0x12F69784) | v59 & 0xED096800) ^ 0x64006882;
  v60 = (unsigned __int8 *)STACK[0x6AC0];
  v61 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 3414) ^ a4) << 16) | ((*(unsigned __int8 *)(STACK[0x68C0] + 91) ^ a4) << 8);
  v62 = ((*(unsigned __int8 *)(v51 + 2352) ^ 0xF0CF1E) & ~v61 | v61 & 0xF3000) << 8;
  LODWORD(STACK[0x6480]) = v62 ^ 0xF1010FF;
  LODWORD(STACK[0x66A8]) = v62 & 0x40A0CA00;
  v63 = STACK[0x6AA0];
  v64 = ((*(unsigned __int8 *)(STACK[0x66C8] + 2299) ^ a4) << 16) | ((*(unsigned __int8 *)(STACK[0x6AA0] + 683) ^ a4) << 8);
  v65 = ((*(unsigned __int8 *)(v57 + 2390) ^ 0xF685AA) & ~v64 | v64 & 0x97A00) << 8;
  v66 = STACK[0x6A30];
  v67 = *(unsigned __int8 *)(STACK[0x6A30] + 1168);
  LODWORD(STACK[0x63B0]) = v65 ^ 0x148E8FF;
  LODWORD(STACK[0x5C18]) = v65 & 0xBEB30400;
  v68 = ((*(unsigned __int8 *)(v63 + 3581) ^ a4) << 16) | ((*(unsigned __int8 *)STACK[0x6960] ^ a4) << 8);
  v69 = ((v67 ^ 0x25F73E04) & ~v68 | v68 & 0x8C100) ^ 0xD2008040;
  v70 = ((((2 * v69) & 0x2EABC2) - v69) << 8) - 391504384;
  LODWORD(STACK[0x6800]) = ((v70 ^ 0xA0A918FF) & (v60[3505] ^ 0xBEB998F4) | v70 & 0x41466700) ^ 0x41442280;
  v71 = STACK[0x6A80];
  v72 = *(unsigned __int8 *)(STACK[0x6A80] + 3232) << 8;
  v73 = v72 | ((*(unsigned __int8 *)(v40 + 713) ^ a4) << 16);
  v74 = (((((v73 ^ 0xFFFF07FF) & (*(unsigned __int8 *)(v66 + 1464) ^ 0x5AE19E44) & 0x2341D | v73 & 0x22000) ^ 0x22000)
        + (((v73 ^ 0xFFFF07FF) & (*(unsigned __int8 *)(v66 + 1464) ^ 0x5AE19E44) & 0xFDCBE2 | v73 & 0x1C4100) ^ 0xF9CAE3)) << 8)
      - 256;
  LODWORD(STACK[0x5C08]) = v74 ^ 0x858A40FF;
  LODWORD(STACK[0x5C10]) = v74 & 0x6A71A000;
  v75 = *(unsigned __int8 *)(v71 + 1874);
  v76 = (v75 << 8) | ((v52[2936] ^ a4) << 16);
  v77 = ((v76 ^ 0xFFFF07FF) & (*(unsigned __int8 *)(v47 + 531) ^ 0x67051866) | v76 & 0xFAE700) ^ 0x88C8C020;
  v78 = (((v77 | 0x9056B0) - (v77 | 0x6FA94F)) << 8) + 1873366784;
  v79 = STACK[0x6A00];
  v80 = ((v41 ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6A00] + 3209) ^ 0xB9) << 16);
  v81 = ((*(unsigned __int8 *)(v45 + 228) ^ 0x1BB981) & ~v80 | v80 & 0xE44600) << 8;
  v82 = ((v81 ^ 0x444042FF) & (v52[99] ^ 0x547972DB) | v81 & 0xAB868D00) ^ 0xC916F819;
  v83 = ((*(unsigned __int8 *)(STACK[0x6990] + 1798) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6518] + 2185) ^ 0xB9) << 8);
  v84 = STACK[0x69B0];
  v85 = ((v60[2534] ^ 0x3DC906) & ~v83 | v83 & 0xC23600) << 8;
  LODWORD(STACK[0x6750]) = ((v85 ^ 0x1640FF) & (*(unsigned __int8 *)STACK[0x69B0] ^ 0x1D16C6CE) | v85 & 0xE2E93900) ^ 0xE2693908;
  v86 = STACK[0x6900];
  v87 = v72 | ((*(unsigned __int8 *)(v38 + 2079) ^ 0xB9) << 16);
  v88 = ((v87 ^ 0xF92D40FF) & (*(unsigned __int8 *)(STACK[0x6900] + 1176) ^ 0xF92D49C4) | v87 & 0xD2B600) ^ 0x6921680;
  v89 = ((v88 - ((2 * v88) & 0xED59C8)) << 8) + 1991042048;
  v90 = ((v89 ^ 0x103CA2FF) & (v75 ^ 0x197EA29C) | v89 & 0xE6815D00) ^ 0x448150D0;
  v91 = STACK[0x6A40];
  v92 = ((v60[8] ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6A40] + 577) ^ 0xB9) << 16);
  v93 = ((v52[1199] ^ 0x98A9E1) & ~v92 | v92 & 0x675600) << 8;
  LODWORD(v71) = *(unsigned __int8 *)(v71 + 2625);
  v94 = (v93 ^ 0x414200FF) & (v71 ^ 0xC1E208F1) | v93 & 0x3E1DF700;
  LODWORD(STACK[0x59A0]) = v94 & 0xE1371CD7 ^ 0xC12308C3;
  LODWORD(STACK[0x6630]) = v94 & 0x1EC8E328 ^ 0x12084201;
  v95 = ((*(unsigned __int8 *)(v40 + 1168) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x69D0] + 1548) ^ 0xB9) << 8);
  v96 = (*(unsigned __int8 *)STACK[0x67D0] ^ 0x708086) & ~v95 | v95 & 0x8F7F00;
  v97 = ((v96 << 8) ^ 0x854940FF) & (v52[3998] ^ 0xB5496D07) | (v96 << 8) & 0x4AB69200;
  v98 = ((*(unsigned __int8 *)(STACK[0x6A10] + 501) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6920] + 84) ^ 0xB9) << 16);
  v99 = (*(unsigned __int8 *)(v39 + 2481) ^ 0xE7743FC) & ~v98;
  v100 = ((((v99 & 0x5540E6 | v98 & 0x88BC00) ^ 0xDDDCE5) + (v99 | 0xDDFCE6)) << 8) + 570628352;
  LODWORD(STACK[0x5904]) = v100 ^ 0x140048FF;
  LODWORD(STACK[0x6720]) = v100 & 0x43603700;
  v101 = ((*(unsigned __int8 *)(v91 + 2587) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x68D0] + 888) ^ 0xB9) << 16);
  v102 = (*(unsigned __int8 *)(v86 + 220) ^ 0xA76862E7) & ~v101 | v101 & 0x979D00;
  v103 = (((v102 & 0x20A4BF ^ 0x80) + (v102 & 0xDF5B40 ^ 0x4E4A41)) << 8) - 256;
  LODWORD(STACK[0x58E8]) = v103 ^ 0x81D060FF;
  LODWORD(STACK[0x5BE8]) = v103 & 0x7C0F8700;
  v104 = v72 | ((*(unsigned __int8 *)STACK[0x67A0] ^ 0xB9) << 16);
  v105 = ((v104 ^ 0x1B9B42FF) & (*(unsigned __int8 *)(STACK[0x6A50] + 2610) ^ 0x1B9B5B9D) | v104 & 0x64A400) ^ 0xA420A080;
  v106 = (v105 + 4274463 - ((2 * v105) & 0x82723E)) << 8;
  LODWORD(v52) = ((v106 ^ 0x19144FF) & (v52[1123] ^ 0x1191E587) | v106 & 0xEE6E1A00) ^ 0x84640081;
  v107 = ((*(unsigned __int8 *)STACK[0x6790] ^ 0xB9) << 16) | ((v60[2792] ^ 0xB9) << 8);
  v108 = (*(unsigned __int8 *)(STACK[0x68B0] + 152) ^ 0x3035250D) & ~v107 | v107 & 0xCADA00;
  v109 = (((v108 & 0x864D2D ^ 0x800801) + (v108 & 0x79B2D2 ^ 0x31B093)) << 8) - 256;
  LODWORD(v71) = ((v109 ^ 0x336018FF) & (v71 ^ 0xB37819C7) | v109 & 0x4C87E600) ^ 0x806E200;
  v110 = ((*(unsigned __int8 *)(v79 + 2519) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x68B0] + 1472) ^ 0xB9) << 8);
  v111 = ((*(unsigned __int8 *)(v63 + 1237) ^ 0xBB83440B) & ~v110 | v110 & 0x7CBB00) ^ 0x4709B49;
  v112 = ((((2 * v111) & 0x886710) - v111) << 8) + 1003255552;
  LODWORD(STACK[0x58AC]) = v112 ^ 0x12E070FF;
  LODWORD(STACK[0x6690]) = v112 & 0x2D0D0F00;
  --LODWORD(STACK[0x6688]);
  LODWORD(v86) = LODWORD(STACK[0x6658]) ^ 0x31F76355;
  LODWORD(STACK[0x5AC0]) = v37 - 1;
  LODWORD(STACK[0x6658]) = (v56 | 0xDA11FE66) + 636354969;
  LODWORD(STACK[0x6618]) = v78 & 0x98C18C00;
  LODWORD(STACK[0x59A8]) = v78 ^ 0x221030FF;
  v113 = *(_QWORD *)(STACK[0x6AD8] + 8 * v18);
  LODWORD(STACK[0x5B78]) = v86;
  v114 = (2 * LODWORD(STACK[0x6770]));
  v115 = (2 * LODWORD(STACK[0x6760]));
  LODWORD(STACK[0x6780]) = v82;
  LODWORD(STACK[0x5BF8]) = v90;
  v116 = *(unsigned __int8 *)(v91 + 3012);
  LODWORD(STACK[0x587C]) = v60[1859];
  LODWORD(STACK[0x5870]) = *(unsigned __int8 *)(v84 + 1775);
  LODWORD(STACK[0x6610]) = STACK[0x6730] & 0x57B04766;
  LODWORD(STACK[0x6650]) = LODWORD(STACK[0x6750]) | 0xC1E7C946;
  LODWORD(STACK[0x5A88]) = (v97 ^ 0x48840240) & 0x3E3C2CA2;
  LODWORD(STACK[0x6620]) = (_DWORD)v52;
  LODWORD(STACK[0x5B98]) = v71;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(v113 - 8))(0, v115, v114, v116);
}

uint64_t sub_1009C53A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;

  *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * a1 + v8) % 0x2240u)) = *(_DWORD *)(STACK[0xDE60]
                                                                              + 4 * ((6419 * a1 + v9) % 0x2240u));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((110 * (((a8 + 4912) ^ 0x3ADD) + a1 != 256)) ^ a8))
                            - 8))();
}

uint64_t sub_1009C5428@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  LODWORD(STACK[0x5B80]) = LODWORD(STACK[0x6698]) | LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x57E0]) = LODWORD(STACK[0x6640]) - LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x6600]) += v9;
  LODWORD(STACK[0x59B0]) = v7 + v17;
  LODWORD(STACK[0x5978]) = a6 | 0xDC15D144;
  LODWORD(STACK[0x5948]) = a2 | 0x5E0021C2;
  LODWORD(STACK[0x66A0]) = STACK[0x65F8] & (LODWORD(STACK[0x6638]) ^ 0xCF25A80B);
  LODWORD(STACK[0x65F8]) = STACK[0x65F0] & (v19 ^ 0xB4165164);
  LODWORD(STACK[0x5924]) = STACK[0x6488] & (v15 ^ 0xC27A2ED);
  LODWORD(STACK[0x6648]) = v11 ^ 0xD2113A47;
  LODWORD(STACK[0x591C]) = a1 | 0x3C551BF2;
  LODWORD(STACK[0x65F0]) = STACK[0x6480] & (v6 ^ 0xBF5F35D7);
  LODWORD(STACK[0x5970]) = STACK[0x63B0] & (v18 ^ 0x414CFB8F);
  LODWORD(STACK[0x6730]) = v16 | 0xF3A2B71A;
  LODWORD(STACK[0x5968]) = STACK[0x5C08] & (v13 ^ 0x958E5F69);
  LODWORD(STACK[0x6488]) = STACK[0x59A8] & (v12 ^ 0x673E7340);
  LODWORD(STACK[0x5918]) = v14 & 0x7F6CC624;
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x6750]) | 0x3E1836B9;
  LODWORD(STACK[0x59A8]) = a5 | 0xEC791028;
  LODWORD(STACK[0x6480]) = LODWORD(STACK[0x59A0]) - 1;
  LODWORD(STACK[0x6698]) = STACK[0x5904] & (a3 ^ 0xBC9FC836);
  LODWORD(STACK[0x59A0]) = STACK[0x58E8] & (LODWORD(STACK[0x587C]) ^ 0x83F07836);
  LODWORD(STACK[0x63B0]) = a4 & 0xC24074A0;
  LODWORD(STACK[0x6750]) = v10 & 0xFBB38C7A;
  LODWORD(STACK[0x6638]) = STACK[0x58AC] & (LODWORD(STACK[0x5870]) ^ 0xD2F2F068);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 4))();
}

uint64_t sub_1009C57A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v10 = *(unsigned __int8 *)(STACK[0xDE68] + a5 % 0x1808);
  v11 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419
                    * (((v10 ^ 0xC4C76A87) + 993564025) ^ ((v10 ^ (95 * (v8 ^ 0x3ABB) - 464692449)) + 464682664) ^ ((v10 ^ 0x208AEB66) - 545975142))
                    + 7773409)
                   % 0x2240));
  v12 = (-1916606038 - (BYTE2(v11) ^ 0x8A) + ((2 * (BYTE2(v11) ^ 0x8A)) | 0xE47A2CAC)) ^ 0x38639654;
  v13 = ((2 * (v11 ^ 0xBC8F10DF)) | 0x36595A5A) - (v11 ^ 0xBC8F10DF) - 455912749;
  v14 = (BYTE1(v11) ^ 0x4C) - ((2 * (BYTE1(v11) ^ 0x4C)) & 0x108) + 644;
  v15 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * ((((((2 * v12) | 0x67E973CA) - v12 - 871676389) ^ 0x80EE792C) + 776048649) ^ (((((2 * v12) | 0x67E973CA) - v12 - 871676389) ^ 0xA894CC2A) + 104539407) ^ (((((2 * v12) | 0x67E973CA) - v12 - 871676389) ^ 0x51D08C4F) - 8428180))
                              - 1086375964)
                             % 0x1808) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                            + (5621
                                                                             * (((HIBYTE(v11) ^ 0xB320944D) + 1787530274) ^ ((HIBYTE(v11) ^ 0x37085107) - 291288724) ^ ((HIBYTE(v11) ^ 0x8428C50F) + 1568922980))
                                                                             - 1473305352)
                                                                            % 0x1808) ^ 0xB9) << 16);
  v16 = (*(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * (((v14 ^ 0x8037E3D8) - 239796664) ^ ((v14 ^ 0xDAB80C55) - 1422192181) ^ ((v14 ^ 0x5A8FED97) + 722268169))
                             - 1646948884)
                            % 0x1808) ^ 0xBD49027C) & ~v15;
  v17 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v13 ^ 0x34B48BE) + 1689733995) ^ ((v13 ^ 0x26E349DD) + 1092569610) ^ ((v13 ^ 0x820BBC6E) - 436748357))
                            + 194981512)
                           % 0x1808);
  v18 = (((((v16 | v15 & 0xB6FD00) ^ 0x32092A) + 7008456 - ((2 * ((v16 | v15 & 0xB6FD00) ^ 0x32092A)) & 0xD5E190)) << 8) ^ 0x6B8C8B5A) & (v17 ^ 0xFFFFFF63);
  *(_DWORD *)(STACK[0xDE60] + 4 * (a8 % 0x2240)) = (((2 * ((v18 | v17 & 0xA5) ^ 0x5805221)) & 0xDF25B8E2)
                                                    - ((v18 | v17 & 0xA5) ^ 0x5805221)
                                                    - 1871895666) ^ 0xAABE0FAB;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29722 * (v9 == 0)) ^ v8)) - 4))();
}

uint64_t sub_1009C5C20(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unint64_t v26;
  int v27;
  int v28;
  unsigned int v29;
  unint64_t v30;
  unsigned __int8 *v31;
  int v32;
  int v33;
  unint64_t v34;
  unsigned __int8 *v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  int v45;
  unsigned __int8 *v46;
  int v47;
  unsigned int v48;
  unsigned __int8 *v49;
  unint64_t v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned __int8 *v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  unsigned __int8 *v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unint64_t v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unint64_t v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unint64_t v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  uint64_t (*v134)(void);

  LODWORD(STACK[0x5870]) = LODWORD(STACK[0x6490]) - LODWORD(STACK[0x6498]);
  LODWORD(STACK[0x5C08]) = LODWORD(STACK[0x6608]) | LODWORD(STACK[0x6628]);
  v17 = LODWORD(STACK[0x5978]) - LODWORD(STACK[0x5B78]);
  v18 = LODWORD(STACK[0x5948]) - LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x54B8]) = LODWORD(STACK[0x5AC0]) + LODWORD(STACK[0x65C0]);
  LODWORD(STACK[0x65C0]) = LODWORD(STACK[0x5924]) | LODWORD(STACK[0x63A8]);
  v19 = LODWORD(STACK[0x591C]) - LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x58AC]) = LODWORD(STACK[0x5970]) | LODWORD(STACK[0x5C18]);
  LODWORD(STACK[0x5828]) = LODWORD(STACK[0x5968]) | LODWORD(STACK[0x5C10]);
  LODWORD(STACK[0x54AC]) = v17 + 301274974;
  LODWORD(STACK[0x57F4]) = v18 - 788533473;
  LODWORD(STACK[0x5730]) = v19 - 506105337;
  LODWORD(STACK[0x5720]) = LODWORD(STACK[0x5918]) - LODWORD(STACK[0x6780]) - 1068917523;
  LODWORD(STACK[0x54B4]) = LODWORD(STACK[0x59A8]) - LODWORD(STACK[0x5BF8]) - 1983678484;
  LODWORD(STACK[0x55C0]) = LODWORD(STACK[0x59B0]) - LODWORD(STACK[0x5A88]);
  LODWORD(STACK[0x54B0]) = LODWORD(STACK[0x59A0]) | LODWORD(STACK[0x5BE8]);
  LODWORD(STACK[0x5978]) = LODWORD(STACK[0x6750]) - LODWORD(STACK[0x5B98]) - 2111424062;
  v20 = ((v9 ^ a1) << 16) | ((v8 ^ a1) << 8);
  v21 = (v11 ^ 0x97ACA1EF) & (v20 ^ 0xBFADBFFF) | v20 & 0x535E00;
  v22 = (((v21 & 0x425ADB ^ 0x1A00) + (v21 & 0xBDA524 ^ 0xBCA125)) << 8) - 256;
  v23 = (v22 ^ 0x420501FF) & (v16 ^ 0x421D5330) | v22 & 0xBDE2AC00;
  LODWORD(STACK[0x5BF8]) = v23 ^ 0xBCC08072;
  LODWORD(STACK[0x5BE8]) = v23 & 0x14546C22 ^ 0x146C00;
  v24 = ((v7 ^ a1) << 16) | ((v15 ^ a1) << 8);
  v25 = ((v14 ^ 0xD1B8D268) & ~v24 | v24 & 0x472D00) ^ 0xC422026;
  HIDWORD(v26) = v14 ^ 1;
  LODWORD(v26) = (v25 - ((2 * v25) & 0x8250C8FC) - 483892098) ^ 0xD29688;
  LODWORD(STACK[0x5948]) = v26 >> 2;
  v27 = ((v10 ^ a1) << 16) | ((a7 ^ a1) << 8);
  v28 = (v13 ^ 0x28A9F476) & ~v27 | v27 & 0x560B00;
  v29 = ((v28 & 0x83B542 ^ 0x83B442) + (v28 ^ 0xC7040300) - ((v28 ^ 0xC7040300) & 0x83B542)) << 8;
  LODWORD(STACK[0x63A8]) = (v29 ^ 0xD1BC12FF) & (v12 ^ 0xF5FC13CE) | v29 & 0xA03EC00;
  v30 = STACK[0x6A10];
  v31 = (unsigned __int8 *)STACK[0x6AC0];
  v32 = ((*(unsigned __int8 *)(STACK[0x66B8] + 2314) ^ a1) << 8) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 615) ^ a1) << 16);
  v33 = (*(unsigned __int8 *)(STACK[0x6A10] + 3983) ^ 0xE3E1F0) & ~v32 | v32 & 0x1C1E00;
  LODWORD(STACK[0x6760]) = (((v33 << 8) ^ 0x181484FF) & (*(unsigned __int8 *)(STACK[0x6A10] + 3338) ^ 0x1B9485C8) | (v33 << 8) & 0xE46B7A00) ^ 0x480888;
  v34 = STACK[0x6AA0];
  v35 = (unsigned __int8 *)STACK[0x6AB0];
  v36 = STACK[0x6A30];
  v37 = ((*(unsigned __int8 *)(STACK[0x6AB0] + 61) ^ a1) << 8) | ((*(unsigned __int8 *)STACK[0x6A30] ^ a1) << 16);
  v38 = (*(unsigned __int8 *)(STACK[0x6AA0] + 1419) ^ 0xF145F6A2) & ~v37 | v37 & 0xBA0900;
  v39 = (((v38 & 0x4BF0C3 ^ 0x49F003) + (v38 & 0xB40F3C ^ 0x100105)) << 8) - 256;
  LODWORD(STACK[0x5B98]) = v39 ^ 0x605843FF;
  LODWORD(STACK[0x6628]) = v39 & 0x9FA5AC00;
  v40 = (unsigned __int8 *)STACK[0x69B0];
  v41 = (unsigned __int8 *)STACK[0x6990];
  v42 = (unsigned __int8 *)STACK[0x6A80];
  v43 = v31[1768];
  v44 = ((*(unsigned __int8 *)(STACK[0x6990] + 1669) ^ a1) << 16) | ((*(unsigned __int8 *)(STACK[0x6A80] + 2625) ^ a1) << 8);
  v45 = (((((v40[1775] ^ 0x228A042E) & ~v44 & 0x573D6F | v44 & 0x553900) ^ 0x101968)
        + (((v40[1775] ^ 0x228A042E) & ~v44 & 0xA8C290 | v44 & 0x20C200) ^ 0x880291)) << 8)
      - 256;
  LODWORD(STACK[0x6770]) = ((v45 ^ 0xCDE080FF) & (v43 ^ 0xDDF1CDDE) | v45 & 0x220E3200) ^ 0x2040088;
  v46 = (unsigned __int8 *)STACK[0x6A90];
  v47 = ((v31[812] ^ a1) << 16) | ((*(unsigned __int8 *)(STACK[0x6A90] + 1123) ^ a1) << 8);
  v48 = ((*(unsigned __int8 *)(STACK[0x6930] + 1836) ^ 0xBE70EFCB) & ~v47 | v47 & 0x8F1000) ^ 0x8F108C;
  LODWORD(STACK[0x5A88]) = ((((2 * v48) & 0x492156) - v48) << 8) + 1534022656;
  v49 = (unsigned __int8 *)STACK[0x6A60];
  v50 = v36;
  v51 = *(unsigned __int8 *)(v36 + 1464);
  v52 = ((*(unsigned __int8 *)(v30 + 539) ^ a1) << 8) | (v51 << 16);
  v53 = ((v52 ^ 0xB94264FF) & (v31[1654] ^ 0xB9736472) | v52 & 0x8C9B00) ^ 0x44088310;
  v54 = ((((2 * v53) | 0x93D3D4) - v53) << 8) + 907417088;
  v55 = (v54 ^ 0xC190CCFF) & (*(unsigned __int8 *)STACK[0x6A60] ^ 0xC998CDB8) | v54 & 0x36673200;
  LODWORD(STACK[0x6750]) = v55 ^ 0x2512A2;
  LODWORD(STACK[0x59A0]) = v55 & 0x17630B3B ^ 0x17420919;
  LODWORD(v36) = v35[2352];
  v56 = ((v41[1707] ^ a1) << 16) | ((v41[956] ^ a1) << 8);
  v57 = (v36 ^ 0x133D5E22) & ~v56 | v56 & 0xC2A100;
  v58 = (((v57 & 0xF9E8E6 ^ 0x861739) - (v57 | 0xF9E8E6)) << 8) - 102177280;
  LODWORD(STACK[0x6780]) = ((v58 ^ 0x440655FF) & (*(unsigned __int8 *)STACK[0x66F8] ^ 0xD54E7715) | v58 & 0x2AB18800) ^ 0x8818852;
  v59 = ((*(unsigned __int8 *)(v34 + 1237) ^ a1) << 16) | ((*(unsigned __int8 *)STACK[0x68C0] ^ a1) << 8);
  v60 = (unsigned __int8 *)STACK[0x6A40];
  v61 = ((*(unsigned __int8 *)(STACK[0x6A40] + 979) ^ 0xEC7A8256) & ~v59 | v59 & 0x857D00) ^ 0x12847000;
  v62 = (v61 + 6855492 - ((2 * v61) & 0xD13688)) << 8;
  LODWORD(STACK[0x5970]) = v62 ^ 0x608410FF;
  LODWORD(STACK[0x5C18]) = v62 & 0xB53C600;
  v63 = ((*(unsigned __int8 *)STACK[0x6950] ^ a1) << 8) | ((v60[2587] ^ a1) << 16);
  v64 = v46[1199];
  v65 = ((v64 ^ 0xCB9D73D) & ~v63 | v63 & 0x462800) ^ 0x30042850;
  v66 = ((v65 - ((2 * v65) & 0x643E4E)) << 8) - 1306581248;
  LODWORD(STACK[0x59B0]) = (v66 ^ 0xB01900FF) & (*(unsigned __int8 *)(v50 + 1866) ^ 0xB219B2C2) | v66 & 0x4DE64D00;
  v67 = ((v46[1457] ^ a1) << 16) | ((v35[1821] ^ a1) << 8);
  v68 = ((v60[3012] ^ 0x63E7E427) & ~v67 | v67 & 0x181B00) ^ 0x9C001021;
  v69 = ((((2 * v68) | 0xD281CA) - v68) << 8) + 381623040;
  LODWORD(STACK[0x5968]) = v69 ^ 0xC14BA4FF;
  LODWORD(STACK[0x5C10]) = v69 & 0x30144100;
  v70 = STACK[0x6980];
  v71 = (*(unsigned __int8 *)STACK[0x6980] ^ a1) << 8;
  v72 = (((v40[364] ^ a1) << 8) | (((((v60[1108] ^ 0x84003D61) & ~v71 & 0xB869 | v71 & 0x8000) ^ 0x1001)
                                  + (((v60[1108] ^ 0x84003D61) & ~v71 & 0x4796 | v71 & 0x4200) ^ 0x4505)) << 16))
      - 0x10000;
  LODWORD(STACK[0x5924]) = v72 ^ 0x82002AFF;
  LODWORD(STACK[0x6608]) = v72 & 0x5D23D500;
  v73 = (unsigned __int8 *)STACK[0x69E0];
  v74 = (v43 << 8) | ((*(unsigned __int8 *)(STACK[0x69E0] + 167) ^ a1) << 16);
  v75 = ((v74 ^ 0x4C3804FF) & (*(unsigned __int8 *)(v30 + 1017) ^ 0x4C38B4EC) | v74 & 0xC74B00) ^ 0x80C60200;
  v76 = ((((2 * v75) & 0x4E1406) - v75) << 8) + 1492515840;
  LODWORD(v50) = v31[3763];
  LODWORD(STACK[0x591C]) = v50;
  v77 = (v76 ^ 0x483100FF) & (v50 ^ 0x4A330007) | v76 & 0xB5CCFF00;
  LODWORD(STACK[0x5904]) = v77 ^ 0x50C8901;
  LODWORD(STACK[0x587C]) = v77 & 0xCE3A5B2 ^ 0x8E324B2;
  v78 = STACK[0x6A20];
  v79 = ((v35[3118] ^ a1) << 8) | ((*(unsigned __int8 *)(STACK[0x6A20] + 3945) ^ a1) << 16);
  v80 = ((v49[713] ^ 0xE9C932) & ~v79 | v79 & 0x163600) << 8;
  LODWORD(v30) = v42[3027];
  v81 = (v80 ^ 0x22664FF) & (v30 ^ 0x6A666536) | v80 & 0x95999A00;
  LODWORD(STACK[0x5B78]) = (v81 & 0xBE00D246 ^ 0x3A004206) + (v81 ^ 0x85009870) - ((v81 ^ 0x85009870) & 0xBE00D246);
  v82 = v49[1168];
  v83 = (v82 << 16) | ((*(unsigned __int8 *)(v70 + 311) ^ a1) << 8);
  v84 = STACK[0x69F0];
  v85 = (v83 ^ 0xDD060EFF) & (*(unsigned __int8 *)(STACK[0x69F0] + 865) ^ 0xDDAF0E1D) | v83 & 0x50F100;
  v86 = (((v85 & 0x45F2F5 ^ 0x4582E4) + (v85 & 0xBA0D0A ^ 0x10B)) << 8) - 256;
  v87 = (v86 ^ 0x41295FF) & (*(unsigned __int8 *)(STACK[0x6850] + 137) ^ 0x6C129D01) | v86 & 0x93ED6200;
  LODWORD(STACK[0x59A8]) = ((v86 ^ 0x41295FF) & (*(unsigned __int8 *)(STACK[0x6850] + 137) ^ 0x6C129D01) & 0xF958B15C | v86 & 0x91482000) ^ 0xE8589119;
  v88 = ((v35[1525] ^ a1) << 8) | ((v40[258] ^ a1) << 16);
  v89 = ((*(unsigned __int8 *)STACK[0x6860] ^ 0x8A6715) & ~v88 | v88 & 0x759800) << 8;
  LODWORD(STACK[0x5810]) = v89 ^ 0x659801FF;
  LODWORD(STACK[0x5AC0]) = v89 & 0x18465600;
  LODWORD(v40) = (_DWORD)v36 << 8;
  LODWORD(v36) = ((_DWORD)v36 << 8) | ((*(unsigned __int8 *)(v84 + 1449) ^ a1) << 16);
  v90 = ((v36 ^ 0x78302FF) & (v64 ^ 0x783AB25) | v36 & 0x7C5400) ^ 0x68345042;
  v91 = ((v90 - ((2 * v90) & 0xAB49EC)) << 8) - 710609408;
  LODWORD(STACK[0x5808]) = v91 ^ 0x8D8090FF;
  LODWORD(STACK[0x6498]) = v91 & 0x103C6700;
  v92 = ((v31[3596] ^ a1) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68] + 3763) ^ a1) << 8);
  v93 = *(unsigned __int8 *)STACK[0x6880];
  LODWORD(STACK[0x57BC]) = v93;
  v94 = (v93 ^ 0x4578F0BA) & ~v92 | v92 & 0x870F00;
  v95 = ((v94 & 0x8C02E1 ^ 0x880021) + (v94 ^ 0x82040AD4) - ((v94 ^ 0x82040AD4) & 0x8C02E1)) << 8;
  v96 = ((v95 ^ 0x70781FF) & (*(unsigned __int8 *)(STACK[0x69A0] + 4089) ^ 0xD74F91DB) | v95 & 0x28B06E00) ^ 0x2880688D;
  LODWORD(v36) = (v31[3414] ^ a1) << 8;
  v97 = ((*v41 ^ a1) << 8) | (((v36 & 0xE800 | 0x25) ^ (*(unsigned __int8 *)(STACK[0x6A00] + 2094) ^ 0x1769) & ~(_DWORD)v36) << 16);
  v98 = (v97 ^ 0xC00241FF) & (v46[706] ^ 0xD7A241C8) | v97 & 0x285DBE00;
  v99 = ((v97 ^ 0xC00241FF) & (v46[706] ^ 0xD7A241C8) & 0xDAF01C66 | v97 & 0x8501C00) ^ 0xDAB01C67;
  v100 = *(unsigned __int8 *)(STACK[0x67E0] + 2845);
  HIDWORD(v26) = v100 ^ 1;
  LODWORD(v26) = v100 ^ 0xB8;
  HIDWORD(v26) = v26 >> 3;
  LODWORD(v26) = HIDWORD(v26);
  v101 = ((_DWORD)v30 << 8) | ((v26 >> 29) << 16);
  v102 = ((v101 ^ 0x4502FF) & (v31[2572] ^ 0x451B9E) | v101 & 0xBAE400) << 8;
  LODWORD(v46) = (v102 ^ 0xBA0490FF) & (v82 ^ 0xFAB4B5BE) | v102 & 0x54B4A00;
  v103 = ((v49[1062] ^ a1) << 8) | ((v31[3672] ^ a1) << 16);
  v104 = ((*(unsigned __int8 *)(STACK[0x6890] + 895) ^ 0x6C7B7B) & ~v103 | v103 & 0x938400) << 8;
  LODWORD(STACK[0x5778]) = v104 ^ 0x34FF;
  LODWORD(STACK[0x6490]) = v104 & 0xF3BE0900;
  v105 = ((*(unsigned __int8 *)(STACK[0x6910] + 2223) ^ 0x9E6D94B) & (v36 ^ 0x5FF6FDFF) | v36 & 0x2600) ^ 0x56102408;
  v106 = (((v42[4036] ^ a1) << 8) | ((v105 - ((2 * v105) & 0x3478)) << 16)) - 1707343872;
  v107 = STACK[0x6900];
  v108 = *(unsigned __int8 *)STACK[0x6900];
  v109 = (v106 ^ 0x1101FF) & (v108 ^ 0x605501FC) | v106 & 0x9FAAFE00;
  v110 = ((v106 ^ 0x1101FF) & (v108 ^ 0x605501FC) & 0xDCABED0E | v106 & 0x9CAAEC00) ^ 0xC421A507;
  v111 = ((*(unsigned __int8 *)(STACK[0x6920] + 3543) ^ a1) << 16) | ((*(unsigned __int8 *)(v78 + 2921) ^ a1) << 8);
  v112 = ((v51 ^ 0x4EF5A3) & ~v111 | v111 & 0xB10A00) << 8;
  LODWORD(v78) = (v112 ^ 0x800860FF) & (v73[1282] ^ 0x8C1D7841) | v112 & 0x73E28700;
  LODWORD(STACK[0x5744]) = ((v112 ^ 0x800860FF) & (v73[1282] ^ 0x8C1D7841) & 0x8FB9B07E | v112 & 0x3A08000) ^ 0x8C99B07E;
  v113 = v40 | ((*(unsigned __int8 *)(STACK[0x68B0] + 2883) ^ a1) << 16);
  LODWORD(v36) = (v113 ^ 0xFFFE00FF) & (*(unsigned __int8 *)(STACK[0x6678] + 3247) ^ 0x2AB2193A);
  LODWORD(v49) = ((v36 & 0x120076 | v113 & 0x4DE600) ^ 0x5AC443) - (~(_DWORD)v36 | 0x5FE676);
  v114 = (v60[577] ^ 0x1B18DBC9) & (v71 ^ 0x1F9FDFFF) | v71 & 0x2400;
  v115 = ((*(unsigned __int8 *)STACK[0x68E0] ^ a1) << 8) | (((v114 & 0x7B3 ^ 0x3B0)
                                                           + (v114 ^ 0x487040F)
                                                           - ((v114 ^ 0x487040F) & 0x7B3)) << 16);
  v116 = (v115 ^ 0x320CCFF) & (*(unsigned __int8 *)(STACK[0x6A70] + 1912) ^ 0x9B68CCBF) | v115 & 0x64973300;
  v117 = (v31[3103] ^ a1) << 16;
  LODWORD(v36) = *(unsigned __int8 *)(v107 + 220);
  v118 = (v117 & 0x7D0000 | ((*(unsigned __int8 *)(STACK[0x6970] + 296) ^ a1) << 8) | (v36 ^ 0xDC82006A) & ~v117) ^ 0x32C670C;
  v119 = ((v118 + 16317393 - ((2 * v118) & 0xF210FA)) << 8) + 830464;
  v120 = (v119 ^ 0x209054FF) & (*(unsigned __int8 *)(v70 + 1828) ^ 0x64FD7696) | v119 & 0x9B028900;
  LODWORD(STACK[0x5738]) = v120 & 0xDD08E14D ^ 0x5D08E04D;
  LODWORD(STACK[0x57C4]) = v120 & 0x22F71EB2 ^ 0x2020091;
  v121 = ((*v73 ^ a1) << 16) | ((*(unsigned __int8 *)(STACK[0x6940] + 1062) ^ a1) << 8);
  v122 = ((v42[1161] ^ 0x4D96BC6B) & ~v121 | v121 & 0x694300) ^ 0x20084221;
  v123 = ((((2 * v122) | 0x4828EA) - v122) << 8) - 605320448;
  v124 = ((v123 ^ 0x10178FF) & (v35[3452] ^ 0x11A9F81A) | v123 & 0xEE560700) ^ 0x6C400548;
  v125 = ((v35[668] ^ a1) << 16) | ((*(unsigned __int8 *)(STACK[0x69C0] + 1282) ^ a1) << 8);
  v126 = (((((v36 ^ 0xDA9D4FD1) & ~v125 & 0xD0387 | v125 & 0x62B000) ^ 0xB2EC7F)
         - ((v36 ^ 0xDA9D4FD1) & ~v125 | 0x6FB387)) << 8)
       + 1874036480;
  LODWORD(STACK[0x5728]) = v126 ^ 0x58A0FF;
  LODWORD(STACK[0x57A8]) = v126 & 0xFA264B00;
  v127 = ((*(unsigned __int8 *)STACK[0x68A0] ^ a1) << 8) | ((*(unsigned __int8 *)(STACK[0x6670] + 1950) ^ a1) << 16);
  v128 = ((v41[1798] ^ 0xA5B19A26) & ~v127 | v127 & 0x4E6500) ^ 0x100A0140;
  v129 = ((v128 + 10249454 - ((2 * v128) & 0x38DB38)) << 8) + 568832;
  v130 = ((v129 ^ 0x800008FF) & (v108 ^ 0x82500983) | v129 & 0x7DAFF600) ^ 0x48A392C1;
  HIDWORD(v26) = STACK[0x5948];
  LODWORD(v26) = STACK[0x5948];
  v131 = (v26 >> 30) << 8;
  LODWORD(STACK[0x5780]) = v131 & 0xF3659E00;
  LODWORD(STACK[0x5718]) = ~v131;
  v132 = LODWORD(STACK[0x63A8]) ^ 0x2022400;
  LODWORD(v36) = STACK[0x5A88];
  LODWORD(STACK[0x585C]) = STACK[0x5A88] & 0xD6CF8300;
  LODWORD(STACK[0x56FC]) = v36 ^ 0x92054FF;
  LODWORD(v31) = LODWORD(STACK[0x59B0]) ^ 0x41064080;
  LODWORD(STACK[0x5860]) = v87 & 0x6A74EA3;
  LODWORD(STACK[0x5850]) = LODWORD(STACK[0x59A8]) - 1;
  LODWORD(STACK[0x5A88]) = v96;
  LODWORD(STACK[0x57A4]) = (2 * v96) & 0x5BD8E5D0;
  LODWORD(STACK[0x5820]) = v98 & 0x250FE399;
  LODWORD(STACK[0x5818]) = v99 - 1;
  LODWORD(STACK[0x5798]) = v109 & 0x235412F1;
  LODWORD(STACK[0x5790]) = v110 - 1;
  v133 = ((_DWORD)v49 << 8) - 512;
  LODWORD(STACK[0x5788]) = v133 & 0xF8757B00;
  LODWORD(STACK[0x5708]) = v133 ^ 0x78204FF;
  v134 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2) - 12);
  LODWORD(STACK[0x59A8]) = STACK[0x5BF8] & 0x14546C22;
  LODWORD(STACK[0x584C]) = v132;
  LODWORD(STACK[0x5750]) = LODWORD(STACK[0x6760]) | 0x391E7F57;
  LODWORD(STACK[0x5748]) = STACK[0x6750] & 0x17630B3B;
  LODWORD(STACK[0x5840]) = (_DWORD)v31;
  LODWORD(STACK[0x5758]) = v46 ^ 0x5414270 | 0xCA9DC68C;
  LODWORD(STACK[0x57D4]) = (v78 ^ 0x53620101) & 0x8FB9B07E;
  LODWORD(STACK[0x5710]) = v35[190];
  LODWORD(STACK[0x63A8]) = (v116 ^ 0x20932159) & 0x6471B698;
  LODWORD(STACK[0x5734]) = v124;
  LODWORD(STACK[0x57D0]) = v124 | 0x10D5FDC4;
  LODWORD(STACK[0x58E8]) = v130;
  LODWORD(STACK[0x56F8]) = 2 * v130;
  return v134();
}

uint64_t sub_1009C7694(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;

  *(_DWORD *)(STACK[0xDE60] + a7 - 35072 * (v10 / 0x2240)) = *(_DWORD *)(STACK[0xDE60] + v7 - 35072 * (v9 / 0x2240));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((4598 * (v8 == (((a2 - 4665) | 0x20A8) ^ 0x35A8))) ^ a2))
                            - 12))();
}

uint64_t sub_1009C7734@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  LODWORD(STACK[0x5948]) = LODWORD(STACK[0x6700]) + LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x5918]) = LODWORD(STACK[0x6600]) - LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x568C]) = LODWORD(STACK[0x65F8]) | LODWORD(STACK[0x6710]);
  LODWORD(STACK[0x57E8]) = LODWORD(STACK[0x65F0]) | LODWORD(STACK[0x66A8]);
  LODWORD(STACK[0x55B0]) = LODWORD(STACK[0x6488]) | LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x59B0]) = LODWORD(STACK[0x6480]) + LODWORD(STACK[0x6630]);
  v20 = LODWORD(STACK[0x63B0]) - LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x6710]) = LODWORD(STACK[0x5BE8]) + v13;
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x59A0]) + LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x5484]) = LODWORD(STACK[0x587C]) + v14 - v11;
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x5744]) + a5;
  LODWORD(STACK[0x6480]) = v10 + v17;
  LODWORD(STACK[0x59A0]) = v20 - 1629502033;
  LODWORD(STACK[0x5904]) = STACK[0x5718] & (a2 | 0xC9A6100);
  LODWORD(STACK[0x6618]) = a3 | 0xB290D930;
  LODWORD(STACK[0x5744]) = (v19 - 958313472) | LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x6708]) = STACK[0x5B98] & (LODWORD(STACK[0x591C]) ^ 0x605A5308);
  LODWORD(STACK[0x591C]) = v12 | 0x3B9F792E;
  LODWORD(STACK[0x6610]) = STACK[0x56FC] & (LODWORD(STACK[0x57BC]) ^ 0x29307C0C);
  LODWORD(STACK[0x6760]) = v16 | 0x5FA81AEC;
  LODWORD(STACK[0x5B98]) = STACK[0x5970] & (a6 ^ 0xF4AC392A);
  LODWORD(STACK[0x6600]) = v15 & 0x67187930;
  LODWORD(STACK[0x5BE8]) = STACK[0x5968] & (v8 ^ 0xCFEBBE57);
  LODWORD(STACK[0x6700]) = STACK[0x5924] & (a4 ^ 0xA2DC2A39);
  LODWORD(STACK[0x5BF8]) = STACK[0x5810] & (v7 ^ 0xE7B9A9DF);
  LODWORD(STACK[0x6750]) = STACK[0x5808] & (a1 ^ 0xEFC3985B);
  LODWORD(STACK[0x5970]) = LODWORD(STACK[0x5A88]) + 770470632;
  LODWORD(STACK[0x6488]) = v6 | 0x35623973;
  LODWORD(STACK[0x66A8]) = STACK[0x5778] & (v9 ^ 0xC41F69B);
  LODWORD(STACK[0x63B0]) = STACK[0x5708] & (LODWORD(STACK[0x5710]) ^ 0x78A844D);
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x5734]) | 0xEF2A023B;
  LODWORD(STACK[0x587C]) = STACK[0x5728] & (v18 ^ 0x5D9B4B4);
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x56F8]) | 0x490B6A7C;
  LODWORD(STACK[0x5968]) = LODWORD(STACK[0x5738]) - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v19) - 12))();
}

uint64_t sub_1009C7C54@<X0>(int a1@<W1>, unsigned int a2@<W4>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;

  v9 = *(unsigned __int8 *)(STACK[0xDE68] + v7 % 0x1808);
  v10 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419
                    * (((v9 ^ 0xEFC6CAE8) + 272184600) ^ ((v9 ^ 0xE9856992) + 377132654) ^ (((a1 + 17960) ^ 0x643E4EB ^ v9)
                                                                                          - 105096131))
                    + 25862151)
                   % 0x2240));
  v11 = (((2 * ((v10 >> 8) & 0x1F ^ 0x6651105A)) & 0x40A02004) - ((v10 >> 8) & 0x1F ^ 0x6651105A) - 838358307) ^ 0x66E148A9;
  v12 = ((v10 & 0xED ^ v8) + (v10 & 0x12 ^ 3) + 0x3FFFFFFF) & 0x200007FF;
  v13 = 5621 * (((v12 ^ 0x187ABF46) + 787129062) ^ ((v12 ^ (v3 + 214)) - 19116334) ^ ((v12 ^ 0xF036EF40) - 962137372))
      - 1754039694;
  v14 = (((v10 >> 15) & 0x86) + (BYTE2(v10) ^ 0x3FFFFF53) + 586031037) & 0x220FFFFF;
  v15 = *(unsigned __int8 *)(STACK[0xDE68] + v13 % 0x1808);
  v16 = ((*(unsigned __int8 *)(STACK[0xDE68]
                             + (5621
                              * (((HIBYTE(v10) ^ 0x754E9A0B) - 522899957) ^ ((HIBYTE(v10) ^ 0xFEB5A8EF) + 1798184175) ^ ((HIBYTE(v10) ^ 0x8BFB32A1) + 509642401))
                              + 236685345)
                             % 0x1808) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (5621
                                                                              * (((v14 ^ 0x4CA3271F) + 2115824226) ^ ((v14 ^ 0x4191168A) + 1932450805) ^ ((v14 ^ 0x2F3C2EA1u) + 495182816))
                                                                              + 1903840867)
                                                                             % 0x1808) ^ 0xB9) << 8);
  v17 = (*(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * ((v11 & ((v10 >> 8) & 0xE0 ^ 0x6C534233) ^ (v10 >> 8) & 0xC0 | v11 & 0x83A0A00C) ^ 0xCEB3E2FC)
                             + 32028458)
                            % 0x1808) ^ 0x2C7D82BB) & ~v16;
  v18 = v16 & 0x827D00;
  v19 = *(unsigned __int8 *)(v4 + 3194);
  v20 = (((((((v17 | v18) ^ (v5 + 699) | 0xC92628) - ((v17 | v18) ^ (v5 + 699) | 0x36D9D7)) << 8) + 920246016) ^ 0xF6C201) & (v15 ^ 0xFFFFFF8A) | v15 & 0xFE) ^ 0x4808A08A;
  *(_DWORD *)(STACK[0xDE60] + 4 * (a3 % 0x2240)) = (((2 * v20) & 0x350E4C18) - v20 + 1702418931) ^ 0xDE02FE3F;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)(a1 ^ 0x3599 ^ (49 * ((v6 | a2) >> 31))))
                                          - 12))(v19);
}

uint64_t sub_1009C808C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  LODWORD(STACK[0x55A4]) = LODWORD(STACK[0x6688]) + LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x5A88]) = LODWORD(STACK[0x6658]) + LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x55A0]) = LODWORD(STACK[0x6638]) | LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x5904]) |= LODWORD(STACK[0x5780]);
  v13 = LODWORD(STACK[0x591C]) - LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x5470]) = LODWORD(STACK[0x65F0]) - LODWORD(STACK[0x5748]);
  LODWORD(STACK[0x5808]) = LODWORD(STACK[0x5B98]) | LODWORD(STACK[0x5C18]);
  LODWORD(STACK[0x5B98]) = LODWORD(STACK[0x5BE8]) | LODWORD(STACK[0x5C10]);
  LODWORD(STACK[0x5588]) = LODWORD(STACK[0x5BF8]) | LODWORD(STACK[0x5AC0]);
  LODWORD(STACK[0x5468]) = -1041774266 - LODWORD(STACK[0x6650]) + LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x54F8]) = 958299991 - LODWORD(STACK[0x5750]) + LODWORD(STACK[0x5744]);
  LODWORD(STACK[0x546C]) = v13 + 1647330153;
  LODWORD(STACK[0x5C10]) = LODWORD(STACK[0x5B78]) ^ 0xD0EFA5B9;
  LODWORD(STACK[0x5924]) = LODWORD(STACK[0x5970]) - LODWORD(STACK[0x57A4]);
  LODWORD(STACK[0x591C]) = -895629684 - LODWORD(STACK[0x5758]) + LODWORD(STACK[0x6488]);
  LODWORD(STACK[0x5708]) = LODWORD(STACK[0x5790]) + LODWORD(STACK[0x5798]);
  LODWORD(STACK[0x54C0]) = LODWORD(STACK[0x63B0]) | LODWORD(STACK[0x5788]);
  LODWORD(STACK[0x5810]) = LODWORD(STACK[0x5968]) + LODWORD(STACK[0x57C4]);
  LODWORD(STACK[0x5C18]) = LODWORD(STACK[0x587C]) | LODWORD(STACK[0x57A8]);
  v14 = ((v11 ^ v8) << 16) | ((v12 ^ v8) << 8);
  v15 = ((a8 ^ 0xBDBF7AF8) & ~v14 | v14 & 0x408500) ^ 0x4005B4;
  v16 = (((v15 | 0xD5CAF8) - (v15 | 0x2A3507)) << 8) + 708118272;
  LODWORD(STACK[0x6770]) = ((v16 ^ 0x9108A0FF) & (a1 ^ 0xB1ACAC60) & 0x3C52CD50 | v16 & 0xC524100) ^ 0xC104101;
  v17 = ((*(unsigned __int8 *)(STACK[0x6A20] + 281) ^ v8) << 16) | ((*(unsigned __int8 *)(STACK[0x6900] + 220) ^ v8) << 8);
  LODWORD(STACK[0x6690]) = ((((((*(unsigned __int8 *)(v9 + 2352) ^ 0x97AB295D) & ~v17 & 0xA64683 | v17 & 0x44600) ^ 0x4200)
                            + (((*(unsigned __int8 *)(v9 + 2352) ^ 0x97AB295D) & ~v17 & 0x59B97C | v17 & 0x509000) ^ 0x59A97D)) << 8)
                          - 256) & 0x5A081E00;
  v18 = ((*(unsigned __int8 *)(STACK[0x68C0] + 114) ^ v8) << 16) | ((*(unsigned __int8 *)STACK[0x68A0] ^ v8) << 8);
  v19 = ((*(unsigned __int8 *)(STACK[0x6910] + 3429) ^ 0x9EE6B0) & ~v18 | v18 & 0x611900) << 8;
  v20 = *(_QWORD *)(STACK[0x6AD8] + 8 * v10);
  LODWORD(STACK[0x66B0]) = v19 & 0x28AE9A00;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(v20 - 8))(v19 ^ 0x411164FFu, 36215998, 144863992);
}

uint64_t sub_1009C85C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  *(_DWORD *)(STACK[0xDE60] + 4 * (v4 + 29 * (v5 ^ 0x46ED) - 8768 * ((v4 + 29 * (v5 ^ 0x46EDu)) / 0x2240))) = *(_DWORD *)(STACK[0xDE60] + a3 - 35072 * (a2 / 0x2240));
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * ((5072 * (v3 == 0)) ^ v5))
                                                                     - 8))(a1, a2 + 6419, a3 + 25676);
}

uint64_t sub_1009C866C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;

  LODWORD(STACK[0x5460]) = LODWORD(STACK[0x66A0]) | LODWORD(STACK[0x6740]);
  LODWORD(STACK[0x5BE8]) = LODWORD(STACK[0x6698]) | LODWORD(STACK[0x6720]);
  LODWORD(STACK[0x5968]) = LODWORD(STACK[0x6618]) - LODWORD(STACK[0x584C]) - 1497918616;
  LODWORD(STACK[0x5AC0]) = LODWORD(STACK[0x6610]) | LODWORD(STACK[0x585C]);
  LODWORD(STACK[0x545C]) = LODWORD(STACK[0x6600]) - LODWORD(STACK[0x5840]) - 864828569;
  LODWORD(STACK[0x5BF8]) = LODWORD(STACK[0x5850]) + LODWORD(STACK[0x5860]);
  LODWORD(STACK[0x54EC]) = LODWORD(STACK[0x5818]) + LODWORD(STACK[0x5820]);
  LODWORD(STACK[0x54C4]) = LODWORD(STACK[0x6620]) - LODWORD(STACK[0x57D4]);
  LODWORD(STACK[0x54E8]) = 282459588 - LODWORD(STACK[0x57D0]) + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x6720]) = a2 - 1;
  LODWORD(STACK[0x66A0]) = v4 & (v3 ^ 0xA5F7E136);
  LODWORD(STACK[0x6740]) = a1 & (v5 ^ 0xD7516580);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_1009C88AC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;

  v13 = *(unsigned __int8 *)(STACK[0xDE68] + (((v3 + 1592829087) & 0xA10F7FFF ^ 0x4205) * v6 + 26193860) % 0x1808);
  v14 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((v11
                    + 6419
                    * (((v13 ^ 0xC7C5736F) + 943361169) ^ ((v13 ^ 0xBA236367) + 1172085913) ^ ((v13 ^ 0x7DE610B1)
                                                                                             - 2112229553))
                    + 3039)
                   % 0x2240));
  v15 = ((v14 ^ 0x23) + (v14 & 0xED ^ 0xA314CC) - ((v14 ^ 0x23) & 0xED)) & (v9 + 2045);
  v16 = ((BYTE1(v14) ^ 0x7532625C) - ((2 * (BYTE1(v14) ^ 0x7532625C)) & 0xCA04C582) - 318244159) ^ 0x8A1D18CB;
  v17 = (5621
       * (((BYTE2(v14) ^ 0xF00B38DA) + 172967713) ^ ((BYTE2(v14) ^ v12) - 790213729) ^ ((BYTE2(v14) ^ 0xDAA90C9A)
                                                                                      + 552432481))
       - 539161665)
      % 0x1808;
  v18 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (a1
                            + 5621
                            * (((HIBYTE(v14) ^ 0xD1BB7D02) - 1713254535) ^ ((HIBYTE(v14) ^ 0xB3183144) - 79527105) ^ (v4 + (HIBYTE(v14) ^ (v2 + 801)) + 3371))
                            + 3715)
                           % 0x1808);
  v19 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v15 ^ 0x3A5C2C21) + 1151216043) ^ ((v15 ^ 0xA1552981) - 543740917) ^ ((v15 ^ 0x9B890191) - 448068581))
                            - 1030178765)
                           % 0x1808);
  v20 = ((*(unsigned __int8 *)(STACK[0xDE68] + v17) ^ 0xB9) << 8) | ((v18 ^ 0xB9) << 16);
  *(_DWORD *)(STACK[0xDE60] + 4 * (v8 % 0x2240)) = (((((*(unsigned __int8 *)(STACK[0xDE68]
                                                                             + (v1
                                                                              + 5621
                                                                              * (((((v16 | v7) - (v16 | v5) + v5) ^ 0xAF82405F)
                                                                                - 616417146) ^ ((((v16 | v7)
                                                                                                - (v16 | v5)
                                                                                                + v5) ^ 0xBE0B3427)
                                                                                              - 892646146) ^ ((((v16 | v7) - (v16 | v5) + v5) ^ 0xB0AE0DCB) - 999394030)))
                                                                             % 0x1808) ^ 0x7C07C) & ~v20 | v20 & v10) << 8) ^ 0x8F6DA034) & (v19 ^ 0xFFFFFF45) | v19 & 0xCB) ^ 0xCD89B742;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3084 * (v6 == 255)) ^ v3)) - 8))();
}

uint64_t sub_1009C8C38(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;

  LODWORD(STACK[0x54DC]) = -2043763597 - LODWORD(STACK[0x6800]) + LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x5458]) = LODWORD(STACK[0x6708]) | LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x5454]) = LODWORD(STACK[0x6700]) | LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x5970]) = LODWORD(STACK[0x66A8]) | LODWORD(STACK[0x6490]);
  LODWORD(STACK[0x54BC]) = LODWORD(STACK[0x6630]) - LODWORD(STACK[0x58E8]) - 612742462;
  LODWORD(STACK[0x5B78]) = LODWORD(STACK[0x66A0]) | LODWORD(STACK[0x6690]);
  v3 = ((*(unsigned __int8 *)(STACK[0x6AA0] + 1343) ^ a2) << (v2 ^ 0xF8)) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 1859) ^ a2) << 16);
  v4 = (*(unsigned __int8 *)(STACK[0x69D0] + 774) ^ 0xB17C47A9) & ~v3 | v3 & 0x83B800;
  v5 = ((v4 & 0x873EF6 ^ 0x860E54) + (v4 ^ 0x4A0130A2) - ((v4 ^ 0x4A0130A2) & 0x873EF6)) << 8;
  LODWORD(STACK[0x6490]) = ((v5 ^ 0x52631FF) & (*(unsigned __int8 *)STACK[0x6A60] ^ 0xF6F3572) | v5 & 0xF090CA00) ^ 0xA0100204 | 0x71D07EDF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_1009C8E68@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v8 = v7 % 0x1808;
  v9 = STACK[0xDE68];
  *(_BYTE *)(v9 + v8) = *(_BYTE *)(STACK[0xDE60]
                                 + 4
                                 * ((a1
                                   + 6419
                                   * (((*(unsigned __int8 *)(v9 + v8) ^ 0x9B8CD447) + 1685269433) ^ ((*(unsigned __int8 *)(v9 + v8) ^ 0xBE18BD9F) + v4) ^ (a3 + (((v6 - 6070) | 0x80) ^ (a2 + 919) ^ *(unsigned __int8 *)(v9 + v8)) + 3213))
                                   + 1992)
                                  % 0x2240)) ^ 0x46;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v5 != 0) * v3) ^ v6)) - 8))();
}

uint64_t sub_1009C8F54()
{
  int v0;
  int v1;

  LODWORD(STACK[0x59A8]) = LODWORD(STACK[0x6710]) - LODWORD(STACK[0x59A8]);
  LODWORD(STACK[0x5500]) = LODWORD(STACK[0x6750]) | LODWORD(STACK[0x6498]);
  LODWORD(STACK[0x5590]) = LODWORD(STACK[0x6720]) + LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x6488]) = v1 | 0x8E2F8120;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(32923051);
}

uint64_t sub_1009C9004@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;

  *(_DWORD *)(STACK[0xDE60] + 4 * ((((1447 * (v2 ^ 0x409A)) ^ 0x2BCCu) * v3 + a1) % 0x2240)) = *(_DWORD *)(STACK[0xDE60] + 4 * ((((1447 * (v2 ^ 0x409A)) ^ 0x2BCCu) * v3 + a2) % 0x2240));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((94 * (v3 == 255)) ^ v2)))();
}

uint64_t sub_1009C9084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  uint64_t v9;

  v8 = 6506 * (v7 ^ 0x32DDu);
  LODWORD(STACK[0x6498]) = 1345055492 - LODWORD(STACK[0x6780]) + LODWORD(STACK[0x6760]) + 1926;
  LODWORD(STACK[0x58E8]) = LODWORD(STACK[0x6740]) | LODWORD(STACK[0x66B0]);
  v9 = *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  STACK[0x6800] = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 - v8 + 13004))(a1, a2, a3, 26193860, a5, a6, a7, 255);
}

uint64_t sub_1009C9124(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  unint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  unsigned __int8 *v14;
  unint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v9 = STACK[0xDE68];
  v10 = *(unsigned __int8 *)(STACK[0xDE68] + a4 % 0x1808);
  v11 = (v10 ^ (STACK[0x6800] + 1695071041)) - 1695084053;
  v12 = STACK[0xDE60];
  STACK[0x6780] = STACK[0xDE60];
  v13 = *(_DWORD *)(v12
                  + 4
                  * ((6419 * (v11 ^ ((v10 ^ 0xF16B0943) + 244643517) ^ ((v10 ^ 0x9463E7EF) + 1805391889)) + 19276257)
                   % 0x2240));
  LODWORD(STACK[0x65F8]) = *(unsigned __int8 *)(STACK[0x66D8] + 463);
  v14 = (unsigned __int8 *)STACK[0x6AC0];
  LODWORD(STACK[0x6658]) = *(unsigned __int8 *)(STACK[0x6AC0] + 3649);
  LODWORD(STACK[0x6650]) = *(unsigned __int8 *)(STACK[0x6930] + 1836);
  LODWORD(STACK[0x65F0]) = *(unsigned __int8 *)(STACK[0x6A20] + 395);
  LODWORD(STACK[0x6628]) = *(unsigned __int8 *)(STACK[0x6830] + 3361);
  v15 = STACK[0x6AB0];
  LODWORD(STACK[0x6620]) = *(unsigned __int8 *)(STACK[0x6AB0] + 2663);
  LODWORD(STACK[0x6750]) = v14[2534];
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(STACK[0x6668] + 3960);
  v16 = (unsigned __int8 *)STACK[0x6A30];
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(STACK[0x6A30] + 1077);
  LODWORD(STACK[0x66B0]) = v14[2716];
  LODWORD(STACK[0x6698]) = *(unsigned __int8 *)(STACK[0x6910] + 2405);
  LODWORD(STACK[0x6688]) = *(unsigned __int8 *)(v15 + 2352);
  LODWORD(STACK[0x6740]) = *(unsigned __int8 *)(STACK[0x6A60] + 1062);
  LODWORD(STACK[0x6700]) = *(unsigned __int8 *)(STACK[0x66E0] + 410);
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(STACK[0x6880] + 622);
  v17 = HIBYTE(v13);
  v18 = ((2 * ~(v13 >> 8)) | 0xAE03F628) - ~(v13 >> 8) - 1459747604;
  v19 = (v13 ^ 0x3480427F) - ((2 * (v13 ^ 0x3480427F)) & 0x8000092) - 2076338103;
  v20 = ((HIWORD(v13) & 0x38 ^ 0xEF77A738) - (HIWORD(v13) & 0x38) + (BYTE2(v13) ^ 0x86)) ^ 0x5A732F98;
  v21 = v20 - ((2 * v20) & 0x80900FA) + 1314844797;
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)(STACK[0x6920] + 84);
  v22 = *(unsigned __int8 *)(v9
                           + (5621
                            * (((v19 ^ 0x96A5568D) - 25285193) ^ ((v19 ^ 0xAD37745E) - 974385306) ^ ((v19 ^ 0x8B2FF81A) - 470514910))
                            + 2087111323)
                           % 0x1808);
  v23 = *(unsigned __int8 *)(v9
                           + (5621
                            * (((((v18 & 0xF2478086 ^ 0xA2470083) + (v18 & 0xDB87F79) - 1) ^ 0xDCC23885) - 326766985) ^ ((((v18 & 0xF2478086 ^ 0xA2470083) + (v18 & 0xDB87F79) - 1) ^ 0xAB7EC105) - 1690757129) ^ ((((v18 & 0xF2478086 ^ 0xA2470083) + (v18 & 0xDB87F79) - 1) ^ 0x82FA023B) - 1296182071))
                            + 1594975053)
                           % 0x1808);
  LODWORD(v9) = ((*(unsigned __int8 *)(v9
                                     + (5621
                                      * (((v21 ^ 0x3F99DFB) - 1704394469) ^ ((v21 ^ 0xB81B7B47) + 562816935) ^ ((v21 ^ 0x40B89EC3) - 651689437))
                                      - 788865025)
                                     % 0x1808) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(v9
                                                                                    + (5621
                                                                                     * (((v17 ^ 0x671CAB51) + 2118667582) ^ ((v17 ^ 0x5A0E968A) + 1130000615) ^ ((v17 ^ 0x3D123D9E) + 608623603))
                                                                                     - 859373832)
                                                                                    % 0x1808) ^ 0xB9) << 16);
  LODWORD(v9) = ((v23 ^ 0x2109A16E) & ~(_DWORD)v9 | v9 & 0xF65E00) ^ 0x82B60608;
  v24 = STACK[0x69F0];
  LODWORD(v9) = (((((((2 * (_DWORD)v9) & 0xFD8B2) - (_DWORD)v9) << 8) - 132930048) ^ 0x78A06911) & (v22 ^ 0xFFFFFF0E) | v22 & 0xEEEEEEEE) ^ 0xC029420E;
  LODWORD(STACK[0x6608]) = *(unsigned __int8 *)(STACK[0x6890] + 895);
  v25 = STACK[0x69D0];
  LODWORD(STACK[0x66A8]) = *(unsigned __int8 *)(STACK[0x69D0] + 1381);
  LODWORD(STACK[0x6710]) = v14[2792];
  LODWORD(STACK[0x6708]) = *(unsigned __int8 *)(STACK[0x69C0] + 1282);
  LODWORD(STACK[0x6730]) = *(unsigned __int8 *)(v25 + 3687);
  LODWORD(STACK[0x6610]) = *(unsigned __int8 *)(v24 + 607);
  LODWORD(STACK[0x6618]) = *(unsigned __int8 *)(STACK[0x68C0] + 114);
  LODWORD(STACK[0x6600]) = *(unsigned __int8 *)(STACK[0x6A50] + 3725);
  LODWORD(STACK[0x6648]) = *(unsigned __int8 *)(STACK[0x6A10] + 539);
  LODWORD(STACK[0x6630]) = *v16;
  LODWORD(STACK[0x6638]) = *(unsigned __int8 *)(STACK[0x6A60] + 235);
  LODWORD(STACK[0x6640]) = *(unsigned __int8 *)(STACK[0x6A00] + 1085);
  LODWORD(STACK[0x6690]) = *(unsigned __int8 *)STACK[0x69B0];
  *(_DWORD *)(STACK[0x6780] + 4 * (v8 % 0x2240)) = (((2 * v9) | 0x9AA03A46) - v9 - 1297095971) ^ 0xF7499D6B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((11 * (a8 != 0)) | STACK[0x6800])) - 8))();
}

uint64_t sub_1009C9830@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  int v65;
  int v66;
  unsigned int v67;
  unint64_t v68;
  int v69;
  int v70;
  unsigned __int8 *v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;

  LODWORD(STACK[0x587C]) = v5;
  LODWORD(STACK[0x63B0]) = a5;
  LODWORD(STACK[0x558C]) = LODWORD(STACK[0x6480]) - LODWORD(STACK[0x63A8]);
  v20 = STACK[0x6800] - 6487;
  v21 = LODWORD(STACK[0x6650]) ^ 0xB9;
  LODWORD(STACK[0x6480]) = v6;
  v22 = ((LODWORD(STACK[0x6658]) ^ 0xB9) << 8) | (v21 << 16);
  v23 = (LODWORD(STACK[0x65F0]) ^ 0xCA8E6E) & ~v22 | v22 & 0x357100;
  v24 = ((v23 << 8) ^ 0x216120FF) & (LODWORD(STACK[0x65F8]) ^ 0xEB6D71DF) | (v23 << 8) & 0x14928E00;
  LODWORD(STACK[0x6780]) = v24 & 0x3F86E068 ^ 0x3B846069;
  LODWORD(STACK[0x6650]) = v24 & 0xC0791F97;
  v25 = STACK[0x6750];
  v26 = (((((LODWORD(STACK[0x6620]) ^ 0xB9) << 16) | (v25 << 8)) ^ 0xFFFC00FF) & (LODWORD(STACK[0x6628]) ^ 0xBF4992F) | (((LODWORD(STACK[0x6620]) ^ 0xB9) << 16) | (v25 << 8)) & 0xB6600) ^ 0x54020200;
  v27 = (v26 + 4602037 - ((2 * v26) & 0x8C716A)) << 8;
  v29 = STACK[0x6760];
  v30 = (v27 ^ 0x46144CFF) & (LODWORD(STACK[0x6760]) ^ 0xE6966F81) | v27 & 0x19699000;
  LODWORD(STACK[0x65F8]) = v30 & 0x638F6BB5 ^ 0x628E6B34;
  LODWORD(STACK[0x6628]) = v30 & 0x9C70944A ^ 0x18409001;
  v31 = ((LODWORD(STACK[0x6698]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x6688]) ^ 0xB9) << 16);
  v32 = ((LODWORD(STACK[0x66B0]) ^ 0xAC5C3A0) & ~v31 | v31 & 0x3A3C00) ^ 0x10000806;
  v33 = (((v32 | 0xD88C0B) - (v32 | 0x2773F4)) << 8) + 661910528;
  LODWORD(STACK[0x6688]) = v33 ^ 0x203843FF;
  LODWORD(STACK[0x66B0]) = v33 & 0xCB80AC00;
  v34 = ((LODWORD(STACK[0x6700]) ^ 0xB9) << 16) | ((a3 ^ 0xB9) << 8);
  v35 = ((LODWORD(STACK[0x6720]) ^ 0xAD02AC7B) & ~v34 | v34 & 0xFD5300) ^ 0x50891110;
  v36 = (((v35 | 0x7D2F8D) - (v35 | 0x82D072)) << 8) - 2100268544;
  v37 = (v36 ^ 0xA0FF) & (LODWORD(STACK[0x6740]) ^ 0xD092F2D4) | v36 & 0x2F6D0D00;
  LODWORD(STACK[0x6620]) = v37 & 0xA0140FAF ^ 0x80140E2D;
  LODWORD(STACK[0x6800]) = v37 & 0x5FEBF050 ^ 0xF480001;
  v38 = ((LODWORD(STACK[0x66A0]) ^ 0xB9) << 8) | ((v14 ^ 0xB9) << 16);
  v39 = ((v17 ^ 0xA103B2) & ~v38 | v38 & 0x5EFC00) << 8;
  LODWORD(STACK[0x6720]) = ((v39 ^ 0x23C74FF) & (v15 ^ 0xA33F7D61) & 0x40A576B8 | v39 & 0x40800200) ^ 0x800221;
  v40 = ((v13 ^ 0xB9) << 8) | ((v18 ^ 0xB9) << 16);
  v41 = (v9 ^ 0x1585DEBE) & ~v40 | v40 & 0x7A2100;
  v42 = (((v41 & 0x1D3B8D ^ 0x182108) + (v41 & 0xE2C472 ^ 0x80C463)) << 8) - 256;
  v43 = ((v42 ^ 0x40C012FF) & (v7 ^ 0x5DC15233) | v42 & 0xA23EAD00) ^ 0x40C75;
  v44 = ((v16 ^ 0xB9) << 16) | ((v12 ^ 0xB9) << 8);
  v45 = (v19 ^ 0x29C033C3) & ~v44 | v44 & 0x3FCC00;
  v46 = (v45 & 0xF6779 ^ 0x14000) + (v45 & 0xF09886 ^ 0xF01087);
  v47 = v10 ^ 0xFBB5F746;
  v48 = ((v11 ^ 0xB9) << 16) | ((a4 ^ 0xB9) << 8);
  v49 = (a1 ^ 0x15129A9F) & ~v48 | v48 & 0xED6500;
  v50 = (LODWORD(STACK[0x66A8]) ^ 0xFBFF5CF2) & ~(((LODWORD(STACK[0x6708]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x6710]) ^ 0xB9) << 16)) | ((LODWORD(STACK[0x6708]) ^ 0xB9) << 8) & 0xA300;
  v51 = ((v50 & 0x6B6FB1 ^ 0x6B4C01) + (v50 ^ 0xA3B4) - ((v50 ^ 0xA3B4) & 0x6B6FB1)) << 8;
  v52 = ((v51 ^ 0x220E80FF) & (LODWORD(STACK[0x6730]) ^ 0x361E8A25) | v51 & 0xC9E17500) ^ 0xC9E01501;
  v53 = ((v49 & 0xF552F ^ 0x3502F) + (v49 ^ 0x24C2540) - ((v49 ^ 0x24C2540) & 0xF552F)) << 8;
  v54 = ((v53 ^ 0x80532FF) & (LODWORD(STACK[0x6608]) ^ 0x58CD7A38) | v53 & 0xA7328500) ^ 0xDDE6319D;
  v55 = ((LODWORD(STACK[0x6610]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x6600]) ^ 0xB9) << 16);
  LODWORD(STACK[0x6740]) = (((LODWORD(STACK[0x6618]) ^ 0x836329) & ~v55 | v55 & 0x7C9C00) << 8) & 0x99278B00;
  v56 = ((LODWORD(STACK[0x6630]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x6638]) ^ 0xB9) << 8);
  v57 = ((LODWORD(STACK[0x6640]) ^ 0x62CB1A) & ~v56 | v56 & 0x9D3400) << 8;
  v58 = (v57 ^ 0x183048FF) & (LODWORD(STACK[0x6648]) ^ 0x5A73C8EC) | v57 & 0xA58C3700;
  LODWORD(STACK[0x6648]) = (((v8 ^ 0xFF80EF) & ~(((LODWORD(STACK[0x6690]) ^ 0xB9) << 8) | ((a2 ^ 0xB9) << 16)) | ((LODWORD(STACK[0x6690]) ^ 0xB9) << 8) & 0x7F00) << 8) & 0xB104800;
  v59 = (v25 << 16) | ((LODWORD(STACK[0x6480]) ^ 0xB9) << 8);
  v60 = LODWORD(STACK[0x6770]);
  v61 = ((v59 ^ 0x66FF) & (v60 ^ 0xB8668D) | v59 & 0x479900) << 8;
  v62 = ((v61 ^ 0x461948FF) & (v29 ^ 0xCF5D5CB9) | v61 & 0x30A2A300) ^ 0x30A203D1;
  v63 = STACK[0x6AB0];
  v64 = STACK[0x6A20];
  v65 = ((*(unsigned __int8 *)(STACK[0x6AB0] + 1821) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6A20] + 228) ^ 0xB9) << 16);
  v66 = ((*(unsigned __int8 *)(STACK[0x69D0] + 1548) ^ 0x74D176) & ~v65 | v65 & 0x8B2E00) << 8;
  v67 = ((v66 ^ 0x8B0630FF) & (*(unsigned __int8 *)(STACK[0x69D0] + 1381) ^ 0xCF86318B) | v66 & 0x3079CE00) ^ 0x118C84;
  v68 = STACK[0x6A10];
  v69 = ((*(unsigned __int8 *)(STACK[0x69F0] + 1449) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6970] + 531) ^ 0xB9) << 8);
  v70 = (*(unsigned __int8 *)(STACK[0x6A10] + 1434) ^ 0x255E78) & ~v69 | v69 & 0xDAA100;
  v71 = (unsigned __int8 *)STACK[0x6AC0];
  v72 = ((*(unsigned __int8 *)(STACK[0x6AC0] + 2534) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6A80] + 3634) ^ 0xB9) << 16);
  v73 = ((*(unsigned __int8 *)(STACK[0x6A50] + 2610) ^ 0x4B4B72C6) & ~v72 | v72 & 0xB48D00) ^ 0x240000;
  LODWORD(STACK[0x6630]) = (((((2 * v73) & 0x566B06) - v73) << 8) - 724927488) & 0x95429600;
  v74 = ((*(unsigned __int8 *)(STACK[0x69B0] + 258) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(v68 + 3983) ^ 0xB9) << 16);
  v75 = ((*(unsigned __int8 *)(STACK[0x6830] + 3361) ^ 0xA799A2) & ~v74 | v74 & 0x586600) << 8;
  v76 = ((v75 ^ 0x406220FF) & (*(unsigned __int8 *)STACK[0x67B0] ^ 0x657A3BE6) | v75 & 0x9A85C400) ^ 0x18800000;
  v77 = ((v71[3596] ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6A00] + 2519) ^ 0xB9) << 16);
  v78 = ((*(unsigned __int8 *)(STACK[0x6A30] + 1464) ^ 0x281F11EB) & ~v77 | v77 & 0xE0EE00) ^ 0x1480E4A9;
  v79 = ((((2 * v78) & 0x18575E) - v78) << 8) - 204189696;
  v80 = ((v79 ^ 0x924414FF) & (v71[3763] ^ 0x9A643775) | v79 & 0x659BC800) ^ 0x2503C831;
  v81 = ((*(unsigned __int8 *)(v64 + 281) ^ 0xB9) << 8) | ((v71[3505] ^ 0xB9) << 16);
  v82 = (*(unsigned __int8 *)(v63 + 941) ^ 0x4F8B042B) & ~v81 | v81 & 0x74FB00;
  LODWORD(STACK[0x6698]) = (((v82 & 0xD76271 ^ 0xC74031) + (v82 ^ 0x80102A40) - ((v82 ^ 0x80102A40) & 0xD76271)) << 8) & 0xBA333400;
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x6780]) - 1;
  LODWORD(STACK[0x6760]) = v46 << 8;
  LODWORD(STACK[0x6690]) = (v58 & 0x6A706E07 ^ 0x6A704E05) + (v58 & 0x958F91F8 ^ 0x818C1009) - 1;
  LODWORD(STACK[0x6750]) = (v70 << 8) & 0x8A92C000;
  LODWORD(STACK[0x6618]) = (2 * v80) & 0xA578DEBE;
  LODWORD(STACK[0x6708]) = v47;
  LODWORD(STACK[0x6780]) = v52;
  LODWORD(STACK[0x6600]) = v54 | 0xEB36ECE6;
  LODWORD(STACK[0x6700]) = v62 | 0x91FC4837;
  LODWORD(STACK[0x6608]) = v67 | 0x7641B508;
  LODWORD(STACK[0x6710]) = v76;
  return (*(uint64_t (**)(uint64_t, _QWORD))(STACK[0x6AD8] + 8 * v20))(v60, (2 * v43) & 0xF650B82C);
}

uint64_t sub_1009CA66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  *(_DWORD *)(STACK[0xDE60] + 4 * (v10 % (v8 ^ 0x3B3Du))) = *(_DWORD *)(STACK[0xDE60] + v9 - 35072 * (a7 / 0x2240));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * ((20414 * (v7 == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7 + 6419);
}

uint64_t sub_1009CA6EC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;

  LODWORD(STACK[0x5860]) = STACK[0x6688] & (a1 ^ 0x347F53C6);
  LODWORD(STACK[0x6658]) = v13 - a2 + 2066242582;
  LODWORD(STACK[0x66A8]) = a7 & 0x89D4A090;
  LODWORD(STACK[0x585C]) = v15 | 0x14C91319;
  LODWORD(STACK[0x6770]) = v12 & (LODWORD(STACK[0x63B0]) ^ 0x66D8749F);
  v20 = LODWORD(STACK[0x587C]) ^ 0xF4EFB7BB;
  LODWORD(STACK[0x63B0]) = LODWORD(STACK[0x65F8]) - 1;
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6620]) - 1;
  LODWORD(STACK[0x6620]) = a5 - 1;
  LODWORD(STACK[0x6610]) = v7 | 0x4442F2BC;
  LODWORD(STACK[0x587C]) = v11 & v20;
  LODWORD(STACK[0x6688]) = a3 | 0x6E03B7C8;
  LODWORD(STACK[0x6480]) = v19 | 0x89BE4AF7;
  LODWORD(STACK[0x6730]) = v8 & (a6 ^ 0x756D3FBF);
  LODWORD(STACK[0x65F8]) = v17 & (a4 ^ 0x6ABD6913);
  LODWORD(STACK[0x6638]) = v10 & 0x6B653D8A;
  LODWORD(STACK[0x63A8]) = v16 - 759402657;
  LODWORD(STACK[0x65F0]) = v18 & (v9 ^ 0x45CCCB2C);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v14 ^ 0x508A)) - 8))();
}

uint64_t sub_1009CA920(uint64_t a1, int a2, int a3, unint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v7 = *(unsigned __int8 *)(STACK[0xDE68] + a4 % 0x1808);
  v8 = *(unsigned __int8 *)(STACK[0x6A70] + 1912);
  v9 = *(_DWORD *)(STACK[0xDE60]
                 + 4
                 * ((6419
                   * (((v7 ^ 0x37A497BA) - 933533626) ^ ((v7 ^ 0xF96DCCC5) + 110244667) ^ ((v7 ^ (((v6 + 1586468194) & 0xA17079FF)
                                                                                                - 825687443))
                                                                                         + 825664570))
                   + 20919521)
                  % 0x2240));
  v10 = (v9 & 1) + 270631935 + (v9 & 0xFE ^ 0xC4404281);
  v11 = (((v9 >> 8) & 0xD0 ^ 0x637D4891) + ((v9 >> 8) & 0x2F) - 1) ^ 0x32FCA62;
  v12 = ((2 * (BYTE2(v9) ^ 0x2EBC70A2)) | 0x3F6A76AA) - (BYTE2(v9) ^ 0x2EBC70A2) - 531970901;
  v13 = (v12 & 0x108045E ^ 0x86160457) + (v12 & 0x40E19BA1) - 1;
  v14 = *(unsigned __int8 *)(STACK[0xDE68]
                           + (5621
                            * (((v10 ^ 0x20CD15AA) + 1951392834) ^ ((v10 ^ 0xDC9B1A03) - 2011567127) ^ ((v10 ^ 0x2837C9D6) + 2092251198))
                            + 82136209)
                           % 0x1808);
  v15 = ((((*(unsigned __int8 *)(STACK[0xDE68]
                               + (5621
                                * (((v13 ^ 0x7EC8B334) + 1149037316) ^ ((v13 ^ 0xD90D4E3) + 925142229) ^ ((v13 ^ 0xF4476852) - 822923162))
                                + 1857821147)
                               % 0x1808) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0xDE68]
                                                                              + (5621
                                                                               * (((HIBYTE(v9) ^ 0x4C6C8E3C) - 148821773) ^ ((HIBYTE(v9) ^ 0x3AC10A2A) - 2121487131) ^ ((HIBYTE(v9) ^ 0x76AD8453) - 840949090))
                                                                               + 1643042606)
                                                                              % 0x1808u) ^ 0xB9) << 16)) ^ 0x59F63EFF) & (*(unsigned __int8 *)(STACK[0xDE68] + (5621 * ((((((2 * v11) & 0xC0251AA2) - v11 + 482947758) ^ 0x6C119736) + 617389159) ^ (((((2 * v11) & 0xC0251AA2) - v11 + 482947758) ^ 0x37C30F5A) + 2132673547) ^ (((((2 * v11) & 0xC0251AA2) - v11 + 482947758) ^ 0x274928E2) + 1871979443)) + 751673279) % 0x1808) ^ 0x59FFFF46);
  v16 = (((((v15 & a2 ^ 0x1BCF02) - (v15 | a2)) << 8) - 332333824) ^ 0x87D4AC19) & (v14 ^ 0xFFFFFFC6);
  *(_DWORD *)(STACK[0xDE60] + 4 * (a6 % 0x2240)) = (((2 * ((v16 | v14 & 0xE6) ^ 0x10980CC6)) & 0x2D4248E4)
                                                    - ((v16 | v14 & 0xE6) ^ 0x10980CC6)
                                                    - 379659379) ^ 0xD6C7540D;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1012 * (a3 == 0)) ^ v6)) - 8))(v8);
}

uint64_t sub_1009CADDC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  int v35;
  unint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;

  LODWORD(STACK[0x5410]) = LODWORD(STACK[0x6640]) + LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x5860]) | LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x5414]) = LODWORD(STACK[0x6620]) + LODWORD(STACK[0x6720]);
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x6610]) - LODWORD(STACK[0x6708]) + 1574864546;
  LODWORD(STACK[0x5404]) = -348721946 - LODWORD(STACK[0x6600]) + LODWORD(STACK[0x585C]);
  LODWORD(STACK[0x5598]) = LODWORD(STACK[0x587C]) | LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x6648]) = 1984017672 - LODWORD(STACK[0x6608]) + LODWORD(STACK[0x6480]);
  LODWORD(STACK[0x54E0]) = LODWORD(STACK[0x65F8]) | LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x585C]) = LODWORD(STACK[0x63A8]) - LODWORD(STACK[0x6618]);
  v19 = ((a8 ^ 0x98B36852) & (((v15 << 8) | ((a1 ^ v11) << 16)) ^ 0xFBBF51FF) | ((v15 << 8) | ((a1 ^ v11) << 16)) & 0x4C9700) ^ 0x630C1114;
  v20 = (((v19 | 0xAB02BB) - (v19 | 0x54FD44)) << 8) + 1425884160;
  v21 = ((v20 ^ 0x680502FF) & (v13 ^ 0x6C0542E2) | v20 & 0x93FABD00) ^ 0x1060A5A0;
  LODWORD(STACK[0x56F4]) = v21 - ((2 * v21) & 0x45A6E8AC) + 584283222;
  v22 = (((v14 ^ v11) << 16) | ((v9 ^ v11) << 8) | v18) ^ 0xFFB15FCE;
  v23 = ((((v15 << 8) | ((v10 ^ v11) << 16)) ^ 0x318406FF) & (v8 ^ 0x31841695) | ((v15 << 8) | ((v10 ^ v11) << 16)) & 0x7BE900) ^ 0x4E122843;
  v24 = ((((2 * v23) | 0x8A372) - v23) << 8) + 2075019008;
  LODWORD(STACK[0x66B0]) = (((((2 * v22) | 0xB56AC2) - v22) << 8) + 625647360) & 0xCD599200;
  LODWORD(STACK[0x6720]) = ((v24 ^ 0xAC1129FF) & (v16 ^ 0xBE51AD30) | v24 & 0x41AE5200) ^ 0x41041026;
  v25 = ((*(unsigned __int8 *)STACK[0x66E8] ^ v11) << 8) | ((*(unsigned __int8 *)(STACK[0x6A20] + 228) ^ v11) << 16);
  v26 = ((*(unsigned __int8 *)(STACK[0x6AA0] + 3892) ^ 0x68297111) & ~v25 | v25 & 0xD68E00) ^ 0x81C00846;
  v27 = *(unsigned __int8 *)STACK[0x6680];
  v28 = ((*(unsigned __int8 *)(STACK[0x6A10] + 1017) ^ v11) << 16) | ((*(unsigned __int8 *)(v12 + 2352) ^ v11) << 8);
  v29 = ((*(unsigned __int8 *)(STACK[0x6830] + 3361) ^ 0xF55579) & ~v28 | v28 & 0xAAA00) << 8;
  LODWORD(STACK[0x6630]) = (((((2 * v26) | 0xA959E6) - v26) << 8) + 726863104) & 0xB37BE000;
  v30 = ((v29 ^ 0x2082AFF) & (v27 ^ 0x321C6A40) | v29 & 0xCDE39500) ^ 0x8CE00006;
  LODWORD(STACK[0x6480]) = v30;
  v31 = 2 * v30;
  v32 = STACK[0x6A70];
  v33 = ((*(unsigned __int8 *)STACK[0x6A60] ^ v11) << 16) | ((*(unsigned __int8 *)(STACK[0x6A70] + 2147) ^ v11) << 8);
  v34 = ((*(unsigned __int8 *)(STACK[0x6518] + 2185) ^ 0x5DF5045F) & ~v33 | v33 & 0xAFB00) ^ 0x2209;
  v35 = ((v34 + 11532061 - ((2 * v34) & 0x5FF7C6)) << 8) + 312832;
  LODWORD(STACK[0x63A8]) = (((v35 ^ 0x250092FF) & (*(unsigned __int8 *)(STACK[0x6A90] + 3998) ^ 0x2FD592D9) | v35 & 0xD02A6D00) ^ 0x3B344447) & 0x6AEBC1F7;
  v36 = STACK[0x6AC0];
  v37 = ((*(unsigned __int8 *)(STACK[0x6A40] + 979) ^ v11) << 8) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 1290) ^ v11) << 16);
  v38 = *(unsigned __int8 *)STACK[0x69E0];
  v39 = ((*(unsigned __int8 *)(STACK[0x6990] + 1669) ^ v11) << 16) | ((*(unsigned __int8 *)STACK[0x6660] ^ v11) << 8);
  v40 = (*(unsigned __int8 *)(v32 + 46) ^ 0xC2C7DA) & ~v39 | v39 & 0x3D3800;
  LODWORD(STACK[0x6708]) = (((*(unsigned __int8 *)(STACK[0x66B8] + 2314) ^ 0xFE48DF) & ~v37 | v37 & 0x1B700) << 8) & 0xD7853A00;
  v41 = (((v40 << 8) ^ 0x34108CFF) & (v38 ^ 0x7615EEAB) | (v40 << 8) & 0x89EA1100) ^ 0x810E1;
  v42 = *(unsigned __int8 *)(v12 + 1510);
  v43 = *(unsigned __int8 *)(STACK[0x6A00] + 1639) ^ v11;
  v44 = *(unsigned __int8 *)(v36 + 3596) ^ v11;
  LODWORD(STACK[0x6608]) = *(unsigned __int8 *)(STACK[0x6930] + 3065);
  v45 = ((v42 ^ 0x7337081) & ~((v43 << 16) | (v44 << 8)) | ((v43 << 16) | (v44 << 8)) & 0xCC8F00) ^ 0x580883C0;
  LODWORD(STACK[0x587C]) = v41;
  LODWORD(STACK[0x584C]) = ((v45 | 0x9BB1BC) - (v45 | 0x644E43)) << 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v17) - 4))(v31);
}

uint64_t sub_1009CB554(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  int v9;

  v6 = (((v5 - 21576) | 0x100E) + 1012) * a3;
  v7 = a3 == 255;
  v8 = (a3 + 1);
  *(_DWORD *)(STACK[0xDE60] + 4 * ((v6 + v3) % 0x2240u)) = *(_DWORD *)(STACK[0xDE60] + 4 * ((v6 + v4) % 0x2240u));
  v9 = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((53 * v9) ^ v5)) - 4))(a1, a2, v8);
}

uint64_t sub_1009CB5D4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  LODWORD(STACK[0x53F8]) = 1909489375 - LODWORD(STACK[0x6490]) + LODWORD(STACK[0x6488]);
  LODWORD(STACK[0x6650]) = LODWORD(STACK[0x66A0]) + LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x53F4]) = LODWORD(STACK[0x66A8]) - LODWORD(STACK[0x6780]) - 1156206665;
  LODWORD(STACK[0x6618]) = -1845737417 - LODWORD(STACK[0x6700]) + LODWORD(STACK[0x6688]);
  v12 = LODWORD(STACK[0x6638]) - LODWORD(STACK[0x6710]) - 900903889;
  LODWORD(STACK[0x6800]) = a6 - 20;
  LODWORD(STACK[0x6620]) = v12 + a6 - 20;
  LODWORD(STACK[0x66A8]) = v7 & (v10 ^ 0x32A66D02);
  LODWORD(STACK[0x6710]) = v8 | 0xDF4249EC;
  LODWORD(STACK[0x66A0]) = v9 & (v11 ^ 0x4C841FAD);
  LODWORD(STACK[0x6488]) = a1 | 0x87E0BFA0;
  LODWORD(STACK[0x6638]) = a3 + a2;
  LODWORD(STACK[0x6700]) = a7 & (a4 ^ 0x287AC518);
  LODWORD(STACK[0x5860]) = a5 | 0x733CB69E;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a6) - 4))();
}

uint64_t sub_1009CB7B8()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  unsigned __int8 v11;
  char v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  char v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  char v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  char v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  char v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  char v27;
  unsigned __int8 v28;
  unsigned __int8 v29;

  v3 = STACK[0x6800];
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x6800]) ^ 0x55F4;
  v4 = *(unsigned __int8 *)(STACK[0xDE68] + (((v3 ^ 0x55F4u) - 11018) * v0 + 26193860) % 0x1808);
  v5 = *(char *)(STACK[0xDE68]
               + (5621
                * (((v4 ^ 0x42DC9803) - 1121753091) ^ ((v4 ^ 0x707DBF05) - 1887289093) ^ ((v4 ^ 0x32A127BFu) - 849422271))
                + 17031630)
               % 0x1808);
  v6 = v2 - 35072 * (v1 / 0x2240);
  v7 = STACK[0xDE60];
  *(_DWORD *)(STACK[0xDE60] + v6) = 1160041215;
  v8 = *(unsigned __int8 *)(STACK[0x6AC0] + 3103);
  v9 = *(_BYTE *)(STACK[0xDE68] + 5163) ^ 9;
  if ((v5 & 1) != 0)
    v9 = -80;
  *(_DWORD *)(STACK[0xDE60] + v6) = v9 ^ 0x4524D24F;
  v10 = *(_BYTE *)(v7 + v6);
  v11 = *(_BYTE *)(STACK[0xDE68] + 4632) ^ 0xF6 ^ v10;
  if ((v5 & 2) == 0)
    v11 = v10 ^ 0x4F;
  *(_DWORD *)(STACK[0xDE60] + v6) = v11 ^ 0x4524D24F;
  v12 = *(_BYTE *)(v7 + v6);
  v13 = *(_BYTE *)(STACK[0xDE68] + 4101) ^ 0xF6 ^ v12;
  v14 = v12 ^ 0x4F;
  if ((v5 & 4) == 0)
    v13 = v14;
  *(_DWORD *)(STACK[0xDE60] + v6) = v13 ^ 0x4524D24F;
  v15 = *(_BYTE *)(v7 + v6);
  v16 = *(_BYTE *)(STACK[0xDE68] + 3570) ^ 0xF6 ^ v15;
  v17 = v15 ^ 0x4F;
  if (((v5 ^ 0x48) & 8) == 0)
    v16 = v17;
  *(_DWORD *)(STACK[0xDE60] + v6) = v16 ^ 0x4524D24F;
  v18 = *(_BYTE *)(v7 + v6);
  v19 = *(_BYTE *)(STACK[0xDE68] + 3039) ^ 0xF6 ^ v18;
  v20 = v18 ^ 0x4F;
  if ((v5 & 0x10) != 0)
    v19 = v20;
  *(_DWORD *)(STACK[0xDE60] + v6) = v19 ^ 0x4524D24F;
  v21 = *(_BYTE *)(v7 + v6);
  v22 = *(_BYTE *)(STACK[0xDE68] + 2508) ^ 0xF6 ^ v21;
  v23 = v21 ^ 0x4F;
  if ((v5 & 0x20) != 0)
    v22 = v23;
  *(_DWORD *)(STACK[0xDE60] + v6) = v22 ^ 0x4524D24F;
  v24 = *(_BYTE *)(v7 + v6);
  v25 = *(_BYTE *)(STACK[0xDE68] + 1977) ^ 0xF6 ^ v24;
  v26 = v24 ^ 0x4F;
  if (((v5 ^ 0x48) & 0x40) == 0)
    v26 = v25;
  *(_DWORD *)(STACK[0xDE60] + v6) = v26 ^ 0x4524D24F;
  v27 = *(_BYTE *)(v7 + v6);
  v28 = v27 ^ 0x4F;
  v29 = *(_BYTE *)(STACK[0xDE68] + 1446) ^ 0xF6 ^ v27;
  if (v5 < 0)
    v29 = v28;
  *(_DWORD *)(STACK[0xDE60] + v6) = v29 ^ 0x4524D24F;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (((4 * (v0 != 255)) | (16 * (v0 != 255))) ^ v3))
                                          - 4))(v8);
}

uint64_t sub_1009CBB88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;

  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x6760]) - 256;
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6730]) | LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x6490]) = LODWORD(STACK[0x66A8]) | LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x66A0]) | LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x54C8]) = LODWORD(STACK[0x6638]) - LODWORD(STACK[0x63A8]);
  LODWORD(STACK[0x53F0]) = LODWORD(STACK[0x5860]) - LODWORD(STACK[0x587C]) + 1180804273;
  v17 = ((a8 ^ 0xB9) << 16) | ((v11 ^ 0xB9) << 8);
  v18 = ((v8 ^ 0x9F5C3E99) & ~v17 | v17 & 0xA3C100) ^ 0x602101D4;
  v19 = (((v18 | 0x207CA6) - (v18 | 0xDF8359)) << 8) - 545040128;
  LODWORD(STACK[0x5860]) = ((v19 ^ 0xA280A0FF) & (v14 ^ 0xFB82E253) | v19 & 0x47D1D00) ^ 0x4410401;
  v20 = ((a1 ^ 0xB9) << 16) | ((a5 ^ 0xB9) << 8);
  v21 = ((v10 ^ 0x709EBEB7) & ~v20 | v20 & 0x614100) ^ 0xF6D3D7ED;
  v22 = ((((2 * v21) | 0x17F87C) - v21) << 8) - 201080320;
  v23 = ((v15 ^ 0xB9) << 16) | ((v16 ^ 0xB9) << 8);
  v24 = ((v13 ^ 0xDA3CCC92) & ~v23 | v23 & 0xC33300) ^ 0x311C4;
  LODWORD(STACK[0x587C]) = ((((v24 | 0x91648E) - (v24 | 0x6E9B71)) << 8) + 1855680768) & 0x901300;
  LODWORD(STACK[0x5820]) = (((v22 ^ 0x194220FF) & (v12 ^ 0x5B47EDDD) | v22 & 0xA4B81200) ^ 0x24280083) & 0xD1DFA201;
  v25 = ((a6 ^ 0xB9) << 8) | ((a7 ^ 0xB9) << 16);
  v26 = ((v9 ^ 0xAC4B4BB2) & ~v25 | v25 & 0xB4B400) ^ 0x5214B4F4;
  LODWORD(STACK[0x5818]) = ((((v26 | 0x9BAA04) - (v26 | 0x6455FB)) << 8) + 1683356416) & 0xA2ED1E00;
  v27 = STACK[0x6AB0];
  v28 = *(unsigned __int8 *)(STACK[0x6A50] + 1252);
  v29 = *(unsigned __int8 *)(STACK[0x69B0] + 1775);
  LODWORD(STACK[0x5480]) = *(unsigned __int8 *)(STACK[0x6A10] + 539);
  v30 = ((v28 ^ 0xB9) << 16) | ((v29 ^ 0xB9) << 8);
  v31 = ((*(unsigned __int8 *)STACK[0x6A30] ^ 0xFFA35DAA) & ~v30 | v30 & 0x5CA200) ^ 0xC20C0;
  LODWORD(STACK[0x547C]) = ((((2 * v31) & 0x4465AA) - v31) << 8) + 1573726720;
  v32 = STACK[0x6A70];
  v33 = STACK[0x68D0];
  v34 = STACK[0x6A90];
  v35 = STACK[0x6A00];
  v36 = ((*(unsigned __int8 *)(STACK[0x6A70] + 2754) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x68D0] + 3854) ^ 0xB9) << 16);
  v37 = (*(unsigned __int8 *)(STACK[0x6A90] + 1199) ^ 0xF847B417) & ~v36 | v36 & 0xB84B00;
  v38 = (((v37 & 0xA876A9 ^ 0xA874A9) + (v37 & 0x578956 ^ 0x811)) << 8) - 256;
  v39 = *(unsigned __int8 *)(STACK[0x6AC0] + 3672);
  LODWORD(STACK[0x57D4]) = ((v38 ^ 0x2340FF) & (*(unsigned __int8 *)(STACK[0x6A00] + 2519) ^ 0x646B4225) | v38 & 0x9B94BD00) ^ 0x9B109921 | 0x2A3330B7;
  v40 = STACK[0x6A20];
  v41 = ((*(unsigned __int8 *)(v34 + 706) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(v27 + 1601) ^ 0xB9) << 8);
  LODWORD(STACK[0x57D0]) = (((v39 ^ 0x6ECA3F) & ~v41 | v41 & 0x913500) << 8) & 0x97F38000;
  v42 = ((*(unsigned __int8 *)(STACK[0x69F0] + 1593) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(v35 + 1085) ^ 0xB9) << 8);
  v43 = ((*(unsigned __int8 *)(STACK[0x6A40] + 1070) ^ 0xC99D7E) & ~v42 | v42 & 0x366200) << 8;
  LODWORD(STACK[0x57C4]) = (((v43 ^ 0x126230FF) & (*(unsigned __int8 *)(STACK[0x6990] + 1669) ^ 0x9BF2B379) | v43 & 0x640D4C00) ^ 0x44080414) & 0x58B837B0;
  v44 = ((*(unsigned __int8 *)(v32 + 2481) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(v33 + 888) ^ 0xB9) << 16);
  v45 = ((*(unsigned __int8 *)(v40 + 2921) ^ 0x649D6DF1) & ~v44 | v44 & 0x629200) ^ 0x13029081;
  LODWORD(STACK[0x63A8]) = (((((2 * v45) | 0xD47A28) - v45) << 8) + 365095936) & 0x44134800;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                        + 8 * SLODWORD(STACK[0x6780]))
                                                                            - 4))(*(unsigned __int8 *)STACK[0x6890], (LODWORD(STACK[0x6780]) + 15975106), 255, 36215998, 144863992);
}

uint64_t sub_1009CC364(uint64_t a1, unsigned int a2, int a3, unint64_t a4, uint64_t a5)
{
  int v5;

  *(_BYTE *)(STACK[0xDE68] + a2 % 0x1808) = *(_BYTE *)(STACK[0xDE60] + a5 - 35072 * (a4 / 0x2240)) ^ 0x46;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                                 + 8
                                                                                                 * ((3424 * (a3 == 0)) ^ v5))
                                                                                     - 4))(a1, a2 + 5621, (a3 - 1), a4 + 6419, a5 + 25676);
}

uint64_t sub_1009CC408@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;

  LODWORD(STACK[0x53E4]) = LODWORD(STACK[0x6770]) | LODWORD(STACK[0x6740]);
  LODWORD(STACK[0x6638]) = LODWORD(STACK[0x6710]) - LODWORD(STACK[0x6720]) - 1872831734;
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x6700]) | LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x5840]) = a3 & 0xF83DA6B0;
  LODWORD(STACK[0x5788]) = v3 & (v15 ^ 0xFF6FEC73);
  LODWORD(STACK[0x57BC]) = v11 + v8;
  LODWORD(STACK[0x5780]) = a2 & (v16 ^ 0x5D12E1AE);
  LODWORD(STACK[0x53E0]) = v14 + v12 - v17;
  LODWORD(STACK[0x5778]) = v5 | 0xD5CCCF48;
  LODWORD(STACK[0x57A8]) = v7 & (v6 ^ 0x680C7F2F);
  LODWORD(STACK[0x5758]) = v10 + v9;
  LODWORD(STACK[0x5850]) = v4 & (a1 ^ 0xBBECB7FE);
  v18 = STACK[0x6AD8];
  LODWORD(STACK[0x6800]) = v13 - 2708;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (v13 - 2708)))(255);
}

uint64_t sub_1009CC59C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  char v12;
  unint64_t v13;
  char v14;
  unsigned __int8 v15;
  int v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  int v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  int v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  int v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;

  v6 = LODWORD(STACK[0x6800]) + 1402;
  v7 = STACK[0xDE68];
  v8 = *(unsigned __int8 *)(STACK[0xDE68] + a5 % 0x1808);
  LODWORD(STACK[0x6770]) = v6;
  v9 = 5621
     * (((v8 ^ 0xF3FEAB9A) + (v6 ^ 0xC016F83)) ^ ((v8 ^ 0x94A85C40) + 1800905664) ^ ((v8 ^ 0x6756F763) - 1733752675))
     + 5379297;
  v10 = a3 - 35072 * (v5 / 0x2240);
  v11 = *(char *)(v7 + v9 % 0x1808);
  v12 = *(_BYTE *)(v7 + v9 % 0x1808);
  v13 = STACK[0xDE60];
  *(_DWORD *)(STACK[0xDE60] + v10) = 1160041215;
  v14 = v12 ^ 0x67;
  v15 = *(_BYTE *)(STACK[0xDE68] + 5163) ^ 0xE6;
  if ((v14 & 1) == 0)
    v15 = 95;
  v16 = v15 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v16;
  v17 = v16 ^ 0xA0;
  v18 = *(_BYTE *)(STACK[0xDE68] + 4632) ^ 0x19 ^ v16;
  if ((v14 & 2) != 0)
    v18 = v17;
  v19 = v18 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v19;
  v20 = v19 ^ 0xA0;
  v21 = *(_BYTE *)(STACK[0xDE68] + 4101) ^ 0x19 ^ v19;
  if ((v14 & 4) != 0)
    v21 = v20;
  v22 = v21 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v22;
  v23 = v22 ^ 0xA0;
  v24 = *(_BYTE *)(STACK[0xDE68] + 3570) ^ 0x19 ^ v22;
  if ((v11 & 8) != 0)
    v24 = v23;
  v25 = v24 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v25;
  v26 = v25 ^ 0xA0;
  v27 = *(_BYTE *)(STACK[0xDE68] + 3039) ^ 0x19 ^ v25;
  if ((v11 & 0x10) != 0)
    v27 = v26;
  v28 = v27 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v28;
  v29 = v28 ^ 0xA0;
  v30 = *(_BYTE *)(STACK[0xDE68] + 2508) ^ 0x19 ^ v28;
  if ((v14 & 0x20) == 0)
    v30 = v29;
  v31 = v30 ^ 0x4524D2A0;
  *(_DWORD *)(v13 + v10) = v31;
  v32 = v31 ^ 0xA0;
  v33 = *(_BYTE *)(STACK[0xDE68] + 1977) ^ 0x19 ^ v31;
  if ((v14 & 0x40) != 0)
    v34 = v32;
  else
    v34 = v33;
  *(_DWORD *)(v13 + v10) = v34 ^ 0x4524D2A0;
  v35 = *(unsigned __int8 *)(STACK[0x6A70] + 1988);
  LODWORD(STACK[0x66B0]) = *(unsigned __int8 *)(STACK[0x6920] + 84);
  v36 = (unsigned __int8 *)STACK[0x6990];
  LODWORD(STACK[0x6700]) = *(unsigned __int8 *)STACK[0x69E0];
  LODWORD(STACK[0x66A8]) = *(unsigned __int8 *)(STACK[0x68C0] + 114);
  v37 = STACK[0x6A10];
  LODWORD(STACK[0x6740]) = *(unsigned __int8 *)(STACK[0x6A10] + 501);
  v38 = STACK[0x6A30];
  LODWORD(STACK[0x6710]) = *(unsigned __int8 *)(STACK[0x6A30] + 1077);
  LODWORD(STACK[0x6708]) = *(unsigned __int8 *)(STACK[0x6AB0] + 3452);
  LODWORD(STACK[0x6730]) = *v36;
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)(STACK[0x6AC0] + 2534);
  v39 = *(unsigned __int8 *)(v37 + 2003);
  v40 = v34 ^ 0xA0 ^ *(_BYTE *)(STACK[0xDE68] + 1446) ^ 0x19;
  v41 = *(unsigned __int8 *)(STACK[0x6AA0] + 2170);
  if (v11 < 0)
    v40 = v34;
  LODWORD(STACK[0x6750]) = v36[1707];
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(v38 + 1168);
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(STACK[0x6A40] + 1108);
  *(_DWORD *)(v13 + v10) = v40 ^ 0x4524D2A0;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                 + 8
                                                                                                 * ((31 * (a1 == 0)) ^ LODWORD(STACK[0x6800]))))((a1 - 1), v35, a3 + 25676, v39, a5 + 5621, v41);
}

uint64_t sub_1009CC9E8@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W5>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  uint64_t (*v39)(uint64_t, uint64_t);

  LODWORD(STACK[0x5790]) = v9;
  LODWORD(STACK[0x5798]) = a4;
  LODWORD(STACK[0x57A4]) = v12;
  LODWORD(STACK[0x65F0]) |= LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x5438]) = LODWORD(STACK[0x5788]) | LODWORD(STACK[0x587C]);
  LODWORD(STACK[0x53DC]) = LODWORD(STACK[0x5780]) | LODWORD(STACK[0x5818]);
  v18 = LODWORD(STACK[0x5778]) - LODWORD(STACK[0x57D4]);
  LODWORD(STACK[0x587C]) = LODWORD(STACK[0x5758]) - LODWORD(STACK[0x57C4]);
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x584C]) + 1682850560;
  v19 = STACK[0x6770];
  LODWORD(STACK[0x5818]) = v18 + ((LODWORD(STACK[0x6770]) - 29) ^ 0x2A330B7F);
  v20 = STACK[0x66B0];
  v21 = ((((a1 << 8) | ((v7 ^ 0xB9) << 16)) ^ 0x1042FF) & (LODWORD(STACK[0x66B0]) ^ 0x105BCA) | ((a1 << 8) | ((v7 ^ 0xB9) << 16)) & 0xEFA400) << 8;
  v22 = ((v10 ^ 0xB9) << 16) | ((a5 ^ 0xB9) << 8);
  v23 = (v11 ^ 0xE11F096A) & ~v22 | v22 & 0xE0F600;
  LODWORD(STACK[0x57D4]) = ((((v23 & 0x4EB93D ^ 0xE2939) + (v23 & 0xB146C2 ^ 0xA00601)) << 8) - 256) & 0x551D0200;
  v24 = ((v15 ^ 0xB9) << 16) | ((v16 ^ 0xB9) << 8);
  v25 = (v13 ^ 0x8DDEACD0) & ~v24 | v24 & 0x215300;
  LODWORD(STACK[0x57C4]) = (((v25 & 0x106D60 ^ 0x106C60) + (v25 ^ 0x52011394) - ((v25 ^ 0x52011394) & 0x106D60)) << 8) & 0xA550E500;
  v26 = LODWORD(STACK[0x66A8]) << 8;
  v27 = (((v26 | (v20 << 16)) ^ 0x404FF) & (v5 ^ 0x3C0D40) | (v26 | (v20 << 16)) & 0xC3F200) << 8;
  v28 = (v27 ^ 0x424004FF) & (LODWORD(STACK[0x6700]) ^ 0x7BE884DE) | v27 & 0x84177B00;
  v29 = ((LODWORD(STACK[0x6710]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x6708]) ^ 0xB9) << 16);
  v30 = ((LODWORD(STACK[0x6730]) ^ 0x8615592B) & ~v29 | v29 & 0xEAA600) ^ 0x71488269;
  v31 = ((v30 + 12995584 - ((2 * v30) & 0x8CB522)) << 8) + 954624;
  v32 = ((v31 ^ 0x445811FF) & (LODWORD(STACK[0x6740]) ^ 0x56D95367) | v31 & 0xA926AC00) ^ 0x20240C20;
  v33 = ((LODWORD(STACK[0x66A0]) ^ 0xB9) << 8) | ((v8 ^ 0xB9) << 16);
  v34 = (a1 ^ 0x867CC2F8) & ~v33 | v33 & 0x833D00;
  LODWORD(STACK[0x6740]) = ((v21 ^ 0xC80000FF) & (v17 ^ 0xC8AB502A) | v21 & 0x3754AF00) ^ 0x12000E64;
  LODWORD(STACK[0x6700]) = (v28 ^ 0x4117210) & 0xBF77F70D;
  v35 = ((v6 ^ 0xB9) << 8) | ((a3 ^ 0xB9) << 16);
  LODWORD(STACK[0x6730]) = (((LODWORD(STACK[0x6750]) ^ 0x17DE87) & ~v35 | v35 & 0xE82100) << 8) & 0x63E42600;
  v36 = ((v26 | ((LODWORD(STACK[0x6760]) ^ 0xB9) << 16)) ^ 0xDF0B44FF) & (v14 ^ 0xDF0B7D58) | (v26 | ((LODWORD(STACK[0x6760]) ^ 0xB9) << 16)) & 0xF48200;
  v37 = ((v36 & 0x945123 ^ 0x845121) + (v36 ^ 0x20100002) - ((v36 ^ 0x20100002) & 0x945123)) << 8;
  v38 = (v37 ^ 0x305110FF) & (LODWORD(STACK[0x6720]) ^ 0xB55D90F7) | v37 & 0x4AA26F00;
  LODWORD(STACK[0x6800]) = v38 & 0x5E4BA251;
  v39 = *(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v19);
  LODWORD(STACK[0x6770]) = (v38 & 0xA1B45DAE ^ 0xA11451AF) - 1;
  LODWORD(STACK[0x6720]) = (2 * v32) & 0xA941777C;
  LODWORD(STACK[0x6750]) = (2
                          * ((((((v34 & 0x5D813B ^ 0x41001B) + (v34 ^ 0xD1C89A4) - ((v34 ^ 0xD1C89A4) & 0x5D813B)) << 8) ^ 0x821400FF) & (a2 ^ 0x92DC5ECF) | (((v34 & 0x5D813B ^ 0x41001B) + (v34 ^ 0xD1C89A4) - ((v34 ^ 0xD1C89A4) & 0x5D813B)) << 8) & 0x6D23A100) ^ 0x8028188)) & 0xCF164734;
  return v39(36215998, 4339412);
}

uint64_t sub_1009CD110(unsigned int a1, unsigned int a2, int a3)
{
  int v3;
  int v4;
  int v5;

  *(_BYTE *)(STACK[0xDE68] + a2 % 0x1808) = *(_BYTE *)(STACK[0xDE60] + 4 * (a1 % 0x2240)) ^ 0x46;
  return (*(uint64_t (**)(_QWORD, _QWORD))(STACK[0x6AD8] + 8 * ((45 * (v3 != 0)) ^ a3)))(a1 + v5, a2 + v4);
}

uint64_t sub_1009CD194(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  LODWORD(STACK[0x6488]) = LODWORD(STACK[0x6488]) - LODWORD(STACK[0x6480]) - 1139826640;
  LODWORD(STACK[0x5434]) = LODWORD(STACK[0x57BC]) - LODWORD(STACK[0x5820]);
  LODWORD(STACK[0x53D4]) = LODWORD(STACK[0x57A8]) | LODWORD(STACK[0x57D0]);
  LODWORD(STACK[0x57D0]) = v5 & 0x5320394C;
  LODWORD(STACK[0x6710]) = v8 & (LODWORD(STACK[0x57A4]) ^ 0xAAE2FD22);
  LODWORD(STACK[0x5820]) = v7 & (LODWORD(STACK[0x5798]) ^ 0x5AAF1A48);
  LODWORD(STACK[0x6480]) = v9 + v4;
  LODWORD(STACK[0x6708]) = v6 - 410311782;
  LODWORD(STACK[0x66A8]) = a4 & (LODWORD(STACK[0x5790]) ^ 0x9C1BD9B8);
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)STACK[0x66F0];
  v10 = STACK[0x6A70];
  v11 = ((*(unsigned __int8 *)(STACK[0x6A70] + 1912) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6AB0] + 2663) ^ 0xB9) << 8);
  v12 = (*(unsigned __int8 *)(STACK[0x6A40] + 2587) ^ 0xD91311F9) & ~v11 | v11 & 0xECEE00;
  v13 = ((v12 & 0x2EFD3E ^ 0x88C24) + (v12 ^ 0xFDB671DA) - ((v12 ^ 0xFDB671DA) & 0x2EFD3E)) << 8;
  LODWORD(STACK[0x57BC]) = v13 ^ 0x14420BFF;
  LODWORD(STACK[0x66B0]) = v13 & 0x6924D000;
  v14 = ((*(unsigned __int8 *)(STACK[0x68D0] + 888) ^ 0xB9) << 16) | ((*(unsigned __int8 *)STACK[0x67D0] ^ 0xB9) << 8);
  v15 = ((*(unsigned __int8 *)STACK[0x6960] ^ 0x885670) & ~v14 | v14 & 0x77A900) << 8;
  LODWORD(STACK[0x6780]) = (((v15 ^ 0x14A124FF) & (*(unsigned __int8 *)(STACK[0x6518] + 2185) ^ 0x9CB5659F) | v15 & 0x634A9A00) ^ 0x21081A99) & 0xBF245504;
  v16 = *(unsigned __int8 *)(v10 + 46);
  v17 = ((*(unsigned __int8 *)(STACK[0x6A20] + 797) ^ 0xB9) << 16) | (v16 << 8);
  v18 = ((v17 ^ 0x2A1342FF) & (*(unsigned __int8 *)STACK[0x67F0] ^ 0x2A135315) | v17 & 0xECAC00) ^ 0x14ACAC53;
  v19 = (((v18 | 0xEE2F4B) - (v18 | 0x11D0B4)) << 8) + 298890240;
  v20 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((729 * (a3 != 68080650)) ^ (a3 - 6649)));
  LODWORD(STACK[0x6760]) = ((v19 ^ 0xAE060AFF) & (v16 ^ 0xBF66BEFF) | v19 & 0x40994100) ^ 0x84188;
  return ((uint64_t (*)(uint64_t))(v20 - 8))(1160041215);
}

uint64_t sub_1009CD670(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unsigned __int8 v12;
  int v13;
  char v14;
  unsigned __int8 v15;
  char v16;
  unsigned __int8 v17;
  char v18;
  unsigned __int8 v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;
  char v24;
  unsigned __int8 v25;
  char v26;
  unsigned __int8 v27;

  v8 = STACK[0xDE68];
  v9 = v4 - 35072 * (a4 / 0x2240);
  v10 = *(char *)(v8
                + (5621
                 * (((*(unsigned __int8 *)(v8 + v6 % 0x1808) ^ 0xF3F4BBDB) + ((v7 + 2256) ^ 0xC0B6FC3)) ^ ((*(unsigned __int8 *)(v8 + v6 % 0x1808) ^ 0x76F17211) - 1995534865) ^ ((*(unsigned __int8 *)(v8 + v6 % 0x1808) ^ 0x8505C973) + 2063218317))
                 + 8279733)
                % 0x1808);
  v11 = STACK[0xDE60];
  *(_DWORD *)(STACK[0xDE60] + v9) = a1;
  v12 = *(_BYTE *)(STACK[0xDE68] + 5163) ^ 0x4E;
  if ((v10 & 1) != 0)
    v12 = -9;
  v13 = a1 - 247;
  *(_DWORD *)(STACK[0xDE60] + v9) = v12 ^ (a1 - 247);
  v14 = *(_BYTE *)(v11 + v9);
  v15 = v14 ^ 8;
  if ((v10 & 2) != 0)
    v15 = *(_BYTE *)(STACK[0xDE68] + 4632) ^ 0xB1 ^ v14;
  *(_DWORD *)(STACK[0xDE60] + v9) = v15 ^ v13;
  v16 = *(_BYTE *)(v11 + v9);
  v17 = *(_BYTE *)(STACK[0xDE68] + 4101) ^ 0xB1 ^ v16;
  if (((v10 ^ 0x8C) & 4) != 0)
    v17 = v16 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v17 ^ v13;
  v18 = *(_BYTE *)(v11 + v9);
  v19 = *(_BYTE *)(STACK[0xDE68] + 3570) ^ 0xB1 ^ v18;
  if (((v10 ^ 0x8C) & 8) == 0)
    v19 = v18 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v19 ^ v13;
  v20 = *(_BYTE *)(v11 + v9);
  v21 = *(_BYTE *)(STACK[0xDE68] + 3039) ^ 0xB1 ^ v20;
  if ((v10 & 0x10) != 0)
    v21 = v20 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v21 ^ v13;
  v22 = *(_BYTE *)(v11 + v9);
  v23 = *(_BYTE *)(STACK[0xDE68] + 2508) ^ 0xB1 ^ v22;
  if ((v10 & 0x20) != 0)
    v23 = v22 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v23 ^ v13;
  v24 = *(_BYTE *)(v11 + v9);
  v25 = *(_BYTE *)(STACK[0xDE68] + 1977) ^ 0xB1 ^ v24;
  if ((v10 & 0x40) == 0)
    v25 = v24 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v25 ^ v13;
  v26 = *(_BYTE *)(v11 + v9);
  v27 = *(_BYTE *)(STACK[0xDE68] + 1446) ^ 0xB1 ^ v26;
  if (v10 < 0)
    v27 = v26 ^ 8;
  *(_DWORD *)(STACK[0xDE60] + v9) = v27 ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25409 * (v5 == 0)) ^ v7)) - 8))();
}

uint64_t sub_1009CD9BC(uint64_t a1, char a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;

  LODWORD(STACK[0x584C]) = LODWORD(STACK[0x63B0]) + LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x5408]) = LODWORD(STACK[0x57D0]) - LODWORD(STACK[0x6740]) + 1450173273;
  LODWORD(STACK[0x5420]) = LODWORD(STACK[0x5820]) | LODWORD(STACK[0x57C4]);
  LODWORD(STACK[0x53C0]) = v5 + 1419810984 - LODWORD(STACK[0x6720]) + v6;
  LODWORD(STACK[0x53C8]) = LODWORD(STACK[0x66A8]) | LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x6730]) = v8 + v7;
  LODWORD(STACK[0x6740]) = v2 | 0x62F7DA6E;
  v10 = ((v4 ^ 0xB9) << 16) | ((a2 ^ (v9 - 5) ^ 0x58) << 8);
  v11 = ((v3 ^ 0xB68289FD) & ~v10 | v10 & 0x7D7600) ^ 0x483C56BA;
  LODWORD(STACK[0x6720]) = (((((2 * v11) & 0x9E8B32) - v11) << 8) - 1329961472) & 0xB53EF600;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v9))();
}

uint64_t sub_1009CDBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  unint64_t v8;

  *(_BYTE *)(STACK[0xDE68] + v8 % 0x1808) = *(_BYTE *)(STACK[0xDE60]
                                                     + 4
                                                     * (v5
                                                      + ((433 * (v6 ^ 0x2BEA)) ^ (a5 + 1536))
                                                      - 8768
                                                      * ((((433 * (v6 ^ 0x2BEA)) ^ (a5 + 1536)) + v5)
                                                       / 0x2240))) ^ 0x46;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((7 * (v7 != 0)) ^ v6)))();
}

uint64_t sub_1009CDC64()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;

  LODWORD(STACK[0x543C]) = LODWORD(STACK[0x5840]) - LODWORD(STACK[0x5860]) + (v4 ^ 0x83E13E3C);
  LODWORD(STACK[0x54A8]) = LODWORD(STACK[0x6710]) | LODWORD(STACK[0x57D4]);
  LODWORD(STACK[0x5860]) = LODWORD(STACK[0x6708]) - LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x5584]) = v3 | LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x5820]) = v0 - v5 - 670086210;
  LODWORD(STACK[0x6710]) = v1 & (v2 ^ 0x4AC10998);
  v6 = STACK[0x6AB0];
  v7 = STACK[0x6A90];
  v8 = STACK[0x68F0];
  v9 = ((*(unsigned __int8 *)(STACK[0x6AB0] + 1510) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6A90] + 1730) ^ 0xB9) << 8);
  v10 = (*(unsigned __int8 *)(STACK[0x68F0] + 372) ^ 0x25F37CD6) & ~v9 | v9 & 0xC8300;
  v11 = (((v10 & 0x5D27FC ^ 0xAAD983) - (v10 | 0x5D27FC)) << 8) + 1562901504;
  v12 = *(unsigned __int8 *)(STACK[0x6A70] + 46);
  LODWORD(STACK[0x66B0]) = ((v11 ^ 0x4001FF) & (*(unsigned __int8 *)STACK[0x6980] ^ 0x1E169AC) | v11 & 0xFE1E9600) ^ 0xA81286E0 | 0xC91D80C6;
  v13 = STACK[0x6AC0];
  v14 = ((*(unsigned __int8 *)(v7 + 1457) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6AC0] + 1290) ^ 0xB9) << 16);
  v15 = ((v12 ^ 0xA2EC9EDF) & ~v14 | v14 & 0x136100) ^ 0x5C012080;
  v16 = ((((2 * v15) | 0x4375B8) - v15) << 8) + 1581589504;
  v17 = ((v16 ^ 0x80DAC0FF) & (*(unsigned __int8 *)(v8 + 2079) ^ 0xC4DED804) | v16 & 0x3B212700) ^ 0xA212500;
  LODWORD(STACK[0x6750]) = v17;
  LODWORD(STACK[0x66A8]) = 2 * v17;
  v18 = *(unsigned __int8 *)(v13 + 2792);
  HIDWORD(v19) = (v18 >> 4) ^ 0xB;
  LODWORD(v19) = (v18 << 28) ^ 0x9FFFFFFF;
  v20 = STACK[0x6A60];
  v21 = ((*(unsigned __int8 *)(v6 + 1601) ^ 0xB9) << 8) | ((v19 >> 28) << 16);
  v22 = ((*(unsigned __int8 *)(STACK[0x6A60] + 1062) ^ 0xC1C0D3) & ~v21 | v21 & 0x3E3F00) << 8;
  LODWORD(STACK[0x6708]) = ((v22 ^ 0x200A10FF) & (*(unsigned __int8 *)(v6 + 2663) ^ 0xA14A72A1) | v22 & 0x5EB58D00) ^ 0x420008C3;
  v23 = ((*(unsigned __int8 *)(v20 + 713) ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x68B0] + 2883) ^ 0xB9) << 16);
  v24 = STACK[0x6A00];
  v25 = *(unsigned __int8 *)(STACK[0x6A00] + 3209);
  LODWORD(STACK[0x66A0]) = (((*(unsigned __int8 *)(v13 + 1768) ^ 0x44EBB1) & ~v23 | v23 & 0xBB1400) << 8) & 0x52F0EF00;
  v26 = ((*(unsigned __int8 *)(v24 + 1639) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6670] + 1950) ^ 0xB9) << 8);
  v27 = ((*(unsigned __int8 *)(STACK[0x6940] + 1062) ^ 0x56849906) & ~v26 | v26 & 0x7B6600) ^ 0x21736240;
  v28 = ((((2 * v27) & 0xBB9808) - v27) << 8) + 573831936;
  LODWORD(STACK[0x63B0]) = ((v28 ^ 0xA31EBFF) & (v25 ^ 0x9AF1EBD3) & 0xFF8657D6 | v28 & 0x65061400) ^ 0x45021401;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v4))(880305433, 1160041215);
}

uint64_t sub_1009CE200(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  int v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  unsigned __int8 v20;
  char v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  char v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  char v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  char v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  char v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  unsigned __int8 v37;

  v11 = *(char *)(STACK[0xDE68]
                + (5621
                 * (((*(unsigned __int8 *)(STACK[0xDE68] + v9 % 0x1808) ^ 0x14B2D9AB) + a7) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v9 % 0x1808) ^ 0x20CAB5A8)
                                                                                             - 550155688) ^ ((*(unsigned __int8 *)(STACK[0xDE68] + v9 % 0x1808) ^ (a1 + 1953)) + a6))
                 + 18470606)
                % 0x1808);
  v12 = 4
      * (a5
       + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
       - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240));
  *(_DWORD *)(STACK[0xDE60] + v12) = a2;
  v13 = *(_BYTE *)(STACK[0xDE60] + v12);
  v14 = v13 ^ 0x9E;
  v15 = v13 ^ *(_BYTE *)(STACK[0xDE68] + 5163) ^ 0x27;
  if ((v11 & 1) != 0)
    v15 = v14;
  v16 = a2 - 97;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v15 ^ (a2 - 97);
  v17 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v18 = v17 ^ *(_BYTE *)(STACK[0xDE68] + 4632) ^ 0x27;
  if (((v11 ^ 0x12) & 2) != 0)
    v18 = v17 ^ 0x9E;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v18 ^ v16;
  v19 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v20 = v19 ^ *(_BYTE *)(STACK[0xDE68] + 4101) ^ 0x27;
  if ((v11 & 4) == 0)
    v20 = v19 ^ 0x9E;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v20 ^ v16;
  v21 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v22 = v21 ^ 0x9E;
  v23 = v21 ^ *(_BYTE *)(STACK[0xDE68] + 3570) ^ 0x27;
  if ((v11 & 8) != 0)
    v23 = v22;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v23 ^ v16;
  v24 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v25 = v24 ^ 0x9E;
  v26 = v24 ^ *(_BYTE *)(STACK[0xDE68] + 3039) ^ 0x27;
  if (((v11 ^ 0x12) & 0x10) != 0)
    v27 = v26;
  else
    v27 = v25;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v27 ^ v16;
  v28 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v29 = v28 ^ 0x9E;
  v30 = v28 ^ *(_BYTE *)(STACK[0xDE68] + 2508) ^ 0x27;
  if ((v11 & 0x20) != 0)
    v30 = v29;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v30 ^ v16;
  v31 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v32 = v31 ^ 0x9E;
  v33 = v31 ^ *(_BYTE *)(STACK[0xDE68] + 1977) ^ 0x27;
  if ((v11 & 0x40) == 0)
    v33 = v32;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v33 ^ v16;
  v34 = *(_BYTE *)(STACK[0xDE60]
                 + 4
                 * (a5
                  + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
                  - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240)));
  v35 = v34 ^ 0x9E;
  v36 = v34 ^ *(_BYTE *)(STACK[0xDE68] + 1446) ^ 0x27;
  if (v11 >= 0)
    v37 = v36;
  else
    v37 = v35;
  *(_DWORD *)(STACK[0xDE60]
            + 4
            * (a5
             + (((a8 + 14589) | 0x61) ^ (v10 + 1386))
             - 8768 * (((((a8 + 14589) | 0x61) ^ (v10 + 1386)) + a5) / 0x2240))) = v37 ^ v16;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8 * (v8 != 0)) | (16 * (v8 != 0)) | a8)))();
}

uint64_t sub_1009CE534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  LODWORD(STACK[0x6628]) = LODWORD(STACK[0x5850]) | LODWORD(STACK[0x63A8]);
  LODWORD(STACK[0x5418]) = LODWORD(STACK[0x6770]) + LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x53B8]) = 1317276740 - LODWORD(STACK[0x6760]) + LODWORD(STACK[0x6740]) + 1669;
  LODWORD(STACK[0x6740]) = STACK[0x66A8] & 0x562309C6;
  LODWORD(STACK[0x66A8]) = v4 & 0x9F24CC5A;
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  LODWORD(STACK[0x63A8]) = v5 - 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 - 8))(36215998, a2, a3, 144863992);
}

uint64_t sub_1009CE680(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  unint64_t v5;
  int v6;

  *(_BYTE *)(STACK[0xDE68] + v5 % 0x1808) = *(_BYTE *)(STACK[0xDE60] + a4 - 35072 * (a1 / 0x2240)) ^ (((v4 + 49) | 0x43) - 1);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((50 * (v6 != 0)) ^ v4))
                                                                              - 8))(a1 + 6419, a2, a3, a4 + 25676);
}

uint64_t sub_1009CE738(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;

  LODWORD(STACK[0x541C]) = LODWORD(STACK[0x6730]) - LODWORD(STACK[0x6780]);
  LODWORD(STACK[0x53B4]) = -920813370 - LODWORD(STACK[0x66B0]) + v3;
  LODWORD(STACK[0x5840]) = v5 - a3 - 101579896;
  LODWORD(STACK[0x5478]) = v6 | LODWORD(STACK[0x66A0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 12))();
}

uint64_t sub_1009CE7F0()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  unsigned __int8 v11;
  char v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  char v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  char v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  char v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  BOOL v28;
  char v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  char v32;
  unsigned __int8 v33;

  v5 = STACK[0xDE68];
  v6 = *(unsigned __int8 *)(STACK[0xDE68]
                          + v1
                          + ((v0 + 902) ^ 0x18FE409)
                          - 6152 * ((((v0 + 902) ^ 0x18FE409u) + v1) / 0x1808));
  v7 = STACK[0x6A10];
  LODWORD(STACK[0x6780]) = *(unsigned __int8 *)(STACK[0x6A10] + 1017);
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)STACK[0x68E0];
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(STACK[0x6A90] + 3998);
  LODWORD(STACK[0x6800]) = *(unsigned __int8 *)(v7 + 539);
  v8 = v4 - 35072 * (v3 / 0x2240);
  v9 = *(char *)(v5
               + (5621
                * (((v6 ^ 0x96D76907) + 1764267769) ^ ((v6 ^ 0x1B801FC) - 28836348) ^ ((v6 ^ 0x976F6842) + 1754306494))
                + 24299583)
               % 0x1808);
  *(_DWORD *)(STACK[0xDE60] + v8) = 1160041215;
  v10 = *(_BYTE *)(STACK[0xDE60] + v8);
  v11 = *(_BYTE *)(STACK[0xDE68] + 5163) ^ 0x9B ^ v10;
  if (((2 * (v9 & 1 ^ 0x67)) | 0xA8) - (v9 & 1 ^ 0x67) == 134)
    v11 = v10 ^ 0x22;
  *(_DWORD *)(STACK[0xDE60] + v8) = v11 ^ 0x4524D222;
  v12 = *(_BYTE *)(STACK[0xDE60] + v8);
  v13 = *(_BYTE *)(STACK[0xDE68] + 4632) ^ 0x9B ^ v12;
  v14 = v12 ^ 0x22;
  if (((2 * (v9 & 2 ^ 0x66)) | 0xA8) - (v9 & 2 ^ 0x66) == 134)
    v13 = v14;
  *(_DWORD *)(STACK[0xDE60] + v8) = v13 ^ 0x4524D222;
  v15 = v9 ^ 0x48;
  v16 = *(_BYTE *)(STACK[0xDE60] + v8);
  v17 = *(_BYTE *)(STACK[0xDE68] + 4101) ^ 0x9B ^ v16;
  v18 = v16 ^ 0x22;
  if ((v9 & 4) == 0)
    v17 = v18;
  *(_DWORD *)(STACK[0xDE60] + v8) = v17 ^ 0x4524D222;
  v19 = *(_BYTE *)(STACK[0xDE60] + v8);
  v20 = *(_BYTE *)(STACK[0xDE68] + 3570) ^ 0x9B ^ v19;
  v21 = v19 ^ 0x22;
  if (((2 * (v15 & 8 | 0x66)) | 0xA8) - (v15 & 8 | 0x66) == 134)
    v20 = v21;
  *(_DWORD *)(STACK[0xDE60] + v8) = v20 ^ 0x4524D222;
  v22 = *(_BYTE *)(STACK[0xDE60] + v8);
  v23 = *(_BYTE *)(STACK[0xDE68] + 3039) ^ 0x9B ^ v22;
  v24 = v22 ^ 0x22;
  if ((v9 & 0x10) != 0)
    v23 = v24;
  *(_DWORD *)(STACK[0xDE60] + v8) = v23 ^ 0x4524D222;
  v25 = *(_BYTE *)(STACK[0xDE60] + v8);
  v26 = *(_BYTE *)(STACK[0xDE68] + 2508) ^ 0x9B ^ v25;
  v27 = v25 ^ 0x22;
  if (((2 * (v9 & 0x20 | 0x46)) | 0xA8) - (v9 & 0x20 | 0x46) != 134)
    v27 = v26;
  *(_DWORD *)(STACK[0xDE60] + v8) = v27 ^ 0x4524D222;
  v28 = (v15 & 0x40) == 0;
  v29 = *(_BYTE *)(STACK[0xDE60] + v8);
  v30 = *(_BYTE *)(STACK[0xDE68] + 1977) ^ 0x9B ^ v29;
  v31 = v29 ^ 0x22;
  if (!v28)
    v30 = v31;
  *(_DWORD *)(STACK[0xDE60] + v8) = v30 ^ 0x4524D222;
  v32 = *(_BYTE *)(STACK[0xDE60] + v8);
  v33 = *(_BYTE *)(STACK[0xDE68] + 1446) ^ 0x9B ^ v32;
  if (v9 < 0)
    v33 = v32 ^ 0x22;
  *(_DWORD *)(STACK[0xDE60] + v8) = v33 ^ 0x4524D222;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27 * (v2 == 0)) ^ v0)) - 12))();
}

uint64_t sub_1009CEC38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  uint64_t v56;

  LODWORD(STACK[0x6730]) = a2;
  v14 = (unsigned __int8 *)STACK[0x6A60];
  v15 = *(unsigned __int8 *)(STACK[0x6A60] + 1153);
  v16 = *(unsigned __int8 *)STACK[0x69E0];
  LODWORD(STACK[0x53B0]) = LODWORD(STACK[0x6710]) | LODWORD(STACK[0x6720]);
  v17 = *(unsigned __int8 *)(STACK[0x6A10] + 539);
  LODWORD(STACK[0x53AC]) = 812489170 - LODWORD(STACK[0x6708]) + LODWORD(STACK[0x66A8]);
  v18 = *(unsigned __int8 *)(v8 + 1214);
  v19 = *(unsigned __int8 *)(STACK[0x69C0] + 607);
  v20 = ((((a1 - 1738763294) & 0x67A36BFD) + 11397715) & (((v12 ^ 0xB9) << 16) | ((v11 ^ 0xB9) << 8)) | (v10 ^ 0x51C906) & ~(((v12 ^ 0xB9) << 16) | ((v11 ^ 0xB9) << 8))) << 8;
  LODWORD(STACK[0x6720]) = v20 ^ 0xA63040FF;
  LODWORD(STACK[0x5738]) = v20 & 0x188F8400;
  v21 = *(unsigned __int8 *)STACK[0x6960];
  v22 = ((a8 ^ 0xB9) << 8) | ((v9 ^ 0xB9) << 16);
  v23 = ((a7 ^ 0x3DF12A) & ~v22 | v22 & 0xC20E00) << 8;
  v24 = (v23 ^ 0x20E68FF) & (a7 ^ 0x2AFF69AF);
  v25 = *(unsigned __int8 *)STACK[0x6790];
  v26 = (v24 | v23 & 0xD5009600) ^ 0xC0001208;
  v27 = *(unsigned __int8 *)(STACK[0x6A50] + 2610);
  v28 = a5 ^ 0xB9;
  v29 = STACK[0x6A50];
  v30 = STACK[0x6A90];
  v31 = *(unsigned __int8 *)(STACK[0x6A90] + 2261);
  v32 = ((a6 ^ 0x96FFBF5B) & ~(((a4 ^ 0xB9) << 16) | (v28 << 8)) & 0xFFFFBFFF | (((v28 >> 6) & 1) << 14)) ^ 0x41004015;
  v33 = ((v32 + 13068544 - ((2 * v32) & 0x8EDEF8)) << 8) + 424960;
  v34 = (v33 ^ 0x436D64FF) & (LODWORD(STACK[0x6780]) ^ 0x6B7D6FFC) | v33 & 0x94829000;
  LODWORD(STACK[0x6780]) = v34 & 0x78E66171 ^ 0x68E46161;
  v35 = ((LODWORD(STACK[0x6760]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x6800]) ^ 0xB9) << 8);
  v36 = ((v35 & 0xE0D100 | 0x20) ^ (LODWORD(STACK[0x6770]) ^ 0x1F2E73) & ~v35) << 8;
  v37 = ((v36 ^ 0x400001FF) & (a3 ^ 0x570CA144) | v36 & 0xA8F35E00) ^ 0x88F00802;
  v38 = ((*v14 ^ 0xB9) << 8) | ((*(unsigned __int8 *)(STACK[0x6870] + 1328) ^ 0xB9) << 16);
  v39 = ((*(unsigned __int8 *)(v29 + 3376) ^ 0x1EAAE2) & ~v38 | v38 & 0xE15500) << 8;
  v40 = STACK[0x69D0];
  v41 = (*(unsigned __int8 *)(v40 + 759) >> 2) | (*(unsigned __int8 *)(v40 + 759) << 6);
  HIDWORD(v42) = v41 ^ 0xE;
  LODWORD(v42) = (v41 ^ 0x60) << 24;
  v43 = ((v39 ^ 0x600124FF) & (*(unsigned __int8 *)(STACK[0x66B8] + 2314) ^ 0x602B7661) | v39 & 0x9FD48900) ^ 0x86948105;
  v44 = (*(unsigned __int8 *)STACK[0x68A0] ^ 0x953677C1) & ~(((*(unsigned __int8 *)(STACK[0x69F0] + 1593) ^ 0xB9) << 8) & 0xFF00FFFF | ((((v42 >> 28) >> 2) | ((v42 >> 28) << 6)) << 16));
  v45 = ((*(unsigned __int8 *)(STACK[0x69F0] + 1593) ^ 0xB9) << 8) & 0x8800 | ((((v42 >> 28) >> 2) | ((v42 >> 28) << 6)) << 16) & 0xC98800;
  LODWORD(STACK[0x6800]) = v26;
  LODWORD(STACK[0x6760]) = 2 * v26;
  LODWORD(STACK[0x5594]) = v34 & 0x87199E8E ^ 0x84008001;
  v46 = ((((2 * ((v44 | v45) ^ 0x28400007)) | 0xAA9FD6) - ((v44 | v45) ^ 0x28400007)) << 8) + 716182784;
  LODWORD(STACK[0x5728]) = v37;
  LODWORD(STACK[0x6710]) = 2 * v37;
  v47 = ((v27 ^ 0xB9) << 8) | ((v31 ^ 0xB9) << 16);
  v48 = ((v25 ^ 0x124EDD20) & ~v47 | v47 & 0xB12200) ^ 0xF8D9C517;
  v49 = ((((2 * v48) | 0x42E800) - v48) << 8) + 1586233344;
  v50 = (v49 ^ 0x88251FF) & (v21 ^ 0xEC2D3D0) | v49 & 0xF13D2C00;
  LODWORD(STACK[0x66B0]) = v50 & 0xBA96CAEA ^ 0x9A86C268;
  LODWORD(STACK[0x6708]) = v50 ^ 0x61302886;
  LODWORD(STACK[0x5520]) = (v50 ^ 0x61302886) & 0xBA96CAEA;
  v51 = ((v46 ^ 0x484362FF) & (v18 ^ 0x6A6B668E) | v46 & 0x95949900) ^ 0x84141908;
  v52 = ((v16 ^ 0xB9) << 8) | ((v17 ^ 0xB9) << 16);
  v53 = (v19 ^ 0x9642734D) & ~v52 | v52 & 0xBD8C00;
  v54 = ((v53 & 0xFA2C99 ^ 0x722498) + (v53 ^ 0x8C0801) - ((v53 ^ 0x8C0801) & 0xFA2C99)) << 8;
  v55 = ((v54 ^ 0x8B0812FF) & (v15 ^ 0x8B4C3E33) | v54 & 0x74B3C100) ^ 0x24130110;
  v56 = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  LODWORD(STACK[0x66A8]) = v55;
  LODWORD(STACK[0x54D0]) = v55 | 0x19B175B1;
  LODWORD(STACK[0x5718]) = v43;
  LODWORD(STACK[0x5494]) = (2 * v43) & 0x74CF4F3C;
  LODWORD(STACK[0x6770]) = v51;
  LODWORD(STACK[0x54CC]) = (2 * v51) & 0x110127DA;
  return ((uint64_t (*)(uint64_t, unsigned __int8 *, unint64_t, unint64_t))(v56 - 8))(1296281112, v14, v30, v40);
}

uint64_t sub_1009CF33C(int a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;

  v7 = v1 - 17536 * (v4 / 0x4480);
  if ((v4 % 0x4480) >> 6 < 0x89)
    v7 = v4 % 0x4480;
  *(_BYTE *)(STACK[0xDE68]
           + v3
           + (((a1 + v5 + 2108) | (v6 + 688)) ^ 0x4CA4E437)
           - 6152 * (((((a1 + v5 + 2108) | (v6 + 688)) ^ 0x4CA4E437) + v3) / 0x1808)) = *(_BYTE *)(STACK[0xDE60]
                                                                                                 + 4 * v7) ^ 0x46;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((32 * (v2 != 0)) | ((v2 != 0) << 6)) ^ v5)) - 8))();
}

uint64_t sub_1009CF408(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned __int8 *v41;
  unsigned int v42;
  unint64_t v43;
  unsigned __int8 *v44;
  unint64_t v45;
  unsigned __int8 *v46;
  unint64_t v47;
  unsigned __int8 *v48;
  unint64_t v49;
  unsigned __int8 *v50;
  unint64_t v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  unsigned int v59;
  unsigned int v60;
  unint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unint64_t v66;
  unsigned __int8 *v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unsigned __int8 *v74;
  unint64_t v75;
  unint64_t v76;
  unsigned __int8 *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unsigned __int8 *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unsigned __int8 *v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 *v139;

  *(_QWORD *)(v11 - 152) = a6;
  v13 = (unsigned __int8 *)STACK[0x9470];
  v14 = (unsigned __int8 *)STACK[0x9470];
  v15 = ((*v13 ^ 0x7FDCFB9F) - 67635238 + ((2 * *v13) & 0xFF3F) + 1826) * v6 + 109455827;
  *v13 = *(_BYTE *)(STACK[0xDE68] + v15 - (((v15 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v16 = v13[1];
  HIDWORD(v17) = v16 >> 3;
  LODWORD(v17) = ((((v16 >> 3) | (32 * v16)) - (v16 << 6) + 96) ^ 0x60) << 24;
  v13[1] = *(_BYTE *)(STACK[0xDE68]
                    + (v17 >> 29) * v6
                    + 32028458
                    - (((89362129 * (unint64_t)((v17 >> 29) * v6 + 32028458)) >> 32) >> 7)
                    * v10) ^ 0xB9;
  v18 = STACK[0x68F0];
  LODWORD(STACK[0x57BC]) = *(unsigned __int8 *)(STACK[0x68F0] + 372);
  v19 = v13[2];
  LODWORD(STACK[0x57A8]) = *(unsigned __int8 *)(STACK[0x67F0] + 1168);
  v20 = (unsigned __int8 *)STACK[0x6A00];
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)(STACK[0x6A00] + 926);
  v21 = ((v19 ^ 0xF87FBFED) + ((2 * v19) & 0x1DA)) * v6 - 1259890599;
  LODWORD(STACK[0x57C4]) = a3[2261];
  v13[2] = *(_BYTE *)(STACK[0xDE68] + v21 - (((v21 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v22 = ((v13[3] ^ 0x3BBF96DE) - 562566091 + ((2 * v13[3]) & 0x1BC) + 3527) * v6 + 1540961416;
  v13[3] = *(_BYTE *)(STACK[0xDE68] + v22 - (((v22 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v23 = ((v14[4] ^ 0xFEDEFEF) + ((2 * v14[4]) & 0xFFDF)) * v6 + 1048804463;
  v14[4] = *(_BYTE *)(STACK[0xDE68] + v23 - (((v23 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v24 = ((v14[5] ^ 0xFEBFDCFD) + ((2 * v14[5]) & 0xFFFB)) * v6 + 1999206409;
  v14[5] = *(_BYTE *)(STACK[0xDE68] + v24 - (((v24 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v25 = ((v14[6] ^ 0xA7F778BE) + ((2 * v14[6]) & 0x17C)) * v6 - 181759148;
  v14[6] = *(_BYTE *)(STACK[0xDE68] + v25 - (((v25 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v26 = ((v14[7] ^ 0x7BFF7C1E) + ((2 * v14[7]) & 0x3C)) * v6 + 1631090804;
  v14[7] = *(_BYTE *)(STACK[0xDE68] + v26 - (((v26 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v27 = ((v14[8] ^ 0xBFFEEFBF) + ((2 * v14[8]) & 0xFF7F)) * v6 + 1497537119;
  v14[8] = *(_BYTE *)(STACK[0xDE68] + v27 - (((v27 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v28 = ((v14[9] ^ 0xAFFEB71B) + 2137521328 + ((2 * v14[9]) & 0x36) + 832) * v6 + 932684451;
  v14[9] = *(_BYTE *)(STACK[0xDE68] + v28 - (((v28 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v29 = STACK[0x9470];
  v30 = (unsigned __int8 *)STACK[0x9470];
  v31 = ((*(unsigned __int8 *)(STACK[0x9470] + 10) ^ 0xFBFFF71B)
       + ((2 * *(unsigned __int8 *)(STACK[0x9470] + 10)) & 0x36))
      * v6
      - 693370029;
  *(_BYTE *)(v29 + 10) = *(_BYTE *)(STACK[0xDE68]
                                  + v31
                                  - (((v31 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v32 = ((*(unsigned __int8 *)(v29 + 11) ^ 0xDFED7E7F) + 2 * (*(_BYTE *)(v29 + 11) & 0x7F)) * v6 + 943602847;
  *(_BYTE *)(v29 + 11) = *(_BYTE *)(STACK[0xDE68]
                                  + v32
                                  - (((v32 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v33 = LODWORD(STACK[0xFC5C]) ^ LODWORD(STACK[0x9644]);
  v34 = STACK[0xFC5C] & 0x10000000;
  if ((v34 & STACK[0x9644]) != 0)
    v34 = -v34;
  v35 = (((v34 + LODWORD(STACK[0x9644])) ^ STACK[0xFC5C] & 0xEF000000) >> 24) * v6
      + 32028458
      - (((89362129
                       * (unint64_t)((((v34 + LODWORD(STACK[0x9644])) ^ STACK[0xFC5C] & 0xEF000000) >> 24) * v6
                                          + 32028458)) >> 32) >> 7)
      * v10;
  v36 = BYTE1(v33) * v6
      + 32028458
      - (((89362129 * (unint64_t)(BYTE1(v33) * v6 + 32028458)) >> 32) >> 7) * v10;
  LODWORD(STACK[0x5390]) = v33;
  v37 = v33 * v6
      + 32028458
      - (((89362129 * (unint64_t)(v33 * v6 + 32028458)) >> 32) >> 7)
      * v10;
  v38 = BYTE2(v33) * v6
      + 32028458
      - (((89362129 * (unint64_t)(BYTE2(v33) * v6 + 32028458)) >> 32) >> 7) * v10;
  v39 = v30[12];
  v41 = (unsigned __int8 *)STACK[0x6A70];
  LODWORD(STACK[0x549C]) = *(unsigned __int8 *)(STACK[0x6A70] + 1912);
  v42 = ((v39 ^ 0x3DDBFED5) + ((2 * v39) & 0x1AA)) * v6 - 1032436663;
  v43 = STACK[0xDE68];
  LODWORD(STACK[0x5778]) = *(unsigned __int8 *)(STACK[0xDE68] + v35);
  LODWORD(STACK[0x5734]) = *(unsigned __int8 *)(v43 + v37);
  LODWORD(STACK[0x5780]) = *(unsigned __int8 *)(v43 + v36);
  LODWORD(STACK[0x5758]) = *(unsigned __int8 *)(v43 + v38);
  LOBYTE(v35) = *(_BYTE *)(v43 + v42 - (((v42 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(STACK[0x5488]) = *(unsigned __int8 *)(STACK[0x6930] + 2898);
  v44 = (unsigned __int8 *)STACK[0x6AC0];
  LODWORD(STACK[0x544C]) = *(unsigned __int8 *)(STACK[0x6AC0] + 2572);
  LODWORD(STACK[0x53D8]) = a3[2936];
  LODWORD(STACK[0x54A4]) = a3[99];
  LODWORD(STACK[0x5490]) = *(unsigned __int8 *)(v18 + 2079);
  LODWORD(STACK[0x5498]) = *v9;
  LODWORD(STACK[0x548C]) = v41[2754];
  v45 = STACK[0x69A0];
  LODWORD(STACK[0x54F0]) = *(unsigned __int8 *)(STACK[0x69A0] + 2390);
  v46 = (unsigned __int8 *)STACK[0x6A80];
  LODWORD(STACK[0x54D8]) = *(unsigned __int8 *)(STACK[0x6A80] + 2625);
  LODWORD(STACK[0x54A0]) = *(unsigned __int8 *)(v12 + 607);
  LODWORD(STACK[0x54D4]) = *(unsigned __int8 *)(STACK[0x6960] + 933);
  LODWORD(STACK[0x55B4]) = a2[1062];
  LODWORD(STACK[0x5528]) = *(unsigned __int8 *)(STACK[0x6990] + 956);
  LODWORD(STACK[0x54F4]) = *(unsigned __int8 *)(a4 + 1381);
  LODWORD(STACK[0x55B8]) = *(unsigned __int8 *)(STACK[0x6940] + 1062);
  LODWORD(STACK[0x56F0]) = a2[986];
  LODWORD(STACK[0x56EC]) = *(unsigned __int8 *)(a5 + 266);
  LODWORD(STACK[0x56F8]) = v41[243];
  LODWORD(STACK[0x56FC]) = v20[1214];
  v47 = STACK[0x69E0];
  LODWORD(STACK[0x5710]) = *(unsigned __int8 *)(STACK[0x69E0] + 1282);
  v48 = a2;
  v49 = v47;
  v50 = (unsigned __int8 *)STACK[0x6AB0];
  LODWORD(STACK[0x5744]) = *(unsigned __int8 *)(STACK[0x6AB0] + 1525);
  v51 = STACK[0x6A40];
  LODWORD(STACK[0x5750]) = *(unsigned __int8 *)(STACK[0x6A40] + 1305);
  v52 = (unsigned __int8 *)STACK[0x6AA0];
  LODWORD(STACK[0x5748]) = *(unsigned __int8 *)(STACK[0x6AA0] + 1237);
  v53 = (unsigned __int8 *)STACK[0x6A20];
  LODWORD(STACK[0x5798]) = *(unsigned __int8 *)(STACK[0x6A20] + 797);
  LODWORD(STACK[0x5790]) = v53[281];
  LODWORD(STACK[0x57A4]) = *(unsigned __int8 *)(v51 + 1108);
  LODWORD(STACK[0x5788]) = v48[713];
  v30[12] = v35 ^ 0xB9;
  v54 = ((v30[13] ^ 0x59BFBFE7) - 11831539 + ((2 * v30[13]) & 0xFFCF) + 1235) * v6 - 566153545;
  v30[13] = *(_BYTE *)(STACK[0xDE68] + v54 - (((v54 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v55 = ((v30[14] ^ 0xBB7F6E31) + 2130046783 + ((2 * v30[14]) & 0x62) + 3265) * v6 + 1842614597;
  v30[14] = *(_BYTE *)(STACK[0xDE68] + v55 - (((v55 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v56 = ((v30[15] ^ 0x7A7EDEB6) + ((2 * v30[15]) & 0x16C)) * v6 + 1580770556;
  v30[15] = *(_BYTE *)(STACK[0xDE68] + v56 - (((v56 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v57 = (unsigned __int8 *)STACK[0x9470];
  v58 = (unsigned __int8 *)STACK[0x9470];
  v59 = ((v57[16] ^ 0xFAEB6E5F) + ((2 * v57[16]) & 0xBE)) * v6 - 1903545545;
  v57[16] = *(_BYTE *)(STACK[0xDE68] + v59 - (((v59 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v60 = ((v57[17] ^ 0xB8F5FEED) + ((2 * v57[17]) & 0x1DA)) * v6 - 795718311;
  LOBYTE(v60) = *(_BYTE *)(STACK[0xDE68] + v60 - (((v60 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(STACK[0x53A0]) = v48[713];
  LODWORD(STACK[0x53CC]) = *(unsigned __int8 *)STACK[0x6840];
  LODWORD(STACK[0x5398]) = v44[3596];
  LODWORD(STACK[0x53EC]) = v20[1085];
  LODWORD(STACK[0x5428]) = *(unsigned __int8 *)(v45 + 2390);
  LODWORD(STACK[0x540C]) = *(unsigned __int8 *)(STACK[0x68C0] + 91);
  v61 = STACK[0x68B0];
  LODWORD(STACK[0x5400]) = *(unsigned __int8 *)(STACK[0x68B0] + 1472);
  LODWORD(STACK[0x53D0]) = *(unsigned __int8 *)(v8 + 1009);
  v57[17] = v60;
  v62 = ((v57[18] ^ 0xFFFBAF9E) + ((2 * v57[18]) & 0x13C)) * v6 + 1621208820;
  v57[18] = *(_BYTE *)(STACK[0xDE68] + v62 - (((v62 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v63 = ((v58[19] ^ 0x2E8FF5EF) + ((2 * v58[19]) & 0xFFDF)) * v6 - 1560953233;
  v58[19] = *(_BYTE *)(STACK[0xDE68] + v63 - (((v63 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v64 = ((v58[20] ^ 0xF6BFED9B) + 1063692482 + ((2 * v58[20]) & 0x136) + 3646) * v6 + 57440211;
  v58[20] = *(_BYTE *)(STACK[0xDE68] + v64 - (((v64 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v65 = ((v58[21] ^ 0xAFEBFBA7) + ((2 * v58[21]) & 0x14E)) * v6 + 1231826263;
  v58[21] = *(_BYTE *)(STACK[0xDE68] + v65 - (((v65 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v66 = STACK[0x9470];
  v67 = (unsigned __int8 *)STACK[0x9470];
  LODWORD(v57) = ((*(unsigned __int8 *)(v66 + 22) ^ 0x5DEFFAFD)
                - 23253648
                + ((2 * *(unsigned __int8 *)(v66 + 22)) & 0xFFFB))
               * v6
               - 629140007;
  LOBYTE(v57) = *(_BYTE *)(STACK[0xDE68]
                         + v57
                         - (((v57 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(STACK[0x52F0]) = v46[3634];
  v68 = STACK[0x6950];
  LODWORD(STACK[0x5850]) = *(unsigned __int8 *)(STACK[0x6950] + 789);
  LODWORD(STACK[0x52E8]) = *(unsigned __int8 *)(v49 + 1282);
  LODWORD(STACK[0x52EC]) = *(unsigned __int8 *)(v45 + 4089);
  v69 = STACK[0x6A30];
  LODWORD(STACK[0x5300]) = *(unsigned __int8 *)STACK[0x6A30];
  v70 = STACK[0x6A10];
  LODWORD(STACK[0x52F8]) = *(unsigned __int8 *)(STACK[0x6A10] + 501);
  LODWORD(STACK[0x52F4]) = *(unsigned __int8 *)STACK[0x69B0];
  v71 = STACK[0x6820];
  LODWORD(STACK[0x5348]) = *(unsigned __int8 *)STACK[0x6820];
  LODWORD(STACK[0x5308]) = *(unsigned __int8 *)(v69 + 1464);
  LODWORD(STACK[0x530C]) = a3[2974];
  v72 = STACK[0x6920];
  LODWORD(STACK[0x5304]) = *(unsigned __int8 *)(STACK[0x6920] + 84);
  LODWORD(STACK[0x5310]) = *(unsigned __int8 *)STACK[0x6510];
  LODWORD(STACK[0x5328]) = *(unsigned __int8 *)(v18 + 372);
  LODWORD(STACK[0x5324]) = *(unsigned __int8 *)(STACK[0x68D0] + 3854);
  LODWORD(STACK[0x5318]) = *(unsigned __int8 *)(v61 + 1472);
  LODWORD(STACK[0x57D4]) = v20[1214];
  LODWORD(STACK[0x532C]) = v48[933];
  LODWORD(STACK[0x5330]) = v44[3505];
  LODWORD(STACK[0x5338]) = v20[2094];
  v73 = STACK[0x69D0];
  LODWORD(STACK[0x5350]) = *(unsigned __int8 *)(STACK[0x69D0] + 1548);
  LODWORD(STACK[0x5340]) = v50[3141];
  LODWORD(STACK[0x5344]) = v52[3892];
  LODWORD(STACK[0x5358]) = *(unsigned __int8 *)(v69 + 1168);
  LODWORD(STACK[0x537C]) = *(unsigned __int8 *)STACK[0x6860];
  LODWORD(STACK[0x5368]) = *(unsigned __int8 *)(v73 + 759);
  LODWORD(STACK[0x5360]) = v50[668];
  LODWORD(STACK[0x5364]) = *(unsigned __int8 *)(STACK[0x6830] + 3361);
  LODWORD(STACK[0x5374]) = v44[2534];
  v74 = (unsigned __int8 *)STACK[0x67B0];
  LODWORD(STACK[0x5388]) = *(unsigned __int8 *)STACK[0x67B0];
  LODWORD(STACK[0x5378]) = v50[1601];
  v75 = STACK[0x6980];
  LODWORD(STACK[0x5370]) = *(unsigned __int8 *)(STACK[0x6980] + 311);
  LODWORD(STACK[0x538C]) = *(unsigned __int8 *)(v70 + 3983);
  LODWORD(STACK[0x5384]) = v41[46];
  LODWORD(STACK[0x5380]) = *(unsigned __int8 *)(v18 + 2079);
  *(_BYTE *)(v66 + 22) = (_BYTE)v57;
  LODWORD(v57) = ((*(unsigned __int8 *)(v66 + 23) ^ 0x7FFFEFE7) + ((2 * *(unsigned __int8 *)(v66 + 23)) & 0xFFCF)) * v6
               - 2092291049;
  *(_BYTE *)(v66 + 23) = *(_BYTE *)(STACK[0xDE68]
                                  + v57
                                  - (((v57 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v57) = ((v67[24] ^ 0x7FFBFF6F) - 1378585121 + ((2 * v67[24]) & 0xDE)) * v6 + 264834436;
  v67[24] = *(_BYTE *)(STACK[0xDE68]
                     + v57
                     - (((v57 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v57) = ((v67[25] ^ 0xFB274CE3) + 1574958825 + ((2 * v67[25]) & 0xFFC7) + 2263) * v6 + 883097643;
  v67[25] = *(_BYTE *)(STACK[0xDE68]
                     + v57
                     - (((v57 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v57) = ((v67[26] ^ 0xFEEFF5FC) + ((2 * v67[26]) & 0x1F8)) * v6 + 1460969726;
  v67[26] = *(_BYTE *)(STACK[0xDE68]
                     + v57
                     - (((v57 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v76 = STACK[0x9470];
  v77 = (unsigned __int8 *)STACK[0x9470];
  LODWORD(v67) = ((*(unsigned __int8 *)(v76 + 27) ^ 0x497BBBBF)
                - 139493376
                + ((2 * *(unsigned __int8 *)(v76 + 27)) & 0xFF7F))
               * v6
               + 396484191;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + v67
                         - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v78 = STACK[0x6970];
  LODWORD(STACK[0x5280]) = *(unsigned __int8 *)STACK[0x6970];
  v79 = STACK[0x6990];
  LODWORD(STACK[0x52FC]) = *(unsigned __int8 *)(STACK[0x6990] + 1669);
  LODWORD(STACK[0x527C]) = *(unsigned __int8 *)(STACK[0x6A40] + 2587);
  LODWORD(STACK[0x5284]) = v20[3209];
  LODWORD(STACK[0x52DC]) = v46[3156];
  LODWORD(STACK[0x5288]) = *(unsigned __int8 *)(STACK[0x6A50] + 2367);
  v80 = *(_QWORD *)(v11 - 152);
  LODWORD(STACK[0x55BC]) = v46[1161];
  LODWORD(STACK[0x5290]) = *(unsigned __int8 *)v71;
  LODWORD(STACK[0x51F8]) = v52[2807];
  LODWORD(STACK[0x528C]) = *(unsigned __int8 *)(v72 + 319);
  LODWORD(STACK[0x53BC]) = v52[3869];
  LODWORD(STACK[0x5298]) = v44[8];
  LODWORD(STACK[0x5294]) = v53[2921];
  LODWORD(STACK[0x529C]) = *(unsigned __int8 *)(STACK[0x6890] + 895);
  LODWORD(STACK[0x52E4]) = *(unsigned __int8 *)(v49 + 167);
  LODWORD(STACK[0x52A8]) = *(unsigned __int8 *)(v61 + 1472);
  LODWORD(STACK[0x52A4]) = *(unsigned __int8 *)(STACK[0x66E0] + 410);
  LODWORD(STACK[0x52A0]) = *(unsigned __int8 *)(v70 + 1017);
  v81 = v73;
  LODWORD(STACK[0x52B8]) = *(unsigned __int8 *)(v73 + 1563);
  LODWORD(STACK[0x52B4]) = *v74;
  LODWORD(STACK[0x52B0]) = v41[2481];
  LODWORD(STACK[0x52AC]) = v41[1988];
  v82 = v41;
  LODWORD(STACK[0x52C4]) = v53[3945];
  v83 = STACK[0x68E0];
  LODWORD(STACK[0x52BC]) = *(unsigned __int8 *)STACK[0x68E0];
  v84 = STACK[0x6668];
  LODWORD(STACK[0x52C0]) = *(unsigned __int8 *)(STACK[0x6668] + 2276);
  LODWORD(STACK[0x57D0]) = *(unsigned __int8 *)(STACK[0x67E0] + 721);
  LODWORD(STACK[0x52D0]) = v48[1441];
  LODWORD(STACK[0x52CC]) = v44[3763];
  LODWORD(STACK[0x52C8]) = *(unsigned __int8 *)(v75 + 311);
  LODWORD(STACK[0x52E0]) = *(unsigned __int8 *)(STACK[0x6850] + 3050);
  LODWORD(STACK[0x52D4]) = v44[1768];
  LODWORD(STACK[0x52D8]) = *(unsigned __int8 *)(v78 + 296);
  *(_BYTE *)(v76 + 27) = (_BYTE)v67;
  LODWORD(v67) = ((v77[28] ^ 0x74DF7CAF) + ((2 * v77[28]) & 0x15E)) * v6 - 758380369;
  LODWORD(v76) = ((v77[29] ^ 0x6FF36EFB) - 1627523835 + ((2 * v77[29]) & 0xFFF7)) * v6 - 407895254;
  v77[28] = *(_BYTE *)(STACK[0xDE68]
                     + v67
                     - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v66) = ((v77[30] ^ 0x7FD7FF6F) - 403136434 + ((2 * v77[30]) & 0xDE) + 2992) * v6 - 1994082599;
  v77[29] = *(_BYTE *)(STACK[0xDE68]
                     + v76
                     - (((v76 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + v66
                         - (((v66 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(v66) = ((v77[31] ^ 0xFFBBEADF) + ((2 * v77[31]) & 0xFFBF)) * v6 - 657677121;
  v77[30] = v67 ^ 0xB9;
  LODWORD(v67) = *(unsigned __int8 *)(STACK[0xDE68]
                                    + v66
                                    - (((v66 * (unint64_t)v7) >> 32) >> 12) * v10);
  v77[31] = (((((v67 >> 7) | (2 * (_BYTE)v67)) ^ 0x43) >> 1) | ((((v67 >> 7) | (2 * (_BYTE)v67)) ^ 0x43) << 7)) ^ 0x18;
  v85 = STACK[0x9470];
  v86 = (unsigned __int8 *)STACK[0x9470];
  LODWORD(v67) = ((*(unsigned __int8 *)(v85 + 32) ^ 0xF7FC5D5F)
                + 1023143936
                + ((2 * *(unsigned __int8 *)(v85 + 32)) & 0xBE))
               * v6
               - 236068801;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + v67
                         - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(v74) = ((*(unsigned __int8 *)(v85 + 33) ^ 0x3FFDFFFB) + ((2 * *(unsigned __int8 *)(v85 + 33)) & 0xFFF7)) * v6
               - 304929549;
  LODWORD(STACK[0x5244]) = *(unsigned __int8 *)(v84 + 3960);
  LODWORD(STACK[0x5240]) = *(unsigned __int8 *)STACK[0x6840];
  LODWORD(v75) = v20[926];
  LODWORD(STACK[0x523C]) = v44[1768];
  v87 = STACK[0x68C0];
  LODWORD(STACK[0x5254]) = *(unsigned __int8 *)(STACK[0x68C0] + 114);
  LODWORD(STACK[0x524C]) = *(unsigned __int8 *)(v79 + 1798);
  LODWORD(STACK[0x5250]) = *(unsigned __int8 *)v68;
  LODWORD(STACK[0x5248]) = *(unsigned __int8 *)(v81 + 1548);
  LODWORD(STACK[0x5264]) = v82[2496];
  LODWORD(STACK[0x5258]) = *(unsigned __int8 *)v83;
  LODWORD(STACK[0x525C]) = *(unsigned __int8 *)(v70 + 1017);
  LODWORD(STACK[0x5260]) = *(unsigned __int8 *)v78;
  LODWORD(STACK[0x5268]) = *(unsigned __int8 *)(STACK[0x6A90] + 706);
  LODWORD(STACK[0x54E4]) = v52[1616];
  LODWORD(STACK[0x526C]) = v44[2716];
  LODWORD(v84) = v52[994];
  v88 = STACK[0x6960];
  LODWORD(STACK[0x5274]) = *(unsigned __int8 *)(STACK[0x6960] + 933);
  LODWORD(STACK[0x5270]) = *(unsigned __int8 *)(v72 + 84);
  LODWORD(STACK[0x5278]) = v52[3869];
  *(_BYTE *)(v85 + 32) = v67 ^ 0xB9;
  *(_BYTE *)(v85 + 33) = *(_BYTE *)(STACK[0xDE68]
                                  + v74
                                  - (((v74 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v67) = (2 * v86[34] - 34642977 + (v86[34] ^ 0x2FD9FFF) + 3072) * v6 - 1397009996;
  LODWORD(v74) = ((v86[35] ^ 0xD7FF69B2) + ((2 * v86[35]) & 0x164)) * v6 + 1456272848;
  v86[34] = *(_BYTE *)(STACK[0xDE68]
                     + v67
                     - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + v74
                         - (((v74 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(v74) = ((v86[36] ^ 0x7FBFFE4F) + ((2 * v86[36]) & 0x9E)) * v6 - 11674993;
  v86[35] = v67 ^ 0xB9;
  LODWORD(v67) = ((v86[37] ^ 0x3EEF1FF7) + ((2 * v86[37]) & 0xFFEF)) * v6 + 695196871;
  v86[36] = *(_BYTE *)(STACK[0xDE68]
                     + v74
                     - (((v74 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + v67
                         - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(v74) = ((v86[38] ^ 0x7FCFBABF) - 1133185172 + ((2 * v86[38]) & 0xFF7F)) * v6 - 1316180733;
  LODWORD(STACK[0x5214]) = *(unsigned __int8 *)v79;
  LODWORD(STACK[0x5210]) = *(unsigned __int8 *)STACK[0x6880];
  v89 = STACK[0x6A50];
  LODWORD(STACK[0x5218]) = *(unsigned __int8 *)(STACK[0x6A50] + 1146);
  LODWORD(STACK[0x520C]) = *(unsigned __int8 *)v87;
  v86[37] = v67 ^ 0xB9;
  v86[38] = *(_BYTE *)(STACK[0xDE68]
                     + v74
                     - (((v74 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v90 = (unsigned __int8 *)STACK[0x9470];
  v91 = (unsigned __int8 *)STACK[0x9470];
  LODWORD(v67) = (v90[42] ^ 0xFAFF1FFF) + 2 * v90[42];
  LODWORD(v85) = ((v90[39] ^ 0xDFFFB1AD) + ((2 * v90[39]) & 0x15A)) * v6 - 1465877607;
  LODWORD(v77) = ((v90[40] ^ 0x677B773E) - 2114370 + ((2 * v90[40]) & 0x7C) + 3390) * v6 - 1690728280;
  v90[39] = *(_BYTE *)(STACK[0xDE68]
                     + v85
                     - (((v85 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LOBYTE(v85) = *(_BYTE *)(STACK[0xDE68]
                         + v77
                         - (((v77 * (unint64_t)v7) >> 32) >> 12) * v10);
  LODWORD(v77) = ((v90[41] ^ 0x237FF7F7) + ((2 * v90[41]) & 0xFFEF)) * v6 - 1994840889;
  v90[40] = v85 ^ 0xB9;
  v90[41] = *(_BYTE *)(STACK[0xDE68]
                     + v77
                     - (((v77 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LOBYTE(v67) = *(_BYTE *)(STACK[0xDE68]
                         + (_DWORD)v67 * v6
                         - 568382177
                         - (((((_DWORD)v67 * v6 - 568382177) * (unint64_t)v7) >> 32) >> 12)
                         * v10) ^ 0xB9;
  LODWORD(STACK[0x5208]) = *(unsigned __int8 *)(v89 + 2367);
  LODWORD(STACK[0x5200]) = *(unsigned __int8 *)(STACK[0x6AB0] + 357);
  LODWORD(STACK[0x5204]) = *(unsigned __int8 *)(v88 + 933);
  LODWORD(STACK[0x51FC]) = *(unsigned __int8 *)(STACK[0x69F0] + 865);
  v90[42] = v67;
  LODWORD(v67) = ((v91[43] ^ 0x3FEFDE65) + ((2 * v91[43]) & 0xCA)) * v6 + 605722497;
  LODWORD(v90) = ((v91[44] ^ 0x56BFFA5E) - 42600518 + ((2 * v91[44]) & 0xBC)) * v6 - 43250126;
  LODWORD(v85) = ((v91[45] ^ 0x7FD67BFB) + ((2 * v91[45]) & 0xFFF7)) * v6 + 293107955;
  LODWORD(v87) = ((v91[47] ^ 0x8DA77ED9) + ((2 * v91[47]) & 0x1B2)) * v6 - 1288403843;
  v92 = ((v91[46] ^ 0xF4FE7FEC) + ((2 * v91[46]) & 0x1D8)) * v6 - 1445335474;
  v91[43] = *(_BYTE *)(STACK[0xDE68]
                     + v67
                     - (((v67 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v91[44] = *(_BYTE *)(STACK[0xDE68]
                     + v90
                     - (((v90 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v91[45] = *(_BYTE *)(STACK[0xDE68]
                     + v85
                     - (((v85 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v91[46] = *(_BYTE *)(STACK[0xDE68] + v92 - (((v92 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  v91[47] = *(_BYTE *)(STACK[0xDE68]
                     + v87
                     - (((v87 * (unint64_t)v7) >> 32) >> 12) * v10) ^ 0xB9;
  LODWORD(v67) = (LODWORD(STACK[0x57BC]) ^ 0xB9) << 16;
  v93 = v67 & 0x590000 | ((LODWORD(STACK[0x57A8]) ^ 0xB9) << 8);
  LODWORD(STACK[0x53E8]) = LODWORD(STACK[0x6740]) - LODWORD(STACK[0x6750]) - 722568420;
  LODWORD(STACK[0x5238]) = STACK[0x6720] & (LODWORD(STACK[0x6730]) ^ 0xE7707BF6);
  LODWORD(STACK[0x5230]) = LODWORD(STACK[0x6760]) | 0xDAE86A66;
  LODWORD(STACK[0x522C]) = STACK[0x6710] & 0x4B5D4FB2;
  LODWORD(STACK[0x5234]) = LODWORD(STACK[0x66B0]) + LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x5450]) = LODWORD(STACK[0x66A8]) | 0xE64E8A4E;
  LODWORD(v67) = (((LODWORD(STACK[0x57C4]) ^ 0x9AA600EA) & ~(_DWORD)v67) + v93) ^ 0x205175A4;
  LODWORD(v67) = ((_DWORD)v67 + 16591374 - ((2 * (_DWORD)v67) & 0xFA541C)) << 8;
  LODWORD(v89) = ((v67 ^ 0xB42004FF) & (LODWORD(STACK[0x66A0]) ^ 0xB674DC44) | v67 & 0x498B2300) ^ 0x49882000;
  LODWORD(v67) = ((LODWORD(STACK[0x5488]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x544C]) ^ 0xB9) << 16);
  LODWORD(v67) = ((LODWORD(STACK[0x549C]) ^ 0x4F56510B) & ~(_DWORD)v67 | v67 & 0xA9AE00) ^ 0x1000860D;
  LODWORD(v67) = ((((2 * (_DWORD)v67) & 0xCC091A) - (_DWORD)v67) << 8) - 1711574528;
  LODWORD(STACK[0x53A8]) = v67 ^ 0x8122FF;
  LODWORD(STACK[0x53A4]) = v67 & 0x73525100;
  LODWORD(v67) = ((LODWORD(STACK[0x5490]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x548C]) ^ 0xB9) << 16);
  LODWORD(v67) = (LODWORD(STACK[0x5498]) ^ 0xA4FC8D4A) & ~(_DWORD)v67 | v67 & 0x37200;
  LODWORD(v67) = ((v67 & 0xEC361 ^ 0xEC160)
                + (v67 ^ 0xCF0169D)
                - ((v67 ^ 0xCF0169D) & 0xEC361)) << 8;
  LODWORD(STACK[0x544C]) = v67 ^ 0x5C0350FF;
  LODWORD(STACK[0x5440]) = v67 & 0xA3ACA200;
  LODWORD(v67) = ((LODWORD(STACK[0x54A0]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x54D4]) ^ 0xB9) << 8);
  LODWORD(v67) = ((LODWORD(STACK[0x54D8]) ^ 0x52E62E24) & ~(_DWORD)v67 | v67 & 0x19D100) ^ 0x81009000;
  LODWORD(v67) = ((((2 * (_DWORD)v67) & 0x1E2166) - (_DWORD)v67) << 8) + 1894730752;
  LODWORD(v67) = (v67 ^ 0x218428FF) & (LODWORD(STACK[0x54F0]) ^ 0xA5D5391F) | v67 & 0x5A2AC600;
  LODWORD(STACK[0x539C]) = (v67 & 0xB0F5C333 ^ 0xA0D50132)
                         + (v67 ^ 0x582AC249)
                         - ((v67 ^ 0x582AC249) & 0xB0F5C333);
  LODWORD(v67) = ((LODWORD(STACK[0x5528]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x54F4]) ^ 0xB9) << 16);
  LODWORD(v67) = (LODWORD(STACK[0x55B4]) ^ 0xCB5077) & ~(_DWORD)v67 | v67 & 0x34AF00;
  LODWORD(v67) = (((_DWORD)v67 << 8) ^ 0x108B01FF) & (LODWORD(STACK[0x55B8]) ^ 0x5ADBCB51) | ((_DWORD)v67 << 8) & 0xA5243400;
  LODWORD(STACK[0x66B0]) = v67 ^ 0x1043413;
  LODWORD(STACK[0x5228]) = v67 & 0xC67D64C2 ^ 0xC67940C0;
  LODWORD(v67) = ((LODWORD(STACK[0x56F0]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x56EC]) ^ 0xB9) << 16);
  LODWORD(v67) = (LODWORD(STACK[0x56F8]) ^ 0x41719F) & ~(_DWORD)v67 | v67 & 0xBE8E00;
  LODWORD(v67) = (((_DWORD)v67 << 8) ^ 0xAA8419FF) & (LODWORD(STACK[0x56FC]) ^ 0xABB51B15) | ((_DWORD)v67 << 8) & 0x544AE400;
  LODWORD(STACK[0x6760]) = v67 & 0x2AFCBD96;
  LODWORD(STACK[0x5224]) = v67 & 0xD5034269;
  LODWORD(v67) = ((LODWORD(STACK[0x5778]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5758]) ^ 0xB9) << 8);
  LODWORD(v67) = (LODWORD(STACK[0x5780]) ^ 0x9B73740C) & ~(_DWORD)v67 | v67 & 0x8C8B00;
  LODWORD(v90) = (v67 & 0x7580C1 ^ 0x310041) + (v67 & 0x8A7F3E ^ 0x806407);
  LODWORD(v67) = ((LODWORD(STACK[0x5710]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5744]) ^ 0xB9) << 8);
  LODWORD(v67) = ((LODWORD(STACK[0x5748]) ^ 0xB3C0F23B) & ~(_DWORD)v67 | v67 & 0x3F0D00) ^ 0x100D10;
  LODWORD(v67) = (((_DWORD)v67 + 5789630 - ((2 * (_DWORD)v67) & 0xB0A9A8)) << 8) - 190976;
  LODWORD(v67) = (v67 ^ 0x734098FF) & (LODWORD(STACK[0x5750]) ^ 0xF3E99894) | v67 & 0xC166700;
  LODWORD(STACK[0x66A8]) = v67 ^ 0xE6B3506E;
  LODWORD(STACK[0x5220]) = v67 & 0x1D3FD379 ^ 0x190C8311;
  LODWORD(v67) = ((LODWORD(STACK[0x5790]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5788]) ^ 0xB9) << 16);
  LODWORD(v67) = (LODWORD(STACK[0x5798]) ^ 0x5BB3CB) & ~(_DWORD)v67 | v67 & 0xA44C00;
  LODWORD(v67) = (((_DWORD)v67 << 8) ^ 0x44089FF) & (LODWORD(STACK[0x57A4]) ^ 0xD51C991) | ((_DWORD)v67 << 8) & 0xF2AE3600;
  LODWORD(STACK[0x6750]) = v67 & 0x1D25D94 ^ 0x1D25D81;
  LODWORD(STACK[0x521C]) = v67 & 0xFE2DA26B;
  LODWORD(v67) = ((LODWORD(STACK[0x53A0]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5398]) ^ 0xB9) << 8);
  LODWORD(v67) = v67 & 0x845000 | (LODWORD(STACK[0x53CC]) ^ 0x7BAFAC) & ~(_DWORD)v67;
  LODWORD(STACK[0x6740]) = (((_DWORD)v67 << 8) ^ 0x45080FF) & (LODWORD(STACK[0x53EC]) ^ 0x44719539) | ((_DWORD)v67 << 8) & 0xBB8E6A00;
  LODWORD(v67) = ((LODWORD(STACK[0x540C]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5400]) ^ 0xB9) << 16);
  LODWORD(v67) = ((LODWORD(STACK[0x5428]) ^ 0xD51EF9A2) & ~(_DWORD)v67 | v67 & 0xE10600) ^ 0x2AE102E4;
  LODWORD(v67) = ((((2 * (_DWORD)v67) & 0x24098E) - (_DWORD)v67) << 8) + 1845180416;
  LODWORD(STACK[0x5398]) = v67 ^ 0x93328FF;
  LODWORD(STACK[0x5394]) = v67 & 0x74CCD500;
  LODWORD(v67) = ((LODWORD(STACK[0x52E8]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x52EC]) ^ 0xB9) << 8);
  LODWORD(v67) = ((LODWORD(STACK[0x52F0]) ^ 0xC76F0F45) & ~(_DWORD)v67 | v67 & 0x90F000) ^ 0x80F000;
  LODWORD(v70) = ((((2 * (_DWORD)v67) | 0xD28070) - (_DWORD)v67) << 8) + 381667328;
  LODWORD(v85) = STACK[0x5348];
  v94 = ((LODWORD(STACK[0x52F8]) ^ 0xB9) << 8) | (LODWORD(STACK[0x5348]) << 16);
  LODWORD(v67) = ((v94 ^ 0x6B4288FF) & (LODWORD(STACK[0x52F4]) ^ 0x6BFB8846) | v94 & 0x47700) ^ 0x84003100;
  LODWORD(v67) = ((((2 * (_DWORD)v67) | 0x5781E0) - (_DWORD)v67) << 8) + 1413419008;
  LODWORD(v52) = ((v67 ^ 0x20460FF) & (LODWORD(STACK[0x5300]) ^ 0x23D646B) | v67 & 0xFDC29B00) ^ 0x45009228;
  LODWORD(v67) = ((LODWORD(STACK[0x5308]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5304]) ^ 0xB9) << 16);
  LODWORD(v67) = ((LODWORD(STACK[0x530C]) ^ 0x7B8F1C) & ~(_DWORD)v67 | v67 & 0x847000) << 8;
  LODWORD(STACK[0x66A0]) = ((v67 ^ 0x10FF) & (LODWORD(STACK[0x5310]) ^ 0x3288B1D1) | v67 & 0xCD774E00) ^ 0x49720C80;
  LODWORD(v67) = ((LODWORD(STACK[0x5324]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5318]) ^ 0xB9) << 16);
  LODWORD(v67) = (LODWORD(STACK[0x5328]) ^ 0xAAB974) & ~(_DWORD)v67 | v67 & 0x554600;
  LODWORD(v67) = (((_DWORD)v67 << 8) ^ 0x400432FF) & (LODWORD(STACK[0x532C]) ^ 0x6814FB24) | ((_DWORD)v67 << 8) & 0x97EB0400;
  LODWORD(STACK[0x6730]) = v67 & 0x30F8158 ^ 0x20D8159;
  LODWORD(STACK[0x540C]) = v67 & 0xFCF07EA7;
  LODWORD(v67) = ((LODWORD(STACK[0x5330]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5338]) ^ 0xB9) << 8);
  LODWORD(v67) = ((v85 ^ 0x96DC0) & ~(_DWORD)v67 | v67 & 0xF69200) << 8;
  LODWORD(STACK[0x56FC]) = v67 ^ 0xD68282FF;
  LODWORD(STACK[0x56F8]) = v67 & 0x20312C00;
  LODWORD(v67) = ((LODWORD(STACK[0x5340]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5344]) ^ 0xB9) << 8);
  LODWORD(v67) = (LODWORD(STACK[0x5350]) ^ 0x7265B470) & ~(_DWORD)v67 | v67 & 0x9A4B00;
  LODWORD(v67) = (((v67 & 0x8A9EAF ^ 0xA0824) + (v67 & 0x756150 ^ 0x756051)) << 8) - 256;
  LODWORD(v68) = ((v67 ^ 0x602100FF) & (LODWORD(STACK[0x5358]) ^ 0x72E9B493) | v67 & 0x8D164B00) ^ 0x88160AD4;
  LODWORD(v67) = ((LODWORD(STACK[0x5360]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5364]) ^ 0xB9) << 8);
  LODWORD(v67) = ((LODWORD(STACK[0x5368]) ^ 0x90A0BF5) & ~(_DWORD)v67 | v67 & 0xF5F400) ^ 0xF641E411;
  LODWORD(v67) = (((v67 | 0x65F11) - (v67 | 0xF9A0EE)) << 8) - 106893824;
  v95 = ((LODWORD(STACK[0x5374]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5370]) ^ 0xB9) << 8);
  v96 = ((LODWORD(STACK[0x5378]) ^ 0x8ED42F61) & ~v95 | v95 & 0x2BD000) ^ 0x11229023;
  v97 = ((((2 * v96) & 0xCE1A42) - v96) << 8) - 1728913920;
  LODWORD(v77) = STACK[0x5388];
  v98 = ((v97 ^ 0x9022C0FF) & (LODWORD(STACK[0x5388]) ^ 0xF623C46F) | v97 & 0x9DC3B00) ^ 0x9882A28;
  v99 = (v67 ^ 0xB009A2FF) & (LODWORD(STACK[0x537C]) ^ 0xF8A9E24D) | v67 & 0x7561D00;
  LODWORD(STACK[0x6720]) = ((v67 ^ 0xB009A2FF) & (LODWORD(STACK[0x537C]) ^ 0xF8A9E24D) & 0x62DF70D8 | v67 & 0x2561000) ^ 0x62C970D9;
  LODWORD(STACK[0x5400]) = v99 & 0x9D208F27;
  v100 = ((_DWORD)v77 << 16) | ((LODWORD(STACK[0x5380]) ^ 0xB9) << 8);
  v101 = (v100 & 0x461300 | 0xA1000048) ^ (v100 ^ 0x1200ECFF) & (LODWORD(STACK[0x5384]) ^ 0x12B9EC19);
  v102 = -512 - (((v101 | 0x5C9874) + (~v101 | 0xA3678B)) << 8);
  LODWORD(v79) = ((v102 ^ 0x257484FF) & (LODWORD(STACK[0x538C]) ^ 0x25F5A7F8) | v102 & 0xDA0A5800) ^ 0xC200500C;
  LODWORD(v87) = STACK[0x52FC];
  v103 = (((((LODWORD(STACK[0x5280]) ^ 0xB9) << 8) | ((_DWORD)v87 << 16)) ^ 0x670639FF) & (LODWORD(STACK[0x527C]) ^ 0x670F3901) | (((LODWORD(STACK[0x5280]) ^ 0xB9) << 8) | ((_DWORD)v87 << 16)) & 0xF0C600) ^ 0xADA426;
  v104 = ((v103 + 3933708 - ((2 * v103) & 0x782B8C)) << 8) + 1030656;
  LODWORD(v91) = (((((LODWORD(STACK[0x5284]) ^ 0xB9) << 8) | (LODWORD(STACK[0x52DC]) << 16)) ^ 0x72044DFF) & (LODWORD(STACK[0x52DC]) ^ 0x720C4D0E) | (((LODWORD(STACK[0x5284]) ^ 0xB9) << 8) | (LODWORD(STACK[0x52DC]) << 16)) & 0xF3B200) ^ 0x442B008;
  LODWORD(v91) = (((_DWORD)v91 + 13385793 - ((2 * (_DWORD)v91) & 0x988514)) << 8) + 149760;
  LODWORD(v91) = (v91 ^ 0xCC4042FF) & (LODWORD(STACK[0x5288]) ^ 0xEFDD4296) | v91 & 0x1022BD00;
  LODWORD(v71) = v91 ^ 0x221480;
  LODWORD(STACK[0x5378]) = v91 & 0x93E5D6BE ^ 0x93C5C23E;
  LODWORD(STACK[0x54F4]) = v104 ^ 0x8020A5FF;
  LODWORD(STACK[0x54F0]) = v104 & 0x71DF5A00;
  v105 = ((LODWORD(STACK[0x5290]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x528C]) ^ 0xB9) << 8);
  LODWORD(v49) = STACK[0x51F8];
  LODWORD(v67) = (LODWORD(STACK[0x51F8]) ^ 0xFB57C2) & ~v105 | v105 & 0x4A800;
  v106 = ((_DWORD)v87 << 8) | ((LODWORD(STACK[0x5294]) ^ 0xB9) << 16);
  v107 = ((v106 ^ 0xFFFF00FF) & (LODWORD(STACK[0x5298]) ^ 0xEB8311FA) | v106 & 0x7CEE00) ^ 0x34C6AC;
  v108 = ((((2 * v107) | 0xF0137C) - v107) << 8) + 133579264;
  LODWORD(v48) = ((v108 ^ 0xA0010CFF) & (LODWORD(STACK[0x529C]) ^ 0xEA271CB5) | v108 & 0x15D8E300) ^ 0x8882C1;
  LODWORD(v77) = STACK[0x52E4];
  v109 = (LODWORD(STACK[0x52E4]) << 8) | ((LODWORD(STACK[0x52A0]) ^ 0xB9) << 16);
  v110 = (v109 ^ 0x6744FF) & (LODWORD(STACK[0x52A4]) ^ 0x67E4A9) | v109 & 0x981B00;
  v111 = ((v110 << 8) ^ 0x800081FF) & (LODWORD(STACK[0x52A8]) ^ 0xA56D91E7) | (v110 << 8) & 0x5A926E00;
  v112 = v111 & 0x78FF4A3E ^ 0x787F001F;
  LODWORD(STACK[0x5370]) = v111 & 0x8700B5C1;
  v113 = ((LODWORD(STACK[0x52B0]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x52AC]) ^ 0xB9) << 16);
  v114 = (LODWORD(STACK[0x52B4]) ^ 0x29EECAF1) & ~v113 | v113 & 0x113500;
  v115 = (((v114 & 0xE7CF7B ^ 0xE6CE69) + (v114 & 0x183084 ^ 0x101085)) << 8) - 256;
  LODWORD(v83) = (v115 ^ 0x46CA4AFF) & (LODWORD(STACK[0x52B8]) ^ 0x5ECA6AD4) | v115 & 0xA1359500;
  v116 = ((LODWORD(STACK[0x52BC]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x52C0]) ^ 0xB9) << 8);
  v117 = ((LODWORD(STACK[0x52C4]) ^ 0x485F8C6C) & ~v116 | v116 & 0xA07300) ^ 0x35007022;
  v118 = ((v117 - ((2 * v117) & 0x6A138E)) << 8) - 1257650432;
  LODWORD(STACK[0x56F0]) = v118 ^ 0x408C1FF;
  LODWORD(STACK[0x56EC]) = v118 & 0x93373E00;
  v119 = (v49 ^ 0xDFFFC3) & ~(((LODWORD(STACK[0x52C8]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x52CC]) ^ 0xB9) << 8)) | ((LODWORD(STACK[0x52C8]) ^ 0xB9) << 16) & 0x200000;
  LODWORD(v87) = ((v119 << 8) ^ 0x5FF) & (LODWORD(STACK[0x52D0]) ^ 0x803B3F74) | (v119 << 8) & 0x7FC4C000;
  LODWORD(STACK[0x5368]) = (((v119 << 8) ^ 0x5FF) & (LODWORD(STACK[0x52D0]) ^ 0x803B3F74) & 0xAF9466D6 | (v119 << 8) & 0x2F844000) ^ 0xAC9466D4;
  v120 = ((LODWORD(STACK[0x52D4]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x52D8]) ^ 0xB9) << 8);
  v121 = (v77 ^ 0x739FD4A3) & ~v120 | v120 & 0x602B00;
  v122 = (((v121 & 0x772EB3 ^ 0x372C13) + (v121 & 0x88D14C ^ 0x45)) << 8) - 256;
  LODWORD(v88) = ((v122 ^ 0x70492FF) & (LODWORD(STACK[0x52E0]) ^ 0x27949623) | v122 & 0xD86B6900) ^ 0x10080920;
  v123 = ((_DWORD)v75 << 16) | ((LODWORD(STACK[0x523C]) ^ 0xB9) << 8);
  v124 = ((v123 ^ 0xA4014FF) & (LODWORD(STACK[0x5240]) ^ 0xAC9148D) | v123 & 0x36EB00) ^ 0xB4126900;
  v125 = (((v124 | 0xEB215C) - (v124 | 0x14DEA3)) << 8) + 350135040;
  LODWORD(v78) = (v125 ^ 0x720185FF) & (LODWORD(STACK[0x5244]) ^ 0x7209ADBB) | v125 & 0x8DF65200;
  LODWORD(STACK[0x5360]) = ((v125 ^ 0x720185FF) & (LODWORD(STACK[0x5244]) ^ 0x7209ADBB) & 0x2154488B | v125 & 0x1544000) ^ 0x21104803;
  v126 = ((LODWORD(STACK[0x524C]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5248]) ^ 0xB9) << 8);
  v127 = ((LODWORD(STACK[0x5250]) ^ 0x34DAD27F) & ~v126 | v126 & 0x252D00) ^ 0x3012C19;
  v128 = ((((2 * v127) & 0xD891A2) - v127) << 8) + 330771968;
  v129 = (v128 ^ 0x5A408FF) & (LODWORD(STACK[0x5254]) ^ 0x85A55874) | v128 & 0x7A5AA700;
  LODWORD(STACK[0x5358]) = v129 & 0xD1B5C41F ^ 0x91A5C40F;
  LODWORD(STACK[0x5350]) = v129 & 0x2E4A3BE0 ^ 0x220A2301;
  v130 = ((LODWORD(STACK[0x5258]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x525C]) ^ 0xB9) << 8);
  v131 = (LODWORD(STACK[0x5260]) ^ 0xBD8608) & ~v130 | v130 & 0x427900;
  LODWORD(v91) = ((v131 << 8) ^ 0x42610EFF) & (LODWORD(STACK[0x5264]) ^ 0xFFE51FC4) | (v131 << 8) & 0x1AE000;
  v132 = (((v131 << 8) ^ 0x42610EFF) & (LODWORD(STACK[0x5264]) ^ 0xFFE51FC4) & 0x951B008C | (v131 << 8) & 0x1A0000) ^ 0x9513008D;
  LODWORD(STACK[0x5348]) = v91 & 0x6AE4FF73;
  LODWORD(v91) = ((((_DWORD)v75 << 8) | ((LODWORD(STACK[0x5268]) ^ 0xB9) << 16)) ^ 0x3750A1FF) & (LODWORD(STACK[0x526C]) ^ 0x37FFFF46) ^ 0xC80EE300;
  LODWORD(v91) = ((((2 * (_DWORD)v91) & 0x36459A) - (_DWORD)v91) << 8) - 455265792;
  LODWORD(STACK[0x549C]) = v91 ^ 0x51030FF;
  LODWORD(STACK[0x5498]) = v91 & 0x42EB4200;
  LODWORD(v91) = ((LODWORD(STACK[0x5274]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5270]) ^ 0xB9) << 16);
  LODWORD(v91) = ((LODWORD(STACK[0x5278]) ^ 0xA7B0B) & ~(_DWORD)v91 | v91 & 0xF58400) << 8;
  LODWORD(v77) = ((v91 ^ 0x800405FF) & (v84 ^ 0x827DA72A) | v91 & 0x7D825800) ^ 0x59805808;
  LODWORD(v91) = ((LODWORD(STACK[0x5210]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x520C]) ^ 0xB9) << 8);
  LODWORD(v91) = ((LODWORD(STACK[0x5214]) ^ 0x3E6321E3) & ~(_DWORD)v91 | v91 & 0x9CDE00) ^ 0x90D8A1;
  LODWORD(v91) = ((((2 * (_DWORD)v91) | 0xF85EAE) - (_DWORD)v91) << 8) + 64006400;
  LODWORD(v85) = ((v91 ^ 0x302112FF) & (LODWORD(STACK[0x5218]) ^ 0x322336BB) | v91 & 0xCDDCC900) ^ 0xC984011D;
  LODWORD(v91) = ((LODWORD(STACK[0x5200]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x51FC]) ^ 0xB9) << 8);
  LODWORD(v91) = (LODWORD(STACK[0x5204]) ^ 0xC17EE75E) & ~(_DWORD)v91 | v91 & 0x811800;
  LODWORD(v91) = ((v91 & 0xD5F54F ^ 0x54E547)
                + (v91 ^ 0xA811808)
                - ((v91 ^ 0xA811808) & 0xD5F54F)) << 8;
  LODWORD(v91) = (v91 ^ 0x84B149FF) & (LODWORD(STACK[0x5208]) ^ 0xAEB1E999) | v91 & 0x514E1600;
  LODWORD(STACK[0x5338]) = v91 & 0xB8680A08 ^ 0xB8280808;
  LODWORD(v49) = (4425 * (v80 < 0xC034E9E9)) ^ (v80 - 1304822803);
  LODWORD(STACK[0x548C]) = LODWORD(STACK[0x6780]) - 1;
  LODWORD(STACK[0x53EC]) = LODWORD(STACK[0x6770]) - 2004839443;
  LODWORD(STACK[0x5428]) = v89;
  LODWORD(STACK[0x5380]) = (2 * v89) & 0xA14496C0;
  LODWORD(STACK[0x532C]) = (LODWORD(STACK[0x6760]) ^ 0x2AF41D95) - 1;
  LODWORD(v90) = ((_DWORD)v90 << 8) - 256;
  LODWORD(STACK[0x54D8]) = v90 & 0x4DB9AB00;
  LODWORD(STACK[0x54D4]) = v90 ^ 0x304604FF;
  LODWORD(STACK[0x5328]) = LODWORD(STACK[0x6750]) - 1;
  LODWORD(v80) = LODWORD(STACK[0x6740]) ^ 0x81886A78;
  LODWORD(STACK[0x5790]) = v70 & 0x85EA8300;
  v133 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)v49);
  LODWORD(STACK[0x5778]) = v70 ^ 0x780038FF;
  LODWORD(STACK[0x57C4]) = (_DWORD)v52;
  LODWORD(STACK[0x5788]) = (2 * (_DWORD)v52) & 0xFE5B9FA4;
  LODWORD(STACK[0x5324]) = LODWORD(STACK[0x6730]) - 1;
  LODWORD(STACK[0x5318]) = LODWORD(STACK[0x6720]) - 1;
  LODWORD(STACK[0x5388]) = (_DWORD)v67 << 8;
  LODWORD(STACK[0x5374]) = (_DWORD)v48;
  LODWORD(STACK[0x5310]) = (2 * (_DWORD)v48) & 0x960911F2;
  LODWORD(STACK[0x530C]) = v112 - 1;
  LODWORD(STACK[0x5364]) = v88;
  LODWORD(STACK[0x5300]) = (2 * v88) & 0xBA582BE4;
  LODWORD(STACK[0x5304]) = v132 - 1;
  LODWORD(STACK[0x5340]) = v91 ^ 0x41461641;
  LODWORD(STACK[0x5308]) = (v91 ^ 0x41461641) & 0xB8680A08;
  v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v133 - 12);
  v135 = *(unsigned __int8 *)(STACK[0x6AA0] + 683);
  v136 = STACK[0x6A90];
  v137 = *(unsigned __int8 *)(STACK[0x6A90] + 2261);
  v138 = *(unsigned __int8 *)(STACK[0x6A50] + 3376);
  LODWORD(STACK[0x6740]) = *(unsigned __int8 *)(STACK[0x69E0] + 1517);
  LODWORD(STACK[0x6730]) = *(unsigned __int8 *)(STACK[0x6A30] + 637);
  LODWORD(STACK[0x6750]) = *(unsigned __int8 *)STACK[0x68A0];
  v139 = (unsigned __int8 *)STACK[0x6A60];
  LODWORD(STACK[0x52F4]) = STACK[0x66B0] & 0xC67D64C2;
  LODWORD(STACK[0x52F8]) = STACK[0x66A8] & 0x1D3FD379;
  LODWORD(STACK[0x55B8]) = v80;
  LODWORD(STACK[0x55B4]) = 2 * v80;
  LODWORD(STACK[0x5344]) = LODWORD(STACK[0x66A0]) | 0x34D0D17F;
  LODWORD(STACK[0x57BC]) = v68;
  LODWORD(STACK[0x5748]) = 2 * v68;
  LODWORD(STACK[0x538C]) = v98;
  LODWORD(STACK[0x5384]) = 2 * v98;
  LODWORD(STACK[0x54A0]) = v79;
  LODWORD(STACK[0x5490]) = 2 * v79;
  LODWORD(STACK[0x537C]) = v71;
  LODWORD(STACK[0x52EC]) = v71 & 0x93E5D6BE;
  LODWORD(STACK[0x5780]) = v83 ^ 0xA0001590;
  LODWORD(STACK[0x5744]) = 2 * (v83 ^ 0xA0001590);
  LODWORD(STACK[0x5330]) = v87 ^ 0x43408022;
  LODWORD(STACK[0x52FC]) = (v87 ^ 0x43408022) & 0xAF9466D6;
  LODWORD(STACK[0x52F0]) = (v78 ^ 0x88C610E8) & 0x2154488B;
  LODWORD(STACK[0x57A8]) = (_DWORD)v77;
  LODWORD(STACK[0x5750]) = 2 * (_DWORD)v77;
  LODWORD(STACK[0x57A4]) = v85;
  LODWORD(STACK[0x5758]) = 2 * v85;
  LODWORD(STACK[0x6708]) = *(unsigned __int8 *)STACK[0x6960];
  LODWORD(STACK[0x6710]) = *v139;
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(v136 + 706);
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(STACK[0x6A40] + 2132);
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(STACK[0x6AB0] + 941);
  return v134(v138, v135, v137);
}

uint64_t sub_1009D3070@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, int a4@<W6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  char v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = *(_BYTE *)(v6 + a5) ^ 0xB9;
  v11 = v8 + 5621 * (v10 ^ a1);
  v12 = (a4 - 168672845) & (v9 + 2447);
  v13 = (v10 ^ LODWORD(STACK[0x6708]));
  LODWORD(STACK[0x6780]) = v12;
  v14 = v8 + 5621 * (v10 ^ LODWORD(STACK[0x6710]));
  v15 = v8 + 5621 * (v10 ^ LODWORD(STACK[0x6730]));
  v16 = v8 + 5621 * (v10 ^ LODWORD(STACK[0x6740]));
  v17 = v8 + 5621 * (v10 ^ LODWORD(STACK[0x6750]));
  v18 = v8 + 5621 * (v10 ^ LODWORD(STACK[0x6720]));
  v19 = (v10 ^ LODWORD(STACK[0x6760]));
  v20 = (v10 ^ LODWORD(STACK[0x6770]));
  LODWORD(STACK[0x6708]) = *(unsigned __int8 *)(a6
                                              + (v12 ^ (v8 + 1610))
                                              + 5621 * v13
                                              - 6152
                                              * (((1429794055
                                                               * (unint64_t)((v12 ^ (v8 + 1610))
                                                                                  + 5621 * v13)) >> 32) >> 11));
  LODWORD(STACK[0x6710]) = *(unsigned __int8 *)(a6
                                              + v14
                                              - 6152 * (((v14 * (unint64_t)v7) >> 32) >> 7));
  v21 = *(unsigned __int8 *)(a6 + v11 - 6152 * (((v11 * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6730]) = *(unsigned __int8 *)(a6
                                              + v15
                                              - 6152 * (((v15 * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6740]) = *(unsigned __int8 *)(a6
                                              + v16
                                              - 6152 * (((v16 * (unint64_t)v7) >> 32) >> 7));
  v22 = *(unsigned __int8 *)(a6
                           + v8
                           + 5621 * (v10 ^ a3)
                           - 6152
                           * ((((v8 + 5621 * (v10 ^ a3))
                                            * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6750]) = *(unsigned __int8 *)(a6
                                              + v17
                                              - 6152 * (((v17 * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6720]) = *(unsigned __int8 *)(a6
                                              + v18
                                              - 6152 * (((v18 * (unint64_t)v7) >> 32) >> 7));
  v23 = *(unsigned __int8 *)(a6
                           + v8
                           + 5621 * (v10 ^ a2)
                           - 6152
                           * ((((v8 + 5621 * (v10 ^ a2))
                                            * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6770]) = *(unsigned __int8 *)(a6
                                              + v8
                                              + 5621 * v20
                                              - 6152
                                              * ((((v8 + 5621 * v20) * (unint64_t)v7) >> 32) >> 7));
  LODWORD(STACK[0x6760]) = *(unsigned __int8 *)(a6
                                              + v8
                                              + 5621 * v19
                                              - 6152
                                              * ((((v8 + 5621 * v19) * (unint64_t)v7) >> 32) >> 7));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8 * ((12903 * (a5 == 46)) ^ a4))
                                                            - 12))(v21, v23, v22);
}

uint64_t sub_1009D3374(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unint64_t v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned __int8 *v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unsigned __int8 *v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  unsigned __int8 *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unsigned int v74;
  int v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unint64_t v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unint64_t v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  _BYTE *v90;
  int v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  unint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  BOOL v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unint64_t v132;
  int v133;
  int v134;
  _BYTE *v135;
  unint64_t v136;
  unint64_t v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  _BYTE *v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unint64_t v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  unint64_t v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unint64_t v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  _BYTE *v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unint64_t v195;
  unint64_t v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  __int16 v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unint64_t v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unint64_t v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  unint64_t v235;
  unint64_t v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unint64_t v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  unint64_t v252;
  unint64_t v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  _BYTE *v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unint64_t v265;
  int v266;
  int v267;
  int v268;
  int v269;
  unint64_t v270;
  int v271;
  unsigned int v272;
  int v273;
  unint64_t v274;
  unint64_t v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unint64_t v319;
  unint64_t v320;
  int v321;
  unsigned int v322;
  unint64_t v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  unint64_t v331;
  unint64_t v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unint64_t v344;
  unint64_t v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  unint64_t v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unint64_t v389;
  unint64_t v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  unint64_t v399;
  unint64_t v400;
  unint64_t v401;
  unint64_t v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  int v410;
  unint64_t v411;
  int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unint64_t v419;
  unint64_t v420;
  unsigned int v421;
  unsigned int v422;
  _BYTE *v423;
  unint64_t v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  unsigned int v434;
  unint64_t v435;
  unint64_t v436;
  int v437;
  int v438;
  int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  unint64_t v450;
  unint64_t v451;
  int v452;
  unint64_t v453;
  int v454;
  int v455;
  unint64_t v456;
  unint64_t v457;
  unsigned int v458;
  unint64_t v459;
  int v460;
  int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  _BYTE *v465;
  unint64_t v466;
  unint64_t v467;
  int v468;
  int v469;
  int v470;
  int v471;
  unsigned int v472;
  int v473;
  _BYTE *v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  unint64_t v478;
  unsigned int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  unint64_t v484;
  int v485;
  int v486;
  int v487;
  int v488;
  unint64_t v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  unsigned int v503;
  int v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  unsigned int v519;
  int v520;
  unsigned int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  char v529;
  int v530;
  unint64_t v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  unint64_t v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  unsigned int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  unint64_t v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unint64_t v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  unsigned int v561;
  int v562;
  _BYTE *v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  unint64_t v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  int v586;
  int v587;
  int v588;
  unsigned int v589;
  int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unint64_t v609;
  _BYTE *v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  char v617;
  char v618;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  unint64_t v624;
  unint64_t v625;
  unsigned int v626;
  int v627;
  int v628;
  unint64_t v629;
  unsigned int v630;
  uint64_t (*v631)(void);

  LODWORD(STACK[0x53A0]) = LODWORD(STACK[0x6480]) - LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x5798]) = LODWORD(STACK[0x63A8]) + LODWORD(STACK[0x63B0]);
  LODWORD(STACK[0x5528]) = LODWORD(STACK[0x5238]) | LODWORD(STACK[0x5738]);
  LODWORD(STACK[0x5710]) = LODWORD(STACK[0x5230]) - LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x53CC]) = LODWORD(STACK[0x548C]) + LODWORD(STACK[0x5594]);
  LODWORD(STACK[0x5488]) = LODWORD(STACK[0x522C]) - LODWORD(STACK[0x5728]);
  LODWORD(STACK[0x6800]) = 0;
  LODWORD(STACK[0x6700]) = 0;
  v14 = LODWORD(STACK[0x5718]) - LODWORD(STACK[0x5494]) + a7;
  LODWORD(STACK[0x548C]) = LODWORD(STACK[0x5234]) - LODWORD(STACK[0x5520]);
  LODWORD(STACK[0x53EC]) -= LODWORD(STACK[0x54CC]);
  LODWORD(STACK[0x5380]) = LODWORD(STACK[0x5428]) - LODWORD(STACK[0x5380]);
  LODWORD(STACK[0x5428]) = LODWORD(STACK[0x5228]) + LODWORD(STACK[0x66B0]) - LODWORD(STACK[0x52F4]);
  LODWORD(STACK[0x5520]) = LODWORD(STACK[0x532C]) + LODWORD(STACK[0x5224]);
  v15 = LODWORD(STACK[0x5220]) + LODWORD(STACK[0x66A8]) - LODWORD(STACK[0x52F8]);
  LODWORD(STACK[0x6480]) = LODWORD(STACK[0x5328]) + LODWORD(STACK[0x521C]);
  LODWORD(STACK[0x5494]) = LODWORD(STACK[0x5324]) + LODWORD(STACK[0x540C]);
  LODWORD(STACK[0x54CC]) = LODWORD(STACK[0x5318]) + LODWORD(STACK[0x5400]);
  v16 = LODWORD(STACK[0x5378]) + LODWORD(STACK[0x537C]) - LODWORD(STACK[0x52EC]);
  LODWORD(STACK[0x5594]) = LODWORD(STACK[0x5374]) - LODWORD(STACK[0x5310]);
  LODWORD(STACK[0x5400]) = LODWORD(STACK[0x530C]) + LODWORD(STACK[0x5370]);
  v17 = LODWORD(STACK[0x5368]) + LODWORD(STACK[0x5330]) - LODWORD(STACK[0x52FC]);
  LODWORD(STACK[0x5718]) = LODWORD(STACK[0x5364]) - LODWORD(STACK[0x5300]);
  v18 = LODWORD(STACK[0x5360]) + a5 - LODWORD(STACK[0x52F0]);
  LODWORD(STACK[0x5728]) = LODWORD(STACK[0x5358]) + LODWORD(STACK[0x5350]);
  LODWORD(STACK[0x5738]) = LODWORD(STACK[0x5304]) + LODWORD(STACK[0x5348]);
  LODWORD(STACK[0x63B0]) = v8;
  v19 = LODWORD(STACK[0x5338]) + LODWORD(STACK[0x5340]) - LODWORD(STACK[0x5308]);
  LODWORD(STACK[0x63A8]) = v9;
  LODWORD(STACK[0x66B0]) = LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6468]) ^ LODWORD(STACK[0x568C]);
  v20 = LODWORD(STACK[0x6398]) ^ LODWORD(STACK[0x6470]);
  LODWORD(STACK[0x540C]) = LODWORD(STACK[0x5C20]) ^ LODWORD(STACK[0x6390]);
  LODWORD(STACK[0x568C]) = LODWORD(STACK[0x5468]) ^ v19;
  v21 = LODWORD(STACK[0x58E4]) ^ LODWORD(STACK[0x5404]);
  v22 = LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x6478]);
  LODWORD(STACK[0x63A0]) = a1;
  v23 = LODWORD(STACK[0x5960]) ^ LODWORD(STACK[0x57C8]);
  LODWORD(STACK[0x6398]) = a2;
  v24 = LODWORD(STACK[0x5A58]) ^ LODWORD(STACK[0x6428]);
  LODWORD(STACK[0x6390]) = a3;
  LODWORD(STACK[0x6478]) = v24 ^ LODWORD(STACK[0x559C]) ^ LODWORD(STACK[0x54AC]);
  LODWORD(STACK[0x5C20]) = LODWORD(STACK[0x57B0]) ^ LODWORD(STACK[0x58E0]) ^ LODWORD(STACK[0x5410]);
  v25 = LODWORD(STACK[0x5CC8]) ^ LODWORD(STACK[0x5CB8]);
  v26 = LODWORD(STACK[0x55A8]) ^ LODWORD(STACK[0x53F4]);
  LODWORD(STACK[0x6470]) = LODWORD(STACK[0x5DF8]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x5CD8]) ^ LODWORD(STACK[0x5BD0]);
  LODWORD(STACK[0x5DF8]) = v25 ^ LODWORD(STACK[0x5AB8]);
  v27 = LODWORD(STACK[0x5DE0]) ^ LODWORD(STACK[0x5DE8]);
  LODWORD(STACK[0x6468]) = LODWORD(STACK[0x5AC8]) ^ LODWORD(STACK[0x5C60]) ^ LODWORD(STACK[0x58F4]) ^ LODWORD(STACK[0x545C]);
  LODWORD(STACK[0x6460]) ^= LODWORD(STACK[0x5D98]) ^ LODWORD(STACK[0x5460]) ^ LODWORD(STACK[0x53C0]);
  LODWORD(STACK[0x6458]) ^= LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x5920]) ^ v16;
  LODWORD(STACK[0x6450]) = LODWORD(STACK[0x5AD0]) ^ LODWORD(STACK[0x5CE8]) ^ LODWORD(STACK[0x5504]) ^ LODWORD(STACK[0x5484]);
  LODWORD(STACK[0x6448]) ^= LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x54FC]) ^ LODWORD(STACK[0x53B8]);
  LODWORD(STACK[0x5DE0]) = LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x5704]);
  v28 = LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x56E8]);
  LODWORD(STACK[0x6440]) = LODWORD(STACK[0x5E00]) ^ LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x5578]) ^ LODWORD(STACK[0x5458]);
  LODWORD(STACK[0x5D98]) = LODWORD(STACK[0x5454]) ^ LODWORD(STACK[0x5BA8]);
  LODWORD(STACK[0x6438]) = v28 ^ LODWORD(STACK[0x53F0]) ^ v18;
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x57F8]) ^ LODWORD(STACK[0x5DC8]) ^ LODWORD(STACK[0x53AC]) ^ v15;
  LODWORD(STACK[0x6428]) = LODWORD(STACK[0x5E08]) ^ LODWORD(STACK[0x6418]) ^ LODWORD(STACK[0x5980]) ^ LODWORD(STACK[0x546C]);
  LODWORD(STACK[0x6420]) = LODWORD(STACK[0x5BB0]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x5804]) ^ LODWORD(STACK[0x53B4]);
  LODWORD(STACK[0x6418]) = LODWORD(STACK[0x5DF0]) ^ LODWORD(STACK[0x6380]) ^ v26;
  LODWORD(STACK[0x6410]) = v27 ^ v21;
  LODWORD(STACK[0x6408]) = v22 ^ v23;
  LODWORD(STACK[0x6400]) ^= LODWORD(STACK[0x6388]) ^ LODWORD(STACK[0x58EC]) ^ LODWORD(STACK[0x54B8]);
  LODWORD(STACK[0x63F8]) ^= LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x63E8]) ^ LODWORD(STACK[0x6658]);
  LODWORD(STACK[0x63F0]) = LODWORD(STACK[0x593C]) ^ LODWORD(STACK[0x5BA0]) ^ LODWORD(STACK[0x58F0]) ^ LODWORD(STACK[0x55AC]);
  LODWORD(STACK[0x5DE8]) = LODWORD(STACK[0x53F8]) ^ LODWORD(STACK[0x53D4]);
  LODWORD(STACK[0x63E8]) = LODWORD(STACK[0x5C28]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x54B4]) ^ LODWORD(STACK[0x54B0]);
  LODWORD(STACK[0x5DF0]) = LODWORD(STACK[0x5AA0]) ^ LODWORD(STACK[0x5E20]) ^ LODWORD(STACK[0x58F8]);
  LODWORD(STACK[0x5E00]) = LODWORD(STACK[0x53E4]) ^ LODWORD(STACK[0x5414]) ^ LODWORD(STACK[0x53B0]);
  LODWORD(STACK[0x5E08]) = LODWORD(STACK[0x5D58]) ^ LODWORD(STACK[0x63E0]) ^ LODWORD(STACK[0x57C0]);
  LODWORD(STACK[0x63E0]) = v20 ^ LODWORD(STACK[0x5D08]) ^ LODWORD(STACK[0x53E0]);
  LODWORD(STACK[0x5E20]) = LODWORD(STACK[0x5574]) ^ LODWORD(STACK[0x5C50]) ^ LODWORD(STACK[0x53C8]);
  LODWORD(STACK[0x63D8]) ^= LODWORD(STACK[0x5D50]) ^ LODWORD(STACK[0x5890]) ^ LODWORD(STACK[0x57D8]);
  LODWORD(STACK[0x63D0]) = LODWORD(STACK[0x5470]) ^ LODWORD(STACK[0x5AA8]) ^ LODWORD(STACK[0x53DC]) ^ v17;
  LODWORD(STACK[0x63C8]) ^= LODWORD(STACK[0x5D68]) ^ LODWORD(STACK[0x589C]) ^ LODWORD(STACK[0x58A8]);
  LODWORD(STACK[0x63C0]) += LODWORD(STACK[0x5390]);
  LODWORD(STACK[0x58F8]) = v14 + 979865315;
  v29 = 886100351 - LODWORD(STACK[0x5344]) + (LODWORD(STACK[0x66A0]) | 0xCB2F2E80);
  v30 = STACK[0x6A60];
  v31 = ((*(unsigned __int8 *)(STACK[0x69F0] + 865) ^ 0xB9) << 16) | ((*(unsigned __int8 *)(STACK[0x6A60] + 1441) ^ 0xB9) << 8);
  v32 = (*(unsigned __int8 *)(STACK[0x69C0] + 1009) ^ 0x12CA2AAD) & ~v31 | v31 & 0x35D500;
  v33 = ((v32 & 0xFCE91C ^ 0xECE914) + (v32 ^ 0x69100029) - ((v32 ^ 0x69100029) & 0xFCE91C)) << 8;
  v34 = ((v33 ^ 0x101816FF) & (*(unsigned __int8 *)(STACK[0x6A30] + 197) ^ 0x305A37B4) | v33 & 0xCFA5C800) ^ 0x8E80C8A2;
  LODWORD(STACK[0x58F4]) = -172533618 - (v34 | 0xF5B7588E) + (v34 | 0xA48A771);
  v35 = (unsigned __int8 *)STACK[0x9488];
  v36 = 6419
      * (((v35[2] ^ 0xCFE74A76) + 806925706) ^ ((v35[2] ^ 0xBD0543BB) + 1123728453) ^ ((v35[2] ^ 0x72E20974) - 1927416180))
      + 39046777;
  v37 = 6419
      * (((v35[3] ^ 0x972B9215) + 1758752235) ^ ((v35[3] ^ 0x8A6789F5) + 1972925963) ^ ((v35[3] ^ 0x1D4C1B59) - 491527001))
      + 30798362;
  v38 = ((v35[10] ^ 0xC2FFC727) + 1023424729) ^ ((v35[10] ^ 0xC0347C5) - 201541573) ^ ((v35[10] ^ 0xCEFC805B) + 822312869);
  v39 = ((*v35 ^ 0x7803167D) - 2013468285) ^ *v35 ^ ((*v35 ^ 0x7343F7C4) - 1933834180);
  v40 = ((v35[4] ^ 0x2AD8DBA0) - 718855072) ^ ((v35[4] ^ 0x8511432B) + 2062466261) ^ ((v35[4] ^ 0xAFC99832) + 1345742798);
  *(_QWORD *)(v12 - 152) = STACK[0x9488];
  v41 = STACK[0xDE60];
  v42 = *(_DWORD *)(STACK[0xDE60] + 4 * (v36 % 0x2240));
  v43 = *(_DWORD *)(STACK[0xDE60] + 4 * (v37 % 0x2240));
  v44 = *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * v38 + 39046777) % 0x2240));
  v45 = *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * v40 + 6130145) % 0x2240));
  v46 = *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * v39 + 6130145) % 0x2240u));
  v47 = LODWORD(STACK[0x5958]) ^ LODWORD(STACK[0x5A90]) ^ LODWORD(STACK[0x5880]) ^ LODWORD(STACK[0x5724]);
  v48 = LODWORD(STACK[0x63B8]) ^ 0xB839C0CE ^ LODWORD(STACK[0x58DC]) ^ v29;
  v49 = ((v35[15] ^ 0x25E6C4AB) - 635880619) ^ ((v35[15] ^ 0x531355A8) - 1393776040) ^ ((v35[15] ^ 0x76F591BA)
                                                                                      - 1995805114);
  LODWORD(STACK[0x63B8]) = *(unsigned __int8 *)(v7 + 47);
  v50 = STACK[0x6AC0];
  LODWORD(STACK[0x58F0]) = *(unsigned __int8 *)(STACK[0x6AC0] + 2792);
  v51 = v50;
  v52 = STACK[0x6A00];
  LODWORD(STACK[0x6658]) = *(unsigned __int8 *)(STACK[0x6A00] + 926);
  v53 = v52;
  v54 = STACK[0x6AB0];
  LODWORD(STACK[0x6388]) = v11;
  LODWORD(STACK[0x58DC]) = *(unsigned __int8 *)(v54 + 357);
  v55 = v54;
  v56 = STACK[0x6A20];
  LODWORD(STACK[0x58E4]) = *(unsigned __int8 *)(STACK[0x6A20] + 3945);
  v57 = STACK[0x6A80];
  LODWORD(STACK[0x5D08]) = *(unsigned __int8 *)(STACK[0x6A80] + 1874);
  LODWORD(STACK[0x5C50]) = *(unsigned __int8 *)STACK[0x6860];
  v58 = STACK[0x68F0];
  LODWORD(STACK[0x5C60]) = *(unsigned __int8 *)(STACK[0x68F0] + 372);
  LODWORD(STACK[0x5CB8]) = *(unsigned __int8 *)(v56 + 797);
  LODWORD(STACK[0x5BB0]) = *(unsigned __int8 *)STACK[0x66F0];
  LODWORD(STACK[0x66A8]) = *(unsigned __int8 *)(STACK[0x6AA0] + 683);
  v59 = STACK[0x6A10];
  LODWORD(STACK[0x5BA8]) = *(unsigned __int8 *)(STACK[0x6A10] + 3338);
  LODWORD(STACK[0x5958]) = *(unsigned __int8 *)STACK[0x66F8];
  LODWORD(STACK[0x5920]) = *(unsigned __int8 *)(v59 + 1017);
  v60 = STACK[0x6940];
  LODWORD(STACK[0x593C]) = *(unsigned __int8 *)STACK[0x6940];
  v61 = v60;
  v62 = STACK[0x6A90];
  LODWORD(STACK[0x5960]) = *(unsigned __int8 *)(STACK[0x6A90] + 1730);
  LODWORD(STACK[0x5A90]) = *(unsigned __int8 *)(STACK[0x6900] + 220);
  v63 = STACK[0x6A40];
  LODWORD(STACK[0x66A0]) = *(unsigned __int8 *)(STACK[0x6A40] + 2132);
  LODWORD(STACK[0x5A58]) = *(unsigned __int8 *)(v58 + 175);
  v64 = (unsigned __int8 *)STACK[0x6A50];
  LODWORD(STACK[0x5980]) = *(unsigned __int8 *)(STACK[0x6A50] + 2610);
  LODWORD(STACK[0x5880]) = *(unsigned __int8 *)(STACK[0x68E0] + 53);
  LODWORD(STACK[0x58EC]) = *(unsigned __int8 *)(v62 + 99);
  LODWORD(STACK[0x58E0]) = *(unsigned __int8 *)STACK[0x69E0];
  LODWORD(STACK[0x5890]) = *(unsigned __int8 *)(v63 + 577);
  v65 = STACK[0x6920];
  LODWORD(STACK[0x5704]) = *(unsigned __int8 *)(STACK[0x6920] + 84);
  v66 = v65;
  LODWORD(STACK[0x57B0]) = *(unsigned __int8 *)(STACK[0x6518] + 2185);
  LODWORD(STACK[0x5724]) = *(unsigned __int8 *)(v63 + 3012);
  LODWORD(STACK[0x5CD8]) = *(unsigned __int8 *)(v55 + 2352);
  LODWORD(STACK[0x5D58]) = *(unsigned __int8 *)STACK[0x67F0];
  LODWORD(STACK[0x5C28]) = *(unsigned __int8 *)(STACK[0x66B8] + 2314);
  v67 = *(unsigned __int8 *)(v57 + 3027);
  LODWORD(STACK[0x5CE8]) = v67;
  v68 = STACK[0x69F0];
  LODWORD(STACK[0x5CC8]) = *(unsigned __int8 *)(STACK[0x69F0] + 607);
  v69 = *(unsigned __int8 **)(v12 - 152);
  LODWORD(STACK[0x5BD0]) = *(unsigned __int8 *)(v61 + 1062);
  LODWORD(STACK[0x6690]) = *(unsigned __int8 *)(v68 + 1449);
  LODWORD(STACK[0x57D8]) = *(unsigned __int8 *)(STACK[0x6870] + 1328);
  LODWORD(STACK[0x57C0]) = *(unsigned __int8 *)(v30 + 1153);
  LODWORD(STACK[0x57C8]) = *(unsigned __int8 *)(v57 + 3634);
  LODWORD(STACK[0x57F8]) = v64[1252];
  LODWORD(STACK[0x5DC8]) = *(unsigned __int8 *)(STACK[0x6668] + 2276);
  v70 = STACK[0x6960];
  LODWORD(STACK[0x5D50]) = *(unsigned __int8 *)STACK[0x6960];
  LODWORD(STACK[0x5D68]) = *(unsigned __int8 *)(v66 + 319);
  v71 = v62;
  LODWORD(STACK[0x589C]) = *(unsigned __int8 *)(v62 + 3998);
  LODWORD(STACK[0x5804]) = *(unsigned __int8 *)(v51 + 3414);
  v72 = v51;
  LODWORD(STACK[0x58A8]) = v64[266];
  LODWORD(STACK[0x5AC8]) = *(unsigned __int8 *)(v55 + 3141);
  LODWORD(STACK[0x5AA0]) = v64[3725];
  LODWORD(STACK[0x5AA8]) = *(unsigned __int8 *)(STACK[0x6A30] + 1464);
  LODWORD(STACK[0x5AB8]) = *(unsigned __int8 *)(v71 + 2443);
  v73 = v71;
  LODWORD(STACK[0x5BA0]) = *(unsigned __int8 *)STACK[0x6510];
  LODWORD(STACK[0x5AD0]) = *(unsigned __int8 *)(v70 + 933);
  *(_BYTE *)(STACK[0xDE68] + 1147) = 33;
  LODWORD(v57) = *(_DWORD *)(v41 + 4 * ((6419 * v49 + 30798362) % 0x2240u));
  LODWORD(v63) = *(_DWORD *)(v41
                           + 4
                           * ((6419
                             * (((v69[12] ^ 0x58AC963A) - 1487705658) ^ ((v69[12] ^ 0x48AD7A) - 4763002) ^ ((v69[12] ^ 0x58E43BF9u) - 1491352569))
                             + 6130145)
                            % 0x2240));
  *(_BYTE *)(v53 + 2094) = 126;
  LODWORD(v55) = v69[13];
  LODWORD(STACK[0x6380]) = v10;
  LODWORD(v70) = ((v69[9] ^ 0x70E44039) - 1894006841) ^ ((v69[9] ^ 0xD03592CB) + 801795381) ^ ((v69[9] ^ 0xA0D1D24B)
                                                                                             + 1596861877);
  LODWORD(v51) = v69[5];
  v74 = v69[1];
  LODWORD(STACK[0x6378]) = v13;
  v75 = (v74 >> 3) | (32 * v74);
  HIDWORD(v76) = v75 ^ 7;
  LODWORD(v76) = (v75 ^ 0x30) << 24;
  v77 = *(_DWORD *)(v41
                  + 4
                  * ((6419
                    * (((v51 ^ 0xF7846FFE) + 142315522) ^ ((v51 ^ 0x43AF5535) - 1135564085) ^ ((v51 ^ 0xB42B3A72) + 1272235406))
                    + 44008664)
                   % 0x2240));
  v78 = 6419 * v70 + 44008664;
  LODWORD(v70) = *(_DWORD *)(v41
                           + 4
                           * ((6419
                             * (((v55 ^ 0x7F6B36BB) - 2137732795) ^ ((v55 ^ 0xC2C198F6)
                                                                                 + 1027499786) ^ ((v55 ^ 0xBDAAAEF4)
                                                                                                + 1112887564))
                             + 44008664)
                            % 0x2240));
  LODWORD(v55) = v78 % 0x2240;
  v79 = *(_DWORD *)(v41
                  + 4
                  * ((6419
                    * (((v76 >> 28) >> 1) | ((v76 >> 28) << 7))
                    + 42821149)
                   % 0x2240));
  LODWORD(v51) = *(_DWORD *)(v41 + 4 * v55);
  *(_BYTE *)(STACK[0x69B0] + 258) = -64;
  v80 = (6419
       * (((v69[14] ^ 0x1E0A8381) - 504005505) ^ ((v69[14] ^ 0x33EB2F9E) - 871051166) ^ ((v69[14] ^ 0x2DE1ACA6u)
                                                                                       - 769764518))
       + 39046777)
      % 0x2240;
  LODWORD(v71) = (6419
                * (((v69[11] ^ 0x76C2691D) - 1992452381) ^ ((v69[11] ^ 0x551EE61B) - 1428088347) ^ ((v69[11] ^ 0x23DC8FBFu)
                                                                                                  - 601657279))
                + 30798362)
               % 0x2240;
  LODWORD(v41) = (6419
                * (((v69[7] ^ 0x15756C0B) - 360016907) ^ ((v69[7] ^ 0x4CF050F8) - 1290817784) ^ ((v69[7] ^ 0x59853C4Au)
                                                                                               - 1501903946))
                + 30798362)
               % 0x2240;
  LODWORD(v55) = LODWORD(STACK[0x5700]) ^ LODWORD(STACK[0x5830]) ^ LODWORD(STACK[0x54C0]) ^ LODWORD(STACK[0x5408]) ^ v42 ^ v43 ^ v46 ^ v79;
  LODWORD(v69) = 6419
               * (((v69[8] ^ 0x175721D) - 24474141) ^ ((v69[8] ^ 0xC44BF028) + 1001656280) ^ ((v69[8] ^ 0xC53E828C)
                                                                                            + 985759092))
               + 6130145;
  v81 = STACK[0xDE60];
  v82 = *(_DWORD *)(STACK[0xDE60] + 4 * v41);
  v83 = *(_DWORD *)(STACK[0xDE60] + 4 * v80);
  LODWORD(v41) = *(_DWORD *)(STACK[0xDE60] + 4 * v71);
  *(_BYTE *)(v72 + 1290) = -66;
  LODWORD(v71) = v48 ^ LODWORD(STACK[0x58F8]) ^ v57 ^ v63 ^ v70 ^ v83;
  v84 = LODWORD(STACK[0x5928]) ^ LODWORD(STACK[0x5A68]) ^ LODWORD(STACK[0x588C]) ^ LODWORD(STACK[0x58F4]) ^ v44 ^ v51 ^ v41 ^ *(_DWORD *)(v81 + 4 * (v69 % 0x2240));
  LODWORD(v69) = LODWORD(STACK[0x60C8]) ^ LODWORD(STACK[0x60E8]) ^ LODWORD(STACK[0x5C58]) ^ LODWORD(STACK[0x5438]) ^ v45 ^ v77 ^ v82 ^ *(_DWORD *)(v81 + 4 * ((6419 * (((*(unsigned __int8 *)(STACK[0x9488] + 6) ^ 0x63842EA4) - 1669607076) ^ ((*(unsigned __int8 *)(STACK[0x9488] + 6) ^ 0x53A23608) - 1403139592) ^ ((*(unsigned __int8 *)(STACK[0x9488] + 6) ^ 0x30261815u) - 807802901)) + 39046777) % 0x2240));
  v85 = *(_DWORD *)(v81
                  + 4
                  * (6419 * (BYTE3(v55) ^ 0x2C)
                   + 19732006
                   - 8768
                   * (((62700253 * (unint64_t)(6419 * (BYTE3(v55) ^ 0x2C) + 19732006)) >> 32) >> 7)));
  *(_BYTE *)(STACK[0x6890] + 895) = 118;
  LODWORD(v72) = (739813858 - (v69 ^ 0x6A | 0x2C18A9E2) + (v69 ^ 0x6A | 0xD3E7561D)) ^ 0x51E7D21D;
  v86 = STACK[0xDE60];
  LODWORD(v72) = v47 ^ *(_DWORD *)(v81
                                 + 4
                                 * (6419 * (BYTE2(v71) ^ 0x58)
                                  + 18088742
                                  - 8768
                                  * (((62700253
                                                   * (unint64_t)(6419 * (BYTE2(v71) ^ 0x58u) + 18088742)) >> 32) >> 7))) ^ *(_DWORD *)(v86 + 4 * (6419 * (BYTE1(v84) ^ 0xF8) + 32923051 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v84) ^ 0xF8u) + 32923051)) >> 32) >> 7))) ^ v85 ^ *(_DWORD *)(v86 + 4 * ((6419 * ((((2 * (_DWORD)v72) & 0xFB87A1E2) - (_DWORD)v72 + 37498638) ^ 0x803CAB0D) + 24674636) % 0x2240));
  LODWORD(v63) = 6419 * (HIBYTE(v84) ^ 0x1F)
               + 19732006
               - 8768
               * (((62700253 * (unint64_t)(6419 * (HIBYTE(v84) ^ 0x1F) + 19732006)) >> 32) >> 7);
  v87 = LODWORD(STACK[0x5EA8]) ^ LODWORD(STACK[0x5FA8]) ^ LODWORD(STACK[0x5760]) ^ LODWORD(STACK[0x54C4]) ^ *(_DWORD *)(v86 + 4 * (6419 * ((v69 >> 24) ^ 0x37) + 19732006 - 8768 * (((62700253 * (unint64_t)(6419 * ((v69 >> 24) ^ 0x37) + 19732006)) >> 32) >> 7))) ^ *(_DWORD *)(v86 + 4 * ((6419 * ((73842 - (v84 & 0x41) + (v84 & 0xBE ^ 0x2122949B) + 206) ^ 0x2123B5AF) + 24674636) % 0x2240)) ^ *(_DWORD *)(v86 + 4 * (6419 * (BYTE1(v71) ^ 0x59) + 32923051 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v71) ^ 0x59u) + 32923051)) >> 32) >> 7))) ^ *(_DWORD *)(v86 + 4 * (6419 * (BYTE2(v55) ^ 0x1D) + 18088742 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE2(v55) ^ 0x1Du) + 18088742)) >> 32) >> 7)));
  LODWORD(v70) = 6419 * (((v71 & 0x45 ^ 0xE0007404) + (v71 & 0xBA ^ 0x1B3) - 1) ^ 0xE00075F5) + 24674636;
  v88 = 6419 * (BYTE2(v84) ^ 0x27)
      + 18088742
      - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE2(v84) ^ 0x27u) + 18088742)) >> 32) >> 7);
  v89 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * (6419 * (BYTE2(v69) ^ 0x44)
                   + 18088742
                   - 8768
                   * (((62700253 * (unint64_t)(6419 * (BYTE2(v69) ^ 0x44u) + 18088742)) >> 32) >> 7)));
  LODWORD(v63) = *(_DWORD *)(STACK[0xDE60] + 4 * v63);
  LODWORD(v81) = *(_DWORD *)(STACK[0xDE60]
                           + 4
                           * (6419 * BYTE1(v55)
                            + 32923051
                            - 8768
                            * (((62700253 * (unint64_t)(6419 * BYTE1(v55) + 32923051)) >> 32) >> 7)));
  v90 = (_BYTE *)STACK[0x6990];
  v90[956] = -55;
  v91 = *(_DWORD *)(v86 + 4 * v88);
  v92 = STACK[0xDE60];
  LODWORD(v71) = *(_DWORD *)(STACK[0xDE60]
                           + 4
                           * (6419 * (BYTE3(v71) ^ 0xC2)
                            + 19732006
                            - 8768
                            * (((62700253 * (unint64_t)(6419 * (BYTE3(v71) ^ 0xC2) + 19732006)) >> 32) >> 7)));
  LODWORD(v55) = *(_DWORD *)(STACK[0xDE60]
                           + 4
                           * ((6419
                             * ((2 * ((v55 ^ 0xFB) & 3) - (v55 ^ 0xFB) + 2300) ^ 0x872u)
                             + 24674636)
                            % 0x2240));
  LODWORD(v69) = *(_DWORD *)(STACK[0xDE60]
                           + 4
                           * (6419 * (BYTE1(v69) ^ 0x98)
                            + 32923051
                            - 8768
                            * (((62700253 * (unint64_t)(6419 * (BYTE1(v69) ^ 0x98u) + 32923051)) >> 32) >> 7)));
  v93 = LODWORD(STACK[0x5DC0]) ^ LODWORD(STACK[0x5F70]) ^ LODWORD(STACK[0x54BC]) ^ LODWORD(STACK[0x5420]) ^ v89 ^ v63 ^ *(_DWORD *)(STACK[0xDE60] + 4 * (v70 % 0x2240)) ^ v81;
  *(_BYTE *)(v73 + 2443) = 32;
  *(_BYTE *)STACK[0x6560] = 98;
  v94 = LODWORD(STACK[0x5D88]) ^ LODWORD(STACK[0x5FB0]) ^ LODWORD(STACK[0x5908]) ^ LODWORD(STACK[0x5434]) ^ v91 ^ v71 ^ v69 ^ v55;
  v95 = v72 ^ 0x241410;
  LODWORD(v70) = ((2 * (BYTE1(v93) ^ 0xD5)) | 0xF0ABB782) - (BYTE1(v93) ^ 0xD5) + 128590911;
  v90[1798] = -62;
  *(_BYTE *)(STACK[0x6A60] + 713) = 21;
  *(_BYTE *)(STACK[0x6980] + 1828) = 50;
  v96 = *(_DWORD *)(v92
                  + 4
                  * ((6419
                    * (((BYTE3(v72) ^ 0x2E974754) - 688241055) ^ ((BYTE3(v72) ^ 0xD77974CB) + 789870080) ^ ((BYTE3(v72) ^ 0xF9EE3351) + 25375334))
                    - 337351291)
                   % 0x2240));
  LODWORD(v55) = ((v87 & 0xFE ^ 0xD5BDDFF9) - (v87 | 0xFFFFFFFE) - 2) ^ 0xD59D4BC6;
  v97 = (6419
       * (((((v55 | 0xF3B97219) - (v55 | 0xC468DE6) + 205950438) ^ 0x91DA6CEE) + 1367067168) ^ ((((v55 | 0xF3B97219) - (v55 | 0xC468DE6) + 205950438) ^ 0xA2155229) + 1656026329) ^ ((((v55 | 0xF3B97219) - (v55 | 0xC468DE6) + 205950438) ^ 0xC056D899) + 16219753))
       - 1241873348)
      % 0x2240;
  LODWORD(v55) = (v93 ^ 0x1E5A24F0 | 0x3474C2F)
               - (v93 ^ 0x1E5A24F0 | 0xFCB8B3D0)
               - 55004208;
  LODWORD(v92) = (6419
                * (((v55 ^ 0x218F62EE) - 1378255160) ^ ((v55 ^ 0xCB14E5F8) + 1195571666) ^ ((v55 ^ 0xF786EF6F) + 2077291335))
                - 628951479)
               % 0x2240;
  v98 = STACK[0xDE60];
  v99 = *(_DWORD *)(STACK[0xDE60]
                  + 4
                  * ((6419 * (((v70 & 0x9D337EAC ^ 0x8D2050A5) + (v70 & 0x62CC8153) - 1) ^ 0x75758B9A) + 32923051)
                   % 0x2240));
  v100 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * (((HIBYTE(v87) ^ 0x5CD7627F) - 1857036860) ^ ((HIBYTE(v87) ^ 0x5AD52CA9) - 1756523754) ^ ((HIBYTE(v87) ^ 0x6024E43) - 879037952))
                     - 735327224)
                    % 0x2240u));
  v101 = *(_DWORD *)(STACK[0xDE60] + 4 * v97);
  v102 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * ((-735047136 - (BYTE2(v94) ^ 0xC07946CC | 0xD4301220) + (BYTE2(v94) ^ 0xC07946CC | 0x2BCFEDDF)) ^ 0xEBB6ABDE)
                     + 18088742)
                    % 0x2240));
  v103 = STACK[0xDE68];
  *(_BYTE *)(v103 + 2520) = -116;
  v104 = *(_DWORD *)(v98 + 4 * v92);
  v105 = *(_DWORD *)(v98
                   + 4
                   * (6419 * (BYTE2(v95) ^ 0xC8)
                    + 18088742
                    - 8768
                    * (((62700253 * (unint64_t)(6419 * (BYTE2(v95) ^ 0xC8u) + 18088742)) >> 32) >> 7)));
  v106 = *(_DWORD *)(v98
                   + 4
                   * ((6419
                     * (((HIBYTE(v93) ^ 0x7611C510) + 2010320421) ^ ((HIBYTE(v93) ^ 0x6CE9438C) + 1831569593) ^ ((HIBYTE(v93) ^ 0x1AF88660) + 456805717))
                     - 640592581)
                    % 0x2240u));
  v107 = *(_DWORD *)(v98
                   + 4
                   * ((6419
                     * ((686920944 - (BYTE1(v94) ^ 0xB4 | 0x28F194F0) + (BYTE1(v94) ^ 0xB4 | 0xD70E6B0F)) ^ 0xD70E6BE2)
                     + 32923051)
                    % 0x2240));
  *(_BYTE *)(v103 + 5729) = 80;
  LODWORD(STACK[0x5FA8]) = LODWORD(STACK[0x5380]) - 794670240;
  LODWORD(STACK[0x5928]) = STACK[0x53A8] & (LODWORD(STACK[0x53D8]) ^ 0x8CADAE39) | LODWORD(STACK[0x53A4]);
  v108 = LODWORD(STACK[0x539C]) ^ 0x5F0AF8DC;
  LODWORD(STACK[0x60E8]) = v108;
  v109 = STACK[0x5398] & (LODWORD(STACK[0x53D0]) ^ 0x8B332A66) | LODWORD(STACK[0x5394]);
  LODWORD(STACK[0x5FB0]) = 493644918 - LODWORD(STACK[0x538C]) + (LODWORD(STACK[0x5384]) | 0xC5271DCE);
  LODWORD(v103) = (LODWORD(STACK[0x6658]) << 16) | ((LODWORD(STACK[0x58DC]) ^ 0xB9) << 8);
  LODWORD(v103) = (v103 & 0xA20300 | 0x5A000008) ^ (v103 ^ 0x8544FCFF) & (LODWORD(STACK[0x58E4]) ^ 0x855DFC78);
  LODWORD(v103) = (((v103 | 0x4E4776) - (v103 | 0xB1B889)) << 8) - 1313306368;
  LODWORD(v30) = STACK[0x58F0];
  LODWORD(v103) = ((v103 ^ 0x4040FF) & (LODWORD(STACK[0x58F0]) ^ 0x83E9F5D9) | v103 & 0x7C160A00) ^ 0x44140085;
  LODWORD(STACK[0x5F70]) = ((2 * v103) & 0xD50FB65C) - v103 + 360195281;
  LODWORD(v103) = ((LODWORD(STACK[0x58EC]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x58E0]) ^ 0xB9) << 16);
  LODWORD(v103) = (LODWORD(STACK[0x5880]) ^ 0x62D56B) & ~(_DWORD)v103 | v103 & 0x9D2A00;
  LODWORD(v103) = ((((_DWORD)v103 << 8) ^ 0x952821FF) & (LODWORD(STACK[0x5890]) ^ 0x97AD31BB) | ((_DWORD)v103 << 8) & 0x6852CE00) ^ 0xC704EECD;
  LODWORD(STACK[0x5DC0]) = v103 - ((2 * v103) & 0xD844D6B8) + 1814195036;
  LODWORD(v103) = ((_DWORD)v30 << 16) | ((LODWORD(STACK[0x5704]) ^ 0xB9) << 8);
  LODWORD(v103) = ((v103 ^ 0xFE07FFFF) & (LODWORD(STACK[0x5724]) ^ 0xC60EA064) | v103 & 0xF15F00) ^ 0x9311320;
  LODWORD(v103) = ((((2 * (_DWORD)v103) | 0xD5EDB0) - (_DWORD)v103) << 8) + 352921600;
  LODWORD(v103) = ((v103 ^ 0x33A58FF) & (LODWORD(STACK[0x57B0]) ^ 0x277A79A0) | v103 & 0xD8858600) ^ 0xC08502A2;
  LODWORD(STACK[0x5A68]) = ((2 * v103) & 0x66C7F0B6) - v103 - 862189660;
  LODWORD(v103) = ((LODWORD(STACK[0x57C0]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x57C8]) ^ 0xB9) << 8);
  LODWORD(v103) = (LODWORD(STACK[0x57D8]) ^ 0xA6798AC8) & ~(_DWORD)v103 | v103 & 0x867500;
  LODWORD(v103) = (((v103 & 0xE931F9 ^ 0xE911F9) + (v103 & 0x16CE06 ^ 0x40405)) << 8) - 256;
  LODWORD(v103) = ((v103 ^ 0x4B2062FF) & (LODWORD(STACK[0x57F8]) ^ 0x5BA3E68F) | v103 & 0xA45C1900) ^ 0x80480049;
  v110 = -818637680 - (v103 | 0xCF349490) + (v103 | 0x30CB6B6F);
  LODWORD(v103) = (v67 << 8) | ((LODWORD(STACK[0x5804]) ^ 0xB9) << 16);
  LODWORD(v103) = (v103 ^ 0x9404FF) & (LODWORD(STACK[0x589C]) ^ 0x943525) | v103 & 0x6BCA00;
  LODWORD(v103) = ((((_DWORD)v103 << 8) ^ 0x2B4262FF) & (LODWORD(STACK[0x58A8]) ^ 0x3FC77E59) | ((_DWORD)v103 << 8) & 0xC0388100) ^ 0x8112;
  v111 = STACK[0x66B0] & 0x800;
  v112 = (v111 & STACK[0x590C]) == 0;
  v113 = LODWORD(STACK[0x60F0]) ^ LODWORD(STACK[0x54F8]) ^ LODWORD(STACK[0x5418]) ^ 0xD9C8FB75;
  LODWORD(STACK[0x60C8]) = v113;
  v114 = ((STACK[0x65A8] & 0x10) - 87847715 + ((2 * (STACK[0x65A8] & 0x10)) ^ 0x10002862)) ^ 0xAC3B52F;
  LODWORD(STACK[0x5D88]) = LODWORD(STACK[0x6188]) ^ LODWORD(STACK[0x6190]);
  LODWORD(STACK[0x5C58]) = LODWORD(STACK[0x5A80]) ^ LODWORD(STACK[0x5E18]);
  v115 = LODWORD(STACK[0x54E8]) ^ LODWORD(STACK[0x55C0]);
  LODWORD(STACK[0x6190]) = v115;
  HIDWORD(v76) = LODWORD(STACK[0x5E10]) ^ LODWORD(STACK[0x5DD8]) ^ LODWORD(STACK[0x5A60]) ^ 0x77AC5927 ^ (v103 - 1479502337 - ((2 * v103) & 0x4FA13F8A) + 2502);
  LODWORD(v76) = HIDWORD(v76);
  LODWORD(STACK[0x5EA8]) = (v76 >> 25) - ((2 * (v76 >> 25)) & 0xC78B3FCA) - 473587739;
  LODWORD(STACK[0x5E18]) = LODWORD(STACK[0x5EE8]) ^ LODWORD(STACK[0x6060]);
  LODWORD(STACK[0x5E10]) = LODWORD(STACK[0x5D18]) ^ LODWORD(STACK[0x5E70]);
  v116 = LODWORD(STACK[0x54DC]) ^ LODWORD(STACK[0x6688]) ^ 0xFAFD9D54;
  if (!v112)
    v111 = -v111;
  LODWORD(STACK[0x6560]) = v111;
  if ((v113 & v114) != 0)
    v117 = -v114;
  else
    v117 = v114;
  LODWORD(STACK[0x6060]) = v117;
  if ((v108 & v115 & 0x80000) != 0)
    v118 = -(v115 & 0x80000);
  else
    v118 = v115 & 0x80000;
  LODWORD(STACK[0x6188]) = v118;
  v119 = STACK[0x6698] & 0x2000;
  v112 = (v119 & STACK[0x5D60]) == 0;
  LODWORD(STACK[0x5DD8]) = LODWORD(STACK[0x5B90]) ^ LODWORD(STACK[0x5C68]);
  v120 = STACK[0x5388];
  LODWORD(STACK[0x5EE8]) = (~LODWORD(STACK[0x5388]) & 0x80000000) + v116;
  v121 = (v120 ^ 0x288000 | 0x800000FF) & (LODWORD(STACK[0x53BC]) ^ 0x9A29A2AE) | v120 & 0x65D65D00;
  LODWORD(STACK[0x5E70]) = (((v120 ^ 0x288000 | 0x800000FF) & (LODWORD(STACK[0x53BC]) ^ 0x9A29A2AE) & 0x23E0360A | v120 & 0x21C01400) ^ 0x2260360A)
                         + (v121 ^ 0x41844020)
                         - ((v121 ^ 0x41844020) & 0x23E0360A);
  LODWORD(STACK[0x5EF0]) ^= LODWORD(STACK[0x5E28]);
  v122 = STACK[0x547C];
  LODWORD(STACK[0x5E28]) = (STACK[0x547C] & 0x56A05E00 ^ 0xC0006FF) & (LODWORD(STACK[0x5480]) ^ 0x5EA05E5D) | STACK[0x547C] & 0xA15FA100;
  if (v112)
    v123 = v119;
  else
    v123 = -v119;
  LODWORD(STACK[0x60F0]) = v123;
  v124 = v122 & 0x8000000;
  if ((v122 & 0x8000000 & STACK[0x61BC]) != 0)
    v124 = -v124;
  v125 = v124 + LODWORD(STACK[0x6198]);
  LODWORD(STACK[0x61BC]) = LODWORD(STACK[0x5DB0]) ^ LODWORD(STACK[0x6028]);
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x5E78]) ^ LODWORD(STACK[0x6030]);
  v126 = LODWORD(STACK[0x6068]) ^ 0x2124061A ^ LODWORD(STACK[0x5F10]) ^ LODWORD(STACK[0x5C90]) ^ LODWORD(STACK[0x54EC]) ^ v96 ^ v99 ^ v102 ^ v101;
  v127 = v107 ^ v104 ^ __ROR4__(__ROR4__(__ROR4__(LODWORD(STACK[0x6038]) ^ LODWORD(STACK[0x5EF8]) ^ LODWORD(STACK[0x541C]) ^ LODWORD(STACK[0x543C]) ^ v100 ^ v105 ^ 0xFC10CCB0, 7) ^ 0x1E14DF04, 18) ^ 0x4F2210C2, 7);
  v128 = (v94 ^ 0x9008287D | 0x3BAD70BA)
       - (v94 ^ 0x9008287D | 0xC4528F45)
       - 1001222331;
  v129 = LODWORD(STACK[0x5AD8]) ^ LODWORD(STACK[0x5B70]) ^ v109 ^ v110 ^ v106 ^ *(_DWORD *)(v98
                                                                                          + 4
                                                                                          * ((6419
                                                                                            * (((BYTE2(v87) ^ 0x5C9A115A)
                                                                                              - ((2
                                                                                                * (BYTE2(v87) ^ 0x5C9A115A)) & 0x30000194)
                                                                                              - 1203647798) ^ 0xE4DBDBFA)
                                                                                            + 18088742)
                                                                                           % 0x2240)) ^ *(_DWORD *)(v98 + 4 * ((6419 * ((((2 * (BYTE1(v95) ^ 0xA46004CF)) & 0x40000948) - (BYTE1(v95) ^ 0xA46004CF) + 1551727195) ^ 0xF81D7E7F) + 32923051) % 0x2240));
  v90[1707] = -112;
  v130 = v129 ^ *(_DWORD *)(v98
                          + 4
                          * ((6419
                            * (((v128 ^ 0x117D28CD) - 1997218960) ^ ((v128 ^ 0xAA2DDE8F) + 866397486) ^ ((v128 ^ 0x10F5AEFA) - 1988338343))
                            - 344839349)
                           % 0x2240));
  v131 = *(_DWORD *)(v98
                   + 4
                   * ((6419
                     * (((HIBYTE(v94) ^ 0xABFA9B54) + 1585708157) ^ ((HIBYTE(v94) ^ 0x67666F0E) - 1843460057) ^ ((HIBYTE(v94) ^ 0xCC9CF4DA) + 971346931))
                     - 301276261)
                    % 0x2240));
  *(_BYTE *)STACK[0x6970] = 50;
  v132 = STACK[0x6AA0];
  *(_BYTE *)(v132 + 994) = 98;
  v133 = *(_DWORD *)(v98
                   + 4
                   * ((6419
                     * ((((2 * (BYTE2(v93) ^ 0x2C089C27)) & 0x112028) - (BYTE2(v93) ^ 0x2C089C27) - 1119408917) ^ 0x914FB06B)
                     + 18088742)
                    % 0x2240));
  v134 = *(_DWORD *)(v98
                   + 4
                   * ((6419
                     * (((BYTE1(v87) ^ 0x828020A8) + (BYTE1(v87) ^ 0x28119257) + (BYTE1(v87) ^ 0x7F7FDF57) + 1) ^ 0x2A1192FF)
                     + 32923051)
                    % 0x2240));
  v135 = (_BYTE *)STACK[0xDE68];
  *(_BYTE *)(STACK[0xDE68] + 2118) = -74;
  v136 = STACK[0xDE60];
  v137 = STACK[0xDE60];
  v138 = LODWORD(STACK[0x6120]) ^ LODWORD(STACK[0x6148]) ^ LODWORD(STACK[0x5588]) ^ LODWORD(STACK[0x5928]) ^ v133 ^ v134 ^ *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * (((v95 ^ 0xA28CE041) + 1403672136) ^ ((v95 ^ 0x6FAB27F0) - 1634889225) ^ ((v95 ^ 0xCD27C726) + 1006727457)) + 1405399670) % 0x2240)) ^ v131;
  v139 = (v127 & 0x10)
       + (v127 ^ 0xC002210)
       - ((v127 ^ 0xC002210) & 0x8000010)
       + 1671350272;
  v140 = (((2 * (BYTE2(v138) ^ 0x2DED5CD4)) & 0x58DA2046) - (BYTE2(v138) ^ 0x2DED5CD4) - 780079140) ^ 0xA9693373;
  v141 = LODWORD(STACK[0x5500]) ^ LODWORD(STACK[0x5F00]) ^ v125 ^ LODWORD(STACK[0x5E28]) ^ *(_DWORD *)(v136 + 4 * ((6419 * (((HIBYTE(v126) ^ 0xFEF09C4) - 503767574) ^ ((HIBYTE(v126) ^ 0x5B738D3) - 341758721) ^ ((HIBYTE(v126) ^ 0xA58315E) - 464640652)) + 764130727) % 0x2240u)) ^ *(_DWORD *)(v136 + 4 * ((6419 * (((v139 ^ 0x36BFF2B4) - 169319655) ^ ((v139 ^ 0x7BEF3A9C) - 1195857103) ^ ((v139 ^ 0x2ACE2232u) - 375802977)) + 426734519) % 0x2240)) ^ *(_DWORD *)(v136 + 4 * ((6419 * ((((2 * v140) & 0x29397552) - v140 + 1801667926) ^ 0x3E67C576) + 18088742) % 0x2240)) ^ *(_DWORD *)(v136 + 4 * (6419 * (BYTE1(v130) ^ 0x62) + 32914283 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v130) ^ 0x62u) + 32914283)) >> 32) >> 7)));
  v142 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * (((HIBYTE(v127) ^ 0x28C08DD0) - 261975251) ^ ((HIBYTE(v127) ^ 0x46214E44) - 1635561287) ^ ((HIBYTE(v127) ^ 0x6EE1C39E) - 1237066397))
                     + 404662993)
                    % 0x2240u));
  *(_BYTE *)(STACK[0x66C0] + 2678) = -66;
  v143 = LODWORD(STACK[0x5CD0]) ^ LODWORD(STACK[0x6020]) ^ LODWORD(STACK[0x5A78]) ^ LODWORD(STACK[0x5720]) ^ *(_DWORD *)(v136 + 4 * ((6419 * ((((v138 >> 8) & 7 ^ 0x25354203) + ((v138 >> 8) & 0xF8 ^ 0x808210B9) - 1) ^ 0xA5B7520F) + 32923051) % 0x2240)) ^ v142 ^ *(_DWORD *)(v136 + 4 * (6419 * (((((2 * (BYTE2(v126) ^ 0x200000E5)) | 0xCDC00490) - (BYTE2(v126) ^ 0x200000E5) - 1725956680) ^ 0x46E0094C) + (~(v126 >> 15) & 4)) % 0x2240));
  *(_BYTE *)(v132 + 3581) = -125;
  v144 = v143 ^ *(_DWORD *)(v136
                          + 4
                          * (6419
                           * ((((v130 & 0x14)
                              + (v130 ^ 0xFFFFFF9C)
                              + (v130 | 0x944D00EB)
                              + 1) ^ 0x944D0FA2)
                            + (~(2 * v130) & 8))
                           % 0x2240));
  v145 = 6419 * ((((v126 >> 8) & 0x4F) + ((v126 >> 8) & 0xB0 ^ 0x391) - 1) & 0x7FF ^ 0x331) + 32923051;
  v146 = *(_DWORD *)(v136
                   + 4
                   * ((6419
                     * (((HIBYTE(v130) ^ 0x1068E2A2) - 767115959) ^ ((HIBYTE(v130) ^ 0x2CC57DB6) - 286580131) ^ ((HIBYTE(v130) ^ 0x3CAD9FD7) - 24920002))
                     + 275835912)
                    % 0x2240u));
  v147 = *(_DWORD *)(v136
                   + 4
                   * ((6419
                     * (((BYTE2(v127) ^ 0x1C00DD) - 1858168830 - ((2 * (BYTE2(v127) ^ 0x1C00DD)) & 0x380004)) ^ 0x912298A0)
                     + 18088742)
                    % 0x2240));
  LODWORD(v136) = *(_DWORD *)(v136
                            + 4 * (v145 - 8768 * (((62700253 * (unint64_t)v145) >> 32) >> 7)));
  v148 = (v126 ^ 0xC10413A2) - 1557603791 - ((2 * (v126 ^ 0xC10413A2)) & 0x2002462);
  v149 = (v138 & 0xA2 ^ 0xF2191721) + (v138 & 0x5D) - 1;
  v150 = (_BYTE *)STACK[0x6AC0];
  v150[1768] = 122;
  v151 = *(_DWORD *)(v137
                   + 4
                   * ((6419
                     * ((1957927271 - (BYTE2(v130) ^ 0x17) + ((2 * (BYTE2(v130) ^ 0x17)) | 0x1698CD32)) ^ 0x8B4C66E3)
                     + 18088742)
                    % 0x2240));
  v152 = *(_DWORD *)(v137
                   + 4
                   * ((6419
                     * (((v149 ^ 0x3FFF59FE) + 1254527822) ^ ((v149 ^ 0x4BFC7280) + 1053145140) ^ ((v149 ^ 0x861A3C9F)
                                                                                                 - 215747027))
                     - 999622365)
                    % 0x2240));
  v153 = *(_DWORD *)(v137
                   + 4
                   * ((6419
                     * (((HIBYTE(v138) ^ 0x687942D6) + 371724696) ^ ((HIBYTE(v138) ^ 0xE1C30470) - 1617799374) ^ ((HIBYTE(v138) ^ 0x89BA46CA) - 135588468))
                     - 1341887556)
                    % 0x2240));
  *(_BYTE *)(STACK[0x66B8] + 2314) = 110;
  v154 = LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x5930]) ^ LODWORD(STACK[0x5730]) ^ v146 ^ v147 ^ v136 ^ v152;
  v155 = LODWORD(STACK[0x5D28]) ^ LODWORD(STACK[0x5E40]) ^ LODWORD(STACK[0x55B0]) ^ LODWORD(STACK[0x53A0]) ^ v153 ^ v151;
  v135[4553] = -63;
  LODWORD(v136) = v155 ^ *(_DWORD *)(v137
                                   + 4
                                   * ((6419
                                     * ((((2 * (BYTE1(v127) ^ 0xF8C10FE5)) | 0x676F7026)
                                       - (BYTE1(v127) ^ 0xF8C10FE5)
                                       + 1279805421) ^ 0x4B76B710)
                                     + 32923051)
                                    % 0x2240)) ^ *(_DWORD *)(v137
                                                           + 4
                                                           * ((6419
                                                             * (((v148 ^ 0x4C7D4477) + 1368416888) ^ ((v148 ^ 0xFFCE7A56) - 500999081) ^ ((v148 ^ 0xD19FF7B2) - 864890445))
                                                             - 1783741104)
                                                            % 0x2240));
  *(_BYTE *)(STACK[0x6A80] + 2625) = 114;
  v135[4682] = -108;
  LODWORD(v137) = *(_DWORD *)(v137
                            + 4
                            * ((6419
                              * (((HIBYTE(v141) ^ 0xD78E337F) + 1889355526) ^ ((HIBYTE(v141) ^ 0xAC296BBC) + 188358599) ^ ((HIBYTE(v141) ^ 0x7BA75801) - 592171908))
                              - 1269474453)
                             % 0x2240));
  v156 = (v144 ^ 0x85) + (v144 & 0xA5 ^ 0x6702B120) - ((v144 ^ 0x85) & 0xA5);
  v135[2452] = 47;
  LODWORD(v135) = (((v136 >> 8) & 0xFA ^ 0xE40FCC8B) + ((v136 >> 8) & 5) - 1) ^ 0x742D0FF4;
  v157 = ((HIWORD(v141) & 0x8D ^ 0xEACCB8FB) - (HIWORD(v141) & 0x72)) ^ 0xE2FCBA72;
  v158 = ((v154 ^ 0x21) - ((2 * v154) & 0x190) + 27227592) & 0x11277FF;
  v159 = (6419 * ((-940175988 - (v157 | 0xC7F60D8C) + (v157 | 0x3809F273)) ^ 0x3039F0B6) + 18088742) % 0x2240;
  v160 = STACK[0xDE60];
  v161 = LODWORD(STACK[0x5DD8]) ^ LODWORD(STACK[0x5998]) ^ LODWORD(STACK[0x5910]) ^ *(_DWORD *)(v160
                                                                                              + 4
                                                                                              * ((6419
                                                                                                * (((HIBYTE(v144) ^ 0x94612032)
                                                                                                  + 1554325105) ^ ((HIBYTE(v144) ^ 0xA0B0EAFF) + 1752487102) ^ ((HIBYTE(v144) ^ 0x34D1CAF0) - 65669965))
                                                                                                - 259919194)
                                                                                               % 0x2240)) ^ *(_DWORD *)(v160 + 4 * ((6419 * ((((2 * (_DWORD)v135) | 0xD0802212) - (_DWORD)v135 - 1749029129) ^ 0xF862D289) + 32923051) % 0x2240)) ^ *(_DWORD *)(v160 + 4 * v159) ^ *(_DWORD *)(v160 + 4 * ((6419 * (((v158 ^ 0x7A6D0A0B) + 1966865395) ^ ((v158 ^ 0x1472399B) + 455395427) ^ ((v158 ^ 0x6F0D460Au) + 1616623604)) + 1098181088) % 0x2240));
  LODWORD(v137) = LODWORD(STACK[0x5950]) ^ LODWORD(STACK[0x5EC8]) ^ LODWORD(STACK[0x55A4]) ^ LODWORD(STACK[0x55A0]) ^ v137 ^ *(_DWORD *)(v160 + 4 * ((6419 * (((BYTE1(v154) ^ 0xADA626) + ((v154 >> 8) & 0x8C ^ 0x85520888) - ((BYTE1(v154) ^ 0xADA626) & 0x24208C)) ^ 0x85DB8E89) + 32923051) % 0x2240)) ^ *(_DWORD *)(v160 + 4 * ((6419 * (((v156 ^ 0x6A2912CE) - 2028340907) ^ ((v156 ^ 0x3F33F6F2) - 771547799) ^ ((v156 ^ 0x321855C4u) - 550977953)) - 722984717) % 0x2240)) ^ *(_DWORD *)(v160 + 4 * (6419 * ((((((v136 >> 7) & 0x1FE00 ^ 0x100E5430) - 888746354 - ((2 * ((v136 >> 7) & 0x1FE00 ^ 0x100E5430)) & 0xD9C00)) ^ 0xDB08CABE) + 1442816) >> 9) % 0x2240));
  v162 = 6419 * (BYTE1(v141) ^ 0xD0)
       + 32923051
       - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v141) ^ 0xD0u) + 32923051)) >> 32) >> 7);
  v163 = ((v136 ^ 0x80) - ((2 * v136) & 0x96) - 533794741) ^ 0xE532707F;
  v164 = (v141 ^ 0x5415E7)
       + (v141 & 0x4D ^ 0x7F00A008)
       - ((v141 ^ 0x5415E7) & 0x54154D);
  v165 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * (((HIBYTE(v154) ^ 0xF025EE6F) - 167284498) ^ ((HIBYTE(v154) ^ 0x473D022E) + 1092590765) ^ ((HIBYTE(v154) ^ 0xB718EC8F) - 1321569778))
                     + 723898735)
                    % 0x2240));
  v166 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * ((((HIWORD(v144) & 0xB8 ^ 0x226D8121) + 0x7FFFFFFF) | HIWORD(v144) & 0x47 ^ 0x80000041) ^ 0xA26D81B0)
                     + 18088742)
                    % 0x2240));
  v167 = STACK[0x6A50];
  *(_BYTE *)(v167 + 1146) = 62;
  v168 = *(_DWORD *)(v160 + 4 * v162);
  *(_BYTE *)(v167 + 592) = 92;
  *(_BYTE *)STACK[0x66F0] = 114;
  v169 = LODWORD(STACK[0x5EF0]) ^ LODWORD(STACK[0x5CF8]) ^ LODWORD(STACK[0x5A68]) ^ v165 ^ v168 ^ v166 ^ *(_DWORD *)(v160 + 4 * ((6419 * (((((v163 | 0xD82BBE09) - (v163 | 0x27D441F6) + 668221942) ^ 0xD8C958B3) + 1108046528) ^ ((((v163 | 0xD82BBE09) - (v163 | 0x27D441F6) + 668221942) ^ 0xDC6FF821) + 1185796654) ^ ((((v163 | 0xD82BBE09) - (v163 | 0x27D441F6) + 668221942) ^ 0xD9919E99) + 1129559190)) - 1152172876) % 0x2240));
  *(_BYTE *)(STACK[0x66C8] + 2299) = -56;
  v170 = __ROR4__(*(_DWORD *)(v160+ 4* ((6419* (((BYTE2(v154) ^ 0x10202DA) - ((2 * (BYTE2(v154) ^ 0x10202DA)) & 0x200050E) + 870098823) ^ 0x32DEA587u)+ 18088742)% 0x2240)), 20);
  v171 = *(_DWORD *)(v160
                   + 4
                   * ((6419
                     * (((BYTE3(v136) ^ 0xDC1601DC) - 363123600) ^ ((BYTE3(v136) ^ 0xA99F5C61) - 1613598253) ^ ((BYTE3(v136) ^ 0x75895D05) + 1136947383))
                     + 1879872066)
                    % 0x2240));
  v172 = *(_DWORD *)(v160
                   + 4
                   * ((6419
                     * ((((2 * (BYTE1(v144) ^ 0x1C104538)) & 0x8A12) - (BYTE1(v144) ^ 0x1C104538) + 2117667574) ^ 0x62294FF5u)
                     + 32923051)
                    % 0x2240));
  v173 = *(_DWORD *)(v160
                   + 4
                   * ((6419
                     * (((v164 ^ 0x801C8865) + 2127619468) ^ ((v164 ^ 0x4678128B) - 1196130458) ^ ((v164 ^ 0xB9643A2F)
                                                                                                 + 1202214850))
                     + 1597740732)
                    % 0x2240));
  *(_BYTE *)(STACK[0xDE68] + 2543) = 72;
  LODWORD(v136) = LODWORD(STACK[0x5934]) ^ LODWORD(STACK[0x5CC0]) ^ LODWORD(STACK[0x5590]) ^ LODWORD(STACK[0x54E0]) ^ v171 ^ v172 ^ v173 ^ __ROR4__(__ROR4__(v170 ^ 0xC7348F1, 5) ^ 0xA4877EE5, 7);
  v174 = (-59482606 - (BYTE1(v169) ^ 0xC3 | 0xFC745E12) + (BYTE1(v169) ^ 0xC3 | 0x38BA1ED)) ^ 0x383F1E7;
  v175 = (12755200 - (v161 ^ 0x7D) + ((2 * (v161 ^ 0x7D)) & 0xFFFFFF83) + 2878) & 0x8007FF;
  v176 = ((WORD1(v136) & 0x15) + (WORD1(v136) & 0xEA ^ 0x523E7CC9) - 1) ^ 0x403C66EE;
  LODWORD(v160) = (v169 & 0xF0 ^ 0x92604821) + (v169 & 0xF) - 1;
  v177 = (6419
        * (((v160 ^ 0xF4F46F36) + 347224127) ^ ((v160 ^ 0xEACFE6B0) + 176796089) ^ ((v160 ^ 0x8C5BC15B) + 1813878356))
        - 813154710)
       % 0x2240;
  *(_BYTE *)(STACK[0x6960] + 1077) = -90;
  v178 = STACK[0xDE60];
  LODWORD(v167) = (6419 * ((1664756720 - v176 + ((2 * v176) & 0x20000A0A) + 3850) ^ 0x71382088) + 18088742) % 0x2240;
  v179 = 6419 * (((v137 ^ 0x20001) >> 16) ^ 0x2B) + 18088742;
  v180 = LODWORD(STACK[0x5E10]) ^ LODWORD(STACK[0x5BC0]) ^ LODWORD(STACK[0x5478]) ^ *(_DWORD *)(v178
                                                                                              + 4
                                                                                              * (6419
                                                                                               * (BYTE3(v137) ^ 0x44)
                                                                                               + 19732006
                                                                                               - 8768
                                                                                               * (((62700253 * (unint64_t)(6419 * (BYTE3(v137) ^ 0x44) + 19732006)) >> 32) >> 7))) ^ *(_DWORD *)(v178 + 4 * v167) ^ __ROR4__(__ROR4__(__ROR4__(*(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * ((v174 - ((2 * v174) & 0x6746E7F4) + 1940091898) ^ 0x73AB23FA) + 32923051) % 0x2240)), 7) ^ 0x8B79029B, 12) ^ 0x5FAE6272, 13) ^ *(_DWORD *)(v178 + 4 * ((6419 * (((v175 ^ 0x8EF9E300) + 270506266) ^ ((v175 ^ 0x8336C7B) - 1764419997) ^ ((v175 ^ 0x864A8BDF) + 413987271)) + 1031572274) % 0x2240));
  v181 = LODWORD(STACK[0x5C58]) ^ LODWORD(STACK[0x558C]) ^ LODWORD(STACK[0x54C8]) ^ *(_DWORD *)(v178
                                                                                              + 4
                                                                                              * (v179
                                                                                               - 8768
                                                                                               * (((62700253 * (unint64_t)v179) >> 32) >> 7))) ^ *(_DWORD *)(v178 + 4 * ((6419 * (BYTE1(v136) ^ 0xD4u) + 32923051) % 0x2240)) ^ *(_DWORD *)(v178 + 4 * ((6419 * (((HIBYTE(v161) ^ 0x37105963) - 844668905) ^ ((HIBYTE(v161) ^ 0x6CA67BA3) - 1777253673) ^ ((HIBYTE(v161) ^ 0x5BB622BF) - 1593762869)) - 2130589867) % 0x2240u));
  *(_BYTE *)(STACK[0x6850] + 3050) = -79;
  v182 = v181 ^ *(_DWORD *)(v178 + 4 * v177);
  v183 = ((HIWORD(v161) & 0xE0 ^ 0x5DF42BC1) + (HIWORD(v161) & 0x1F) - 1) ^ 0x5DBC3147;
  v184 = 6419
       * (((BYTE3(v136) ^ 0xFCEB5284) + 1513522353) ^ ((BYTE3(v136) ^ 0x950F90D3) + 869418728) ^ ((BYTE3(v136) ^ 0x69E4C2A0)
                                                                                                - 818342763))
       - 188939878;
  v185 = (1644073338
        - (v137 ^ 0xB90F69F | 0x61FE917A)
        + (v137 ^ 0xB90F69F | 0x9E016E85)) ^ 0x54D14C4B;
  LODWORD(v135) = ((v136 & 0xB2 ^ 0x12148011) + 0x7FFFFFFF) | v136 & 0x4D ^ 0x81035C04;
  LODWORD(v136) = ((BYTE1(v161) ^ 0x362840EC) - ((2 * (BYTE1(v161) ^ 0x362840EC)) & 0x404081D6) + 1643266283) ^ 0xF5DA202E;
  v186 = 6419 * (BYTE2(v169) ^ 0xCE)
       + 18088742
       - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE2(v169) ^ 0xCEu) + 18088742)) >> 32) >> 7);
  v187 = LODWORD(STACK[0x5E18]) ^ LODWORD(STACK[0x5FA0]) ^ LODWORD(STACK[0x5868]) ^ *(_DWORD *)(v178
                                                                                              + 4
                                                                                              * ((6419
                                                                                                * (((HIBYTE(v169) ^ 0x8164F958)
                                                                                                  - 117475659) ^ ((HIBYTE(v169) ^ 0x6322EAE7) + 448357644) ^ ((HIBYTE(v169) ^ 0xE24613F1) - 1679975394))
                                                                                                - 912621043)
                                                                                               % 0x2240));
  v188 = (_BYTE *)STACK[0xDE68];
  v188[3802] = 17;
  *(_BYTE *)(STACK[0x68D0] + 3854) = -76;
  v189 = *(_DWORD *)(v178
                   + 4 * ((6419 * ((((2 * v183) & 0x902460) - v183 + 1862364623) ^ 0x6F4977CDu) + 18088742) % 0x2240));
  v150[3103] = 44;
  v190 = v187 ^ *(_DWORD *)(v178
                          + 4
                          * (6419 * (BYTE1(v137) ^ 0x67)
                           + 32923051
                           - 8768
                           * (((62700253 * (unint64_t)(6419 * (BYTE1(v137) ^ 0x67u) + 32923051)) >> 32) >> 7))) ^ *(_DWORD *)(v178 + 4 * ((6419 * (((v135 ^ 0xA3EBDFFE) - 2019956806) ^ ((v135 ^ 0xFE0F2CB9) - 629336833) ^ ((v135 ^ 0xCEF32FD5) - 360638573)) + 1905237866) % 0x2240)) ^ v189;
  LODWORD(v137) = LODWORD(STACK[0x5EE8]) ^ LODWORD(STACK[0x5A70]) ^ LODWORD(STACK[0x5E70]) ^ *(_DWORD *)(v178 + 4 * v186) ^ *(_DWORD *)(v178 + 4 * (v184 % 0x2240)) ^ *(_DWORD *)(v178 + 4 * ((6419 * ((((2 * v185) & 0x91222F8E) - v185 + 930015288) ^ 0xF62E3C79) + 24674636) % 0x2240)) ^ *(_DWORD *)(v178 + 4 * ((6419 * ((((2 * (_DWORD)v136) & 0x52825E78) - (_DWORD)v136 - 695021373) ^ 0x7492F00Fu) + 32923051) % 0x2240));
  v188[1094] = -96;
  *(_BYTE *)STACK[0x6890] = 95;
  v188[1678] = 95;
  LODWORD(v136) = (6419 * ((((2 * (BYTE2(v137) ^ 0x2D)) & 0xFFFFFFC3) - (BYTE2(v137) ^ 0x2D) + 542) ^ 0x255) + 18088742)
                % 0x2240;
  LODWORD(v135) = (-1444902368 - (BYTE1(v190) ^ 0x63 | 0xA9E08A20) + (BYTE1(v190) ^ 0x63 | 0x561F75DF)) ^ 0x551D25CF;
  v191 = ((v182 & 0x42) + (v182 ^ 0x5B) - ((v182 ^ 0x5B) & 0x42) + 364019968) & 0x1000FFFF;
  v192 = (6419 * ((((2 * (_DWORD)v135) | 0x1BFA9706) - (_DWORD)v135 - 234703747) ^ 0xEFF1B03u) + 32923051) % 0x2240;
  LODWORD(v178) = (v190 ^ 0xD4082CEC)
                + 45197173
                - ((2 * (v190 ^ 0xD4082CEC)) & 0x5084)
                + 973;
  LODWORD(v188) = (1724580124 - (BYTE2(v182) ^ 0x5C | 0x66CB011C) + (BYTE2(v182) ^ 0x5C | 0x9934FEE3)) ^ 0xB994FEE3;
  v193 = (6419
        * (((v178 ^ 0xC56B1A26) - 1431894527) ^ ((v178 ^ 0xBCAFA1AA) - 748438131) ^ ((v178 ^ 0xAF7D3C4F) - 1062133654))
        - 1048282822)
       % 0x2240;
  v194 = (6419 * ((329014784 - (_DWORD)v188 + ((2 * (_DWORD)v188) & 0x58C74082) + 446) ^ 0x333C5FC4u) + 18088742)
       % 0x2240;
  LODWORD(v167) = LODWORD(STACK[0x5ED8]) ^ LODWORD(STACK[0x6170]) ^ LODWORD(STACK[0x583C]) ^ LODWORD(STACK[0x5DC0]);
  v195 = STACK[0x6A70];
  *(_BYTE *)(STACK[0x6A70] + 2754) = -40;
  v196 = STACK[0xDE60];
  v197 = v167 ^ *(_DWORD *)(STACK[0xDE60]
                          + 4
                          * ((6419
                            * (((BYTE3(v137) ^ 0xA2C76F16) + 1493158642) ^ ((BYTE3(v137) ^ 0xB164CE09) + 1264348143) ^ ((BYTE3(v137) ^ 0x13A3A1E1) - 375716857))
                            - 421967048)
                           % 0x2240));
  v198 = LODWORD(STACK[0x5F20]) ^ LODWORD(STACK[0x6128]) ^ LODWORD(STACK[0x5BC8]) ^ LODWORD(STACK[0x5708]) ^ *(_DWORD *)(v196 + 4 * ((6419 * (((HIBYTE(v182) ^ 0xD7705532) + 1165473129) ^ ((HIBYTE(v182) ^ 0x6FDC8C24) - 35951489) ^ ((HIBYTE(v182) ^ 0xB8ACD997) + 715864526)) + 1705109970) % 0x2240)) ^ *(_DWORD *)(v196 + 4 * v193) ^ *(_DWORD *)(v196 + 4 * (6419 * (BYTE1(v137) ^ 0x7E) + 32923051 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v137) ^ 0x7Eu) + 32923051)) >> 32) >> 7))) ^ *(_DWORD *)(v196 + 4 * ((6419 * ((((2 * (BYTE2(v180) ^ 0xF2)) & 0xFFFFFF1F) - (BYTE2(v180) ^ 0xF2) + 33648) ^ 0x83C0) + 18088742) % 0x2240));
  LODWORD(v137) = (-2 - ((~v137 | 0x4FE58147) + (v137 | 0xB01A7EB8))) ^ 0xCD631951;
  v199 = v137 - ((2 * v137) & 0x521EB3DE) + 688871919;
  v200 = LODWORD(STACK[0x5D88]) ^ LODWORD(STACK[0x57E0]) ^ LODWORD(STACK[0x53E8]) ^ *(_DWORD *)(v196
                                                                                              + 4
                                                                                              * ((6419
                                                                                                * (((v191 ^ 0xB83826AE)
                                                                                                  + 1158340493) ^ ((v191 ^ 0xE58C0F01) + 415168036) ^ ((v191 ^ 0x4DB4A895) - 1333374536))
                                                                                                + 2029987441)
                                                                                               % 0x2240)) ^ *(_DWORD *)(v196 + 4 * ((6419 * (((HIBYTE(v180) ^ 0x65B8C780) + 1485245841) ^ ((HIBYTE(v180) ^ 0xC4D5253C) - 102043859) ^ ((HIBYTE(v180) ^ 0xA16DE22C) - 1672337347)) + 984249747) % 0x2240)) ^ *(_DWORD *)(v196 + 4 * v192) ^ *(_DWORD *)(v196 + 4 * v136);
  v201 = (((2 * (BYTE2(v190) ^ 0x4F47A587)) & 0xE08DA) - (BYTE2(v190) ^ 0x4F47A587) + 2144385426) ^ 0xB3CD71;
  v202 = (((v182 >> 8) & 0x71 ^ 0xA1715160) + ((v182 >> 8) & 0x8E ^ 0x8B) - 1) ^ 0xB1635151;
  v203 = (v202 - ((2 * v202) & 0x2020028E) - 1233361593) ^ 0xA66E6547;
  v204 = (6419 * ((-107454488 - (v201 | 0xF9985FE8) + (v201 | 0x667A017)) ^ 0x36437118) + 18088742) % 0x2240;
  v205 = STACK[0x65B8] & 0x2000000;
  if ((v205 & STACK[0x6688]) != 0)
    v205 = -v205;
  LODWORD(STACK[0x6890]) = v205;
  if ((v197 & 0x20000) != 0)
    v206 = 1255009149;
  else
    v206 = 1255271293;
  v207 = v206
       + 1195920333
       + (((v197 ^ 0xFED16CF4) - 982092959) ^ ((v197 ^ 0x5AB84508) + 1629444765) ^ ((v197 ^ 0x195463B7) + 586382372));
  v208 = (v207 ^ 0xD7087AD4) & (2 * (v207 & 0xE74D72D6)) ^ v207 & 0xE74D72D6;
  v209 = ((2 * (v207 ^ 0x199A5F74)) ^ 0xFDAE5B44) & (v207 ^ 0x199A5F74) ^ (2 * (v207 ^ 0x199A5F74)) & 0xFED72DA2;
  v210 = (v209 ^ 0xBC060900) & (4 * v208) ^ v208;
  v211 = ((4 * (v209 ^ 0x25124A2)) ^ 0xFB5CB688) & (v209 ^ 0x25124A2) ^ (4 * (v209 ^ 0x25124A2)) & 0xFED72DA0;
  v212 = (v211 ^ 0xFA542480) & (16 * v210) ^ v210;
  v213 = ((16 * (v211 ^ 0x4830922)) ^ 0xED72DA20) & (v211 ^ 0x4830922) ^ (16 * (v211 ^ 0x4830922)) & 0xFED72DA0;
  v214 = v212 ^ 0xFED72DA2 ^ (v213 ^ 0xEC520800) & (v212 << 8);
  v215 = *(_DWORD *)(v196 + 4 * v194) ^ __ROR4__(STACK[0x5EA8], 7) ^ *(_DWORD *)(v196
                                                                                 + 4
                                                                                 * ((6419
                                                                                   * (((HIBYTE(v190) ^ 0x795ED226)
                                                                                     - 1053669756) ^ ((HIBYTE(v190) ^ 0xA933A4B4) + 291450898) ^ ((HIBYTE(v190) ^ 0xD06D763B) + 1744954015))
                                                                                   - 1230449617)
                                                                                  % 0x2240)) ^ *(_DWORD *)(v196 + 4 * ((6419 * ((-256294534 - (BYTE1(v180) ^ 0x68E45331 | 0xF0B9417A) + (BYTE1(v180) ^ 0x68E45331 | 0xF46BE85)) ^ 0x67A2EDB1) + 32923051) % 0x2240)) ^ *(_DWORD *)(v196 + 4 * ((6419 * (((v199 ^ 0x23153264) + 1109771923) ^ ((v199 ^ 0x3B30D90A) + 1509961213) ^ ((v199 ^ 0xB3AC2AA1) - 761471400)) - 544807938) % 0x2240));
  v216 = (v180 ^ 0x1B) + (v180 & 0xE6 ^ 0x37E4) - ((v180 ^ 0x1B) & 0xE6);
  v217 = (v216 & 0x1D19 ^ 0x4AD40819) + (v216 & 0x2E6 ^ 0x110000E1) - 1;
  v218 = *(_DWORD *)(v196 + 4 * v204);
  *(_BYTE *)(v195 + 243) = -35;
  v219 = v218 ^ *(_DWORD *)(v196 + 4 * ((6419 * v203 + 32923051) % 0x2240)) ^ v207 ^ *(_DWORD *)(v196
                                                                                                 + 4
                                                                                                 * ((6419 * (((v217 ^ 0x737C075) - 1625785461) ^ ((v217 ^ 0x7A067E3F) - 500578879) ^ ((v217 ^ 0x26E5A173u) - 1094051187)) - 491530361)
                                                                                                  % 0x2240)) ^ (2 * ((v214 << 16) & 0x7ED70000 ^ v214 ^ ((v214 << 16) ^ 0x2DA20000) & (((v213 ^ 0x12852582) << 8) & 0x7ED70000 ^ 0x28D20000 ^ (((v213 ^ 0x12852582) << 8) ^ 0x572D0000) & (v213 ^ 0x12852582))));
  *(_BYTE *)(STACK[0xDE68] + 252) = -78;
  v220 = *(_DWORD *)(v196
                   + 4
                   * ((6419
                     * (((HIBYTE(v200) ^ 0xA5289B0B) - 554897441) ^ ((HIBYTE(v200) ^ 0x37482B43) + 1284267927) ^ ((HIBYTE(v200) ^ 0x9260B032) - 375077656))
                     - 1573700330)
                    % 0x2240));
  *(_BYTE *)STACK[0x69B0] = 30;
  v221 = *(_DWORD *)(v196
                   + 4
                   * (6419 * (BYTE2(v219) ^ 0x87)
                    + 18088742
                    - 8768
                    * (((62700253 * (unint64_t)(6419 * (BYTE2(v219) ^ 0x87u) + 18088742)) >> 32) >> 7)));
  v222 = ((v198 ^ 0x6A) + (v198 & 0xE ^ 0x9F75DF04) - ((v198 ^ 0x6A) & 0xE)) ^ 0xCAF1DC62;
  v223 = LODWORD(STACK[0x5FB8]) ^ LODWORD(STACK[0x6080]) ^ LODWORD(STACK[0x5BE0]) ^ LODWORD(STACK[0x54A8]) ^ v220 ^ *(_DWORD *)(v196 + 4 * (6419 * (BYTE1(v215) ^ 0x1D) + 32923051 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v215) ^ 0x1Du) + 32923051)) >> 32) >> 7)));
  *(_BYTE *)(STACK[0x6668] + 2276) = -67;
  v224 = STACK[0xDE60];
  v225 = v223 ^ *(_DWORD *)(STACK[0xDE60]
                          + 4
                          * ((6419
                            * ((((((2 * v222) | 0xC835BE2C) - v222 - 1679482646) ^ 0x546CBF51) - 1286832380) ^ (((((2 * v222) | 0xC835BE2C) - v222 - 1679482646) ^ 0x43FF5C9A) - 1528849207) ^ (((((2 * v222) | 0xC835BE2C) - v222 - 1679482646) ^ 0x260D3FDC) - 1053950065))
                            - 2137419238)
                           % 0x2240)) ^ v221;
  *(_BYTE *)(v195 + 2496) = 103;
  v226 = *(_DWORD *)(v224
                   + 4
                   * ((6419
                     * (((((v198 ^ 0x3000030u) >> 24) ^ 0x843E91A1) + 1302661042) ^ ((((v198 ^ 0x3000030u) >> 24) ^ 0xAE649587)
                                                                                   + 1744765848) ^ ((((v198 ^ 0x3000030u) >> 24) ^ 0x2A5A04F7)
                                                                                                  - 473853208))
                     - 655887424)
                    % 0x2240));
  *(_BYTE *)STACK[0x6880] = 2;
  v227 = *(_DWORD *)(v224
                   + 4
                   * (6419 * (HIBYTE(v215) ^ 0x26)
                    + 19732006
                    - 8768
                    * (((62700253 * (unint64_t)(6419 * (HIBYTE(v215) ^ 0x26) + 19732006)) >> 32) >> 7)));
  LODWORD(v224) = LODWORD(STACK[0x5C40]) ^ LODWORD(STACK[0x60F8]) ^ LODWORD(STACK[0x57F4]) ^ LODWORD(STACK[0x53CC]) ^ *(_DWORD *)(v224 + 4 * ((6419 * (((BYTE2(v200) ^ 0x4C884367) + (HIWORD(v200) & 0x8A ^ 0x13169488) - ((BYTE2(v200) ^ 0x4C884367) & 0x4C08408A)) ^ 0x13969792) + 18088742) % 0x2240u)) ^ v226 ^ *(_DWORD *)(v224 + 4 * ((6419 * ((-1556272655 - (v215 ^ 0x161004EA | 0xA33D29F1) + (v215 ^ 0x161004EA | 0x5CC2D60E)) ^ 0x4AD2D28C) + 24674636) % 0x2240)) ^ *(_DWORD *)(v224 + 4 * (6419 * (BYTE1(v219) ^ 0x99) + 32923051 - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE1(v219) ^ 0x99u) + 32923051)) >> 32) >> 7)));
  v228 = ((v198 ^ 0x3000030u) >> 16) ^ 0xF05860B2;
  v229 = (v228 + (((v198 ^ 0x3000030u) >> 16) & 0xF2 ^ 0x9268F40) - (v228 & 0xF05840F2)) ^ 0x926AFFA;
  v230 = STACK[0xDE68];
  *(_BYTE *)(STACK[0xDE68] + 2156) = -64;
  v231 = ((v200 >> 8) & 0x19) + ((v200 >> 8) & 0xE6 ^ 0x25D6F883) - 1;
  v232 = (~(2 * v219) & 8) + (v219 ^ 0xFE3);
  v233 = 6419 * ((((HIBYTE(v219) << 23) ^ 0x50000000) + 16777222) >> 23) + 19710400;
  v234 = LODWORD(STACK[0x5A98]) ^ LODWORD(STACK[0x6158]) ^ LODWORD(STACK[0x5598]) ^ LODWORD(STACK[0x5F70]) ^ v227;
  *(_BYTE *)(STACK[0x6A20] + 448) = -79;
  v235 = STACK[0xDE60];
  v236 = STACK[0xDE60];
  v237 = v234 ^ *(_DWORD *)(v235 + 4 * ((6419 * v229 + 18088742) % 0x2240)) ^ *(_DWORD *)(v235
                                                                                          + 4
                                                                                          * ((6419
                                                                                            * (((v231 & 0x2400D153 ^ 0xC2000010)
                                                                                              + (v231 ^ 0x35CFD1E7)
                                                                                              - ((v231 ^ 0x35CFD1E7) & 0x80153)) ^ 0xF611F897)
                                                                                            + 32923051)
                                                                                           % 0x2240)) ^ *(_DWORD *)(v235 + 4 * (6419 * v232 - 8768 * (((62700253 * (unint64_t)(6419 * v232)) >> 32) >> 7)));
  v238 = (((2 * (v200 ^ 0x88)) & 0x152) - (v200 ^ 0x88) + 1825109846) ^ 0xE4D0DFD8;
  v239 = 6419 * (BYTE2(v215) ^ 0x92)
       + 18088742
       - 8768 * (((62700253 * (unint64_t)(6419 * (BYTE2(v215) ^ 0x92u) + 18088742)) >> 32) >> 7);
  v240 = STACK[0x6A50];
  *(_BYTE *)(v240 + 1252) = -46;
  v241 = *(_DWORD *)(v235 + 4 * (v233 - 8768 * (((31350127 * (unint64_t)v233) >> 32) >> 6)));
  v242 = *(_DWORD *)(v235 + 4 * v239);
  *(_BYTE *)(STACK[0x68F0] + 2079) = -50;
  v243 = LODWORD(STACK[0x6010]) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x5CF0]) ^ LODWORD(STACK[0x5828]) ^ v242 ^ *(_DWORD *)(v235 + 4 * ((6419 * ((((2 * (BYTE1(v198) ^ 0x908D809C)) | 0x1C8DEF22) - (BYTE1(v198) ^ 0x908D809C) + 1907951727) ^ 0x1ECB7791) + 32923051) % 0x2240)) ^ *(_DWORD *)(v235 + 4 * ((6419 * ((((((2 * v238) | 0xD942E7DC) - v238 - 1822520302) ^ 0x10F5082) - 1801556324) ^ (((((2 * v238) | 0xD942E7DC) - v238 - 1822520302) ^ 0xB57D6A8A) + 552359060) ^ (((((2 * v238) | 0xD942E7DC) - v238 - 1822520302) ^ 0x50CB6196) - 983933040)) - 1450266572) % 0x2240)) ^ v241;
  v244 = ((2 * (v224 ^ 0x22602037)) | 0x2B14804C) - (v224 ^ 0x22602037) - 361381926;
  LODWORD(v235) = ((BYTE1(v243) ^ 0x57) - ((2 * (BYTE1(v243) ^ 0x57)) & 0x8E) - 1622698681) ^ 0xBF579587;
  BYTE2(v233) = BYTE2(v237) ^ 0x92;
  v150[3596] = -127;
  v245 = *(_DWORD *)(v236
                   + 4
                   * ((6419
                     * (((HIBYTE(v225) ^ 0x37094DDC) + 766611153) ^ ((HIBYTE(v225) ^ 0x3A69BB9C) + 550598801) ^ ((HIBYTE(v225) ^ 0xD60F645) + 400045386))
                     - 93674904)
                    % 0x2240u));
  v246 = *(_DWORD *)(v236
                   + 4
                   * ((6419
                     * ((-1075972771 - (BYTE2(v243) ^ 0x6B) + ((2 * (BYTE2(v243) ^ 0x6B)) | 0x8043F77E) + 3812) ^ 0x4021FB63)
                     + 18088742)
                    % 0x2240));
  v247 = *(_DWORD *)(v236
                   + 4
                   * (6419 * (BYTE1(v237) ^ 0x38)
                    + 32923051
                    - 8768
                    * (((62700253 * (unint64_t)(6419 * (BYTE1(v237) ^ 0x38u) + 32923051)) >> 32) >> 7)));
  *(_BYTE *)(v230 + 2209) = 45;
  v248 = *(_DWORD *)(v236
                   + 4
                   * ((6419
                     * (((BYTE3(v224) ^ 0x94A0C35B) + 1905748531) ^ ((BYTE3(v224) ^ 0xED5EE715) + 141119101) ^ ((BYTE3(v224) ^ 0x79FE2435) - 1664512675))
                     - 1903644995)
                    % 0x2240));
  v249 = *(_DWORD *)(v236
                   + 4
                   * ((6419
                     * (((v244 ^ 0x822F63E3) - 1515179724) ^ ((v244 ^ 0xE84B83E4) - 808136395) ^ ((v244 ^ 0x5D8E8091)
                                                                                                + 2047988290))
                     + 1457313543)
                    % 0x2240));
  v250 = *(_DWORD *)(v236
                   + 4
                   * ((6419 * ((((2 * (_DWORD)v235) & 0x200EA4) - (_DWORD)v235 - 1503483731) ^ 0x8672A889) + 32923051)
                    % 0x2240));
  LODWORD(v235) = *(_DWORD *)(v236
                            + 4
                            * ((6419 * (((BYTE2(v225) ^ 0x6B) - ((2 * (BYTE2(v225) ^ 0x6B)) & 0x1A4) + 4562) ^ 0x1116u)
                              + 18088742)
                             % 0x2240));
  *(_BYTE *)(v230 + 199) = -14;
  v251 = LODWORD(STACK[0x5ED0]) ^ LODWORD(STACK[0x5F58]) ^ LODWORD(STACK[0x5D48]) ^ LODWORD(STACK[0x58A0]) ^ v245 ^ v247 ^ v249 ^ v246;
  v252 = STACK[0xDE60];
  v253 = STACK[0xDE60];
  v254 = LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6218]) ^ LODWORD(STACK[0x616C]) ^ LODWORD(STACK[0x6070]) ^ v248 ^ v235 ^ *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * (((v237 ^ 0x3D4BD4DF) - 1210225002) ^ ((v237 ^ 0xEB877078) + 1628555827) ^ ((v237 ^ 0xD6CCA4FA) + 1549409969)) + 1857924) % 0x2240)) ^ v250;
  v255 = 6419
       * (((((v237 ^ 0x28920000u) >> 24) ^ 0xDF6EFE65) + 1745213961) ^ ((((v237 ^ 0x28920000u) >> 24) ^ 0x97F35C9A)
                                                                      + 546863352) ^ ((((v237 ^ 0x28920000u) >> 24) ^ 0x489DA246)
                                                                                    - 621012))
       - 308245161;
  LODWORD(v236) = (((((v225 >> 8) & 0x12) + (BYTE1(v225) ^ 0x7A)) | 0xDC6BF000) - ((BYTE1(v225) ^ 0x7A) & 0x12)) ^ 0x147CE800;
  v256 = ((2 * (BYTE2(v224) ^ 0xD0)) | 0x87F57F1E) - (BYTE2(v224) ^ 0xD0) + 1006977137;
  *(_BYTE *)(STACK[0x69A0] + 2041) = -31;
  v257 = *(_DWORD *)(v252 + 4 * (v255 % 0x2240));
  v258 = *(_DWORD *)(v252
                   + 4
                   * ((6419
                     * (((v256 & 0x9F41B543 ^ 0x8C019040) + (v256 ^ 0x73FA2F0B) - ((v256 ^ 0x73FA2F0B) & 0x9F41B543)) ^ 0x2F412501)
                     + 18088742)
                    % 0x2240));
  LODWORD(v252) = ((2 * (v243 ^ 0xD8000706)) | 0xF9782DE0)
                - (v243 ^ 0xD8000706)
                + 54782224;
  v259 = (_BYTE *)STACK[0xDE68];
  *(_BYTE *)(STACK[0xDE68] + 1276) = 55;
  LODWORD(v236) = LODWORD(STACK[0x5938]) ^ LODWORD(STACK[0x5870]) ^ LODWORD(STACK[0x53EC]) ^ LODWORD(STACK[0x5FA8]) ^ v257 ^ *(_DWORD *)(v253 + 4 * ((6419 * ((378693755 - (v236 | 0x1692687B) + (v236 | 0xE96D9784)) ^ 0x217A8F04) + 32923051) % 0x2240)) ^ v258 ^ *(_DWORD *)(v253 + 4 * ((6419 * (((v252 ^ 0xF99C7AD4) + 1086492970) ^ ((v252 ^ 0x998C4D53) + 550676143) ^ ((v252 ^ 0x44AC267F) - 34419325)) + 523590874) % 0x2240));
  LODWORD(v252) = ((v225 ^ 0x66) + (v225 & 0x41 ^ 0xF4BB01) - ((v225 ^ 0x66) & 0x41)) & 0x800FFF;
  v260 = LODWORD(STACK[0x6178]) ^ LODWORD(STACK[0x57E8]) ^ LODWORD(STACK[0x56F4]) ^ (LODWORD(STACK[0x5FB0]) + 1187) ^ *(_DWORD *)(v253 + 4 * ((6419 * (((HIBYTE(v243) ^ 0x7816AB0C) - 987399340) ^ ((HIBYTE(v243) ^ 0x48E4AF7) - 1178756439) ^ ((HIBYTE(v243) ^ 0x7C98E129) - 1045745289)) - 420037220) % 0x2240u)) ^ *(_DWORD *)(v253 + 4 * ((6419 * (((BYTE2(v233) ^ 0x44112CC0) - ((2 * (BYTE2(v233) ^ 0x44112CC0)) & 0x88204046) - 175099357) ^ 0xB1811E63) + 18088742) % 0x2240)) ^ 0xE82677B9;
  *(_BYTE *)(STACK[0x6850] + 137) = -93;
  v261 = *(_DWORD *)(v253
                   + 4
                   * ((6419
                     * (((v252 ^ 0x72C68BB1) + 1343782788) ^ ((v252 ^ 0xAFDE76DA)
                                                                          - 1929346327) ^ ((v252 ^ 0xDD98F6FD)
                                                                                         - 12188976))
                     + 762604301)
                    % 0x2240)) ^ *(_DWORD *)(v253
                                           + 4
                                           * (6419 * (BYTE1(v224) ^ 0xF5)
                                            + 32923051
                                            - 8768
                                            * (((62700253
                                                             * (unint64_t)(6419 * (BYTE1(v224) ^ 0xF5u) + 32923051)) >> 32) >> 7))) ^ __ROR4__(__ROR4__(__ROR4__(v260, 4) ^ 0x2984CCFF, 22) ^ 0x4C05093D, 6);
  LODWORD(STACK[0x66C8]) = *(_DWORD *)(v253
                                     + 4
                                     * ((6419
                                       * (((HIBYTE(v251) ^ 0x5734FCF2) + 1007025346) ^ ((HIBYTE(v251) ^ 0xAC3049A3)
                                                                                      - 956216943) ^ ((HIBYTE(v251) ^ 0xFB04B504) - 1875528392))
                                       + 1132461953)
                                      % 0x2240));
  v262 = (((2 * (BYTE1(v236) ^ 0xBB)) & 0x180) - (BYTE1(v236) ^ 0xBB) - 65084609) ^ 0x5C1EA31C;
  v263 = (v254 & 0xE8 ^ 0x4000349) + (v254 & 0x17) - 1;
  v264 = ((v236 ^ 0xF9) - ((2 * (v236 ^ 0xF9)) & 0x8E) - 412023225) & 0x804003FF;
  v265 = STACK[0xDE60];
  LODWORD(STACK[0x6218]) = *(_DWORD *)(STACK[0xDE60]
                                     + 4
                                     * ((6419
                                       * ((238582537
                                         - (BYTE2(v261) ^ 0x22F6092)
                                         + ((2 * (BYTE2(v261) ^ 0x22F6092)) & 0xE01EC)) ^ 0xC171B23u)
                                       + 18088742)
                                      % 0x2240));
  *(_BYTE *)(STACK[0x67E0] + 2845) = -122;
  v266 = *(_DWORD *)(v265
                   + 4
                   * ((6419
                     * (((v263 ^ 0x6EEC1310) - 1489686969) ^ ((v263 ^ 0xA3C56DA4) + 1780240627) ^ ((v263 ^ 0xC9297DAF)
                                                                                                 + 15745274))
                     - 2092743806)
                    % 0x2240));
  LODWORD(STACK[0x66B8]) = *(_DWORD *)(v265
                                     + 4
                                     * (6419 * (HIBYTE(v254) ^ 0x7B)
                                      + 19732006
                                      - 8768
                                      * (((62700253
                                                       * (unint64_t)(6419 * (HIBYTE(v254) ^ 0x7B) + 19732006)) >> 32) >> 7)));
  v267 = *(_DWORD *)(v265
                   + 4 * ((6419 * ((v262 - ((2 * v262) & 0x40008BBC) - 1459436066) ^ 0x902855Eu) + 32923051) % 0x2240));
  v259[4978] = 46;
  v268 = *(_DWORD *)(v265
                   + 4
                   * ((6419 * (((HIWORD(v251) & 0x63 ^ 0x15137420) + (HIWORD(v251) & 0x9C ^ 9) - 1) ^ 0x15137433)
                     + 18088742)
                    % 0x2240u));
  v269 = *(_DWORD *)(v265
                   + 4
                   * ((6419
                     * ((-11609099 - (BYTE1(v261) ^ 0x400036) + ((2 * (BYTE1(v261) ^ 0x400036)) | 0x1623494) + 2497) ^ 0xF11A4Au)
                     + 32923051)
                    % 0x2240));
  v259[3582] = 55;
  v270 = STACK[0xDE60];
  LODWORD(STACK[0x66C0]) = *(_DWORD *)(STACK[0xDE60]
                                     + 4
                                     * ((6419
                                       * (((BYTE3(v236) ^ 0xE6E52250) + 1912801741) ^ ((BYTE3(v236) ^ 0xA45AE547)
                                                                                     + 817680092) ^ ((BYTE3(v236) ^ 0x42BFC762) - 698749697))
                                       + 2043541960)
                                      % 0x2240));
  v271 = *(_DWORD *)(v270
                   + 4
                   * ((6419
                     * (((v264 ^ 0x5FB73E51) - 1588704027) ^ ((v264 ^ 0xA016E557) + 1592760291) ^ ((v264 ^ 0x7FE1D972)
                                                                                                 - 2129089592))
                     + 2108829926)
                    % 0x2240));
  *(_BYTE *)(v240 + 486) = -60;
  *(_BYTE *)STACK[0x5B88] = 23;
  v259[3438] = 123;
  v272 = ((HIWORD(v254) & 0x76 ^ 0x80001431) + (HIWORD(v254) & 0x89) - 1) ^ 0xC20590CF;
  v259[4265] = 54;
  v273 = *(_DWORD *)(v270 + 4
                          * ((6419 * ((((2 * v272) & 0x7C0) - v272 + 1137153055) ^ 0x1C210BF) + 18088742) % 0x2240));
  v259[5949] = -10;
  v274 = STACK[0xDE68];
  *(_BYTE *)(STACK[0xDE68] + 912) = 37;
  v275 = STACK[0xDE60];
  v276 = LODWORD(STACK[0x5E48]) ^ LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x5808]) ^ LODWORD(STACK[0x5400]) ^ *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * ((2125186779 - (BYTE2(v236) ^ 0xDC | 0x7EABC6DB) + (BYTE2(v236) ^ 0xDC | 0x81543924)) ^ 0x815439AF) + 18088742) % 0x2240)) ^ *(_DWORD *)(v270 + 4 * ((6419 * (((HIBYTE(v261) ^ 0x40FE0EC3) - 1679121378) ^ ((HIBYTE(v261) ^ 0xEBDC0B61) + 818454976) ^ ((HIBYTE(v261) ^ 0xAB220523) + 1882632190)) - 1174335226) % 0x2240));
  v277 = (((v276 & 0x800) - 12556 - 2 * (v276 & 0x800)) & 0x7000 ^ 0x1004001)
       + (((v276 & 0x800) - 12556) & 0x800)
       + 1358038831;
  v278 = ((v277 ^ 0x48EB62C1) + 1617558206) ^ ((v277 ^ 0xD37A32E7) - 67589476) ^ ((v277 ^ 0xCA635716) - 488517781);
  v279 = v278 - 1423396904;
  v280 = (v279 ^ 0x9256BEDB) & (2 * (v279 & 0xDB66B0DB)) ^ v279 & 0xDB66B0DB;
  v281 = ((2 * (v279 ^ 0x3652BF59)) ^ 0xDA681F04) & (v279 ^ 0x3652BF59) ^ (2 * (v279 ^ 0x3652BF59)) & 0x6D340F82;
  v282 = (v281 ^ 0xC8200702) & (4 * v280) ^ v280;
  v283 = ((4 * (v281 ^ 0x25140082)) ^ 0xB4D03E08) & (v281 ^ 0x25140082) ^ (4 * (v281 ^ 0x25140082)) & 0x6D340F80;
  v284 = (v283 ^ 0xA4100E00) & (16 * v282) ^ v282;
  v285 = ((16 * (v283 ^ 0x49240182)) ^ 0xD340F820) & (v283 ^ 0x49240182) ^ (16 * (v283 ^ 0x49240182)) & 0xED340F80;
  v286 = v284 ^ 0xED340F82 ^ (v285 ^ 0xC1000882) & (v284 << 8);
  v287 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * ((-931145859 - (BYTE1(v254) ^ 0x31) + ((2 * (BYTE1(v254) ^ 0x31)) | 0x6F005106)) ^ 0x3780286Du)
                     + 32923051)
                    % 0x2240));
  v288 = (v278 - 1423396904) ^ (2
                              * ((v286 << 16) & 0x6D340000 ^ v286 ^ ((v286 << 16) ^ 0xF820000) & (((v285 ^ 0x2C340782) << 8) & 0xED340000 ^ 0x49300000 ^ (((v285 ^ 0x2C340782) << 8) ^ 0x340F0000) & (v285 ^ 0x2C340782))));
  v289 = v288 & 0xA5A117D6 ^ 0x5011744 ^ (v288 ^ 0x1B0EAFDF) & (v287 ^ 0xE085C529);
  v112 = ((2 * v289) | 0xCE10D3BE) - v289 == -904797396;
  v290 = 431060401 - LODWORD(STACK[0x54D0]) + LODWORD(STACK[0x5450]);
  LODWORD(STACK[0x6850]) = STACK[0x544C] & (LODWORD(STACK[0x54A4]) ^ 0x5C535D77) | LODWORD(STACK[0x5440]);
  v291 = (STACK[0x5BF0] & 0x7FFFFF00 ^ 0xC301D2FF) & (LODWORD(STACK[0x5C98]) ^ 0xE741DB75) | STACK[0x5BF0] & 0x18BE2400;
  v292 = ((STACK[0x5BF0] & 0x80000000) + LODWORD(STACK[0x6248])) ^ LODWORD(STACK[0x5AB0]) ^ 0x84DB83B0 ^ ((v291 & 0x67BA680D ^ 0x67A8480C) + (v291 & 0x184597F2 ^ 0x80000411) - 1);
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x540C]) ^ LODWORD(STACK[0x5810]) ^ LODWORD(STACK[0x5584]);
  v293 = LODWORD(STACK[0x5FE0])
       + 456889244
       + v292
       - ((((2 * (v292 & STACK[0x5FE0])) ^ 0x1DA579AD) - 1345538968) ^ (((2 * (v292 & STACK[0x5FE0])) ^ 0x94AB0B86)
                                                                      + 650298957) ^ (((2 * (v292 & STACK[0x5FE0])) ^ 0x890E722B)
                                                                                    + 996655074));
  v294 = (v293 ^ 0x87AF398E) & (2 * (v293 & 0x972E3A2F)) ^ v293 & 0x972E3A2F;
  v295 = ((2 * (v293 ^ 0x8DB36D84)) ^ 0x353AAF56) & (v293 ^ 0x8DB36D84) ^ (2 * (v293 ^ 0x8DB36D84)) & 0x1A9D57AA;
  v296 = (v295 ^ 0x121C0101) & (4 * v294) ^ v294;
  v297 = ((4 * (v295 ^ 0xA8550A9)) ^ 0x6A755EAC) & (v295 ^ 0xA8550A9) ^ (4 * (v295 ^ 0xA8550A9)) & 0x1A9D57A8;
  v298 = (v297 ^ 0xA1556A0) & (16 * v296) ^ v296;
  v299 = ((16 * (v297 ^ 0x10880103)) ^ 0xA9D57AB0) & (v297 ^ 0x10880103) ^ (16 * (v297 ^ 0x10880103)) & 0x1A9D57A0;
  v300 = v298 ^ 0x1A9D57AB ^ (v299 ^ 0x8955200) & (v298 << 8);
  v301 = (v300 << 16) & 0x1A9D0000 ^ v300 ^ ((v300 << 16) ^ 0x57AB0000) & (((v299 ^ 0x1208050B) << 8) & 0x1A9D0000 ^ 0x2880000 ^ (((v299 ^ 0x1208050B) << 8) ^ 0x1D570000) & (v299 ^ 0x1208050B));
  v302 = LODWORD(STACK[0x5C00]) ^ LODWORD(STACK[0x5E38]) ^ LODWORD(STACK[0x5990]) ^ LODWORD(STACK[0x5988]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x6218]) ^ v266 ^ v267;
  v303 = LODWORD(STACK[0x6150]) ^ LODWORD(STACK[0x6088]) ^ LODWORD(STACK[0x6040]) ^ LODWORD(STACK[0x592C]) ^ v268 ^ LODWORD(STACK[0x66B8]) ^ v269 ^ v271;
  v304 = (v261 & 0x23) + 537661714 + (v261 & 0xDC ^ 0x1B824C95) + 3821;
  v305 = (((2 * (v251 ^ 0xFC)) | 0x7A3D546C) - (v251 ^ 0xFC) + 1122063818) & 0x7FFFFFFF;
  v306 = LODWORD(STACK[0x5940]) ^ LODWORD(STACK[0x60B0]) ^ LODWORD(STACK[0x58AC]) ^ v290 ^ LODWORD(STACK[0x66C0]) ^ *(_DWORD *)(v275 + 4 * ((6419 * (((v304 ^ 0xAD04C010) - 1269547620) ^ ((v304 ^ 0xD4A194F3) - 839816839) ^ ((v304 ^ 0x422B3827) + 1534838189)) - 1362958244) % 0x2240)) ^ *(_DWORD *)(v275 + 4 * ((6419 * ((((2 * (BYTE1(v251) ^ 0x98084510)) | 0xA15E7FF2) - (BYTE1(v251) ^ 0x98084510) - 1353662457) ^ 0xC8A77A7C) + 32923051) % 0x2240)) ^ v273;
  v307 = *(_DWORD *)(v275
                   + 4
                   * ((6419
                     * (((v305 ^ 0xC97ECCEA) + 1849969041) ^ ((v305 ^ 0xA6D05A61) + 32169756) ^ ((v305 ^ 0x52B03C29)
                                                                                               - 175457964))
                     + 136102705)
                    % 0x2240));
  v308 = -1643516302 - v278;
  if (v112)
    v308 = v278 - 1423396904;
  v309 = (((v287 ^ 0x13A7E0B1) - 329769137) ^ ((v287 ^ 0xB3C4AAD5) + 1278956843) ^ ((v287 ^ 0xE547989B) + 448292709))
       + 1781502471
       + v308
       + 2915;
  v310 = (v309 ^ 0x3653C477) & (2 * (v309 & 0xB65BE670)) ^ v309 & 0xB65BE670;
  v311 = ((2 * (v309 ^ 0x5AD68037)) ^ 0xD91ACC8E) & (v309 ^ 0x5AD68037) ^ (2 * (v309 ^ 0x5AD68037)) & 0xEC8D6646;
  v312 = (v311 ^ 0xCC080001) & (4 * v310) ^ v310;
  v313 = ((4 * (v311 ^ 0x24852241)) ^ 0xB235991C) & (v311 ^ 0x24852241) ^ (4 * (v311 ^ 0x24852241)) & 0xEC8D6644;
  v314 = (v313 ^ 0xA0050000) & (16 * v312) ^ v312;
  v315 = ((16 * (v313 ^ 0x4C886643)) ^ 0xC8D66470) & (v313 ^ 0x4C886643) ^ (16 * (v313 ^ 0x4C886643)) & 0xEC8D6640;
  v316 = v314 ^ 0xEC8D6647 ^ (v315 ^ 0xC8846407) & (v314 << 8);
  v317 = ((v276 & 0xFFFFF7FF ^ 0xA77F21B8)
        + (v276 & 0x60B9B294 ^ 0x40809A04)
        - ((v276 & 0xFFFFF7FF ^ 0xA77F21B8) & 0x60B9B294)) ^ v307 ^ v309 ^ (2
                                                                          * ((v316 << 16) & 0x6C8D0000 ^ v316 ^ ((v316 << 16) ^ 0x66470000) & (((v315 ^ 0x24090207) << 8) & 0x6C8D0000 ^ 0x60890000 ^ (((v315 ^ 0x24090207) << 8) ^ 0xD660000) & (v315 ^ 0x24090207))));
  *(_BYTE *)(v274 + 821) = -126;
  *(_BYTE *)(STACK[0x6900] + 220) = -64;
  *(_BYTE *)(STACK[0x6920] + 2056) = 118;
  v318 = ((2 * (BYTE2(v317) ^ 0xC8)) | 0x1F6BDCA8) - (BYTE2(v317) ^ 0xC8) + 1883902380;
  v319 = STACK[0xDE60];
  v320 = STACK[0xDE60];
  v321 = LODWORD(STACK[0x5EE0]) ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x5DA0]) ^ LODWORD(STACK[0x5428]) ^ *(_DWORD *)(v319 + 4 * ((6419 * (((HIBYTE(v302) ^ 0xAB9D0929) + 498520160) ^ ((HIBYTE(v302) ^ 0xEB4D5BCF) + 1566999226) ^ ((HIBYTE(v302) ^ 0x40D052E1) - 151286888)) + 868809923) % 0x2240)) ^ *(_DWORD *)(v319 + 4 * ((6419 * (((v318 & 0x6A5C3A1 ^ 0x90600101) + (v318 & 0x9103C5E ^ 0x4910040D) - 1) ^ 0xD6C5EBA2) + 31266949) % 0x2240));
  v322 = ((2 * (BYTE1(v306) ^ 0xB6)) | 0x82DE3C64) - (BYTE1(v306) ^ 0xB6) + 1049682382;
  HIDWORD(v323) = v321 ^ 0xE35A;
  LODWORD(v323) = v321 ^ 0x80C20000;
  v324 = ((2 * (v306 ^ 0xA)) | 0xFCA4263A) - (v306 ^ 0xA) - 2119308061;
  *(_BYTE *)(STACK[0x6AB0] + 3118) = 37;
  v325 = LODWORD(STACK[0x66F0]) ^ *(_DWORD *)(v319
                                            + 4
                                            * ((6419
                                              * (((HIBYTE(v303) ^ 0x7D5B572C) + 1146270389) ^ ((HIBYTE(v303) ^ 0xC1AE307B)
                                                                                             - 123218460) ^ ((HIBYTE(v303) ^ 0xBCF5675A) - 2047049021))
                                              - 836857321)
                                             % 0x2240)) ^ *(_DWORD *)(v319
                                                                    + 4
                                                                    * ((6419
                                                                      * ((((2 * (BYTE2(v302) ^ 0x82002078)) | 0x190920A4)
                                                                        - (BYTE2(v302) ^ 0x82002078)
                                                                        + 1937469358) ^ 0xE84B046)
                                                                      + 31266949)
                                                                     % 0x2240)) ^ *(_DWORD *)(v319
                                                                                            + 4
                                                                                            * ((6419
                                                                                              * (((v324 ^ 0x77325F28)
                                                                                                - 1935358335) ^ ((v324 ^ 0x6574577B) - 1629303084) ^ ((v324 ^ 0x6C141B20) - 1753054583))
                                                                                              - 515984430)
                                                                                             % 0x2240)) ^ *(_DWORD *)(v319 + 4 * ((6419 * ((-1565320613 - (BYTE1(v317) ^ 0xE02426F | 0xA2B31A5B) + (BYTE1(v317) ^ 0xE02426F | 0x5D4CE5A4)) ^ 0x534EA7A9) + 27961164) % 0x2240));
  v326 = *(_DWORD *)(v319
                   + 4
                   * ((6419
                     * (((v322 & 0xC700F909 ^ 0x700E801) + (v322 ^ 0xC06E15F8) - ((v322 ^ 0xC06E15F8) & 0xC700F909)) ^ 0xC601F229)
                     + 27961164)
                    % 0x2240)) ^ __ROR4__((v323 >> 17) ^ 0x6C68A7EE, 15) ^ *(_DWORD *)(v319
                                                                                     + 4
                                                                                     * ((6419
                                                                                       * (((v303 ^ 0xACC9899E)
                                                                                         + 203724503) ^ ((v303 ^ 0x49700042) - 375578869) ^ ((v303 ^ 0xE5B98935) + 1163171454))
                                                                                       - 424389856)
                                                                                      % 0x2240));
  v327 = ((2 * (v302 ^ 0x38152AA)) | 0xAD776576) - (v302 ^ 0x38152AA);
  v328 = (v317 ^ 0xAC) + (v317 & 0x37 ^ 0x4313) - ((v317 ^ 0xAC) & 0x37);
  v329 = (BYTE1(v303) ^ 0x3D | 0xBD87ECD1) - (BYTE1(v303) ^ 0x3D | 0x4278132E) + 1115165486;
  v330 = LODWORD(STACK[0x5FF8]) ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x5C38]) ^ LODWORD(STACK[0x6850]) ^ *(_DWORD *)(v319 + 4 * ((6419 * (((BYTE1(v302) ^ 0x882040) - ((v302 >> 7) & 0x100) + 591729024) ^ 0x23CD3100) + 27961164) % 0x2240)) ^ *(_DWORD *)(v319 + 4 * ((6419 * ((1780372454 - (BYTE2(v303) ^ 0xAC14B064 | 0x6A1E53E6) + (BYTE2(v303) ^ 0xAC14B064 | 0x95E1AC19)) ^ 0x39F51CF4) + 31266949) % 0x2240)) ^ *(_DWORD *)(v319 + 4 * ((6419 * (((HIBYTE(v306) ^ 0xF46A65EF) - 755699675) ^ ((HIBYTE(v306) ^ 0xFFDB702B) - 649730591) ^ ((HIBYTE(v306) ^ 0xBB11560) + 758087852)) - 1494664471) % 0x2240));
  v331 = STACK[0xDE68];
  v332 = STACK[0xDE68];
  *(_BYTE *)(v331 + 2103) = 100;
  v333 = v330 ^ *(_DWORD *)(v319
                          + 4
                          * ((6419
                            * (((v328 ^ 0x1F616F8D) + 2108595271) ^ ((v328 ^ 0x36AAEA3F) + 1415911925) ^ ((v328 ^ 0x29CBC663u) + 1258567081))
                            + 1657260325)
                           % 0x2240));
  v334 = 6419
       * (((v329 & 0x3486A1C5 ^ 0x42EC2104) + (v329 ^ 0x3D13CEC3) - ((v329 ^ 0x3D13CEC3) & 0x76FEA1C5)) ^ 0xF66A83E5)
       + 27961164;
  v335 = *(_DWORD *)(v319
                   + 4
                   * ((6419
                     * (((HIBYTE(v317) ^ 0x7F55503A) + 1959167383) ^ ((HIBYTE(v317) ^ 0x49E85296) + 1115391803) ^ ((HIBYTE(v317) ^ 0x36BD02E1) + 1026479950))
                     - 1251323789)
                    % 0x2240u));
  v336 = *(_DWORD *)(v319
                   + 4
                   * (6419 * (BYTE2(v306) ^ 0x4E)
                    + 31266949
                    - 8768
                    * (((62700253 * (unint64_t)(6419 * (BYTE2(v306) ^ 0x4Eu) + 31266949)) >> 32) >> 7)));
  *(_BYTE *)(STACK[0x6A90] + 3194) = -46;
  v337 = v293 ^ (2 * v301) ^ v336 ^ *(_DWORD *)(v319 + 4 * (v334 % 0x2240)) ^ *(_DWORD *)(v319
                                                                                          + 4
                                                                                          * ((6419
                                                                                            * ((((v327 - 1455141563) ^ 0x6DA8CCDC)
                                                                                              - 1132547936) ^ (((v327 - 1455141563) ^ 0x70F84085) - 1590805305) ^ (((v327 - 1455141563) ^ 0x486A6CF6) - 1715728202))
                                                                                            + 125940623)
                                                                                           % 0x2240)) ^ v335;
  *(_BYTE *)(v331 + 3893) = 1;
  *(_BYTE *)(v331 + 3605) = 67;
  *(_BYTE *)(v332 + 4644) = -117;
  LODWORD(v331) = ((2 * (BYTE2(v337) ^ 0xC3)) & 0x1E8) - (BYTE2(v337) ^ 0xC3) - 1593636341;
  *(_BYTE *)(v332 + 927) = 46;
  *(_BYTE *)(v332 + 2945) = -26;
  *(_BYTE *)(v332 + 3620) = 112;
  *(_BYTE *)(v332 + 2907) = -68;
  v338 = *(unsigned __int8 *)(v332
                            + (5621
                             * (((v331 & 0xA0000186 ^ 0x142C2184)
                               + (v331 ^ 0xE0020A4A)
                               - ((v331 ^ 0xE0020A4A) & 0x186)) ^ 0xF52D2102)
                             + 4339412)
                            % 0x1808);
  *(_BYTE *)(v332 + 3878) = 114;
  v339 = *(unsigned __int8 *)(v332
                            + (5621
                             * (((HIBYTE(v333) ^ 0xC03C37BA) + 1338591967) ^ ((HIBYTE(v333) ^ 0xF3F92B04) + 2081183329) ^ ((HIBYTE(v333) ^ 0x33C51CDC) - 1137679943))
                             + 398575886)
                            % 0x1808);
  *(_BYTE *)(STACK[0x6870] + 1032) = 72;
  v340 = *(unsigned __int8 *)(v332
                            + 5621 * (BYTE2(v325) ^ 0xEB)
                            + 4339412
                            - 6152
                            * (((22340533 * (unint64_t)(5621 * (BYTE2(v325) ^ 0xEBu) + 4339412)) >> 32) >> 5));
  v341 = (-309993051 - (BYTE1(v325) ^ 0x4B | 0xED85E1A5) + (BYTE1(v325) ^ 0x4B | 0x127A1E5A)) ^ 0x1AF05272;
  v342 = (v337 ^ 0x81) + (v337 & 0xFC ^ 0xBA68A27C) - ((v337 ^ 0x81) & 0xFC);
  v343 = (((v333 >> 15) & 0x32) + (BYTE2(v333) ^ 0xFFFFFFBB) + 1793856743) ^ 0x3AEEB4C7;
  LODWORD(v331) = (v325 & 0x98 ^ 0x709B0809) + (v325 & 0x67) - 1;
  v344 = STACK[0xDE68];
  v345 = STACK[0xDE68];
  v346 = *(unsigned __int8 *)(STACK[0xDE68]
                            + (5621 * ((((2 * v341) | 0xA0438E0C) - v341 - 1344390918) ^ 0x58AB8BC6) + 7239848) % 0x1808);
  LODWORD(v319) = *(unsigned __int8 *)(STACK[0xDE68]
                                     + 5621
                                     * (((((2 * (BYTE1(v326) ^ 0xB0980812)) & 0x601010EA)
                                        - (BYTE1(v326) ^ 0xB0980812)
                                        - 1932212598) ^ 0x3C4CCB02)
                                      + ((v326 >> 7) & 0x10))
                                     % 0x1808);
  v347 = *(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * (((v342 ^ 0x31EDDD3C) - 96803504) ^ ((v342 ^ 0xF5CA98E3) + 1042129041) ^ ((v342 ^ 0x7E4FE7DB) - 1248272471))
                             + 1828670441)
                            % 0x1808);
  v348 = *(unsigned __int8 *)(STACK[0xDE68]
                            + (5621
                             * (((v331 ^ 0x6FDCA06A) + 2123675723) ^ ((v331 ^ 0x1AD6AAC8)
                                                                                  + 194949865) ^ ((v331 ^ 0x591022E)
                                                                                                + 349772303))
                             + 296538672)
                            % 0x1808);
  v349 = *(unsigned __int8 *)(STACK[0xDE68]
                            + (5621 * ((((2 * v343) | 0xEBD1ADD4) - v343 - 1978193642) ^ 0x25EA76FE) + 4339412) % 0x1808);
  *(_BYTE *)(STACK[0x68D0] + 888) = 97;
  LODWORD(v332) = 5621
                * ((((2 * (BYTE1(v333) ^ 0x46A32F0E)) & 0x44218B6) - (BYTE1(v333) ^ 0x46A32F0E) + 1573270436) ^ 0x1B651C85)
                + 7239848;
  v350 = *(unsigned __int8 *)(v344
                            + (5621
                             * ((((2 * (BYTE1(v337) ^ 0x303809C)) & 0x20500F0) - (BYTE1(v337) ^ 0x303809C) + 580194695) ^ 0x2196918Eu)
                             + 7239848)
                            % 0x1808);
  LODWORD(v331) = 5621
                * (((HIBYTE(v337) ^ 0x3AD7B2ED) - 630813723) ^ ((HIBYTE(v337) ^ 0x406A173F) - 1596248521) ^ ((HIBYTE(v337) ^ 0x7ABDA555) - 1710449571))
                + 1839149798;
  v351 = *(unsigned __int8 *)(v344
                            + (5621
                             * (((v333 ^ 0x51F15F8C) + 703423493) ^ ((v333 ^ 0xD8D7DD60)
                                                                                    - 1597249815) ^ ((v333 ^ 0x892682E8) - 247809695))
                             - 1121818160)
                            % 0x1808);
  v352 = *(unsigned __int8 *)(v344
                            + (5621
                             * (((BYTE2(v326) ^ 0x40D8AB) - ((2 * (BYTE2(v326) ^ 0x40D8AB)) & 0x8130B6) - 984769957) ^ 0xC50D425B)
                             + 4339412)
                            % 0x1808);
  v353 = *(unsigned __int8 *)(v344 + v332 % 0x1808);
  LODWORD(v332) = (v326 ^ 0x31 | 0xA797671B) - (v326 ^ 0x31 | 0x586898E4) + 1483249892;
  v354 = *(unsigned __int8 *)(v345 + v331 % 0x1808);
  *(_BYTE *)(v345 + 965) = -95;
  LODWORD(v331) = *(unsigned __int8 *)(v345
                                     + (5621
                                      * (((v332 ^ 0x5063E5CE) + 1844389788) ^ ((v332 ^ 0x43367E15)
                                                                                           + 2126167105) ^ ((v332 ^ 0xB4C2FC8D) - 1991360807))
                                      + 1074509805)
                                     % 0x1808);
  *(_BYTE *)(STACK[0x6A80] + 3634) = -118;
  LODWORD(v332) = *(unsigned __int8 *)(v345
                                     + (5621
                                      * (((HIBYTE(v326) ^ 0xE7D15895) - 752305595) ^ ((HIBYTE(v326) ^ 0xFF45308D)
                                                                                    - 876817827) ^ ((HIBYTE(v326) ^ 0x189468BF)
                                                                                                  + 745376367))
                                      - 835025698)
                                     % 0x1808);
  v355 = *(unsigned __int8 *)(v345
                            + (5621
                             * (((HIBYTE(v325) ^ 0xA4A21EBC) - 369597761) ^ ((HIBYTE(v325) ^ 0x7ABBD14) + 1257357591) ^ ((HIBYTE(v325) ^ 0xA309A33E) - 296493251))
                             - 1927114712)
                            % 0x1808);
  *(_BYTE *)(STACK[0x6A10] + 3338) = -75;
  *(_BYTE *)(v345 + 5289) = -46;
  v356 = 6419 * (((2 * v346) & 4) + (v346 ^ 0xABB));
  LODWORD(v345) = ((v319 ^ 0xBCF8CAA2) + 1124545886) ^ ((v319 ^ 0x2F7457E8) - 796153832);
  LODWORD(v344) = (v319 ^ 0x938C9DF3) + 1819501069;
  LODWORD(STACK[0x66F0]) = *(_DWORD *)(v320
                                     + 4
                                     * ((6419
                                       * (((v355 ^ 0x6530ABC4) - 1697688516) ^ ((v355 ^ 0xEC3C6609) + 331586039) ^ ((v355 ^ 0x890CCD74) + 1995649676))
                                       + 35760249)
                                      % 0x2240));
  v357 = *(_DWORD *)(v320
                   + 4
                   * ((6419
                     * (((v339 ^ 0xD878E261) + 663166367) ^ ((v339 ^ 0x925891C6) + 1839689274) ^ ((v339 ^ 0x4A20731E)
                                                                                                - 1243640606))
                     + 35760249)
                    % 0x2240));
  v358 = *(_DWORD *)(v320
                   + 4
                   * ((6419
                     * (((v340 ^ 0x5782F0D2) - 1468199122) ^ ((v340 ^ 0xBE6A820) - 199665696) ^ ((v340 ^ 0x5C64584Bu)
                                                                                               - 1550080075))
                     + 45651928)
                    % 0x2240));
  v359 = *(_DWORD *)(v320
                   + 4
                   * ((6419
                     * (((v332 ^ 0x8CC1DF06) + 1933451514) ^ ((v332 ^ 0xBFA3DDD) - 200949213) ^ ((v332 ^ 0x873BE262) + 2026118558))
                     + 35760249)
                    % 0x2240));
  LODWORD(STACK[0x66C8]) = *(_DWORD *)(v320
                                     + 4
                                     * (v356 - 8768 * (((31350127 * (unint64_t)v356) >> 32) >> 6)));
  v360 = *(_DWORD *)(v320
                   + 4
                   * ((6419
                     * (((v353 ^ 0x5FC737A6) - 1606891430) ^ ((v353 ^ 0xCE78AA16) + 830952938) ^ ((v353 ^ 0x91BF9D09)
                                                                                                + 1849713399))
                     + 17632993)
                    % 0x2240));
  v361 = *(_DWORD *)(v320
                   + 4
                   * ((6419
                     * (((v351 ^ 0xCDAA8EFE) + 844460290) ^ ((v351 ^ 0x45DF9D72) - 1172282738) ^ ((v351 ^ 0x88751335)
                                                                                                + 2005593291))
                     + 55582121)
                    % 0x2240));
  LODWORD(v332) = v345 ^ v344;
  LODWORD(v345) = *(_DWORD *)(v320
                            + 4
                            * ((6419
                              * (((v331 ^ 0xE8F855B2) + 386378318) ^ ((v331 ^ 0x3AB3B0AD)
                                                                                  - 984854701) ^ ((v331 ^ 0xD24BE5A6)
                                                                                                + 766777946))
                              + 55582121)
                             % 0x2240));
  *(_BYTE *)(STACK[0x69D0] + 1548) = 59;
  LODWORD(v344) = *(_DWORD *)(v320
                            + 4
                            * ((6419
                              * (((v352 ^ 0xB25E11DC) + 1302457892) ^ ((v352 ^ 0x402E3E9C) - 1076772508) ^ ((v352 ^ 0xF2702FF9) + 227528711))
                              + 45651928)
                             % 0x2240));
  *(_BYTE *)(STACK[0x6A70] + 1912) = -84;
  *(_BYTE *)(STACK[0xDE68] + 2778) = -66;
  LODWORD(v320) = *(_DWORD *)(v320 + 4 * ((6419 * (int)v332 + 17632993) % 0x2240u));
  LODWORD(v331) = ((v338 ^ 0x71D0313) - 119341843) ^ ((v338 ^ 0xDEC7CF32) + 557330638) ^ ((v338 ^ 0xD9DACC98) + 639972200);
  *(_BYTE *)(STACK[0x69C0] + 1009) = 81;
  v362 = STACK[0xDE60];
  v363 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * (((v348 ^ 0x8023787D) + 2145159043) ^ ((v348 ^ 0x24F40724) - 619972388) ^ ((v348 ^ 0xA4D77FE0)
                                                                                                + 1529380896))
                     + 55582121)
                    % 0x2240));
  v364 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * ((6419
                     * (((v350 ^ 0x5791496C) - 1469139308) ^ ((v350 ^ 0x5AF44EBF) - 1525960383) ^ ((v350 ^ 0xD65076Au)
                                                                                                 - 224724842))
                     + 17632993)
                    % 0x2240));
  *(_BYTE *)STACK[0x66F8] = -104;
  LODWORD(v332) = 6419
                * (((v349 ^ 0x8A64CB11) + 1973105903) ^ ((v349 ^ 0x1539AA2F) - 356100655) ^ ((v349 ^ 0x9F5D6187)
                                                                                           + 1621270137))
                + 45651928;
  v365 = *(_DWORD *)(v362 + 4 * ((6419 * (int)v331 + 45651928) % 0x2240u));
  *(_BYTE *)(STACK[0x6A40] + 3012) = 91;
  *(_BYTE *)STACK[0x68C0] = -72;
  LODWORD(v331) = *(_DWORD *)(v362
                            + 4
                            * ((6419
                              * (((v354 ^ 0xCAD6DCD0) + 891888432) ^ ((v354 ^ 0xBA2CA67) - 195218023) ^ ((v354 ^ 0xC174160E) + 1049356786))
                              + 35760249)
                             % 0x2240));
  v366 = *(_DWORD *)(v362 + 4 * (v332 % 0x2240));
  LODWORD(v332) = *(_DWORD *)(v362
                            + 4
                            * ((6419
                              * (((v347 ^ 0x851E36AD) + 2061617491) ^ ((v347 ^ 0xBC4553B3) + 1136307277) ^ ((v347 ^ 0x395B65A7) - 962291111))
                              + 55582121)
                             % 0x2240));
  *(_BYTE *)(STACK[0xDE68] + 4629) = 16;
  LODWORD(v362) = LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x5D20]) ^ LODWORD(STACK[0x5904]);
  v367 = v365 ^ v364 ^ v331 ^ v332;
  v368 = ((v367 & 0x4000000 ^ 0x75CB82F4) - 1236566319) ^ ((v367 & 0x4000000) - 732495141) ^ ((v367 & 0x4000000 ^ 0x3C2011AB)
                                                                                            - 6230640);
  v369 = v368 + 1476980149;
  LODWORD(v331) = (v369 ^ 0xD4740716) & (2 * (v369 & 0xE4761626)) ^ v369 & 0xE4761626;
  v370 = ((2 * (v369 ^ 0x5C582B5E)) ^ 0x705C7AF0) & (v369 ^ 0x5C582B5E) ^ (2 * (v369 ^ 0x5C582B5E)) & 0xB82E3D78;
  LODWORD(v331) = (v370 ^ 0x380A3C30) & (4 * v331) ^ v331;
  v371 = ((4 * (v370 ^ 0x88220508)) ^ 0xE0B8F5E0) & (v370 ^ 0x88220508) ^ (4 * (v370 ^ 0x88220508)) & 0xB82E3D78;
  LODWORD(v331) = (v371 ^ 0xA0283570) & (16 * v331) ^ v331;
  v372 = ((16 * (v371 ^ 0x18060818)) ^ 0x82E3D780) & (v371 ^ 0x18060818) ^ (16 * (v371 ^ 0x18060818)) & 0xB82E3D70;
  LODWORD(v331) = v331 ^ 0xB82E3D78 ^ (v372 ^ 0x80221578) & ((_DWORD)v331 << 8);
  v373 = v362 ^ 0xF1163378;
  LODWORD(v331) = ((v368 + 1476980149) ^ (2
                                        * (((_DWORD)v331 << 16) & 0x382E0000 ^ v331 ^ (((_DWORD)v331 << 16) ^ 0x3D780000) & (((v372 ^ 0x380C2878) << 8) & 0x382E0000 ^ 0x10020000 ^ (((v372 ^ 0x380C2878) << 8) ^ 0x2E3D0000) & (v372 ^ 0x380C2878)))) ^ 0xBA599ABF) & (v362 ^ 0xF1163378) ^ v362 & 0x5E23F669;
  v112 = (v331 & 0x4567669C ^ 0x5474694)
       + (v331 ^ 0x5820B029)
       - ((v331 ^ 0x5820B029) & 0x4567669C) == 1296426205;
  LODWORD(STACK[0x6850]) = LODWORD(STACK[0x5488]) - 632203226;
  LODWORD(v332) = (STACK[0x5490] & 0x59A20DB4) - LODWORD(STACK[0x54A0]) - 751896283;
  v374 = STACK[0x549C] & (LODWORD(STACK[0x54E4]) ^ 0xBD14BD71) | LODWORD(STACK[0x5498]);
  LODWORD(v331) = ((LODWORD(STACK[0x5920]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x593C]) ^ 0xB9) << 8);
  LODWORD(v331) = (LODWORD(STACK[0x5958]) ^ 0xF950D0) & ~(_DWORD)v331 | v331 & 0x6AF00;
  v375 = (((_DWORD)v331 << 8) ^ 0x6A810FF) & (LODWORD(STACK[0x5960]) ^ 0xEEF85143) | ((_DWORD)v331 << 8) & 0x1107AE00;
  LODWORD(v331) = ((LODWORD(STACK[0x5A58]) ^ 0xB9) << 8) | ((LODWORD(STACK[0x5980]) ^ 0xB9) << 16);
  LODWORD(v331) = (LODWORD(STACK[0x5A90]) ^ 0x84F1FCFA) & ~(_DWORD)v331 | v331 & 0xE0300;
  LODWORD(v331) = (((v331 & 0x1B4117 ^ 0x80010) + (v331 & 0xE4BEE8 ^ 0xE0BE49)) << 8) - 256;
  v376 = (v331 ^ 0xA21D64FF) & (LODWORD(STACK[0x66A0]) ^ 0xBB5F6653) | v331 & 0x44A09900;
  LODWORD(v331) = ((STACK[0x65A8] & 0x21 ^ 0xA3BAF30) + (STACK[0x65A8] & 0xCE ^ 5) - 1) ^ 0xA26ABF35;
  v377 = LODWORD(STACK[0x5D30]) | (((2 * v331) & 0x279C) - v331 + 1853082673) ^ 0xC622DC99;
  v378 = LODWORD(STACK[0x6060]) + LODWORD(STACK[0x60C8]);
  v379 = LODWORD(STACK[0x5FE8]) ^ 0xABBA9438 ^ LODWORD(STACK[0x5F90]) ^ LODWORD(STACK[0x5D78]) ^ LODWORD(STACK[0x5BB8]);
  v380 = v379 - ((2 * v379) & 0x38069FFE) + 469979135;
  v381 = LODWORD(STACK[0x58E8]) ^ LODWORD(STACK[0x5EB0]) ^ LODWORD(STACK[0x585C]) ^ v376;
  LODWORD(STACK[0x68D0]) = (LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x5978]) ^ 0xFAF23ED9)
                         + LODWORD(STACK[0x61A0])
                         - 2 * ((LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x5978]) ^ 0xFAF23ED9) & STACK[0x61A0]);
  v382 = LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x5BD8]) ^ v332 ^ v359 ^ v344 ^ v320 ^ v345;
  v383 = -552933889 - v368;
  if (v112)
    v383 = v368 + 1476980149;
  v384 = LODWORD(STACK[0x5F30]) ^ LODWORD(STACK[0x6048]) ^ LODWORD(STACK[0x5918]) ^ LODWORD(STACK[0x548C]) ^ v357 ^ v360 ^ v361 ^ v366;
  v385 = LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x5CE0]) ^ LODWORD(STACK[0x5C80]) ^ v374 ^ v358 ^ LODWORD(STACK[0x66F0]) ^ v363 ^ 0x4CD22823;
  v386 = (v385 ^ LODWORD(STACK[0x66C8])) - ((2 * (v385 ^ LODWORD(STACK[0x66C8]))) & 0x94609030) + 1244678168;
  v387 = (((2 * (v367 & 0xFBFFFFFF ^ 0x38C53396)) & 0xD0913EFC) - (v367 & 0xFBFFFFFF ^ 0x38C53396) + 330784897) ^ 0xC86789E4 ^ (v373 - 462023130 + v383 - ((2 * (v373 - 462023130 + v383)) & 0x6ACA41B4) - 1251663654);
  v388 = 6419
       * ((((2 * (v367 ^ 0x96)) & 0xFC) - (v367 ^ 0x96) - 127) ^ 0xE4 ^ (v373 + v383 - ((2 * (v373 + 38 + v383)) & 0xB4)))
       + 14802214;
  v389 = STACK[0x6AB0];
  *(_BYTE *)(v389 + 190) = 62;
  v390 = STACK[0xDE60];
  v391 = v378 ^ v377 ^ *(_DWORD *)(v390
                                 + 4
                                 * (6419 * (HIBYTE(v382) ^ 0xD5)
                                  + 9872422
                                  - 8768
                                  * (((31350127
                                                   * (unint64_t)(6419 * (HIBYTE(v382) ^ 0xD5) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v390 + 4 * (6419 * BYTE2(v386) - 8768 * (((1959383 * (unint64_t)(6419 * BYTE2(v386))) >> 32) >> 2))) ^ *(_DWORD *)(v390 + 4 * (6419 * (BYTE1(v384) ^ 0xFB) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v384) ^ 0xFBu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v390 + 4 * (v388 - 8768 * (((31350127 * (unint64_t)v388) >> 32) >> 6)));
  v392 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * HIBYTE(v386)
                    + 9872422
                    - 8768 * (((31350127 * (unint64_t)(6419 * HIBYTE(v386) + 9872422)) >> 32) >> 6)));
  v393 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE2(v384) ^ 0x1A)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v384) ^ 0x1Au))) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6A30] + 1866) = 34;
  v394 = LODWORD(STACK[0x5EB8]) ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x5DA8]) ^ LODWORD(STACK[0x5C48]) ^ v393;
  *(_BYTE *)(STACK[0x6830] + 3361) = -103;
  v395 = v394 ^ v392 ^ *(_DWORD *)(v390
                                 + 4
                                 * ((6419
                                   * ((1816033804
                                     - (v382 ^ 0x26 | 0x6C3E7A0C)
                                     + (v382 ^ 0x26 | 0x93C185F3)) ^ 0x93C18567)
                                   + 14802214)
                                  % 0x2240)) ^ *(_DWORD *)(v390
                                                         + 4
                                                         * (6419 * BYTE1(v387)
                                                          + 1649683
                                                          - 8768
                                                          * (((1959383
                                                                           * (unint64_t)(6419
                                                                                              * BYTE1(v387)
                                                                                              + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x68F0] + 372) = -31;
  v396 = *(_DWORD *)(v390
                   + 4
                   * (6419 * (HIBYTE(v384) ^ 0x11)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v384) ^ 0x11) + 9872422)) >> 32) >> 6)));
  LODWORD(v390) = *(_DWORD *)(v390
                            + 4
                            * (6419 * BYTE2(v387)
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * BYTE2(v387))) >> 32) >> 2)));
  v397 = 6419 * HIBYTE(v387)
       + 9872422
       - 8768 * (((31350127 * (unint64_t)(6419 * HIBYTE(v387) + 9872422)) >> 32) >> 6);
  v398 = LODWORD(STACK[0x5F48]) ^ LODWORD(STACK[0x5FC0]) ^ LODWORD(STACK[0x5CB0]) ^ LODWORD(STACK[0x5494]) ^ v396;
  v399 = STACK[0xDE68];
  v400 = STACK[0xDE68];
  *(_BYTE *)(v399 + 639) = 81;
  v401 = STACK[0xDE60];
  v402 = STACK[0xDE60];
  LODWORD(v390) = v398 ^ *(_DWORD *)(v401
                                   + 4
                                   * (6419 * (BYTE1(v382) ^ 0x2C)
                                    + 1649683
                                    - 8768
                                    * (((1959383
                                                     * (unint64_t)(6419 * (BYTE1(v382) ^ 0x2Cu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v401 + 4 * (6419 * v386 + 14802214 - 8768 * (((31350127 * (unint64_t)(6419 * v386 + 14802214)) >> 32) >> 6))) ^ v390;
  v403 = (1571369028
        - (v384 ^ 0x840D00C3 | 0x5DA93044)
        + (v384 ^ 0x840D00C3 | 0xA256CFBB)) ^ 0x265BCFBD;
  v404 = *(_DWORD *)(STACK[0xDE60] + 4 * v397);
  *(_BYTE *)(v399 + 1625) = -92;
  v405 = v404 ^ v380 ^ *(_DWORD *)(v401
                                 + 4
                                 * (6419 * (BYTE2(v382) ^ 0xF0)
                                  - 8768
                                  * (((1959383 * (unint64_t)(6419 * (BYTE2(v382) ^ 0xF0u))) >> 32) >> 2))) ^ *(_DWORD *)(v401 + 4 * (6419 * BYTE1(v386) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * BYTE1(v386) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v401 + 4 * ((6419 * v403 + 14802214) % 0x2240));
  *(_BYTE *)(v399 + 1238) = 51;
  *(_BYTE *)(STACK[0x6A10] + 501) = -124;
  *(_BYTE *)(v399 + 1663) = -36;
  v406 = ((2 * (v405 ^ 0xEE)) & 0xBC) - (v405 ^ 0xEE) - 2112686687;
  *(_BYTE *)(v389 + 1525) = 82;
  v407 = *(_DWORD *)(v401
                   + 4
                   * (6419 * (BYTE2(v395) ^ 0x71)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v395) ^ 0x71u))) >> 32) >> 2)));
  LODWORD(v399) = *(_DWORD *)(v401
                            + 4
                            * (6419 * HIBYTE(v391)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * HIBYTE(v391) + 9872422)) >> 32) >> 6)));
  v408 = 6419 * (((unsigned __int16)(v390 ^ 0x422) >> 8) ^ 0xF9) + 1649683;
  *(_BYTE *)(v400 + 3400) = 24;
  v409 = *(_DWORD *)(v402 + 4 * (v408 - 8768 * (((1959383 * (unint64_t)v408) >> 32) >> 2)));
  *(_BYTE *)(v400 + 5744) = 42;
  LODWORD(v399) = LODWORD(STACK[0x6000]) ^ LODWORD(STACK[0x6078]) ^ LODWORD(STACK[0x5DB8]) ^ LODWORD(STACK[0x591C]) ^ v399 ^ v407;
  v410 = *(_DWORD *)(v402
                   + 4
                   * ((6419
                     * (((v406 & 0x8200C0CA ^ 0x28A0084A) + (v406 ^ 0xC353F4B0) - ((v406 ^ 0xC353F4B0) & 0x400000CA)) ^ 0xABE1C9CA)
                     + 14802214)
                    % 0x2240));
  *(_BYTE *)(v400 + 434) = 45;
  HIDWORD(v411) = 6419 * (BYTE2(v390) ^ 0xB5)
                - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v390) ^ 0xB5u))) >> 32) >> 2);
  LODWORD(v411) = HIDWORD(v411);
  v412 = *(_DWORD *)(v402
                   + 4
                   * (6419 * (HIBYTE(v395) ^ 0xDC)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v395) ^ 0xDC) + 9872422)) >> 32) >> 6)));
  v413 = *(_DWORD *)(v402 + 4 * ((v411 >> 28) >> 4));
  v414 = *(_DWORD *)(v402
                   + 4
                   * (6419 * (BYTE1(v405) ^ 0x4F)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v405) ^ 0x4Fu) + 1649683)) >> 32) >> 2)));
  LODWORD(v399) = v399 ^ v409;
  *(_BYTE *)(v400 + 2194) = -120;
  v415 = ((2 * (v391 ^ 0x69)) | 0x263C9EB6) - (v391 ^ 0x69) - 320753499;
  *(_BYTE *)(STACK[0x6A50] + 266) = 93;
  LODWORD(v389) = *(_DWORD *)(v402
                            + 4
                            * ((6419
                              * (((v415 & 0x508A7A7B ^ 0xC0807240)
                                + (v415 ^ 0x175E0C3B)
                                - ((v415 ^ 0x175E0C3B) & 0x508A7A7B)) ^ 0xD4CA3972)
                              + 14802214)
                             % 0x2240));
  v416 = v399 ^ v410;
  v417 = LODWORD(STACK[0x5D38]) ^ LODWORD(STACK[0x5EA0]) ^ LODWORD(STACK[0x5924]) ^ v375 ^ v412 ^ v414 ^ v413 ^ v389;
  LODWORD(v400) = 6419 * BYTE2(v391)
                - 8768 * (((1959383 * (unint64_t)(6419 * BYTE2(v391))) >> 32) >> 2);
  v418 = LODWORD(STACK[0x5948]) ^ LODWORD(STACK[0x6200]) ^ LODWORD(STACK[0x5818]) ^ LODWORD(STACK[0x6850]) ^ *(_DWORD *)(v402 + 4 * (6419 * (BYTE3(v390) ^ 0x51) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (BYTE3(v390) ^ 0x51) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v402 + 4 * (6419 * (BYTE2(v405) ^ 3) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v405) ^ 3u))) >> 32) >> 2))) ^ *(_DWORD *)(v402 + 4 * (6419 * BYTE1(v391) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * BYTE1(v391) + 1649683)) >> 32) >> 2)));
  v419 = STACK[0xDE60];
  v420 = STACK[0xDE60];
  v421 = v418 ^ *(_DWORD *)(STACK[0xDE60]
                          + 4
                          * (6419 * (v395 ^ 0x7E)
                           + 14802214
                           - 8768
                           * (((31350127
                                            * (unint64_t)(6419 * (v395 ^ 0x7Eu) + 14802214)) >> 32) >> 6)));
  LODWORD(v399) = *(_DWORD *)(v419
                            + 4
                            * (6419 * (HIBYTE(v405) ^ 0x1C)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (HIBYTE(v405) ^ 0x1C) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v419 + 4 * v400);
  *(_BYTE *)(STACK[0x6A40] + 2587) = 90;
  LODWORD(v419) = v399 ^ *(_DWORD *)(v419
                                   + 4
                                   * (6419 * (BYTE1(v395) ^ 0x78)
                                    + 1649683
                                    - 8768
                                    * (((1959383
                                                     * (unint64_t)(6419 * (BYTE1(v395) ^ 0x78u) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v419 + 4 * ((6419 * ((115668897 - (v390 ^ 0xF | 0x6E4F7A1) + (v390 ^ 0xF | 0xF91B085E)) ^ 0xF91B08DA) + 14802214) % 0x2240));
  LODWORD(v399) = (((v419 ^ 0xF34AF5D3) + 1184133395) ^ ((v419 ^ 0xAC461EB7) + 429431415) ^ ((v419 ^ 0x5F0CEB64)
                                                                                           - 355307610))
                + (((v381 ^ 0x49F20D7) + 151368882) ^ ((v381 ^ 0x82E9CFE0) - 1888265337) ^ ((v381 ^ 0x8E2F8AFE)
                                                                                          - 2085282151));
  HIDWORD(v411) = v399 + 6130062;
  LODWORD(v411) = v399 + 1146980750;
  HIDWORD(v411) = v411 >> 26;
  LODWORD(v411) = HIDWORD(v411);
  v422 = (((2
          * (((2 * (v419 & (v381 ^ 0x85965C9) ^ 0xF2402000)) | 0x623A9110) - (v419 & (v381 ^ 0x85965C9) ^ 0xF2402000))
          - 1648005392) ^ 0x79452EEF)
        + (v411 >> 6)
        + 1) ^ 0x75CB6BA7;
  v423 = (_BYTE *)STACK[0xDE68];
  v424 = STACK[0xDE68];
  v423[5380] = 5;
  LODWORD(v399) = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x62C8]) ^ *(_DWORD *)(v420
                                                                              + 4
                                                                              * (6419 * (BYTE1(v421) ^ 0x5F)
                                                                               + 1649683
                                                                               - 8768
                                                                               * (((1959383
                                                                                                * (unint64_t)(6419 * (BYTE1(v421) ^ 0x5Fu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v420 + 4 * (6419 * (BYTE2(v417) ^ 0xB0) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v417) ^ 0xB0u))) >> 32) >> 2))) ^ *(_DWORD *)(v420 + 4 * (6419 * (HIBYTE(v416) ^ 0xE1) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (HIBYTE(v416) ^ 0xE1) + 9872422)) >> 32) >> 6)));
  v425 = 6419 * (((v416 & 0xFC ^ 0x4B1) + (v416 & 3) - 1) ^ 0x486) + 14802214;
  v426 = *(_DWORD *)(v420
                   + 4
                   * (6419 * v422
                    + 14802214
                    - 8768
                    * (((31350127
                                     * (unint64_t)(6419 * v422 + 14802214)) >> 32) >> 6)));
  *(_BYTE *)(STACK[0x6AB0] + 61) = -59;
  v427 = *(_DWORD *)(v420
                   + 4
                   * (6419 * (BYTE2(v421) ^ 0xB1)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v421) ^ 0xB1u))) >> 32) >> 2)));
  v428 = *(_DWORD *)(v420
                   + 4
                   * (6419 * (HIBYTE(v417) ^ 0x8F)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v417) ^ 0x8F) + 9872422)) >> 32) >> 6)));
  LODWORD(STACK[0x66F0]) = *(_DWORD *)(v420
                                     + 4
                                     * (6419 * BYTE1(v422)
                                      + 1649683
                                      - 8768
                                      * (((1959383
                                                       * (unint64_t)(6419 * BYTE1(v422) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6930] + 3065) = 46;
  v423[343] = 91;
  LODWORD(v390) = *(_DWORD *)(v420
                            + 4 * (v425 - 8768 * (((31350127 * (unint64_t)v425) >> 32) >> 6)));
  v429 = v399 ^ v426;
  v423[108] = -2;
  v423[2467] = 117;
  v430 = (((2 * (v417 ^ 0xFC)) & 0xE0) - (v417 ^ 0xFC) + 349868175) ^ 0x208AD0DD;
  *(_BYTE *)(STACK[0x6AA0] + 3892) = 77;
  LODWORD(v389) = *(_DWORD *)(v420
                            + 4
                            * (6419 * (HIBYTE(v421) ^ 0x9B)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (HIBYTE(v421) ^ 0x9B) + 9872422)) >> 32) >> 6)));
  v431 = *(_DWORD *)(v420
                   + 4
                   * (6419 * BYTE2(v422)
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * BYTE2(v422))) >> 32) >> 2)));
  v432 = *(_DWORD *)(v420
                   + 4
                   * ((6419 * ((1386574532 - (v430 | 0x52A572C4) + (v430 | 0xAD5A8D3B)) ^ 0x990ACD3A) + 14802214)
                    % 0x2240));
  v433 = *(_DWORD *)(v420
                   + 4
                   * (6419 * (BYTE1(v416) ^ 0xAE)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v416) ^ 0xAEu) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x66E0] + 410) = -60;
  v434 = 6419 * (BYTE2(v416) ^ 0x9A)
       - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v416) ^ 0x9Au))) >> 32) >> 2);
  v435 = STACK[0xDE60];
  v436 = STACK[0xDE60];
  LODWORD(v400) = *(_DWORD *)(STACK[0xDE60]
                            + 4
                            * ((6419
                              * ((803337030
                                - (v421 ^ 0x2A)
                                + ((2 * (v421 ^ 0x2A)) | 0xA03C352E)
                                - 3549) ^ 0xD01E1A02)
                              + 14802214)
                             % 0x2240));
  v437 = *(_DWORD *)(STACK[0xDE60] + 4 * v434);
  LODWORD(v399) = *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * HIBYTE(v422) + 9872422) % 0x2240u));
  v438 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE1(v417) ^ 0x45)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v417) ^ 0x45u) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6A20] + 3945) = -6;
  v439 = *(_DWORD *)(v435
                   + 4
                   * (6419 * (HIBYTE(v429) ^ 0x57)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v429) ^ 0x57) + 9872422)) >> 32) >> 6)));
  *(_BYTE *)(v424 + 2816) = 11;
  v440 = STACK[0x54D4] & (LODWORD(STACK[0x5734]) ^ 0xB2465480) | LODWORD(STACK[0x54D8]);
  LODWORD(STACK[0x68D0]) = STACK[0x54F4] & (LODWORD(STACK[0x55BC]) ^ 0x8E20A56F) | LODWORD(STACK[0x54F0]);
  LODWORD(v424) = ((LODWORD(STACK[0x5AA0]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5AA8]) ^ 0xB9) << 8);
  LODWORD(v424) = ((v424 | LODWORD(STACK[0x5AB8])) & 0x1EFC27 ^ 0x1E7C04)
                + ((v424 | LODWORD(STACK[0x5AB8])) & 0xE103D8 ^ 0x200099);
  LODWORD(v424) = (((((_DWORD)v424 << 8) - 256) ^ 0xC18090FF) & (LODWORD(STACK[0x5AC8]) ^ 0xCDE8B154) | (((_DWORD)v424 << 8) - 256) & 0x32174E00) ^ 0x32074E00;
  LODWORD(STACK[0x6850]) = v424 - ((2 * v424) & 0x4BF2E6AE) + 637104983;
  LODWORD(v424) = (LODWORD(STACK[0x6690]) << 16) | ((LODWORD(STACK[0x5AD0]) ^ 0xB9) << 8);
  LODWORD(v424) = ((v424 ^ 0xFF07FFFF) & (LODWORD(STACK[0x6658]) ^ 0xEB389624) | v424 & 0xC76900) ^ 0x10C40860;
  LODWORD(v424) = ((_DWORD)v424 + 15809444 - ((2 * (_DWORD)v424) & 0xE27748)) << 8;
  LODWORD(v424) = (v424 ^ 0x6112A4FF) & (LODWORD(STACK[0x5BA0]) ^ 0xEDB3A4B2) | v424 & 0x124C5B00;
  v441 = LODWORD(STACK[0x6240]) ^ 0x6E4F5084 ^ LODWORD(STACK[0x6050]) ^ LODWORD(STACK[0x5D70]) ^ LODWORD(STACK[0x59A0]);
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x6188]) + LODWORD(STACK[0x60E8]);
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x60F0]) + LODWORD(STACK[0x5F88]);
  v442 = ((LODWORD(STACK[0x6698]) ^ 0x31018FF) & (LODWORD(STACK[0x6608]) ^ 0x23525CD3) | STACK[0x6698] & 0xDCAD8300) ^ 0x14280311;
  LODWORD(v411) = __ROR4__(LODWORD(STACK[0x5D10]) ^ LODWORD(STACK[0x5CA0]) ^ LODWORD(STACK[0x5968]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x65F8]) ^ 0x3DD5974B, 12) ^ 0x9EC7AB0C;
  HIDWORD(v411) = v411;
  LODWORD(v389) = LODWORD(STACK[0x59B0]) ^ LODWORD(STACK[0x5CA8]) ^ LODWORD(STACK[0x6600]) ^ v440 ^ v389 ^ v431 ^ v432 ^ v433;
  v443 = (v441
        - ((2 * v441) & 0x93A78140)
        + 1238614176
        - ((2 * (v441 - ((2 * v441) & 0x93A78140) + 1238614176)) & 0x98DD0CEE)
        - 865171849) ^ v427 ^ v428 ^ v390 ^ 0x85BD46D7 ^ LODWORD(STACK[0x66F0]);
  LODWORD(v399) = LODWORD(STACK[0x5FC8]) ^ LODWORD(STACK[0x6108]) ^ LODWORD(STACK[0x5D00]) ^ LODWORD(STACK[0x5820]) ^ v400 ^ v437 ^ v438 ^ v399;
  v444 = *(_DWORD *)(v435
                   + 4
                   * (6419 * (BYTE1(v389) ^ 0x4E)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v389) ^ 0x4Eu) + 1649683)) >> 32) >> 2)));
  v445 = *(_DWORD *)(v435
                   + 4
                   * (6419 * HIBYTE(v443)
                    + 9872422
                    - 8768 * (((31350127 * (unint64_t)(6419 * HIBYTE(v443) + 9872422)) >> 32) >> 6)));
  v446 = (((2 * (v429 ^ 0x75)) & 0xF2) - (v429 ^ 0x75) - 1728493690) ^ 0xB8F36506;
  LODWORD(v400) = *(_DWORD *)(v435
                            + 4
                            * (6419 * BYTE2(v443)
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * BYTE2(v443))) >> 32) >> 2)));
  LODWORD(v390) = *(_DWORD *)(v435
                            + 4
                            * (6419 * (BYTE1(v399) ^ 0xB2)
                             + 1649683
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * (BYTE1(v399) ^ 0xB2u) + 1649683)) >> 32) >> 2)));
  v447 = *(_DWORD *)(v435
                   + 4
                   * ((6419
                     * ((-1366072004
                       - (v399 ^ 0x828A0491 | 0xAE93653C)
                       + (v399 ^ 0x828A0491 | 0x516C9AC3)) ^ 0xD3E69E91)
                     + 14802214)
                    % 0x2240));
  LODWORD(v435) = (6419 * ((1297617116 - (v446 | 0x4D5810DC) + (v446 | 0xB2A7EF23)) ^ 0x92ADCD37) + 14802214) % 0x2240;
  v448 = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x6138]) ^ LODWORD(STACK[0x5D80]) ^ v439 ^ v400 ^ v444 ^ v447;
  LODWORD(v400) = LODWORD(STACK[0x5F38]) ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x587C]) ^ LODWORD(STACK[0x54CC]) ^ v445 ^ v390 ^ *(_DWORD *)(v436 + 4 * (6419 * (BYTE2(v389) ^ 0x6F) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v389) ^ 0x6Fu))) >> 32) >> 2))) ^ *(_DWORD *)(v436 + 4 * v435);
  v449 = LODWORD(STACK[0x61E8]) ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x6058]) ^ v424 ^ *(_DWORD *)(v436 + 4 * (6419 * (BYTE2(v399) ^ 0xE) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v399) ^ 0xEu))) >> 32) >> 2))) ^ *(_DWORD *)(v436 + 4 * (6419 * (BYTE1(v429) ^ 0xEF) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v429) ^ 0xEFu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v436 + 4 * (6419 * (BYTE3(v389) ^ 0xA6) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (BYTE3(v389) ^ 0xA6) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v436 + 4 * (6419 * v443 + 14802214 - 8768 * (((31350127 * (unint64_t)(6419 * v443 + 14802214)) >> 32) >> 6)));
  LODWORD(v424) = 6419 * (BYTE3(v399) ^ 0x1A)
                + 9872422
                - 8768
                * (((31350127 * (unint64_t)(6419 * (BYTE3(v399) ^ 0x1A) + 9872422)) >> 32) >> 6);
  v450 = STACK[0xDE68];
  v451 = STACK[0xDE68] + 4902;
  *(_BYTE *)(v450 + 2285) = 26;
  *(_BYTE *)(v450 + 4902) = -63;
  LODWORD(v424) = *(_DWORD *)(v436 + 4 * v424);
  *(_BYTE *)(v450 + 305) = 4;
  v452 = *(_DWORD *)(v436
                   + 4
                   * (6419 * (BYTE2(v429) ^ 0xFB)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v429) ^ 0xFBu))) >> 32) >> 2)));
  *(_BYTE *)(v450 + 1921) = 91;
  LODWORD(v450) = *(_DWORD *)(v436
                            + 4
                            * (6419 * BYTE1(v443)
                             + 1649683
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * BYTE1(v443) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(v451 + 569) = -40;
  LODWORD(v424) = STACK[0x6190] & 0xFFF7FFFF ^ LODWORD(STACK[0x6160]) ^ LODWORD(STACK[0x66E0]) ^ v424 ^ v452 ^ v450;
  v453 = STACK[0xDE60];
  LODWORD(v424) = v424 ^ *(_DWORD *)(STACK[0xDE60]
                                   + 4
                                   * ((6419
                                     * (((v389 & 0x3F ^ 0x89D4D410) + (v389 & 0xC0 ^ 0x4000081) - 1) ^ 0x8DD4D43B)
                                     + 14802214)
                                    % 0x2240));
  LOWORD(v443) = v400 ^ 0xD01;
  LODWORD(v436) = LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x5C30]) ^ LODWORD(STACK[0x65F0]) ^ *(_DWORD *)(v453 + 4 * (6419 * (HIBYTE(v448) ^ 0x53) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (HIBYTE(v448) ^ 0x53) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v453 + 4 * (6419 * (BYTE1(v449) ^ 0x3B) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v449) ^ 0x3Bu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v453 + 4 * (6419 * (v424 ^ 0xD9) + 14802214 - 8768 * (((31350127 * (unint64_t)(6419 * (v424 ^ 0xD9u) + 14802214)) >> 32) >> 6))) ^ *(_DWORD *)(v453 + 4 * (6419 * (BYTE2(v400) ^ 0xE7) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v400) ^ 0xE7u))) >> 32) >> 2)));
  LODWORD(v451) = ((v448 ^ 0x89) + (v448 & 0xA7 ^ 0x3E808126) - ((v448 ^ 0x89) & 0xA7)) ^ 0x3E8401A5;
  v454 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE2(v449) ^ 0x40)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v449) ^ 0x40u))) >> 32) >> 2)));
  v455 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE1(v424) ^ 0x88)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v424) ^ 0x88u) + 1649683)) >> 32) >> 2)));
  LODWORD(v400) = *(_DWORD *)(STACK[0xDE60]
                            + 4
                            * (6419 * (BYTE3(v400) ^ 0xC0)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (BYTE3(v400) ^ 0xC0) + 9872422)) >> 32) >> 6)));
  v456 = STACK[0xDE68];
  v457 = v456 + 5433;
  *(_BYTE *)(v456 + 5433) = 92;
  v458 = LODWORD(STACK[0x5B80]) ^ LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x584C]) ^ LODWORD(STACK[0x6618]) ^ v454 ^ v455 ^ v400 ^ *(_DWORD *)(v453 + 4 * ((6419 * ((((2 * (_DWORD)v451) & 0x13C6) - (_DWORD)v451 - 1666320868) ^ 0x9CA9765D) + 14802214) % 0x2240));
  *(_BYTE *)(v456 + 290) = -13;
  v459 = STACK[0xDE60];
  LODWORD(v451) = *(_DWORD *)(STACK[0xDE60]
                            + 4
                            * (6419 * (HIBYTE(v449) ^ 0x6F)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (HIBYTE(v449) ^ 0x6F) + 9872422)) >> 32) >> 6)));
  LODWORD(v453) = *(_DWORD *)(STACK[0xDE60]
                            + 4
                            * (6419 * (BYTE2(v424) ^ 0x89)
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * (BYTE2(v424) ^ 0x89u))) >> 32) >> 2)));
  *(_BYTE *)(v456 + 123) = 48;
  LODWORD(v401) = (((2 * (v443 ^ 0xD1)) | 0x299E9EF4) - (v443 ^ 0xD1) - 349130618) ^ 0x74DA0F7A;
  v460 = *(_DWORD *)(v459
                   + 4
                   * (6419 * (BYTE1(v448) ^ 0x40)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v448) ^ 0x40u) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(v456 + 1496) = 50;
  LODWORD(v456) = *(_DWORD *)(v459
                            + 4
                            * ((6419 * ((((2 * (_DWORD)v401) | 0xAE73B5A2) - (_DWORD)v401 + 684074287) ^ 0xB72C9A92)
                              + 14802214)
                             % 0x2240));
  *(_BYTE *)(STACK[0x68B0] + 1472) = -20;
  LODWORD(v424) = *(_DWORD *)(v459
                            + 4
                            * ((6419
                              * (((BYTE3(v424) ^ 0x9396DA8C) + 1085317823) ^ ((BYTE3(v424) ^ 0x1A297311) - 921760988) ^ ((BYTE3(v424) ^ 0x89BFA970) + 1520030019))
                              - 1829909626)
                             % 0x2240));
  *(_BYTE *)(v457 + 402) = -116;
  LODWORD(v453) = LODWORD(STACK[0x6140]) ^ LODWORD(STACK[0x61C0]) ^ LODWORD(STACK[0x5EC0]) ^ LODWORD(STACK[0x5970]) ^ v451 ^ v460 ^ v453;
  v461 = *(_DWORD *)(v459
                   + 4
                   * (6419 * (BYTE2(v448) ^ 0x8E)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v448) ^ 0x8Eu))) >> 32) >> 2)));
  LODWORD(v451) = *(_DWORD *)(v459
                            + 4
                            * (6419 * (BYTE1(v443) ^ 0x98)
                             + 1649683
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * (BYTE1(v443) ^ 0x98u) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6A80] + 3740) = 37;
  v462 = *(_DWORD *)(v459
                   + 4
                   * (6419 * (v449 ^ 0xB8)
                    + 14802214
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (v449 ^ 0xB8u) + 14802214)) >> 32) >> 6)));
  v463 = v453 ^ v456;
  v464 = ((v411 >> 20) + 238775416 - ((2 * (v411 >> 20)) & 0x1C76D8F0)) ^ v461 ^ v424 ^ v462 ^ v451 ^ 0x748AA594;
  *(_BYTE *)(STACK[0x6A70] + 46) = -35;
  v465 = (_BYTE *)STACK[0xDE68];
  v466 = STACK[0xDE68] + 5342;
  v465[950] = -85;
  v465[1701] = 68;
  v465[6093] = -72;
  v467 = STACK[0xDE60];
  LODWORD(v451) = *(_DWORD *)(STACK[0xDE60]
                            + 4
                            * (6419 * (BYTE3(v436) ^ 0xDA)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (BYTE3(v436) ^ 0xDA) + 9872422)) >> 32) >> 6)));
  v468 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE2(v458) ^ 0x5C)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v458) ^ 0x5Cu))) >> 32) >> 2)));
  *(_BYTE *)(v466 + 478) = 1;
  v469 = LODWORD(STACK[0x5E68]) ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x5C70]) ^ LODWORD(STACK[0x5860]) ^ v451 ^ v468;
  *(_BYTE *)(v466 + 76) = 121;
  LODWORD(v420) = v469 ^ *(_DWORD *)(v467
                                   + 4
                                   * (6419 * v464
                                    + 14802214
                                    - 8768
                                    * (((31350127
                                                     * (unint64_t)(6419 * v464
                                                                        + 14802214)) >> 32) >> 6))) ^ *(_DWORD *)(v467 + 4 * (6419 * (BYTE1(v463) ^ 0x7D) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v463) ^ 0x7Du) + 1649683)) >> 32) >> 2)));
  v470 = *(_DWORD *)(v467
                   + 4
                   * (6419 * (HIBYTE(v458) ^ 0x9C)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v458) ^ 0x9C) + 9872422)) >> 32) >> 6)));
  *(_BYTE *)(STACK[0x6AA0] + 3869) = -46;
  LODWORD(v451) = *(_DWORD *)(v467
                            + 4
                            * (6419 * (BYTE2(v463) ^ 0xF9)
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * (BYTE2(v463) ^ 0xF9u))) >> 32) >> 2)));
  *(_BYTE *)STACK[0x6990] = -29;
  *(_BYTE *)v466 = -87;
  v471 = LODWORD(STACK[0x5D40]) ^ LODWORD(STACK[0x6130]) ^ LODWORD(STACK[0x66F8]) ^ (v442
                                                                                   - ((2 * v442) & 0x4F850BBC)
                                                                                   - 1480423970) ^ v470 ^ *(_DWORD *)(v467 + 4 * (6419 * BYTE1(v464) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * BYTE1(v464) + 1649683)) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6960] + 933) = 35;
  v472 = v471 ^ *(_DWORD *)(v467
                          + 4
                          * ((6419
                            * (((v436 ^ 0x14058009)
                              + (v436 & 0x5A ^ 0x2107152)
                              - ((v436 ^ 0x14058009) & 0x405005A)) ^ 0x1210F15E)
                            + 14802214)
                           % 0x2240)) ^ v451;
  v473 = *(_DWORD *)(v467
                   + 4
                   * (6419 * (HIBYTE(v463) ^ 0x15)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v463) ^ 0x15) + 9872422)) >> 32) >> 6)));
  v474 = (_BYTE *)STACK[0xDE68];
  v475 = STACK[0xDE68];
  v474[2649] = -90;
  v476 = STACK[0xDE60];
  v477 = STACK[0xDE60];
  LODWORD(v467) = LODWORD(STACK[0x59A8]) ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6850]) ^ *(_DWORD *)(v467 + 4 * (6419 * BYTE2(v464) - 8768 * (((1959383 * (unint64_t)(6419 * BYTE2(v464))) >> 32) >> 2))) ^ *(_DWORD *)(v476 + 4 * ((6419 * (((v458 ^ 0xFFFFFF79) + 1879811618 + ((2 * v458) | 0x1FE8B3BE)) ^ 0x8FF459FC) + 14802214) % 0x2240)) ^ *(_DWORD *)(v476 + 4 * (6419 * (BYTE1(v436) ^ 0x54) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v436) ^ 0x54u) + 1649683)) >> 32) >> 2))) ^ v473;
  v478 = STACK[0x6AC0];
  *(_BYTE *)(v478 + 8) = 51;
  LODWORD(v466) = *(_DWORD *)(v476
                            + 4
                            * (6419 * HIBYTE(v464)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * HIBYTE(v464) + 9872422)) >> 32) >> 6)));
  *(_BYTE *)(STACK[0x6A90] + 1457) = 83;
  LODWORD(v411) = __ROR4__(*(_DWORD *)(v476+ 4* (6419 * (BYTE2(v436) ^ 0x67)- 8768* (((1959383 * (unint64_t)(6419 * (BYTE2(v436) ^ 0x67u))) >> 32) >> 2))) ^ 0x6F31928D, 14);
  LODWORD(v466) = LODWORD(STACK[0x5A88]) ^ LODWORD(STACK[0x5FF0]) ^ LODWORD(STACK[0x5840]) ^ LODWORD(STACK[0x68D0]) ^ v466 ^ *(_DWORD *)(v476 + 4 * (6419 * (BYTE1(v458) ^ 0x9B) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v458) ^ 0x9Bu) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v476 + 4 * ((6419 * (((v463 ^ 0xC3) + 198780183 - ((2 * (v463 ^ 0xC3)) & 0x52) + 18) ^ 0xBD92517u) + 14802214) % 0x2240));
  v474[2323] = -89;
  v474[3969] = 39;
  *(_BYTE *)(v478 + 2534) = -127;
  v474[2672] = 45;
  LODWORD(v411) = __ROR4__(v411 ^ 0xBE53BD08, 18);
  LODWORD(v436) = v466 ^ v411;
  LODWORD(v451) = ((2 * ((v466 ^ v411) ^ 0x56)) & 0x1D8)
                - ((v466 ^ v411) ^ 0x56)
                - 975453933;
  LODWORD(v466) = 6419 * (((((_DWORD)v467 << 12) & 0xFF00000 ^ 0xC000000u) + 269484032) >> 20);
  v479 = LODWORD(STACK[0x5FD8]) ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x5E50]) ^ LODWORD(STACK[0x5C78]) ^ *(_DWORD *)(v476 + 4 * (6419 * (BYTE3(v420) ^ 0x8E) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (BYTE3(v420) ^ 0x8E) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v477 + 4 * (6419 * (BYTE2(v472) ^ 0xF3) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v472) ^ 0xF3u))) >> 32) >> 2))) ^ *(_DWORD *)(v477 + 4 * (v466 - 8768 * (((1959383 * (unint64_t)v466) >> 32) >> 2))) ^ *(_DWORD *)(v477 + 4 * ((6419 * (((v451 & 0x51237CD ^ 0x368D) + (v451 ^ 0x7FB0172) - ((v451 ^ 0x7FB0172) & 0x200B7CD)) ^ 0xC532774D) + 14802214) % 0x2240));
  *(_BYTE *)(v475 + 1079) = 14;
  *(_BYTE *)(STACK[0x69C0] + 607) = 51;
  LODWORD(v466) = *(_DWORD *)(v477
                            + 4
                            * (6419 * (HIBYTE(v472) ^ 0x3A)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (HIBYTE(v472) ^ 0x3A) + 9872422)) >> 32) >> 6)));
  LODWORD(v451) = *(_DWORD *)(v477
                            + 4
                            * (6419 * (BYTE2(v467) ^ 0x7F)
                             - 8768
                             * (((1959383 * (unint64_t)(6419 * (BYTE2(v467) ^ 0x7Fu))) >> 32) >> 2)));
  v480 = *(_DWORD *)(v477
                   + 4
                   * (6419 * (BYTE1(v436) ^ 0xE)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v436) ^ 0xEu) + 1649683)) >> 32) >> 2)));
  LODWORD(v476) = *(_DWORD *)(v477
                            + 4
                            * (6419 * (v420 ^ 0xBC)
                             + 14802214
                             - 8768
                             * (((31350127
                                              * (unint64_t)(6419 * (v420 ^ 0xBCu) + 14802214)) >> 32) >> 6)));
  *(_BYTE *)(STACK[0x66D8] + 463) = 106;
  v481 = *(_DWORD *)(v477
                   + 4
                   * (6419 * (BYTE3(v467) ^ 0xB0)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (BYTE3(v467) ^ 0xB0) + 9872422)) >> 32) >> 6)));
  v482 = LODWORD(STACK[0x5F98]) ^ LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x5528]) ^ LODWORD(STACK[0x5520]) ^ v466 ^ v451 ^ v476 ^ v480;
  v483 = *(_DWORD *)(v477
                   + 4
                   * (6419 * (BYTE2(v436) ^ 0x72)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v436) ^ 0x72u))) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x66D0] + 3285) = 60;
  *(_BYTE *)(v475 + 472) = 12;
  LODWORD(v466) = 6419
                * (((v472 ^ 0x44EB) + (v472 & 0x24 ^ 0x204) - ((v472 ^ 0x44EB) & 0x24)) & 0x3FF ^ 0x2AD)
                + 14802214;
  LODWORD(v476) = 6419 * (BYTE3(v436) ^ 0x28)
                + 9872422
                - 8768
                * (((31350127 * (unint64_t)(6419 * (BYTE3(v436) ^ 0x28) + 9872422)) >> 32) >> 6);
  LODWORD(v459) = 6419 * (BYTE2(v420) ^ 0x21)
                - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v420) ^ 0x21u))) >> 32) >> 2);
  *(_BYTE *)(STACK[0x69E0] + 167) = 47;
  v484 = STACK[0xDE60];
  v485 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (v466
                    - 8768 * (((31350127 * (unint64_t)v466) >> 32) >> 6)));
  v486 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE1(v420) ^ 0x4C)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v420) ^ 0x4Cu) + 1649683)) >> 32) >> 2)));
  LODWORD(v477) = *(_DWORD *)(STACK[0xDE60] + 4 * v476);
  v487 = *(_DWORD *)(STACK[0xDE60] + 4 * v459);
  *(_BYTE *)STACK[0x66E8] = -14;
  v488 = *(_DWORD *)(v484
                   + 4
                   * (6419 * (BYTE1(v472) ^ 0xB5)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v472) ^ 0xB5u) + 1649683)) >> 32) >> 2)));
  LODWORD(v456) = *(_DWORD *)(v484
                            + 4
                            * ((6419
                              * ((-1813324338
                                - (v467 ^ 0x180421A5 | 0x93EADDCE)
                                + (v467 ^ 0x180421A5 | 0x6C152231)) ^ 0x74110312)
                              + 14802214)
                             % 0x2240));
  v489 = STACK[0xDE68];
  *(_BYTE *)(v489 + 17) = -121;
  *(_BYTE *)(STACK[0x6A10] + 539) = 77;
  v490 = *(_DWORD *)(v484
                   + 4
                   * (6419 * (HIBYTE(v479) ^ 0xA0)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v479) ^ 0xA0) + 9872422)) >> 32) >> 6)));
  *(_BYTE *)(v489 + 3825) = 6;
  LODWORD(v489) = ((((v490 & 0x4000 ^ 0xCF457F7F) + 2130634719) ^ 0xD951F741) + 1523718198) ^ ((((v490 & 0x4000 ^ 0xCF457F7F)
                                                                                               + 2130634719) ^ 0x85072AD3)
                                                                                             + 109364648) ^ ((((v490 & 0x4000 ^ 0xCF457F7F) + 2130634719) ^ 0x1212FACC) - 1852762695);
  v491 = v489 - 1462035824;
  LODWORD(v451) = (v491 ^ 0x441C9C40) & (2 * (v491 & 0x895D1D45)) ^ v491 & 0x895D1D45;
  LODWORD(v476) = ((2 * (v491 ^ 0x569CB6CA)) ^ 0xBF83571E) & (v491 ^ 0x569CB6CA) ^ (2 * (v491 ^ 0x569CB6CA)) & 0x5FC1AB8E;
  LODWORD(v451) = (v476 ^ 0xF80030C) & (4 * v451) ^ v451;
  LODWORD(v476) = ((4 * (v476 ^ 0x4040A881)) ^ 0x7F06AE3C) & (v476 ^ 0x4040A881) ^ (4 * (v476 ^ 0x4040A881)) & 0xDFC1AB8C;
  LODWORD(v451) = (v476 ^ 0x5F00AA00) & (16 * v451) ^ v451;
  LODWORD(v476) = ((16 * (v476 ^ 0x80C10183)) ^ 0xFC1AB8F0) & (v476 ^ 0x80C10183) ^ (16 * (v476 ^ 0x80C10183)) & 0xDFC1AB80;
  LODWORD(v451) = v451 ^ 0xDFC1AB8F ^ (v476 ^ 0xDC00A800) & ((_DWORD)v451 << 8);
  v492 = *(_DWORD *)(v484
                   + 4
                   * (6419 * (BYTE2(v482) ^ 0xEE)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v482) ^ 0xEEu))) >> 32) >> 2)));
  LODWORD(v466) = (v489 - 1462035824) ^ (2
                                       * (((_DWORD)v451 << 16) & 0x5FC10000 ^ v451 ^ (((_DWORD)v451 << 16) ^ 0x2B8F0000) & (((v476 ^ 0x3C1030F) << 8) & 0x5FC10000 ^ 0x1E400000 ^ (((v476 ^ 0x3C1030F) << 8) ^ 0x41AB0000) & (v476 ^ 0x3C1030F))));
  v112 = ((v466 ^ 0x21DC4A5B) & (v492 ^ 0x65B70AA) ^ v466 & 0x437FA255) == 22807121;
  LODWORD(v466) = (v487 ^ 0x76F4D4BD) & (v477 ^ 0x4524D2FF) ^ v477 & 0x33D00642;
  LODWORD(v466) = 2 * ((v466 & 0x396B742C ^ 0x93008) + (v466 ^ 0xF97245B7) - ((v466 ^ 0xF97245B7) & 0x396B742C));
  LODWORD(v466) = (((v477 ^ 0x8EFB7767) + 1896122521) ^ ((v477 ^ 0xA6A72E6C) + 1498993044) ^ ((v477 ^ 0x6D788BF4)
                                                                                            - 1836616692))
                + (((v487 ^ 0xCE9AB6A7) + 828721497) ^ ((v487 ^ 0x48246551) - 1210344785) ^ ((v487 ^ 0xC39A0109)
                                                                                           + 1013317367))
                - (((v466 ^ 0x3BF5F031) - 507655914) ^ ((v466 ^ 0xA90C6CCB) + 1933858288) ^ ((v466 ^ 0x10CBFB48)
                                                                                           - 897334675))
                + 649937485;
  LODWORD(v451) = (v466 ^ 0x3AE4D940) & (2 * (v466 & 0xBC06C248)) ^ v466 & 0xBC06C248;
  LODWORD(v476) = ((2 * (v466 ^ 0x2E15D40)) ^ 0x7DCF3E10) & (v466 ^ 0x2E15D40) ^ (2 * (v466 ^ 0x2E15D40)) & 0xBEE79F08;
  LODWORD(v451) = (v476 ^ 0x30071A00) & (4 * v451) ^ v451;
  LODWORD(v476) = ((4 * (v476 ^ 0x82208108)) ^ 0xFB9E7C20) & (v476 ^ 0x82208108) ^ (4 * (v476 ^ 0x82208108)) & 0xBEE79F08;
  LODWORD(v451) = (v476 ^ 0xBA861C00) & (16 * v451) ^ v451;
  LODWORD(v476) = ((16 * (v476 ^ 0x4618308)) ^ 0xEE79F080) & (v476 ^ 0x4618308) ^ (16 * (v476 ^ 0x4618308)) & 0xBEE79F00;
  LODWORD(v451) = v451 ^ 0xBEE79F08 ^ (v476 ^ 0xAE619000) & ((_DWORD)v451 << 8);
  v493 = LODWORD(STACK[0x5E30]) ^ LODWORD(STACK[0x6370]) ^ LODWORD(STACK[0x5C88]) ^ LODWORD(STACK[0x5C08]) ^ v488 ^ v456 ^ v466 ^ (2 * (((_DWORD)v451 << 16) & 0x3EE70000 ^ v451 ^ (((_DWORD)v451 << 16) ^ 0x1F080000) & (((v476 ^ 0x10860F08) << 8) & 0x3EE70000 ^ 0x18600000 ^ (((v476 ^ 0x10860F08) << 8) ^ 0x679F0000) & (v476 ^ 0x10860F08))));
  v494 = 1147841254 - v489;
  if (v112)
    v495 = v491;
  else
    v495 = v494;
  v496 = -1929317484 - LODWORD(STACK[0x55B8]) + (STACK[0x55B4] & 0xE5FDFAF0);
  v497 = STACK[0x56FC] & (LODWORD(STACK[0x57D4]) ^ 0xDFCED32F) | LODWORD(STACK[0x56F8]);
  LODWORD(STACK[0x68D0]) = LODWORD(STACK[0x5594]) + 1258588409;
  v498 = STACK[0x56F0] & (LODWORD(STACK[0x57D0]) ^ 0x6CC8C1B2) | LODWORD(STACK[0x56EC]);
  v499 = (LODWORD(STACK[0x66A8]) << 16) | ((LODWORD(STACK[0x5BA8]) ^ 0xB9) << 8);
  v500 = ((v499 ^ 0xB74298FF) & (LODWORD(STACK[0x5BB0]) ^ 0xB7D398AB) | v499 & 0x2C6700) ^ 0x2C416C;
  v501 = ((v500 + 4445272 - ((2 * v500) & 0x87BD5A)) << 8) + 677120;
  v502 = (v501 ^ 0x4B002CFF) & (LODWORD(STACK[0x66A8]) ^ 0x5F052C64) | v501 & 0xA0FAD300;
  v503 = (v502 & 0xE7358F9E ^ 0xC7050C9D) + (v502 & 0x18CA7061);
  v504 = (LODWORD(STACK[0x66A0]) << 16) | ((LODWORD(STACK[0x5BD0]) ^ 0xB9) << 8);
  v505 = (v504 ^ 0x44F4FF) & (LODWORD(STACK[0x6690]) ^ 0xCCF481) | v504 & 0x330B00;
  v506 = ((v505 << 8) ^ 0x20845FF) & (LODWORD(STACK[0x5C28]) ^ 0x23884DAC) | (v505 << 8) & 0xDC77B200;
  v507 = LODWORD(STACK[0x6590]) ^ 0xBDA28BF4 ^ v497;
  v508 = LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x5AC0]) ^ LODWORD(STACK[0x5F68]);
  v509 = LODWORD(STACK[0x6688]) ^ 0xED5B15AB;
  v510 = ((~LODWORD(STACK[0x65B8]) | 0x20000FF) & (LODWORD(STACK[0x5F78]) ^ 0x4EFA0B1C) | STACK[0x5F60] & 0xB105F400) ^ 0x3A42758F;
  LODWORD(STACK[0x6850]) = ((2 * v510) & 0x609E5822) - v510 + 1303434222;
  LODWORD(STACK[0x6890]) += v509;
  v511 = LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x61DC]) ^ 0x4A6D4718 ^ LODWORD(STACK[0x6558]) ^ (v496 + 3827);
  v512 = v511 - ((2 * v511) & 0x5BEF5028) - 1376278508;
  v513 = LODWORD(STACK[0x61F8]) ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x6118]) ^ LODWORD(STACK[0x5F28]) ^ v481 ^ v485 ^ v486 ^ v483;
  v514 = ((2 * (v490 & 0xFFFFBFFF ^ 0x1D738C0A)) | 0xE3533114) - (v490 & 0xFFFFBFFF ^ 0x1D738C0A) - 1906940042;
  v515 = (((v492 ^ 0xD48E53C5) + 728869947) ^ ((v492 ^ 0x886C404F) + 2006171569) ^ ((v492 ^ 0x19C6C175) - 432456053))
       - 546929441
       + v495;
  v516 = (2 * (v515 & 0xEF1B6B65)) & (v515 ^ 0xC576E7DC) ^ v515 & 0xEF1B6B65 ^ ((2 * (v515 & 0xEF1B6B65)) & 0xA248488 | 0x490000);
  v517 = (2 * (v515 ^ 0xC576E7DC)) & 0x2A6D8CB8 ^ 0x2A248489 ^ ((2 * (v515 ^ 0xC576E7DC)) ^ 0x54DB1972) & (v515 ^ 0xC576E7DC);
  v518 = (4 * v516) & 0x2A6D8CB8 ^ v516 ^ ((4 * v516) ^ 0x1240000) & v517;
  v519 = (4 * v517) & 0x2A6D8CB8 ^ 0x2498C19 ^ ((4 * v517) ^ 0xA9B632E4) & v517;
  v520 = (16 * v518) & 0x2A6D8CB0 ^ v518 ^ ((16 * v518) ^ 0x6D00000) & v519;
  v521 = (16 * v519) & 0x2A6D8CB0 ^ 0x8250429 ^ ((16 * v519) ^ 0xA6D8CB90) & v519;
  v522 = v520 ^ 0x408CB9 ^ (v520 << 8) & 0x2A6D8C00 ^ ((v520 << 8) ^ 0x2D000000) & v521;
  v523 = (v522 << 16) & 0x2A6D0000 ^ v522 ^ ((v522 << 16) ^ 0xCB90000) & ((v521 << 8) & 0x2A6D0000 ^ 0x2610000 ^ ((v521 << 8) ^ 0x6D8C0000) & v521);
  v524 = *(_DWORD *)(v484
                   + 4
                   * (6419 * (HIBYTE(v482) ^ 0x70)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v482) ^ 0x70) + 9872422)) >> 32) >> 6)));
  v525 = *(_DWORD *)(v484
                   + 4
                   * (6419 * (BYTE2(v513) ^ 0x56)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v513) ^ 0x56u))) >> 32) >> 2)));
  v526 = LODWORD(STACK[0x5FD0]) ^ LODWORD(STACK[0x62B8]) ^ v507 ^ *(_DWORD *)(v484
                                                                            + 4
                                                                            * (6419 * (BYTE1(v513) ^ 0x2C)
                                                                             + 1649683
                                                                             - 8768
                                                                             * (((1959383
                                                                                              * (unint64_t)(6419 * (BYTE1(v513) ^ 0x2Cu) + 1649683)) >> 32) >> 2))) ^ v514 ^ *(_DWORD *)(v484 + 4 * ((6419 * (((v493 ^ 0x74) - ((2 * (v493 ^ 0x74)) & 0x46) + 5923) ^ 0x174Cu) + 14802214) % 0x2240)) ^ v515 ^ (2 * v523);
  v527 = (((2 * (v479 ^ 0x80)) | 0x8DD54604) - (v479 ^ 0x80) - 1189782274) ^ 0xFE02381;
  v528 = (6419 * ((-1752022401 - (v527 | 0x9792427F) + (v527 | 0x686DBD80)) ^ 0x21673DA0) + 14802214) % 0x2240;
  if (((2 * (v493 & 0x4000000 ^ 0x85202A42)) | 0x82D8D9E6) - (v493 & 0x4000000 ^ 0x85202A42) == 28881828)
    v529 = 4;
  else
    v529 = -4;
  v530 = v508 ^ v524 ^ v525;
  *(_BYTE *)(STACK[0x69F0] + 1449) = -22;
  v531 = STACK[0xDE60];
  v532 = v530 ^ *(_DWORD *)(v531 + 4 * v528) ^ 0xEA84A991 ^ *(_DWORD *)(v531
                                                                        + 4
                                                                        * (6419 * (BYTE1(v493) ^ 0xA6)
                                                                         + 1649683
                                                                         - 8768
                                                                         * (((1959383
                                                                                          * (unint64_t)(6419 * (BYTE1(v493) ^ 0xA6u) + 1649683)) >> 32) >> 2)));
  v533 = 6419 * ((v529 + (HIBYTE(v493) ^ 0xF)) ^ 4)
       + 9872422
       - 8768
       * (((31350127
                        * (unint64_t)(6419 * ((v529 + (HIBYTE(v493) ^ 0xF)) ^ 4u) + 9872422)) >> 32) >> 6);
  v534 = LODWORD(STACK[0x5DD0]) ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6630]) ^ *(_DWORD *)(v531 + 4 * (6419 * (HIBYTE(v513) ^ 0x11) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (HIBYTE(v513) ^ 0x11) + 9872422)) >> 32) >> 6))) ^ *(_DWORD *)(v531 + 4 * (6419 * (BYTE1(v479) ^ 0x48) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v479) ^ 0x48u) + 1649683)) >> 32) >> 2)));
  v535 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE2(v493) ^ 0x71)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v493) ^ 0x71u))) >> 32) >> 2)));
  *(_BYTE *)(STACK[0x6AC0] + 2716) = 50;
  v536 = STACK[0xDE68];
  *(_BYTE *)(v536 + 3749) = 103;
  *(_BYTE *)(STACK[0x69D0] + 2830) = 81;
  v537 = v534 ^ *(_DWORD *)(v531
                          + 4
                          * ((6419
                            * (((v482 ^ 0xF)
                              - ((2 * (v482 ^ 0xF)) & 0xFFFFFF7F)
                              + 16831) ^ 0x415F)
                            + 14802214)
                           % 0x2240)) ^ v535;
  v538 = v498 ^ LODWORD(STACK[0x568C]) ^ (v503 - 1) ^ *(_DWORD *)(v531
                                                                + 4
                                                                * (6419 * (BYTE1(v482) ^ 7)
                                                                 + 1649683
                                                                 - 8768
                                                                 * (((1959383
                                                                                  * (unint64_t)(6419 * (BYTE1(v482) ^ 7u) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v531 + 4 * (6419 * (BYTE2(v479) ^ 0x18) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v479) ^ 0x18u))) >> 32) >> 2))) ^ *(_DWORD *)(v531 + 4 * (6419 * (v513 ^ 0x31) + 14802214 - 8768 * (((31350127 * (unint64_t)(6419 * (v513 ^ 0x31u) + 14802214)) >> 32) >> 6))) ^ *(_DWORD *)(v531 + 4 * v533);
  v539 = LODWORD(STACK[0x5F08]) ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6648]);
  *(_BYTE *)(v536 + 1807) = 25;
  v540 = v539 ^ *(_DWORD *)(v531
                          + 4
                          * (6419 * (BYTE1(v537) ^ 8)
                           + 1649683
                           - 8768
                           * (((1959383 * (unint64_t)(6419 * (BYTE1(v537) ^ 8u) + 1649683)) >> 32) >> 2))) ^ *(_DWORD *)(v531 + 4 * (6419 * (BYTE2(v532) ^ 0x42) - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v532) ^ 0x42u))) >> 32) >> 2))) ^ *(_DWORD *)(v531 + 4 * ((6419 * ((((2 * (v538 ^ 0xC22010E7)) | 0x603F6D4E) - (v538 ^ 0xC22010E7) - 807384743) ^ 0xF23FA6A5) + 14793446) % 0x2240)) ^ *(_DWORD *)(v531 + 4 * (6419 * (HIBYTE(v526) ^ 0xC8) + 9872422 - 8768 * (((31350127 * (unint64_t)(6419 * (HIBYTE(v526) ^ 0xC8) + 9872422)) >> 32) >> 6)));
  v541 = *(_DWORD *)(v531
                   + 4
                   * (6419 * (HIBYTE(v532) ^ 0x36)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v532) ^ 0x36) + 9872422)) >> 32) >> 6)));
  v542 = *(_DWORD *)(v531
                   + 4
                   * (6419 * (BYTE1(v538) ^ 7)
                    + 1649683
                    - 8768
                    * (((1959383 * (unint64_t)(6419 * (BYTE1(v538) ^ 7u) + 1649683)) >> 32) >> 2)));
  v543 = *(_DWORD *)(v531
                   + 4
                   * (6419 * (BYTE2(v537) ^ 0xA0)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v537) ^ 0xA0u))) >> 32) >> 2)));
  *(_BYTE *)(v536 + 5122) = -39;
  v544 = LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x5E88]) ^ v541 ^ v543 ^ v542;
  v545 = *(_DWORD *)(v531
                   + 4
                   * ((6419
                     * (((v526 ^ 0x7C) - ((2 * (v526 ^ 0x7C)) & 0x68) + 8244) ^ 0x2045u)
                     + 14802214)
                    % 0x2240));
  v546 = STACK[0x6A30];
  *(_BYTE *)(v546 + 1168) = 66;
  LODWORD(v531) = *(_DWORD *)(v531
                            + 4
                            * (6419 * (HIBYTE(v537) ^ 0x41)
                             + 9872422
                             - 8768
                             * (((31350127 * (unint64_t)(6419 * (HIBYTE(v537) ^ 0x41) + 9872422)) >> 32) >> 6)));
  v547 = v544 ^ v545;
  v548 = 6419 * (((v538 ^ 0x4A0020) >> 16) ^ 0x8E);
  v549 = -728745459 - (v537 ^ 0xF4 | 0xD4903A0D) + (v537 ^ 0xF4 | 0x2B6FC5F2);
  v550 = 6419 * (BYTE1(v532) ^ 0xBF)
       + 1649683
       - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v532) ^ 0xBFu) + 1649683)) >> 32) >> 2);
  v551 = (6419
        * (((v532 ^ 0xA7) - 1841327033 - ((2 * (v532 ^ 0xA7)) & 0x8E)) ^ 0x923F94FB)
        + 14802214)
       % 0x2240;
  v552 = STACK[0xDE60];
  LODWORD(v531) = v512 ^ v531 ^ *(_DWORD *)(v552 + 4 * v551) ^ *(_DWORD *)(v552
                                                                           + 4
                                                                           * (v548
                                                                            - 8768
                                                                            * (((1959383
                                                                                             * (unint64_t)v548) >> 32) >> 2))) ^ __ROR4__(__ROR4__(*(_DWORD *)(STACK[0xDE60] + 4 * (6419 * (BYTE1(v526) ^ 0xF7) + 1649683 - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE1(v526) ^ 0xF7u) + 1649683)) >> 32) >> 2))), 27) ^ 0x17E9B4A5, 5) ^ 0xC6CBADC4;
  v553 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (HIBYTE(v538) ^ 0x40)
                    + 9872422
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (HIBYTE(v538) ^ 0x40) + 9872422)) >> 32) >> 6)));
  v554 = *(_DWORD *)(STACK[0xDE60]
                   + 4
                   * (6419 * (BYTE2(v526) ^ 0xFD)
                    - 8768 * (((1959383 * (unint64_t)(6419 * (BYTE2(v526) ^ 0xFDu))) >> 32) >> 2)));
  v555 = *(_DWORD *)(STACK[0xDE60] + 4 * v550);
  v556 = *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * (v549 ^ 0x2B6FC569) + 14802214) % 0x2240));
  *(_BYTE *)(v536 + 176) = 39;
  LODWORD(v536) = LODWORD(STACK[0x5E60]) ^ LODWORD(STACK[0x6018]) ^ LODWORD(STACK[0x5B98]) ^ LODWORD(STACK[0x5B78]) ^ v553 ^ v555 ^ v556 ^ v554;
  *(_BYTE *)(STACK[0xDE68] + 2247) = 123;
  v557 = (v540 ^ 0x8E) - ((2 * v540) & 0xE2) + 1308056177;
  v558 = LODWORD(STACK[0x5F80]) ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x65D0]) ^ v506 ^ *(_DWORD *)(v552 + 4 * ((6419 * (HIBYTE(v540) ^ 0x5A) + 52751342) % 0x2240u)) ^ *(_DWORD *)(v552 + 4 * (6419 * BYTE1(v531) + 13158950 - 8768 * (((31350127 * (unint64_t)(6419 * BYTE1(v531) + 13158950)) >> 32) >> 6))) ^ *(_DWORD *)(v552 + 4 * ((6419 * (BYTE2(v547) ^ 0x67u) + 47770198) % 0x2240)) ^ *(_DWORD *)(v552 + 4 * ((6419 * ((((2 * (v536 ^ 0x5F3DAD93)) & 0x941B58EE) - (v536 ^ 0x5F3DAD93) - 1255128184) ^ 0xEA0DEECD) + 49439138) % 0x2240));
  v559 = *(_DWORD *)(v552 + 4 * ((6419 * BYTE3(v531) + 52751342) % 0x2240u));
  v560 = LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x5E80]) ^ *(_DWORD *)(v552
                                                                                              + 4
                                                                                              * ((6419
                                                                                                * BYTE2(v531)
                                                                                                + 47770198)
                                                                                               % 0x2240)) ^ *(_DWORD *)(v552 + 4 * (6419 * (BYTE1(v536) ^ 0xA5) + 13158950 - 8768 * (((31350127 * (unint64_t)(6419 * (BYTE1(v536) ^ 0xA5u) + 13158950)) >> 32) >> 6))) ^ *(_DWORD *)(v552 + 4 * ((6419 * (HIBYTE(v547) ^ 0xEE) + 52751342) % 0x2240u)) ^ *(_DWORD *)(v552 + 4 * ((6419 * (((v557 & 0x488401A2 ^ 0x320001A0) + (v557 ^ 0x4C8FB64B) - ((v557 ^ 0x4C8FB64B) & 0x13821A2)) ^ 0x7AC4CD26u) + 49439138) % 0x2240));
  v561 = 6419 * (BYTE1(v540) ^ 0xF2)
       + 13158950
       - 8768 * (((31350127 * (unint64_t)(6419 * (BYTE1(v540) ^ 0xF2u) + 13158950)) >> 32) >> 6);
  v562 = *(_DWORD *)(v552 + 4 * ((6419 * BYTE2(v536) + 47770198) % 0x2240));
  *(_BYTE *)(v546 + 1464) = 96;
  v563 = (_BYTE *)STACK[0xDE68];
  v563[4424] = 87;
  v564 = ((v547 ^ 0x5C) + (v547 & 0x88 ^ 0x8567C180) - ((v547 ^ 0x5C) & 0x88888888)) ^ 0x85E3C1AC;
  v565 = 6419 * ((((2 * v564) & 0x4CD8) - v564 - 1079617133) ^ 0xBF225983) + 49439138;
  v566 = 6419 * ((BYTE2(v540) ^ 0x1D7E) + ((v540 >> 15) & 0x24));
  v567 = v566 - 8768 * (((62700253 * (unint64_t)v566) >> 32) >> 7);
  v568 = LODWORD(STACK[0x5F18]) ^ LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x5E90]) ^ LODWORD(STACK[0x6650]) ^ v562 ^ *(_DWORD *)(v552 + 4 * v561) ^ v559 ^ *(_DWORD *)(v552 + 4 * (v565 % 0x2240));
  v569 = *(_DWORD *)(v552
                   + 4
                   * (6419 * (BYTE1(v547) ^ 0xEB)
                    + 13158950
                    - 8768
                    * (((31350127 * (unint64_t)(6419 * (BYTE1(v547) ^ 0xEBu) + 13158950)) >> 32) >> 6)));
  v570 = *(_DWORD *)(v552 + 4 * v567);
  v571 = *(_DWORD *)(v552 + 4 * ((6419 * (BYTE3(v536) ^ 0x31) + 52751342) % 0x2240u));
  v563[3294] = 107;
  LODWORD(v531) = LODWORD(STACK[0x6008]) ^ LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x5D90]) ^ LODWORD(STACK[0x68D0]) ^ v570 ^ v571 ^ *(_DWORD *)(STACK[0xDE60] + 4 * ((6419 * v531 + 49439138) % 0x2240)) ^ v569;
  LODWORD(STACK[0x6698]) = 5621 * (BYTE1(v531) ^ 0xF7)
                         + 8684445
                         - 6152
                         * (((44681065 * (unint64_t)(5621 * (BYTE1(v531) ^ 0xF7u) + 8684445)) >> 32) >> 6);
  LODWORD(STACK[0x66A0]) = (5621
                          * ((((2 * (v531 ^ 0x7E918325)) & 0x412202BC)
                            - (v531 ^ 0x7E918325)
                            + 1596637857) ^ 0x21BB4156u)
                          + 18875318)
                         % 0x1808;
  v572 = (v558 ^ 0x6C | 0xCB040FCD) - (v558 ^ 0x6C | 0x34FBF032) + 888926258;
  v573 = (5621
        * (((v572 & 0xA0406F2 ^ 0x380C4410) + (v572 ^ 0x42430BE7) - ((v572 ^ 0x42430BE7) & 0x3A0C46F2)) ^ 0xB34B42E3)
        + 18875318)
       % 0x1808;
  v574 = 5621 * (BYTE3(v531) ^ 0xAA)
       + 5789630
       - 6152 * (((22340533 * (unint64_t)(5621 * (BYTE3(v531) ^ 0xAA) + 5789630)) >> 32) >> 5);
  v575 = 5621 * (BYTE2(v560) ^ 0x88)
       + 10129042
       - 6152 * (((44681065 * (unint64_t)(5621 * (BYTE2(v560) ^ 0x88u) + 10129042)) >> 32) >> 6);
  v576 = 5621 * (BYTE2(v531) ^ 0xF7)
       + 10129042
       - 6152 * (((44681065 * (unint64_t)(5621 * (BYTE2(v531) ^ 0xF7u) + 10129042)) >> 32) >> 6);
  HIDWORD(v577) = (BYTE1(v568) ^ 0xDF) + 1545;
  LODWORD(v577) = HIDWORD(v577);
  v578 = 5621 * ((v577 >> 29) >> 3) % 0x1808;
  LODWORD(v531) = (-894017649 - (v560 ^ 0x39 | 0xCAB65F8F) + (v560 ^ 0x39 | 0x3549A070)) ^ 0x108870D3;
  v579 = (((2 * v531) | 0x2FDAFA6C) - v531 - 401440054) ^ 0x322CAD36;
  LODWORD(v531) = 5621 * (HIBYTE(v560) ^ 0x10)
                + 5789630
                - 6152
                * (((22340533 * (unint64_t)(5621 * (HIBYTE(v560) ^ 0x10) + 5789630)) >> 32) >> 5);
  v580 = 5621 * (BYTE1(v560) ^ 0xF3)
       + 8684445
       - 6152 * (((44681065 * (unint64_t)(5621 * (BYTE1(v560) ^ 0xF3u) + 8684445)) >> 32) >> 6);
  v581 = (5621 * v579 + 18875318) % 0x1808u;
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x5710]) - 1836332339;
  LODWORD(STACK[0x68D0]) = STACK[0x5778] & (LODWORD(STACK[0x5850]) ^ 0x7A157C3A) | LODWORD(STACK[0x5790]);
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x57C4]) - 13777031 - LODWORD(STACK[0x5788]);
  LODWORD(STACK[0x6850]) = (STACK[0x5748] & 0xF2381CFE) - LODWORD(STACK[0x57BC]) - 2031881856;
  LODWORD(STACK[0x6890]) = (LODWORD(STACK[0x5744]) | 0x20442616) - LODWORD(STACK[0x5780]) - 270668555;
  LODWORD(STACK[0x66D0]) = LODWORD(STACK[0x5718]) - 584313358;
  LODWORD(STACK[0x66F8]) = (STACK[0x5750] & 0xB5FB2620) - LODWORD(STACK[0x57A8]) - 1526567697;
  LODWORD(STACK[0x66E0]) = (LODWORD(STACK[0x5758]) | 0xA302CDDE) - LODWORD(STACK[0x57A4]) - 1367434991;
  v582 = ((LODWORD(STACK[0x5C50]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5C60]) ^ 0xB9) << 8);
  v583 = ((LODWORD(STACK[0x5CB8]) ^ 0xCE185574) & ~v582 | v582 & 0xE7AA00) ^ 0x20A1A830;
  v584 = ((((2 * v583) | 0xD40028) - v583) << 8) + 369093632;
  v585 = ((v584 ^ 0xAC0212FF) & (LODWORD(STACK[0x5D08]) ^ 0xACF73A0A) | v584 & 0x5308C500) ^ 0x5108C100;
  LODWORD(STACK[0x66C8]) = v585 - ((2 * v585) & 0x887D3C96) + 1144954443;
  v586 = ((LODWORD(STACK[0x5CD8]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5CC8]) ^ 0xB9) << 8);
  v587 = (LODWORD(STACK[0x5CE8]) ^ 0x56F76E2C) & ~v586 | v586 & 0x89100;
  v588 = (((v587 | 0xF221EB) + (v587 & 0xF221EB ^ 0xF22081)) << 8) + 232658176;
  v589 = ((v588 ^ 0x2A914BFF) & (LODWORD(STACK[0x5D58]) ^ 0x2E934F80) | v588 & 0xD16CB000) ^ 0x91402006;
  LODWORD(STACK[0x66D8]) = -2126058182 - v589 + ((2 * v589) & 0xFD721826);
  v590 = ((LODWORD(STACK[0x5D50]) ^ 0xB9) << 16) | ((LODWORD(STACK[0x5D68]) ^ 0xB9) << 8);
  v591 = (LODWORD(STACK[0x5DC8]) ^ 0xC71DA) & ~v590 | v590 & 0xF38E00;
  v592 = ((v591 << 8) ^ 0x310080FF) & (LODWORD(STACK[0x66A8]) ^ 0x315183FC) | (v591 << 8) & 0xCEAE7C00;
  v593 = (LODWORD(STACK[0x66B0]) ^ 0xBC77823) & 0xDCE703C2 ^ 0x2A17D2F3 ^ (((LODWORD(STACK[0x66B0]) ^ 0xBC77823) & 0x2318F43D)
                                                                         - ((LODWORD(STACK[0x66B0]) ^ 0xBC77823) & 0x300501C)
                                                                         + ((LODWORD(STACK[0x66B0]) ^ 0xBC77823) & 0x300501C ^ 0xB0752DE));
  LODWORD(STACK[0x6370]) = (LODWORD(STACK[0x6560])
                          + LODWORD(STACK[0x5E58])
                          - 2 * ((LODWORD(STACK[0x6560]) + LODWORD(STACK[0x5E58])) & 0x69D25AFE ^ STACK[0x65B0] & 2)
                          - 372090116) ^ (299133977 - (v593 | 0x11D46C19) + (v593 | 0xEE2B93E6));
  v594 = LODWORD(STACK[0x5BE8]) ^ LODWORD(STACK[0x6628]) ^ 0x3F31080A ^ (LODWORD(STACK[0x5728]) - 1);
  LODWORD(v536) = LODWORD(STACK[0x5C10])
                - 2130700936
                + v594
                - ((((2 * (v594 & STACK[0x5C10])) ^ 0x29F868EC) + 738983015) ^ (((2 * (v594 & STACK[0x5C10])) ^ 0x7DB71360)
                                                                              + 2017757163) ^ (((2
                                                                                               * (v594 & STACK[0x5C10])) ^ 0x544F7B8C)
                                                                                             + 1371336455))
                + 3646;
  v595 = (v536 ^ 0xC4F262C4) & (2 * (v536 & 0x84F370D5)) ^ v536 & 0x84F370D5;
  LODWORD(STACK[0x6368]) = v536;
  v596 = ((2 * (v536 ^ 0xCC52E344)) ^ 0x91432722) & (v536 ^ 0xCC52E344) ^ (2 * (v536 ^ 0xCC52E344)) & 0x48A19390;
  v597 = (v596 ^ 0x48211301) & (4 * v595) ^ v595;
  v598 = ((4 * (v596 ^ 0x48A09091)) ^ 0x22864E44) & (v596 ^ 0x48A09091) ^ (4 * (v596 ^ 0x48A09091)) & 0x48A19390;
  v599 = (v598 ^ 0x800201) & (16 * v597) ^ v597;
  v600 = ((16 * (v598 ^ 0x48219191)) ^ 0x8A193910) & (v598 ^ 0x48219191) ^ (16 * (v598 ^ 0x48219191)) & 0x48A19390;
  v601 = v599 ^ 0x48A19391 ^ (v600 ^ 0x8011181) & (v599 << 8);
  LODWORD(STACK[0x66C0]) = (v601 << 16) & 0x48A10000 ^ v601 ^ ((v601 << 16) ^ 0x13910000) & (((v600 ^ 0x40A08281) << 8) & 0x48A10000 ^ 0x48200000 ^ (((v600 ^ 0x40A08281) << 8) ^ 0x21930000) & (v600 ^ 0x40A08281));
  LODWORD(STACK[0x6360]) ^= LODWORD(STACK[0x6358]) ^ LODWORD(STACK[0x65E0]) ^ v592;
  LODWORD(STACK[0x66A8]) = LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x62A0]);
  LODWORD(STACK[0x66B0]) = LODWORD(STACK[0x5BF8]) ^ LODWORD(STACK[0x65E8]);
  LODWORD(STACK[0x6358]) = LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x65C0]);
  HIDWORD(v577) = LODWORD(STACK[0x62F8]) ^ LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x5F50]) ^ LODWORD(STACK[0x5738]) ^ 0x5075C80F;
  LODWORD(v577) = HIDWORD(v577);
  LODWORD(STACK[0x66B8]) = (v577 >> 5) - ((2 * (v577 >> 5)) & 0xDE70EDF6) + 1865971451;
  v602 = LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x5C18]);
  v603 = LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x6110]) ^ LODWORD(STACK[0x5F40]);
  LODWORD(v536) = (v603 | 0xFFFFFBFF) - 1231637708;
  LODWORD(STACK[0x6350]) = v536;
  v604 = v536 ^ 0x596C8A91;
  LODWORD(v536) = ((v536 ^ 0x596C8A91) & 0x89001802 | 0x42D0759) ^ (v536 ^ 0x596C8A91) & 0x80001802;
  v605 = (2 * v604) & 0x800 ^ 0x23C00BA1 ^ ((2 * v604) ^ 0x47DA1502) & v604;
  LODWORD(v536) = ((4 * v536) ^ 0xEEB411A4) & v605 ^ v536 ^ ((4 * v536) & 0x20004004 | 0x1010200);
  v606 = (4 * v605) & 0xABEDCBA4 ^ 0x48C121 ^ ((4 * v605) ^ 0xAFB72E94) & v605;
  LODWORD(v536) = (16 * v536) & 0xABEDCBA0 ^ v536 ^ ((16 * v536) ^ 0xAC0EED0) & v606;
  v607 = (16 * v606) & 0xABEDCBA0 ^ 0x12141A5 ^ ((16 * v606) ^ 0xBEDCBA50) & v606;
  LODWORD(v536) = v536 ^ ((_DWORD)v536 << 8) & 0xABEDCB00 ^ (((_DWORD)v536 << 8) ^ 0x6CC46D00) & v607 ^ 0xD94546C8;
  v608 = (v603 ^ 0xFE87940A) & 0x75392C96 ^ 0x10590128 ^ (((2 * (v603 ^ 0xFE87940A)) & 0x504A8D2)
                                                        - ((v603 ^ 0xFE87940A) & 0x8AC6D769)
                                                        + 408781568);
  LODWORD(STACK[0x6348]) = (-1541156967 - (v608 | 0xA423CF99) + (v608 | 0x5BDC3066)) ^ (2
                                                                                      * (((_DWORD)v536 << 16) & 0x2BED0000 ^ v536 ^ (((_DWORD)v536 << 16) ^ 0x4BA50000) & ((v607 << 8) & 0xABED0000 ^ 0x2240000 ^ ((v607 << 8) ^ 0x6DCB0000) & v607)));
  v563[4773] = 95;
  v563[4940] = 52;
  *(_BYTE *)(STACK[0x6950] + 789) = -94;
  v563[2634] = -18;
  v609 = STACK[0x6AC0];
  *(_BYTE *)(STACK[0x6AC0] + 2792) = -122;
  v610 = (_BYTE *)STACK[0xDE68];
  LODWORD(STACK[0x6688]) = *(unsigned __int8 *)(STACK[0xDE68] + LODWORD(STACK[0x6698]));
  LODWORD(STACK[0x6658]) = v610[LODWORD(STACK[0x66A0])];
  v610[2012] = -83;
  LODWORD(STACK[0x6698]) = v610[v573];
  LODWORD(STACK[0x6650]) = v610[5621 * (BYTE2(v558) ^ 0xEC)
                                               + 10129042
                                               - 6152
                                               * (((44681065
                                                                * (unint64_t)(5621 * (BYTE2(v558) ^ 0xECu)
                                                                                   + 10129042)) >> 32) >> 6)];
  LODWORD(STACK[0x6690]) = v610[5621 * (BYTE1(v558) ^ 0x88)
                                               + 8684445
                                               - 6152
                                               * (((44681065
                                                                * (unint64_t)(5621 * (BYTE1(v558) ^ 0x88u)
                                                                                   + 8684445)) >> 32) >> 6)];
  v610[1405] = -34;
  v611 = v610[v574];
  LODWORD(STACK[0x6340]) = v602 ^ LODWORD(STACK[0x5798]);
  LODWORD(STACK[0x6640]) = v610[v575];
  v610[5069] = 20;
  v612 = v610[v576];
  LOBYTE(v602) = v610[5621 * (HIBYTE(v558) ^ 2)
                    + 5789630
                    - 6152
                    * (((22340533 * (unint64_t)(5621 * (HIBYTE(v558) ^ 2) + 5789630)) >> 32) >> 5)];
  LODWORD(STACK[0x66A0]) = v610[v578];
  v613 = v610[5621 * (BYTE2(v568) ^ 0xF2)
                             + 10129042
                             - 6152
                             * (((44681065 * (unint64_t)(5621 * (BYTE2(v568) ^ 0xF2u) + 10129042)) >> 32) >> 6)];
  v614 = v610[5621
                             * ((((v568 ^ 0xFFFFFF6D)
                                + 532415920
                                + ((2 * v568) | 0xC087E3EE)
                                + 2138) ^ 0xE043FC20)
                              + ((2 * v568) & 0x3C ^ 0x34))
                             % 0x1808];
  v615 = v610[5621 * (HIBYTE(v568) ^ 0x34)
                             + 5789630
                             - 6152
                             * (((22340533 * (unint64_t)(5621 * (HIBYTE(v568) ^ 0x34) + 5789630)) >> 32) >> 5)];
  v616 = v610[v531];
  v610[4280] = 116;
  v617 = ((v602 ^ 0x39) - 57) ^ ((v602 ^ 0x5D) - 93) ^ ((v602 ^ 0xDD) + 35);
  if ((v602 & 2) != 0)
    v618 = -71;
  else
    v618 = -67;
  v619 = v617 + v618;
  v620 = (v617 + v618) & 0xD4 ^ 0x3F;
  v621 = 2 * ((2 * (v620 ^ v619 & 0x2A)) ^ 0x54 ^ v620 ^ ((2 * (v620 ^ v619 & 0x2A)) ^ 0x54) & v619);
  LODWORD(STACK[0x6628]) = v610[v580];
  LODWORD(STACK[0x6648]) = v610[v581];
  v622 = 2 * ((2 * (v621 ^ v620 ^ v621 & v619)) ^ v620 ^ (2 * (v621 ^ v620 ^ v621 & v619)) & v619);
  v623 = v622 ^ v620 ^ v622 & v619;
  *(_BYTE *)(STACK[0x6A40] + 2132) = -4;
  v610[2998] = -76;
  *(_BYTE *)(STACK[0x6A00] + 2519) = -49;
  v610[1883] = -69;
  *(_BYTE *)(STACK[0x6980] + 311) = -13;
  v624 = STACK[0xDE60];
  LODWORD(STACK[0x6638]) = *(_DWORD *)(STACK[0xDE60]
                                     + 4
                                     * ((6419
                                       * (((*(unsigned __int8 *)STACK[0x6310] ^ 0x7DFC45C9) - 2113684937) ^ ((*(unsigned __int8 *)STACK[0x6310] ^ 0x1909DCBC) - 420076732) ^ ((*(unsigned __int8 *)STACK[0x6310] ^ 0x64F599CCu) - 1693817292))
                                       + 45651928)
                                      % 0x2240));
  *(_BYTE *)(v609 + 3558) = 116;
  LODWORD(STACK[0x6630]) = *(_DWORD *)(v624
                                     + 4
                                     * ((6419
                                       * (((*(unsigned __int8 *)STACK[0x6308] ^ 0x29DF7652) - 702510674) ^ ((*(unsigned __int8 *)STACK[0x6308] ^ 0x2AA1E6DA) - 715253466) ^ ((*(unsigned __int8 *)STACK[0x6308] ^ 0x37E9031u) - 58626097))
                                       + 45651928)
                                      % 0x2240));
  v625 = STACK[0xDE68];
  *(_BYTE *)(v625 + 4333) = -113;
  *(_BYTE *)(v625 + 1003) = 49;
  *(_BYTE *)(STACK[0x68B0] + 2883) = 71;
  *(_BYTE *)(STACK[0x6880] + 622) = -69;
  *(_BYTE *)(STACK[0xDE68] + 5486) = 64;
  STACK[0x6338] = (6419
                 * (((v611 ^ 0x9DDEB9DC) + 1646347812) ^ ((v611 ^ 0x6F9BE7F6) - 1872488438) ^ ((v611 ^ 0xF2455E93)
                                                                                             + 230334829))
                 + 6130145)
                % 0x2240;
  STACK[0x6330] = (6419
                 * (((v616 ^ 0xD59B6B98) + 711234664) ^ ((v616 ^ 0x48AC56C1) - 1219253953) ^ ((v616 ^ 0x9D373DE0)
                                                                                            + 1657324064))
                 + 6130145)
                % 0x2240;
  STACK[0x6328] = (6419
                 * (((v614 ^ 0x1D6E2AAE) - 493759150) ^ ((v614 ^ 0x2A890C36) - 713624630) ^ ((v614 ^ 0x37E72621u)
                                                                                           - 937895457))
                 + 30798362)
                % 0x2240;
  STACK[0x6320] = (6419
                 * (((v615 ^ 0x54AB1F02) - 1420500738) ^ ((v615 ^ 0x5C0BF32C) - 1544287020) ^ ((v615 ^ 0x8A0EC97u)
                                                                                             - 144764055))
                 + 6130145)
                % 0x2240;
  STACK[0x6318] = (6419
                 * (((v612 ^ 0xC2D80950) + 1026029232) ^ ((v612 ^ 0xC19AABF6) + 1046828042) ^ ((v612 ^ 0x342A21F)
                                                                                             - 54698527))
                 + 44008664)
                % 0x2240;
  STACK[0x6310] = (6419
                 * (((v613 ^ 0x8412FE3E) + 2079130050) ^ ((v613 ^ 0xBEA3C551) + 1096563375) ^ ((v613 ^ 0x3AB13BD6)
                                                                                             - 984693718))
                 + 44008664)
                % 0x2240;
  LODWORD(v624) = 6419 * ((v619 ^ (2 * ((2 * v623) ^ v620 ^ (2 * v623) & v619))) ^ 0xD6) + 4933862;
  STACK[0x6308] = v624
                - 8768 * (((31350127 * (unint64_t)v624) >> 32) >> 6);
  v626 = ((LODWORD(STACK[0x6690]) ^ 0xF7FDD588) + 134359672) ^ ((LODWORD(STACK[0x6690]) ^ 0xCA190184) + 904330876) ^ ((LODWORD(STACK[0x6690]) ^ 0x3DE4D4B5) - 1038406837);
  STACK[0x6300] = (6419
                 * (((LODWORD(STACK[0x6628]) ^ 0xB45C24EB) + 1269029653) ^ ((LODWORD(STACK[0x6628]) ^ 0xE6199985)
                                                                          + 434529915) ^ ((LODWORD(STACK[0x6628]) ^ 0x5245BDD7)
                                                                                        - 1380302295))
                 + 39046777)
                % 0x2240;
  STACK[0x62F8] = (6419 * v626 + 39046777) % 0x2240;
  LODWORD(v624) = ((LODWORD(STACK[0x6698]) ^ 0xD450AC4D) + 732910515) ^ ((LODWORD(STACK[0x6698]) ^ 0x51451A88)
                                                                       - 1363483272) ^ ((LODWORD(STACK[0x6698]) ^ 0x8515B67C)
                                                                                      + 2062174596);
  LODWORD(v625) = ((LODWORD(STACK[0x6640]) ^ 0xC34D9C3C) + 1018323908) ^ ((LODWORD(STACK[0x6640]) ^ 0xA3BEBDE2)
                                                                        + 1547780638) ^ ((LODWORD(STACK[0x6640]) ^ 0x60F32167)
                                                                                       - 1626546535);
  v627 = STACK[0x6650];
  STACK[0x62F0] = (6419
                 * (((LODWORD(STACK[0x66A0]) ^ 0xDDB820A8) + 575135576) ^ ((LODWORD(STACK[0x66A0]) ^ 0x49B9F134)
                                                                         - 1236922676) ^ ((LODWORD(STACK[0x66A0]) ^ 0x9401D125)
                                                                                        + 1811820251))
                 + 39046777)
                % 0x2240;
  v628 = STACK[0x6658];
  HIDWORD(v629) = (LODWORD(STACK[0x6688]) >> 5) ^ 5;
  LODWORD(v629) = (LODWORD(STACK[0x6688]) << 27) ^ 0xCFFFFFFF;
  STACK[0x62E8] = (6419 * (int)v625 + 44008664) % 0x2240u;
  STACK[0x62E0] = (6419
                 * (((v628 ^ 0xCBB3DF88) + 877404280) ^ ((v628 ^ 0xD0AECAB) - 218819755) ^ ((v628 ^ 0xC6B9339A)
                                                                                          + 960941158))
                 + 30798362)
                % 0x2240;
  v630 = ((LODWORD(STACK[0x6648]) ^ 0xABD2F547) + 1412238009) ^ ((LODWORD(STACK[0x6648]) ^ 0x10A5ECF7) - 279309559) ^ ((LODWORD(STACK[0x6648]) ^ 0xBB771909) + 1149822711);
  STACK[0x62D8] = (6419 * (int)v624 + 30798362) % 0x2240u;
  STACK[0x62D0] = (6419
                 * (((v627 ^ 0x62536759) - 1649633113) ^ ((v627 ^ 0xF90E7AC1) + 116491583) ^ ((v627 ^ 0x9B5D1D21)
                                                                                            + 1688396511))
                 + 44008664)
                % 0x2240;
  STACK[0x62C8] = (6419 * v630 + 30798362) % 0x2240;
  STACK[0x62C0] = (6419 * (v629 >> 27) + 37859262) % 0x2240;
  LODWORD(STACK[0x62B8]) = LODWORD(STACK[0x5D98]) ^ LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x66C8]);
  LODWORD(STACK[0x62B0]) = LODWORD(STACK[0x5DE0]) ^ LODWORD(STACK[0x66E8]);
  LODWORD(STACK[0x62A8]) = LODWORD(STACK[0x5C20]) ^ LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x62A0]) = LODWORD(STACK[0x5DF8]) ^ (LODWORD(STACK[0x66F0]) + 2137);
  LODWORD(STACK[0x6298]) = LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x5E98]) ^ LODWORD(STACK[0x66F8]);
  LODWORD(STACK[0x6290]) = LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x5DE8]);
  LODWORD(STACK[0x6288]) = LODWORD(STACK[0x5DF0]) ^ LODWORD(STACK[0x6850]);
  LODWORD(STACK[0x6280]) = LODWORD(STACK[0x5E00]) ^ LODWORD(STACK[0x68D0]);
  LODWORD(STACK[0x6278]) = LODWORD(STACK[0x5E08]) ^ LODWORD(STACK[0x6890]);
  LODWORD(STACK[0x6270]) = LODWORD(STACK[0x5E20]) ^ (LODWORD(STACK[0x66D8]) + 1714);
  LODWORD(STACK[0x6268]) = 2 * LODWORD(STACK[0x66C0]);
  HIDWORD(v629) = STACK[0x66B8];
  LODWORD(v629) = STACK[0x66B8];
  LODWORD(STACK[0x6260]) = v629 >> 27;
  v631 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x6780])) - 4);
  LODWORD(STACK[0x6890]) = 33782210;
  LODWORD(STACK[0x6880]) = 33765347;
  LODWORD(STACK[0x6850]) = 33714758;
  LODWORD(STACK[0x66F8]) = 33776589;
  LODWORD(STACK[0x66F0]) = 33770968;
  LODWORD(STACK[0x66E8]) = 33748484;
  LODWORD(STACK[0x66E0]) = 33703516;
  LODWORD(STACK[0x66D8]) = 33759726;
  LODWORD(STACK[0x66D0]) = 33731621;
  LODWORD(STACK[0x66C8]) = 33737242;
  LODWORD(STACK[0x66C0]) = 33720379;
  LODWORD(STACK[0x66B8]) = 33726000;
  LODWORD(STACK[0x66B0]) = 33754105;
  LODWORD(STACK[0x66A8]) = 33709137;
  LODWORD(STACK[0x66A0]) = 33742863;
  return v631();
}

#error "1009E23D8: too big function (funcsize=0)"

uint64_t sub_1009F6DE4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;

  v0 = LODWORD(STACK[0x6780]) - 2324;
  v1 = (LODWORD(STACK[0x6780]) - 2520);
  v2 = STACK[0xDE38];
  v3 = (_BYTE *)STACK[0xDE70];
  *(_BYTE *)(v2 - 0x6E6523606CBE4795) = *(_BYTE *)STACK[0xDE70];
  *(_BYTE *)(v2 - 0x6E6523606CBE4794) = v3[1];
  *(_BYTE *)(v2 - 0x6E6523606CBE4793) = v3[2];
  *(_BYTE *)(v2 - 0x6E6523606CBE4792) = v3[3];
  *(_BYTE *)(v2 - 0x6E6523606CBE4791) = v3[4];
  *(_BYTE *)(v2 - 0x6E6523606CBE4790) = v3[5];
  *(_BYTE *)(v2 - 0x6E6523606CBE478FLL) = v3[6];
  *(_BYTE *)(v2 - 0x6E6523606CBE478ELL) = v3[7];
  *(_BYTE *)(v2 - 0x6E6523606CBE478DLL) = v3[8];
  *(_BYTE *)(v2 - 0x6E6523606CBE478CLL) = v3[9];
  *(_BYTE *)(v2 - 0x6E6523606CBE478BLL) = v3[10];
  *(_BYTE *)(v2 - 0x6E6523606CBE478ALL) = v3[11];
  *(_BYTE *)(v2 - 0x6E6523606CBE4789) = v3[12];
  *(_BYTE *)(v2 - 0x6E6523606CBE4788) = v3[13];
  *(_BYTE *)(v2 - 0x6E6523606CBE4787) = v3[14];
  *(_BYTE *)(v2 - 0x6E6523606CBE4786) = v3[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v1 ^ 0x1072)))();
}

uint64_t sub_1009F6FBC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1987 * (v1 != 0)) ^ (v0 + 17266))) - 8))();
}

uint64_t sub_1009F6FE8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_1009F7000()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21895 * (STACK[0x8B38] != 0)) ^ (v0 + 2854))) - 4))();
}

uint64_t sub_1009F7030()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_1009F7044()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((STACK[0xC298] != 0) | (4 * (STACK[0xC298] != 0))) ^ (v0 + 14317))))();
}

uint64_t sub_1009F7074()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_1009F7084()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2111 * (STACK[0x9470] != 0)) ^ (v0 + 9230))))();
}

uint64_t sub_1009F70B8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_1009F70C8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((12640 * (STACK[0x6C38] != 0)) ^ (v0 + 3905))))();
}

uint64_t sub_1009F70F0()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_1009F7100()
{
  int v0;

  STACK[0xC768] -= 41424;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((v0 + 1853362980) ^ 0x6E782811 ^ (6763
                                                                                         * ((v0 + 1853362980) < 0xF75596A2))))
                                          - ((v0 - 1720910327) & 0x6692F7FF)
                                          + 1655))(5121);
}

uint64_t sub_1009F719C()
{
  int v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xD3C8]) = v1;
  v2 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x13FB)) - ((v0 + 871) | 0x3001u) + 14815))();
}

uint64_t sub_1009F7228()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 3000);
  v2 = *(_DWORD *)(v0 + 2996);
  *(_DWORD *)(v0 + 3008) = v2;
  *(_DWORD *)(v0 + 3012) = 14 * (v2 ^ 0x1307);
  *(_QWORD *)(v0 + 3016) = --v1;
  v3 = *(_QWORD *)(v0 + 3824) + v1;
  *(_QWORD *)(v0 + 296) = v3 - 0x30831D73E345A1C2;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ 0x72F1));
  *(_QWORD *)(v0 + 3024) = v3;
  *(_QWORD *)(v0 + 280) = v5 - 8;
  return (*(uint64_t (**)(void))(v4 + 8 * (v2 ^ 0x7029)))();
}

uint64_t sub_1009F72B0()
{
  int v0;
  unint64_t v1;

  *(_DWORD *)STACK[0xC7C0] = -1926392729;
  v1 = STACK[0x6AD8];
  STACK[0xD1B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 961)) - 8;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 620)))(5121);
}

uint64_t sub_1009F7328()
{
  unint64_t v0;
  int v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] ^ 0x1074;
  STACK[0xC810] = STACK[0xDE80];
  LODWORD(STACK[0xB124]) = *(_DWORD *)(STACK[0x4C70] + 80);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 12643)) - (4663 * v1) + 9322))();
}

uint64_t sub_1009F739C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x3914]) ^ (31128 * (v7 == -1926392729)))) - ((STACK[0x6508] - 4069) | 0x2826) + 10415))(17384, 4294954122, a3, a4, a5, a6, a7, 6209);
}

uint64_t sub_1009F740C(uint64_t a1, uint64_t a2)
{
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * ((29729
                                                                         * (STACK[0xD108] == ((3 * (v2 ^ 0x28A8u)) ^ 0xC7347E2AAE7FE2E0)
                                                                                           + (v2 + 10741))) ^ v2)))(a1, a2, 19525, 3288435957);
}

uint64_t sub_1009F7470()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = v0 + 536294704;
  v2 = LODWORD(STACK[0x9ED4]) + 8;
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 < 0x200) * ((v0 - 4307) ^ 0x4FCC)) ^ v0));
  LODWORD(STACK[0xDE90]) = v2;
  return ((uint64_t (*)(void))(v3 - (v1 & 0xE0087E7F) + 1624))();
}

uint64_t sub_1009F7500(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 1620) = STACK[0xC2A4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((v2 & 0xE0087E7F) + 13976)))(a1, a2, 19525);
}

_QWORD *sub_1009F759C@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC050] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * (a1 + 11522))
                                                                 - ((a1 + 4133) ^ 0x108ELL)))(&STACK[0x6C88]);
}

uint64_t sub_1009F75F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] + 283667269) & 0xEF17D77E) - 21291)
                                               * (v0 != -731380499)) ^ LODWORD(STACK[0x2968])))
                            - 8))();
}

uint64_t sub_1009F7668@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - (a1 ^ 0xCD92F5CB) + 3448940265))();
}

uint64_t sub_1009F76AC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  v5 = ((v4 + (v3 ^ 0xD84BED84) + ((v2 - 169791995) & 0x3C8C3B7F) + 3130) ^ ((v3 ^ 0x92CD4847) + 1832040377) ^ (((((v2 - 937171734) & 0x6A497476) - 1840718950) ^ v3) + 1840718868))
     - 1503582944;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * (int)((22
                                                                                        * (((v5 ^ ~v2) & (v5 - v2) | v2 & ~v5) >> 31)) | v2 ^ 0xCD9289F1))
                                                                     - 12))(a1, a2, 19525, 3288435957);
}

_QWORD *sub_1009F7788()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC050] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * ((int)v0 + 11533))
                                                                 - (((_DWORD)v0 + 937032753) & 0xC82613FE)
                                                                 + 4214))(&STACK[0xB87C]);
}

uint64_t sub_1009F77F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 3810)))();
}

uint64_t sub_1009F7824@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v5 = ((((8 * v1) ^ 0x9E6183A2) + 1054110507) ^ (((8 * v1) ^ 0x63BFA062) + ((a1 + 1444650601) & 0xA9E45173 ^ 0xC30A50B8)) ^ ((((a1 ^ 0x107F) * v2 - 35790361) ^ (8 * v1)) + 1567347529))
     - 1715635747;
  v6 = (v5 ^ 0xE5EE0197) & (2 * (v5 & 0xC58C95A6)) ^ v5 & 0xC58C95A6;
  v7 = ((2 * (v5 ^ 0x66E60897)) ^ 0x46D53A62) & (v5 ^ 0x66E60897) ^ (2 * (v5 ^ 0x66E60897)) & 0xA36A9D30;
  v8 = v7 ^ 0xA12A8511;
  v9 = (v7 ^ 0x83481820) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x8DAA74C4) & v8 ^ (4 * v8) & 0xA36A9D30;
  v11 = (v10 ^ 0x812A1410) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x22408931)) ^ 0x36A9D310) & (v10 ^ 0x22408931) ^ (16 * (v10 ^ 0x22408931)) & 0xA36A9D30;
  v13 = v11 ^ 0xA36A9D31 ^ (v12 ^ v3) & (v11 << 8);
  v14 = v5 ^ (2
            * ((v13 << 16) & 0x236A0000 ^ v13 ^ ((v13 << 16) ^ 0x1D310000) & (((v12 ^ 0x81420C21) << 8) & 0xA36A0000 ^ v4 ^ (((v12 ^ 0x81420C21) << 8) ^ 0x6A9D0000) & (v12 ^ 0x81420C21))));
  LODWORD(STACK[0xDEA4]) = v14 ^ 0xC343BA3;
  v15 = a1 + 11477;
  v16 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v14 ^ 0x8119AFC4);
  STACK[0xDEA8] = v16 + 0x62F99AA9C7806AF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((252 * (v16 == 0)) ^ v15)) - 12))();
}

uint64_t sub_1009F7A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  LODWORD(STACK[0x9ED4]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 - 958595744) & 0x39233B5C ^ 0x7A0E) + v6))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 1333992529);
}

uint64_t sub_1009F7AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                                                                                       - (v4 - 10394)
                                                                                       + 4206))(a1, a2, a3, a4, 0x9D066556387F9509);
}

uint64_t sub_1009F7B1C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 3942) | 0x3800) - 5197) ^ LODWORD(STACK[0x41CC])))
                            - 4))();
}

uint64_t sub_1009F7B64()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 10394) ^ 0x107ELL)))();
}

uint64_t sub_1009F7B84@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(void);
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _DWORD *v7;
  _QWORD *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = (v4 + v5);
  v7 = (_DWORD *)STACK[0x60B8];
  v8 = (_QWORD *)STACK[0x60C0];
  v9 = 1772489163
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xBE46EE68)) ^ (a2 + v6)) & 0x7FFFFFFF);
  v10 = 1772489163 * (v9 ^ HIWORD(v9));
  v11 = STACK[0x5770];
  v12 = STACK[0x5768];
  v13 = STACK[0x58B0];
  *(_BYTE *)(a2 + v6 + a1) = *(_BYTE *)(STACK[0x5770] + (v10 >> 24)) ^ HIBYTE(v3) ^ *(_BYTE *)(STACK[0x5768]
                                                                                             + (v10 >> 24)) ^ *(_BYTE *)((v10 >> 24) + STACK[0x58B0] + 4) ^ v10 ^ (13 * BYTE3(v10)) ^ 0xBA;
  v14 = a2 + (v6 + 1);
  LODWORD(v10) = 1772489163 * ((*(_DWORD *)(*v8 + (int)(*v7 & 0xBE46EE68)) ^ v14) & 0x7FFFFFFF);
  v15 = 1772489163 * (v10 ^ WORD1(v10));
  *(_BYTE *)(v14 + a1) = *(_BYTE *)(v11 + (v15 >> 24)) ^ BYTE2(v3) ^ *(_BYTE *)(v12 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v13 + 4) ^ v15 ^ (13 * BYTE3(v15)) ^ 0xF4;
  v16 = a2 + (v6 + 2);
  v17 = 1772489163 * ((*(_DWORD *)(*v8 + (int)(*v7 & 0xBE46EE68)) ^ v16) & 0x7FFFFFFF);
  v18 = 1772489163 * (v17 ^ HIWORD(v17));
  *(_BYTE *)(v16 + a1) = ((BYTE1(v3) ^ 0x5C) - ((2 * (BYTE1(v3) ^ 0x5C)) & 0x87) + 67) ^ *(_BYTE *)(v11 + (v18 >> 24)) ^ *(_BYTE *)(v12 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v13 + 4) ^ v18 ^ (13 * BYTE3(v18)) ^ 0x43;
  v19 = a2 + (v6 + 3);
  LODWORD(v6) = 1772489163 * ((*(_DWORD *)(*v8 + (int)(*v7 & 0xBE46EE68)) ^ v19) & 0x7FFFFFFF);
  v20 = 1772489163 * (v6 ^ WORD1(v6));
  *(_BYTE *)(v19 + a1) = v3 ^ *(_BYTE *)(v11 + (v20 >> 24)) ^ *(_BYTE *)(v12 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v13 + 4) ^ v20 ^ (13 * BYTE3(v20)) ^ 0xA2;
  return v2();
}

uint64_t sub_1009F7D58()
{
  int v0;

  v0 = STACK[0x6508] - 4094;
  LODWORD(STACK[0x9ED4]) += 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x24D8)) - 4))();
}

uint64_t sub_1009F7DEC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 4135) ^ 0x24EF)) - 4))();
}

uint64_t sub_1009F7E54()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3326)) - 12))();
}

uint64_t sub_1009F7E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v2 - 0x40FF05CA5EA60DE6 > (unint64_t)(v0 + v1))
                                          * LODWORD(STACK[0x550C])) ^ LODWORD(STACK[0x5508])))
                            - 12))();
}

uint64_t sub_1009F7F44@<X0>(uint64_t a1@<X5>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;

  v16 = a3 + v5 + v3;
  v17 = ((*(_DWORD *)(*v14 + (*v15 & v9)) ^ v16) & (((v6 - 12778) | 0x36) + v7)) * a2;
  v18 = (v17 ^ HIWORD(v17)) * a2;
  *(_BYTE *)(v16 + v13) = *(_BYTE *)(v4 + v5) ^ *(_BYTE *)(v10 + (v18 >> 24)) ^ *(_BYTE *)(a1 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v8 + 4) ^ v18 ^ (BYTE3(v18) * v11) ^ v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6617 * (v5 != 7)) ^ v6)) - 12))();
}

uint64_t sub_1009F7FE4@<X0>(uint64_t a1@<X5>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  unint64_t v18;

  v14 = v5 - 1;
  v15 = a3 + v3 + v14;
  v16 = ((v15 ^ *(_DWORD *)(*v12 + (*v13 & v7))) & 0x7FFFFFFF) * a2;
  v17 = STACK[0x5A54];
  v18 = ((v16 >> (LODWORD(STACK[0x5A54]) ^ 0xDD)) ^ v16) * a2;
  *(_BYTE *)(v15 + v11) = *(_BYTE *)(v4 + v14) ^ *(_BYTE *)(v8 + (v18 >> 24)) ^ *(_BYTE *)(a1 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v6 + 4) ^ v18 ^ (BYTE3(v18) * v9) ^ v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((999 * (v14 == 0)) ^ v17)) - 12))();
}

uint64_t sub_1009F8084()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(v0 - 12))();
}

uint64_t sub_1009F808C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 4147) ^ 0x1D37)) - 12))();
}

uint64_t sub_1009F80B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x41D0]))
                                                                                       - (STACK[0x6508]
                                                                                        + 10394)
                                                                                       + 14604))(a1, a2, a3, a4, 0x9D066556387F9509);
}

uint64_t sub_1009F8108()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x6508] - 225891487) & 0xD76FD38 ^ 0x1D35) + STACK[0x6508] - 4091))
                            - 4))();
}

uint64_t sub_1009F8170()
{
  LODWORD(STACK[0x9ED4]) += 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x41C4]) ^ 0x24BE)) - 4))();
}

uint64_t sub_1009F821C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x9ED4]) += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x1FD4]))
                                                                                       - 4))(a1, 3372187185, a3, a4, a5, 3192319592);
}

uint64_t sub_1009F84E0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((412 * (v2 > a2 + a1 + (((v4 - 16714) | 0x1881u) ^ 0x8B111983CD439F16) + v3)) ^ v4)))();
}

uint64_t sub_1009F8578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (((((v5 ^ 0x16) - 2395) ^ 0x33B7)
                                                                                            * (v4 != v6)) ^ v5))
                                                                              - 4))(a1, a2, a3, a4, 1772489163);
}

uint64_t sub_1009F85DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_1009F8610@<X0>(int a1@<W4>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;

  v19 = (((v9 ^ a3) + v10) & (2 * v8)) + (v8 ^ a4);
  v20 = a5 + v7 + v19;
  v21 = ((v20 ^ *(_DWORD *)(*v14 + (*v15 & a2))) & 0x7FFFFFFF) * a1;
  v22 = (v21 ^ HIWORD(v21)) * a1;
  *(_BYTE *)(v20 + v13) = *(_BYTE *)(v17 + (v22 >> 24)) ^ *(_BYTE *)(v19 + v5 + v11) ^ *(_BYTE *)(v18 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v16 + 4) ^ v22 ^ (BYTE3(v22) * v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22 * (v8 + 1 != v6)) ^ v9)) - 4))();
}

_QWORD *sub_1009F86B0()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  unint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  void (*v16)(uint64_t);
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 12;
  v3 = STACK[0x8A18];
  STACK[0xC3F0] = STACK[0x8A18];
  STACK[0xC768] -= 64;
  STACK[0xB368] = v3;
  LODWORD(v3) = *(_DWORD *)STACK[0x4D60] - *(_DWORD *)STACK[0x4D68];
  v4 = (v3 & 0xB) + 317501591;
  v5 = ((((v3 & 0xB) - 105) & 0x2C) << (v2 ^ 0x83u)) & (v4 ^ 0xC95A2E6B) ^ ((v3 & 0xB) - 105) & 0x2C;
  v6 = ((2 * (v4 ^ 0x935CA03B)) ^ 0x809010AE) & (v4 ^ 0x935CA03B) ^ (2 * (v4 ^ 0x935CA03B)) & 0x2402156;
  v7 = v6 ^ 0x2402151;
  v8 = (v6 ^ 0x7E0F4E01) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xF93FBD5C) & v7 ^ (4 * v7) & 0x7E4FEF54;
  v10 = (v9 ^ 0x780FAD43) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x6404203)) ^ 0xE4FEF570) & (v9 ^ 0x6404203) ^ (16 * (v9 ^ 0x6404203)) & 0x7E4FEF50;
  v12 = v10 ^ 0x7E4FEF57 ^ (v11 ^ 0x644EE500) & (v10 << 8);
  v13 = (32
       * ((v12 << 16) & 0x64F0000 ^ v12 ^ ((v12 << 16) ^ 0x7570000) & ((((v11 ^ 0x1A010A07) << 8) ^ 0x7EF0000) & (v11 ^ 0x1A010A07) ^ ((v11 ^ 0x1A010A07) << 8) & 0x64F0000))) ^ (16 * v4);
  LODWORD(STACK[0x8E04]) = (((v13 ^ 0xDECE6755) + 1498167521) ^ ((v13 ^ 0xD6F830A3) + 1366978327) ^ ((v13 ^ 0xD81F4BD6) + 1604129892))
                         - 1218922250;
  v14 = v3 & 0xF;
  if (v14 == 1)
    v14 = 0;
  LODWORD(STACK[0xC994]) = v14;
  v15 = STACK[0x6AD8];
  STACK[0x1D358] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 - 41))
                 - 1199091809
                 * ((v0 - 240 - 2 * ((v0 - 240) & 0xE06646CF502AC3E6) - 0x1F99B930AFD53C1ALL) ^ 0x19E9A18AFF5D6D56)
                 - 12;
  LODWORD(STACK[0x1D350]) = v1
                          - 1161873927
                          - 1199091809 * ((v0 - 240 - 2 * ((v0 - 240) & 0x502AC3E6) + 1344979942) ^ 0xFF5D6D56);
  v16 = (void (*)(uint64_t))STACK[0x44E8];
  ((void (*)(uint64_t))STACK[0x44E8])(v0 - 240);
  v17 = STACK[0x1FC0];
  STACK[0x1D358] = *(_QWORD *)(v15 + 8 * ((int)v1 + 34)) - STACK[0x1FC0] - 12;
  LODWORD(STACK[0x1D350]) = v1 - 1161873927 - v17;
  v16(v0 - 240);
  v18 = *(_QWORD *)(v15 + 8 * (((int)v1 - 4199) ^ 0x108BLL));
  v19 = 1199091809
      * ((STACK[0x1FD8] - ((v0 - 240) | 0xB2BBF9EBA49EF733) - 0x4D4406145B6108CDLL) ^ 0xB4CBE151F416A67CLL);
  LODWORD(STACK[0x1D350]) = v1 - 1161873927 - v19;
  STACK[0x1D358] = v18 - v19 - 12;
  v20 = ((uint64_t (*)(uint64_t))v16)(v0 - 240);
  STACK[0xC050] = *(_QWORD *)(v15 + 8 * ((int)v1 - 4199));
  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v15
                                                                                      + 8
                                                                                      * (int)((v1 - 4199) ^ 0x2D50))
                                                                          - 12))(&STACK[0x7694], v20);
}

uint64_t sub_1009F8A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (15387 * (v6 != v8)))) - ((602 * (v7 ^ 0x5E91) - 4132) | 0x1024u) + 4202))(a1, a2, a3, 1772489163, a5, a6, 13, 0x9D066556387F9509);
}

uint64_t sub_1009F8ACC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 19145)) - 12))();
}

uint64_t sub_1009F8AE4@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, char a4@<W6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;

  v15 = (v7 - 1);
  v16 = a6 + v9 + v15;
  v17 = ((v16 ^ *(_DWORD *)(*v10 + (*v11 & a3))) & 0x7FFFFFFF) * a1;
  v18 = (v17 ^ HIWORD(v17)) * a1;
  *(_BYTE *)(v16 + a5) = *(_BYTE *)(v13 + (v18 >> 24)) ^ *(_BYTE *)(v6 + v15) ^ *(_BYTE *)(v14 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v12 + 4) ^ v18 ^ (BYTE3(v18) * a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 1) * a2) ^ v8)) - 12))();
}

uint64_t sub_1009F8B6C()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  STACK[0xC810] = STACK[0xDEA8];
  LODWORD(STACK[0xB124]) = STACK[0xDEA4];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((int)v0 + 6459)))();
}

uint64_t sub_1009F8BC4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((2 * ((STACK[0x6508] + 14285) ^ 0x6D26)) ^ 0x5927) * (v0 == -731380499)) ^ (STACK[0x6508] + 14285)))
                            - 4))();
}

uint64_t sub_1009F8C14@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 + 647) ^ 0x4ACELL)))();
}

uint64_t sub_1009F8C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25 * ((((v7 ^ 0xCA027B0B) + 905807093) ^ ((v7 ^ 0x4D2AED63) - 1294658915) ^ ((v7 ^ 0x5FE6E847) - 1608989427 + ((v8 - 19114) | 0x528C))) + 1788988706 >= 0x91D34EF3)) ^ v8)) - 4))(17384, 4294954122, a3, a4, a5, a6, a7, 6209);
}

uint64_t sub_1009F8D24()
{
  int v0;
  unsigned int v1;

  LODWORD(STACK[0xDE9C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((95 * (((v1 > 0x1FF) ^ (v0 - 126) ^ 0x95) & 1)) ^ (v0 + 2018)))
                            - ((v0 - 17534) | 0x11u)
                            + 1625))();
}

uint64_t sub_1009F8D98(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 1632) = STACK[0xC2A4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * (int)(((v2 ^ 0xB9949204) + 1181460048) ^ v2)))(a1, a2, 19525, 3288435957);
}

uint64_t sub_1009F8E38()
{
  int v0;
  unsigned int v1;

  LODWORD(STACK[0xDE94]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((1721 * (((v1 > 0x1FF) ^ (-13 * (v0 ^ 0xAF))) & 1)) ^ v0))
                            - ((v0 - 19530) ^ 0x666)))();
}

uint64_t sub_1009F8EA8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = (v2 - 69806437) & STACK[0x1CE4];
  *(_DWORD *)(v3 + 1624) = STACK[0xC2A4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8 * (int)(v2 ^ 0xB994AECF ^ v4)))(a1, a2, 19525, 3288435957);
}

uint64_t sub_1009F8F4C()
{
  int v0;

  STACK[0xC768] += (v0 - 7531) ^ 0xFFFFFFFFFFFFDA6ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_1009F8F8C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 == -1926392729) * ((a1 ^ v1) + 27357)) ^ a1)))();
}

uint64_t sub_1009F8FC4()
{
  int v0;
  unsigned int v1;
  int v2;
  _DWORD *v3;
  int v4;
  _DWORD *v5;
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;
  unint64_t v11;
  unsigned int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;

  v1 = STACK[0xB124];
  LODWORD(STACK[0xBDA4]) = STACK[0xB124];
  STACK[0xD150] = STACK[0xC810];
  v2 = (((v1 >> (((v0 - 79) ^ 0x8A) + 87)) ^ 0xA7711) + 130071894) ^ (((v1 >> (((v0 - 79) ^ 0x8A) + 87)) ^ 0x6F9D3826)
                                                                    + 139981411) ^ (((v1 >> (((v0 - 79) ^ 0x8A) + 87)) ^ 0x7459671)
                                                                                  + 9395254);
  v3 = (_DWORD *)STACK[0x4D68];
  v4 = *(_DWORD *)STACK[0x4D68];
  v5 = (_DWORD *)STACK[0x4D60];
  v6 = *(_DWORD *)STACK[0x4D60];
  v7 = 16 * (((v6 + v4) & 7) + 15197916 + v2) + 25120;
  LODWORD(STACK[0xBC98]) = (((v7 ^ 0x5D57BB0E) - 2096272691) ^ ((v7 ^ 0x24D7C02A) - 91418135) ^ ((v7 ^ 0x79807B24)
                                                                                               - 1478841625))
                         + 816392905;
  v8 = v6 ^ v4;
  v9 = (v6 ^ v4) & 0x17;
  if (v9 == 1)
    v9 = 0;
  LODWORD(STACK[0x9F74]) = v9;
  STACK[0x8C38] = STACK[0x8040];
  LODWORD(STACK[0x6B60]) = ((((((16 * (v6 + v4)) & 0xB0) + 32) ^ 0x4726CE29) + 550750930) ^ (((((16 * (v6 + v4)) & 0xB0)
                                                                                             + 32) ^ 0xE25FA7FC)
                                                                                           - 2052414715) ^ (((((16 * (v6 + v4)) & 0xB0) + 32) ^ 0xA57969D5) - 1030984402))
                         - 1492191341;
  v10 = v8 & 0xF;
  if (v10 == 1)
    v10 = 0;
  LODWORD(STACK[0xCEB4]) = v10;
  v11 = STACK[0x7FB0];
  v12 = *(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340EEALL);
  LODWORD(STACK[0x7274]) = v12;
  STACK[0x7090] = v11 - 0x28623712C9340FB2;
  v13 = v6 - v4;
  v14 = 16
      * ((v13 & 0xB)
       + ((((v12 >> 4) ^ 0xC61D6A0) + 65966059) ^ (((v12 >> 4) ^ 0xA0F4A2) + 254782953) ^ (((v12 >> 4) ^ 0x413FB44)
                                                                                         + 194814479)))
      - 1977090240;
  LODWORD(STACK[0x6C14]) = (((v14 ^ 0x59B98D8E) - 1424329777) ^ ((v14 ^ 0x6512211D) - 1749950626) ^ ((v14 ^ 0x3CABAC93) - 838315308))
                         + 476053067;
  v15 = v13 & 0xF;
  if (v15 == 1)
    v15 = 0;
  LODWORD(STACK[0x863C]) = v15;
  STACK[0x9A70] = v11 - 0x28623712C9340EE6;
  v16 = (v8 & 0xB) + 458460777;
  v17 = v16 & 0x18 ^ 0x204D35A ^ (2 * (v16 & 0x18)) ^ ((2 * (v16 & 0x18)) & v16 | 0x54B3972A);
  v18 = 2 * (v16 ^ 0xB21B35E8);
  v19 = (v18 | 0xA9488880) & (v16 ^ 0xB21B35E8);
  v20 = v19 ^ v18 & 0x30;
  v19 &= 0x9003206u;
  v21 = v17 ^ v19 ^ ((4 * v17) ^ 0x537A23C6) & (v20 ^ 0x56B74460);
  v22 = ((4 * v20) ^ 0x537A2386) & (v20 ^ 0x56B74460) ^ v19;
  v23 = v21 ^ v22 & 0x9A73206 ^ ((16 * v21) ^ 0x68A37506) & (v22 ^ 0xA70000);
  v24 = ((16 * v22) ^ 0x3D73206) & (v22 ^ 0xA70000) ^ v22 & 0x9A73206;
  v25 = v23 ^ v24 & 0x9A73206 ^ ((v23 << 8) ^ 0xBEE34206) & (v24 ^ 0xA70070);
  v26 = ((v24 << 8) ^ 0xAEA73206) & (v24 ^ 0xA70070) ^ v24 & 0x9A73206;
  v27 = (32
       * (v25 ^ v26 & 0x1A73206 ^ ((v25 << 16) ^ 0x4DD73207) & (v26 ^ 0x6100000) ^ ((v25 << 16) ^ 0x4DD73207) & 0x6B70000)) ^ (16 * v16);
  LODWORD(STACK[0x9730]) = (((v27 ^ 0x7F132634) + 25679842) ^ ((v27 ^ 0x3DA02358) + 1127535246) ^ ((v27 ^ 0xDE9C92EC)
                                                                                                 - 1610063046))
                         + 742954550;
  v28 = (*v5 ^ *v3) & 0xF;
  if (v28 == 1)
    v28 = 0;
  LODWORD(STACK[0xA934]) = v28;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 1615) ^ 0x1B8B)) - 8))(5121);
}

uint64_t sub_1009F9594()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;

  v0 = (((LODWORD(STACK[0xDED0]) ^ 0xAFED2417) + 1343413225) ^ ((LODWORD(STACK[0xDED0]) ^ 0x91C598D7) + 1849321257) ^ ((LODWORD(STACK[0xDED0]) ^ 0xB30528A7) + 1291507545))
     + ((9 * LODWORD(STACK[0x2CB0])) ^ 0xE376CBB7);
  v1 = (v0 ^ 0x8DA60134) & (2 * (v0 & 0xA9B6A985)) ^ v0 & 0xA9B6A985;
  v2 = ((2 * (v0 ^ 0xCCA25134)) ^ 0xCA29F162) & (v0 ^ 0xCCA25134) ^ (2 * (v0 ^ 0xCCA25134)) & 0x6514F8B0;
  v3 = v2 ^ 0x25140891;
  v4 = (v2 ^ 0x4000E020) & (4 * v1) ^ v1;
  v5 = ((4 * v3) ^ 0x9453E2C4) & v3 ^ (4 * v3) & 0x6514F8B0;
  v6 = (v5 ^ 0x410E081) & (16 * v4) ^ v4;
  v7 = ((16 * (v5 ^ 0x61041831)) ^ 0x514F8B10) & (v5 ^ 0x61041831) ^ (16 * (v5 ^ 0x61041831)) & 0x6514F8B0;
  v8 = v6 ^ 0x6514F8B1 ^ (v7 ^ 0x410488A1) & (v6 << 8);
  v9 = (v8 << 16) & 0x65140000 ^ v8 ^ ((v8 << 16) ^ 0x78B10000) & (((v7 ^ 0x241070A1) << 8) & 0x65140000 ^ 0x61040000 ^ (((v7 ^ 0x241070A1) << 8) ^ 0x14F80000) & (v7 ^ 0x241070A1));
  v10 = STACK[0x6508] + 1671;
  v11 = LODWORD(STACK[0xDECC]) + 1;
  LODWORD(STACK[0xDECC]) = v11;
  LODWORD(STACK[0xDED0]) = v0 ^ (2 * v9) ^ 0x2E92CC80;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((479 * (v11 > 1)) ^ v10)) - 8))();
}

uint64_t sub_1009F9784()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;

  LODWORD(STACK[0x8230]) = v0;
  STACK[0xB128] = STACK[0xAFA8];
  v2 = *(_DWORD *)STACK[0x4D68];
  v3 = *(_DWORD *)STACK[0x4D60];
  v4 = ((((v0 >> 4) ^ 0xC6A8A1D3) + (v1 ^ 0x7323) + 1717468429) ^ (((v0 >> 4) ^ 0x3369886C) - 1818237386) ^ (((v1 - 49033316) ^ (v0 >> 4)) + 1575329441))
     + ((v3 - v2) & 0xB)
     - 2013948101;
  v5 = (v4 ^ 0xCFF5A994) & (2 * (v4 & 0xCFE5B1A6)) ^ v4 & 0xCFE5B1A6;
  v6 = ((2 * (v4 ^ 0xD0B4C89C)) ^ 0x3EA2F274) & (v4 ^ 0xD0B4C89C) ^ (2 * (v4 ^ 0xD0B4C89C)) & 0x1F51793A;
  v7 = v6 ^ 0x151090A;
  v8 = (v6 ^ 0x1E404032) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x7D45E4E8) & v7 ^ (4 * v7) & 0x1F517938;
  v10 = (v9 ^ 0x1D416032) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x2101912)) ^ 0xF51793A0) & (v9 ^ 0x2101912) ^ (16 * (v9 ^ 0x2101912)) & 0x1F517930;
  v12 = v10 ^ 0x1F51793A ^ (v11 ^ 0x1511111A) & (v10 << 8);
  v13 = (32
       * ((v12 << 16) & 0x7510000 ^ v12 ^ ((v12 << 16) ^ 0x13A0000) & (((v11 ^ 0xA40681A) << 8) & 0x7510000 ^ (((v11 ^ 0xA40681A) << 8) ^ 0x1790000) & (v11 ^ 0xA40681A) ^ 0x6000000))) ^ (16 * v4);
  LODWORD(STACK[0xAC74]) = (((v13 ^ 0xF0BFCBE) + 1455553086) ^ ((v13 ^ 0xA9305E3F) - 252028739) ^ ((v13 ^ 0x904F9FA1)
                                                                                                 - 913991389))
                         - 1622818584;
  v14 = (v3 ^ v2) & 0xF;
  if (v14 == 1)
    v14 = 0;
  LODWORD(STACK[0x8ECC]) = v14;
  STACK[0xC398] = 0;
  v15 = ((uint64_t (*)(uint64_t))STACK[0x5510])(88);
  STACK[0xB548] = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((17227 * (v15 != 0)) ^ v1)) - 12))();
}

uint64_t sub_1009F9A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 7373)) - 12))(a1, a2, a3, a4, a5, 330416983, a7, 749341172);
}

uint64_t sub_1009F9ABC()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2963)))();
}

uint64_t sub_1009F9AE0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 2546)))();
}

uint64_t sub_1009F9BE8()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)(LODWORD(STACK[0x4E50]) ^ (STACK[0x6508] - 2575)))
                                                   - 4))(STACK[0xB548]);
}

uint64_t sub_1009F9C34()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 14005) + 4210))();
}

uint64_t sub_1009F9C5C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t (*v2)(void);
  int v3;
  int v4;
  int v5;
  _DWORD *v6;
  _QWORD *v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE *v16;
  unsigned int v17;
  unint64_t v18;
  _BYTE *v19;
  unint64_t v20;

  v5 = v4 + v3;
  v6 = (_DWORD *)STACK[0x60B8];
  v7 = (_QWORD *)STACK[0x60C0];
  v8 = (_BYTE *)(a1 + (v5 + 1096));
  v9 = 1772489163
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xBE46EE68)) ^ v8) & 0x7FFFFFFF);
  v10 = 1772489163 * (v9 ^ HIWORD(v9));
  v11 = STACK[0x5770];
  v12 = STACK[0x5768];
  v13 = STACK[0x58B0];
  *v8 = *(_BYTE *)(STACK[0x5770] + (v10 >> 24)) ^ HIBYTE(a2) ^ *(_BYTE *)(STACK[0x5768] + (v10 >> 24)) ^ *(_BYTE *)((v10 >> 24) + STACK[0x58B0] + 4) ^ v10 ^ (13 * BYTE3(v10)) ^ 0x7C;
  v14 = (_BYTE *)(a1 + (v5 + 1097));
  LODWORD(v10) = 1772489163 * ((*(_DWORD *)(*v7 + (int)(*v6 & 0xBE46EE68)) ^ v14) & 0x7FFFFFFF);
  v15 = 1772489163 * (v10 ^ WORD1(v10));
  *v14 = *(_BYTE *)(v11 + (v15 >> 24)) ^ BYTE2(a2) ^ *(_BYTE *)(v12 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v13 + 4) ^ v15 ^ (13 * BYTE3(v15)) ^ 0x74;
  v16 = (_BYTE *)(a1 + (v5 + 1098));
  v17 = 1772489163 * ((*(_DWORD *)(*v7 + (int)(*v6 & 0xBE46EE68)) ^ v16) & 0x7FFFFFFF);
  v18 = 1772489163 * (v17 ^ HIWORD(v17));
  *v16 = ((BYTE1(a2) ^ 0xE0) - ((2 * (BYTE1(a2) ^ 0xE0)) & 0x76) - 69) ^ *(_BYTE *)(v11 + (v18 >> 24)) ^ *(_BYTE *)(v12 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v13 + 4) ^ v18 ^ (13 * BYTE3(v18)) ^ 0xBB;
  v19 = (_BYTE *)(a1 + (v5 + 1099));
  LODWORD(v14) = 1772489163 * ((*(_DWORD *)(*v7 + (int)(*v6 & 0xBE46EE68)) ^ v19) & 0x7FFFFFFF);
  v20 = 1772489163 * (v14 ^ (v14 >> 16));
  *v19 = a2 ^ *(_BYTE *)(v11 + (v20 >> 24)) ^ *(_BYTE *)(v12 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v13 + 4) ^ v20 ^ (13 * BYTE3(v20)) ^ 0x35;
  return v2();
}

uint64_t sub_1009F9E2C()
{
  unint64_t v0;
  int v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 1041;
  STACK[0xC398] = STACK[0xB548] + 8;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((v0 + 12924) ^ v1)))();
}

uint64_t sub_1009F9E9C()
{
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8]
                                                     + 8 * (int)(LODWORD(STACK[0x4E5C]) ^ (STACK[0x6508] - 1080))))(STACK[0xB548]);
}

uint64_t sub_1009F9F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((433 * (v2 - 0xC45E527E7937E4ELL > (unint64_t)(a1 + v1))) ^ v3))
                            - ((v3 + 1761130791) & 0x97072FEA ^ ((v3 + 330407724) - 330413586))))();
}

uint64_t sub_1009F9F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v6) - (v6 ^ 0x2FCALL)))(a1, a2, a3, a4, a5, a6, STACK[0x5768]);
}

uint64_t sub_1009FA008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  _QWORD *v16;
  _DWORD *v17;
  _BYTE *v18;
  unsigned int v19;
  unint64_t v20;

  v18 = (_BYTE *)(a1 + v9 + v7);
  v19 = ((*(_DWORD *)(*v16 + (int)(*v17 & 0xBE46EE68)) ^ v18) & 0x7FFFFFFF) * (v11 + 1772477028);
  v20 = (v19 ^ HIWORD(v19)) * v14;
  *v18 = *(_BYTE *)(v13 + (v20 >> 24)) ^ *(_BYTE *)(v8 + v9) ^ *(_BYTE *)(a7 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v12 + 4) ^ v20 ^ (BYTE3(v20) * v15);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((165 * (v9 + 1 != v10)) ^ v11)) - 8))();
}

uint64_t sub_1009FA0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (int)(v6 ^ a6 ^ (2965 * (v6 <= ((v6 - 330414546) | 0x114) + 1924732475))))
                                                                              - 8))(a1, a2, a3, a4, 1772489163);
}

uint64_t sub_1009FA11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  _BYTE *v17;
  unsigned int v18;
  unint64_t v19;

  v16 = (v10 - 1);
  v17 = (_BYTE *)(a1 + v7 + v16);
  v18 = ((v17 ^ *(_DWORD *)(*v14 + (*v15 & (v9 - 1102659254)))) & 0x7FFFFFFF) * a5;
  v19 = (v18 ^ HIWORD(v18)) * a5;
  *v17 = *(_BYTE *)(v12 + (v19 >> 24)) ^ *(_BYTE *)(v8 + v16) ^ *(_BYTE *)(a7 + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + v11 + 4) ^ v19 ^ (BYTE3(v19) * v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((633 * (v10 == 1)) ^ v9)) - 8))();
}

uint64_t sub_1009FA1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(v1 + a1))();
}

uint64_t sub_1009FA1B8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((LODWORD(STACK[0x4E58]) | 0x40B) ^ 0x78D) + STACK[0x6508] - 2565))
                            - 4))();
}

uint64_t sub_1009FA200()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2611) ^ 0x4154))
                            - ((LODWORD(STACK[0x4E54]) | 0x402u) ^ 0x472FLL)))();
}

uint64_t sub_1009FA268()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2116))
                            - (STACK[0x6508] ^ 0x312B)
                            + 8533))();
}

uint64_t sub_1009FA2FC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((47 * (STACK[0x7FB0] - 0x28623712C9340D9ALL <= STACK[0xB548] + 56)) ^ LODWORD(STACK[0x3968])))
                            - 12))();
}

uint64_t sub_1009FA4FC(int a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((230 * ((v2 ^ a1) != ((v1 - 24071) | 0x1016) - 4214)) ^ v1))
                            - 4))();
}

uint64_t sub_1009FA570()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7061)) - 8))();
}

uint64_t sub_1009FA59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;

  v18 = v11 - 1;
  v19 = (((v18 + v8 + 56) ^ *(_DWORD *)(*v13 + (*v16 & a8))) & 0x7FFFFFFF) * (a6 + (v10 ^ 0x8CC) - 2116);
  v20 = (v19 ^ HIWORD(v19)) * a5;
  *(_BYTE *)(v18 + v8 + 56) = *(_BYTE *)(v14 + (v20 >> 24)) ^ *(_BYTE *)(v9 + v18) ^ *(_BYTE *)(v15 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v17 + 4) ^ v20 ^ (BYTE3(v20) * v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13293 * (v18 != 0)) ^ (v10 + 3952))) - 8))();
}

_QWORD *sub_1009FA638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = STACK[0x6508] ^ 0xF4;
  v3 = STACK[0xC768];
  STACK[0x8798] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = (v2 ^ 0x10A2) + v3;
  LODWORD(STACK[0x7F18]) = 0;
  v4 = STACK[0x6AD8];
  STACK[0xC050] = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3934])) - 8;
  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x3930])) - 12))(&STACK[0x7F18], a1, a2, 19525, 3288435957);
}

uint64_t sub_1009FA6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unsigned int v10;

  v9 = v7 ^ 0x76ED7CD3;
  v10 = (((v8 ^ 0xA0758A75) - 1153977571) ^ ((v8 ^ 0x3C6045C3) + 656571563) ^ (((v9 + 2087638858) & 0xCA41677)
                                                                             + 1611661316
                                                                             + (v8 ^ 0x7B5235DB)
                                                                             - 967))
      + ((v9 - 1034585525) & 0xC6BD7BBA ^ 0x7AE74715);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((__PAIR64__((((v10 - v9) | (v9 - v10)) & 0x80000000) == 0, ~((v10 - v9) | (v9 - v10))) >> 31) ^ (v9 - 1995244239))) - 8))(a1, a2, a3, a4, a5, a6, a7, 1772489163);
}

uint64_t sub_1009FA7E4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 10184)))();
}

uint64_t sub_1009FA810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  _BOOL4 v25;

  v20 = v12;
  v21 = (_BYTE *)(v12 + v8 - 6274 + 30 * (v10 ^ 0x10A5u));
  v22 = *(_DWORD *)(*v17 + (*v18 & v13));
  v23 = ((((v21 ^ v22) & 0x7FFFFFFF) * a8) ^ ((((v21 ^ v22) & 0x7FFFFFFF) * a8) >> 16)) * a8;
  v24 = v12 + 1;
  *v21 = *(_BYTE *)(v14 + (v23 >> 24)) ^ *(_BYTE *)(v9 + v20) ^ *(_BYTE *)(v15 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v19 + 4) ^ v23 ^ (BYTE3(v23) * v16);
  if (v11 < 0x76ED22B4 != v24 > 0x8912DD4B)
    v25 = v11 < 0x76ED22B4;
  else
    v25 = v24 + 1995252404 < v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20131 * v25) ^ (v10 + 3952))) - 8))();
}

uint64_t sub_1009FA8E8@<X0>(_DWORD *a1@<X8>)
{
  int v1;

  LODWORD(STACK[0xD3FC]) = *a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_1009FA980@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((16784 * (a1 == 88)) ^ v1))
                            - ((v1 ^ 0x431C397u)
                             - 70357068)
                            + 21106))();
}

uint64_t sub_1009FA9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  unint64_t v8;
  int8x16_t *v9;

  v8 = STACK[0xC768];
  v9 = (int8x16_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  v9->i64[0] = 0x5A6762CB0FB2273ALL;
  v9->i64[1] = 0x678F1779A8439AF4;
  v9[1] = veorq_s8(*v9, (int8x16_t)xmmword_101507260);
  STACK[0xC768] = v8 + 32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (int)(v7 ^ 0x431F3F9 ^ ((v7 < 0xAB7CFFBB) * (v7 - 70354993)))))(3192319592, 10778, 4294967243, 57, STACK[0x60C0], STACK[0x5538], a7, STACK[0x60B8]);
}

uint64_t sub_1009FAAB8(int a1, int a2, char a3, int a4, _QWORD *a5, uint64_t a6, uint64_t a7, _DWORD *a8)
{
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;

  v13 = ((*(_DWORD *)(*a5 + (*a8 & a1)) ^ (v12 + v9 - 1)) & (v11 + (v8 ^ a2) + 3754)) * v10;
  *(_BYTE *)(v12 + v9 - 1) ^= *(_BYTE *)(a6 + (((_BYTE)v9 - 1) & 0xF | (16 * (((v13 ^ HIWORD(v13)) * v10) >> 24)))) ^ ((v13 ^ BYTE2(v13)) * a3);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v9 < 0x50) * a4) ^ v8)))();
}

uint64_t sub_1009FAB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  unint64_t v4;

  STACK[0xD1A8] += 32;
  STACK[0xD400] = v4;
  STACK[0xD408] = v4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (((14 * (v3 ^ 0x623A) - 13238)
                                                                                            * (a3 != v4)) ^ v3))
                                                                              - 8))(a1, 1107296301, a2, 9175040, 276832410);
}

uint64_t sub_1009FABC4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v0 - 1260903755) & 0x4B27B9F6 ^ 0x6BE7) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1009FAC0C()
{
  int v0;
  uint64_t v1;
  _BYTE *v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v1;
  *((_BYTE *)&STACK[0x1D0C0] + v1 + 16) = *v2;
  v3[17] = v2[1];
  v3[18] = v2[2];
  v3[19] = v2[3];
  v3[20] = v2[4];
  v3[21] = v2[5];
  v3[22] = v2[6];
  v3[23] = v2[7];
  v3[24] = v2[8];
  v3[25] = v2[9];
  v3[26] = v2[10];
  v3[27] = v2[11];
  v3[28] = v2[12];
  v3[29] = v2[13];
  v3[30] = v2[14];
  v3[31] = v2[15];
  *(_QWORD *)v3 = *(_QWORD *)v2;
  *((_QWORD *)v3 + 1) = *((_QWORD *)v2 + 1);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 ^ 0x29D2)))();
}

uint64_t sub_1009FACC8@<X0>(int a1@<W3>, unsigned __int8 *a2@<X8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  STACK[0x6920] = v4;
  v5 = *(_QWORD *)(v3 + 8 * (v2 ^ 0x4F83));
  v6 = *(_QWORD *)(v3 + 8 * (v2 - 18935));
  v7 = *(_QWORD *)(v3 + 8 * (v2 - 19555)) - 12;
  v8 = *(unsigned __int8 *)(v5 + (a2[9] ^ 4));
  v9 = *(unsigned __int8 *)(v7 + (a2[4] ^ 0xBLL)) << 24;
  v10 = (v8 ^ (v8 >> 2) ^ (v8 >> 1)) << 16;
  v11 = *(_QWORD *)(v3 + 8 * (v2 - 19877)) - 4;
  v12 = *(unsigned __int8 *)(v11 + (a2[10] ^ 0x74));
  v13 = (((((v12 >> 6) | (4 * v12)) << 8) ^ 0xB0733CF1) & (v10 ^ 0xFE1BFFFF) | v10 & a1) ^ 0x4E08340E;
  v14 = a2[8];
  v15 = a2[5] ^ 0x8ELL;
  STACK[0x6990] = v5;
  LODWORD(v15) = *(unsigned __int8 *)(v5 + v15);
  STACK[0x6970] = v7;
  v16 = (((v13 | 0x805917AD) - (v13 | 0x7FA6E852) + 2141644882) ^ 0x81410629) & ((*(unsigned __int8 *)(v7 + (v14 ^ 0xF6)) << 24) ^ 0x8043C679) ^ ((v13 | 0x805917AD) - (v13 | 0x7FA6E852) + 2141644882) & 0x6BBC3986;
  LODWORD(v14) = (v16 & 0x5C36D795 ^ 0x5406C615) + (v16 ^ 0x2B301180) - ((v16 ^ 0x2B301180) & 0x5C36D795);
  v17 = *(unsigned __int8 *)(v6 + (a2[7] ^ 0xA6));
  LODWORD(v15) = (((v15 ^ (v15 >> 2) ^ (v15 >> 1)) << 16) ^ 0xA46C0008) & (v9 ^ 0x76FF0008) | v9 & 0x5B000000;
  v18 = (((((v17 >> 5) | (8 * v17)) ^ 0x93) >> 3) | (32
                                                                                     * (((v17 >> 5) | (8 * v17)) ^ 0x93)));
  v19 = a2[11] ^ 0x11;
  STACK[0x6980] = v6;
  LODWORD(v19) = *(unsigned __int8 *)(v6 + v19);
  v20 = a2[6] ^ 0xD3;
  STACK[0x6960] = v11;
  LODWORD(v20) = ((*(_BYTE *)(v11 + v20) >> 6) | (4 * *(_BYTE *)(v11 + v20))) << 8;
  LODWORD(v20) = ((((v15 ^ 0xD809CD67) & (v18 ^ 0xFFFFDDFF) & 0x9D260D6F ^ 0x20000)
                 + (((v15 ^ 0xD809CD67) & (v18 ^ 0xFFFFDDFF) ^ v18) & 0x62D9D090 ^ 0x6259E001)
                 - 1) ^ 0xF68DD9A0) & (v20 ^ 0xFFFF89FF) ^ v20 & 0xB00;
  STACK[0x6950] = STACK[0xD400];
  STACK[0x6940] = STACK[0xD408];
  LODWORD(STACK[0x69B0]) = ((v14 ^ 0x74CD8615) & (v19 ^ 0xFFFFFF5C) & 0x596BB595 ^ v19 & 0x84 | (v14 ^ 0x74CD8615) & (v19 ^ 0xFFFFFF5C) & 0xA6944A6A) ^ 0xB5EA038A;
  LODWORD(STACK[0x69A0]) = ((v20 & 0x9FE385B5 ^ 0x9FC38435) + (v20 & 0x601C7A4A ^ 0x80A01) - 1) ^ 0xC10F98C7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_1009FB794@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  __int16 v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned __int8 v87;
  int v88;
  int v89;
  BOOL v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unint64_t v95;
  __int16 v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned __int8 v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  uint64_t v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned __int8 v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned __int8 v207;
  unsigned __int8 v208;
  unsigned int v209;
  int v210;
  unint64_t v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  unsigned __int8 v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  char *v257;
  int v258;
  unsigned int v259;
  int v260;
  uint64_t v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  char *v273;
  unint64_t v274;
  uint64_t v275;
  int v276;
  int v277;
  char v278;
  char *v279;
  int v280;
  unint64_t v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  char *v285;
  int v286;
  int v287;
  int v288;
  char *v289;
  int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;

  LODWORD(STACK[0x6AC0]) = v2;
  v11 = (v2 - 16948) | 0x1060;
  LODWORD(STACK[0x6A80]) = v3 & 0xFFFFFFF8;
  LODWORD(STACK[0x6930]) = v11;
  v12 = STACK[0x6950];
  v13 = *(unsigned __int8 *)(STACK[0x6950]
                           + (((v11 ^ 0x87F705FC ^ ((v3 & 0xFFFFFFF8 ^ 0x6A7260B0)
                                                  + (v3 & (v2 ^ 0x86BE2FFA) ^ 0x848C0D07)
                                                  - ((v3 & 0xFFFFFFF8 ^ 0x6A7260B0) & 0x86BE6DB0)))
                             - 1) ^ 0xE2F283DBLL));
  v14 = ((v3 & 0xFFFFFFF5 ^ 0x5F3B329D) + 466224325 - ((2 * (v3 & 0xFFFFFFF5 ^ 0x5F3B329D)) & 0x3794098A)) ^ 0x26CB521D;
  v15 = (((2 * v14) & 0x236D6EA0) - v14 - 297187153) ^ 0x5BAB7B1;
  STACK[0x6AA0] = v15;
  v16 = STACK[0x6980];
  LODWORD(v13) = *(unsigned __int8 *)(STACK[0x6980] + (v13 ^ 0x41));
  v17 = STACK[0x6960];
  LODWORD(v15) = *(unsigned __int8 *)(STACK[0x6960] + (*(unsigned __int8 *)(v12 + v15) ^ 0xB9));
  v18 = v3 & 0xFFFFFFF4 ^ 0x89C99B5B;
  STACK[0x6AB0] = v18;
  v19 = *(unsigned __int8 *)(v12 + v18);
  v20 = ((v3 & 0xFFFFFFF1 ^ 0x3436ADB0) + (v3 & 0x9A6BD520 ^ 0x8A49500E) - ((v3 & 0xFFFFFFF1 ^ 0x3436ADB0) & 0x9A6BD520)) ^ 0xD86BD522;
  v21 = (1345721589 - (v20 | 0x503614F5) + (v20 | 0xAFC9EB0A)) ^ 0x5036DDE9;
  STACK[0x6A70] = v21;
  v22 = (v19 - 176107038 - ((2 * v19) & 0x1C4)) ^ 0xF580D1F5;
  LODWORD(v15) = (*(unsigned __int8 *)(v16 + v22) ^ 0xB3CBFF10) & ((((v15 >> 6) | (4 * v15)) << 8) ^ 0xB3CB9393) | *(_BYTE *)(v16 + v22) & 0x6C;
  v23 = (v15 & 0x204A7E99 ^ v6) + (v15 & (v7 + 3085) ^ 0x80300061) - 1;
  LODWORD(v15) = *(unsigned __int8 *)(v17 + (*(unsigned __int8 *)(v12 + v21) ^ 0xF2));
  v24 = (((2 * (v3 & 0xFFFFFFFE ^ 0x53160532)) | 0x84713BF2) - (v3 & 0xFFFFFFFE ^ 0x53160532) - 1111006713) ^ 0x46189C63;
  v25 = (((2 * v24) | 0x5CA0E47A) - v24 + 1370459587) ^ 0x70AFEDC6;
  STACK[0x6A90] = v25;
  v26 = STACK[0x6990];
  LOBYTE(v24) = *(_BYTE *)(STACK[0x6990] + (*(unsigned __int8 *)(v12 + v25) ^ 0xE4));
  v27 = (((2 * (v24 & 0xAB ^ 0x29)) & 0x10) - (v24 & 0xAB ^ 0x29) + 119) ^ 0xF7;
  v28 = ((v24 & 0xA9 | 0x12) - (v24 & 2 | 0xED) - 19) ^ 0x11;
  LOBYTE(v24) = (((v24 ^ 0x5D) + 8) ^ ((v24 ^ 0x96) - 51) ^ ((v24 ^ 0x73) + 42))
              + (((((v27 | 0xE9) - (v27 | 0x16) + 22) ^ 0xC4) + 54) ^ ((((v27 | 0xE9) - (v27 | 0x16) + 22) ^ 0xE9) + 25) ^ ((((v27 | 0xE9) - (v27 | 0x16) + 22) ^ 0x3A) - 52))
              - 42;
  v29 = (1928864025 - (v3 & 0xFFFFFFF3 ^ 0x1CF226B0 | 0x72F82119) + (v3 & 0xFFFFFFF3 ^ 0x1CF226B0 | 0x8D07DEE6)) ^ 0x8D83DCFE;
  v30 = (-632768234 - v29 + ((a1 + 676) | (2 * v29))) ^ 0xB008F91DLL;
  STACK[0x6A20] = v30;
  LOBYTE(v29) = v24 & 0xAF ^ 0xA7;
  LOBYTE(v24) = v24 ^ (2
                     * ((v24 ^ 0x60) & (2
                                      * ((v24 ^ 0x60) & (2
                                                       * ((v24 ^ 0x60) & (2
                                                                        * ((v24 ^ 0x60) & (2
                                                                                         * (v24 & (2
                                                                                                 * (((2 * v24) & 0x42 ^ 0x4E) & v24 ^ v29)) ^ v29)) ^ v29)) ^ v29)) ^ v29)) ^ v29));
  LOBYTE(v24) = (v24 ^ 0x50) & ((((2 * v28) & 0x68) - v28 + 75) ^ 0x37) ^ v24 & 0xA9;
  v31 = ((v15 >> 6) | (4 * v15)) << 8;
  LOBYTE(v15) = v24 ^ (v24 >> 2) ^ (v24 >> 1);
  v32 = (((2 * (v3 & 0xFFFFFFFC ^ 0x2D4C60C0)) | 0xAC21AF38) - (v3 & 0xFFFFFFFC ^ 0x2D4C60C0) + 703539300) ^ 0xDE3AD7F4;
  v33 = STACK[0x6970];
  v34 = *(unsigned __int8 *)(STACK[0x6970] + (*(unsigned __int8 *)(v12 + v30) ^ 0x3FLL));
  v35 = (612636504 - (v32 | 0x24841758) + (v32 | 0xDB7BE8A7)) ^ 0x77D4135CLL;
  STACK[0x6A40] = v35;
  v36 = v15;
  LODWORD(v15) = (((v34 ^ 0x45) - 69) ^ ((v34 ^ 0xFFFFFFE3) + 29) ^ ((v34 ^ 0xFFFFFFF8) + 8))
               + (((v34 ^ 0xFFFFFFB6) - 37) ^ ((v34 ^ 0x3C) + 81) ^ ((v34 ^ 0x29) + 70))
               - 45;
  v37 = v15 & 0xC ^ 0x68;
  LODWORD(v15) = v15 ^ (2
                      * ((v15 ^ 0x3C) & (2
                                       * ((v15 ^ 0x3C) & (2
                                                        * ((v15 ^ 0x3C) & (2 * ((v15 ^ 0x3C) & (2 * v37) ^ v37)) ^ v37)) ^ v37)) ^ v37));
  v38 = ((v3 & 0xFFFFFFF0 ^ 0x67162C2A) + (v3 & 0xD1E9CAA0 ^ 0x90E9C281) - ((v3 & 0xFFFFFFF0 ^ 0x67162C2A) & 0xD1E9CAA8)) ^ 0x3F367DDC;
  STACK[0x6A60] = v38;
  LODWORD(v15) = (((v34 ^ 0x70) - 112) ^ ((v34 ^ 0x59) - 89) ^ ((v34 ^ 0x77) - 119))
               + (((v15 ^ 0xFFFFFF88) - 94) ^ ((v15 ^ 0xFFFFFFD2) - 4) ^ ((v15 ^ 0xFFFFFFAA) - 124))
               - 35;
  v39 = *(unsigned __int8 *)(v12 + v38);
  v40 = v15 & 0xFFFFFFED ^ 0x27;
  LODWORD(v15) = v15 ^ (2
                      * ((v15 ^ 0x26) & (2
                                       * ((v15 ^ 0x26) & (2
                                                        * ((v15 ^ 0x26) & (2
                                                                         * ((v15 ^ 0x26) & (2
                                                                                          * ((v15 ^ 6) & (2 * (((2 * v15) & 0x4E ^ 0x4A) & (v15 ^ 6) ^ v40)) ^ v40)) ^ v40)) ^ v40)) ^ v40)) ^ v40));
  v41 = *(unsigned __int8 *)(v12 + v35);
  v42 = v3 ^ 0x89C99B53;
  STACK[0x69F0] = v42;
  v43 = *(unsigned __int8 *)(v12 + v42);
  LODWORD(v41) = *(unsigned __int8 *)(v16 + (v41 ^ 0xF2));
  LODWORD(v15) = (((v15 ^ 0x97) << 24) ^ 0xFEB00A29) & (v31 ^ 0xFFB0C03B) | v31 & 0xF500;
  LODWORD(STACK[0x6A50]) = v3 & 0xFFFFFFF2;
  v44 = ((2 * (v3 & 0xFFFFFFF2 ^ 0x1917A380)) | 0x80ACCF16) - (v3 & 0xFFFFFFF2 ^ 0x1917A380) + 1068079221;
  v45 = ((v36 << 16) ^ 0x6AE58C40) & (v41 ^ 0x7FFFAD59) | v41 & 0xFFFFFFBF;
  LODWORD(v15) = *(_BYTE *)(v16 + (v39 ^ 0xE7)) & 0xE8 ^ 0xC04941A0 ^ (v15 ^ 0x9BA4313E) & (*(unsigned __int8 *)(v16 + (v39 ^ 0xE7)) ^ 0xFFFDFFB4);
  LODWORD(v15) = (v15 | 0xC65B3CED) - (v15 | 0x39A4C312) + 967099154;
  LODWORD(v39) = *(unsigned __int8 *)(v26
                                    + (*(unsigned __int8 *)(v12
                                                          + (((v44 & 0xD2AB74E2 ^ v8) + (v44 & 0x2D548B18) - 1) ^ 0x42014B31)) ^ 0x10));
  v46 = *(unsigned __int8 *)(v33 + (v43 ^ 0x6F)) << 24;
  LODWORD(v41) = (((v45 & 0x4A71006C ^ 0x4A605265) + (v45 & 0x208E0093) - 1) ^ 0x9ABCE73B) & (v46 ^ 0x82FFFFFF) ^ ((v46 & 0x45000000 | 0x83B1A) + 3369);
  v47 = ((v3 & 0xFFFFFFF7 ^ 0xE6226CB0) - ((2 * (v3 & 0xFFFFFFF7 ^ 0xE6226CB0)) & 0x846C8E02) - 1036630263) ^ 0xADDDB0E2;
  STACK[0x6A10] = v47;
  v48 = *(unsigned __int8 *)(v12 + v47);
  LODWORD(STACK[0x6A30]) = v3 & 0xFFFFFFFD;
  v49 = v48 ^ 0xE9;
  LODWORD(v30) = *(unsigned __int8 *)(v17 + (*(unsigned __int8 *)(v12 + (v3 & 0xFFFFFFFD ^ 0x89C99B53)) ^ 0x4ALL));
  LODWORD(v48) = (v15 ^ 0xA6F90000) & (((v39 ^ (v39 >> 2) ^ (v39 >> 1)) << 16) ^ 0xB69D8638);
  v50 = v15 & 0x494F79C7;
  LODWORD(v15) = v23 & 0x5DCE3468 ^ 0x488E2408 ^ ((*(unsigned __int8 *)(v33 + v49) << 24) ^ 0x7031CB97) & (v23 ^ 0x608E6E9D);
  v51 = v15 - ((2 * v15) & 0xAF536492) - 676744631;
  LODWORD(v15) = (v41 ^ 0x4000200) & ((((v30 >> 6) | (4 * v30)) << 8) ^ 0x867CACE1) ^ v41 & 0x79838B1E;
  v52 = v3;
  v53 = v3 & 0xFFFFFFF6;
  LODWORD(STACK[0x6A00]) = v53;
  LODWORD(v41) = (((2 * (v53 ^ 0xB0122400)) | 0x1E3384BE) - (v53 ^ 0xB0122400) + 1894137249) ^ 0xCD3DC27F;
  LODWORD(v41) = *(unsigned __int8 *)(v26
                                    + (*(unsigned __int8 *)(v12
                                                          + ((((2 * (_DWORD)v41) & 0x65B3118C) - (_DWORD)v41 + 1294366513) ^ v5)) ^ 0xE8));
  LODWORD(v39) = (v15 & v9 ^ 0x1810801) + (v15 ^ 0x5056E66C) - ((v15 ^ 0x5056E66C) & v9);
  LODWORD(v15) = (((v41 ^ (v41 >> 2) ^ (v41 >> 1)) << 16) ^ 0xC9DB66EF) & (v51 ^ 0xDB69BB61);
  LODWORD(v41) = v51 & 0x367B9910;
  LODWORD(STACK[0x69C0]) = v52;
  v54 = (-1562289808 - (v52 & 0xFFFFFFF9 ^ 0x5C078758 | 0xA2E15970) + (v52 & 0xFFFFFFF9 ^ 0x5C078758 | 0x5D1EA68F)) ^ 0x571E26CF;
  v55 = (((2 * v54) | 0xD953153E) - v54 - 1823050399) ^ 0xB36716D0;
  STACK[0x69D0] = v55;
  v56 = *(unsigned __int8 *)(v17 + (*(unsigned __int8 *)(v12 + v55) ^ 0xA3));
  LODWORD(v13) = (((((v56 >> 6) | (4 * v56)) << 8) ^ 0x7106A969) & (v13 ^ 0x778FFF6D) | v13 & 0x96) ^ 0x6890804;
  v57 = ((2 * v13) & 0x25114894) - v13 + 1831295925;
  v58 = (((2 * (v52 & 0xFFFFFFFA ^ 0x25BF4024)) & 0x9202D4C4) - (v52 & 0xFFFFFFFA ^ 0x25BF4024) - 1224829540) ^ 0x1A884EEFLL;
  STACK[0x69E0] = v58;
  LODWORD(v58) = *(unsigned __int8 *)(v26 + (*(unsigned __int8 *)(v12 + v58) ^ 0x67));
  LODWORD(v30) = v58 ^ (v58 >> 2) ^ (v58 >> 1);
  LODWORD(v58) = v39 ^ v10;
  LODWORD(v39) = v57 & 0x5AD5BDC9 ^ 0x10843048 ^ (v57 ^ 0xA5574226) & (((_DWORD)v30 << 16) ^ 0xA5E74236);
  v59 = (*(unsigned __int8 *)(v33
                            + (*(unsigned __int8 *)(v12
                                                  + ((((2 * (v52 & 0xFFFFFFFB ^ 0x7C7621EE)) & 0xBA9DDA08)
                                                    - (v52 & 0xFFFFFFFB ^ 0x7C7621EE)
                                                    + 582030075) ^ 0xD70EA842)) ^ 0x5DLL)) ^ 0x18) << 24;
  v60 = ((v59 & 0x6B000000 | 0xA265D) + 2684) ^ LODWORD(STACK[0x69A0]) ^ ((-1861715010
                                                                         - (v39 | 0x91087BBE)
                                                                         + (v39 | 0x6EF78441)) ^ 0x552D06D1) & (v59 ^ 0x68FFFFFF);
  LODWORD(v48) = v50 ^ a2 ^ v48;
  v61 = v41 ^ LODWORD(STACK[0x69B0]) ^ v15;
  v62 = (((v61 ^ 0x98433D90) - 738610936) ^ ((v61 ^ 0x9F976AA9) - 735189441) ^ ((v61 ^ 0xA6888D26) - 315489870))
      - ((((2 * v61) & 0x20A033EA ^ 0xACDF292F) + 189674473) ^ (((2 * v61) & 0x20A033EA ^ 0x64A9AC0B) - 1019693363) ^ (((2 * v61) & 0x20A033EA ^ 0xC8D6B50E) + 1866969034))
      + 2077534945;
  LODWORD(v39) = (v62 ^ 0xC8D75B78) & (2 * (v62 & 0xD0C64379)) ^ v62 & 0xD0C64379;
  LODWORD(v15) = ((2 * (v62 ^ 0xE8DB59B8)) ^ 0x703A3582) & (v62 ^ 0xE8DB59B8) ^ (2 * (v62 ^ 0xE8DB59B8)) & 0x381D1AC0;
  v63 = v15 ^ 0x8050A41;
  LODWORD(v15) = (v15 ^ 0x81C1081) & (4 * v39) ^ v39;
  LODWORD(v39) = ((4 * v63) ^ 0xE0746B04) & v63 ^ (4 * v63) & 0x381D1AC0;
  LODWORD(v15) = v15 ^ 0x381D1AC1 ^ (v39 ^ 0x20140A01) & (16 * v15);
  LODWORD(v39) = (16 * (v39 ^ 0x180910C1)) & 0x381D1AC0 ^ 0x380C12C1 ^ ((16 * (v39 ^ 0x180910C1)) ^ 0x81D1AC10) & (v39 ^ 0x180910C1);
  LODWORD(v15) = ((_DWORD)v15 << 8) & 0x381D1A00 ^ v15 ^ (((_DWORD)v15 << 8) ^ 0x1D1AC100) & v39;
  LODWORD(v15) = ((_DWORD)v15 << 16) & 0x381D0000 ^ v15 ^ (((_DWORD)v15 << 16) ^ 0x1AC10000) & (((_DWORD)v39 << 8) & 0x381D0000 ^ 0x20050000 ^ (((_DWORD)v39 << 8) ^ 0x1D1A0000) & v39);
  v64 = *(_QWORD *)(v4 + 8 * (LODWORD(STACK[0x6AC0]) ^ 0x46F1)) - 4;
  LODWORD(v39) = *(_DWORD *)(v64 + 4 * (BYTE3(v58) ^ 0xC0));
  v65 = v62 ^ (2 * v15);
  LODWORD(v15) = (1248880826 - (v39 & 0x24FFABB ^ 0x208F231 | 0x4A7068BA) + (v39 & 0x24FFABB ^ 0x208F231 | 0xB58F9745)) ^ 0xCC8E9D44;
  HIDWORD(v66) = v39 ^ 0xC50C20A0;
  LODWORD(v66) = v39 ^ 0xC50C20A0;
  LODWORD(v39) = (BYTE2(v60) ^ 0x3A | 0xD8FCB64C) - (BYTE2(v60) ^ 0x3A | 0x270349B3) + 654526899;
  LODWORD(v39) = (v39 & 0x50DC1240 ^ 0x6080200) + (v39 ^ 0x79F6F1DE) - ((v39 ^ 0x79F6F1DE) & 0x57DC5240);
  LODWORD(v41) = (v66 >> 26) ^ __ROR4__((((2 * v15) & 0x86E6BE28) - v15 - 1131634453) ^ 0x36649A37, 24);
  v67 = *(_QWORD *)(v4 + 8 * (LODWORD(STACK[0x6AC0]) - 16309));
  LODWORD(v49) = ((BYTE1(v65) ^ 0xC6) - 326159805 - ((2 * (BYTE1(v65) ^ 0xC6)) & 0x1C4) + 671) ^ 0xCC6DB6E2;
  LODWORD(v30) = *(_DWORD *)(v67 + 4 * (((HIWORD(v60) & 0xFA ^ 0x197) - (HIWORD(v60) & 5)) ^ 0x177))
               + ((((((v60 >> 15) & 0x15C ^ 0x74682867) - 1) ^ 0xDFE123A6) + 1462062038) ^ (((((v60 >> 15) & 0x15C ^ 0x74682867)
                                                                                            - 1) ^ 0x35358DBC)
                                                                                          - 1108220464) ^ (((((v60 >> 15) & 0x15C ^ 0x74682867) - 1) ^ 0x9EBC8734) + 377024328))
               - (((v39 ^ 0x50E4C66E) - 436876863) ^ ((v39 ^ 0xDC7FB974) + 1768863451) ^ ((v39 ^ 0x7A4D6A17) - 816028230))
               - 1512384977;
  LODWORD(v15) = (v30 ^ 0x1AD7C244) & (2 * (v30 & 0x9CC7EB46)) ^ v30 & 0x9CC7EB46;
  v68 = ((2 * (v30 ^ 0xB5280C4)) ^ 0x2F2AD704) & (v30 ^ 0xB5280C4) ^ (2 * (v30 ^ 0xB5280C4)) & 0x97956B82;
  LODWORD(v39) = v68 ^ 0x90952882;
  v69 = (v68 ^ 0x7804382) & (4 * v15) ^ v15;
  LODWORD(v15) = ((4 * v39) ^ 0x5E55AE08) & v39 ^ (4 * v39) & 0x97956B80;
  v70 = (v15 ^ 0x16152A00) & (16 * v69) ^ v69;
  v71 = *(_QWORD *)(v4 + 8 * (LODWORD(STACK[0x6AC0]) ^ 0x46DF)) - 8;
  LODWORD(v15) = ((16 * (v15 ^ 0x81804182)) ^ 0x7956B820) & (v15 ^ 0x81804182) ^ (16 * (v15 ^ 0x81804182)) & 0x97956B80;
  v72 = v70 ^ 0x97956B82 ^ (v15 ^ 0x11142800) & (v70 << 8);
  LODWORD(v15) = (v72 << 16) & 0x17950000 ^ v72 ^ ((v72 << 16) ^ 0x6B820000) & (((v15 ^ 0x86814382) << 8) & 0x17950000 ^ 0x2940000 ^ (((v15 ^ 0x86814382) << 8) ^ 0x156B0000) & (v15 ^ 0x86814382));
  HIDWORD(v66) = *(_DWORD *)(v71
                           + 4
                           * ((-180940594 - (v49 | 0xF53710CE) + (v49 | 0xAC8EF31)) ^ 0x2A2A6DDA));
  LODWORD(v66) = HIDWORD(v66);
  v73 = *(_DWORD *)(v64 + 4 * (HIBYTE(v60) ^ 0x4C));
  LODWORD(v49) = ((4 * v73) & 0x93FEAEC ^ 0x92BA0E8 | 0x28973040)
               - ((4 * v73) & 0x93FEAEC ^ 0x92BA0E8 | 0xD768CFBF)
               - 680996929;
  v74 = *(_QWORD *)(v4 + 8 * (LODWORD(STACK[0x6AC0]) ^ 0x41BD)) - 4;
  LODWORD(v41) = *(_DWORD *)(v74 + 4 * (((v48 & 0x76 ^ 0x9E02F555) + (v48 & 0x89) - 1) ^ 0x9E02F547)) ^ (v66 >> 27) ^ ((((v66 >> 27) >> 4) & 0x4822240 ^ 0x24D29197) + (((v66 >> 27) >> 4) & 0xA250409) - 1) ^ __ROR4__(v41 ^ 0x573BF4B9, 6) ^ v30 ^ (2 * v15);
  LODWORD(v39) = (BYTE2(v65) ^ 0x82 | 0xF00830DC) - (BYTE2(v65) ^ 0x82 | 0xFF7CF23) + 267898659;
  LODWORD(v39) = (v39 & 0x30082DA0 ^ 0x9AB4D20) + (v39 ^ 0xF04020D0) - ((v39 ^ 0xF04020D0) & 0x39AB6DA0);
  LODWORD(v15) = (((2 * (BYTE2(v65) ^ 0x52)) | 0x76403BB0) - (BYTE2(v65) ^ 0x52) + 1155523112) ^ 0xA2201D40;
  LODWORD(v30) = *(_DWORD *)(v67 + 4 * ((((2 * (_DWORD)v15) & 0x1AD5A4AE) - (_DWORD)v15 - 1298846296) ^ 0xAB952DA9))
               + (((v39 ^ 0x20FEFBE) + 765508803) ^ ((v39 ^ 0xA9D5BDA7) - 2038763812) ^ ((v39 ^ 0xA9872EA8) - 2044166699))
               + 895830097;
  LODWORD(v15) = (v30 ^ 0x1C696CBF) & (2 * (v30 & 0x5C726EBF)) ^ v30 & 0x5C726EBF;
  LODWORD(v39) = ((2 * (v30 ^ 0x8CCDB1E5)) ^ 0xA17FBEB4) & (v30 ^ 0x8CCDB1E5) ^ (2 * (v30 ^ 0x8CCDB1E5)) & 0xD0BFDF5A;
  LODWORD(v15) = (v39 ^ 0x801B9E10) & (4 * v15) ^ v15;
  LODWORD(v39) = ((4 * (v39 ^ 0x5080414A)) ^ 0x42FF7D68) & (v39 ^ 0x5080414A) ^ (4 * (v39 ^ 0x5080414A)) & 0xD0BFDF58;
  LODWORD(v15) = (v39 ^ 0x40BF5D40) & (16 * v15) ^ v15;
  LODWORD(v39) = ((16 * (v39 ^ 0x90008212)) ^ 0xBFDF5A0) & (v39 ^ 0x90008212) ^ (16 * (v39 ^ 0x90008212)) & 0xD0BFDF50;
  LODWORD(v15) = v15 ^ 0xD0BFDF5A ^ (v39 ^ 0xBDD55A) & ((_DWORD)v15 << 8);
  LODWORD(v15) = ((_DWORD)v15 << 16) & 0x50BF0000 ^ v15 ^ (((_DWORD)v15 << 16) ^ 0x5F5A0000) & (((v39 ^ 0xD0020A5A) << 8) & 0x50BF0000 ^ 0x40200000 ^ (((v39 ^ 0xD0020A5A) << 8) ^ 0xBFDF0000) & (v39 ^ 0xD0020A5A));
  HIDWORD(v66) = *(_DWORD *)(v71 + 4 * (BYTE1(v48) ^ 0xBAu));
  LODWORD(v66) = HIDWORD(v66);
  LODWORD(v39) = v66 >> 27;
  LODWORD(v35) = (((v39 >> 4) & 0x2210648 ^ 0xA04896A3) + ((v39 >> 4) & 0xC862001) - 1) ^ 0xA6EB26D9;
  v75 = ((v58 ^ 0x4D) - ((2 * v58) & 0x40) + 1248613664) ^ 0x52E473E4;
  LODWORD(v55) = *(_DWORD *)(v74 + 4 * ((1949832525 - (v75 | 0x7438154D) + (v75 | 0x8BC7EAB2)) ^ 0x934FCC6C)) ^ 0x829555E2 ^ (((2 * v35) & 0x80D2C36) - v35 + 448342372);
  v76 = v73 ^ ((v49 & 0x2878B1E0 ^ 0x7881A3) + (v49 & 0x17874E0C ^ 0x3874611) - 2) ^ v30 ^ (v55
                                                                                          + 568085083
                                                                                          - ((2 * v55) & 0x43B8B1AC)
                                                                                          + 3707) ^ (2 * v15) ^ 0x8224C4B7;
  LODWORD(v66) = __ROR4__(*(_DWORD *)(v64 + 4 * (HIBYTE(v65) ^ 0xA2)), 29) ^ 0xA4CC5681;
  HIDWORD(v66) = v66;
  LODWORD(v49) = (v76 - ((2 * v76) & 0xAE271204) + 1460898050) ^ v39;
  LODWORD(v15) = ((2 * (BYTE2(v48) ^ 0xFB)) | 0x1AA564E) - (BYTE2(v48) ^ 0xFB) - 13970215;
  LODWORD(v39) = (v60 ^ 0xE1 | 0x7ADA446E) - (v60 ^ 0xE1 | 0x8525BB91) - 2061124719;
  v77 = ((v66 >> 3) - ((2 * (v66 >> 3)) & 0xC0B55AF4) - 530928262) ^ 0x856DE1A;
  HIDWORD(v66) = *(_DWORD *)(v71 + 4 * (BYTE1(v58) ^ 0xC3u));
  LODWORD(v66) = HIDWORD(v66);
  LODWORD(v55) = v66 >> 27;
  LODWORD(v15) = (v55 >> 4) & 0xEA72649 ^ (4 * v77) & 0x93FEAEC ^ 0x6250649 ^ (*(_DWORD *)(v67 + 4 * (((v15 & 0x94041A ^ 0xC01A0419) + (v15 & 0x1C61FBE5) - 1) ^ 0xC0CF2F26))
                                                                                           + (((BYTE2(v48) ^ 0xAB)
                                                                                             - ((2 * (BYTE2(v48) ^ 0xAB)) & 0x7A)
                                                                                             - 505912259) ^ 0xDA666520)
                                                                                           - 1077287202);
  LODWORD(v30) = BYTE3(v48) ^ 0xF;
  v78 = v77 ^ *(_DWORD *)(v74
                        + 4
                        * (((v39 & 0x784040EE ^ 0x9021B080)
                          + (v39 ^ 0x6EDC466E)
                          - ((v39 ^ 0x6EDC466E) & 0xFC65F0EE)) ^ 0xE863F279)) ^ (v15
                                                                                             - 1733637452
                                                                                             - ((2 * v15) & 0x31559568));
  LODWORD(v15) = (v78 - 1933476219 - ((2 * v78) & 0x1982FD0A)) ^ v55;
  v79 = (v78 + 32389 - ((2 * v78) & 0xFD0A)) ^ v55 ^ 0x185C;
  LODWORD(v55) = *(_DWORD *)(v64 + 4 * v30);
  LODWORD(v39) = *(_DWORD *)(v67
                           + 4
                           * (((WORD1(v58) & 0x13 ^ 0x30A5C002) + (WORD1(v58) & 0xEC ^ 0x400165) - 1) ^ 0x30E5C18C));
  LODWORD(STACK[0x69B0]) = 1002308030;
  v80 = *(_DWORD *)(v71
                  + 4
                  * (((BYTE1(v60) ^ 0xC39B) + ((v60 >> 8) & 0x37 ^ 0x424) - ((BYTE1(v60) ^ 0xC39B) & 0x237)) & 0x7FFF ^ 0x4564));
  HIDWORD(v66) = v80 ^ 0x392A336;
  LODWORD(v66) = v80 ^ 0xC8000000;
  LODWORD(v58) = (4 * v55) & 0x93FEAEC ^ (v66 >> 27) ^ 0x17E2C0 ^ ((v66 >> 27) >> 4) & 0xEA72649 ^ (v39 + (BYTE2(v58) ^ 0x3BBE01BE) - 1077287202);
  v81 = v41 ^ 0x27B91ACD;
  LODWORD(v58) = v55 ^ *(_DWORD *)(v74
                                 + 4
                                 * ((((2 * (v65 ^ 0xAA280EB7)) | 0xE106E60)
                                   - (v65 ^ 0xAA280EB7)
                                   + 2029504720) ^ 0x2D2039F5)) ^ 0x3280312E ^ (v58
                                                                              - 1733637452
                                                                              - ((2 * v58) & 0x31559568));
  LODWORD(v39) = *(_DWORD *)(v64 + 4 * ((v41 ^ 0x27B91ACD) >> 24)) ^ 0xDC95F9B0;
  v82 = *(_DWORD *)(v71 + 4 * (HIBYTE(v79) ^ 0x53u));
  HIDWORD(v66) = v82 ^ 0x392A336;
  LODWORD(v66) = v82 ^ 0xC8000000;
  v83 = v66 >> 27;
  LODWORD(v15) = v15 ^ 0x67201053;
  LODWORD(v30) = v58 - ((2 * v58) & 0x89FAFA5C) + 1157463342;
  LODWORD(v58) = (v83 >> 4) & 0xEA72649 ^ (4 * v39) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v49) ^ 0x9Bu))
                                                                 + (BYTE2(v49) ^ 0x3BBE01CF)
                                                                 - 1077287202);
  LODWORD(v41) = *(_DWORD *)(v71 + 4 * (BYTE1(v30) ^ 0x5Bu));
  v84 = *(_DWORD *)(v74 + 4 * (v30 ^ 0x89u)) ^ v83 ^ v39 ^ (v58
                                                                             - 1733637452
                                                                             - ((2 * v58) & 0x31559568));
  HIDWORD(v66) = v41 ^ 0x392A336;
  LODWORD(v66) = v41 ^ 0xC8000000;
  LODWORD(v55) = v66 >> 27;
  v85 = *(_DWORD *)(v64 + 4 * (BYTE3(v49) ^ 0x16)) ^ 0xDC95F9B0;
  LODWORD(v39) = (v55 >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v15) ^ 5u))
                                                       + (BYTE2(v15) ^ 0x3BBE0151)
                                                       - 1077287202) ^ (4 * v85) & 0x93FEAEC;
  v86 = *(_DWORD *)(v74 + 4 * (v81 ^ 0x89u)) ^ v55 ^ v85 ^ (v39
                                                                             - 1733637452
                                                                             - ((2 * v39) & 0x31559568));
  LODWORD(v39) = *(_DWORD *)(v71 + 4 * BYTE1(v81));
  HIDWORD(v66) = v39 ^ 0x392A336;
  LODWORD(v66) = v39 ^ 0xC8000000;
  LODWORD(v15) = *(_DWORD *)(v64 + 4 * BYTE3(v15)) ^ 0xDC95F9B0;
  v87 = BYTE1(v49) ^ 0xEF;
  LODWORD(v55) = *(_DWORD *)(v74 + 4 * (v49 ^ 0xEu));
  v88 = (4 * v15) & 0x93FEAEC ^ v15 ^ (v66 >> 27) ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v30) ^ 5u))
                                                   + (BYTE2(v30) ^ 0x3BBE0151)
                                                   - 1077287202) ^ ((v66 >> 27) >> 4) & 0xEA72649;
  v89 = v88 & 0x200;
  v90 = ((unsigned __int16)v89 & ~(_DWORD)v55) == 0;
  v91 = v55 ^ 0x76BF022A;
  v92 = *(_DWORD *)(v64 + 4 * (BYTE3(v30) ^ 2));
  if (!v90)
    v89 = -v89;
  v93 = *(_DWORD *)(v67 + 4 * (BYTE2(v81) ^ 5u)) + (BYTE2(v81) ^ 0x3BBE0151) - 1077287202;
  v94 = *(_DWORD *)(v71 + 4 * (v87 ^ 0xA3u));
  HIDWORD(v95) = v94 ^ 0x392A336;
  LODWORD(v95) = v94 ^ 0xC8000000;
  v96 = v86 ^ 0x8E50;
  v97 = *(_DWORD *)(v74 + 4 * (v79 ^ 0x86u)) ^ v92 ^ 0xDC95F9B0 ^ (v95 >> 27) ^ ((v93 ^ (4 * (v92 ^ 0xDC95F9B0)) & 0x93FEAEC)
                                                                                                  - 1733637452
                                                                                                  - 2 * ((v93 ^ (4 * (v92 ^ 0xDC95F9B0)) & 0x93FEAEC) & 0x18AACAB7 ^ v93 & 3)) ^ ((v95 >> 27) >> 4) & 0xEA72649;
  v98 = v88 & 0xFFFFFDFF ^ 0x148E7631 ^ (v89 + v91);
  v99 = *(_DWORD *)(v64 + 4 * (HIBYTE(v84) ^ 0x50));
  v100 = *(_DWORD *)(v71 + 4 * BYTE1(v98));
  HIDWORD(v95) = v100 ^ 0x392A336;
  LODWORD(v95) = v100 ^ 0xC8000000;
  v101 = v95 >> 27;
  v102 = (4 * v99) & 0x93FEAEC ^ 0x17E2C0 ^ (v101 >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67
                                                                                 + 4
                                                                                 * (((v86 ^ 0x84368E50) >> 16) ^ 5u))
                                                                     + (((v86 ^ 0x84368E50) >> 16) ^ 0x3BBE0151)
                                                                     - 1077287202);
  v103 = *(_DWORD *)(v71 + 4 * (BYTE1(v97) ^ 0x33u));
  HIDWORD(v95) = v103 ^ 0x392A336;
  LODWORD(v95) = v103 ^ 0xC8000000;
  v104 = *(_DWORD *)(v64 + 4 * (HIBYTE(v86) ^ 0x86)) ^ 0xDC95F9B0;
  v105 = (v95 >> 27) ^ (4 * v104) & 0x93FEAEC ^ ((v95 >> 27) >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v98) ^ 5u))
                                                                                              + (BYTE2(v98) ^ 0x3BBE0151)
                                                                                              - 1077287202);
  v106 = BYTE2(v84) ^ 0xF7;
  v107 = *(_DWORD *)(v74 + 4 * (v84 ^ 0xFCu)) ^ v104;
  v108 = *(_DWORD *)(v71 + 4 * (BYTE1(v84) ^ 0x4Eu));
  v109 = v107 ^ (v105 - 1733637452 - ((2 * v105) & 0x31559568));
  HIDWORD(v95) = v108 ^ 0x392A336;
  LODWORD(v95) = v108 ^ 0xC8000000;
  v110 = *(_DWORD *)(v64 + 4 * HIBYTE(v98)) ^ 0xDC95F9B0;
  v111 = (v95 >> 27) ^ (4 * v110) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v97) ^ 0x6Eu))
                                               + (BYTE2(v97) ^ 0x3BBE013A)
                                               - 1077287202) ^ ((v95 >> 27) >> 4) & 0xEA72649;
  v112 = *(_DWORD *)(v74 + 4 * v96) ^ v110 ^ (v111 - 1733637452 - ((2 * v111) & 0x31559568));
  v113 = *(_DWORD *)(v71 + 4 * HIBYTE(v96));
  HIDWORD(v95) = v113 ^ 0x392A336;
  LODWORD(v95) = v113 ^ 0xC8000000;
  v114 = *(_DWORD *)(v64 + 4 * (HIBYTE(v97) ^ 0xB7)) ^ 0xDC95F9B0;
  v115 = v99 ^ 0x5C199505 ^ *(_DWORD *)(v74 + 4 * (v97 ^ 0xEFu)) ^ v101 ^ (v102
                                                                                            - 1733637452
                                                                                            - ((2 * v102) & 0x31559568));
  v116 = (v95 >> 27) ^ (4 * v114) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (v106 ^ 5u)) + (v106 ^ 0x3BBE0151) - 1077287202) ^ ((v95 >> 27) >> 4) & 0xEA72649;
  v117 = *(_DWORD *)(v74 + 4 * v98) ^ v114 ^ (v116 - 1733637452 - ((2 * v116) & 0x31559568));
  v118 = *(_DWORD *)(v64 + 4 * HIBYTE(v115)) ^ 0xDC95F9B0;
  v119 = (v109 ^ 0xE1A2DA15) >> (v117 & 8) >> (v117 & 8 ^ 8);
  v120 = *(_DWORD *)(v71 + 4 * (BYTE1(v112) ^ 0x5Cu));
  HIDWORD(v95) = v120 ^ 0x392A336;
  LODWORD(v95) = v120 ^ 0xC8000000;
  LOBYTE(v99) = v112 ^ 0x4A;
  v121 = (v95 >> 27) ^ (4 * v118) & 0x93FEAEC ^ (*(_DWORD *)(v67
                                                           + 4 * (((v109 ^ 0xE1A2DA15) >> 16) ^ 5u))
                                               + (((v109 ^ 0xE1A2DA15) >> 16) ^ 0x3BBE0151)
                                               - 1077287202) ^ ((v95 >> 27) >> 4) & 0xEA72649;
  v122 = *(_DWORD *)(v74 + 4 * (v117 ^ 0xDCu)) ^ v118 ^ (v121 - 1733637452 - ((2 * v121) & 0x31559568));
  v123 = *(_DWORD *)(v71 + 4 * (BYTE1(v117) ^ 0xCu));
  HIDWORD(v95) = v123 ^ 0x392A336;
  LODWORD(v95) = v123 ^ 0xC8000000;
  v124 = v95 >> 27;
  v125 = *(_DWORD *)(v64 + 4 * (HIBYTE(v109) ^ 0xE3)) ^ 0xDC95F9B0;
  v126 = (v124 >> 4) & 0xEA72649 ^ (4 * v125) & 0x93FEAEC ^ (*(_DWORD *)(v67
                                                                       + 4
                                                                       * (((v112 ^ 0xFE21074A) >> 16) ^ 5u))
                                                           + (((v112 ^ 0xFE21074A) >> 16) ^ 0x3BBE0151)
                                                           - 1077287202);
  v127 = v117 ^ 0xAE525755;
  v128 = *(_DWORD *)(v74 + 4 * v115) ^ v125 ^ v124 ^ (v126 - 1733637452 - ((2 * v126) & 0x31559568));
  v129 = *(_DWORD *)(v71 + 4 * BYTE1(v115));
  HIDWORD(v95) = v129 ^ 0x392A336;
  LODWORD(v95) = v129 ^ 0xC8000000;
  v130 = v95 >> 27;
  v131 = *(_DWORD *)(v64 + 4 * (HIBYTE(v112) ^ 0xFC)) ^ 0xDC95F9B0;
  v132 = (4 * v131) & 0x93FEAEC ^ v131 ^ (v130 >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v127) ^ 5u))
                                                                  + (BYTE2(v127) ^ 0x3BBE0151)
                                                                  - 1077287202);
  v133 = v130 ^ *(_DWORD *)(v74 + 4 * (v109 ^ 0x9Cu)) ^ (v132 - 1733637452 - ((2 * v132) & 0x31559568));
  v134 = *(_DWORD *)(v64 + 4 * HIBYTE(v127)) ^ 0xDC95F9B0;
  v135 = *(_DWORD *)(v71 + 4 * (v119 ^ 0x5Bu));
  HIDWORD(v95) = v135 ^ 0x392A336;
  LODWORD(v95) = v135 ^ 0xC8000000;
  v136 = v95 >> 27;
  v137 = (*(_DWORD *)(v67 + 4 * (BYTE2(v115) ^ 5u)) + (BYTE2(v115) ^ 0x3BBE0151) - 1077287202) ^ (v136 >> 4) & 0xEA72649;
  v138 = (4 * v134) & 0x93FEAEC ^ v134 ^ *(_DWORD *)(v74 + 4 * v99) ^ v136 ^ (v137
                                                                                               - 1733637452
                                                                                               - ((2 * v137) & 0x31559568));
  v139 = *(_DWORD *)(v71 + 4 * BYTE1(v133));
  HIDWORD(v95) = v139 ^ 0x392A336;
  LODWORD(v95) = v139 ^ 0xC8000000;
  v140 = *(_DWORD *)(v64 + 4 * (HIBYTE(v122) ^ 9)) ^ 0xDC95F9B0;
  v141 = (v95 >> 27) ^ (4 * v140) & 0x93FEAEC ^ ((v95 >> 27) >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (((v128 ^ 0xD1C642C) >> 16) ^ 5u))
                                                                                              + (((v128 ^ 0xD1C642C) >> 16) ^ 0x3BBE0151)
                                                                                              - 1077287202);
  v142 = v138 ^ 0x5D6F34BA;
  v143 = *(_DWORD *)(v74 + 4 * (v138 ^ 0xBAu)) ^ v140;
  v144 = v133 ^ 0x1625001F;
  v145 = v143 ^ (v141 - 1733637452 - ((2 * v141) & 0x31559568));
  v146 = *(_DWORD *)(v71 + 4 * (BYTE1(v138) ^ 0x6Fu));
  HIDWORD(v95) = v146 ^ 0x392A336;
  LODWORD(v95) = v146 ^ 0xC8000000;
  v147 = v95 >> 27;
  v148 = *(_DWORD *)(v64 + 4 * (HIBYTE(v128) ^ 0xF));
  v149 = (v95 >> 27) & 0x4000000;
  if (((v147 >> 4) & v149) != 0)
    LODWORD(v149) = -(int)v149;
  v150 = (4 * v148) & 0x93FEAEC ^ 0x17E2C0 ^ v147 & 0xFBFFFFFF ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v144) ^ 5u))
                                                                + (BYTE2(v144) ^ 0x3BBE0151)
                                                                - 1077287202) ^ (v149 + ((v147 >> 4) & 0xEA72649));
  v151 = v122 ^ 0xBA686C9;
  v152 = *(_DWORD *)(v71 + 4 * (BYTE1(v151) ^ 0x5Bu));
  HIDWORD(v154) = v152 ^ 0x392A336;
  LODWORD(v154) = v152 ^ 0xC8000000;
  v153 = v154 >> 27;
  v155 = *(_DWORD *)(v64 + 4 * HIBYTE(v144)) ^ 0xDC95F9B0;
  v156 = (v153 >> 4) & 0xEA72649 ^ (4 * v155) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v142) ^ 5u))
                                                           - BYTE2(v142)
                                                           + ((v142 >> 15) & 0x15C)
                                                           - 74979281);
  v157 = *(_DWORD *)(v74 + 4 * (v128 ^ 0x2Cu)) ^ v155 ^ v153 ^ (v156
                                                                                 - 1733637452
                                                                                 - ((2 * v156) & 0x31559568));
  v158 = *(_DWORD *)(v71 + 4 * (BYTE1(v128) ^ 0x3Fu));
  HIDWORD(v154) = v158 ^ 0x392A336;
  LODWORD(v154) = v158 ^ 0xC8000000;
  v159 = v154 >> 27;
  v160 = *(_DWORD *)(v64 + 4 * HIBYTE(v142)) ^ 0xDC95F9B0;
  v161 = (v159 >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v151) ^ 5u))
                                  + (BYTE2(v151) ^ 0xC441FEAE)
                                  - 1077287203
                                  - 2 * (BYTE2(v151) ^ 0xC441FEAE)) ^ (4 * v160) & 0x93FEAEC;
  v162 = *(_DWORD *)(v74 + 4 * v144) ^ v159 ^ v160 ^ (v161 - 1733637452 - ((2 * v161) & 0x31559568));
  v163 = v148 ^ *(_DWORD *)(v74 + 4 * v151) ^ 0x8C3EFD12 ^ (v150
                                                                             - 1733637452
                                                                             - ((2 * v150) & 0x31559568));
  v164 = v157 ^ 0xC4;
  v165 = *(_DWORD *)(v71 + 4 * ((unsigned __int16)(v157 ^ 0x67C4) >> 8));
  HIDWORD(v154) = v165 ^ 0x392A336;
  LODWORD(v154) = v165 ^ 0xC8000000;
  v166 = v154 >> 27;
  v167 = *(_DWORD *)(v64 + 4 * (HIBYTE(v145) ^ 0xBA)) ^ 0xDC95F9B0;
  v168 = (v166 >> 4) & 0xEA72649 ^ (4 * v167) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v163) ^ 5u))
                                                           - 1077287203
                                                           - ((HIWORD(v163) & 0x51 | 0xC441FEAE) ^ HIWORD(v163) & 0xAE));
  v169 = *(_DWORD *)(v74 + 4 * (v162 ^ 7u)) ^ v167 ^ v166 ^ (v168
                                                                              - 1733637452
                                                                              - ((2 * v168) & 0x31559568));
  v170 = *(_DWORD *)(v71 + 4 * (BYTE1(v162) ^ 0x6Bu));
  HIDWORD(v154) = v170 ^ 0x392A336;
  LODWORD(v154) = v170 ^ 0xC8000000;
  v171 = *(_DWORD *)(v64 + 4 * HIBYTE(v163)) ^ 0xDC95F9B0;
  v172 = (v154 >> 27) ^ ((v154 >> 27) >> 4) & 0xEA72649 ^ (4 * v171) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (((v157 ^ 0xA19667C4) >> 16) ^ 5u))
                                                                                                + (((v157 ^ 0xA19667C4) >> 16) ^ 0x3BBE0151)
                                                                                                - 1077287202);
  v173 = *(_DWORD *)(v74 + 4 * (v145 ^ 0xF7u)) ^ v171 ^ (v172 - 1733637452 - ((2 * v172) & 0x31559568));
  v174 = *(_DWORD *)(v71 + 4 * (BYTE1(v145) ^ 0x58u));
  HIDWORD(v154) = v174 ^ 0x392A336;
  LODWORD(v154) = v174 ^ 0xC8000000;
  v175 = v154 >> 27;
  v176 = *(_DWORD *)(v64 + 4 * (HIBYTE(v157) ^ 0xA3)) ^ 0xDC95F9B0;
  v177 = (v175 >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v162) ^ 0xE4u))
                                  + (BYTE2(v162) ^ 0x3BBE01B0)
                                  - 1077287202) ^ (4 * v176) & 0x93FEAEC;
  v178 = *(_DWORD *)(v74 + 4 * v163) ^ v176 ^ v175 ^ (v177 - 1733637452 - ((2 * v177) & 0x31559568));
  v179 = *(_DWORD *)(v64 + 4 * (HIBYTE(v162) ^ 0x1B)) ^ 0xDC95F9B0;
  v180 = *(_DWORD *)(v71 + 4 * BYTE1(v163));
  HIDWORD(v154) = v180 ^ 0x392A336;
  LODWORD(v154) = v180 ^ 0xC8000000;
  v181 = ((4 * v179) & 0x101E008 ^ v179 & 0x3701E509 | (4 * v179) & 0x83E0AE4 ^ v179 & 0xC8FE1AF6) ^ (v154 >> 27) ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v145) ^ 0xAAu)) + (BYTE2(v145) ^ 0x3BBE01FE) - 1077287202) ^ ((v154 >> 27) >> 4) & 0xEA72649;
  v182 = (v181 - 1733637452 - ((2 * v181) & 0x31559568)) ^ *(_DWORD *)(v74 + 4 * v164);
  v183 = *(_DWORD *)(v71 + 4 * (BYTE1(v178) ^ 0xCEu));
  HIDWORD(v154) = v183 ^ 0x392A336;
  LODWORD(v154) = v183 ^ 0xC8000000;
  v184 = v154 >> 27;
  BYTE2(v183) = BYTE2(v169) ^ 0x2B;
  v185 = *(_DWORD *)(v64 + 4 * ((v169 ^ 0xBC2BF63F) >> 24)) ^ 0xDC95F9B0;
  v186 = (v184 >> 4) & 0xEA72649 ^ (4 * v185) & 0x93FEAEC ^ (*(_DWORD *)(v67
                                                                       + 4
                                                                       * (((v173 ^ 0x998CA6Du) >> 16) ^ 5u))
                                                           + (((v173 ^ 0x998CA6Du) >> 16) ^ 0x3BBE0151)
                                                           - 1077287202);
  v187 = *(_DWORD *)(v74 + 4 * (v182 ^ 0x27u)) ^ v185 ^ v184;
  v188 = *(_DWORD *)(v71 + 4 * (BYTE1(v182) ^ 0xC6u));
  v189 = v187 ^ (v186 - 1733637452 - ((2 * v186) & 0x31559568));
  HIDWORD(v154) = v188 ^ 0x392A336;
  LODWORD(v154) = v188 ^ 0xC8000000;
  v190 = *(_DWORD *)(v64 + 4 * ((v173 ^ 0x998CA6Du) >> 24)) ^ 0xDC95F9B0;
  v191 = (v154 >> 27) ^ (4 * v190) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v178) ^ 0x13u))
                                                + (BYTE2(v178) ^ 0x3BBE0147)
                                                - 1077287202) ^ ((v154 >> 27) >> 4) & 0xEA72649;
  v192 = *(_DWORD *)(v74 + 4 * (v169 ^ 0x3Fu)) ^ v190 ^ (v191 - 1733637452 - ((2 * v191) & 0x31559568));
  v193 = *(_DWORD *)(v71 + 4 * (BYTE1(v169) ^ 0xADu));
  HIDWORD(v154) = v193 ^ 0x392A336;
  LODWORD(v154) = v193 ^ 0xC8000000;
  v194 = *(_DWORD *)(v64 + 4 * (HIBYTE(v178) ^ 0x4F)) ^ 0xDC95F9B0;
  v195 = (v154 >> 27) ^ (4 * v194) & 0x93FEAEC ^ ((v154 >> 27) >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * ((BYTE2(v182) ^ 0xEF ^ -(BYTE2(v182) ^ 0xEF) ^ ((BYTE2(v182) ^ 0xFFFFFF15) + 6)) + 5))
                                                                                                + (BYTE2(v182) ^ LODWORD(STACK[0x69B0]))
                                                                                                - 1077287202);
  v196 = *(_DWORD *)(v64 + 4 * (HIBYTE(v182) ^ 0xB1)) ^ 0xDC95F9B0;
  v197 = *(_DWORD *)(v74 + 4 * (v173 ^ 0xE4u)) ^ v194 ^ (v195 - 1733637452 - ((2 * v195) & 0x31559568));
  v198 = *(_DWORD *)(v67 + 4 * (BYTE2(v183) ^ 5u)) + (BYTE2(v183) ^ 0x3BBE0151) - 1077287202;
  v199 = ((*(_DWORD *)(v71 + 4 * (BYTE1(v173) ^ 0xCAu)) ^ 0xCB92A336) << (BYTE2(v127) & 5) << (BYTE2(v127) & 5 ^ 5)) | (*(_DWORD *)(v71 + 4 * (BYTE1(v173) ^ 0xCAu)) >> 27) ^ 0x19;
  v200 = v189 ^ 0xEE15C89E;
  v201 = (v189 ^ 0x10EA3761) + (v189 ^ 0xEE15C89E | 0x1000000) + 1;
  v202 = (v199 >> 4) & 0xEA72649 ^ (4 * v196) & 0x93FEAEC ^ v198;
  v203 = v200 & 0xFEFFFFFF;
  v204 = *(_DWORD *)(v74 + 4 * (v178 ^ 0x59u)) ^ v196 ^ v199 ^ (v202
                                                                                 - 1733637452
                                                                                 - ((2 * v202) & 0x31559568));
  v205 = (v201 ^ 0x7F339A0B) - 448996113 + ((2 * v201) & 0xFE673416);
  if ((v201 & 0x647076FA) != 0)
    v205 = 1685092090 - v201;
  v206 = v205 ^ v203;
  v207 = v197 ^ 0xD9;
  v208 = BYTE1(v192) ^ 0x4C;
  v209 = *(_DWORD *)(v64 + 4 * (HIBYTE(v206) ^ 2)) ^ 0xDC95F9B0;
  v210 = *(_DWORD *)(v71 + 4 * (BYTE1(v197) ^ 0xE1u));
  HIDWORD(v211) = v210 ^ 0x392A336;
  LODWORD(v211) = v210 ^ 0xC8000000;
  v212 = (v211 >> 27) ^ ((v211 >> 27) >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67
                                                                                   + 4
                                                                                   * (((v192 ^ 0x64E54CF9u) >> 16) ^ 5u))
                                                                       + (((v192 ^ 0x64E54CF9u) >> 16) ^ 0x3BBE0151)
                                                                       - 1077287202) ^ (4 * v209) & 0x93FEAEC;
  v213 = v204 ^ 0x9A1C4487;
  v214 = *(_DWORD *)(v74 + 4 * (v204 ^ 0xEu)) ^ v209 ^ (v212 - 1733637452 - ((2 * v212) & 0x31559568));
  v215 = *(_DWORD *)(v71 + 4 * ((unsigned __int16)(v204 ^ 0x4487) >> 8));
  HIDWORD(v211) = v215 ^ 0x392A336;
  LODWORD(v211) = v215 ^ 0xC8000000;
  v216 = *(_DWORD *)(v64 + 4 * ((v192 ^ 0x64E54CF9u) >> 24)) ^ 0xDC95F9B0;
  v217 = (v211 >> 27) ^ (4 * v216) & 0x93FEAEC ^ (*(_DWORD *)(v67
                                                            + 4 * (((v197 ^ 0xCCEBBAD9) >> 16) ^ 5u))
                                                + (((v197 ^ 0xCCEBBAD9) >> 16) ^ 0x3BBE0151)
                                                - 1077287202) ^ ((v211 >> 27) >> 4) & 0xEA72649;
  v218 = *(_DWORD *)(v74 + 4 * (v206 ^ 0x89u)) ^ v216 ^ (v217 - 1733637452 - ((2 * v217) & 0x31559568));
  v219 = *(_DWORD *)(v71 + 4 * (BYTE1(v206) ^ 0x5Bu));
  HIDWORD(v211) = v219 ^ 0x392A336;
  LODWORD(v211) = v219 ^ 0xC8000000;
  v220 = v211 >> 27;
  v221 = *(_DWORD *)(v64 + 4 * (HIBYTE(v197) ^ 0xCE)) ^ 0xDC95F9B0;
  v222 = v220 ^ (4 * v221) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v213) ^ 5u))
                                        + (BYTE2(v213) ^ 0x3BBE0151)
                                        - 1077287202);
  v223 = *(_DWORD *)(v64 + 4 * HIBYTE(v213)) ^ 0xDC95F9B0;
  v224 = *(_DWORD *)(v74 + 4 * (v192 ^ 0x70u)) ^ v221 ^ ((v222 ^ (v220 >> 4) & 0xEA72649)
                                                                          - 1733637452
                                                                          - ((2 * (v222 ^ (v220 >> 4) & 0xEA72649)) & 0x31559568));
  v225 = *(_DWORD *)(v71 + 4 * v208);
  HIDWORD(v211) = v225 ^ 0x392A336;
  LODWORD(v211) = v225 ^ 0xC8000000;
  v226 = v211 >> 27;
  v227 = (v226 >> 4) & 0xEA72649 ^ (4 * v223) & 0x93FEAEC ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v206) ^ 5u))
                                                           + (BYTE2(v206) ^ 0x3BBE0151)
                                                           - 1077287202);
  v228 = *(_DWORD *)(v74 + 4 * (v207 ^ 0x89u)) ^ v223 ^ v226 ^ (v227 - 1733637452 - ((2 * v227) & 0x31559568));
  v229 = BYTE1(v218) ^ 0xAD;
  v230 = *(_DWORD *)(v64 + 4 * (HIBYTE(v214) ^ 0x9E)) ^ 0xDC95F9B0;
  v231 = *(_DWORD *)(v71 + 4 * (BYTE1(v224) ^ 0x2Fu));
  HIDWORD(v211) = v231 ^ 0x392A336;
  LODWORD(v211) = v231 ^ 0xC8000000;
  v232 = v211 >> 27;
  v233 = (v232 >> 4) & 0xEA72649 | v232 & 0x80000;
  v234 = *(_DWORD *)(v64 + 4 * ((v218 ^ 0x1F3DADB0u) >> 24));
  v235 = (4 * v230) & 0x93FEAEC ^ v230 ^ v232 & 0xFFF7FFFF ^ (*(_DWORD *)(v67
                                                                        + 4
                                                                        * (((v218 ^ 0x1F3DADB0u) >> 16) ^ 5u))
                                                            + (((v218 ^ 0x1F3DADB0u) >> 16) ^ 0x3BBE0151)
                                                            - 1077287202);
  v236 = v234 & 0x2000000 ^ 0xD61E0EA1 ^ (1740600917
                                        - (v234 & 0xFDFFFFFF ^ 0x92CB7EBB | 0x67BF7655)
                                        + (v234 & 0xFDFFFFFF ^ 0x92CB7EBB | 0x984089AA));
  v237 = (v235 ^ v233) - 1733637452 - ((2 * (v235 ^ v233)) & 0x31559568);
  v238 = *(_DWORD *)(v71 + 4 * (BYTE1(v228) ^ 8u));
  BYTE2(v219) = BYTE2(v214) ^ 0x64;
  v239 = ((v238 ^ 0xCB92A336) << ((v214 ^ 0x43) & 5) << ((v214 ^ 0x43) & 5 ^ 5)) | (v238 >> 27) ^ 0x19;
  v240 = (v239 >> 4) & 0xEA72649 ^ (4 * v236) & 0x93FEAEC ^ (*(_DWORD *)(v67
                                                                       + 4
                                                                       * (((v224 ^ 0x34CE7499u) >> 16) ^ 5u))
                                                           + (((v224 ^ 0x34CE7499u) >> 16) ^ 0x3BBE0151)
                                                           - 1077287202);
  v241 = v236 ^ *(_DWORD *)(v74 + 4 * (v214 ^ 0x30u)) ^ v239;
  v242 = *(_DWORD *)(v71 + 4 * (BYTE1(v214) ^ 0x82u));
  HIDWORD(v211) = v242 ^ 0x392A336;
  LODWORD(v211) = v242 ^ 0xC8000000;
  v243 = v228 ^ 0x4BCA53EE;
  v244 = v241 ^ (v240 - 1733637452 - ((2 * v240) & 0x31559568));
  v245 = *(_DWORD *)(v64 + 4 * ((v224 ^ 0x34CE7499u) >> 24)) ^ 0xDC95F9B0;
  v246 = (v211 >> 27) ^ (4 * v245) & 0x93FEAEC ^ ((v211 >> 27) >> 4) & 0xEA72649 ^ (*(_DWORD *)(v67 + 4 * (BYTE2(v243) ^ 5u))
                                                                                                + (BYTE2(v243) ^ 0x3BBE0151)
                                                                                                - 1077287202);
  v247 = *(_DWORD *)(v74 + 4 * (v218 ^ 0x39u)) ^ v245 ^ (v246 - 1733637452 - ((2 * v246) & 0x31559568));
  v248 = *(_DWORD *)(v64 + 4 * HIBYTE(v243)) ^ 0xDC95F9B0;
  v249 = *(_DWORD *)(v71 + 4 * v229);
  HIDWORD(v211) = v249 ^ 0x392A336;
  LODWORD(v211) = v249 ^ 0xC8000000;
  v250 = v211 >> 27;
  v251 = *(_DWORD *)(v74 + 4 * (v243 ^ 0x89u)) ^ 0x8E164010 ^ v237;
  v252 = (4 * v248) & 0x93FEAEC ^ (v250 >> 4) & 0xEA72649 ^ ((BYTE2(v219) ^ 0x3BBE01F5)
                                                           - 1077287202
                                                           + *(_DWORD *)(v67 + 4 * (BYTE2(v219) ^ 0xA1u)));
  v253 = *(_DWORD *)(v74 + 4 * (v224 ^ 0x10u)) ^ v248 ^ v250 ^ (v252
                                                                                 - 1733637452
                                                                                 - ((2 * v252) & 0x31559568));
  LOBYTE(v243) = v247 ^ 0x5B;
  v254 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 14875);
  v255 = *(_DWORD *)(v254 + 4 * (((HIBYTE(v251) + (HIBYTE(v251) ^ 0xFFFFFF04) + 1) ^ 0xFFFFFFFE) + HIBYTE(v251)));
  v256 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 15618);
  HIDWORD(v211) = v255 ^ 0x25C17BBD;
  LODWORD(v211) = ~v255;
  v257 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 14836) - 8;
  v258 = ((v211 >> 30) + 1159871217 - ((2 * (v211 >> 30)) & 0x8A4475E2)) ^ *(_DWORD *)(v256
                                                                                     + 4
                                                                                     * ((v244 ^ 0x74331650) >> 16));
  v259 = (v258 + 1849444044 - ((2 * v258) & 0xDC788D98)) ^ *(_DWORD *)&v257[4 * (BYTE1(v247) ^ 0xC2)];
  v260 = *(_DWORD *)(v254 + 4 * (HIBYTE(v244) ^ 0x8F));
  HIDWORD(v211) = v260 ^ 0x25C17BBD;
  LODWORD(v211) = ~v260;
  v261 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 15189);
  v262 = (v259 + 1480830444 - ((2 * v259) & 0xB0875BD8)) ^ *(_DWORD *)(v261 + 4 * (v253 ^ 0x27u));
  v263 = *(_DWORD *)(v256 + 4 * ((v247 ^ 0xA5E55A5B) >> 16)) ^ *(_DWORD *)&v257[4
                                                                                                 * (BYTE1(v253) ^ 0xA9)] ^ 0x2B1E7C3D ^ (v211 >> 30);
  v264 = (v263 + 1480830444 - ((2 * v263) & 0xB0875BD8)) ^ *(_DWORD *)(v261 + 4 * v251);
  v265 = *(_DWORD *)(v254 + 4 * (HIBYTE(v247) ^ 0x5E));
  HIDWORD(v211) = v265 ^ 0x25C17BBD;
  LODWORD(v211) = ~v265;
  v266 = ((v211 >> 30) + 1159871217 - ((2 * (v211 >> 30)) & 0x8A4475E2)) ^ *(_DWORD *)(v256
                                                                                     + 4
                                                                                     * ((v253 ^ 0xB373127) >> 16));
  LODWORD(v254) = *(_DWORD *)(v254 + 4 * (HIBYTE(v253) ^ 0xF0));
  v267 = (v266 + 1849444044 - ((2 * v266) & 0xDC788D98)) ^ *(_DWORD *)&v257[4 * BYTE1(v251)];
  v268 = (4 * v254) ^ 0x9705EEF4;
  v269 = (v267 + 1480830444 - ((2 * v267) & 0xB0875BD8)) ^ *(_DWORD *)(v261 + 4 * (v244 ^ 0x50u));
  v270 = ((v268 | (~(_DWORD)v254 >> 30))
        + 1159871217
        - 2 * ((v268 | (~(_DWORD)v254 >> 30)) & 0x45223AF3 ^ (~(_DWORD)v254 >> 30) & 2)) ^ *(_DWORD *)(v256 + 4 * BYTE2(v251));
  v271 = (v270 + 1849444044 - ((2 * v270) & 0xDC788D98)) ^ *(_DWORD *)&v257[4 * (BYTE1(v244) ^ 0x8E)];
  v272 = (v271 + 1480830444 - ((2 * v271) & 0xB0875BD8)) ^ *(_DWORD *)(v261 + 4 * (v243 ^ 0x62u));
  v273 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x425C)) - 12;
  v274 = STACK[0x6940];
  *(_BYTE *)(STACK[0x6940] + STACK[0x69F0]) = (((v262 ^ 0x8B8A94B0) >> 24) - (((v262 ^ 0x8B8A94B0) >> 23) & 0x9E) + 79) ^ 0x6A ^ v273[((v262 ^ 0x8B8A94B0) >> 24) ^ 0x4BLL];
  v275 = HIBYTE(v272);
  LOBYTE(v254) = v273[v275 ^ 0xFA];
  v276 = v254 & 8;
  v277 = v275 ^ 0x3D;
  v278 = v254 & 0xF7;
  if ((v277 & v276) != 0)
    v276 = -v276;
  *(_BYTE *)(v274 + STACK[0x6A20]) = v278 ^ 0x15 ^ (v276 + v277);
  v279 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 15096) - 4;
  v280 = v279[BYTE1(v264) ^ 0x37];
  HIDWORD(v281) = v280 ^ 0xD;
  LODWORD(v281) = (v280 ^ 0x10) << 24;
  v282 = STACK[0x69C0];
  *(_BYTE *)(v274 + STACK[0x69D0]) = (v281 >> 28) ^ ((16 * (v281 >> 28)) | 0x80) ^ 0x78;
  v283 = LODWORD(STACK[0x6A80]) ^ 0xAA4542E8;
  *(_BYTE *)(v274
           + (((v282 & 0x5806A508 ^ 0x5800A400)
             + (v282 & 0x4806A000 ^ 0xA5261892)
             - ((v282 & 0x5806A508 ^ 0x5800A400) & 0x4806A000)) & 0xF83FE508 ^ __ROR4__(__ROR4__(((v282 & 0xA3795021 ^ 0x88613509)+ (v282 & 0x4800AD2 ^ 0x840081)- 1) ^ 0x627E385D, 16) ^ 0x6FE8990, 16) ^ 0x5AE4947D)) = (HIBYTE(v264) - ((v264 >> 23) & 0x9E) + 79) ^ 0xB3 ^ v273[HIBYTE(v264) ^ 0xB3];
  v284 = ((2 * v283) & 0x197A8440) - v283;
  v285 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 16289) - 12;
  v286 = v285[v264 ^ 0x18];
  HIDWORD(v281) = v286 ^ 2;
  LODWORD(v281) = (v286 ^ 0x24) << 24;
  LOBYTE(v286) = ((v281 >> 26) >> 3) & 0x10 ^ ((v281 >> 26) ^ 0xBF) & 0x91 | ((v281 >> 26) ^ 0xBF) & 0x6E ^ ((v281 >> 26) >> 3) & 0xC;
  LODWORD(v281) = __ROR4__(v269 ^ 0xE751C34B, 12) ^ 0xE76932D6;
  HIDWORD(v281) = v281;
  v287 = v281 >> 20;
  *(_BYTE *)(v274 + ((v284 + 1933753821) & 0xFFFFFFF8 ^ 0x50CE6467)) = v286;
  v288 = v279[BYTE1(v272) ^ 0x96];
  HIDWORD(v281) = v288 ^ 0xD;
  LODWORD(v281) = (v288 ^ 0x10) << 24;
  *(_BYTE *)(v274 + STACK[0x6A70]) = (v281 >> 28) ^ 0xD7 ^ ((16 * (v281 >> 28)) | 0x80);
  *(_BYTE *)(v274 + STACK[0x6A10]) = v273[((v287 ^ 0xCE8202A1) >> 24) ^ 0xE0] ^ (((v287 ^ 0xCE8202A1) >> 24)
                                                                                 - (((v287 ^ 0xCE8202A1) >> 23) & 0x9E)
                                                                                 + 79) ^ 0x47;
  v289 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 16725) - 12;
  *(_BYTE *)(v274
           + ((1847725920
             - (LODWORD(STACK[0x6A00]) ^ 0xB266E3A2 | 0x6E220F60)
             + (LODWORD(STACK[0x6A00]) ^ 0xB266E3A2 | 0x91DDF09F)) ^ 0xAA728866)) = v289[BYTE2(v287) ^ 0xA1] ^ 0x8D;
  v290 = v279[BYTE1(v287) ^ 0x2FLL];
  HIDWORD(v281) = v290 ^ 0xD;
  LODWORD(v281) = (v290 ^ 0x10) << 24;
  v291 = v281 >> 28;
  *(_BYTE *)(v274 + STACK[0x6AA0]) = ((v291 ^ -(char)v291 ^ (((16 * v291) | 0x80) - (((16 * v291) | 0x80) ^ v291)))
                                    + ((16 * v291) | 0x80)) ^ 0x9C;
  v292 = v285[v262 ^ 0xB4];
  HIDWORD(v281) = v292 ^ 2;
  LODWORD(v281) = (v292 ^ 0x24) << 24;
  *(_BYTE *)(v274 + STACK[0x6A40]) = (v281 >> 26) ^ 0xC9 ^ ((v281 >> 26) >> 3) & 0x1C;
  *(_BYTE *)(v274 + STACK[0x6A90]) = v289[((v262 ^ 0x8B8A94B0) >> (v268 & 0x10) >> (v268 & 0x10 ^ 0x10)) ^ 0x93] ^ 0x4E;
  *(_BYTE *)(v274 + STACK[0x69E0]) = v289[BYTE2(v264) ^ 0x28] ^ 0xF0;
  v293 = v279[BYTE1(v262) ^ 0xF3];
  v294 = ((LODWORD(STACK[0x6A30]) ^ 0x669855E9) - ((2 * (LODWORD(STACK[0x6A30]) ^ 0x669855E9)) & 0x1D818938) - 1899969380) ^ 0x8EEEF4D9;
  HIDWORD(v281) = v293 ^ 0xD;
  LODWORD(v281) = (v293 ^ 0x10) << 24;
  *(_BYTE *)(v274 + ((((2 * v294) | 0x49744456) - v294 + 1531305429) ^ 0x4BC5DCD4)) = (v281 >> 28) ^ 0x13 ^ ((16 * (v281 >> 28)) | 0x80);
  v295 = v285[v272 ^ 0x94];
  HIDWORD(v281) = v295 ^ 2;
  LODWORD(v281) = (v295 ^ 0x24) << 24;
  *(_BYTE *)(v274 + STACK[0x6A60]) = (v281 >> 26) ^ 0x5A ^ ((v281 >> 26) >> 3) & 0x1C;
  v296 = v285[(((((4 * (v287 ^ 0xA1)) | ((v287 ^ 0xA1) >> 6)) ^ 0xCE) >> 2) | ((((4 * (v287 ^ 0xA1)) | ((v287 ^ 0xA1) >> 6)) ^ 0xCE) << 6)) ^ 0x19];
  HIDWORD(v281) = v296 ^ 2;
  LODWORD(v281) = (v296 ^ 0x24) << 24;
  *(_BYTE *)(v274 + STACK[0x6AB0]) = (v281 >> 26) ^ 0x3D ^ ((v281 >> 26) >> 3) & 0x1C;
  v297 = (LODWORD(STACK[0x6A50]) ^ 0xC7911480)
       + (v282 & 0x698608B2 ^ 0x2806083A)
       - ((LODWORD(STACK[0x6A50]) ^ 0xC7911480) & 0x698608B2);
  v298 = (((v282 ^ 0x2F093044) - 789131332) ^ ((v282 ^ 0x7E920900) - 2123499776) ^ ((v282 ^ 0xD852A217) + 665673193))
       - 1319037120;
  v299 = (v298 ^ 0xDF6CF3BA) & (2 * (v298 & 0xD8688423)) ^ v298 & 0xD8688423;
  v300 = (2 * (v298 ^ 0xCF6DFBBA)) & 0x17057F98 ^ 0x11050089 ^ ((2 * (v298 ^ 0xCF6DFBBA)) ^ 0x2E0AFF32) & (v298 ^ 0xCF6DFBBA);
  v301 = ((4 * v299) & 0x3043198 | v299) ^ (4 * v299) & v300;
  v302 = ((4 * v300) ^ 0x5C15FE64) & v300 ^ (4 * v300) & 0x17057F98;
  v303 = v302 ^ 0x3000199;
  v304 = (v302 ^ 0x14057E09) & (16 * v301) ^ v301;
  v305 = ((16 * v303) ^ 0x7057F990) & v303 ^ (16 * v303) & 0x17057F90;
  v306 = v304 ^ 0x17057F99 ^ (v305 ^ 0x10057909) & (v304 << 8);
  v307 = v298 ^ (2
               * ((v306 << 16) & 0x17050000 ^ v306 ^ ((v306 << 16) ^ 0x7F990000) & (((v305 ^ 0x7000609) << 8) & 0x17050000 ^ 0x12000000 ^ (((v305 ^ 0x7000609) << 8) ^ 0x57F0000) & (v305 ^ 0x7000609))));
  *(_BYTE *)(v274 + (((v297 & 0x63FAE592 ^ 0x2F8E501) + (v297 & 0x9C051A6C) - 1) ^ 0x25266265)) = v289[BYTE2(v272) ^ 0xABLL] ^ 0x6B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((207
                                          * ((((v307 ^ 0xC471F076) + 1781002188) ^ ((v307 ^ 0x5256C140) - 67051778) ^ ((v307 ^ 0x4E474A27) - 535734885))
                                           - 1983276205 < 0x50)) ^ LODWORD(STACK[0x6AC0])))
                            - 4))();
}

uint64_t sub_1009FEF40(int a1)
{
  int v1;
  int v2;

  LODWORD(STACK[0x69A0]) = v1 ^ 0xCF7498ED;
  LODWORD(STACK[0x69B0]) = a1 ^ 0x48ACB054;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ 0xD97)) - 8))();
}

uint64_t sub_1009FEFE4()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6930]) + 9044)))();
}

uint64_t sub_1009FF018()
{
  uint64_t v0;
  int v1;

  STACK[0xD1A8] = v0 - 32;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 9240)) - ((v1 + 438101384) & 0xE5E33E8F ^ 0x3482)))(1772489163, 2147476573, 3192319592, 4075288927, 2337, 4294967243, STACK[0x60C0], STACK[0x5538]);
}

uint64_t sub_1009FF0CC(int a1, int a2, int a3, int a4, int a5, char a6, _QWORD *a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  int v10;
  _DWORD *v11;
  uint64_t v12;
  unsigned int v13;

  v13 = ((*(_DWORD *)(*a7 + (*v11 & a3)) ^ (v12 + v9 - 1)) & (a2 + ((v10 + v8 + 102) & a4) - 1467)) * a1;
  *(_BYTE *)(v12 + v9 - 1) ^= *(_BYTE *)(a8 + (((_BYTE)v9 - 1) & 0xF | (16 * (((v13 ^ HIWORD(v13)) * a1) >> 24)))) ^ ((v13 ^ BYTE2(v13)) * a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 > 0x4F) * a5) ^ v8)) - 12))();
}

uint64_t sub_1009FF154@<X0>(int a1@<W8>)
{
  int v1;

  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((220 * (v1 == (a1 ^ 0x7323) + 1436774160)) ^ a1)) - 12))();
}

uint64_t sub_1009FF1B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v1 = (a1 + 12577);
  STACK[0x77B8] = STACK[0xB548];
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  LODWORD(STACK[0xC0F8]) = -1926392769;
  return ((uint64_t (*)(void))(v2 - (v1 ^ 0x5272)))();
}

uint64_t sub_1009FF208()
{
  char v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 - 15358) ^ 0x2091) * (v0 & 1)) ^ v1)) - 8))();
}

uint64_t sub_1009FF240@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;

  v1 = STACK[0xC0F8];
  LODWORD(STACK[0xA118]) = STACK[0xC0F8];
  STACK[0xC490] = STACK[0x77B8];
  v2 = (((v1 >> (((a1 - 64) | 0x10) ^ 0x54)) ^ 0x50DEAFE6) - 1321592592) ^ (((v1 >> (((a1 - 64) | 0x10) ^ 0x54)) ^ 0xF9DB83C9)
                                                                          + 406795457) ^ (((v1 >> (((a1 - 64) | 0x10) ^ 0x54)) ^ 0xA1D7F569)
                                                                                        + 1077101153);
  v3 = *(_DWORD *)STACK[0x4D60] + *(_DWORD *)STACK[0x4D68];
  v4 = v2 + (v3 & 7) + 1881481223;
  v5 = (2 * (v4 & 0xA6A471AA ^ 0x2A448883)) & 0x8408000 ^ v4 & 0xA6A471AA ^ 0x2A448883 ^ ((2
                                                                                         * (v4 & 0xA6A471AA ^ 0x2A448883)) ^ 0x54891106) & (v4 ^ 0x8CE0F929);
  v6 = (2 * (v4 ^ 0x8CE0F929)) & 0x2A448882 ^ 0x2A448881 ^ ((2 * (v4 ^ 0x8CE0F929)) ^ 0x54891106) & (v4 ^ 0x8CE0F929);
  v7 = (4 * v5) & 0x2A448880 ^ v5 ^ ((4 * v5) ^ 0xA912220C) & v6;
  v8 = (4 * v6) & 0x2A448880 ^ 0x2448883 ^ ((4 * v6) ^ 0xA912220C) & v6;
  v9 = (16 * v7) & 0x2A448880 ^ v7 ^ ((16 * v7) ^ 0x24488830) & v8;
  v10 = (16 * v8) & 0x2A448880 ^ 0xA040083 ^ ((16 * v8) ^ 0xA4488830) & v8;
  v11 = v9 ^ 0x8400800 ^ (v9 << 8) & 0x2A448800 ^ ((v9 << 8) ^ 0x4008300) & v10;
  v12 = (32
       * ((v11 << 16) & 0x2440000 ^ v11 ^ ((v11 << 16) ^ 0x830000) & ((v10 << 8) & 0x2440000 ^ 0x2440000 ^ ((v10 << 8) ^ 0x4880000) & v10))) ^ (16 * v4);
  LODWORD(STACK[0x6B2C]) = (((v12 ^ 0x468FCB89) + 653700553) ^ ((v12 ^ 0xC9F3B2FB) - 1450519365) ^ ((v12 ^ 0xADAA73B2)
                                                                                                  - 841804300))
                         - 866873334;
  v13 = v3 & 0x17;
  if (v13 == 1)
    v13 = 0;
  LODWORD(STACK[0xA744]) = v13;
  v14 = STACK[0x7FB0];
  STACK[0x6B70] = STACK[0x7FB0] - 0x28623712C9340D52;
  v15 = (v3 & 0xB) + 1792654488;
  v16 = (v15 ^ 0x5D09D4C9) & 0x52 & ((2 * (((v3 & 0xB) - 104) & 0x29 ^ 0xC82F97A4)) ^ 0x40) | ((v3 & 0xB) - 104) & 0x29 ^ 0xC82F97A4;
  v17 = 2 * (v15 ^ 0x5D09D4C9);
  v18 = (v17 ^ 0x10502848) & (v15 ^ 0x5D09D4C9);
  v19 = v18 ^ v17 & 0x24;
  v18 &= 0x2806842u;
  v20 = v16 ^ v18 ^ ((4 * v16) ^ 0xEA39A052) & (v19 | 0xC8079780);
  v21 = ((4 * v19) ^ 0xEA39A0C2) & (v19 | 0xC82F9780) ^ v18;
  v22 = v20 ^ v21 & 0xCA87FEC2 ^ ((16 * v20) ^ 0xC807EC82) & (v21 ^ 0xC8079684);
  v23 = ((16 * v21) ^ 0x4AFE96C2) & (v21 ^ 0xC8079684) ^ v21 & 0xCA87FEC2;
  v24 = v22 ^ v23 & 0xCA87FEC2 ^ ((v22 << 8) ^ 0xE5105AC2) & (v23 ^ 0xC80796A4);
  v25 = ((v23 << 8) ^ 0xCD117EC2) & (v23 ^ 0xC80796A4) ^ v23 & 0xCA87FEC2;
  v26 = (32
       * (v24 ^ v25 & 0x287FEC2 ^ ((v24 << 16) ^ 0xCBA3FEC3) & (v25 ^ 0x280000) ^ ((v24 << 16) ^ 0xCBA3FEC3) & 0x2F9680)) ^ (16 * v15);
  LODWORD(STACK[0xBB10]) = (((v26 ^ 0x49953080) + 752078047) ^ ((v26 ^ 0xE06580C5) - 2061271908) ^ ((v26 ^ 0xFE667215)
                                                                                                  - 1692365236))
                         - 600588675;
  v27 = v3 & 0xF;
  if (v27 == 1)
    v27 = 0;
  LODWORD(STACK[0xD0C0]) = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v14 - 0x28623712C9340CE2) == 2) | (8
                                                                                            * (*(_DWORD *)(v14 - 0x28623712C9340CE2) == 2))) ^ a1))
                            - 12))();
}

_QWORD *sub_1009FF768@<X0>(int a1@<W8>)
{
  return (*(_QWORD *(**)(unint64_t *__return_ptr, uint64_t))(STACK[0x6AD8]
                                                                            + 8
                                                                            * ((11928
                                                                              * (((a1 + 1609717824) ^ (a1 - 2619)) == 1215600751)) ^ (a1 + 1000))))(&STACK[0xFF53], 74186752);
}

uint64_t sub_1009FF7F4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((*(_DWORD *)(v1 - 0x28623712C9340CA2) == -1926392725)
                                                        * ((v0 ^ 0x496B) + ((v0 - 17435) | 0x202) - 3897)) ^ v0))
                                          - 12))(74186752);
}

_QWORD *sub_1009FF85C()
{
  int v0;

  return (*(_QWORD *(**)(unint64_t *__return_ptr))(STACK[0x6AD8]
                                                                   + 8 * ((((v0 + 13383) | 0xB4D) - 13692) ^ v0)))(&STACK[0xFF53]);
}

uint64_t sub_1009FF8BC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = (((_DWORD)a1 + 1956068551) & 0x8B68F9BD ^ 0xFFFFFFFFFFFFC648) + *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)a1 + 3492)) - 8))();
}

uint64_t sub_1009FF90C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] + 13210) | 1) ^ (STACK[0x6508] + 1059464155) & 0xC0D9CBAF ^ 0x6290)
                                               * (v0 == -731380499)) ^ LODWORD(STACK[0x2974])))
                            - 4))();
}

uint64_t sub_1009FF97C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - (a1 ^ 0x4410u) - 3))();
}

uint64_t sub_1009FF9B4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = STACK[0x8798];
  strcpy((char *)&STACK[0x95D2], "false");
  ((void (*)(uint64_t, unint64_t, uint64_t))STACK[0x3E68])(a1, v3, 21);
  STACK[0x1D370] = (unint64_t)&STACK[0x95D2];
  v4 = STACK[0x2940];
  LODWORD(STACK[0x1D368]) = (v1 + 4248) ^ STACK[0x2940];
  STACK[0x1D358] = v4 + 6;
  STACK[0x1D360] = v3;
  sub_10111D7B0(v2 - 240);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (v1 ^ 0x1A5D ^ (246
                                              * ((((LOBYTE(STACK[0x1D350]) - v1) | (v1 - LOBYTE(STACK[0x1D350]))) & 0x80) == 0)))))();
}

uint64_t sub_1009FFA74()
{
  uint64_t (*v0)(unint64_t *, uint64_t, uint64_t);
  int v1;
  uint64_t v2;

  v0(&STACK[0x95D2], v2, 5);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 + 2534)))();
}

uint64_t sub_1009FFAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  STACK[0xC768] -= 32;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 11700))
                                                                                                - 12))(STACK[0xB548], a2, a3, a4, a5, 330416983);
}

uint64_t sub_1009FFC74()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14005)) - 4))();
}

uint64_t sub_1009FFCA4()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v0 = *(_DWORD *)STACK[0x4D68];
  v1 = *(_DWORD *)STACK[0x4D60];
  v2 = (((_BYTE)v1 - (_BYTE)v0) & 7) + ((STACK[0x6508] + 1705225283) & 0x9A5C53D6 ^ 0x30CBB5BE);
  v3 = (v2 ^ 0xD9107DAA | 0x20) & (2 * (v2 & 0x13)) ^ v2 & 0x13;
  v4 = ((2 * (v2 ^ 0xD9107DAA)) ^ 0x28484892) & (v2 ^ 0xD9107DAA) ^ (2 * (v2 ^ 0xD9107DAA)) & 0x38;
  v5 = v4 ^ 9;
  v6 = (v4 ^ 0x70) & (4 * v3) ^ v3;
  v7 = ((4 * v5) ^ 0x58909DE4) & v5 ^ (4 * v5) & 0x16242778;
  v8 = (v7 ^ 0x10000569) & (16 * v6) ^ v6;
  v9 = ((16 * (v7 ^ 0x6242219)) ^ 0x62427790) & (v7 ^ 0x6242219) ^ (16 * (v7 ^ 0x6242219)) & 0x16242770;
  v10 = v8 ^ 0x16242779 ^ (v9 ^ 0x2002769) & (v8 << 8);
  v11 = (32
       * ((v10 << 16) & 0x6240000 ^ v10 ^ ((v10 << 16) ^ 0x7790000) & (((v9 ^ 0x14240069) << 8) & 0x6240000 ^ (((v9 ^ 0x14240069) << 8) ^ 0x4270000) & (v9 ^ 0x14240069) ^ 0x2000000))) ^ (16 * v2);
  LODWORD(STACK[0x8F74]) = (((v11 ^ 0x94B5CDC8) + 82180598) ^ ((v11 ^ 0xD6056130) + 1179997454) ^ ((v11 ^ 0xB171EEE8)
                                                                                                 + 555866838))
                         - 1418557858;
  v12 = ((_BYTE)v1 + (_BYTE)v0) & 0x17;
  if (v12 == 1)
    v12 = 0;
  LODWORD(STACK[0xBFB4]) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((2034 * (*(_QWORD *)STACK[0x4A48] != 0)) ^ LODWORD(STACK[0x2EA4])))
                            - 12))();
}

uint64_t sub_1009FFEEC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  int v9;

  v5 = STACK[0x6AD8];
  STACK[0xEE18] = ((v0 + (_DWORD)v1 - 14 + 1680) & 0xB779F4E3 ^ 0xFFFFFFFFFFFFEF7ELL)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v6 = (_QWORD *)STACK[0x4A48];
  STACK[0xEE28] = STACK[0x4A48];
  *(_DWORD *)(v2 + 784) = -299994601
                        - 1705718857 * ((1677485272 - (v3 | 0x63FC64D8) + (v3 | 0x9C039B27)) ^ 0xA191447E)
                        + v1
                        - 26;
  *(_QWORD *)(v2 + 792) = &STACK[0xEE18];
  v7 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v4 - 240);
  if (*(_DWORD *)(v2 + 788))
    v8 = 1;
  else
    v8 = *v6 == 0;
  v9 = v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (int)(v1 ^ 0x3494 ^ (3833 * v9))) - 12))(v7);
}

uint64_t sub_1009FFFCC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = STACK[0x6AD8];
  v6 = 2142736129 * (((v3 | 0xE731F078327ADBA2) - (v3 & 0xE731F078327ADBA2)) ^ 0x9A2AF87451224FABLL);
  *(_QWORD *)(v2 + 800) = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v6;
  *(_QWORD *)(v2 + 784) = a1;
  *(_DWORD *)(v2 + 792) = (v1 + 427180620) ^ v6;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v4 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v1 ^ 0x3A7F)) - 12))(v7);
}

uint64_t sub_100A00054()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;

  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v6 = 2142736129 * (v2 ^ 0x7D1B080C63589409);
  *(_DWORD *)(v1 + 792) = (v0 + 427180620) ^ v6;
  *(_QWORD *)(v1 + 800) = v5 ^ v6;
  *(_QWORD *)(v1 + 784) = 0;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  if (*(_DWORD *)STACK[0x4A78])
    v8 = 1;
  else
    v8 = *(_QWORD *)STACK[0x49F0] == 0;
  v9 = !v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((((v0 + 2182) | 0x4A0) - 4222) ^ v0 ^ (17538 * v9)))
                                          - 4))(v7);
}

uint64_t sub_100A000F4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  int v21;
  int v22;
  int v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  int32x4_t v43;
  int8x16_t v44;
  int32x4_t v45;
  uint16x8_t v46;
  uint8x16_t v47;
  uint16x8_t v48;
  uint16x8_t v49;
  int8x16x4_t v51;

  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v3 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v2 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v2 ^ 0x83C25199;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  LODWORD(v9) = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  STACK[0xF008] = 0;
  v10 = -2084417127 * v9;
  v11 = 16777619 * ((-2084417127 * (_DWORD)v9 + 7) ^ (-2084417127 * v9)) % 7;
  v12 = *(_BYTE *)((unint64_t)&STACK[0xF008] | v11);
  *(_BYTE *)((unint64_t)&STACK[0xF008] | v11) = 0;
  LOBYTE(STACK[0xF00F]) = v12;
  v13 = 16777619 * ((-2084417127 * (_DWORD)v9 + 6) ^ (-2084417127 * v9)) % 6;
  v14 = *(_BYTE *)((unint64_t)&STACK[0xF008] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xF008] | v13) = STACK[0xF00E];
  LOBYTE(STACK[0xF00E]) = v14;
  v15 = 16777619 * ((-2084417127 * (_DWORD)v9 + 5) ^ (-2084417127 * v9)) % 5;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xF008] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xF008] | v15) = STACK[0xF00D];
  LOBYTE(STACK[0xF00D]) = v16;
  v17 = STACK[0xF008];
  LOBYTE(STACK[0xF008]) = STACK[0xF00C];
  LOBYTE(STACK[0xF00C]) = v17;
  v18 = 16777619 * ((-2084417127 * (_DWORD)v9 + 3) ^ (-2084417127 * v9)) % 3;
  v19 = *(_BYTE *)((unint64_t)&STACK[0xF008] | v18);
  *(_BYTE *)((unint64_t)&STACK[0xF008] | v18) = STACK[0xF00B];
  LOBYTE(STACK[0xF00B]) = v19;
  v20 = STACK[0xF009];
  LOBYTE(STACK[0xF00A]) = STACK[0xF008];
  LOWORD(STACK[0xF008]) = v20;
  v21 = (v10 * v10) ^ v10;
  v22 = (v10 + v10 * v10) ^ v10;
  v23 = v22 + 16777619 * LODWORD(STACK[0xF00C]);
  LODWORD(STACK[0xF008]) = v21 + 16777619 * LODWORD(STACK[0xF008]);
  LODWORD(STACK[0xF00C]) = v23;
  v24 = STACK[0xF008] ^ a1;
  v25 = 899433627 * (v24 - v21);
  LODWORD(v24) = 899433627 * (HIDWORD(v24) - v22);
  LODWORD(STACK[0xF010]) = v25;
  LODWORD(STACK[0xF014]) = v24;
  LOBYTE(STACK[0xF011]) = v25;
  LOBYTE(STACK[0xF010]) = BYTE2(v25);
  LOBYTE(STACK[0xF012]) = BYTE1(v25);
  v26 = HIBYTE(v25);
  v27 = (_BYTE *)((unint64_t)&STACK[0xF010] | v18);
  LOBYTE(v25) = *v27;
  *v27 = v26;
  LOBYTE(STACK[0xF013]) = v25;
  LOBYTE(v26) = STACK[0xF010];
  LOBYTE(STACK[0xF010]) = v24;
  LOBYTE(STACK[0xF014]) = v26;
  v28 = (_BYTE *)((unint64_t)&STACK[0xF010] | v15);
  LOBYTE(v27) = *v28;
  *v28 = BYTE1(v24);
  LOBYTE(STACK[0xF015]) = (_BYTE)v27;
  v29 = (_BYTE *)((unint64_t)&STACK[0xF010] | v13);
  LOBYTE(v28) = *v29;
  *v29 = BYTE2(v24);
  LOBYTE(STACK[0xF016]) = (_BYTE)v28;
  v30 = (_BYTE *)((unint64_t)&STACK[0xF010] | v11);
  LOBYTE(v29) = *v30;
  *v30 = BYTE3(v24);
  LOBYTE(STACK[0xF017]) = (_BYTE)v29;
  v31 = STACK[0xF010];
  v32 = (-2084417127 * STACK[0xF010]) ^ v9;
  for (i = 1; i != 2; ++i)
  {
    v34 = 8 * i;
    v35 = 8 * (16777619 * ((v32 + (_DWORD)i) ^ v32) % i);
    v36 = *(_QWORD *)(v31 + v35) ^ *(_QWORD *)(v31 + 8 * i);
    *(_QWORD *)(v31 + v34) = v36;
    v37 = *(_QWORD *)(v31 + v35) ^ v36;
    *(_QWORD *)(v31 + v35) = v37;
    *(_QWORD *)(v31 + v34) = *(_QWORD *)(v31 + 8 * i) ^ v37;
  }
  v38 = 0;
  v39 = (__n128)xmmword_1015070D0;
  v40 = (__n128)xmmword_1015070E0;
  v41 = (__n128)xmmword_1015070F0;
  v42 = (__n128)xmmword_101507100;
  v43 = vdupq_n_s32(v32);
  v44 = *(int8x16_t *)&STACK[0x4950];
  v45.i64[0] = 0x1000000010;
  v45.i64[1] = 0x1000000010;
  v46.i64[0] = 0x9B009B009B009BLL;
  v46.i64[1] = 0x9B009B009B009BLL;
  do
  {
    v47 = *(uint8x16_t *)(v31 + v38);
    v48 = vmovl_high_u8(v47);
    v49 = vmovl_u8(*(uint8x8_t *)v47.i8);
    v51.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v41, v43), vsubq_s32((int32x4_t)v41, v43)), (int8x16_t)v43), (int8x16_t)vmull_high_u16(v49, v46));
    v51.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v40, v43), vsubq_s32((int32x4_t)v40, v43)), (int8x16_t)v43), (int8x16_t)vmull_u16(*(uint16x4_t *)v48.i8, (uint16x4_t)0x9B009B009B009BLL));
    v51.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v42, v43), vsubq_s32((int32x4_t)v42, v43)), (int8x16_t)v43), (int8x16_t)vmull_u16(*(uint16x4_t *)v49.i8, (uint16x4_t)0x9B009B009B009BLL));
    v51.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v39, v43), vsubq_s32((int32x4_t)v39, v43)), (int8x16_t)v43), (int8x16_t)vmull_high_u16(v48, v46));
    *(int8x16_t *)(v31 + v38) = vqtbl4q_s8(v51, v44);
    v38 += 16;
    v42 = (__n128)vaddq_s32((int32x4_t)v42, v45);
    v41 = (__n128)vaddq_s32((int32x4_t)v41, v45);
    v40 = (__n128)vaddq_s32((int32x4_t)v40, v45);
    v39 = (__n128)vaddq_s32((int32x4_t)v39, v45);
  }
  while (v38 != 16);
  *(_QWORD *)STACK[0x49F0] = v31;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1)
                                                                 - ((2113 * (v1 ^ 0x1DAAu)) ^ 0x1086)))(v39, v40, v41, v42);
}

uint64_t sub_100A004FC()
{
  int v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  *v1 = v0 + 1;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 - 4226 + ((v2 + 1048439333) & 0xC18215DB)));
  v6 = STACK[0x2E98];
  LODWORD(STACK[0x1D358]) = (v2 + 427180620) ^ STACK[0x2E98];
  STACK[0x1D360] = v5 ^ v6;
  STACK[0x1D350] = 0;
  v7 = (uint64_t (*)(uint64_t))STACK[0x5530];
  ((void (*)(uint64_t))STACK[0x5530])(v3 - 240);
  v8 = *(_QWORD *)(v4 + 8 * v2);
  LODWORD(STACK[0x1D358]) = (v2 + 427180620) ^ (2142736129
                                              * ((v3 - 463047035 - 2 * ((v3 - 240) & 0xE4667775)) ^ 0x873EE37C));
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v8 ^ (2142736129
                       * ((v3 + 0x2C026C90E4667685 - 2 * ((v3 - 240) & 0x2C026C90E4667775)) ^ 0x5119649C873EE37CLL));
  v9 = v7(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (v2 ^ 0x31F3 ^ ((*(_DWORD *)STACK[0x4A78] > 0) * (v2 + 21162))))
                                          - 8))(v9);
}

uint64_t sub_100A00614()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v0 == ((v1 - 4145) | 0x2120) - 8560 && *(_QWORD *)STACK[0x49F0] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2015 * v3) ^ (v1 + 13179))) - 4))();
}

uint64_t sub_100A00664@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  _QWORD *v40;
  unsigned int v41;
  uint64_t i;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v3 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3 ^ 0x83C25199;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEF28] = 0;
  STACK[0xEF30] = v1;
  v12 = 16777619 * ((-2084417127 * v11 + 7) ^ (-2084417127 * v11)) % 7;
  v13 = 16777619 * ((-2084417127 * v11 + 6) ^ (-2084417127 * v11)) % 6;
  v14 = 16777619 * ((-2084417127 * v11 + 5) ^ (-2084417127 * v11)) % 5;
  v15 = 16777619 * ((-2084417127 * v11 + 3) ^ (-2084417127 * v11)) % 3;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEF28] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEF28] | v12) = STACK[0xEF2F];
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEF28] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEF28] | v13) = STACK[0xEF2E];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEF28] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEF28] | v14) = STACK[0xEF2D];
  v19 = STACK[0xEF28];
  LOBYTE(STACK[0xEF28]) = STACK[0xEF2C];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEF28] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEF28] | v15) = STACK[0xEF2B];
  v21 = vdup_n_s32(-2084417127 * v11);
  v22.i32[0] = v21.i32[0];
  v22.i32[1] = -2084417127 * v11 + 1;
  LOBYTE(STACK[0xEF2F]) = v16;
  LOBYTE(STACK[0xEF2E]) = v17;
  LOBYTE(STACK[0xEF2D]) = v18;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v21), (int8x8_t)v21);
  LOBYTE(STACK[0xEF2C]) = v19;
  LOBYTE(STACK[0xEF2B]) = v20;
  v24 = STACK[0xEF29];
  LOBYTE(STACK[0xEF2A]) = STACK[0xEF28];
  LOWORD(STACK[0xEF28]) = v24;
  STACK[0xEF28] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEF28], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEF30];
  v26 = (-2084417127 * STACK[0xEF30]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 16);
  v40 = (_QWORD *)(v25 + 8);
  v41 = 1;
  for (i = 3; i > 2; --i)
  {
    v43 = 8 * (16777619 * ((v26 + v41) ^ v26) % v41);
    v44 = *(_QWORD *)(v25 + v43) ^ *v40;
    *v40 = v44;
    v45 = *(_QWORD *)(v25 + v43) ^ v44;
    *(_QWORD *)(v25 + v43) = v45;
    *v40 ^= v45;
    v40 += 0xFFFFFFFFLL;
    --v41;
  }
  v46 = *((_BYTE *)&STACK[0xEF30] + v12);
  *((_BYTE *)&STACK[0xEF30] + v12) = STACK[0xEF37];
  LOBYTE(STACK[0xEF37]) = v46;
  v47 = *((_BYTE *)&STACK[0xEF30] + v13);
  *((_BYTE *)&STACK[0xEF30] + v13) = STACK[0xEF36];
  LOBYTE(STACK[0xEF36]) = v47;
  v48 = *((_BYTE *)&STACK[0xEF30] + v14);
  *((_BYTE *)&STACK[0xEF30] + v14) = STACK[0xEF35];
  LOBYTE(STACK[0xEF35]) = v48;
  v49 = STACK[0xEF30];
  LOBYTE(STACK[0xEF30]) = STACK[0xEF34];
  v50 = *((_BYTE *)&STACK[0xEF30] + v15);
  *((_BYTE *)&STACK[0xEF30] + v15) = STACK[0xEF33];
  LOBYTE(STACK[0xEF34]) = v49;
  LOBYTE(STACK[0xEF33]) = v50;
  v51 = STACK[0xEF31];
  LOBYTE(STACK[0xEF32]) = STACK[0xEF30];
  LOWORD(STACK[0xEF30]) = v51;
  STACK[0xEF30] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEF30], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x49F0] = STACK[0xEF30] ^ STACK[0xEF28];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 - 17037) | 0x2001u) + 8557))();
}

uint64_t sub_100A00A84()
{
  int v0;
  int v1;
  _DWORD *v2;

  *v2 = v1 - 4334 + v0 - 4228;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100A00AAC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v4 = 2142736129 * ((v1 - 240) ^ 0x7D1B080C63589409);
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ v4;
  STACK[0x1D360] = v3 ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * ((113 * (*(_QWORD *)STACK[0x4A48] == 0)) | (v0 + 6399)))
                                          - ((8 * v0) ^ 0x8410)))(v5);
}

uint64_t sub_100A00B50@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  STACK[0x1D350] = a1;
  v5 = STACK[0x2790];
  STACK[0x1D360] = v4 ^ STACK[0x2790];
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 + 6512)) - ((v1 - 1667) | 8u) + 2560))(v6);
}

uint64_t sub_100A00BBC()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1956)) - 8))(5121);
}

uint64_t sub_100A00D90()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1135) ^ 0x1E3E)) - 12))();
}

uint64_t sub_100A00E04()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 15193) ^ 0x1072)))();
}

uint64_t sub_100A00E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _BYTE *v7;

  v7 = (_BYTE *)(a1 + v3 - 0x7FC84853743D6A14);
  *v7 = HIBYTE(v2) ^ 0xB2;
  v7[1] = BYTE6(v2) ^ v4;
  v7[2] = BYTE5(v2) ^ v6;
  v7[3] = BYTE4(v2) ^ 0x2D;
  v7[4] = v5 ^ BYTE3(v2);
  v7[5] = ~BYTE2(v2);
  v7[6] = ((BYTE1(v2) ^ 0xE5) - 2 * ((BYTE1(v2) ^ 0xE5) & 0xF3 ^ BYTE1(v2) & 2) + 113) ^ 0x71;
  v7[7] = v2 ^ 6;
  return v1();
}

_QWORD *sub_100A00ECC()
{
  int v0;
  char v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unint64_t v12;
  int v13;

  v0 = LODWORD(STACK[0x490C]) | 0x88F;
  STACK[0x9008] = STACK[0xBDA8];
  v1 = *(_DWORD *)STACK[0x4D68];
  v2 = *(_DWORD *)STACK[0x4D60];
  v3 = (((_BYTE)v2 - v1) & 7) + 2116938334;
  v4 = ((2 * (v3 & 0x24 ^ 0x79799196)) ^ 0x200222C) & v3 | v3 & 0x24 ^ 0x79799196;
  v5 = (2 * (v3 ^ (v0 - 122996637))) & 0x16 ^ 0x12 ^ ((2 * (v3 ^ (v0 - 122996637))) ^ 0x8282222C) & (v3 ^ (v0 - 122996637));
  v6 = (4 * v4) & 0x58718190 ^ v4 & 0x3F1DFBEE ^ ((4 * v4) ^ 0xE5E64658) & v5;
  v7 = (4 * v5) & 0x79799194 ^ 0x18199186 ^ ((4 * v5) ^ 0xE5E64658) & v5;
  v8 = (16 * v6) & 0x79799180 ^ v6 ^ ((16 * v6) ^ 0x97991960) & v7;
  v9 = (16 * v7) & 0x79799190 ^ 0x68608096 ^ ((16 * v7) ^ 0x97991960) & v7;
  v10 = v8 ^ (v8 << 8) & 0x79799100 ^ ((v8 << 8) ^ 0x60809600) & v9 ^ 0x71198100;
  v11 = (32
       * ((v10 << 16) & 0x1790000 ^ v10 ^ ((v10 << 16) ^ 0x1960000) & ((v9 << 8) & 0x1790000 ^ 0x680000 ^ ((v9 << 8) ^ 0x1910000) & v9))) ^ (16 * v3);
  v12 = STACK[0x6508];
  LODWORD(STACK[0x8488]) = (((v11 ^ 0x3901DE8A) + 1154250727) ^ ((v11 ^ 0x67EC6C7F) + 438420756) ^ ((v11 ^ 0x4EFEDA75)
                                                                                                  + 859009818))
                         - 1591395681;
  v13 = ((_BYTE)v2 + v1) & 0xF;
  if (v13 == 1)
    v13 = 0;
  LODWORD(STACK[0xADF8]) = v13;
  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                      + 8 * ((int)v12 + 451))
                                                                          - 12))(&STACK[0xFF63], 74186752);
}

uint64_t sub_100A01180()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  *(_BYTE *)(STACK[0xD460] + 29) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v0 - 1079) ^ 0x1E06))
                            - (v0 ^ 0x5BB9)
                            + 19395))();
}

uint64_t sub_100A011F4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] + 15193) ^ (STACK[0x6508] - 1063) ^ 0x55B9 ^ (13993 * (((STACK[0x6508] - 1063) ^ 0x15E3F038) == -2010660303))))
                            - 12))();
}

uint64_t sub_100A01280()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 451))
                            - ((STACK[0x6508] + 15193) ^ 0x4BC3)))();
}

uint64_t sub_100A012F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v0 = *(_QWORD *)STACK[0x4D68];
  v1 = *(_QWORD *)STACK[0x4D60];
  v2 = (v1 ^ v0) & 7;
  v3 = v2 + 1796403171;
  v4 = (v2 + 1796403171) ^ 0x2478B157;
  v5 = (2 * ((12 - (_BYTE)v2) & 0xE)) & (((STACK[0x2CBC] & 0x66261F77) + 104) ^ (STACK[0x6508] + 1356)) ^ (12 - (_BYTE)v2) & 0xE ^ ((2 * ((12 - (_BYTE)v2) & 0xE)) ^ 0x1C) & v4;
  v6 = (2 * v4) & 8 ^ 9 ^ ((2 * v4) ^ 0x412A4292) & v4;
  v7 = (4 * v5) & 0x3095A148 ^ v5 ^ ((4 * v5) ^ 0x18) & v6;
  v8 = (4 * v6) & 0xB095A148 ^ 0x30812049 ^ ((4 * v6) ^ 0xC2568524) & v6;
  v9 = (16 * v7) & 0x3095A140 ^ v7 ^ ((16 * v7) ^ 0xE0) & v8;
  v10 = (16 * v8) & 0xB095A140 ^ 0xB085A149 ^ ((16 * v8) ^ 0x95A1490) & v8;
  v11 = v9 ^ 0xB095A107 ^ (v9 << 8) & 0x3095A100 ^ ((v9 << 8) ^ 0x4E00) & v10;
  v12 = (32
       * ((v11 << 16) & 0x950000 ^ v11 ^ ((v11 << 16) ^ 0x1490000) & ((v10 << 8) & 0xB0950000 ^ 0x140000 ^ ((v10 << 8) ^ 0x5A10000) & v10))) ^ (16 * v3);
  LODWORD(STACK[0xAFEC]) = (((v12 ^ 0x2C454C0F) - 1947450369) ^ ((v12 ^ 0xEEBF17F6) + 1226184712) ^ ((v12 ^ 0x9EBF7339) + 957775049))
                         + 320329050;
  v13 = (v1 ^ v0) & 0xF;
  if (v13 == 1)
    v13 = 0;
  LODWORD(STACK[0xCCA4]) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (LODWORD(STACK[0x2CB8]) ^ (4 * (LODWORD(STACK[0xD12C]) != -1926392729))))
                            - 12))();
}

uint64_t sub_100A0156C@<X0>(char a1@<W8>)
{
  char v1;
  unint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  _BOOL4 v21;

  STACK[0xA920] = v2;
  LODWORD(STACK[0xA8B4]) = v3;
  v7 = a1 + v1;
  v8 = ((((v5 - 2933) ^ 0x8D742188 ^ (v3 >> ((v5 + 20) ^ 0x72))) - 92604823) ^ (((v3 >> ((v5 + 20) ^ 0x72)) ^ 0x496031FC)
                                                                              + 1047457778) ^ (((v3 >> ((v5 + 20) ^ 0x72)) ^ 0xCCC6C0DF)
                                                                                             - 1144512813))
     + (v7 & 0xB)
     - 758093253;
  v9 = (v8 ^ 0x890B6E71) & (2 * (v8 & 0xAD538E7A)) ^ v8 & 0xAD538E7A;
  v10 = ((2 * (v8 ^ 0xD1A876A1)) ^ 0xF9F7F1B6) & (v8 ^ 0xD1A876A1) ^ (2 * (v8 ^ 0xD1A876A1)) & 0x7CFBF8DA;
  v11 = v10 ^ (v4 + 1957);
  v12 = (v10 ^ 0x78D27090) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xF3EFE36C) & v11 ^ (4 * v11) & 0x7CFBF8D8;
  v14 = (v13 ^ 0x70EBE040) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0xC101893)) ^ 0xCFBF8DB0) & (v13 ^ 0xC101893) ^ (16 * (v13 ^ 0xC101893)) & 0x7CFBF8D0;
  v16 = v14 ^ 0x7CFBF8DB ^ (v15 ^ 0x4CBB884B) & (v14 << 8);
  v17 = (32
       * ((v16 << 16) & 0x4FB0000 ^ v16 ^ ((v16 << 16) ^ 0xDB0000) & (((v15 ^ 0x3040704B) << 8) & 0x4FB0000 ^ 0x4030000 ^ (((v15 ^ 0x3040704B) << 8) ^ 0xFBF80000) & (v15 ^ 0x3040704B)))) ^ (16 * v8);
  LODWORD(STACK[0xC878]) = (((v17 ^ 0xB1FDCCC0) - 727543277) ^ ((v17 ^ 0xDFBA2838) - 1159366933) ^ ((v17 ^ 0x3F601838)
                                                                                                  + 1514096363))
                         - 628401543;
  v18 = v7 & 0xF;
  if (v18 == 1)
    v18 = 0;
  LODWORD(STACK[0xB61C]) = v18;
  LODWORD(STACK[0x1D350]) = (v5 + 12179) ^ (509340803 * ((v6 - 240) ^ 0xCC773886));
  LOWORD(STACK[0x1D354]) = (-4989 * ((v6 - 240) ^ 0x3886)) ^ 0x724E;
  STACK[0x1D360] = STACK[0xBB18];
  ((void (*)(uint64_t))STACK[0x4808])(v6 - 240);
  v19 = LOBYTE(STACK[0x6BBF]);
  LODWORD(STACK[0x9FD4]) = v19;
  v21 = v19 != 1 || STACK[0xBCE8] == 0x603CE14A0A8FADE1;
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8] + 8 * (v5 | (16 * v21))))(STACK[0x60B8]);
}

uint64_t sub_100A018A4()
{
  unsigned int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 ^ 0x1841)) - (v0 ^ 0x9E5)))(5121);
}

uint64_t sub_100A01924()
{
  unsigned int v0;
  BOOL v1;
  int v3;

  v0 = STACK[0xBBB4];
  if (STACK[0x9060])
    v1 = v0 == ((212 * (STACK[0x6508] ^ 0x107A)) ^ 0x9F0);
  else
    v1 = 1;
  v3 = !v1 && v0 < 0x35;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((30 * v3) ^ LODWORD(STACK[0x2CC0]))))();
}

uint64_t sub_100A01994@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0xD410] = (v1 ^ 0x7FFF7D9D15FF7C77) - 0x730790C01441400 + ((2 * (_DWORD)v1) & 0x2BFEF8EE);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x1BB4)) - 8))(5121);
}

uint64_t sub_100A01A7C(int a1)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v1 = STACK[0x6508];
  v2 = STACK[0xDF08];
  STACK[0x84B8] = STACK[0xDF08];
  STACK[0xA210] = v2;
  v3 = *(_DWORD *)STACK[0x4D60] - *(_DWORD *)STACK[0x4D68];
  LODWORD(v2) = (v3 & 7) + 73256997;
  v4 = ((v2 & 0xE) << ((v1 + 89) & 0x7E ^ 0x4F)) & (v2 ^ 0xC3B3ABBE) ^ v2 & 0xE;
  v5 = ((2 * (v2 ^ 0xC3B3ABB2)) ^ 0x40220898) & (v2 ^ 0xC3B3ABB2) ^ (2 * (v2 ^ 0xC3B3ABB2)) & 0xC;
  v6 = v5 ^ 4;
  v7 = (v5 ^ 0x6C) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xE04611B0) & v6 ^ (4 * v6) & 0x3811846C;
  v9 = (v8 ^ 0x2000002C) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x1811844C)) ^ 0x811846C0) & (v8 ^ 0x1811844C) ^ (16 * (v8 ^ 0x1811844C)) & 0x38118460;
  v11 = v9 ^ 0x3811846C ^ (v10 ^ 0x10042C) & (v9 << 8);
  LODWORD(v2) = (32
               * ((v11 << 16) & 0x110000 ^ v11 ^ ((v11 << 16) ^ a1) & (((v10 ^ 0x3801802C) << 8) & 0x110000 ^ 0x110000 ^ (((v10 ^ 0x3801802C) << 8) ^ 0x1840000) & (v10 ^ 0x3801802C)))) ^ (16 * v2);
  v12 = ((v2 ^ 0x5E379EFE) - 1644266046) ^ ((v2 ^ 0x53B6A825) - 1870705893) ^ ((v2 ^ 0xB59346BB) + 1985652101);
  v13 = v3 & 0x17;
  if (v13 == 1)
    v13 = 0;
  LODWORD(STACK[0x7560]) = v13;
  v14 = LODWORD(STACK[0x9734])
      + LODWORD(STACK[0xBC98])
      + 16
      * (LODWORD(STACK[0xB394])
       + LODWORD(STACK[0x9F74])
       + LODWORD(STACK[0xCEB4])
       + LODWORD(STACK[0x863C])
       + LODWORD(STACK[0xA934])
       + v13
       + LODWORD(STACK[0x9B64])
       + LODWORD(STACK[0xC46C])
       + LODWORD(STACK[0x8ECC])
       + LODWORD(STACK[0xA744])
       + LODWORD(STACK[0xD0C0])
       + LODWORD(STACK[0xBFB4])
       + LODWORD(STACK[0xBA18])
       + LODWORD(STACK[0xADF8])
       + LODWORD(STACK[0xCCA4])
       + LODWORD(STACK[0xB61C])
       + LODWORD(STACK[0x9674])
       + LODWORD(STACK[0x885C])
       + LODWORD(STACK[0xCCB0])
       + LODWORD(STACK[0xC994]));
  v15 = LODWORD(STACK[0x6B60])
      + LODWORD(STACK[0x6C14])
      + LODWORD(STACK[0x9730])
      + LODWORD(STACK[0x763C])
      + LODWORD(STACK[0xC47C])
      + LODWORD(STACK[0xAC74])
      + LODWORD(STACK[0x6B2C])
      + LODWORD(STACK[0xBB10])
      + LODWORD(STACK[0x8F74])
      + LODWORD(STACK[0xAF70])
      + LODWORD(STACK[0x8488]);
  v16 = v12 - 1826068180;
  LODWORD(STACK[0x9DEC]) = v16;
  v17 = v14
      + v15
      + LODWORD(STACK[0xAFEC])
      + LODWORD(STACK[0xC878])
      + LODWORD(STACK[0xB4EC])
      + LODWORD(STACK[0x72B0])
      + LODWORD(STACK[0x7964])
      + LODWORD(STACK[0x8E04])
      - 743422384
      + v16;
  LODWORD(STACK[0xA7DC]) = v17;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((31269 * (v17 > 0)) ^ ((int)v1 + 5112))))();
}

uint64_t sub_100A01EDC(unint64_t a1)
{
  int v1;
  uint64_t v2;

  STACK[0x7AF8] = a1;
  v2 = ((uint64_t (*)(void))STACK[0x5510])();
  STACK[0xB258] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((44 * (((v2 == 0) ^ (v1 + 115)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100A01F28()
{
  int v0;
  BOOL v1;

  v1 = *(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340CDELL) == (((v0 | 0x3218) - 12693) | 0x200) - 1926393569;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v1 ^ ((v0 | 0x18) + 42)) & 1 | (32
                                                                                            * ((v1 ^ ((v0 | 0x18) + 42)) & 1))) ^ (v0 | 0x3218)))
                            - 8))();
}

uint64_t sub_100A01F94@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  unint64_t v2;

  STACK[0x87F0] = STACK[0xBC80];
  v1 = STACK[0xC768];
  STACK[0xBB38] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v1 + (a1 ^ 0x2A4);
  v2 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((12572 * ((a1 ^ 0xE187353D) < 0xA51AF133)) ^ ((int)a1 + 3479)))
                            - 8))();
}

uint64_t sub_100A02034()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 310)) - 8))(5121);
}

uint64_t sub_100A020CC()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(40);
  STACK[0x6C40] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((13979 * (((v1 == 0) ^ (v0 + 45)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100A0212C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 & 0x7A610F7D)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v0 & 0x7A610F7D) - 35997040) & 0x2257BBE) - 9734) ^ v0 & 0x7A610F7D))
                            - 8))();
}

uint64_t sub_100A02184()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1980)) - 8))(5121);
}

uint64_t sub_100A02208()
{
  int v0;

  LODWORD(STACK[0xDF18]) = 1926417667;
  LODWORD(STACK[0xDF1C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 11076)) - 12))();
}

uint64_t sub_100A02240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((STACK[0xBC80] < (unint64_t)*(&off_1015B46D0 + ((v5 - 2775) | 0x14B0) - 15007)) * (((v5 - 2775) | 0x14B0) ^ 0x3CD7)) ^ ((v5 - 2775) | 0x14B0))) - 4))(a1, a2, a3, a4, a5, 1727129952, 1772489163, STACK[0x60C0]);
}

uint64_t sub_100A022E8@<X0>(unsigned int a1@<W5>, int a2@<W6>, _QWORD *a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _DWORD *v10;
  unsigned int v11;
  unint64_t v12;

  v11 = ((*(_DWORD *)(*a3 + (*v10 & a1)) ^ (a4 + v8)) & 0x7FFFFFFF) * a2;
  v12 = ((v11 >> (((v9 - 6) & 0xEF) + 79)) ^ v11) * a2;
  *(_BYTE *)(a4 + v8) = *(_BYTE *)(v6 + (v12 >> 24)) ^ *(_BYTE *)(v4 + v8) ^ *(_BYTE *)((v12 >> 24) + v5 + 3) ^ *(_BYTE *)(v7 + (v12 >> 24)) ^ v12 ^ (-15 * BYTE3(v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25385 * (v8 == 18)) ^ v9)) - 4))();
}

uint64_t sub_100A0238C@<X0>(unsigned int a1@<W5>, int a2@<W6>, _QWORD *a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;

  v11 = v9 - 1;
  v12 = ((*(_DWORD *)(*a3 + (*v10 & a1)) ^ (a4 + v11)) & 0x7FFFFFFF) * a2;
  v13 = (v12 ^ HIWORD(v12)) * a2;
  v14 = v13 >> ((9 * (v8 ^ 0x4B)) ^ 0xD9u);
  *(_BYTE *)(a4 + v11) = *(_BYTE *)(v6 + v14) ^ *(_BYTE *)(v4 + v11) ^ *(_BYTE *)(v14 + v5 + 3) ^ *(_BYTE *)(v7 + v14) ^ v13 ^ (-15 * v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25420 * (v11 == 0)) ^ v8)) - 4))();
}

uint64_t sub_100A02420()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x197F)) - ((v0 + 11409) ^ 0x355ELL)))();
}

uint64_t sub_100A02474()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1670)) - 4))();
}

uint64_t sub_100A025E8()
{
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1276)))(STACK[0x60B8]);
}

uint64_t sub_100A02614(_DWORD *a1)
{
  unsigned int v1;
  _QWORD *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  LODWORD(STACK[0x791C]) = v1;
  STACK[0xB308] = v4;
  v6 = *(_DWORD *)STACK[0x4D68];
  v7 = *(_DWORD *)STACK[0x4D60];
  v8 = ((((v1 >> 4) ^ 0x4BEA6E23) - 196701577) ^ (((v1 >> 4) ^ 0x8976166E) + 920316476) ^ (((v1 >> 4) ^ 0xCA4EA10B)
                                                                                         + 1977769311))
     + ((v7 ^ v6) & 7)
     + 1368128035;
  v9 = (v8 ^ 0xE6E1F4C1) & (2 * (v8 & 0xF6F5E0CA)) ^ v8 & 0xF6F5E0CA;
  v10 = ((2 * (v8 ^ 0xB4234C5)) ^ 0xFB6FA81E) & (v8 ^ 0xB4234C5) ^ (2 * (v8 ^ 0xB4234C5)) & 0xFDB7D40E;
  v11 = v10 ^ 0x4905401;
  v12 = (v10 ^ 0xF9278008) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xF6DF503C) & v11 ^ (4 * v11) & 0xFDB7D40C;
  v14 = (v13 ^ 0xF4975000) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x9208403)) ^ 0xDB7D40F0) & (v13 ^ 0x9208403) ^ (16 * (v13 ^ 0x9208403)) & 0xFDB7D400;
  v16 = v15 ^ 0x2482940F;
  v17 = v14 ^ 0xFDB7D40F ^ (v15 ^ 0xD9354000) & (v14 << 8);
  v18 = v3 - 1374884431;
  v19 = (32
       * ((v17 << 16) & 0x5B70000 ^ v17 ^ ((v17 << 16) ^ 0x40F0000) & ((v16 << 8) & 0xFDB70000 ^ 0x230000 ^ ((v16 << 8) ^ 0x7D40000) & v16))) ^ (16 * v8);
  LODWORD(STACK[0xB4EC]) = (((v19 ^ 0xC127A706) + 1551530695) ^ ((v19 ^ 0xAF465586) + 840665159) ^ ((v19 ^ 0x37257FC0)
                                                                                                  - 1434934783))
                         + 1256893451;
  v20 = ((_BYTE)v7 + (_BYTE)v6) & 0x17;
  if (v20 == 1)
    v20 = 0;
  LODWORD(STACK[0x9674]) = v20;
  v21 = *(_QWORD *)(*v2 + (int)(*a1 & 0xCF1C8D50));
  v22 = *(_QWORD *)(*v2 + (*a1 & 0x2291DBA8)) & 0x7FFFFFFFFFFFFFFFLL;
  v23 = v22 ^ 0x4042EA4EC4420181;
  v22 ^= 0xBFBD15B13BBDFE7ELL;
  v24 = 0x40939F4A0AC2DC47 * (v22 + v23) - 0x70EC879192A01306;
  LODWORD(v22) = (unint64_t)(0x40939F4A0AC2DC47
                                  * (*(_QWORD *)(STACK[0x7FB0] - 0x28623712C9340CB6) - 0x1BFCD0A48E2F22DLL + v22)
                                  - 0x50869EC52D4BC53ELL) < 0x40C78800;
  v25 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v18 ^ 0xAE0CEE5B)) - 4;
  LODWORD(STACK[0xEE20]) = v3 - 1374884353;
  LODWORD(STACK[0xEE50]) = v18 ^ 0xF11;
  LODWORD(STACK[0xEE64]) = v18;
  STACK[0xEE30] = v22 ^ (v24 < 0x40C78800);
  STACK[0xCB28] = v21 & 0x7FFFFFFFFFFFFFFFLL ^ 0x4A17B4E6D72E1CC7;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v5 - 240) & 0xFFA0C90) - (v5 - 240) + 1879438191) ^ 0x4D972C36)
                          + v3;
  STACK[0xEE58] = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v26 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v5 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v26);
}

uint64_t sub_100A02A8C()
{
  unint64_t v0;
  unint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((361 * (STACK[0x6508] ^ 0x107B) - 2884) ^ ((STACK[0x6508] - 2093) | 0x394))
                                     * (v0 < v1)) ^ (STACK[0x6508] + 479))))();
}

uint64_t sub_100A02B40()
{
  unint64_t v0;
  unint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((STACK[0x6508] - 114) | 0x251)
                                      - 4454
                                      + ((STACK[0x6508] + 26054535) & 0xFE726BDF))
                                     * (v0 > v1)) ^ (STACK[0x6508] + 479))))();
}

uint64_t sub_100A02C04@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100A031BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  STACK[0xD418] = STACK[0x9810] + 127;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))(STACK[0x6AD8] + 8 * (v3 + 6697)))(a1, a2, a3, &off_1015B46D0);
}

uint64_t sub_100A034C0@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X4>, _DWORD *a3@<X5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;

  v12 = *(_DWORD *)(v8 + (v4 & v10));
  v13 = a4 + v9 + v11;
  v14 = 1772489163
      * ((1772489163 * ((v13 ^ v12) & 0x7FFFFFFF)) ^ ((1772489163
                                                                   * ((v13 ^ v12) & 0x7FFFFFFF)) >> 16));
  v15 = STACK[0x5770];
  v16 = STACK[0x5768];
  v17 = STACK[0x58B0];
  *(_BYTE *)(v13 - 0x34E7D12451F1E1EDLL) = HIBYTE(v7) ^ *(_BYTE *)(STACK[0x5770] + (v14 >> 24)) ^ *(_BYTE *)(STACK[0x5768] + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + STACK[0x58B0] + 4) ^ v14 ^ (13 * BYTE3(v14)) ^ 0x17;
  LODWORD(v14) = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 1)) & 0x7FFFFFFF);
  v18 = 1772489163 * (v14 ^ WORD1(v14));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1ECLL) = BYTE6(v7) ^ *(_BYTE *)(v15 + (v18 >> 24)) ^ *(_BYTE *)(v16 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v17 + 4) ^ v18 ^ (13 * BYTE3(v18)) ^ 0x6A;
  LODWORD(v18) = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 2)) & 0x7FFFFFFF);
  v19 = 1772489163 * (v18 ^ WORD1(v18));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1EBLL) = BYTE5(v7) ^ *(_BYTE *)(v15 + (v19 >> 24)) ^ *(_BYTE *)(v16 + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + v17 + 4) ^ v19 ^ (13 * BYTE3(v19)) ^ 0xBD;
  v20 = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 3)) & 0x7FFFFFFF);
  v21 = 1772489163 * (v20 ^ HIWORD(v20));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1EALL) = BYTE4(v7) ^ *(_BYTE *)(v15 + (v21 >> 24)) ^ *(_BYTE *)(v16 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v17 + 4) ^ v21 ^ (13 * BYTE3(v21)) ^ 0xDC;
  LODWORD(v19) = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 4)) & 0x7FFFFFFF);
  v22 = 1772489163 * (v19 ^ WORD1(v19));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1E9) = BYTE3(v7) ^ *(_BYTE *)(v15 + (v22 >> 24)) ^ *(_BYTE *)(v16 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v17 + 4) ^ v22 ^ (13 * BYTE3(v22)) ^ 0x6C;
  LODWORD(v22) = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 5)) & 0x7FFFFFFF);
  v23 = 1772489163 * (v22 ^ WORD1(v22));
  v24 = *(_QWORD *)(a1 + 8 * (v5 - 2916)) - 12;
  v25 = *(_QWORD *)(a1 + 8 * (v5 - 3971)) - 4;
  v26 = *(_QWORD *)(a1 + 8 * (v5 - 4077)) - 4;
  *(_BYTE *)(v13 - 0x34E7D12451F1E1E8) = BYTE2(v7) ^ *(_BYTE *)(v24 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v25 + 5) ^ *(_BYTE *)(v26 + (v23 >> 24)) ^ v23 ^ (73 * BYTE3(v23)) ^ 0x7D;
  LODWORD(v23) = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 6)) & 0x7FFFFFFF);
  v27 = 1772489163 * (v23 ^ WORD1(v23));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1E7) = ((BYTE1(v7) ^ 0x52) - ((2 * BYTE1(v7)) & 0x1A) - 115) ^ *(_BYTE *)(v24 + (v27 >> 24)) ^ *(_BYTE *)((v27 >> 24) + v25 + 5) ^ *(_BYTE *)(v26 + (v27 >> 24)) ^ v27 ^ (73 * BYTE3(v27)) ^ 0x8D;
  v28 = 1772489163 * ((*(_DWORD *)(*a2 + (*a3 & v10)) ^ (v13 + 7)) & 0x7FFFFFFF);
  v29 = 1772489163 * (v28 ^ HIWORD(v28));
  *(_BYTE *)(v13 - 0x34E7D12451F1E1E6) = v7 ^ *(_BYTE *)(v24 + (v29 >> 24)) ^ *(_BYTE *)((v29 >> 24) + v25 + 5) ^ *(_BYTE *)(v26 + (v29 >> 24)) ^ v29 ^ (73 * BYTE3(v29)) ^ 0xBB;
  return v6();
}

uint64_t sub_100A038B0()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 5520)))();
}

uint64_t sub_100A03ADC()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;

  v1 = STACK[0x6508];
  STACK[0x8DD8] = STACK[0x9188];
  v2 = *(_DWORD *)STACK[0x4D68];
  v3 = *(_DWORD *)STACK[0x4D60];
  v4 = ((v1 + 12823) | 0x942) + 1924884907 + ((v3 ^ v2) & 0xB);
  v5 = ((2 * (v4 & 0x88 ^ 0x695F9ECD)) ^ 0x12A0219A) & v4 | v4 & 0x88 ^ 0x695F9ECD;
  v6 = (2 * (v4 ^ 0xE41BD445)) & 0xCC ^ 0x45 ^ ((2 * (v4 ^ 0xE41BD445)) ^ 0x92A0219A) & (v4 ^ 0xE41BD445);
  v7 = (4 * v5) & 0x685C86CC ^ v5 & 0x5BA3BDFB ^ ((4 * v5) ^ 0xA57E7B34) & v6;
  v8 = (4 * v6) & 0x695F9ECC ^ 0x480184C9 ^ ((4 * v6) ^ 0xA57E7B34) & v6;
  v9 = (16 * v7) & 0x695F9EC0 ^ v7 ^ ((16 * v7) ^ 0x95F9ECD0) & v8;
  v10 = (16 * v8) & 0x695F9EC0 ^ 0x6806120D ^ ((16 * v8) ^ 0x95F9ECD0) & v8;
  v11 = v9 ^ (v9 << 8) & 0x695F9E00 ^ ((v9 << 8) ^ 0x6120D00) & v10 ^ 0x14B80C0;
  v12 = (32
       * ((v11 << 16) & 0x15F0000 ^ v11 ^ ((v11 << 16) ^ 0x6CD0000) & ((v10 << 8) & 0x15F0000 ^ 0x410000 ^ ((v10 << 8) ^ 0x79E0000) & v10))) ^ (16 * v4);
  LODWORD(STACK[0x72B0]) = (((v12 ^ 0x8DB21EBB) - 2115437972) ^ ((v12 ^ 0x339D70F5) + 1070044198) ^ ((v12 ^ 0x48381F6E) + 1147337663))
                         + 347498139;
  v13 = v1 - 1082;
  v14 = ((_BYTE)v3 - (_BYTE)v2) & 0xF;
  if (v14 == 1)
    v14 = 0;
  v15 = STACK[0x6AD8];
  v16 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v13 ^ 0x1CADLL));
  LODWORD(STACK[0x885C]) = v14;
  STACK[0xEE18] = v16 - 4;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v0 - 240) | 0x962CA32C) - (v0 - 240) + ((v0 - 240) & 0x69D35CD0)) ^ 0xABBE7C75)
                          + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  ((void (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  LODWORD(STACK[0xD424]) = STACK[0x1D354];
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 ^ 0x1654)))(74186752);
}

uint64_t sub_100A03E28()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 1096013400) & 0x41539AFE ^ 0x1072)))();
}

uint64_t sub_100A03E68@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(a1 ^ 0xB60E49E1 ^ (25824 * (a1 != -2061540426))))
                            - 8))();
}

uint64_t sub_100A03EA0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x2954] & 0x5EC2FEBF ^ 0x3949) * (v0 == -731380499)) ^ (STACK[0x6508] + 5834)))
                            - ((STACK[0x6508] + 5834) ^ 0x2748)))();
}

uint64_t sub_100A03F10()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (((v0 - 304) | 0x1000u) ^ 0x3618)))();
}

uint64_t sub_100A03F4C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = (((v1 ^ 0x4A248054) - 1243906132) ^ ((v1 ^ 0xCC8CF9D0) + 863176240) ^ (v3
                                                                            + ((((a1 - 819984977) & (v2 + 1742))
                                                                              + 1583740694) ^ v1)
                                                                            + 2632))
     - 657555921 < 0x6E2CB10D
    || LODWORD(STACK[0x9FD4]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((50 * v5) ^ a1)) - 8))();
}

uint64_t sub_100A03FFC()
{
  unsigned int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = 1199091809 * ((((v2 - 240) | 0xC715B616CE6D11A9) - ((v2 - 240) & 0xC715B616CE6D11A9)) ^ 0x3E9A5153611ABF19);
  STACK[0x1D358] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - v4 + v0 + 16873 - 21130;
  LODWORD(STACK[0x1D350]) = -1161873958 - v4 + v0;
  v5 = v1(v2 - 240);
  LODWORD(STACK[0x6AB0]) = 0;
  STACK[0x6AC0] = STACK[0x1D360];
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v0 + 4135)))(v5);
}

uint64_t sub_100A040AC@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v3 = a1 - 9612;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 - 9667));
  v6 = STACK[0x2128];
  LODWORD(STACK[0x1D350]) = -1161873958 - STACK[0x2128] + v3 + 17;
  STACK[0x1D358] = v5 - v6 - 12;
  v7 = v1(v2 - 240);
  STACK[0x6AC0] = STACK[0x1D360];
  v8 = *(uint64_t (**)(uint64_t))(v4 + 8 * ((v3 + 8116) ^ v3));
  LODWORD(STACK[0x6AB0]) = 3;
  return v8(v7);
}

uint64_t sub_100A0413C()
{
  int v0;
  int v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;

  LODWORD(STACK[0x6AA0]) = v0 - 18515;
  v8 = STACK[0x6AD8];
  v9 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  *(_DWORD *)(v6 + 784) = v0 - 1161890831 - ((((2 * v4) | 0x8518D192) - v4 - 1116498121) ^ 0xEDFBC679) * v3;
  *(_QWORD *)(v6 + 792) = v9
                        - ((((2 * v4) | 0x9C0992988518D192) - v4 + 0x31FB36B3BD739737) ^ 0x378B2E09EDFBC679) * v3
                        - 12;
  v2(v7 - 240);
  v10 = *(_QWORD *)(v8 + 8 * v5);
  v11 = *(_QWORD *)(v6 + 800);
  *(_QWORD *)(v6 + 792) = v10
                        - ((((2 * v4) | 0x66A3C721E7177AFALL) - v4 - 0x3351E390F38BBD7DLL) ^ 0xCADE04D55CFC13CDLL) * v3
                        + (v0 - 16904)
                        - 4226;
  *(_DWORD *)(v6 + 784) = v0 - 1161890831 - ((((2 * v4) | 0xE7177AFA) - v4 + 208945795) ^ 0x5CFC13CD) * v3;
  v2(v7 - 240);
  v12 = *(_QWORD *)(v6 + 800);
  LOBYTE(STACK[0xDF07]) = STACK[0x6AB0];
  STACK[0xDEF8] = STACK[0x6AC0];
  STACK[0xDEF0] = v11;
  STACK[0xDEE8] = v12;
  v13 = ((uint64_t (*)(uint64_t))STACK[0x5510])(46);
  v14 = STACK[0x6AA0];
  STACK[0xDF08] = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((13990 * ((v14 ^ (v13 == 0)) & 1)) ^ v0)) - 8))();
}

uint64_t sub_100A042E0()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1240574921 + v0 - 1240573310 - 2293))
                                          - 8))(5121);
}

uint64_t sub_100A04368()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                       + 8
                                                                                       * (int)((872
                                                                                              * (((((STACK[0x6508] ^ 0x115)
                                                                                                  - 1595) ^ (((LODWORD(STACK[0xA7DC]) - (STACK[0x6508] - 4214)) | (STACK[0x6508] - 4214 - LODWORD(STACK[0xA7DC]))) >> 31)) & 1) == 0)) ^ (STACK[0x6508] + 237)))
                                                                           - 8);
  STACK[0x6070] = STACK[0xB258];
  return v0(776, 4589, 4520, -1788471852, 5325);
}

uint64_t sub_100A0441C(int a1, int a2, int a3, unint64_t a4, int a5, int a6, char a7, _QWORD *a8)
{
  int v8;
  int v9;
  _BYTE *v10;
  int v11;
  int *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;

  v14 = ((*(_DWORD *)(*a8 + (*v12 & a4)) ^ v10) & 0x7FFFFFFF) * v11;
  v15 = (v14 ^ HIWORD(v14)) * v11;
  *v10 = *(_BYTE *)(*(_QWORD *)(v13 + 8 * (v8 ^ a2)) + (v15 >> 24) - 10) ^ *(_BYTE *)(*(_QWORD *)(v13 + 8 * (v8 ^ a5))
                                                                                      + (v15 >> 24)
                                                                                      - 4) ^ *(_BYTE *)(*(_QWORD *)(v13 + 8 * (v8 ^ a3)) + (v15 >> 24) - 12) ^ v15 ^ (BYTE3(v15) * a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v8 - 2371) | a1) + v9 == 2857) * a6) ^ v8)) - 8))();
}

uint64_t sub_100A044B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = STACK[0x6AD8];
  STACK[0xB630] = (a5 + 5086) - 7950 + *(_QWORD *)(STACK[0x6AD8] + 8 * a5);
  v8 = STACK[0x6070];
  STACK[0x6078] = STACK[0x6070] + 16;
  STACK[0x6068] = v8 + 0x68D65B6A818CDEA9;
  STACK[0x6060] = v8 + 0x5E39224396782A6FLL;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (a5 ^ 0x38EE)) - 12);
  STACK[0x60B0] = v6;
  STACK[0x6080] = v5;
  STACK[0x6088] = (v8 - 2121474391);
  return v9(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A045BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0xA098] = STACK[0x91F0] + SLODWORD(STACK[0xA15C]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1339)) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v4 + 2847) ^ (v4 - 1339))) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A04674()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 5312) + 7930))();
}

uint64_t sub_100A04698@<X0>(__int16 a1@<W4>, __int16 a2@<W5>, int a3@<W7>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __int16 v24;
  __int16 v25;

  *a4 = HIBYTE(v7);
  a4[1] = BYTE6(v7);
  a4[2] = BYTE5(v7);
  a4[3] = BYTE4(v7);
  v9 = 2 * (v5 & 0xF0FC0374);
  a4[4] = BYTE3(v7);
  a4[5] = BYTE2(v7);
  a4[6] = BYTE1(v7);
  a4[7] = v7;
  v10 = (2 * (v5 ^ ((v6 ^ 0xF70) - 512401216))) & 0x11897242 ^ 0x10891242 ^ ((2 * (v5 ^ ((v6 ^ 0xF70) - 512401216))) ^ 0x2312E484) & (v5 ^ ((v6 ^ 0xF70) - 512401216));
  v11 = (4 * (v9 & (v5 ^ 0xE0FD7376) ^ v5 & 0xF0FC0374)) & v10 ^ v9 & (v5 ^ 0xE0FD7376) ^ v5 & 0xF0FC0374 ^ ((4 * (v9 & (v5 ^ 0xE0FD7376) ^ v5 & 0xF0FC0374)) & 0x1801240 | 0x14000);
  v12 = (4 * v10) & 0x11897240 ^ 0x11883242 ^ ((4 * v10) ^ 0x4625C908) & v10;
  v13 = v11 ^ 0x11883242 ^ (16 * v11) & 0x11897240 ^ ((16 * v11) ^ 0x140000) & v12;
  v14 = (16 * v12) & 0x11897240 ^ 0x1085242 ^ ((16 * v12) ^ a3) & v12;
  v15 = ((v13 << 8) ^ 0x89724200) & v14 ^ v13 ^ ((v13 << 8) & 0x11897200 | 0x42);
  v16 = ((v14 << 8) ^ 0x89724200) & v14 ^ ((v14 << 8) & 0x11897200 | 0x42);
  a4[8] = ((v5 ^ (2
                * (v15 ^ v16 & 0x63524E42 ^ ((v15 << 16) ^ 0x53524EEE) & (v16 ^ 0x10890000) ^ ((v15 << 16) ^ 0x53524EEE) & 0x11800000))) >> 24) ^ 0xD3;
  v17 = ((2 * (v5 ^ 0xF1967E44)) ^ 0x2D4FA60) & (v5 ^ 0xF1967E44) ^ (2 * (v5 ^ 0xF1967E44)) & 0x16A7D30;
  v18 = v17 ^ 0x12A0510;
  v19 = (v17 ^ 0x4A1820) & (4 * (v9 & (v5 ^ 0xF0FE7A64) ^ v5 & 0xF0FC0374)) ^ v9 & (v5 ^ 0xF0FE7A64) ^ v5 & 0xF0FC0374;
  v20 = ((4 * v18) ^ 0x5A9F4C0) & v18 ^ (4 * v18) & 0x16A7D30;
  v21 = (v20 ^ 0x1287410) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x420930)) ^ 0x16A7D300) & (v20 ^ 0x420930) ^ (16 * (v20 ^ 0x420930)) & 0x16A7D30;
  v23 = v21 ^ 0x16A7D30 ^ (v22 ^ 0x225130) & (v21 << 8);
  a4[9] = ((v5 ^ (2
                * ((v23 << 16) & 0x16A0000 ^ v23 ^ ((v23 << 16) ^ 0x7D300000) & (((v22 ^ 0x1482C30) << 8) & 0x16A0000 ^ 0x1020000 ^ (((v22 ^ 0x1482C30) << 8) ^ 0x6A7D0000) & (v22 ^ 0x1482C30u))))) >> 16) ^ 0x68;
  LOWORD(v23) = ((2 * (v5 ^ 0xAD97)) ^ 0x5DC6) & (v5 ^ 0xAD97) ^ (2 * (v5 ^ 0xAD97)) & 0xAEE2;
  v24 = (v23 ^ a2) & (4 * (v9 & (v5 ^ 0xAB77) ^ v5 & 0x374)) ^ v9 & (v5 ^ 0xAB77) ^ v5 & 0x374;
  LOWORD(v23) = ((4 * (v23 ^ 0xA221)) ^ (v8 + 2049)) & (v23 ^ 0xA221) ^ (4 * (v23 ^ 0xA221)) & 0xAEE0;
  v25 = (v23 ^ (a1 + 2658)) & (16 * v24) ^ v24;
  a4[10] = ((unsigned __int16)(v5 ^ (2
                                   * (((16 * (v23 ^ 0x463)) & 0xAE00 ^ 0xAE80 ^ ((16 * (v23 ^ 0x463)) ^ 0xEE00) & (v23 ^ 0x463)) & (v25 << 8) ^ v25))) >> 8) ^ 3;
  a4[11] = v5 + 116;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14823 * (v4 != 0)) ^ v6)) - 12))();
}

uint64_t sub_100A04ACC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100A04D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, _BYTE *a5@<X8>)
{
  int v5;

  a5[12] = HIBYTE(v5) ^ 0x8D;
  a5[13] = BYTE2(v5) ^ 0x2D;
  a5[14] = BYTE1(v5) ^ 0x94;
  a5[15] = v5 ^ 0x67;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0xB630])(a1, a2, a3, 102236355, 151043000, 172493122, a4, 1334503540);
}

uint64_t sub_100A04D68()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3591)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04D9C()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3556;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1263)) - 12))();
}

uint64_t sub_100A04DD4()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3533;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1258)) - 12))();
}

uint64_t sub_100A04E0C()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3539)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04E44()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3567));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04E78()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3517)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04EB4()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3520;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1247)) - 12))();
}

uint64_t sub_100A04EF4()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3544;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x126F)) - 12))();
}

uint64_t sub_100A04F34()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3538)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04F70()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3574)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A04FA8()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3620;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x12A3)) - 12))();
}

uint64_t sub_100A04FE8()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3536)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A0501C()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3540;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1253)) - 12))();
}

uint64_t sub_100A05058()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3554)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A05094()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3516;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x124B)) - 12))();
}

uint64_t sub_100A050D0()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3573)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A05108()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3499)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 123)) - 12))();
}

uint64_t sub_100A05144()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3514));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 3514) ^ 0x124D)) - 12))();
}

uint64_t sub_100A05178()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3549;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1268)) - 12))();
}

uint64_t sub_100A051B0()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3504;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1237)) - 12))();
}

uint64_t sub_100A051E8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x58BC])))();
}

uint64_t sub_100A05218()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (2 * STACK[0x6508]) ^ 0x528;
  v1 = STACK[0x6508] - 3547;
  STACK[0x70E0] = STACK[0xA098] + 16;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x231D));
  STACK[0xAD00] = v2;
  return ((uint64_t (*)(void))(v3 - (v0 ^ 0x25C8)))();
}

uint64_t sub_100A05298()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100A052BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v7;
  int v8;
  unint64_t v9;
  int v10;

  STACK[0x98C0] = v7;
  STACK[0xB068] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((63 * (v10 != a7)) ^ (v8 + 11860))) - 4))();
}

uint64_t sub_100A05300(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (((69 * (((v2 - 4070) | 0x2805) ^ 0x2802) - 10381)
                                                                 * (v1 == 0)) ^ ((v2 - 4070) | 0x2805)))
                                                   - ((((v2 - 4070) | 0x2805) - 335653078) & 0x77CFEF4D)
                                                   + 1674473221))(a1, 101253120);
}

uint64_t sub_100A05374()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100A055B0()
{
  int v0;
  int v1;
  int v2;
  int v3;

  v3 = (((v0 ^ 0x5819A649) + ((v1 - 1674469015) ^ 0xA7E649C1)) ^ ((v0 ^ 0xCE1F24F1) + 836819727) ^ ((v0 ^ 0x1B2B16DF)
                                                                                                  - 455808735))
     - v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((24870
                                               * ((((v3 - v1) | (v1 - v3)) >> ((-9 * (v1 ^ 0xF)) ^ 0xF1)) & 1)) ^ (v1 - 1674463519)))
                            - 8))();
}

uint64_t sub_100A05698(uint64_t a1, int a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((996
                                          * ((((v2 ^ 0xC446EDE9) + 1001984535) ^ ((v2 ^ 0xB6AA7C0A) + 1230341110) ^ (((v3 - 4155102 + 27 * (v3 ^ 0x2772)) ^ v2) + 4127356))
                                           + 1546239152 != a2)) ^ v3))
                            - 8))();
}

uint64_t sub_100A0574C@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  _BOOL4 v9;

  v9 = a1 < a2;
  *(_BYTE *)(v5 + v7) = *(_BYTE *)(a5 + v7);
  if (v9 == v7 + 1 > a4)
    v9 = ((v6 + a3) ^ (a2 + 4083)) + v7 < a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v9 * v8) ^ v6)) - 4))();
}

uint64_t sub_100A057A8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5496)) - 8))();
}

uint64_t sub_100A057D0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8
                                                                        * ((((v1 - 1445732602) & 0x562C5FFF ^ 0x4F6B)
                                                                          * (v0 == 0)) ^ (v1 + 16117)))
                                                            - ((v1 + 1917246327) & 0x8DB95DD2 ^ 0x49C4)))(18876, 16134, 4222);
}

uint64_t sub_100A05850()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((11647 * ((((v0 - 16134) ^ (*(_BYTE *)(v1 + 1) == 0)) & 1) == 0)) ^ v0))
                            - ((v0 - 1468) ^ 0x49C4)))();
}

uint64_t sub_100A0589C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 16371)) - 4))();
}

uint64_t sub_100A058C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  *(_BYTE *)(v7 + (v4 + v6)) = *(_BYTE *)(v4 + v5 + 2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v4 + 1 < 8 * (unint64_t)*(unsigned __int8 *)(v5 + 1)) * v9) ^ (a4 + a2)))
                            - (a4 ^ a3) * v8
                            + a1))();
}

uint64_t sub_100A05910()
{
  int v0;
  int v1;

  LODWORD(STACK[0x60C8]) = v1;
  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100A05AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  unsigned int v19;

  v19 = (((v17 + v8) ^ *(_DWORD *)(v9 + v10)) & (v12 + ((v7 + v13) | v14) + 928)) * a7;
  *(_BYTE *)(v11 + v8) = *(_BYTE *)(v15 + (v8 | (16 * (((v19 ^ HIWORD(v19)) * a7) >> 24)))) ^ *(_BYTE *)(v17 + v8) ^ ((v19 ^ BYTE2(v19)) * v16);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 != 15) * v18) ^ v7)) - 8))();
}

uint64_t sub_100A05B50()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  STACK[0xD1A8] = v3 + 32;
  STACK[0xDB18] = v0;
  STACK[0xDB30] = v5;
  STACK[0xDB28] = v1;
  STACK[0xDB08] = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v2 ^ (29 * (v4 != v0)))))();
}

uint64_t sub_100A05BD4()
{
  int v0;
  unint64_t v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 1510376724) & 0xA5F96FBE) + 18298);
  STACK[0x6AA0] = v1;
  return v2();
}

uint64_t sub_100A05C20()
{
  uint64_t v0;
  char *v1;
  unsigned int v2;
  char *v3;
  char v4;

  v3 = (char *)&STACK[0x1D0C0] + v0;
  *v3 = *v1;
  v3[1] = v1[1];
  v3[2] = v1[2];
  v3[3] = v1[3];
  v3[4] = v1[4];
  v3[5] = v1[5];
  v3[6] = v1[6];
  v3[7] = v1[7];
  v3[8] = v1[8];
  v3[9] = v1[9];
  v3[10] = v1[10];
  v3[11] = v1[11];
  v3[12] = v1[12];
  v3[13] = v1[13];
  v3[14] = v1[14];
  v4 = v1[15];
  STACK[0x6AA0] = (unint64_t)v3;
  v3[15] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (v2 ^ 0x1535) + 18298))();
}

uint64_t sub_100A05CE4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((7945 * ((((v0 - 2236) ^ (v1 == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_100A05D14@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v4 = a1 ^ v3;
  v5 = 10 * (v1 ^ 0x40A0);
  v7 = (v4 & 5 ^ 0x4BD36671) + (v4 & 0xA) + ((94 * (v5 ^ 0x47D7)) ^ 0x4BD358BC) != -1750676241
    || v4 == ((v5 - 1136069927) & 0x43B6FFFB) + v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((250 * v7) ^ v5)))();
}

uint64_t sub_100A05DAC()
{
  int v0;
  int v1;
  int v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  BOOL v5;
  int v6;

  LODWORD(STACK[0x6AB0]) = v0;
  v2 = (v1 - 14148) | 0x20A2;
  STACK[0xDB20] = 0;
  v3 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  STACK[0xDB20] = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  v4 = v3(1028);
  STACK[0xDB10] = v4;
  if (v4)
    v5 = STACK[0xDB20] == 0;
  else
    v5 = 1;
  v6 = !v5;
  LODWORD(STACK[0x6AC0]) = v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v6 * (v2 ^ 0x2396)) ^ v1)))();
}

uint64_t sub_100A05E48()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char *v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned __int8 *v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  unint64_t v35;
  unsigned int v36;
  int v37;
  unint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  unint64_t v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unint64_t v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  BOOL v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  unint64_t v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  unint64_t v232;
  unsigned __int8 *v233;
  unint64_t v234;
  unsigned __int8 v235;
  unsigned __int8 v236;
  unsigned __int8 v237;
  int v238;
  unint64_t v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unint64_t v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  unint64_t v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  BOOL v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  unint64_t v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unint64_t v283;
  unsigned int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unint64_t v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  int v391;
  int v392;
  unsigned int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  unint64_t v400;
  unint64_t v401;
  int v402;
  unint64_t v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unint64_t v407;
  int v408;
  int v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  unsigned int v420;
  int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;

  v2 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x21EE)) - 8;
  v3 = STACK[0x6AC0];
  v4 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 7375);
  v5 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 6715);
  v6 = (((v0[14] ^ 0x9D) + 11) ^ 0x59 ^ v2[v0[14] ^ 0x3ALL]) << 8;
  v7 = (*(_BYTE *)(v5 + (*v0 ^ 0x20)) - 1);
  v8 = ((*(unsigned __int8 *)(v4 + (v0[2] ^ 0x28)) ^ 0x26) << 8) | (((*(unsigned __int8 *)(v5 + (*v0 ^ 0x20)) - 1) ^ (v7 >> 6) ^ (v7 >> 4) ^ 0xAD) << 24);
  v9 = (*(unsigned __int8 *)(v4 + (v0[4] ^ 0x2DLL)) ^ 0x7A) << 24;
  v10 = *(unsigned __int8 *)(v4 + (v0[12] ^ 0xDCLL));
  v11 = v0[8];
  v12 = v0[13];
  v13 = (v11 ^ 0x6A) + 11;
  LODWORD(v11) = v2[v11 ^ 0xCD];
  v14 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x21AC)) - 8;
  STACK[0x64B8] = (unint64_t)v14;
  v15 = (v11 ^ v13 ^ 0x39) << 24;
  LOBYTE(v11) = v14[v12 ^ 0x84] + (v12 ^ 0xA7);
  LOBYTE(v12) = *(_BYTE *)(v5 + (v0[9] ^ 0x2ELL));
  v16 = v5;
  STACK[0x64C0] = v5;
  v17 = v0[10];
  v18 = *(unsigned __int8 *)(v4 + (v0[1] ^ 0x1ALL)) ^ 0xF3;
  v19 = v0[6];
  v20 = v15 & 0xFF00FFFF | ((((v12 - 1) ^ ((v12 - 1) >> 6) ^ ((v12 - 1) >> 4)) ^ 0xAA) << 16);
  STACK[0x64D0] = (unint64_t)v2;
  v21 = v8 | (v18 << 16);
  v22 = ((v19 ^ 0xD2) + 11);
  LODWORD(v12) = ((v17 ^ 0xA0) + 11) ^ 0xAA ^ v2[v17 ^ 7];
  v23 = v2[v19 ^ 0x75];
  v24 = (unsigned __int8 *)STACK[0xDB30];
  v25 = *(unsigned __int8 *)(STACK[0xDB30] + 7);
  STACK[0x69D0] = v25;
  v26 = v9 | ((v23 ^ v22 ^ 0xFD) << 8);
  v27 = v24[15];
  STACK[0x69F0] = v27;
  LODWORD(v12) = v20 | ((_DWORD)v12 << 8);
  v28 = *(unsigned __int8 *)(v4 + (v25 ^ 0x19)) ^ 0x8D;
  v29 = v24[5];
  STACK[0x69C0] = v29;
  v30 = v28 | v26;
  v31 = *(unsigned __int8 *)(v4 + (v27 ^ 0xEA));
  v32 = v24[3];
  STACK[0x6980] = (unint64_t)v24;
  STACK[0x6A80] = v32;
  LODWORD(v29) = *(unsigned __int8 *)(v4 + (v29 ^ 0x1C));
  STACK[0x64C8] = v4;
  v33 = (v31 ^ 0x90) & 0xFF00FFFF | ((v11 ^ 8) << 16) | v6 | ((v10 ^ 0x38) << 24);
  LODWORD(STACK[0x6A60]) = v33;
  v34 = v30 | ((v29 ^ 0xD1) << 16);
  LODWORD(STACK[0x6A70]) = v34;
  LOBYTE(v6) = *(_BYTE *)(v16 + (v32 ^ 0xBB)) - 1;
  v35 = v24[11];
  STACK[0x69E0] = v35;
  v36 = v33 ^ 0x9700DE2C;
  v37 = *(unsigned __int8 *)(v4 + (v35 ^ 0x15));
  LODWORD(v32) = v21 & 0xFFFFFF00 | (v6 ^ (v6 >> 6) ^ (v6 >> 4));
  LODWORD(STACK[0x6A50]) = v32;
  v38 = (unint64_t)*(&off_1015B46D0 + (v3 ^ 0x2679));
  LODWORD(v31) = (v33 ^ 0xC79F9827) + *(_DWORD *)(v38 + 4 * (v31 ^ 0xF2)) + 1;
  v39 = (char *)*(&off_1015B46D0 + v3 - 7038) - 8;
  LODWORD(v24) = v37 ^ 0x93 | v12;
  LODWORD(STACK[0x6A40]) = (_DWORD)v24;
  v40 = (char *)*(&off_1015B46D0 + (v3 ^ 0x2647)) - 8;
  v41 = *(_DWORD *)&v40[4 * (v10 ^ 0x32)];
  v42 = v32 ^ v31 ^ __ROR4__(*(_DWORD *)&v39[4 * (v11 ^ 0xF6)] ^ 0x47A535FD, 16) ^ __ROR4__(((BYTE1(v36) ^ 0xC79F980B) + *(_DWORD *)(v38 + 4 * (BYTE1(v36) ^ 0x4Eu)) + 1) ^ 0x44ED60B3, 24) ^ __ROR4__(v41 ^ 0xFC4F37BB ^ (16 * v41), 8);
  v43 = v42 ^ v34;
  v44 = v42 ^ v34 ^ v24;
  LODWORD(STACK[0x6A90]) = v44 ^ v33 ^ 0x9700DE2C;
  v45 = v44 ^ v33 ^ 0x9700DE2C ^ 0xA69B5D53;
  LODWORD(v31) = *(_DWORD *)&v40[4 * (((v44 ^ v33 ^ 0x9700DE2C) >> 24) ^ 0x64)];
  LODWORD(STACK[0x6A30]) = v42;
  v46 = v42 & 0x100000;
  HIDWORD(v48) = v31 ^ 0xFC4F37BB ^ (16 * v31);
  LODWORD(v48) = HIDWORD(v48);
  v47 = v48 >> 8;
  if ((v42 & 0x100000 & v47) != 0)
    v46 = -v46;
  v49 = *(_DWORD *)&v40[4 * ((v44 ^ v33 ^ 0x2C) ^ 0x65)] ^ 0x583324D1;
  v50 = (unint64_t)*(&off_1015B46D0 + (v3 ^ 0x221D));
  v51 = v49 ^ __ROR4__(*(_DWORD *)&v39[4 * (BYTE1(v45) ^ 0x5E)] ^ 0x47A535FD, 24) ^ (16 * v49) ^ v42 & 0xFFEFFFFF ^ __ROR4__(*(_DWORD *)(v50 + 4 * (BYTE2(v45) ^ 0x49u)) ^ 0x2C093B20, 16) ^ (v46 + v47);
  v52 = v43 ^ 0x78360DC6;
  LODWORD(STACK[0x6A10]) = v52;
  v53 = v44 ^ 0xF9DFFDF8;
  LODWORD(STACK[0x6A00]) = v53;
  LODWORD(STACK[0x6608]) = v1;
  v54 = v51 ^ v52;
  v55 = v54 ^ v53;
  LODWORD(STACK[0x6A20]) = v54 ^ v53;
  v56 = v54 ^ v36;
  v57 = v54;
  HIDWORD(v58) = *(_DWORD *)(v50 + 4 * (((v54 ^ v36) >> 24) ^ 0x10)) ^ 0x2C093B20;
  LODWORD(v58) = HIDWORD(v58);
  v59 = (v58 >> 8) ^ __ROR4__(*(_DWORD *)&v39[4 * (((v54 ^ v36) >> 16) ^ 0x5D)] ^ 0x47A535FD, 16) ^ *(_DWORD *)&v39[4 * ((v54 ^ v36) ^ 0xC3)] ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v54 ^ v36) >> 8) ^ 0xC0)] ^ 0x47A535FD, 24) ^ v51;
  LODWORD(STACK[0x6900]) = v59;
  v60 = v59 ^ 0xF9AB5B55;
  LODWORD(STACK[0x69A0]) = v57;
  v61 = v57 ^ 0x1DA33E3D ^ v59 ^ 0xF9AB5B55;
  LODWORD(STACK[0x6920]) = v61;
  v62 = v61 ^ v55;
  v63 = v61 ^ v55 ^ 0x65ED60B3;
  LODWORD(STACK[0x6990]) = v63;
  v64 = v63 ^ v56;
  v65 = *(_DWORD *)&v40[4 * (HIBYTE(v64) ^ 0xF8)];
  v66 = *(_DWORD *)(v50 + 4 * (v64 ^ 0xBEu)) ^ __ROR4__(v65 ^ 0xFC4F37BB ^ (16 * v65), 8) ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v64 ^ 0x3E3D) >> 8) ^ 0xA0)] ^ 0x47A535FD, 24);
  v67 = v62 ^ v56;
  v68 = v66 ^ __ROR4__((*(_DWORD *)(v38 + 4 * (((v62 ^ v56) >> 16) ^ 0x4Eu))+ (((v62 ^ v56) >> 16) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 16);
  v69 = v68 ^ v60;
  LODWORD(STACK[0x6970]) = v68 ^ v60;
  v70 = v68 ^ v57;
  v71 = v68 ^ v57 ^ 0x54B6ADB;
  v72 = v71 ^ v62;
  LODWORD(STACK[0x69B0]) = v72;
  LODWORD(STACK[0x6950]) = v71;
  v72 ^= 0x65ED6047u;
  v73 = v72 ^ v67 ^ 0x69AF31BC;
  LODWORD(STACK[0x6960]) = v73;
  v74 = *(_DWORD *)&v40[4 * (((v72 ^ v67) >> 16) ^ 0x32)];
  v75 = *(_DWORD *)(v50 + 4 * ((v72 ^ v67) ^ 0xB1u)) ^ __ROR4__(*(_DWORD *)(v50+ 4* (((v72 ^ v67) >> 24) ^ 0x64)) ^ 0x2C093B20, 8) ^ __ROR4__(v74 ^ 0xFC4F37BB ^ (16 * v74), 16) ^ v69 ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE1(v73) ^ 0x4Eu))+ (BYTE1(v73) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 24);
  v76 = v75 ^ v68 ^ v57 ^ 0x54B6ADB;
  LODWORD(STACK[0x6910]) = v76;
  v77 = v75;
  LODWORD(STACK[0x68F0]) = v75;
  v78 = v76 ^ v72;
  v79 = v76 ^ v72 ^ v72 ^ v67 ^ 0x69AF31BC;
  LODWORD(STACK[0x6930]) = v78;
  v80 = v79 ^ 0x344E5E7A;
  LODWORD(STACK[0x6940]) = v79 ^ 0x344E5E7A;
  v81 = *(_DWORD *)&v40[4 * (BYTE1(v79) ^ 0xC3)];
  v82 = (unint64_t)v40;
  v83 = *(_DWORD *)&v39[4 * (v79 ^ 0x84)] ^ __ROR4__(*(_DWORD *)(v50 + 4 * (HIBYTE(v79) ^ 0x39)) ^ 0x2C093B20, 8) ^ __ROR4__(v81 ^ 0xFC4F37BB ^ (16 * v81), 24) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (((v79 ^ 0x344E5E7A) >> 16) ^ 0x4Eu)) + (((v79 ^ 0x344E5E7A) >> 16) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 16);
  v84 = v78 ^ 0x5F000000 ^ v70 ^ 0x9804D2C1 ^ v83;
  v85 = v70 ^ 0x9804D2C1 ^ v83;
  LODWORD(STACK[0x68E0]) = v84;
  HIDWORD(v58) = *(_DWORD *)(v50 + 4 * (((v84 ^ v80) >> 24) ^ 0x4E)) ^ 0x2C093B20;
  LODWORD(v58) = HIDWORD(v58);
  v86 = *(_DWORD *)&v40[4 * ((BYTE2(v84) ^ BYTE2(v80)) ^ 0xD8)];
  v87 = v83 ^ v77;
  v88 = (v58 >> 8) ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v84 ^ v80) >> 8) ^ 0x42)] ^ 0x47A535FD, 24) ^ __ROR4__(v86 ^ 0xFC4F37BB ^ (16 * v86), 16) ^ v83 ^ v77 ^ (*(_DWORD *)(v38+ 4 * ((v84 ^ v80) ^ 0x15u))+ ((v84 ^ v80) ^ 0xC79F9850)+ 1);
  v89 = v84 ^ v80 ^ 0x4345BC5B;
  LODWORD(STACK[0x6890]) = v89;
  v90 = v88 ^ v85;
  LODWORD(STACK[0x68D0]) = v85;
  v91 = v88 ^ v85 ^ v84;
  LODWORD(STACK[0x68B0]) = v91;
  v91 ^= 0x643B76Fu;
  v92 = v91 ^ v89;
  v93 = v91;
  LODWORD(STACK[0x6840]) = v91;
  v94 = *(_DWORD *)(v82 + 4 * (((v91 ^ v89) >> 16) ^ 0xD8u));
  v95 = v82;
  STACK[0x6850] = v82;
  HIDWORD(v58) = *(_DWORD *)&v39[4 * (BYTE1(v92) ^ 0x42)] ^ 0x47A535FD;
  LODWORD(v58) = HIDWORD(v58);
  v96 = (v58 >> 24) ^ __ROR4__(v94 ^ 0xFC4F37BB ^ (16 * v94), 16) ^ (*(_DWORD *)(v38
                                                                               + 4 * (v92 ^ 0x15u))
                                                                   + (v92 ^ 0xC79F9850)
                                                                   + 1) ^ __ROR4__((*(_DWORD *)(v38+ 4* (((v92 ^ 0x4345BC5Bu) >> 24) ^ 0x4E))+ (((v92 ^ 0x4345BC5Bu) >> 24) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 8);
  v97 = v85 ^ 0x280BE221 ^ v96;
  v98 = v97 ^ v93 ^ 0x6B4E5E7A;
  LODWORD(STACK[0x6810]) = v97 ^ v93;
  v99 = v98 ^ v92 ^ 0x4345BC5B;
  v100 = *(_DWORD *)&v39[4 * (BYTE2(v99) ^ 0x18)] ^ 0x47A535FD;
  STACK[0x68C0] = v50;
  v101 = *(_DWORD *)(v50 + 4 * ((v98 ^ v92 ^ 0x5B) ^ 0x9Fu)) ^ __ROR4__(v100, 16) ^ __ROR4__(*(_DWORD *)(v50 + 4 * (HIBYTE(v99) ^ 0xA)) ^ 0x2C093B20, 8) ^ __ROR4__(*(_DWORD *)&v39[4 * (BYTE1(v99) ^ 0x7C)] ^ 0x47A535FD, 24);
  v102 = v96 ^ v88;
  LODWORD(v82) = v101 ^ v96 ^ v88 ^ 0x18E854E6;
  LODWORD(STACK[0x6870]) = v82 ^ v97;
  v103 = v82 ^ v97 ^ 0x8CAED7DC;
  v104 = v103 ^ v92 ^ 0x4345BC5B;
  LODWORD(STACK[0x6880]) = v104 ^ 0xA407ED54;
  v105 = *(_DWORD *)(v95 + 4 * (v104 ^ 0xC9u)) ^ 0x583324D1;
  v106 = v105 ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v104 ^ 0xED54) >> 8) ^ 0xFE)] ^ 0x47A535FD, 24) ^ (16 * v105) ^ __ROR4__(*(_DWORD *)&v39[4 * (HIBYTE(v104) ^ 0x5A)] ^ 0x47A535FD, 8) ^ v82;
  LODWORD(v58) = __ROR4__((*(_DWORD *)(v38 + 4 * (((v104 ^ 0xA407ED54) >> 16) ^ 0x4Eu))+ (((v104 ^ 0xA407ED54) >> 16) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 16);
  LODWORD(STACK[0x6820]) = v92 ^ 0x13750D44;
  v107 = v104 ^ 0x4C21F4FB;
  LODWORD(STACK[0x68A0]) = v51 ^ 0xA11F8806;
  v108 = (v104 ^ 0x4C21F4FB) - (v51 ^ 0xA11F8806) + 273764449;
  v109 = (v108 ^ 0xD659AD43) & (2 * (v108 & 0xD45DC942)) ^ v108 & 0xD45DC942;
  v110 = ((2 * (v108 ^ 0xDE62AD47)) ^ 0x147EC80A) & (v108 ^ 0xDE62AD47) ^ (2 * (v108 ^ 0xDE62AD47)) & 0xA3F6404;
  v111 = (v110 ^ 0x3E4000) & (4 * v109) ^ v109;
  v112 = ((4 * (v110 ^ 0xA012405)) ^ 0x28FD9014) & (v110 ^ 0xA012405) ^ (4 * (v110 ^ 0xA012405)) & 0xA3F6404;
  v113 = (v112 ^ 0x83D0000) & (16 * v111) ^ v111;
  v114 = ((16 * (v112 ^ 0x2026401)) ^ 0xA3F64050) & (v112 ^ 0x2026401) ^ (16 * (v112 ^ 0x2026401)) & 0xA3F6400;
  v115 = v113 ^ 0xA3F6405 ^ (v114 ^ 0x2364000) & (v113 << 8);
  v116 = v108 ^ (2
               * ((v115 << 16) & 0xA3F0000 ^ v115 ^ ((v115 << 16) ^ 0x64050000) & (((v114 ^ 0x8092405) << 8) & 0xA3F0000 ^ 0x1B0000 ^ (((v114 ^ 0x8092405) << 8) ^ 0x3F640000) & (v114 ^ 0x8092405))));
  LODWORD(STACK[0x66A0]) = v116;
  LODWORD(v50) = LODWORD(STACK[0x6A70]) ^ 0xF765F72C;
  v117 = LODWORD(STACK[0x6A70]) ^ 0x965675BF ^ LODWORD(STACK[0x6A90]) ^ 0xF9DFFDF8;
  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6A90]) ^ 0xC1CE81F7;
  v118 = LODWORD(STACK[0x6900]) ^ 0xA49F3663;
  LODWORD(STACK[0x6860]) = v118 - 1866946297 - ((2 * v118) & 0x2171520E);
  v119 = v67 ^ 0xEB4D3645;
  LODWORD(STACK[0x67A0]) = v67 - 1866946297 - ((2 * v67) & 0x2171520E);
  v120 = v87 ^ 0xA1239171;
  v121 = v97 ^ v93 ^ 0x45612F85;
  v122 = (v121 - v120) ^ 0x15180AAE;
  LODWORD(STACK[0x6698]) = v122;
  LODWORD(STACK[0x6790]) = (v122 ^ LODWORD(STACK[0x6920]))
                         - 1866946297
                         - ((2 * (v122 ^ LODWORD(STACK[0x6920]))) & 0x2171520E);
  LODWORD(STACK[0x6770]) = (v122 ^ LODWORD(STACK[0x6990]))
                         - 1866946297
                         - ((2 * (v122 ^ LODWORD(STACK[0x6990]))) & 0x2171520E);
  v123 = v56 ^ 0x7FB2D893;
  v124 = v90 ^ 0x56730670;
  v125 = v50 - 1035032900 + (v56 ^ 0x7FB2D893);
  v126 = v88 ^ 0x7E78E451;
  v127 = (v88 ^ 0x7E78E451) - v124 - 1672037870;
  LODWORD(STACK[0x6A70]) = v127 + (v125 ^ v56 ^ 0x7FB2D893) - 2 * (v127 & (v125 ^ v56 ^ 0x7FB2D893));
  LODWORD(STACK[0x6800]) = v102 - 1866946297 - ((2 * v102) & 0x2171520E);
  v128 = (659447418 - (STACK[0x68B0] & 0x40000)) ^ STACK[0x6840] & 0xFFFBFFFF;
  LODWORD(STACK[0x67E0]) = v99 - 1866946297 - ((2 * v99) & 0x2171520E);
  v129 = v103 ^ v98;
  v130 = v129 ^ 0x4BC77669;
  LODWORD(STACK[0x6780]) = (v129 ^ 0x4BC77669) - 1866946297 - 2 * ((v129 ^ 0x4BC77669) & 0x10B8A917 ^ v129 & 0x10);
  LODWORD(STACK[0x67F0]) = v97 ^ v93 ^ 0x4401E660 ^ v106 ^ v58;
  LODWORD(STACK[0x6730]) = v82 ^ v97 ^ 0xED353D8B ^ v106 ^ v58;
  v131 = LODWORD(STACK[0x69A0]) ^ 0x7FB2D893;
  v132 = v106 ^ v58 ^ 0xC59C0703;
  v133 = v131 + 2021570556 + v132;
  LODWORD(STACK[0x66F8]) = v133;
  v134 = v116 ^ 0x5091A84F;
  v135 = v116 ^ 0x5091A84F ^ v133;
  v136 = v135 ^ (v97 - 1866946297 - ((2 * v97) & 0x2171520E));
  LODWORD(STACK[0x6750]) = v136 - ((2 * v136) & 0x10D9D8F6);
  v137 = LODWORD(STACK[0x6870]) ^ 0xC08F2327;
  v138 = v123 - v130;
  v139 = v123 - v137 + 472276544;
  LODWORD(STACK[0x6740]) = (v139 ^ v82) - 1866946297 - ((2 * (v139 ^ v82)) & 0x2171520E);
  LODWORD(STACK[0x66F0]) = (v139 ^ v137) - 1866946297 - ((2 * (v139 ^ v137)) & 0x2171520E);
  LODWORD(STACK[0x6668]) = v139;
  LODWORD(STACK[0x66C8]) = (v107 ^ v139) - 1866946297 - ((2 * (v107 ^ v139)) & 0x2171520E);
  v140 = LODWORD(STACK[0x69B0]) ^ 0x8690F585;
  v141 = STACK[0x6890];
  v142 = (v119 ^ LODWORD(STACK[0x6890])) + 1405327717;
  LODWORD(v82) = (v140 - v121) ^ 0x5AD2F56A;
  LODWORD(STACK[0x6458]) = v82;
  v143 = v82 ^ v142;
  v144 = v82 ^ v142 ^ v128;
  LODWORD(STACK[0x6830]) = v143;
  v145 = (v140 - v121) ^ v142;
  v146 = v126 ^ 0xDC0328E5 ^ v145;
  v147 = v145 ^ v124;
  v148 = (v147 ^ 0x5AD2F56A)
       - LODWORD(STACK[0x59FC])
       - (((v144 ^ 0xAFC9AB68) - 488842713) ^ ((v144 ^ 0x32844364) + 2140221995) ^ ((v144 ^ 0xA976BB32) - 463222147));
  v149 = LODWORD(STACK[0x6A60]) ^ 0x7DBE4481;
  v150 = v107 - v149;
  v151 = v124 - v149;
  LODWORD(v50) = v50 - v107 - 2048838593;
  LODWORD(STACK[0x6518]) = v50;
  LODWORD(v50) = v50 ^ v125;
  LODWORD(STACK[0x6A60]) = LODWORD(STACK[0x67D0]) ^ v50;
  LODWORD(STACK[0x6530]) = v117;
  LODWORD(v50) = v50 ^ v117;
  LODWORD(STACK[0x68B0]) = v50 ^ v149 ^ 0x5922FE9C;
  LODWORD(STACK[0x6870]) = v50 ^ LODWORD(STACK[0x6A40]) ^ 0xECD8C49A;
  LODWORD(STACK[0x67D0]) = v50 ^ LODWORD(STACK[0x6A50]) ^ 0x6D313450;
  v152 = LODWORD(STACK[0x6A90]) ^ v142 ^ 0x8BB4882C ^ v151;
  v153 = v151 ^ 0x6A1E22CD;
  v154 = LODWORD(STACK[0x6A30]) ^ 0xA33567CB;
  LODWORD(STACK[0x6438]) = v153;
  v155 = v154 ^ v153 ^ v142;
  v156 = LODWORD(STACK[0x6A10]) ^ 0xC6D8078C ^ v153 ^ v142;
  v157 = LODWORD(STACK[0x6A00]) ^ 0x18755719 ^ v153 ^ v142;
  v138 += 849992351;
  LODWORD(STACK[0x6540]) = v138;
  v158 = v138 ^ v142;
  v159 = v138 ^ v142 ^ v120;
  v160 = v159 ^ (v148 - 777802273);
  LODWORD(STACK[0x6990]) = v160;
  v161 = (v160 & 1) == 0;
  if ((v160 & 1) != 0)
    v162 = v155;
  else
    v162 = v152;
  LODWORD(STACK[0x67C0]) = v162;
  if (!v161)
    v155 = v156;
  LODWORD(STACK[0x6A50]) = v155;
  if (v161)
    v163 = v156;
  else
    v163 = v157;
  LODWORD(STACK[0x67B0]) = v163;
  if (v161)
    v164 = v157;
  else
    v164 = v152;
  LODWORD(STACK[0x6A40]) = v164;
  v165 = v134 ^ LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x6A90]) = v165;
  v166 = v165 ^ LODWORD(STACK[0x6860]);
  v167 = v165 ^ LODWORD(STACK[0x67A0]) ^ 0x5D346D36;
  v168 = STACK[0x66A0];
  LODWORD(STACK[0x6920]) = LODWORD(STACK[0x66A0]) ^ 0xDA5C579;
  v169 = v168 ^ 0xDA5C579 ^ LODWORD(STACK[0x6790]);
  v170 = LODWORD(STACK[0x6770]) ^ 0x257A33B8 ^ v134;
  if (v161)
    v171 = v167;
  else
    v171 = v166;
  LODWORD(STACK[0x67A0]) = v171;
  if (v161)
    v167 = v170;
  LODWORD(STACK[0x69B0]) = v167;
  if (v161)
    v172 = v169;
  else
    v172 = v170;
  LODWORD(STACK[0x6790]) = v172;
  if (!v161)
    v166 = v169;
  LODWORD(STACK[0x69A0]) = v166;
  v173 = LODWORD(STACK[0x6A20]) ^ 0x7FB2D893;
  LODWORD(STACK[0x6548]) = v127;
  LODWORD(STACK[0x6510]) = v125;
  v174 = v127 ^ v125 ^ LODWORD(STACK[0x68A0]);
  v175 = v127 ^ v125 ^ v131;
  v176 = v127 ^ v125 ^ v173;
  v177 = STACK[0x6820];
  v178 = v173 + 1004787215 + LODWORD(STACK[0x6820]);
  v179 = LODWORD(STACK[0x6910]) ^ 0xAB7465A5;
  v180 = (v179 + v118) ^ 0xDC72F52;
  LODWORD(STACK[0x6520]) = v180;
  LODWORD(STACK[0x6450]) = v178;
  v181 = v178 ^ v180;
  v182 = v181 ^ v140;
  v183 = LODWORD(STACK[0x6970]) ^ 0x83DB9F5E ^ v181;
  v184 = LODWORD(STACK[0x6950]) ^ 0x9B33CBB8 ^ v181;
  v185 = LODWORD(STACK[0x6960]) ^ 0x8AD2A47E ^ v181;
  if (v161)
    v186 = v183;
  else
    v186 = v184;
  LODWORD(STACK[0x6720]) = v186;
  if (v161)
    v183 = v185;
  LODWORD(STACK[0x68A0]) = v183;
  if (v161)
    v185 = v182;
  LODWORD(STACK[0x6710]) = v185;
  if (v161)
    v182 = v184;
  LODWORD(STACK[0x6860]) = v182;
  v187 = STACK[0x6730];
  v188 = (v121 - LODWORD(STACK[0x6730])) ^ 0x2F85518D;
  LODWORD(STACK[0x6448]) = v188;
  v189 = v188 ^ v142;
  v190 = v189 ^ v179;
  v191 = LODWORD(STACK[0x6930]) ^ 0xC2DB5419 ^ v189;
  v192 = LODWORD(STACK[0x68F0]) ^ 0xBA950A63 ^ v189;
  v193 = LODWORD(STACK[0x6940]) ^ 0xF6950A63 ^ v189;
  if (v161)
    v194 = v190;
  else
    v194 = v191;
  if (v161)
    v190 = v192;
  LODWORD(STACK[0x6A30]) = v190;
  if (v161)
    v195 = v191;
  else
    v195 = v193;
  LODWORD(STACK[0x6A20]) = v195;
  if (!v161)
    v193 = v192;
  LODWORD(STACK[0x6840]) = v158;
  LODWORD(STACK[0x68F0]) = v158 ^ 0x4986A48C;
  v196 = v158 ^ 0x4986A48C ^ v141;
  v197 = LODWORD(STACK[0x68D0]) ^ 0x618D46AD ^ v158;
  v198 = LODWORD(STACK[0x68E0]) ^ 0xAC318D7 ^ v158;
  if (v161)
    v199 = v158 ^ 0x4986A48C ^ v141;
  else
    v199 = v159;
  LODWORD(STACK[0x6970]) = v199;
  if (v161)
    v196 = v198;
  LODWORD(STACK[0x6708]) = v196;
  if (v161)
    v200 = v197;
  else
    v200 = v198;
  LODWORD(STACK[0x6960]) = v200;
  if (v161)
    v201 = v159;
  else
    v201 = v197;
  LODWORD(STACK[0x6700]) = v201;
  v202 = v177 ^ 0x86D1DD8F ^ v143;
  if (v161)
    v203 = v146;
  else
    v203 = v147 ^ 0xDC0328E5;
  LODWORD(STACK[0x6770]) = v203;
  if (v161)
    v204 = v177 ^ 0x86D1DD8F ^ v143;
  else
    v204 = v146;
  LODWORD(STACK[0x66E8]) = v204;
  if (v161)
    v205 = v147 ^ 0xDC0328E5;
  else
    v205 = v144 ^ 0xB2EA8EB1;
  LODWORD(STACK[0x66E0]) = v205;
  if (v161)
    v202 = v144 ^ 0xB2EA8EB1;
  LODWORD(STACK[0x6760]) = v202;
  v206 = LODWORD(STACK[0x6750]) - 2006127493;
  v207 = STACK[0x66F8];
  v208 = LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x66F8]) ^ 0xA07DC55C ^ v168;
  v209 = LODWORD(STACK[0x67E0]) ^ 0xB1A9A6E;
  LODWORD(STACK[0x6900]) = v135;
  v210 = v135 ^ v209;
  v211 = v135 ^ LODWORD(STACK[0x6800]) ^ 0xD592D01;
  v212 = v206 ^ 0xAB7D9434;
  if (v161)
    v213 = v210;
  else
    v213 = v135 ^ LODWORD(STACK[0x6800]) ^ 0xD592D01;
  LODWORD(STACK[0x6A10]) = v213;
  if (!v161)
    v211 = v212;
  LODWORD(STACK[0x66D8]) = v211;
  if (!v161)
    v212 = v208;
  LODWORD(STACK[0x6A00]) = v212;
  if (v161)
    v214 = v208;
  else
    v214 = v210;
  LODWORD(STACK[0x66D0]) = v214;
  LODWORD(STACK[0x6890]) = v134 ^ v139;
  v215 = v134 ^ v139 ^ LODWORD(STACK[0x6780]);
  v216 = v134 ^ LODWORD(STACK[0x66F0]);
  v217 = v134 ^ LODWORD(STACK[0x66C8]);
  if (v161)
    v218 = v134 ^ v139 ^ LODWORD(STACK[0x6780]);
  else
    v218 = v134 ^ LODWORD(STACK[0x66C8]);
  LODWORD(STACK[0x66C8]) = v218;
  if (v161)
    v215 = v216;
  LODWORD(STACK[0x6750]) = v215;
  v219 = LODWORD(STACK[0x6740]) ^ 0xEF624394;
  LODWORD(STACK[0x6538]) = v134;
  v220 = v219 ^ v134;
  if (v161)
    v216 = v220;
  LODWORD(STACK[0x66C0]) = v216;
  if (v161)
    v220 = v217;
  LODWORD(STACK[0x6740]) = v220;
  HIDWORD(v221) = STACK[0x6880];
  LODWORD(v221) = STACK[0x6880];
  v222 = STACK[0x67F0];
  LODWORD(STACK[0x6480]) = v142;
  LODWORD(STACK[0x6428]) = v150 + 1692855638;
  v223 = (v150 + 1692855638) ^ v142;
  LODWORD(STACK[0x6420]) = v223;
  v224 = v207 ^ v223;
  LODWORD(STACK[0x6910]) = v207 ^ v223;
  v225 = v207 ^ v223 ^ v132;
  v226 = v224 ^ v187;
  v227 = v224 ^ __ROR4__((v221 >> 4) ^ __ROR4__(v222, 4) ^ 0xDBAE327C, 28) ^ 0x57D61A46;
  v228 = v224 ^ v222 ^ 0xED353D8B;
  if (v161)
    v229 = v227;
  else
    v229 = v225;
  LODWORD(STACK[0x66B8]) = v229;
  if (v161)
    v227 = v228;
  LODWORD(STACK[0x6930]) = v227;
  if (v161)
    v230 = v226;
  else
    v230 = v228;
  LODWORD(STACK[0x66B0]) = v230;
  if (v161)
    v231 = v225;
  else
    v231 = v226;
  LODWORD(STACK[0x68E0]) = v231;
  v232 = STACK[0x64C0];
  v233 = (unsigned __int8 *)STACK[0x6980];
  v234 = STACK[0x64D0];
  v235 = ((v233[14] ^ 0xC0) + 11) ^ *(_BYTE *)(STACK[0x64D0] + (v233[14] ^ 0x67));
  v236 = *(_BYTE *)(STACK[0x64B8] + (STACK[0x69F0] ^ 0x8B)) + (STACK[0x69F0] ^ 0xA8);
  v237 = *(_BYTE *)(STACK[0x64B8] + (v233[13] ^ 0xAFLL)) + (v233[13] ^ 0x8C);
  v238 = *(unsigned __int8 *)(v234 + (STACK[0x69E0] ^ 0xDB)) ^ ((STACK[0x69E0] ^ 0x7C) + 11) ^ 0x72 | ((*(unsigned __int8 *)(STACK[0x64C8] + (v233[8] ^ 0xACLL)) ^ 0x30) << 24) | ((*(unsigned __int8 *)(v234 + (v233[10] ^ 0x9FLL)) ^ ((v233[10] ^ 0x38) + 11) ^ 0x8D) << 8) | ((*(unsigned __int8 *)(STACK[0x64C8] + (v233[9] ^ 0x20)) ^ 3) << 16);
  v239 = STACK[0x6A80] ^ 0x4F;
  v240 = ((((*v233 ^ 0xFFFFFFF9) + 11) ^ 0x45 ^ *(unsigned __int8 *)(STACK[0x64D0] + (*v233 ^ 0x5ELL))) << 24) | ((((*(_BYTE *)(v232 + (v233[1] ^ 0xF8)) - 1) ^ ((*(_BYTE *)(v232 + (v233[1] ^ 0xF8)) - 1) >> 6) ^ ((*(_BYTE *)(v232 + (v233[1] ^ 0xF8)) - 1) >> 4)) ^ 8) << 16) | ((*(unsigned __int8 *)(STACK[0x64C8] + (v233[2] ^ 0xDCLL)) ^ 0x38) << 8) | ((*(_BYTE *)(v232 + v239) - 1) ^ ((*(_BYTE *)(v232 + v239) - 1) >> 6) ^ ((*(_BYTE *)(v232 + v239) - 1) >> 4)) ^ 0xEA;
  v241 = (*(_BYTE *)(STACK[0x64B8] + (STACK[0x69D0] ^ 0xFC)) + (STACK[0x69D0] ^ 0xDF)) ^ 0x25 | (((*(_BYTE *)(v232 + (STACK[0x69C0] ^ 0x88)) - 1) ^ ((*(_BYTE *)(v232 + (STACK[0x69C0] ^ 0x88)) - 1) >> 6) ^ ((*(_BYTE *)(v232 + (STACK[0x69C0] ^ 0x88)) - 1) >> 4)) << 16) | ((*(unsigned __int8 *)(v234 + (v233[6] ^ 0x57)) ^ ((v233[6] ^ 0xF0) + 11) ^ 0x41) << 8) | ((*(unsigned __int8 *)(v234 + (v233[4] ^ 0x3ELL)) ^ ((v233[4] ^ 0x99999999) + 11) ^ 0x24) << 24);
  v242 = ((((*(unsigned __int8 *)(STACK[0x64B8] + (v233[12] ^ 0xACLL)) + (v233[12] ^ 0xFFFFFF8F)) ^ 0xCE) << 24) | ((v235 ^ 0xCB) << 8) | ((v237 ^ 0xB0) << 16) | v236 ^ 0x2E) ^ 0x9700DE2C;
  v243 = STACK[0x6850];
  v244 = *(_DWORD *)(STACK[0x6850] + 4 * (v237 ^ 0x2Du));
  v245 = v240 ^ __ROR4__(*(_DWORD *)&v39[4 * (v235 ^ 0xEB)] ^ 0x47A535FD, 24);
  v246 = *(_DWORD *)(STACK[0x6850] + 4 * (v236 ^ 0x9Fu)) ^ 0x583324D1;
  v247 = v245 ^ __ROR4__(((HIBYTE(v242) ^ 0xC79F980B) + *(_DWORD *)(v38 + 4 * (HIBYTE(v242) ^ 0x4E)) + 1) ^ 0x44ED60B3, 8) ^ v246 ^ (16 * v246) ^ __ROR4__(v244 ^ 0xFC4F37BB ^ (16 * v244), 16);
  v248 = v241 ^ v238 ^ v247;
  v249 = v248 ^ v242 ^ 0x9A7CC383;
  v250 = STACK[0x68C0];
  v251 = *(_DWORD *)(STACK[0x68C0] + 4 * ((v248 ^ v242) ^ 0x8Eu)) ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v248 ^ v242) >> 8) ^ 0x3D)] ^ 0x47A535FD, 24) ^ __ROR4__(*(_DWORD *)&v39[4 * ((BYTE2(v248) ^ BYTE2(v242)) ^ 0x82)] ^ 0x47A535FD, 16) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (HIBYTE(v249) ^ 0x4E)) + (HIBYTE(v249) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 8);
  v252 = v241 ^ 0xDB9E69F2 ^ v251;
  v253 = v248 ^ 0x87A7AE02 ^ v252;
  v254 = v253 ^ v249 ^ 0xA89752D2;
  v255 = *(_DWORD *)(STACK[0x68C0]
                   + 4 * (v248 ^ 2 ^ v252 ^ v249 ^ 0xDFu)) ^ __ROR4__(*(_DWORD *)&v39[4 * ((BYTE1(v253) ^ BYTE1(v249)) ^ 0xAC)] ^ 0x47A535FD, 24) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (HIBYTE(v254) ^ 0x4E)) + (HIBYTE(v254) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 8) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE2(v254) ^ 0x4Eu)) + (BYTE2(v254) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 16) ^ v251 ^ v247;
  if (v161)
    v256 = v175;
  else
    v256 = v176;
  LODWORD(STACK[0x6780]) = v256;
  v257 = STACK[0x6A70];
  if (v161)
    v257 = v176;
  LODWORD(STACK[0x68D0]) = v257;
  LODWORD(STACK[0x6648]) = v174;
  if (v161)
    v175 = v174;
  LODWORD(STACK[0x6880]) = v175;
  v258 = STACK[0x6A60];
  if (v161)
    v258 = STACK[0x67D0];
  LODWORD(STACK[0x6950]) = v258;
  v259 = STACK[0x68B0];
  if (v161)
    v259 = STACK[0x6870];
  LODWORD(STACK[0x6940]) = v259;
  v260 = (STACK[0x6990] & 2) == 0;
  v261 = v255 ^ v252;
  LODWORD(STACK[0x69F0]) = v255 ^ v252 ^ v253;
  v262 = v255 ^ v252 ^ v253 ^ 0x49E16FC6;
  v263 = v262 ^ v254;
  HIDWORD(v265) = *(_DWORD *)&v39[4 * (((v262 ^ v254) >> 16) ^ 0x27)] ^ 0x47A535FD;
  LODWORD(v265) = HIDWORD(v265);
  v264 = v265 >> 16;
  v266 = *(_DWORD *)&v39[4 * (((unsigned __int16)(v262 ^ v254) >> 8) ^ 0xF2)];
  if (v260)
    v267 = v193;
  else
    v267 = v194;
  LODWORD(STACK[0x67F0]) = v267;
  if (v260)
    v193 = v194;
  LODWORD(STACK[0x65E8]) = v193;
  v268 = v264 ^ __ROR4__(v266 ^ 0x47A535FD, 24) ^ *(_DWORD *)&v39[4 * (v263 ^ 0x56)];
  v269 = v255 ^ 0xE4450473;
  v270 = v268 ^ __ROR4__(*(_DWORD *)(v250 + 4 * (HIBYTE(v263) ^ 0xA3)) ^ 0x2C093B20, 8) ^ v255 ^ 0x70038749;
  v271 = v263 ^ 0xAED90CA8;
  v272 = v270 ^ v253;
  v273 = v270 ^ v253 ^ v263 ^ 0xAED90CA8;
  v274 = v273 ^ 0x40D2EE89;
  v275 = *(_DWORD *)&v39[4 * (v273 ^ 0x77)] ^ __ROR4__(*(_DWORD *)(v250+ 4* (((v273 ^ 0x64E5E7A) >> 16) ^ 0x91u)) ^ 0x2C093B20, 16) ^ __ROR4__(*(_DWORD *)(v250 + 4 * (HIBYTE(v273) ^ 0x4D)) ^ 0x2C093B20, 8) ^ __ROR4__((*(_DWORD *)(v38+ 4* (((unsigned __int16)(v273 ^ 0xEE89) >> 8) ^ 0x4Eu))+ (((unsigned __int16)(v273 ^ 0xEE89) >> 8) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 24);
  v276 = v275 ^ v261 ^ 0x49E16FC6;
  v277 = v276 ^ v272;
  v278 = v277 ^ v274;
  v279 = *(_DWORD *)&v39[4 * (v278 ^ 0xF0)] ^ v270 ^ 0x64E5E7A ^ v275 ^ __ROR4__((*(_DWORD *)(v38 + 4 * (((v278 ^ 0xF59ED1DA) >> 24) ^ 0xD3))+ (((v278 ^ 0xF59ED1DA) >> 24) ^ 0xC79F9896)+ 1) ^ 0x44ED60B3, 8) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (((unsigned __int16)(v278 ^ 0x850E) >> 8) ^ 0x4Eu))+ (((unsigned __int16)(v278 ^ 0x850E) >> 8) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 24) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE2(v278) ^ 0x77u)) + (BYTE2(v278) ^ 0xC79F9832) + 1) ^ 0x44ED60B3, 16);
  v280 = v276 ^ 0xC6E089A6 ^ v279;
  LODWORD(STACK[0x69D0]) = v280;
  v281 = v277 ^ 0x38DB6D81 ^ v280;
  LODWORD(STACK[0x69C0]) = v281;
  v282 = v281 ^ v278 ^ 0x6839850E;
  HIDWORD(v283) = *(_DWORD *)&v39[4 * (BYTE2(v282) ^ 0x1C)] ^ 0x47A535FD;
  LODWORD(v283) = HIDWORD(v283);
  v284 = v282 ^ 0xDAE2E88F;
  v285 = (v283 >> 16) ^ __ROR4__(*(_DWORD *)(v250 + 4 * (HIBYTE(v282) ^ 0xD7)) ^ 0x2C093B20, 8) ^ (*(_DWORD *)(v38 + 4 * (v282 ^ 0xC1u)) + (v282 ^ 0xC79F9884) + 1) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE1(v284) ^ 0x4Eu)) + (BYTE1(v284) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 24);
  v286 = v285 ^ v279 ^ v277;
  LODWORD(STACK[0x6820]) = v285 ^ v279;
  v287 = v286 ^ 0x5CD08FA0 ^ v284 ^ 0x960F883C;
  v288 = v285 ^ v276;
  v289 = *(_DWORD *)(v243 + 4 * (v286 ^ 0xA0 ^ v284 ^ 0xA1u)) ^ 0x583324D1;
  v290 = v289 ^ __ROR4__(*(_DWORD *)&v39[4 * (((unsigned __int16)(v286 ^ 0x8FA0 ^ v284) >> 8) ^ 0x76)] ^ 0x47A535FD, 24) ^ (16 * v289) ^ v285 ^ v279 ^ __ROR4__((*(_DWORD *)(v38 + 4 * (HIBYTE(v287) ^ 0x4E))+ (HIBYTE(v287) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 8) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE2(v287) ^ 0x4Eu))+ (BYTE2(v287) ^ 0xC79F980B)+ 1) ^ 0x44ED60B3, 16);
  v291 = v285 ^ v276 ^ 0x28060B34 ^ v290;
  v292 = v286 ^ 0x7F9338CF ^ v291;
  v293 = v292 ^ v287 ^ 0x9DE4E3BB;
  v294 = *(_DWORD *)(v250 + 4 * ((v292 ^ v286 ^ 0xA0 ^ v284 ^ 0x3C) ^ 0xB6u)) ^ __ROR4__(*(_DWORD *)(v250 + 4 * (((v292 ^ v287) >> 24) ^ 0x90)) ^ 0x2C093B20, 8) ^ v290 ^ __ROR4__((*(_DWORD *)(v38 + 4 * (BYTE1(v293) ^ 0x4Eu)) + (BYTE1(v293) ^ 0xC79F980B) + 1) ^ 0x44ED60B3, 24) ^ __ROR4__((*(_DWORD *)(v38 + 4 * (((v292 ^ v287) >> 16) ^ 0xAAu)) - 945842165 - (((v292 ^ v287) >> 16) ^ 0xFD) + ((2 * (((v292 ^ v287) >> 16) ^ 0xFD)) & 0x1DA) + 8) ^ 0x44ED60B3, 16);
  LODWORD(STACK[0x6730]) = v294 ^ v291;
  v295 = v294 ^ v291 ^ 0x30ADE8BD;
  v296 = v295 ^ v292 ^ 0x28A8DCE8;
  v297 = v296 ^ v293 ^ 0x5DE8ECCE;
  v298 = *(_DWORD *)(v38 + 4 * (BYTE1(v297) ^ 0x4Eu)) + (BYTE1(v297) ^ 0xC79F980B);
  STACK[0x6670] = v38;
  v299 = *(_DWORD *)(v243 + 4 * (((v296 ^ v293) >> 24) ^ 0xC0));
  v300 = *(_DWORD *)(v243 + 4 * (((v296 ^ v293) >> 16) ^ 0x75u));
  HIDWORD(v283) = v299 ^ 0xFC4F37BB ^ (16 * v299);
  LODWORD(v283) = HIDWORD(v283);
  LODWORD(STACK[0x6678]) = (v283 >> 8) ^ __ROR4__(v300 ^ 0xFC4F37BB ^ (16 * v300), 16) ^ v294 ^ (*(_DWORD *)(v38 + 4 * ((v295 ^ v292) ^ 0xE8 ^ (v292 ^ v286 ^ 0xA0 ^ v284 ^ 0x3C) ^ 0xBB ^ 0x80u))
                                                                                               + ((v295 ^ v292) ^ 0xE8 ^ (v292 ^ v286 ^ 0xA0 ^ v284 ^ 0x3C) ^ 0xBB ^ 0xC79F98C5)
                                                                                               + 1) ^ __ROR4__((v298 + 1) ^ 0x44ED60B3, 24);
  v301 = (v261 ^ 0x49E16FC6) - 1866946297 - 2 * ((v261 ^ 0x49E16FC6) & 0x10B8A91F ^ v261 & 0x18);
  v302 = v269 - 1866946297 - ((2 * v269) & 0x2171520E);
  v303 = v262 - 1866946297 - 2 * (v262 & 0x10B8A91F ^ STACK[0x69F0] & 0x18);
  v304 = (v271 ^ LODWORD(STACK[0x6698])) - 1866946297 - ((2 * (v271 ^ LODWORD(STACK[0x6698]))) & 0x2171520E);
  v305 = v291 - 1866946297 - ((2 * v291) & 0x2171520E);
  v306 = STACK[0x66F8];
  v307 = (v292 ^ v306) - 1866946297 - ((2 * (v292 ^ v306)) & 0x2171520E);
  LODWORD(STACK[0x6658]) = v294 - 1866946297 - ((2 * v294) & 0x2171520E);
  LODWORD(STACK[0x6A80]) = v297;
  v308 = v297 - 1866946297 - ((2 * v297) & 0x2171520E);
  v309 = (v293 ^ v306) - 1866946297 - ((2 * (v293 ^ v306)) & 0x2171520E);
  v310 = (v290 ^ v306) - 1866946297 - ((2 * (v290 ^ v306)) & 0x2171520E);
  v311 = v296 - 1866946297 - 2 * (v296 & 0x10B8A917 ^ (v295 ^ v292) & 0x10);
  LODWORD(STACK[0x6980]) = (v295 ^ LODWORD(STACK[0x6668]))
                         - 1866946297
                         - ((2 * (v295 ^ LODWORD(STACK[0x6668]))) & 0x2171520E);
  v312 = STACK[0x6830];
  v313 = LODWORD(STACK[0x6830]) ^ v288 ^ 0xBE36BA2B;
  v314 = LODWORD(STACK[0x6830]) ^ v286 ^ 0x9AEFB683;
  if (v260)
    v315 = STACK[0x6708];
  else
    v315 = STACK[0x6700];
  v316 = STACK[0x5A00];
  v317 = v313 - v314 - STACK[0x5A00];
  v318 = v317 ^ v315;
  v319 = v318 & 0x100000;
  v320 = v318 & 0xFFEFFFFF;
  v321 = STACK[0x6940];
  if (v260)
    v321 = STACK[0x6950];
  LODWORD(STACK[0x6660]) = v321;
  if (v260)
    v322 = STACK[0x6A50];
  else
    v322 = STACK[0x6A40];
  v323 = STACK[0x67B0];
  if (v260)
    v323 = STACK[0x67C0];
  LODWORD(STACK[0x6800]) = v323;
  v324 = STACK[0x6880];
  if (v260)
    v324 = STACK[0x68D0];
  LODWORD(STACK[0x67E0]) = v324;
  v325 = STACK[0x6790];
  if (!v260)
    v325 = STACK[0x67A0];
  LODWORD(STACK[0x6810]) = v325;
  v326 = STACK[0x69A0];
  if (v260)
    v326 = STACK[0x69B0];
  LODWORD(STACK[0x68C0]) = v326;
  if (v260)
    v327 = STACK[0x6720];
  else
    v327 = STACK[0x6710];
  v328 = STACK[0x6A20];
  if (!v260)
    v328 = STACK[0x6A30];
  LODWORD(STACK[0x65B0]) = v328;
  v329 = STACK[0x6960];
  if (v260)
    v329 = STACK[0x6970];
  LODWORD(STACK[0x6628]) = v329;
  v330 = STACK[0x6760];
  if (!v260)
    v330 = STACK[0x6770];
  LODWORD(STACK[0x65E0]) = v330;
  if (v260)
    v331 = STACK[0x66E0];
  else
    v331 = STACK[0x66E8];
  if (v260)
    v332 = STACK[0x66D8];
  else
    v332 = STACK[0x66D0];
  v333 = STACK[0x6A00];
  if (v260)
    v333 = STACK[0x6A10];
  LODWORD(STACK[0x6850]) = v333;
  v334 = STACK[0x66C0];
  if (!v260)
    v334 = STACK[0x66C8];
  LODWORD(STACK[0x6638]) = v334;
  v335 = STACK[0x68E0];
  if (!v260)
    v335 = STACK[0x6930];
  LODWORD(STACK[0x6618]) = v335;
  v336 = STACK[0x66B0];
  if (v260)
    v336 = STACK[0x66B8];
  if ((v319 & v317) != 0)
    v319 = -v319;
  v337 = (v319 + v317) ^ v320;
  LODWORD(STACK[0x6598]) = 2048430511 - v316 + v313 - v314;
  v338 = LODWORD(STACK[0x6A90]) ^ v301 ^ 0x5B7A334C;
  v339 = LODWORD(STACK[0x6A90]) ^ v302 ^ 0x439267AA;
  v340 = LODWORD(STACK[0x6A90]) ^ v303 ^ 0xF3ED619E;
  v341 = LODWORD(STACK[0x6920]) ^ v304;
  v342 = STACK[0x6840];
  v343 = v279 ^ LODWORD(STACK[0x6840]);
  v344 = (v317 + 2048430511) ^ v343;
  LODWORD(STACK[0x66F0]) = v344 ^ 0x2D8D46AD;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v345 = v338;
  else
    v345 = v339;
  LODWORD(STACK[0x69F0]) = v345;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v346 = v340;
  else
    v346 = v338;
  LODWORD(STACK[0x66A8]) = v346;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v347 = v341;
  else
    v347 = v340;
  LODWORD(STACK[0x69E0]) = v347;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v348 = v339;
  else
    v348 = v341;
  LODWORD(STACK[0x6690]) = v348;
  v349 = LODWORD(STACK[0x68F0]) ^ v284;
  v350 = v312 ^ LODWORD(STACK[0x6820]) ^ 0xF2D6338D;
  v351 = v342 ^ LODWORD(STACK[0x69D0]) ^ 0xC386A48C;
  v352 = v342 ^ LODWORD(STACK[0x69C0]) ^ 0x93644C03;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v353 = v312 ^ LODWORD(STACK[0x6820]) ^ 0xF2D6338D;
  else
    v353 = v312 ^ v287 ^ 0x5030B11F;
  LODWORD(STACK[0x69D0]) = v353;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v354 = v312 ^ v287 ^ 0x5030B11F;
  else
    v354 = v314;
  LODWORD(STACK[0x6688]) = v354;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v355 = v314;
  else
    v355 = v313;
  LODWORD(STACK[0x69C0]) = v355;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v356 = v313;
  else
    v356 = v350;
  LODWORD(STACK[0x6680]) = v356;
  v357 = LODWORD(STACK[0x6900]) ^ v305 ^ 0x1612F85;
  v358 = STACK[0x66A0];
  v359 = LODWORD(STACK[0x66A0]) ^ v310 ^ 0x97F087CA;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v360 = v358 ^ v307 ^ 0xE4BCB899;
  else
    v360 = v357;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v361 = LODWORD(STACK[0x66A0]) ^ v309 ^ 0x79585B22;
  else
    v361 = v358 ^ v307 ^ 0xE4BCB899;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v362 = v359;
  else
    v362 = LODWORD(STACK[0x66A0]) ^ v309 ^ 0x79585B22;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v363 = v357;
  else
    v363 = v359;
  v364 = LODWORD(STACK[0x6890]) ^ v311 ^ 0xB5CEF561;
  v365 = LODWORD(STACK[0x6890]) ^ v308 ^ 0xE82619AF;
  v366 = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6658]) ^ 0x1887FE67;
  v367 = LODWORD(STACK[0x6678]) ^ 0xF60ED674;
  v368 = LODWORD(STACK[0x6730]) ^ 0x7A4C877B ^ v367;
  v369 = STACK[0x6910];
  v370 = LODWORD(STACK[0x6910]) ^ 0x587902D8 ^ v368 ^ v296;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6910]) ^ v367;
  v371 = v369 ^ 0x591EE16 ^ v368;
  LODWORD(STACK[0x6658]) = v336;
  LODWORD(STACK[0x6630]) = v327;
  LODWORD(STACK[0x6820]) = v337;
  LODWORD(STACK[0x65D8]) = v322;
  v372 = 2
       * (((v337 ^ 0x746704B9) - v322 - ((2 * ((v337 ^ 0x746704B9) - v322) + 193832132) & 0xDA3BB1E) + 479768561) ^ v331);
  v373 = ((v372 ^ 0x759F1D60) - 1114105391) ^ ((v372 ^ 0xBA4418B9) + 1917000714) ^ ((v372 ^ 0xCFDB05D9) + 131858794);
  LODWORD(STACK[0x6840]) = v332;
  LODWORD(STACK[0x6830]) = v331;
  v374 = (((v336 ^ v327 ^ 0x7118606F) - 1750378309) ^ ((v336 ^ v327 ^ 0x7ABF3182) - 1676932776) ^ ((v336 ^ v327 ^ 0xE3FB29A9)
                                                                                                 + 88609149))
       - (((v332 ^ 0x74B07D03) - 1957723395) ^ ((v332 ^ 0xFC294372) + 64404622) ^ ((v332 ^ 0xADACD5E0) + 1381181984))
       - 551311869;
  v375 = (v374 ^ 0xABC40FB8) & (2 * (v374 & 0xABD48F30)) ^ v374 & 0xABD48F30;
  v376 = ((2 * (v374 ^ 0xADED05B8)) ^ 0xC731510) & (v374 ^ 0xADED05B8) ^ (2 * (v374 ^ 0xADED05B8)) & 0x6398A88;
  v377 = (v376 ^ 0x4300000) & (4 * v375) ^ v375;
  v378 = ((4 * (v376 ^ 0x2088A88)) ^ 0x18E62A20) & (v376 ^ 0x2088A88) ^ (4 * (v376 ^ 0x2088A88)) & 0x6398A88;
  v379 = (v378 ^ 0x200A08) & (16 * v377) ^ v377;
  v380 = ((16 * (v378 ^ 0x6198088)) ^ 0x6398A880) & (v378 ^ 0x6198088) ^ (16 * (v378 ^ 0x6198088)) & 0x6398A80;
  v381 = v379 ^ 0x6398A88 ^ (v380 ^ 0x2188808) & (v379 << 8);
  v382 = (v381 << 16) & 0x6390000 ^ v381 ^ ((v381 << 16) ^ 0xA880000) & (((v380 ^ 0x4210208) << 8) & 0x6390000 ^ 0x6310000 ^ (((v380 ^ 0x4210208) << 8) ^ 0x398A0000) & (v380 ^ 0x4210208));
  v383 = LODWORD(STACK[0x67E0])
       + (((v331 ^ 0x246FB1C7) - 611299783) ^ ((v331 ^ 0xC2C3DCAE) + 1027351378) ^ ((v331 ^ 0x607DB0E6) - 1618850022))
       + 251424264
       + LODWORD(STACK[0x67F0]);
  v384 = (v383 ^ 0x9E9AF47D) & (2 * (v383 & 0x9EDA857D)) ^ v383 & 0x9EDA857D;
  v385 = ((2 * (v383 ^ 0x93BEFC3D)) ^ 0x1AC8F280) & (v383 ^ 0x93BEFC3D) ^ (2 * (v383 ^ 0x93BEFC3D)) & 0xD647940;
  v386 = (v385 ^ 0x8403000) & (4 * v384) ^ v384;
  v387 = ((4 * (v385 ^ 0x5240940)) ^ 0x3591E500) & (v385 ^ 0x5240940) ^ (4 * (v385 ^ 0x5240940)) & 0xD647940;
  v388 = (v387 ^ 0x5006100) & (16 * v386) ^ v386;
  v389 = ((16 * (v387 ^ 0x8641840)) ^ 0xD6479400) & (v387 ^ 0x8641840) ^ (16 * (v387 ^ 0x8641840)) & 0xD647940;
  v390 = v388 ^ 0xD647940 ^ (v389 ^ 0x4441040) & (v388 << 8);
  v391 = (v390 << 16) & 0xD640000 ^ v390 ^ ((v390 << 16) ^ 0x79400000) & (((v389 ^ 0x9206940) << 8) & 0xD640000 ^ 0x9040000 ^ (((v389 ^ 0x9206940) << 8) ^ 0x64790000) & (v389 ^ 0x9206940));
  v373 -= 470005835;
  v392 = (v373 ^ 0x58E770F1) & (2 * (v373 & 0x18E64100)) ^ v373 & 0x18E64100;
  v393 = (2 * (v373 ^ 0x58EB72F1)) & 0x400D33F0 ^ 0x40051011 ^ ((2 * (v373 ^ 0x58EB72F1)) ^ 0x801A67E2) & (v373 ^ 0x58EB72F1);
  v394 = (4 * v392) & v393 ^ v392 ^ ((4 * v392) & 0x40090000 | 0x403C0);
  v395 = (4 * v393) & 0x400D33F0 ^ 0x40093031 ^ ((4 * v393) ^ 0x34CFC4) & v393;
  v396 = (16 * v394) & 0x400D33E0 ^ v394 ^ ((16 * v394) ^ 0x403C00) & v395;
  v397 = (16 * v395) & 0x400D33F0 ^ 0x400C00E1 ^ ((16 * v395) ^ 0xD33F10) & v395;
  v398 = v396 ^ 0x40080031 ^ (v396 << 8) & 0x400D3300 ^ ((v396 << 8) ^ 0x433C000) & v397;
  v399 = LODWORD(STACK[0x6608]) >> (LODWORD(STACK[0x6AB0]) + 80);
  LODWORD(STACK[0x6920]) = v399;
  v400 = v399 ^ 0x191FB09Bu;
  v401 = STACK[0xDB28];
  v402 = (v398 << 16) & 0x400D0000 ^ v398 ^ ((v398 << 16) ^ 0x33F10000) & ((v397 << 8) & 0x400D0000 ^ 0x400C0000 ^ ((v397 << 8) ^ 0xD330000) & v397);
  v403 = *(_QWORD *)(v401
                   + 8
                   * ((*(_QWORD *)(v401
                                 + 8
                                 * ((*(_QWORD *)(v401 + 8 * (0xD53D1DC3 % v400)) + 314015221) % v400))
                     + 4157773834)
                    % v400))
       + 619753174;
  v404 = v374 ^ (2 * v382);
  v405 = v383 ^ (2 * v391);
  STACK[0x6AB0] = STACK[0xDB28];
  v406 = v373 ^ (2 * v402);
  v407 = *(_QWORD *)(v401 + 8 * (v403 % v400)) + 3154898750;
  STACK[0x6890] = v400;
  LODWORD(v407) = v407 % v400 - ((2 * (v407 % v400)) & 0x1B8639EE) + 1841503479;
  v408 = ((v407 ^ 0xB09F5DEF) + 802663978) ^ ((v407 ^ 0x9B645035) + 70034420) ^ ((v407 ^ 0x4638112D) - 646913300);
  v409 = v343 ^ 0x2D8D46AD;
  v410 = v358 ^ LODWORD(STACK[0x6980]) ^ 0x5013627D;
  v411 = LODWORD(STACK[0x6A90]) ^ 0xA7D4524D;
  v412 = v370 ^ LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6730]) = v409;
  LODWORD(STACK[0x6590]) = v349;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v413 = v409;
  else
    v413 = v349;
  LODWORD(STACK[0x6678]) = v351;
  LODWORD(STACK[0x6588]) = v352;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v414 = v352;
  else
    v414 = v351;
  LODWORD(STACK[0x6570]) = v364;
  LODWORD(STACK[0x64D8]) = v410;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v415 = v364;
  else
    v415 = v410;
  LODWORD(STACK[0x6568]) = v365;
  LODWORD(STACK[0x6560]) = v366;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v416 = v366;
  else
    v416 = v365;
  LODWORD(STACK[0x64E0]) = v411;
  LODWORD(STACK[0x64B0]) = v412;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v412 = v411;
  LODWORD(STACK[0x6550]) = v370;
  LODWORD(STACK[0x6528]) = v371;
  if (((v344 ^ 0x2D8D46AD) & 1) != 0)
    v417 = v370;
  else
    v417 = v371;
  LODWORD(STACK[0x6980]) = v344;
  LODWORD(STACK[0x68F0]) = v405 >> 1;
  LODWORD(STACK[0x6A90]) = v408 - 112344382;
  v418 = STACK[0x66A8];
  if ((v344 & 2) == 0)
    v418 = STACK[0x6690];
  LODWORD(STACK[0x65C8]) = v418;
  v419 = STACK[0x69F0];
  if ((v344 & 2) == 0)
    v419 = STACK[0x69E0];
  LODWORD(STACK[0x6650]) = v419;
  LODWORD(STACK[0x64F0]) = v413;
  LODWORD(STACK[0x64E8]) = v414;
  if ((v344 & 2) != 0)
    v420 = v414;
  else
    v420 = v413;
  LODWORD(STACK[0x6558]) = v420;
  v421 = STACK[0x6688];
  if ((v344 & 2) != 0)
    v421 = STACK[0x6680];
  LODWORD(STACK[0x6620]) = v421;
  v422 = STACK[0x69D0];
  if ((v344 & 2) == 0)
    v422 = STACK[0x69C0];
  LODWORD(STACK[0x65A0]) = v422;
  LODWORD(STACK[0x6580]) = v361;
  LODWORD(STACK[0x6578]) = v363;
  if ((v344 & 2) != 0)
    v423 = v363;
  else
    v423 = v361;
  LODWORD(STACK[0x6410]) = v423;
  LODWORD(STACK[0x6610]) = v360;
  LODWORD(STACK[0x6600]) = v362;
  if ((v344 & 2) != 0)
    v424 = v360;
  else
    v424 = v362;
  LODWORD(STACK[0x6418]) = v424;
  LODWORD(STACK[0x65F8]) = v415;
  LODWORD(STACK[0x65C0]) = v416;
  if ((v344 & 2) != 0)
    v425 = v416;
  else
    v425 = v415;
  LODWORD(STACK[0x6430]) = v425;
  LODWORD(STACK[0x6500]) = v412;
  LODWORD(STACK[0x64F8]) = v417;
  if ((v344 & 2) != 0)
    v426 = v417;
  else
    v426 = v412;
  LODWORD(STACK[0x6440]) = v426;
  LODWORD(STACK[0x6900]) = v404 >> 1;
  LODWORD(STACK[0x6910]) = v406;
  STACK[0x6A80] = STACK[0xDB08];
  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])))((v405 >> 1) ^ 0xC8F10386);
}

uint64_t sub_100A0924C(int a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL4 v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  uint64_t v142;
  _BOOL4 v143;

  v10 = STACK[0x6A90];
  v11 = LODWORD(STACK[0x6A90]) < v6;
  v12 = STACK[0x6AC0];
  v13 = (a3 | ((unint64_t)(a3 < a5) << 32)) + 0xD69B64F754AFCB6;
  v14 = 8 * (v13 + ((46 * (LODWORD(STACK[0x6AC0]) ^ 0x22B9u)) ^ 0x129649B04AAD85C4));
  v15 = *(_QWORD *)(STACK[0x6AB0] + v14);
  v16 = v15 * v7 - 0x73CDA721111E9EF0;
  v17 = (v16 ^ 0x73ED169C8CDC5EF8) & (2 * (v16 & 0x73CDA721111E9EF0)) ^ v16 & 0x73CDA721111E9EF0;
  v18 = ((2 * (v16 ^ 0x77FC12DE8CC56B58)) ^ 0x8636BFF3BB7EB50) & (v16 ^ 0x77FC12DE8CC56B58) ^ (2 * (v16 ^ 0x77FC12DE8CC56B58)) & 0x431B5FF9DDBF5A8;
  v19 = ((4 * (v18 ^ 0x4109400844814A8)) ^ 0x10C6D7FE776FD6A0) & (v18 ^ 0x4109400844814A8) ^ (4
                                                                                                  * (v18 ^ 0x4109400844814A8)) & 0x431B5FF9DDBF5A8;
  v20 = (v19 ^ 0x95FE154BD4A0) & (16 * ((v18 ^ 0x21218C0892E100) & (4 * v17) ^ v17)) ^ (v18 ^ 0x21218C0892E100) & (4 * v17) ^ v17;
  v21 = ((16 * (v19 ^ 0x431200188902108)) ^ 0x431B5FF9DDBF5A80) & (v19 ^ 0x431200188902108) ^ (16 * (v19 ^ 0x431200188902108)) & 0x431B5FF9DDBF5A0;
  v22 = (v21 ^ 0x1115F99D9B5000) & (v20 << 8) ^ v20;
  v23 = (((v21 ^ 0x420A0060040A528) << 8) ^ 0x31B5FF9DDBF5A800) & (v21 ^ 0x420A0060040A528) ^ ((v21 ^ 0x420A0060040A528) << 8) & 0x431B5FF9DDBF500;
  v24 = v22 ^ 0x431B5FF9DDBF5A8 ^ (v23 ^ 0x31B59D99D10000) & (v22 << 16);
  v25 = v16 ^ (2
             * ((v24 << 32) & 0x431B5FF00000000 ^ v24 ^ ((v24 << 32) ^ 0x1DDBF5A800000000) & (((v23 ^ 0x4000062040A55A8) << 16) & 0x431B5FF00000000 ^ 0x202400000000 ^ (((v23 ^ 0x4000062040A55A8) << 16) ^ 0x35FF9DDB00000000) & (v23 ^ 0x4000062040A55A8))));
  v26 = v13
      + 0x5F6E4D8AA42173A2
      + (((v25 ^ a6 ^ 0x379C7904B612EEC9) + 0x4FAF905CBBB2E9C3) ^ ((v25 ^ a6 ^ 0x907BC36D2B50523)
                                                                     + 0x7134556EDF150229) ^ ((v25 ^ a6 ^ 0x4D1662BC4E0E9E4ALL)
                                                                                              + 0x35258BE443AE9942));
  v27 = (v26 ^ 0x1649092E7FF0A9D8) & (2 * (v26 & 0x8769AD4F7F82CDE2)) ^ v26 & 0x8769AD4F7F82CDE2;
  v28 = ((2 * (v26 ^ 0x145B4B2E40F4319CLL)) ^ 0x2665CCC27EEDF8FCLL) & (v26 ^ 0x145B4B2E40F4319CLL) ^ (2 * (v26 ^ 0x145B4B2E40F4319CLL)) & 0x9332E6613F76FC7ELL;
  v29 = v28 ^ 0x9112222101120402;
  v30 = (v28 ^ 0x220C4403E047818) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0x4CCB9984FDDBF1F8) & v29 ^ (4 * v29) & 0x9332E6613F76FC7CLL;
  v32 = ((16 * (v31 ^ 0x9330666102240C06)) ^ 0x332E6613F76FC7E0) & (v31 ^ 0x9330666102240C06) ^ (16 * (v31 ^ 0x9330666102240C06)) & 0x9332E6613F76FC70;
  v33 = (v32 ^ 0x132266013766C400) & (((v31 ^ 0x280003D52F060) & (16 * v30) ^ v30) << 8) ^ (v31 ^ 0x280003D52F060) & (16 * v30) ^ v30;
  v34 = (((v32 ^ 0x801080600810381ELL) << 8) ^ 0x32E6613F76FC7E00) & (v32 ^ 0x801080600810381ELL) ^ ((v32 ^ 0x801080600810381ELL) << 8) & 0x9332E6613F76FC00;
  v35 = (v26 ^ (2
              * (((v33 ^ 0x9332E6613F76FC7ELL ^ (v34 ^ 0x1222602136740000) & (v33 << 16)) << 32) & 0x1332E66100000000 ^ v33 ^ 0x9332E6613F76FC7ELL ^ (v34 ^ 0x1222602136740000) & (v33 << 16) ^ (((v33 ^ 0x9332E6613F76FC7ELL ^ (v34 ^ 0x1222602136740000) & (v33 << 16)) << 32) ^ 0x3F76FC7E00000000) & (((v34 ^ 0x811086400902807ELL) << 16) & 0x1332E66100000000 ^ 0x1112C00100000000 ^ (((v34 ^ 0x811086400902807ELL) << 16) ^ 0x66613F7600000000) & (v34 ^ 0x811086400902807ELL))))) >> 32;
  v36 = v26
      - (((v35 ^ 0x86AAB7F1AE33226ALL) - 0x13D2C1A378F599E6) ^ ((v35 ^ 0xDA4B1AAFC98BDD55) - 0x4F336CFD1F4D66D9) ^ ((v35 ^ 0x5CE1AD5EE0D15672) + 0x366624F3C9E81202))
      - 0xFF73CFFDF6F425ELL;
  v37 = (v36 ^ 0x81C363FCCD72FC7ELL) & (2 * (v36 & 0x1E873FD0D42FD7FLL)) ^ v36 & 0x1E873FD0D42FD7FLL;
  v38 = ((2 * (v36 ^ 0x81C345FCCF77662CLL)) ^ 0x566C03846B36A6) & (v36 ^ 0x81C345FCCF77662CLL) ^ (2
                                                                                                  * (v36 ^ 0x81C345FCCF77662CLL)) & 0x802B3601C2359B52;
  v39 = ((4 * (v38 ^ 0x8029120042148951)) ^ 0xACD80708D66D4CLL) & (v38 ^ 0x8029120042148951) ^ (4
                                                                                                  * (v38 ^ 0x8029120042148951)) & 0x802B3601C2359B50;
  v40 = (v39 ^ 0x28100100140940) & (16 * ((v38 ^ 0x2040000011200) & (4 * v37) ^ v37)) ^ (v38 ^ 0x2040000011200) & (4 * v37) ^ v37;
  v41 = ((16 * (v39 ^ 0x80032600C2219213)) ^ 0x2B3601C2359B530) & (v39 ^ 0x80032600C2219213) ^ (16 * (v39 ^ 0x80032600C2219213)) & 0x802B3601C2359B50;
  v42 = (((v41 ^ 0x80081601C0240A43) << 8) ^ 0x2B3601C2359B5300) & (v41 ^ 0x80081601C0240A43) ^ ((v41 ^ 0x80081601C0240A43) << 8) & 0x802B3601C2359B00;
  v43 = (v41 ^ 0x23200002119100) & (v40 << 8) ^ v40 ^ 0x802B3601C2359B53 ^ (v42 ^ 0x22000000110000) & (((v41 ^ 0x23200002119100) & (v40 << 8) ^ v40) << 16);
  v44 = (v36 ^ (2
              * ((v43 << 32) & 0x2B360100000000 ^ v43 ^ ((v43 << 32) ^ 0x42359B5300000000) & (((v42 ^ 0x80093601C2248853) << 16) & 0x2B360100000000 ^ 0x2A340000000000 ^ (((v42 ^ 0x80093601C2248853) << 16) ^ 0x3601C23500000000) & (v42 ^ 0x80093601C2248853))))) >> 16;
  *(_QWORD *)(STACK[0x6A80] + v14) = v15 ^ v9;
  v45 = v36
      + 0x294F14D428F57B80
      + (((v44 ^ 0xEB852F50585F6187) - 0x50F8B5C403239BEFLL) ^ ((v44 ^ 0xC2C5C3725B4AE56FLL) - 0x79B859E600361F07) ^ ((v44 ^ 0x2940EDDE38E90DC1) + 0x6DC288B59C6A0857));
  v46 = (v45 ^ 0x5006F88D22CDF021) & (2 * (v45 & 0x9416FA9144CDF540)) ^ v45 & 0x9416FA9144CDF540;
  v47 = ((2 * (v45 ^ 0x700EB98FA2C69A21)) ^ 0xC830863DCC16DEC2) & (v45 ^ 0x700EB98FA2C69A21) ^ (2 * (v45 ^ 0x700EB98FA2C69A21)) & 0xE418431EE60B6F60;
  v48 = v47 ^ 0x2408410222092121;
  v49 = (v47 ^ 0xC010020C04024E00) & (4 * v46) ^ v46;
  v50 = ((4 * v48) ^ 0x90610C7B982DBD84) & v48 ^ (4 * v48) & 0xE418431EE60B6F60;
  v51 = (v50 ^ 0x8000001A80092D00) & (16 * v49) ^ v49;
  v52 = ((16 * (v50 ^ 0x6418430466024261)) ^ 0x418431EE60B6F610) & (v50 ^ 0x6418430466024261) ^ (16 * (v50 ^ 0x6418430466024261)) & 0xE418431EE60B6F60;
  v53 = (v52 ^ 0x4000010E60026600) & (v51 << 8) ^ v51;
  v54 = (((v52 ^ 0xA418421086090961) << 8) ^ 0x18431EE60B6F6100) & (v52 ^ 0xA418421086090961) ^ ((v52 ^ 0xA418421086090961) << 8) & 0xE418431EE60B6F00;
  v55 = v53 ^ 0xE418431EE60B6F61 ^ (v54 ^ 0x206020B0000) & (v53 << 16);
  v56 = v25 ^ 0x3154ED6BD4A65D7ELL;
  v57 = (v45 ^ (2
              * ((v55 << 32) & 0x6418431E00000000 ^ v55 ^ ((v55 << 32) ^ 0x660B6F6100000000) & (((v54 ^ 0xE4184118E4000E61) << 16) & 0x6418431E00000000 ^ 0x2400011400000000 ^ (((v54 ^ 0xE4184118E4000E61) << 16) ^ 0x431EE60B00000000) & (v54 ^ 0xE4184118E4000E61))))) >> 8;
  v58 = v45
      - (((v57 ^ 0x37511C11D0FCBFECLL) + 0x6F5D624F164E6367) ^ ((v57 ^ 0x67066C0A57F906EFLL) + 0x3F0A1254914BDA66) ^ ((v57 ^ 0x50C346E12B8D6228) + 0x8CF38BFED3FBEA3))
      - 0x5E1AFFD97C90F948;
  v59 = (v58 ^ 0x93039BA74CBAA05DLL) & (2 * (v58 & 0xA3ABDB360EB2821ELL)) ^ v58 & 0xA3ABDB360EB2821ELL;
  v60 = ((2 * (v58 ^ 0xD51309AF4DBBA055)) ^ 0xED71A53286124496) & (v58 ^ 0xD51309AF4DBBA055) ^ (2 * (v58 ^ 0xD51309AF4DBBA055)) & 0x76B8D2994309224ALL;
  v61 = (v60 ^ 0x430801002000000) & (4 * v59) ^ v59;
  v62 = ((4 * (v60 ^ 0x1288528941092249)) ^ 0xDAE34A650C24892CLL) & (v60 ^ 0x1288528941092249) ^ (4 * (v60 ^ 0x1288528941092249)) & 0x76B8D29943092248;
  v63 = (v62 ^ 0x52A0420100000000) & (16 * v61) ^ v61;
  v64 = ((16 * (v62 ^ 0x2418909843092243)) ^ 0x6B8D2994309224B0) & (v62 ^ 0x2418909843092243) ^ (16 * (v62 ^ 0x2418909843092243)) & 0x76B8D29943092240;
  v65 = (v64 ^ 0x6288009000002000) & (v63 << 8) ^ v63;
  v66 = (((v64 ^ 0x1430D2094309024BLL) << 8) ^ 0xB8D2994309224B00) & (v64 ^ 0x1430D2094309024BLL) ^ ((v64 ^ 0x1430D2094309024BLL) << 8) & 0x76B8D29943092200;
  v67 = v65 ^ 0x76B8D2994309224BLL ^ (v66 ^ 0x3090900101000000) & (v65 << 16);
  v68 = v58 ^ (2
             * ((v67 << 32) & 0x76B8D29900000000 ^ v67 ^ ((v67 << 32) ^ 0x4309224B00000000) & (((v66 ^ 0x462842984209204BLL) << 16) & 0x76B8D29900000000 ^ 0x2420909000000000 ^ (((v66 ^ 0x462842984209204BLL) << 16) ^ 0x5299430900000000) & (v66 ^ 0x462842984209204BLL))));
  v69 = v13
      - 0x277A73EC6C5DEFF4
      + (((v68 ^ v56 ^ 0x5C6AA6C454632F68) - 0x36E6F23D6FAA70D0) ^ ((v68 ^ v56 ^ 0x125CAF9EA5AC40AELL)
                                                                      - 0x78D0FB679E651F16) ^ ((v68 ^ v56 ^ 0xC62539A987608190)
                                                                                               + 0x535692AF435621D8));
  v70 = (v69 ^ 0xFC339DA7F66B0499) & (2 * (v69 & 0xFCB021A704725612)) ^ v69 & 0xFCB021A704725612;
  v71 = ((2 * (v69 ^ 0x3C139FEDF64F8899)) ^ 0x81477C95E47BBD16) & (v69 ^ 0x3C139FEDF64F8899) ^ (2 * (v69 ^ 0x3C139FEDF64F8899)) & (v8 + 138);
  v72 = ((4 * (v71 ^ 0x40A0824A12044289)) ^ 0x28EF92BC8F77A2CLL) & (v71 ^ 0x40A0824A12044289) ^ (4 * (v71 ^ 0x40A0824A12044289)) & (v8 + 136);
  v73 = v72 ^ 0xC021064032088483;
  v74 = (v72 ^ 0x82B80AC0355A00) & (16 * ((v71 ^ 0x80010C0020199800) & (4 * v70) ^ v70)) ^ (v71 ^ 0x80010C0020199800) & (4 * v70) ^ v70;
  v75 = ((16 * v73) ^ 0xA3BE4AF23DDE8B0) & v73 ^ (16 * v73) & (v8 + 128);
  v76 = (v75 ^ 0x23A40A221DC800) & (v74 << 8) ^ v74;
  v77 = (((v75 ^ 0xC0801A40D020160BLL) << 8) ^ 0xA3BE4AF23DDE8B00) & (v75 ^ 0xC0801A40D020160BLL) ^ ((v75 ^ 0xC0801A40D020160BLL) << 8) & v8;
  v78 = v76 ^ (v8 + 139) ^ (v77 ^ 0x80A20A42301C0000) & (v76 << 16);
  v79 = (v69 ^ (2
              * ((v78 << 32) & 0x40A3BE4A00000000 ^ v78 ^ ((v78 << 32) ^ 0x723DDE8B00000000) & (((v77 ^ 0x4001B408C221548BLL) << 16) & 0x40A3BE4A00000000 ^ 0x40A10C4200000000 ^ (((v77 ^ 0x4001B408C221548BLL) << 16) ^ 0x3E4AF23D00000000) & (v77 ^ 0x4001B408C221548BLL))))) >> 32;
  v80 = v69
      - (((v79 ^ 0xAAA26DB97FBEEDDBLL) - 0x738127B85DA10DA1) ^ ((v79 ^ 0xFF92F2A97E0B88BBLL) - 0x26B1B8A85C1468C1) ^ ((v79 ^ 0x55309F10FC010446) + 0x73EC2AEE21E11BC4))
      + 0x8F884C6281F7C68;
  v81 = (v80 ^ 0x5A474A9CF8171F4CLL) & (2 * (v80 & 0x1A9452DEFCA7584ELL)) ^ v80 & 0x1A9452DEFCA7584ELL;
  v82 = ((2 * (v80 ^ 0x6A6FEFAC081F3F5CLL)) ^ 0xE1F77AE5E970CE24) & (v80 ^ 0x6A6FEFAC081F3F5CLL) ^ (2 * (v80 ^ 0x6A6FEFAC081F3F5CLL)) & 0x70FBBD72F4B86712;
  v83 = ((4 * (v82 ^ 0x1008851214882112)) ^ 0xC3EEF5CBD2E19C48) & (v82 ^ 0x1008851214882112) ^ (4 * (v82 ^ 0x1008851214882112)) & 0x70FBBD72F4B86710;
  v84 = (v83 ^ 0x40EAB542D0A00400) & (16 * ((v82 ^ 0x60F31860E0304200) & (4 * v81) ^ v81)) ^ (v82 ^ 0x60F31860E0304200) & (4 * v81) ^ v81;
  v85 = ((16 * (v83 ^ 0x3011083024186312)) ^ 0xFBBD72F4B867120) & (v83 ^ 0x3011083024186312) ^ (16 * (v83 ^ 0x3011083024186312)) & 0x70FBBD72F4B86710;
  v86 = (((v85 ^ 0x70402850B4380612) << 8) ^ 0xFBBD72F4B8671200) & (v85 ^ 0x70402850B4380612) ^ ((v85 ^ 0x70402850B4380612) << 8) & 0x70FBBD72F4B86700;
  v87 = (v85 ^ 0xBB952240806100) & (v84 << 8) ^ v84 ^ 0x70FBBD72F4B86712 ^ (v86 ^ 0x70B93070B0200000) & (((v85 ^ 0xBB952240806100) & (v84 << 8) ^ v84) << 16);
  v88 = (v80 ^ (2
              * ((v87 << 32) & 0x70FBBD7200000000 ^ v87 ^ ((v87 << 32) ^ 0x74B8671200000000) & (((v86 ^ 0x428D0244986512) << 16) & 0x70FBBD7200000000 ^ 0x4089094200000000 ^ (((v86 ^ 0x428D0244986512) << 16) ^ 0x3D72F4B800000000) & (v86 ^ 0x428D0244986512))))) >> 16;
  v89 = v80
      - 0x46559F627A071D71
      + (((v88 ^ 0x10BA5300A82AB87CLL) + 0x60243522494B0767) ^ ((v88 ^ 0xA9828ECF3A18479ELL) - 0x26E317122486077BLL) ^ ((v88 ^ 0xB938C7DCF02DEA35) - 0x36595E01EEB3AAD0));
  v90 = ((2 * (v89 ^ 0xBC15F70EF28612CLL)) ^ 0xF71452FE380F57BALL) & (v89 ^ 0xBC15F70EF28612CLL) ^ (2
                                                                                                  * (v89 ^ 0xBC15F70EF28612CLL)) & 0xFB8A297F1C07ABDCLL;
  v91 = v90 ^ 0x88A29010400A845;
  v92 = (v89 ^ 0xEB43776FEB2FE0ECLL) & (2 * (v89 & 0xF04B760FF32FCAF1)) ^ v89 & 0xF04B760FF32FCAF1;
  v93 = (v90 ^ 0xC300007E18070388) & (4 * v92) ^ v92;
  v94 = ((4 * v91) ^ 0xEE28A5FC701EAF74) & v91 ^ (4 * v91) & 0xFB8A297F1C07ABDCLL;
  v95 = ((16 * (v94 ^ 0x118208030C010089)) ^ 0xB8A297F1C07ABDD0) & (v94 ^ 0x118208030C010089) ^ (16 * (v94 ^ 0x118208030C010089)) & 0xFB8A297F1C07ABD0;
  v96 = (v95 ^ 0xB88201710002A900) & (((v94 ^ 0xEA08217C1006AB50) & (16 * v93) ^ v93) << 8) ^ (v94 ^ 0xEA08217C1006AB50) & (16 * v93) ^ v93;
  v97 = (((v95 ^ 0x4308280E1C05020DLL) << 8) ^ 0x8A297F1C07ABDD00) & (v95 ^ 0x4308280E1C05020DLL) ^ ((v95 ^ 0x4308280E1C05020DLL) << 8) & 0xFB8A297F1C07AB00;
  v98 = (v89 ^ (2
              * (((v96 ^ 0xFB8A297F1C07ABDDLL ^ (v97 ^ 0x8A08291C04030000) & (v96 << 16)) << 32) & 0x7B8A297F00000000 ^ v96 ^ 0xFB8A297F1C07ABDDLL ^ (v97 ^ 0x8A08291C04030000) & (v96 << 16) ^ (((v96 ^ 0xFB8A297F1C07ABDDLL ^ (v97 ^ 0x8A08291C04030000) & (v96 << 16)) << 32) ^ 0x1C07ABDD00000000) & (((v97 ^ 0x71820063180422DDLL) << 16) & 0x7B8A297F00000000 ^ 0x5280217800000000 ^ (((v97 ^ 0x71820063180422DDLL) << 16) ^ 0x297F1C0700000000) & (v97 ^ 0x71820063180422DDLL))))) >> 8;
  v99 = v89
      - (((v98 ^ 0x37569449FC0CBC0BLL) + 0x8D83301E2546868) ^ ((v98 ^ 0x6F5313596C2F7A20) + 0x50DDB4117277AE4DLL) ^ ((v98 ^ 0x5832DC66DBE8E6B6) + 0x67BC7B2EC5B032DBLL));
  v100 = ((v99 - 0x7123AFCECFCD7BFFLL) ^ 0xF382B21BFBA2C795) & (2
                                                                * ((v99 - 0x7123AFCECFCD7BFFLL) & 0xFA0ABA43FBAAC7D6)) ^ (v99 - 0x7123AFCECFCD7BFFLL) & 0xFA0ABA43FBAAC7D6;
  v101 = ((2 * ((v99 - 0x7123AFCECFCD7BFFLL) ^ 0x2392A699AEF3C5B1)) ^ 0xB33039B4AAB204CELL) & ((v99
                                                                                                - 0x7123AFCECFCD7BFFLL) ^ 0x2392A699AEF3C5B1) ^ (2 * ((v99 - 0x7123AFCECFCD7BFFLL) ^ 0x2392A699AEF3C5B1)) & 0xD9981CDA55590266;
  v102 = ((4 * (v101 ^ 0x4888044A55490221)) ^ 0x666073695564099CLL) & (v101 ^ 0x4888044A55490221) ^ (4 * (v101 ^ 0x4888044A55490221)) & 0xD9981CDA55590264;
  v103 = (v102 ^ 0x4000104855400000) & (16 * ((v101 ^ 0x9010181000100040) & (4 * v100) ^ v100)) ^ (v101 ^ 0x9010181000100040) & (4 * v100) ^ v100;
  v104 = ((16 * (v102 ^ 0x99980C9200190263)) ^ 0x9981CDA555902670) & (v102 ^ 0x99980C9200190263) ^ (16 * (v102 ^ 0x99980C9200190263)) & 0xD9981CDA55590260;
  v105 = (v104 ^ 0x99800C8055100200) & (v103 << 8) ^ v103;
  v106 = (((v104 ^ 0x4018105A00490007) << 8) ^ 0x981CDA5559026700) & (v104 ^ 0x4018105A00490007) ^ ((v104 ^ 0x4018105A00490007) << 8) & 0xD9981CDA55590200;
  v107 = v105 ^ 0xD9981CDA55590267 ^ (v106 ^ 0x9818185051000000) & (v105 << 16);
  v108 = (v99 - 0x7123AFCECFCD7BFFLL) ^ (2
                                       * ((v107 << 32) & 0x59981CDA00000000 ^ v107 ^ ((v107 << 32) ^ 0x5559026700000000) & (((v106 ^ 0x4180048A04590067) << 16) & 0x59981CDA00000000 ^ 0x4100088200000000 ^ (((v106 ^ 0x4180048A04590067) << 16) ^ 0x1CDA555900000000) & (v106 ^ 0x4180048A04590067))));
  v109 = v13
       + 0x735FDAB96A775781
       + (((v108 ^ v56 ^ 0xFF1F864ED95E9BCELL) - 0x6A25FF119AAE1D36) ^ ((v108 ^ v56 ^ 0x259576150A12DE6CLL)
                                                                        + 0x4F50F0B5B61DA76CLL) ^ ((v108 ^ v56 ^ 0x735939CD7C5BAE64)
                                                                                                 + 0x199CBF6DC054D764));
  v110 = (v109 ^ 0x3D241FBCEC99E1E8) & (2 * (v109 & 0xBC201FC0CD1DC9EDLL)) ^ v109 & 0xBC201FC0CD1DC9EDLL;
  v111 = ((2 * (v109 ^ 0x3D64323D7CB2723ALL)) ^ 0x2885BFB635F77AELL) & (v109 ^ 0x3D64323D7CB2723ALL) ^ (2 * (v109 ^ 0x3D64323D7CB2723ALL)) & 0x81442DFDB1AFBBD6;
  v112 = ((4 * (v111 ^ 0x8144240490A08851)) ^ 0x510B7F6C6BEEF5CLL) & (v111 ^ 0x8144240490A08851) ^ (4 * (v111 ^ 0x8144240490A08851)) & 0x81442DFDB1AFBBD4;
  v113 = (v112 ^ 0x10025F480AEAB50) & (16 * ((v111 ^ 0x901200F2384) & (4 * v110) ^ v110)) ^ (v111 ^ 0x901200F2384) & (4 * v110) ^ v110;
  v114 = ((16 * (v112 ^ 0x8044080931011083)) ^ 0x1442DFDB1AFBBD70) & (v112 ^ 0x8044080931011083) ^ (16 * (v112 ^ 0x8044080931011083)) & 0x81442DFDB1AFBBD0;
  v115 = (v114 ^ 0x400DD910ABB900) & (v113 << 8) ^ v113;
  v116 = (((v114 ^ 0x81042024A1040287) << 8) ^ 0x442DFDB1AFBBD700) & (v114 ^ 0x81042024A1040287) ^ ((v114 ^ 0x81042024A1040287) << 8) & 0x81442DFDB1AFBB00;
  v117 = v115 ^ 0x81442DFDB1AFBBD7 ^ (v116 ^ 0x42DB1A1AB0000) & (v115 << 16);
  v118 = (v109 ^ (2
                * ((v117 << 32) & 0x1442DFD00000000 ^ v117 ^ ((v117 << 32) ^ 0x31AFBBD700000000) & (((v116 ^ 0x8140004C100428D7) << 16) & 0x1442DFD00000000 ^ 0xC5000000000 ^ (((v116 ^ 0x8140004C100428D7) << 16) ^ 0x2DFDB1AF00000000) & (v116 ^ 0x8140004C100428D7))))) >> 32;
  v119 = v109
       - (((v118 ^ 0x65AFE4B87AB56F61) - 0x7D6DB110E0AD8EB1) ^ ((v118 ^ 0x1F1AE5C47C241581) - 0x7D8B06CE63CF451) ^ ((v118 ^ 0x7AB5017CBA316D71) - 0x627754D420298CA1));
  v120 = ((v119 - 0x2E57E8ADBB0BEE90) ^ 0x853530B5617C8139) & (2
                                                                 * ((v119 - 0x2E57E8ADBB0BEE90) & 0xD1B5B2C66170C23CLL)) ^ (v119 - 0x2E57E8ADBB0BEE90) & 0xD1B5B2C66170C23CLL;
  v121 = ((2 * ((v119 - 0x2E57E8ADBB0BEE90) ^ 0x261450B5A37C0571)) ^ 0xEF43C4E784198E9ALL) & ((v119
                                                                                                 - 0x2E57E8ADBB0BEE90) ^ 0x261450B5A37C0571) ^ (2 * ((v119 - 0x2E57E8ADBB0BEE90) ^ 0x261450B5A37C0571)) & 0xF7A1E273C20CC74CLL;
  v122 = v121 ^ 0x10A0221042044145;
  v123 = (v121 ^ 0xC701C02380000000) & (4 * v120) ^ v120;
  v124 = ((4 * v122) ^ 0xDE8789CF08331D34) & v122 ^ (4 * v122) & 0xF7A1E273C20CC74CLL;
  v125 = (v124 ^ 0xD681804300000500) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0x21206230C20CC249)) ^ 0x7A1E273C20CC74D0) & (v124 ^ 0x21206230C20CC249) ^ (16 * (v124 ^ 0x21206230C20CC249)) & 0xF7A1E273C20CC740;
  v127 = (v126 ^ 0x72002230000C4400) & (v125 << 8) ^ v125;
  v128 = (((v126 ^ 0x85A1C043C200830DLL) << 8) ^ 0xA1E273C20CC74D00) & (v126 ^ 0x85A1C043C200830DLL) ^ ((v126 ^ 0x85A1C043C200830DLL) << 8) & 0xF7A1E273C20CC700;
  v129 = v127 ^ 0xF7A1E273C20CC74DLL ^ (v128 ^ 0xA1A0624200040000) & (v127 << 16);
  v130 = ((v119 - 0x2E57E8ADBB0BEE90) ^ (2
                                         * ((v129 << 32) & 0x77A1E27300000000 ^ v129 ^ ((v129 << 32) ^ 0x420CC74D00000000) & (((v128 ^ 0x56018031C208824DLL) << 16) & 0x77A1E27300000000 ^ 0x1580207300000000 ^ (((v128 ^ 0x56018031C208824DLL) << 16) ^ 0x6273C20C00000000) & (v128 ^ 0x56018031C208824DLL))))) >> 16;
  v131 = v119
       + 0x32679AAB23B446A8
       + (((v130 ^ 0xA75C92E276F6F40CLL) + 0x3D7E1582FE65F9BLL) ^ ((v130 ^ 0x2FB678453EAEFC5ELL) - 0x74C2F4009841A837) ^ ((v130 ^ 0x88EA5050BAFBED3BLL) + 0x2C6123EAE3EB46AELL));
  v132 = (v131 ^ 0xEA61459F86F83C71) & (2 * (v131 & 0xCC6A661FD6FD3E04)) ^ v131 & 0xCC6A661FD6FD3E04;
  v133 = ((2 * (v131 ^ 0xE2E501BE067A2071)) ^ 0x5D1ECF43A10E3CEALL) & (v131 ^ 0xE2E501BE067A2071) ^ (2 * (v131 ^ 0xE2E501BE067A2071)) & 0x2E8F67A1D0871E74;
  v134 = ((4 * (v133 ^ 0x228120A050810215)) ^ 0xBA3D9E87421C79D4) & (v133 ^ 0x228120A050810215) ^ (4 * (v133 ^ 0x228120A050810215)) & 0x2E8F67A1D0871E74;
  v135 = (v134 ^ 0x2A0D068140041840) & (16 * ((v133 ^ 0xA000180041820) & (4 * v132) ^ v132)) ^ (v133 ^ 0xA000180041820) & (4 * v132) ^ v132;
  v136 = ((16 * (v134 ^ 0x482612090830621)) ^ 0xE8F67A1D0871E750) & (v134 ^ 0x482612090830621) ^ (16 * (v134 ^ 0x482612090830621)) & 0x2E8F67A1D0871E70;
  v137 = (v136 ^ 0x2886620100010600) & (v135 << 8) ^ v135;
  v138 = (((v136 ^ 0x60905A0D0861825) << 8) ^ 0x8F67A1D0871E7500) & (v136 ^ 0x60905A0D0861825) ^ ((v136 ^ 0x60905A0D0861825) << 8) & 0x2E8F67A1D0871E00;
  v139 = v137 ^ 0x2E8F67A1D0871E75 ^ (v138 ^ 0xE07218080060000) & (v137 << 16);
  v140 = (v131 ^ (2
                * ((v139 << 32) & 0x2E8F67A100000000 ^ v139 ^ ((v139 << 32) ^ 0x50871E7500000000) & (((v138 ^ 0x2088462150810A75) << 16) & 0x2E8F67A100000000 ^ 0x80E272000000000 ^ (((v138 ^ 0x2088462150810A75) << 16) ^ 0x67A1D08700000000) & (v138 ^ 0x2088462150810A75))))) >> 8;
  LODWORD(v13) = v131
               - (((v140 ^ 0x5B6CF7AF) - 1438503764) ^ ((v140 ^ 0x17918C64) - 423667871) ^ ((v140 ^ 0x528A88C9)
                                                                                          - 1549511730));
  LODWORD(v122) = ((2 * ((2 * (a3 & 1)) | 0xB4081804)) | 0xB12CCC0A) - ((2 * (a3 & 1)) | 0xB4081804) - 1486251525;
  v141 = ((v122 ^ 0x865B1E16) + 1359632805) ^ ((v122 ^ 0x2771B7B0) - 266276861) ^ ((v122 ^ 0x4DB4D7A7) - 1696231402);
  LODWORD(v122) = (a3 ^ 0x3FF220C6) & (2 * (a3 & 0xBFF8B0E6)) ^ a3 & 0xBFF8B0E6;
  LODWORD(v140) = ((2 * (a3 ^ 0x75220182)) ^ 0x95B562C8) & (a3 ^ 0x75220182) ^ (2 * (a3 ^ 0x75220182)) & 0xCADAB164;
  LODWORD(v54) = v140 ^ 0x4A4A9124;
  LODWORD(v140) = (v140 ^ 0x80800000) & (4 * v122) ^ v122;
  LODWORD(v122) = ((4 * v54) ^ 0x2B6AC590) & v54 ^ (4 * v54) & 0xCADAB164;
  LODWORD(v140) = (v122 ^ 0xA4A8100) & (16 * v140) ^ v140;
  LODWORD(v122) = ((16 * (v122 ^ 0xC0903064)) ^ 0xADAB1640) & (v122 ^ 0xC0903064) ^ (16 * (v122 ^ 0xC0903064)) & 0xCADAB160;
  LODWORD(v140) = v140 ^ 0xCADAB164 ^ (v122 ^ 0x888A1000) & ((_DWORD)v140 << 8);
  LODWORD(v140) = a3 ^ (2
                      * (((_DWORD)v140 << 16) & 0x4ADA0000 ^ v140 ^ (((_DWORD)v140 << 16) ^ 0x31640000) & (((v122 ^ 0x4250A124) << 8) & 0x4ADA0000 ^ 0x4A0000 ^ (((v122 ^ 0x4250A124) << 8) ^ 0x5AB10000) & (v122 ^ 0x4250A124))));
  v142 = a1 ^ 0xD90B5054 ^ v68 ^ v108 ^ ((_DWORD)v13
                                                                   - 1440530623
                                                                   - ((2 * ((_DWORD)v13 - 1452281345)) & 0x166AB88)
                                                                   + 2178);
  LODWORD(v134) = (((v140 ^ 0xB0B91CC9) + 471487835) ^ ((v140 ^ 0xE940D9BC) + 1172541488) ^ ((v140 ^ 0x7334175A)
                                                                                           - 543727926))
                + v141
                + 698080387;
  LODWORD(v122) = v11 ^ (v134 < 0xEBD9B1F4);
  v143 = v134 < v10;
  if ((_DWORD)v122)
    v143 = v11;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((31485 * !v143) ^ v12)))(v142);
}

uint64_t sub_100A0C0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v40;

  v7 = STACK[0x6990];
  if ((STACK[0x6990] & 1) != 0)
    v8 = STACK[0x6870];
  else
    v8 = STACK[0x6A60];
  if ((v7 & 1) != 0)
    v9 = STACK[0x67D0];
  else
    v9 = STACK[0x68B0];
  v10 = STACK[0x6648];
  if ((v7 & 1) == 0)
    v10 = STACK[0x6A70];
  v11 = (STACK[0x6990] & 2) == 0;
  v12 = STACK[0x67C0];
  if ((STACK[0x6990] & 2) == 0)
    v12 = STACK[0x67B0];
  LODWORD(STACK[0x6640]) = v12;
  v13 = STACK[0x67A0];
  if (!v11)
    v13 = STACK[0x6790];
  LODWORD(STACK[0x67A0]) = v13;
  v14 = STACK[0x6720];
  if (v11)
    v14 = STACK[0x6710];
  LODWORD(STACK[0x67B0]) = v14;
  v15 = STACK[0x6708];
  if (v11)
    v15 = STACK[0x6700];
  LODWORD(STACK[0x67C0]) = v15;
  v16 = STACK[0x66E8];
  if (!v11)
    v16 = STACK[0x66E0];
  LODWORD(STACK[0x67D0]) = v16;
  v17 = STACK[0x66D8];
  if (v11)
    v17 = STACK[0x66D0];
  LODWORD(STACK[0x66D0]) = v17;
  v18 = STACK[0x66C8];
  if (!v11)
    v18 = STACK[0x66C0];
  LODWORD(STACK[0x65F0]) = v18;
  v19 = STACK[0x66B8];
  if (v11)
    v19 = STACK[0x66B0];
  LODWORD(STACK[0x65A8]) = v19;
  LODWORD(STACK[0x6700]) = v8;
  LODWORD(STACK[0x66E0]) = v9;
  if (v11)
    v20 = v8;
  else
    v20 = v9;
  LODWORD(STACK[0x68B0]) = v20;
  v21 = STACK[0x6780];
  LODWORD(STACK[0x66D8]) = v10;
  if (v11)
    v21 = v10;
  LODWORD(STACK[0x65B8]) = v21;
  v22 = STACK[0x68A0];
  if (!v11)
    v22 = STACK[0x6860];
  LODWORD(STACK[0x65D0]) = v22;
  v23 = STACK[0x6750];
  if (v11)
    v23 = STACK[0x6740];
  LODWORD(STACK[0x66B0]) = v23;
  v24 = (STACK[0x66F0] & 1) == 0;
  v25 = STACK[0x6590];
  if ((STACK[0x66F0] & 1) == 0)
    v25 = STACK[0x6588];
  LODWORD(STACK[0x6870]) = v25;
  if (v24)
    v26 = STACK[0x6570];
  else
    v26 = STACK[0x6568];
  if (v24)
    v27 = STACK[0x6560];
  else
    v27 = STACK[0x64D8];
  if (v24)
    v28 = STACK[0x6550];
  else
    v28 = STACK[0x64B0];
  if (v24)
    v29 = STACK[0x64E0];
  else
    v29 = STACK[0x6528];
  v30 = (STACK[0x6980] & 2) == 0;
  v31 = STACK[0x66A8];
  if ((STACK[0x6980] & 2) != 0)
    v31 = STACK[0x6690];
  LODWORD(STACK[0x6648]) = v31;
  v32 = STACK[0x64F0];
  if (v30)
    v32 = STACK[0x64E8];
  LODWORD(STACK[0x6550]) = v32;
  v33 = (v6 + 819170295) & 0xCF2C73FF;
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6730]);
  v34 = STACK[0x6688];
  if (v30)
    v34 = STACK[0x6680];
  LODWORD(STACK[0x66A8]) = v34;
  v35 = STACK[0x6580];
  if (v30)
    v35 = STACK[0x6578];
  LODWORD(STACK[0x63F0]) = v35;
  LODWORD(STACK[0x6720]) = v26;
  LODWORD(STACK[0x6710]) = v27;
  if (v30)
    v36 = v27;
  else
    v36 = v26;
  LODWORD(STACK[0x63F8]) = v36;
  v37 = STACK[0x6500];
  if (v30)
    v37 = STACK[0x64F8];
  LODWORD(STACK[0x6400]) = v37;
  v38 = STACK[0x6920];
  LODWORD(STACK[0x6AB0]) = v33;
  STACK[0x6A90] = STACK[0xDB28];
  LODWORD(STACK[0x6A60]) = (((v38 ^ 0x2978B9E1) - 41813186) ^ ((v38 ^ 0x94FA7891) + 1073953358) ^ ((v38 ^ 0xA49D71EB)
                                                                                                 + 1885602125
                                                                                                 + v33))
                         + 2101366354;
  v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6)
                                                                                              - 8);
  LODWORD(STACK[0x6708]) = v28;
  LODWORD(STACK[0x66E8]) = v29;
  if (v30)
    v40 = v29;
  else
    v40 = v28;
  LODWORD(STACK[0x6408]) = v40;
  STACK[0x6A70] = STACK[0xDB08];
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x68F0]) ^ 0xE6DE3C67;
  return v39(a1, a2, a3, a4, a5, a6, 1260863642);
}

uint64_t sub_100A0C638(int a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL4 v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  int v151;

  v11 = STACK[0x6A60];
  v12 = LODWORD(STACK[0x6A60]) < a7;
  v13 = STACK[0x6AB0];
  v14 = (LODWORD(STACK[0x6AB0]) - 8244);
  v15 = (a3 | ((unint64_t)(a3 < a5) << 32)) + 0x50BE3F43D247F9E0;
  STACK[0x6AC0] = v14;
  v16 = 8 * (v14 + v15) + 0x7A0E05DF6D852A78;
  v17 = *(_QWORD *)(STACK[0x6A90] + v16);
  v18 = v17 * v8 - 0x29E94FE0C77A0587;
  v19 = (v18 ^ 0x21E90FC8D67191B7) & (2 * (v18 & 0x29E94FE0C77A0587)) ^ v18 & 0x29E94FE0C77A0587;
  v20 = ((2 * (v18 ^ 0x62E9954852C59BBBLL)) ^ 0x9601B5512B7F3C78) & (v18 ^ 0x62E9954852C59BBBLL) ^ (2 * (v18 ^ 0x62E9954852C59BBBLL)) & 0x4B00DAA895BF9E3CLL;
  v21 = v20 ^ 0x49004AA894808204;
  v22 = (v20 ^ 0x200100001381C38) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0x2C036AA256FE78F0) & v21 ^ (4 * v21) & 0x4B00DAA895BF9E3CLL;
  v24 = ((16 * (v23 ^ 0x430090088101860CLL)) ^ 0xB00DAA895BF9E3C0) & (v23 ^ 0x430090088101860CLL) ^ (16 * (v23 ^ 0x430090088101860CLL)) & 0x4B00DAA895BF9E30;
  v25 = (v24 ^ 0x8A8811B98200) & (((v23 ^ 0x8004AA014BE1830) & (16 * v22) ^ v22) << 8) ^ (v23 ^ 0x8004AA014BE1830) & (16 * v22) ^ v22;
  v26 = (((v24 ^ 0x4B00502084061C3CLL) << 8) ^ 0xDAA895BF9E3C00) & (v24 ^ 0x4B00502084061C3CLL) ^ ((v24 ^ 0x4B00502084061C3CLL) << 8) & 0x4B00DAA895BF9E00;
  v27 = v25 ^ 0x4B00DAA895BF9E3CLL ^ (v26 ^ 0x8880959E0000) & (v25 << 16);
  v28 = v18 ^ (2
             * ((v27 << 32) & 0x4B00DAA800000000 ^ v27 ^ ((v27 << 32) ^ 0x15BF9E3C00000000) & (((v26 ^ 0x4B0052280021823CLL) << 16) & 0x4B00DAA800000000 ^ 0x1004A0000000000 ^ (((v26 ^ 0x4B0052280021823CLL) << 16) ^ 0x5AA895BF00000000) & (v26 ^ 0x4B0052280021823CLL))));
  v29 = v15
      - 0x2036387243D0A801
      + (((v28 ^ a6 ^ 0xB4709ACA73F62116) - 0x22FB6119F8D27034) ^ ((v28 ^ a6 ^ 0x2E6F2465F9E5BA21)
                                                                     + 0x471B20498D3E14FDLL) ^ ((v28 ^ a6 ^ 0x27F6704E6616A2C8)
                                                                                              + 0x4E82746212CD0C16));
  v30 = ((2 * (v29 ^ 0xFAF0370CF6885EB0)) ^ 0x5432D8DC5532A8) & (v29 ^ 0xFAF0370CF6885EB0) ^ (2
                                                                                                  * (v29 ^ 0xFAF0370CF6885EB0)) & 0x2A196C6E2A9954;
  v31 = (v29 ^ 0xFAD02F4CD688D7F0) & (2 * (v29 & 0xFADA2E6098A2C7E4)) ^ v29 & 0xFADA2E6098A2C7E4;
  v32 = v30 ^ 0x2A0924222A8954;
  v33 = (v30 ^ 0x100044001000) & (4 * v31) ^ v31;
  v34 = ((4 * v32) ^ 0xA865B1B8AA6550) & v32 ^ (4 * v32) & 0x2A196C6E2A9954;
  v35 = (v34 ^ 0x280120282A0140) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x2184C46009804)) ^ 0x2A196C6E2A99540) & (v34 ^ 0x2184C46009804) ^ (16
                                                                                              * (v34 ^ 0x2184C46009804)) & 0x2A196C6E2A9950;
  v37 = (v36 ^ 0x20104462289100) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0xA09280C020814) << 8) ^ 0x2A196C6E2A995400) & (v36 ^ 0xA09280C020814) ^ ((v36 ^ 0xA09280C020814) << 8) & 0x2A196C6E2A9900;
  v39 = v37 ^ 0x2A196C6E2A9954 ^ (v38 ^ 0x8086C2A080000) & (v37 << 16);
  v40 = (v29 ^ (2
              * ((v39 << 32) & 0x2A196C00000000 ^ v39 ^ ((v39 << 32) ^ 0x6E2A995400000000) & (((v38 ^ 0x22110044228954) << 16) & 0x2A196C00000000 ^ 0x2114400000000 ^ (((v38 ^ 0x22110044228954) << 16) ^ 0x196C6E2A00000000) & (v38 ^ 0x22110044228954))))) >> 32;
  v41 = v29
      - (((v40 ^ 0x5E4CA34DA6889803) - 0x1433F52E8AE490F3) ^ ((v40 ^ 0xD22370ED7DF30141) + 0x67A3D971AE60F64FLL) ^ ((v40 ^ 0x8C6FD3A021A1B772) + 0x39EF7A3CF232407ELL))
      - 0x6DDEFA85F2754A2CLL;
  v42 = (v41 ^ 0x9E3992622669CA41) & (2 * (v41 & 0x1E39D282B461EB50)) ^ v41 & 0x1E39D282B461EB50;
  v43 = ((2 * (v41 ^ 0xB63A166646694AE1)) ^ 0x500789C9E4114362) & (v41 ^ 0xB63A166646694AE1) ^ (2 * (v41 ^ 0xB63A166646694AE1)) & 0xA803C4E4F208A1B0;
  v44 = ((4 * (v43 ^ 0xA80044241208A091)) ^ 0xA00F1393C82286C4) & (v43 ^ 0xA80044241208A091) ^ (4 * (v43 ^ 0xA80044241208A091)) & 0xA803C4E4F208A1B0;
  v45 = (v44 ^ 0xA0030080C0008080) & (16 * ((v43 ^ 0x38000E0000100) & (4 * v42) ^ v42)) ^ (v43 ^ 0x38000E0000100) & (4 * v42) ^ v42;
  v46 = ((16 * (v44 ^ 0x800C46432082131)) ^ 0x803C4E4F208A1B10) & (v44 ^ 0x800C46432082131) ^ (16 * (v44 ^ 0x800C46432082131)) & 0xA803C4E4F208A1B0;
  v47 = (((v46 ^ 0x280380A0D200A0A1) << 8) ^ 0x3C4E4F208A1B100) & (v46 ^ 0x280380A0D200A0A1) ^ ((v46 ^ 0x280380A0D200A0A1) << 8) & 0xA803C4E4F208A100;
  v48 = (v46 ^ 0x8000444420080100) & (v45 << 8) ^ v45 ^ 0xA803C4E4F208A1B1 ^ (v47 ^ 0xC4E000000000) & (((v46 ^ 0x8000444420080100) & (v45 << 8) ^ v45) << 16);
  v49 = (v41 ^ (2
              * ((v48 << 32) & 0x2803C4E400000000 ^ v48 ^ ((v48 << 32) ^ 0x7208A1B100000000) & (((v47 ^ 0xA8030004F20800B1) << 16) & 0x2803C4E400000000 ^ 0x280304E400000000 ^ (((v47 ^ 0xA8030004F20800B1) << 16) ^ 0x44E4F20800000000) & (v47 ^ 0xA8030004F20800B1))))) >> 16;
  v50 = v17 ^ v10;
  v51 = v41
      + 0x60DDF77C4A2D1C8DLL
      + (((v49 ^ 0x2FADA590EA6A52A2) + 0x1456EBCE49607946) ^ ((v49 ^ 0x15D190C08E035A91) + 0x2E2ADE9E2D097177) ^ ((v49 ^ 0x3A7C3B6F3E625843) + 0x18775319D6873A5));
  v52 = ((2 * (v51 ^ 0xE65F93FF23CAF1E4)) ^ 0xCE7E12B6A5F3459ELL) & (v51 ^ 0xE65F93FF23CAF1E4) ^ (2 * (v51 ^ 0xE65F93FF23CAF1E4)) & 0x673F095B52F9A2CELL;
  v53 = (v51 ^ 0xE45E92B761AA53A2) & (2 * (v51 & 0x81609AA47133532BLL)) ^ v51 & 0x81609AA47133532BLL;
  v54 = v52 ^ 0x210109495208A241;
  v55 = (v52 ^ 0x606001200D1008CLL) & (4 * v53) ^ v53;
  v56 = ((4 * v54) ^ 0x9CFC256D4BE68B3CLL) & v54 ^ (4 * v54) & 0x673F095B52F9A2CCLL;
  v57 = (v56 ^ 0x43C014942E08200) & (16 * v55) ^ v55;
  v58 = ((16 * (v56 ^ 0x63030812101920C3)) ^ 0x73F095B52F9A2CF0) & (v56 ^ 0x63030812101920C3) ^ (16 * (v56 ^ 0x63030812101920C3)) & 0x673F095B52F9A2C0;
  v59 = (v58 ^ 0x6330011102982000) & (v57 << 8) ^ v57;
  v60 = (((v58 ^ 0x40F084A5061820FLL) << 8) ^ 0x3F095B52F9A2CF00) & (v58 ^ 0x40F084A5061820FLL) ^ ((v58 ^ 0x40F084A5061820FLL) << 8) & 0x673F095B52F9A200;
  v61 = v59 ^ 0x673F095B52F9A2CFLL ^ (v60 ^ 0x2709095250A00000) & (v59 << 16);
  *(_QWORD *)(STACK[0x6A70] + v16) = v50;
  v62 = (v51 ^ (2
              * ((v61 << 32) & 0x673F095B00000000 ^ v61 ^ ((v61 << 32) ^ 0x52F9A2CF00000000) & (((v60 ^ 0x40360009025920CFLL) << 16) & 0x673F095B00000000 ^ 0x6624090200000000 ^ (((v60 ^ 0x40360009025920CFLL) << 16) ^ 0x95B52F900000000) & (v60 ^ 0x40360009025920CFuLL))))) >> 8;
  v63 = v28 ^ 0x7217E8FF6D85F95FLL;
  v64 = v51
      - (((v62 ^ 0x5DD8A6F812BA3B56) + 0x1E875C78E5690F75) ^ ((v62 ^ 0xF7F8DA3F5425FE37) - 0x4B58DF405C0935EALL) ^ ((v62 ^ 0xAAEB104FC24B0577) - 0x164B1530CA67CEAALL))
      + 0x3CDC4733CB528638;
  v65 = (v64 ^ 0xEEF8255FF858289ELL) & (2 * (v64 & 0xE0FA819FFC024D1CLL)) ^ v64 & 0xE0FA819FFC024D1CLL;
  v66 = ((2 * (v64 ^ 0x2E2D2570005C30AELL)) ^ 0x9DAF49DFF8BCFB64) & (v64 ^ 0x2E2D2570005C30AELL) ^ (2 * (v64 ^ 0x2E2D2570005C30AELL)) & 0xCED7A4EFFC5E7DB2;
  v67 = ((4 * (v66 ^ 0x4250A42004420492)) ^ 0x3B5E93BFF179F6C8) & (v66 ^ 0x4250A42004420492) ^ (4 * (v66 ^ 0x4250A42004420492)) & 0xCED7A4EFFC5E7DB0;
  v68 = v67 ^ 0xC48124400C060932;
  v69 = (v67 ^ 0xA5680AFF0587480) & (16 * ((v66 ^ 0x848600CFF0187820) & (4 * v65) ^ v65)) ^ (v66 ^ 0x848600CFF0187820) & (4 * v65) ^ v65;
  v70 = ((16 * v68) ^ 0xED7A4EFFC5E7DB20) & v68 ^ (16 * v68) & 0xCED7A4EFFC5E7DB0;
  v71 = (((v70 ^ 0x285A00038182492) << 8) ^ 0xD7A4EFFC5E7DB200) & (v70 ^ 0x285A00038182492) ^ ((v70 ^ 0x285A00038182492) << 8) & 0xCED7A4EFFC5E7D00;
  v72 = (v70 ^ 0xCC5204EFC4465900) & (v69 << 8) ^ v69 ^ 0xCED7A4EFFC5E7DB2 ^ (v71 ^ 0xC684A4EC5C5C0000) & (((v70 ^ 0xCC5204EFC4465900) & (v69 << 8) ^ v69) << 16);
  v73 = v64 ^ (2
             * ((v72 << 32) & 0x4ED7A4EF00000000 ^ v72 ^ ((v72 << 32) ^ 0x7C5E7DB200000000) & (((v71 ^ 0x8530003A0024DB2) << 16) & 0x4ED7A4EF00000000 ^ 0x4A1000A100000000 ^ (((v71 ^ 0x8530003A0024DB2) << 16) ^ 0x24EFFC5E00000000) & (v71 ^ 0x8530003A0024DB2))));
  v74 = v15
      + 0x20DF14B4E8930934
      + (((v73 ^ v63 ^ 0xF17554A667D0B386) + 0x26E825156B98F116) ^ ((v73 ^ v63 ^ 0x4F2A24C45B98D77)
                                                                      - 0x2C902C00B60E301BLL) ^ ((v73 ^ v63 ^ 0xDF8051F0A7574829)
                                                                                               + 0x81D2043AB1F0ABBLL));
  v75 = (v74 ^ 0xC2A7915D7B967155) & (2 * (v74 & 0x90C7D55D7BA77986)) ^ v74 & 0x90C7D55D7BA77986;
  v76 = ((2 * (v74 ^ 0xE22613C739D2915DLL)) ^ 0xE5C38D3484EBD1B6) & (v74 ^ 0xE22613C739D2915DLL) ^ (2 * (v74 ^ 0xE22613C739D2915DLL)) & 0x72E1C69A4275E8DALL;
  v77 = v76 ^ 0x1220428A42142849;
  v78 = (v76 ^ 0x400184100021C010) & (4 * v75) ^ v75;
  v79 = ((4 * v77) ^ 0xCB871A6909D7A36CLL) & v77 ^ (4 * v77) & 0x72E1C69A4275E8D8;
  v80 = (v79 ^ 0x428102080055A040) & (16 * v78) ^ v78;
  v81 = ((16 * (v79 ^ 0x3060C49242204893)) ^ 0x2E1C69A4275E8DB0) & (v79 ^ 0x3060C49242204893) ^ (16 * (v79 ^ 0x3060C49242204893)) & 0x72E1C69A4275E8D0;
  v82 = (v81 ^ 0x2200408002548800) & (v80 << 8) ^ v80;
  v83 = (((v81 ^ 0x50E1861A4021604BLL) << 8) ^ 0xE1C69A4275E8DB00) & (v81 ^ 0x50E1861A4021604BLL) ^ ((v81 ^ 0x50E1861A4021604BLL) << 8) & 0x72E1C69A4275E800;
  v84 = v82 ^ 0x72E1C69A4275E8DBLL ^ (v83 ^ 0x60C0820240600000) & (v82 << 16);
  v85 = (v74 ^ (2
              * ((v84 << 32) & 0x72E1C69A00000000 ^ v84 ^ ((v84 << 32) ^ 0x4275E8DB00000000) & (((v83 ^ 0x12214498021520DBLL) << 16) & 0x72E1C69A00000000 ^ 0x3061848A00000000 ^ (((v83 ^ 0x12214498021520DBLL) << 16) ^ 0x469A427500000000) & (v83 ^ 0x12214498021520DBLL))))) >> 32;
  v86 = v74
      - (((v85 ^ 0x236EDC4B464B5319) + 0x4C616B52D636A4FFLL) ^ ((v85 ^ 0x795D38D4B0840FF0) + 0x16528FCD20F9F818) ^ ((v85 ^ 0x5A33E49F070885B4) + 0x353C538697757254))
      + 0x1A9D60CF63A1233FLL;
  v87 = (v86 ^ 0xF5B823B779FE91EBLL) & (2 * (v86 & 0xE53A2BA779C08502)) ^ v86 & 0xE53A2BA779C08502;
  v88 = ((2 * (v86 ^ 0x35A870FF5A7E99EFLL)) ^ 0xA124B6B0477C39DALL) & (v86 ^ 0x35A870FF5A7E99EFLL) ^ (2 * (v86 ^ 0x35A870FF5A7E99EFLL)) & v7;
  v89 = ((4 * (v88 ^ 0x5092494820820425)) ^ 0x42496D608EF873B4) & (v88 ^ 0x5092494820820425) ^ (4 * (v88 ^ 0x5092494820820425)) & v7;
  v90 = (v89 ^ 0x4000494002B810A0) & (16 * ((v88 ^ 0x8000121003041808) & (4 * v87) ^ v87)) ^ (v88 ^ 0x8000121003041808) & (4 * v87) ^ v87;
  v91 = ((16 * (v89 ^ 0x9092121821060C49)) ^ 0x925B5823BE1CED0) & (v89 ^ 0x9092121821060C49) ^ (16 * (v89 ^ 0x9092121821060C49)) & (v7 - 12);
  v92 = (v91 ^ 0x110023A00C00) & (v90 << 8) ^ v90;
  v93 = (((v91 ^ 0xD0924A58001E102DLL) << 8) ^ 0x925B5823BE1CED00) & (v91 ^ 0xD0924A58001E102DLL) ^ ((v91 ^ 0xD0924A58001E102DLL) << 8) & (v7 - 236);
  v94 = v92 ^ (v7 + 1) ^ (v93 ^ 0x90125800221C0000) & (v92 << 16);
  v95 = (v86 ^ (2
              * ((v94 << 32) & 0x50925B5800000000 ^ v94 ^ ((v94 << 32) ^ 0x23BE1CED00000000) & (((v93 ^ 0x4080035801A210EDLL) << 16) & 0x50925B5800000000 ^ 0x82584000000000 ^ (((v93 ^ 0x4080035801A210EDLL) << 16) ^ 0x5B5823BE00000000) & (v93 ^ 0x4080035801A210EDLL))))) >> 16;
  v96 = v86
      + 0x2432C0D43F7F635ELL
      + (((v95 ^ 0x8B44319EB73DA571) - 0x45DA0DDCA1BEF801) ^ ((v95 ^ 0xB836EF5D5016CC67) - 0x76A8D31F46959117) ^ ((v95 ^ 0x33729BF94AAC57AALL) + 0x2135844A3D0F526));
  v97 = (v96 ^ 0x8FB5E56BF025E578) & (2 * (v96 & 0x8FA5E44BF5458570)) ^ v96 & 0x8FA5E44BF5458570;
  v98 = ((2 * (v96 ^ 0x99FE6DEF522FEFF8)) ^ 0x2CB713494ED4D510) & (v96 ^ 0x99FE6DEF522FEFF8) ^ (2 * (v96 ^ 0x99FE6DEF522FEFF8)) & 0x165B89A4A76A6A88;
  v99 = v98 ^ 0x124888A4A12A2A88;
  v100 = (v98 ^ 0x413010006000000) & (4 * v97) ^ v97;
  v101 = ((4 * v99) ^ 0x596E26929DA9AA20) & v99 ^ (4 * v99) & 0x165B89A4A76A6A88;
  v102 = (v101 ^ 0x104A008085282A00) & (16 * v100) ^ v100;
  v103 = ((16 * (v101 ^ 0x611892422424088)) ^ 0x65B89A4A76A6A880) & (v101 ^ 0x611892422424088) ^ (16 * (v101 ^ 0x611892422424088)) & 0x165B89A4A76A6A80;
  v104 = (((v103 ^ 0x124301A481484208) << 8) ^ 0x5B89A4A76A6A8800) & (v103 ^ 0x124301A481484208) ^ ((v103 ^ 0x124301A481484208) << 8) & 0x165B89A4A76A6A00;
  v105 = (v103 ^ 0x418880026222800) & (v102 << 8) ^ v102 ^ 0x165B89A4A76A6A88 ^ (v104 ^ 0x120980A4226A0000) & (((v103 ^ 0x418880026222800) & (v102 << 8) ^ v102) << 16);
  v106 = (v96 ^ (2
               * ((v105 << 32) & 0x165B89A400000000 ^ v105 ^ ((v105 << 32) ^ 0x276A6A8800000000) & (((v104 ^ 0x452090085006288) << 16) & 0x165B89A400000000 ^ 0x165B088400000000 ^ (((v104 ^ 0x452090085006288) << 16) ^ 0x9A4A76A00000000) & (v104 ^ 0x452090085006288))))) >> 8;
  v107 = v96
       - (((v106 ^ 0xE3A87057F3F527A6) - 0x72C153206957C2F9) ^ ((v106 ^ 0x7E88851410590254) + 0x101E599C750418F5) ^ ((v106 ^ 0x9D8F73A5E117B4A2) - 0xCE650D27BB551FDLL))
       + 0x67E5DC0CA61FE1E7;
  v108 = (v107 ^ 0xCED0FAC29895B36ELL) & (2 * (v107 & 0xEEDAFAD49A25BB6ELL)) ^ v107 & 0xEEDAFAD49A25BB6ELL;
  v109 = ((2 * (v107 ^ 0x16C02F4288D49122)) ^ 0xF035AB2C25E25498) & (v107 ^ 0x16C02F4288D49122) ^ (2 * (v107 ^ 0x16C02F4288D49122)) & 0xF81AD59612F12A4CLL;
  v110 = ((4 * (v109 ^ 0x80A549212112A44)) ^ 0xE06B56584BC4A930) & (v109 ^ 0x80A549212112A44) ^ (4 * (v109 ^ 0x80A549212112A44)) & 0xF81AD59612F12A4CLL;
  v111 = (v110 ^ 0xE00A541002C02800) & (16 * ((v109 ^ 0xF010810400A00008) & (4 * v108) ^ v108)) ^ (v109 ^ 0xF010810400A00008) & (4 * v108) ^ v108;
  v112 = ((16 * (v110 ^ 0x181081861031024CLL)) ^ 0x81AD59612F12A4C0) & (v110 ^ 0x181081861031024CLL) ^ (16 * (v110 ^ 0x181081861031024CLL)) & 0xF81AD59612F12A40;
  v113 = (v112 ^ 0x8008510002102000) & (v111 << 8) ^ v111;
  v114 = (((v112 ^ 0x7812849610E10A0CLL) << 8) ^ 0x1AD59612F12A4C00) & (v112 ^ 0x7812849610E10A0CLL) ^ ((v112 ^ 0x7812849610E10A0CLL) << 8) & 0xF81AD59612F12A00;
  v115 = v113 ^ 0xF81AD59612F12A4CLL ^ (v114 ^ 0x1810941210200000) & (v113 << 16);
  v116 = v107 ^ (2
               * ((v115 << 32) & 0x781AD59600000000 ^ v115 ^ ((v115 << 32) ^ 0x12F12A4C00000000) & (((v114 ^ 0xE00A418402D1224CLL) << 16) & 0x781AD59600000000 ^ 0x2808C50600000000 ^ (((v114 ^ 0xE00A418402D1224CLL) << 16) ^ 0x559612F100000000) & (v114 ^ 0xE00A418402D1224CLL))));
  v117 = v15
       + 0x74F73A1B867FFDBDLL
       + (((v116 ^ v63 ^ 0xEBB406275E14EAB0) + 0x503E5F7B17EB16BDLL) ^ ((v116 ^ v63 ^ 0xC8C5CE5C55C78A54)
                                                                        + 0x734F97001C387659) ^ ((v116 ^ v63 ^ 0xD240BF9535944FB2)
                                                                                                 + 0x69CAE6C97C6BB3BFLL));
  v118 = (v117 ^ 0xEF2E17E9CE67C1CFLL) & (2 * (v117 & 0xEF8F57EDEF77E5EELL)) ^ v117 & 0xEF8F57EDEF77E5EELL;
  v119 = ((2 * (v117 ^ 0xE23095B9DAE9C0DBLL)) ^ 0x1B7F84A86B3C4A6ALL) & (v117 ^ 0xE23095B9DAE9C0DBLL) ^ (2 * (v117 ^ 0xE23095B9DAE9C0DBLL)) & 0xDBFC254359E2534;
  v120 = (v119 ^ 0x83F8000211C0020) & (4 * v118) ^ v118;
  v121 = ((4 * (v119 ^ 0x480425414822515)) ^ 0x36FF0950D67894D4) & (v119 ^ 0x480425414822515) ^ (4 * (v119 ^ 0x480425414822515)) & 0xDBFC254359E2534;
  v122 = (v121 ^ 0x4BF005014180400) & (16 * v120);
  v123 = ((16 * (v121 ^ 0x900C20421862121)) ^ 0xDBFC254359E25350) & (v121 ^ 0x900C20421862121) ^ (16 * (v121 ^ 0x900C20421862121)) & 0xDBFC254359E2530;
  v124 = v123 ^ 0x403C214241C2425;
  v125 = (v123 ^ 0x9BC004011820100) & ((v122 ^ v120) << 8) ^ v122 ^ v120;
  v126 = ((v124 << 8) ^ 0xBFC254359E253500) & v124 ^ (v124 << 8) & 0xDBFC254359E2500;
  v127 = v125 ^ 0xDBFC254359E2535 ^ (v126 ^ 0xD82401414040000) & (v125 << 16);
  v128 = (v117 ^ (2
                * ((v127 << 32) & 0xDBFC25400000000 ^ v127 ^ ((v127 << 32) ^ 0x359E253500000000) & (((v126 ^ 0x3D8240219A0035) << 16) & 0xDBFC25400000000 ^ 0xDABC24000000000 ^ (((v126 ^ 0x3D8240219A0035) << 16) ^ 0x4254359E00000000) & (v126 ^ 0x3D8240219A0035))))) >> 32;
  v129 = v117
       - (((v128 ^ 0x230D124F244335A8) - 0x2F329E15DEEE0F53) ^ ((v128 ^ 0xD414484E1583E21FLL) + 0x27D43BEB10D1271CLL) ^ ((v128 ^ 0xF7195A01CE0C04DALL) + 0x4D929A4CB5EC1DFLL));
  v130 = ((v129 - 0x19CA37BCBF97BEADLL) ^ 0xF9932A42852DB301) & (2
                                                                 * ((v129 - 0x19CA37BCBF97BEADLL) & 0xFD1A0350A9ADBB05)) ^ (v129 - 0x19CA37BCBF97BEADLL) & 0xFD1A0350A9ADBB05;
  v131 = ((2 * ((v129 - 0x19CA37BCBF97BEADLL) ^ 0x73A32AC3962CF503)) ^ 0x1D7253267F029C0CLL) & ((v129
                                                                                                 - 0x19CA37BCBF97BEADLL) ^ 0x73A32AC3962CF503) ^ (2 * ((v129 - 0x19CA37BCBF97BEADLL) ^ 0x73A32AC3962CF503)) & 0x8EB929933F814E06;
  v132 = (v131 ^ 0xC3001022F000C04) & (4 * v130) ^ v130;
  v133 = ((4 * (v131 ^ 0x8289289100814202)) ^ 0x3AE4A64CFE053818) & (v131 ^ 0x8289289100814202) ^ (4 * (v131 ^ 0x8289289100814202)) & 0x8EB929933F814E04;
  v134 = ((16 * (v133 ^ 0x8419099301804606)) ^ 0xEB929933F814E060) & (v133 ^ 0x8419099301804606) ^ (16 * (v133 ^ 0x8419099301804606)) & 0x8EB929933F814E00;
  v135 = (v134 ^ 0x8A90091338004000) & (((v133 ^ 0xAA020003E010800) & (16 * v132) ^ v132) << 8) ^ (v133 ^ 0xAA020003E010800) & (16 * v132) ^ v132;
  v136 = (((v134 ^ 0x429208007810E06) << 8) ^ 0xB929933F814E0600) & (v134 ^ 0x429208007810E06) ^ ((v134 ^ 0x429208007810E06) << 8) & 0x8EB929933F814E00;
  v137 = v135 ^ 0x8EB929933F814E06 ^ (v136 ^ 0x8829011301000000) & (v135 << 16);
  v138 = (v129 - 0x19CA37BCBF97BEADLL) ^ (2
                                        * ((v137 << 32) & 0xEB9299300000000 ^ v137 ^ ((v137 << 32) ^ 0x3F814E0600000000) & (((v136 ^ 0x69028803E814806) << 16) & 0xEB9299300000000 ^ 0x628001200000000 ^ (((v136 ^ 0x69028803E814806) << 16) ^ 0x29933F8100000000) & (v136 ^ 0x69028803E814806))));
  v139 = v129
       - 0x1A04DD8F4BEFBA18
       + ((((v138 >> 16) ^ 0x652C570A254A3C4FLL) + 0x38FD401C140608FELL) ^ (((v138 >> 16) ^ 0x2142095ADA3AF2B9)
                                                                          + 0x7C931E4CEB76C60CLL) ^ (((v138 >> 16) ^ 0x446EA33ABF021859) + 0x19BFB42C8E4E2CECLL));
  v140 = ((2 * (v139 ^ 0x2F7E4BC1A7A8F539)) ^ 0x61F9EACEC6DC42D6) & (v139 ^ 0x2F7E4BC1A7A8F539) ^ (2 * (v139 ^ 0x2F7E4BC1A7A8F539)) & (v9 + 106);
  v141 = v140 ^ 0x9004152121222129;
  v142 = (v139 ^ 0x1F7A3E84A6A4D519) & (2 * (v139 & 0x9F82BEA6C4C6D452)) ^ v139 & 0x9F82BEA6C4C6D452;
  v143 = (v140 ^ 0x2018E006020C0040) & (4 * v142) ^ v142;
  v144 = ((4 * v141) ^ 0xC3F3D59D8DB885ACLL) & v141 ^ (4 * v141) & (v9 + 104);
  v145 = (v144 ^ 0x80F0D50501280120) & (16 * v143) ^ v143;
  v146 = ((16 * (v144 ^ 0x300C206262462043)) ^ 0xFCF567636E216B0) & (v144 ^ 0x300C206262462043) ^ (16 * (v144 ^ 0x300C206262462043)) & (v9 + 96);
  v147 = (v146 ^ 0xCC546622620000) & (v145 << 8) ^ v145;
  v148 = (((v146 ^ 0xB030A101410C214BLL) << 8) ^ 0xFCF567636E216B00) & (v146 ^ 0xB030A101410C214BLL) ^ ((v146 ^ 0xB030A101410C214BLL) << 8) & v9;
  v149 = v147 ^ (v9 + 107) ^ (v148 ^ 0xB0F4656362200000) & (v147 << 16);
  v150 = (v139 ^ (2
                * ((v149 << 32) & 0x30FCF56700000000 ^ v149 ^ ((v149 << 32) ^ 0x636E216B00000000) & (((v148 ^ 0x89004014E006BLL) << 16) & 0x30FCF56700000000 ^ 0x98940100000000 ^ (((v148 ^ 0x89004014E006BLL) << 16) ^ 0x7567636E00000000) & (v148 ^ 0x89004014E006BLL))))) >> 8;
  if (v12 == a3 + 186642817 < 0x4B27409A)
    v12 = v11 > a3 + 186642817;
  v151 = v139
       - (((v150 ^ 0x77969D5) + 1968830794) ^ ((v150 ^ 0x9F9D7B20) - 306320451) ^ ((v150 ^ 0x36E60863) + 1153865984));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31 * v12) ^ v13)) - 8))(v73 ^ a1 ^ v116 ^ (v151 - 2080183727 - ((2 * (v151 - 2080183727)) & 0xD82B68B0) - 334121896) ^ 0x576CEDD6);
}

uint64_t sub_100A0F2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = (STACK[0x6990] & 2) == 0;
  v10 = STACK[0x6700];
  if ((STACK[0x6990] & 2) == 0)
    v10 = STACK[0x66E0];
  LODWORD(STACK[0x66E0]) = v10;
  v11 = STACK[0x6780];
  if (!v9)
    v11 = STACK[0x66D8];
  LODWORD(STACK[0x66C0]) = v11;
  v12 = STACK[0x69B0];
  if (v9)
    v12 = STACK[0x69A0];
  LODWORD(STACK[0x6688]) = v12;
  v13 = STACK[0x68A0];
  if (v9)
    v13 = STACK[0x6860];
  LODWORD(STACK[0x6780]) = v13;
  v14 = STACK[0x6770];
  if (!v9)
    v14 = STACK[0x6760];
  LODWORD(STACK[0x6770]) = v14;
  v15 = STACK[0x6750];
  if (!v9)
    v15 = STACK[0x6740];
  LODWORD(STACK[0x66B8]) = v15;
  v16 = STACK[0x6730];
  if ((STACK[0x66F0] & 1) != 0)
    v16 = STACK[0x6678];
  v17 = (STACK[0x6980] & 2) == 0;
  v18 = STACK[0x6870];
  LODWORD(STACK[0x6760]) = v16;
  if (!v17)
    v18 = v16;
  LODWORD(STACK[0x63D8]) = v18;
  v19 = STACK[0x6610];
  if (!v17)
    v19 = STACK[0x6600];
  LODWORD(STACK[0x63E0]) = v19;
  v20 = STACK[0x65F8];
  if (v17)
    v20 = STACK[0x65C0];
  LODWORD(STACK[0x63E8]) = v20;
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6910]) ^ 0x5FA2A942;
  v21 = ((v8 - 0x45EF09D1B747B8ADLL) ^ 0x5E5AD55DEA2A0AC2) & (2 * ((v8 - 0x45EF09D1B747B8ADLL) & 0x1F5A1191C30B0CE2)) ^ (v8 - 0x45EF09D1B747B8ADLL) & 0x1F5A1191C30B0CE2;
  v22 = ((2 * ((v8 - 0x45EF09D1B747B8ADLL) ^ 0x5CCAF57E6C2E0BC6)) ^ 0x8721C9DF5E4A0E48) & ((v8 - 0x45EF09D1B747B8ADLL) ^ 0x5CCAF57E6C2E0BC6) ^ (2 * ((v8 - 0x45EF09D1B747B8ADLL) ^ 0x5CCAF57E6C2E0BC6)) & 0x4390E4EFAF250724;
  v23 = v22 ^ 0x40902420A1250124;
  v24 = (v22 ^ 0x300C0CF0C000600) & (4 * v21) ^ v21;
  v25 = ((4 * v23) ^ 0xE4393BEBC941C90) & v23 ^ (4 * v23) & 0x4390E4EFAF250724;
  v26 = (v25 ^ 0x20080AEAC040400) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0x4190644103210324)) ^ 0x390E4EFAF2507240) & (v25 ^ 0x4190644103210324) ^ (16 * (v25 ^ 0x4190644103210324)) & 0x4390E4EFAF250720;
  v28 = (v27 ^ 0x10044EAA2000200) & (v26 << 8) ^ v26;
  v29 = (((v27 ^ 0x4290A0050D250524) << 8) ^ 0x90E4EFAF25072400) & (v27 ^ 0x4290A0050D250524) ^ ((v27 ^ 0x4290A0050D250524) << 8) & 0x4390E4EFAF250700;
  v30 = v28 ^ 0x4390E4EFAF250724 ^ (v29 ^ 0x80E4AF25050000) & (v28 << 16);
  v31 = (v8 - 0x45EF09D1B747B8ADLL) ^ (2
                                     * ((v30 << 32) & 0x4390E4EF00000000 ^ v30 ^ ((v30 << 32) ^ 0x2F25072400000000) & (((v29 ^ 0x431000408A200324) << 16) & 0x4390E4EF00000000 ^ 0x31040CA00000000 ^ (((v29 ^ 0x431000408A200324) << 16) ^ 0x64EFAF2500000000) & (v29 ^ 0x431000408A200324))));
  v32 = 2 * (((v31 >> 25) ^ 0x568285EC175266CLL) & (v31 ^ 0x46800069D4102AALL) ^ v31 & 0x5682811FC9D2522);
  v33 = ((((v31 >> 25) ^ v31 ^ 0x1006FF402B9BD92CLL) + 0x44C78681154DFE7ELL) ^ (((v31 >> 25) ^ v31 ^ 0x756CF290AA325864)
                                                                              + 0x21AD8B5194E47F36) ^ (((v31 >> 25) ^ v31 ^ 0xFB11DD99210080ACLL) - 0x502F5BA7E0295802))
      + 0x5AC6C5C2CA5A1069
      + (((v32 ^ 0x6D79390CE4C46E16) - 0x614483EA74DB7B5FLL) ^ ((v32 ^ 0xE3C06FBE85192DE3) + 0x10022AA7EAF9C756) ^ ((v32 ^ 0x866956B359DF43B1) + 0x75AB13AA363FA908));
  v34 = (v33 ^ 0xDF4863DDBE039DECLL) & (2 * (v33 & 0xDF6C4B9C3F43DDEELL)) ^ v33 & 0xDF6C4B9C3F43DDEELL;
  v35 = ((2 * (v33 ^ 0xCF1873CDC80695A4)) ^ 0x20E870A3EE8A9094) & (v33 ^ 0xCF1873CDC80695A4) ^ (2 * (v33 ^ 0xCF1873CDC80695A4)) & 0x10743851F745484ALL;
  v36 = v35 ^ 0x101408501145484ALL;
  v37 = (v35 ^ 0x603001E6000000) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x41D0E147DD152128) & v36 ^ (4 * v36) & 0x10743851F7454848;
  v39 = (v38 ^ 0x502041D5050000) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x1024181022404842)) ^ 0x743851F745484A0) & (v38 ^ 0x1024181022404842) ^ (16 * (v38 ^ 0x1024181022404842)) & 0x10743851F7454840;
  v41 = (v40 ^ 0x40001174440000) & (v39 << 8) ^ v39;
  v42 = (((v40 ^ 0x103438408301484ALL) << 8) ^ 0x743851F745484A00) & (v40 ^ 0x103438408301484ALL) ^ ((v40 ^ 0x103438408301484ALL) << 8) & 0x10743851F7454800;
  v43 = v41 ^ 0x10743851F745484ALL ^ (v42 ^ 0x1030105145400000) & (v41 << 16);
  v44 = (v33 ^ (2
              * ((v43 << 32) & 0x1074385100000000 ^ v43 ^ ((v43 << 32) ^ 0x7745484A00000000) & (((v42 ^ 0x442800B205004ALL) << 16) & 0x1074385100000000 ^ 0x24081000000000 ^ (((v42 ^ 0x442800B205004ALL) << 16) ^ 0x3851F74500000000) & (v42 ^ 0x442800B205004ALL))))) >> 8;
  v45 = v33
      - (((v44 ^ 0x15F6108F9B3BF6E6) + 0x16072DE3EB534330) ^ ((v44 ^ 0xDBB977B177FF9614) - 0x27B7B522F868DC22) ^ ((v44 ^ 0xCE906B155315A9BFLL) - 0x329EA986DC82E389))
      - 0x29338EBD4B739A35;
  v46 = (v45 ^ 0x63EF4B1C5A62F421) & (2 * (v45 & 0xBCE0BA15A70F4A8)) ^ v45 & 0xBCE0BA15A70F4A8;
  v47 = ((2 * (v45 ^ 0x677B481E5A627C71)) ^ 0xD96A877E002511B2) & (v45 ^ 0x677B481E5A627C71) ^ (2 * (v45 ^ 0x677B481E5A627C71)) & 0x6CB543BF001288D8;
  v48 = v47 ^ 0x2495408100128849;
  v49 = (v47 ^ 0x4820030E00000080) & (4 * v46) ^ v46;
  v50 = ((4 * v48) ^ 0xB2D50EFC004A2364) & v48 ^ (4 * v48) & 0x6CB543BF001288D8;
  v51 = (v50 ^ 0x209502BC00020040) & (16 * v49) ^ v49;
  v52 = ((16 * (v50 ^ 0x4C20410300108899)) ^ 0xCB543BF001288D90) & (v50 ^ 0x4C20410300108899) ^ (16 * (v50 ^ 0x4C20410300108899)) & 0x6CB543BF001288D0;
  v53 = (v52 ^ 0x481403B000008800) & (v51 << 8) ^ v51;
  v54 = (((v52 ^ 0x24A1400F00120049) << 8) ^ 0xB543BF001288D900) & (v52 ^ 0x24A1400F00120049) ^ ((v52 ^ 0x24A1400F00120049) << 8) & 0x6CB543BF00128800;
  v55 = v53 ^ 0x6CB543BF001288D9 ^ (v54 ^ 0x2401030000000000) & (v53 << 16);
  v56 = (((v45 ^ (2
                * ((v55 << 32) & 0x6CB543BF00000000 ^ v55 ^ ((v55 << 32) ^ 0x1288D900000000) & (((v54 ^ 0x48B440BF001200D9) << 16) & 0x6CB543BF00000000 ^ 0x2C0043AD00000000 ^ (((v54 ^ 0x48B440BF001200D9) << 16) ^ 0x43BF001200000000) & (v54 ^ 0x48B440BF001200D9))))) >> 8) ^ 0xFF2D7B7212A5AA1ALL)
      + v45;
  LODWORD(v55) = v56 + 1517352105;
  v57 = v56
      - 0x5776A6CD5DD3366CLL
      + ((v56 - 0x5776A6CD5DD3366CLL) >> 27)
      + ((v56 - 0x5776A6CD5DD3366CLL + ((v56 - 0x5776A6CD5DD3366CLL) >> 27)) >> 15);
  v58 = v57 - (v57 >> 6);
  v59 = v58
      + 0x1F1245062907D92
      + ((v58 + 0x1F1245062907D92) >> 25)
      + ((v58 + 0x1F1245062907D92 + ((v58 + 0x1F1245062907D92) >> 25)) >> 12)
      + 0x787D0548E8377542;
  v60 = (v59 ^ 0xC7B0F2B697A4883ELL) & (2 * (v59 & 0x8782FAB717C88ABELL)) ^ v59 & 0x8782FAB717C88ABELL;
  v61 = ((2 * (v59 ^ 0xC9B0D3F6B1A5985ELL)) ^ 0x9C6452834CDA25C0) & (v59 ^ 0xC9B0D3F6B1A5985ELL) ^ (2 * (v59 ^ 0xC9B0D3F6B1A5985ELL)) & 0x4E322941A66D12E0;
  v62 = v61 ^ 0x42122940A2251220;
  v63 = (v61 ^ 0xC000000044000C0) & (4 * v60) ^ v60;
  v64 = ((4 * v62) ^ 0x38C8A50699B44B80) & v62 ^ (4 * v62) & 0x4E322941A66D12E0;
  v65 = (v64 ^ 0x800210080240280) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x4632084126491060)) ^ 0xE322941A66D12E00) & (v64 ^ 0x4632084126491060) ^ (16 * (v64 ^ 0x4632084126491060)) & 0x4E322941A66D12E0;
  v67 = (v66 ^ 0x4222000026410200) & (v65 << 8) ^ v65;
  v68 = (((v66 ^ 0xC102941802C10E0) << 8) ^ 0x322941A66D12E000) & (v66 ^ 0xC102941802C10E0) ^ ((v66 ^ 0xC102941802C10E0) << 8) & 0x4E322941A66D1200;
  v69 = v67 ^ 0x4E322941A66D12E0 ^ (v68 ^ 0x220010024000000) & (v67 << 16);
  v70 = (v59 ^ (2
              * ((v69 << 32) & 0x4E32294100000000 ^ v69 ^ ((v69 << 32) ^ 0x266D12E000000000) & (((v68 ^ 0x4C122841826D12E0) << 16) & 0x4E32294100000000 ^ 0x4632090000000000 ^ (((v68 ^ 0x4C122841826D12E0) << 16) ^ 0x2941A66D00000000) & (v68 ^ 0x4C122841826D12E0))))) >> 8;
  v71 = v58
      + 0x1F1245062907D92
      + ((v58 + 0x1F1245062907D92) >> 25)
      + ((v58 + 0x1F1245062907D92 + ((v58 + 0x1F1245062907D92) >> 25)) >> 12)
      - 0x50B5841BF992DF94
      + (((v70 ^ 0x202D66177D35B4AFLL) - 0x3392C4EB37C04E2) ^ ((v70 ^ 0x51852ECA2DC9F51BLL) - 0x72916493E3804556) ^ ((v70 ^ 0x71BFEE75E4A7531BLL) - 0x52ABA42C2AEEE356));
  v72 = (v71 ^ 0x7BB569EC6321B966) & (2 * (v71 & 0x73B9710D73A58276)) ^ v71 & 0x73B9710D73A58276;
  v73 = ((2 * (v71 ^ 0xBD8709F6A229BD82)) ^ 0x9C7CF1F7A3187FE8) & (v71 ^ 0xBD8709F6A229BD82) ^ (2 * (v71 ^ 0xBD8709F6A229BD82)) & 0xCE3E78FBD18C3FF4;
  v74 = v73 ^ 0x4202080850840014;
  v75 = (v73 ^ 0x8C2C407381081BE0) & (4 * v72) ^ v72;
  v76 = ((4 * v74) ^ 0x38F9E3EF4630FFD0) & v74 ^ (4 * v74) & 0xCE3E78FBD18C3FF4;
  v77 = (v76 ^ 0x83860EB40003FC0) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0xC6061810918C0024)) ^ 0xE3E78FBD18C3FF40) & (v76 ^ 0xC6061810918C0024) ^ (16 * (v76 ^ 0xC6061810918C0024)) & 0xCE3E78FBD18C3FF0;
  v79 = (v78 ^ 0xC22608B910803F00) & (v77 << 8) ^ v77;
  v80 = (((v78 ^ 0xC187042C10C00B4) << 8) ^ 0x3E78FBD18C3FF400) & (v78 ^ 0xC187042C10C00B4) ^ ((v78 ^ 0xC187042C10C00B4) << 8) & 0xCE3E78FBD18C3F00;
  v81 = v79 ^ 0xCE3E78FBD18C3FF4 ^ (v80 ^ 0xE3878D1800C0000) & (v79 << 16);
  v82 = v71 ^ (2
             * ((v81 << 32) & 0x4E3E78FB00000000 ^ v81 ^ ((v81 << 32) ^ 0x518C3FF400000000) & (((v80 ^ 0xC006002A51800BF4) << 16) & 0x4E3E78FB00000000 ^ 0x604287300000000 ^ (((v80 ^ 0xC006002A51800BF4) << 16) ^ 0x78FBD18C00000000) & (v80 ^ 0xC006002A51800BF4))));
  v83 = ((v82 >> 31) ^ 0xA086691B)
      + (v82 ^ 0x5043348DCC355F48)
      - ((((v82 >> 31) ^ 0xA086691B) + (v82 ^ 0x5043348DCC355F48)) >> 8);
  v84 = v83 + (v83 >> 7);
  LODWORD(v55) = v84 ^ v55;
  v85 = v84
      - 0x48FE1727B858BC71
      + ((v84 - 0x48FE1727B858BC71) >> 25)
      - ((v84 - 0x48FE1727B858BC71 + ((v84 - 0x48FE1727B858BC71) >> 25)) >> 10);
  v86 = v85 - (v85 >> 1);
  LODWORD(v58) = v86 ^ v58;
  v87 = v86
      + 0x488D08707B475E94
      + ((v86 + 0x488D08707B475E94) >> 27)
      - ((v86 + 0x488D08707B475E94 + ((v86 + 0x488D08707B475E94) >> 27)) >> 15);
  v88 = v87 - (v87 >> 7) - ((2 * (v87 - (v87 >> 7))) & 0x97CFAE0A972AD92ELL) + 0x4BE7D7054B956C97;
  v89 = (((v88 ^ 0x6AEF7297D16CE45BLL) - 0x6AEF7297D16CE45BLL) ^ ((v88 ^ 0x516224D4DB2AE530) - 0x516224D4DB2AE530) ^ ((v88 ^ 0x706A814641D36DFCLL) - 0x706A814641D36DFCLL))
      - 0x1966E7EF0B8E997;
  v90 = v89 + (v89 >> 27) + ((v89 + (v89 >> 27)) >> 12);
  v91 = v90 - (v90 >> 5) - ((2 * (v90 - (v90 >> 5))) & 0xBB08C0A07A3BAE1CLL) + 0x5D8460503D1DD70ELL;
  v92 = a2 ^ v55 ^ 0x8B7EADE6 ^ v91;
  v93 = (v91 ^ 0x549627176B859714)
      + ((v91 ^ 0x549627176B859714) >> 26)
      - (((v91 ^ 0x549627176B859714) + ((v91 ^ 0x549627176B859714) >> 26)) >> 11);
  v94 = v93 - (v93 >> 1);
  v96 = STACK[0x6AA0];
  v97 = v7 ^ v58 ^ 0x7AA7B378 ^ v94;
  v98 = (*(_BYTE *)(v96
                  + ((*(_BYTE *)(v96 + ((*(unsigned __int8 *)(STACK[0x6AA0] + 9) + 10) & 0xFLL)) + 13) & 0xF))
       + 11) & 0xF;
  STACK[0x6AA0] = STACK[0x6AA0];
  v99 = *(_BYTE *)(v96 + v98) + 12;
  if ((v99 & 0xE) != 0)
    v100 = v99 & 0xF;
  else
    v100 = 1;
  v101 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 8);
  STACK[0x6AB0] = v100 - 1;
  v95 = (v94 ^ 0x2CA6CED0376036A5)
      + ((v94 ^ 0x2CA6CED0376036A5) >> 31)
      - (((v94 ^ 0x2CA6CED0376036A5) + ((v94 ^ 0x2CA6CED0376036A5) >> 31)) >> 15);
  return v101(a1, a2, a3, a4, a4 ^ v88 ^ v82 ^ 0xA21C0F69 ^ ((_DWORD)v95- (v95 >> 8)- ((2* ((_DWORD)v95- (v95 >> 8))) & 0x703E4128)- 1205919596), v97, a7, v92);
}

uint64_t sub_100A10430()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((22211 * (STACK[0x6AB0] == v0)) ^ STACK[0x6AC0]))
                            - 8))();
}

uint64_t sub_100A11710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;

  v6 = STACK[0x6AC0] + 13351;
  v7 = (STACK[0x6990] & 2) == 0;
  v8 = STACK[0x6A50];
  if ((STACK[0x6990] & 2) == 0)
    v8 = STACK[0x6A40];
  LODWORD(STACK[0x66D8]) = v8;
  v9 = STACK[0x6A30];
  if (!v7)
    v9 = STACK[0x6A20];
  LODWORD(STACK[0x6700]) = v9;
  v10 = STACK[0x6A10];
  if (v7)
    v10 = STACK[0x6A00];
  LODWORD(STACK[0x6598]) = v10;
  v11 = (STACK[0x6980] & 2) == 0;
  v12 = STACK[0x69F0];
  if ((STACK[0x6980] & 2) != 0)
    v12 = STACK[0x69E0];
  LODWORD(STACK[0x6610]) = v12;
  v13 = STACK[0x69D0];
  if (!v11)
    v13 = STACK[0x69C0];
  LODWORD(STACK[0x63C8]) = v13;
  v14 = STACK[0x6AD8];
  LODWORD(STACK[0x6AB0]) = v6;
  v15 = *(_QWORD *)(v14 + 8 * v6);
  v16 = STACK[0x6708];
  if (!v11)
    v16 = STACK[0x66E8];
  LODWORD(STACK[0x63D0]) = v16;
  STACK[0x6A90] = -710585461;
  STACK[0x6A70] = -98204613;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 - 4))(-1923017864, 0, -597998901, -868833907, a5, a6, -636147286);
}

uint64_t sub_100A118EC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unint64_t v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t (*v140)(unint64_t, unint64_t, unint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  unint64_t v141;

  LODWORD(STACK[0x69C0]) = a8;
  LODWORD(STACK[0x69E0]) = a6;
  LODWORD(STACK[0x69F0]) = a5;
  LODWORD(STACK[0x6AC0]) = v16;
  STACK[0x6A00] = a3;
  STACK[0x6A10] = v15;
  STACK[0x6A20] = a1;
  STACK[0x6A30] = v13;
  STACK[0x6A40] = v11;
  LODWORD(STACK[0x6A50]) = v9;
  STACK[0x6A60] = a2;
  v22 = ((*(unsigned __int8 *)(v14 + v10) ^ 0xF7DBFDF7)
       - 1460228059
       + ((LODWORD(STACK[0x6AB0]) ^ 0x4430) & (2 * *(unsigned __int8 *)(v14 + v10))))
      * v12
      - 1909221473;
  v23 = (v22 ^ 0xC002F3D0) & (2 * (v22 & 0x8504F3C5)) ^ v22 & 0x8504F3C5;
  v24 = ((2 * (v22 ^ 0xC20234D8)) ^ 0x8E0D8E3A) & (v22 ^ 0xC20234D8) ^ (2 * (v22 ^ 0xC20234D8)) & 0x4706C71C;
  v25 = ((4 * (v24 ^ 0x41024105)) ^ 0x1C1B1C74) & (v24 ^ 0x41024105) ^ (4 * (v24 ^ 0x41024105)) & 0x4706C71C;
  v26 = (v25 ^ 0x4020419) & (16 * ((v24 ^ 0x45048619) & (4 * v23) ^ v23)) ^ (v24 ^ 0x45048619) & (4 * v23) ^ v23;
  v27 = ((16 * (v25 ^ 0x4304C309)) ^ 0x706C71D0) & (v25 ^ 0x4304C309) ^ (16 * (v25 ^ 0x4304C309)) & 0x4706C710;
  v28 = v26 ^ 0x4706C71D ^ (v27 ^ 0x4004410D) & (v26 << 8);
  v29 = v22 ^ (2
             * ((v28 << 16) & 0x47060000 ^ v28 ^ ((v28 << 16) ^ 0x471D0000) & (((v27 ^ 0x702860D) << 8) & 0x47060000 ^ 0x41000000 ^ (((v27 ^ 0x702860D) << 8) ^ 0x6C70000) & (v27 ^ 0x702860D))));
  v30 = a9 ^ 0x85017DFF ^ v29;
  v31 = (unint64_t)(v30 + v16) >> 16;
  v32 = v10 + v15 + v30 + v31;
  v33 = (v32 ^ 0xC1ACE3F1) & (2 * (v32 & 0x85CC0BF5)) ^ v32 & 0x85CC0BF5;
  v34 = ((2 * (v32 ^ 0xC82CF191)) ^ 0x9BC1F4C8) & (v32 ^ 0xC82CF191) ^ (2 * (v32 ^ 0xC82CF191)) & 0x4DE0FA64;
  v35 = v34 ^ 0x44200A24;
  v36 = (v34 ^ 0x49407040) & (4 * v33) ^ v33;
  v37 = ((4 * v35) ^ 0x3783E990) & v35 ^ (4 * v35) & 0x4DE0FA64;
  v38 = (v37 ^ 0x580E804) & (16 * v36) ^ v36;
  v39 = ((16 * (v37 ^ 0x48601264)) ^ 0xDE0FA640) & (v37 ^ 0x48601264) ^ (16 * (v37 ^ 0x48601264)) & 0x4DE0FA60;
  v40 = v38 ^ 0x4DE0FA64 ^ (v39 ^ 0x4C00A200) & (v38 << 8);
  v41 = (v32 ^ (2
              * ((v40 << 16) & 0x4DE00000 ^ v40 ^ ((v40 << 16) ^ 0x7A640000) & (((v39 ^ 0x1E05824) << 8) & 0x4DE00000 ^ 0xD000000 ^ (((v39 ^ 0x1E05824) << 8) ^ 0x60FA0000) & (v39 ^ 0x1E05824))))) >> 8;
  v42 = v30
      - (((v41 ^ 0xE9AAF400) - 1253163903) ^ ((v41 ^ 0xCD0AE4AF) - 1846662096) ^ ((v41 ^ 0x242EDD50) + 2026509777));
  v43 = v10 + a1 + v31 + v42;
  v44 = (v43 ^ 0x8F0AFB4B) & (2 * (v43 & 0xCF08F208)) ^ v43 & 0xCF08F208;
  v45 = ((2 * (v43 ^ 0x8B0A9B5B)) ^ 0x8804D2A6) & (v43 ^ 0x8B0A9B5B) ^ (2 * (v43 ^ 0x8B0A9B5B)) & 0x44026952;
  v46 = (v45 ^ 0x6110) & (4 * v44) ^ v44;
  v47 = ((4 * (v45 ^ 0x44022951)) ^ 0x1009A54C) & (v45 ^ 0x44022951) ^ (4 * (v45 ^ 0x44022951)) & 0x44026950;
  v48 = (v47 ^ 0x2150) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x44024813)) ^ 0x40269530) & (v47 ^ 0x44024813) ^ (16 * (v47 ^ 0x44024813)) & 0x44026950;
  v50 = v49 ^ 0x4006843;
  v51 = v48 ^ 0x44026953;
  v52 = v10 + a4 + v31 + v42;
  v53 = (v49 ^ 0x40020143) & (v48 << 8);
  v54 = (v52 ^ 0xDD55F34B) & (2 * (v52 & 0x9E11E410)) ^ v52 & 0x9E11E410;
  v55 = ((2 * (v52 ^ 0xC955BB6B)) ^ 0xAE88BEF6) & (v52 ^ 0xC955BB6B) ^ (2 * (v52 ^ 0xC955BB6B)) & 0x57445F7A;
  v56 = ((4 * (v55 ^ 0x51444109)) ^ 0x5D117DEC) & (v55 ^ 0x51444109) ^ (4 * (v55 ^ 0x51444109)) & 0x57445F78;
  v57 = (v56 ^ 0x55005D70) & (16 * ((v55 ^ 0x1005149) & (4 * v54) ^ v54)) ^ (v55 ^ 0x1005149) & (4 * v54) ^ v54;
  v58 = ((16 * (v56 ^ 0x2440213)) ^ 0x7445F7B0) & (v56 ^ 0x2440213) ^ (16 * (v56 ^ 0x2440213)) & 0x57445F70;
  v59 = v57 ^ 0x57445F7B ^ (v58 ^ 0x54445700) & (v57 << 8);
  v60 = ((v58 ^ 0x300084B) << 8) & 0x57440000 ^ 0x13000000 ^ (((v58 ^ 0x300084B) << 8) ^ 0x445F0000) & (v58 ^ 0x300084B);
  v61 = v10 + a7 + v31 + v42;
  v62 = (v61 ^ 0x9F5DE6D0) & (2 * (v61 & 0x9E11E410)) ^ v61 & 0x9E11E410;
  v63 = ((2 * (v61 ^ 0xA75D6ED0)) ^ 0x72991580) & (v61 ^ 0xA75D6ED0) ^ (2 * (v61 ^ 0xA75D6ED0)) & 0x394C8AC0;
  v64 = ((4 * (v63 ^ 0x9448A40)) ^ 0xE5322B00) & (v63 ^ 0x9448A40) ^ (4 * (v63 ^ 0x9448A40)) & 0x394C8AC0;
  LODWORD(v31) = (v64 ^ 0x21000A00) & (16 * ((v63 ^ 0x31080A80) & (4 * v62) ^ v62)) ^ (v63 ^ 0x31080A80) & (4 * v62) ^ v62;
  v65 = ((16 * (v64 ^ 0x184C80C0)) ^ 0x94C8AC00) & (v64 ^ 0x184C80C0) ^ (16 * (v64 ^ 0x184C80C0)) & 0x394C8AC0;
  v66 = v31 ^ 0x394C8AC0 ^ (v65 ^ 0x104888C0) & ((_DWORD)v31 << 8);
  LODWORD(v31) = ((v59 << 16) ^ 0x5F7B0000) & v60;
  v67 = ((v65 ^ 0x290402C0) << 8) & 0x394C0000 ^ 0x31440000 ^ (((v65 ^ 0x290402C0) << 8) ^ 0x4C8A0000) & (v65 ^ 0x290402C0);
  v68 = (v59 << 16) & 0x57440000 ^ v59;
  v69 = ((v51 ^ v53) << 16) & 0x44020000 ^ v51 ^ v53 ^ (((v51 ^ v53) << 16) ^ 0x69530000) & ((v50 << 8) & 0x44020000 ^ 0x44020000 ^ ((v50 << 8) ^ 0x2690000) & v50);
  v70 = v61 ^ (2 * ((v66 << 16) & 0x394C0000 ^ v66 ^ ((v66 << 16) ^ 0xAC00000) & v67)) ^ 0x7771D0E1;
  LODWORD(STACK[0x69B0]) = v70;
  v71 = ((v70 ^ v29 ^ 0x6BA323D0) - 144395329) ^ ((v70 ^ v29 ^ 0x6A42D922) - 159037107) ^ ((v70 ^ v29 ^ 0xF99A67C)
                                                                                         - 1822542317);
  v72 = v10 + v20 + v71;
  v73 = ((2 * (v72 ^ 0xB1FB4981)) ^ 0x9711CC9A) & (v72 ^ 0xB1FB4981) ^ (2 * (v72 ^ 0xB1FB4981)) & 0x4B88E64C;
  v74 = (v72 ^ 0xF17B0F89) & (2 * (v72 & 0xFA73AFCC)) ^ v72 & 0xFA73AFCC;
  v75 = ((4 * (v73 ^ 0x48882245)) ^ 0x2E239934) & (v73 ^ 0x48882245) ^ (4 * (v73 ^ 0x48882245)) & 0x4B88E64C;
  v76 = (v75 ^ 0xA008009) & (16 * ((v73 ^ 0x300C400) & (4 * v74) ^ v74)) ^ (v73 ^ 0x300C400) & (4 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x41886649)) ^ 0xB88E64D0) & (v75 ^ 0x41886649) ^ (16 * (v75 ^ 0x41886649)) & 0x4B88E640;
  LODWORD(STACK[0x69D0]) = v68 ^ v31;
  LODWORD(v31) = (v72 ^ (2
                       * (((v76 ^ 0x4B88E64D ^ (v77 ^ 0x8886400) & (v76 << 8)) << 16) & 0x4B880000 ^ v76 ^ 0x4B88E64D ^ (v77 ^ 0x8886400) & (v76 << 8) ^ (((v76 ^ 0x4B88E64D ^ (v77 ^ 0x8886400) & (v76 << 8)) << 16) ^ 0x664D0000) & (((v77 ^ 0x4300820D) << 8) & 0x4B880000 ^ 0x43080000 ^ (((v77 ^ 0x4300820D) << 8) ^ 0x88E60000) & (v77 ^ 0x4300820D))))) >> 16;
  LODWORD(v31) = v71
               + (((v31 ^ 0x4B47A4AE) - 1312796129) ^ ((v31 ^ 0x4B7865E8) - 1308650663) ^ ((v31 ^ 0x3F2834) - 88547707));
  v78 = v10 + a3 + v31;
  v79 = (v78 ^ 0x519C40D) & (2 * (v78 & 0x965DD091)) ^ v78 & 0x965DD091;
  v80 = ((2 * (v78 ^ 0x2523652F)) ^ 0x66FD6B7C) & (v78 ^ 0x2523652F) ^ (2 * (v78 ^ 0x2523652F)) & 0xB37EB5BE;
  v81 = ((4 * (v80 ^ 0x91029482)) ^ 0xCDFAD6F8) & (v80 ^ 0x91029482) ^ (4 * (v80 ^ 0x91029482)) & 0xB37EB5BC;
  v82 = (v81 ^ 0x817A94B6) & (16 * ((v80 ^ 0x227C000C) & (4 * v79) ^ v79)) ^ (v80 ^ 0x227C000C) & (4 * v79) ^ v79;
  v83 = ((16 * (v81 ^ 0x32042106)) ^ 0x37EB5BE0) & (v81 ^ 0x32042106) ^ (16 * (v81 ^ 0x32042106)) & 0xB37EB5B0;
  v84 = v82 ^ 0xB37EB5BE ^ (v83 ^ 0x336A1100) & (v82 << 8);
  v85 = (v78 ^ (2
              * ((v84 << 16) & 0x337E0000 ^ v84 ^ ((v84 << 16) ^ 0x35BE0000) & (((v83 ^ 0x8014A41E) << 8) & 0x337E0000 ^ 0x14A0000 ^ (((v83 ^ 0x8014A41E) << 8) ^ 0x7EB50000) & (v83 ^ 0x8014A41E))))) >> 8;
  v86 = v31 - (((v85 ^ 0xFA36B19C) + 1397293985) ^ ((v85 ^ 0xBECD27EB) + 397579736) ^ ((v85 ^ 0x44694ACC) - 317261583));
  LODWORD(v31) = v10 + v17 + v86;
  v87 = (v31 ^ 0xA20FE48E) & (2 * (v31 & 0x34FE6CE)) ^ v31 & 0x34FE6CE;
  v88 = ((2 * (v31 ^ 0xA496EC8A)) ^ 0x4FB21488) & (v31 ^ 0xA496EC8A) ^ (2 * (v31 ^ 0xA496EC8A)) & 0xA7D90A44;
  v89 = v88 ^ 0xA0490A44;
  v90 = (v88 ^ 0xA7100004) & (4 * v87) ^ v87;
  v91 = ((4 * v89) ^ 0x9F642910) & v89 ^ (4 * v89) & 0xA7D90A44;
  v92 = v90 ^ 0xA7D90A44 ^ (v91 ^ 0x87400800) & (16 * v90);
  v93 = (16 * (v91 ^ 0x20990244)) & 0xA7D90A40 ^ 0x82490A04 ^ ((16 * (v91 ^ 0x20990244)) ^ 0x7D90A440) & (v91 ^ 0x20990244);
  LODWORD(STACK[0x69A0]) = v10 + v18 + v86;
  v94 = v10 + v19 + v86;
  v95 = (v92 << 8) & 0xA7D90A00 ^ v92 ^ ((v92 << 8) ^ 0xD90A4400) & v93;
  v96 = (v94 ^ 0x54DFAD5A) & (2 * (v94 & 0x69FCD9C)) ^ v94 & 0x69FCD9C;
  v97 = ((2 * (v94 ^ 0x58EC3C6A)) ^ 0xBCE7E3EC) & (v94 ^ 0x58EC3C6A) ^ (2 * (v94 ^ 0x58EC3C6A)) & 0x5E73F1F6;
  v98 = ((4 * (v97 ^ 0x42101012)) ^ 0x79CFC7D8) & (v97 ^ 0x42101012) ^ (4 * (v97 ^ 0x42101012)) & 0x5E73F1F4;
  v99 = (v98 ^ 0x5843C1C0) & (16 * ((v97 ^ 0x1C6360E0) & (4 * v96) ^ v96)) ^ (v97 ^ 0x1C6360E0) & (4 * v96) ^ v96;
  v100 = ((16 * (v98 ^ 0x6303026)) ^ 0xE73F1F60) & (v98 ^ 0x6303026) ^ (16 * (v98 ^ 0x6303026)) & 0x5E73F1F0;
  v101 = v99 ^ 0x5E73F1F6 ^ (v100 ^ 0x46331100) & (v99 << 8);
  v102 = (v95 << 16) & 0x27D90000 ^ v95 ^ ((v95 << 16) ^ 0xA440000) & ((v93 << 8) & 0xA7D90000 ^ 0x26D10000 ^ ((v93 << 8) ^ 0xD90A0000) & v93);
  v103 = v94 ^ 0x34048915 ^ (2
                           * ((v101 << 16) & 0x5E730000 ^ v101 ^ ((v101 << 16) ^ 0x71F60000) & (((v100 ^ 0x1840E096) << 8) & 0x5E730000 ^ 0xC020000 ^ (((v100 ^ 0x1840E096) << 8) ^ 0x73F10000) & (v100 ^ 0x1840E096))));
  v104 = v29 ^ 0xAB99DA9A ^ v103;
  v105 = (unint64_t)(v104 + LODWORD(STACK[0x6AC0])) >> 16;
  v106 = v10 + v21 + v104 + v105;
  v107 = (v106 ^ 0x131BB8BF) & (2 * (v106 & 0x9A43B83F)) ^ v106 & 0x9A43B83F;
  v108 = ((2 * (v106 ^ 0x31FA8D7)) ^ 0x32B821D0) & (v106 ^ 0x31FA8D7) ^ (2 * (v106 ^ 0x31FA8D7)) & 0x995C10E8;
  v109 = v108 ^ 0x89441028;
  v110 = (v108 ^ 0x105810C0) & (4 * v107) ^ v107;
  v111 = ((4 * v109) ^ 0x657043A0) & v109 ^ (4 * v109) & 0x995C10E8;
  v112 = v110 ^ 0x995C10E8 ^ (v111 ^ 0x15000A8) & (16 * v110);
  v113 = (16 * (v111 ^ 0x980C1048)) & 0x995C10E0 ^ 0x81C1068 ^ ((16 * (v111 ^ 0x980C1048)) ^ 0x95C10E80) & (v111 ^ 0x980C1048);
  v114 = (v112 << 8) & 0x995C1000 ^ v112 ^ ((v112 << 8) ^ 0x5C10E800) & v113;
  v115 = (v106 ^ (2
                * ((v114 << 16) & 0x195C0000 ^ v114 ^ ((v114 << 16) ^ 0x10E80000) & ((v113 << 8) & 0x995C0000 ^ 0x14C0000 ^ ((v113 << 8) ^ 0x5C100000) & v113)))) >> 8;
  v116 = ((v115 ^ 0x2DC5895A) - 1837210571) ^ ((v115 ^ 0x84ED61E5) + 995527820) ^ ((v115 ^ 0xA990A326) + 371936841);
  v117 = v10 + STACK[0x6A90] + v105 + v104 - v116;
  v118 = (v117 ^ 0xC41E424C) & (2 * (v117 & 0xE95E536D)) ^ v117 & 0xE95E536D;
  v119 = ((2 * (v117 ^ 0xD606E6D4)) ^ 0x7EB16B72) & (v117 ^ 0xD606E6D4) ^ (2 * (v117 ^ 0xD606E6D4)) & 0x3F58B5B8;
  v120 = v119 ^ 0x1489489;
  v121 = (v119 ^ 0x2E100130) & (4 * v118) ^ v118;
  v122 = ((4 * v120) ^ 0xFD62D6E4) & v120 ^ (4 * v120) & 0x3F58B5B8;
  v123 = (v122 ^ 0x3D4094A9) & (16 * v121) ^ v121;
  v124 = ((16 * (v122 ^ 0x2182119)) ^ 0xF58B5B90) & (v122 ^ 0x2182119) ^ (16 * (v122 ^ 0x2182119)) & 0x3F58B5B0;
  LODWORD(v31) = LODWORD(STACK[0x69C0]) ^ 0x70BAEAF7 ^ v43 ^ (2 * v69) ^ v31 ^ (2 * v102) ^ v117;
  v125 = STACK[0x6A70];
  v126 = v10 + STACK[0x6A70] + v105 + v104 - v116;
  v127 = (v126 ^ 0x80388698) & (2 * (v126 & 0xD2BCA6DA)) ^ v126 & 0xD2BCA6DA;
  v128 = v123 ^ 0x3F58B5B9 ^ (v124 ^ 0x35081129) & (v123 << 8);
  v129 = ((2 * (v126 ^ 0xA129C638)) ^ 0xE72AC1C4) & (v126 ^ 0xA129C638) ^ (2 * (v126 ^ 0xA129C638)) & 0x739560E2;
  v130 = (v129 ^ 0x430000C2) & (4 * v127) ^ v127;
  v131 = ((4 * (v129 ^ 0x10952022)) ^ 0xCE558388) & (v129 ^ 0x10952022) ^ (4 * (v129 ^ 0x10952022)) & 0x739560E0;
  v132 = (v131 ^ 0x42150080) & (16 * v130) ^ v130;
  v133 = ((16 * (v131 ^ 0x31806062)) ^ 0x39560E20) & (v131 ^ 0x31806062) ^ (16 * (v131 ^ 0x31806062)) & 0x739560E0;
  v134 = v132 ^ 0x739560E2 ^ (v133 ^ 0x31140000) & (v132 << 8);
  v135 = (v128 << 16) & 0x3F580000 ^ v128 ^ ((v128 << 16) ^ 0x35B90000) & (((v124 ^ 0xA50A429) << 8) & 0x3F580000 ^ 0x27480000 ^ (((v124 ^ 0xA50A429) << 8) ^ 0x58B50000) & (v124 ^ 0xA50A429));
  v136 = LODWORD(STACK[0x69E0]) ^ v52;
  v137 = STACK[0x6A60];
  v138 = v31 ^ (2 * v135);
  LODWORD(v31) = v10 + STACK[0x6A40] + v105 + v104 - v116;
  v139 = v136 ^ (2 * LODWORD(STACK[0x69D0])) ^ LODWORD(STACK[0x69A0]) ^ v126 ^ (2
                                                                              * ((v134 << 16) & 0x73950000 ^ v134 ^ ((v134 << 16) ^ 0x60E20000) & (((v133 ^ 0x428160C2) << 8) & 0x73950000 ^ 0x62950000 ^ (((v133 ^ 0x428160C2) << 8) ^ 0x15600000) & (v133 ^ 0x428160C2))));
  LODWORD(v105) = LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x69B0]) ^ v103;
  v140 = (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((46 * (v10 + STACK[0x6A60] == 15)) ^ LODWORD(STACK[0x6AB0]))) - 4);
  ++STACK[0x6A90];
  v141 = STACK[0x6A20];
  STACK[0x6A70] = v125 + 1;
  return v140(v141 + 1, v137 + 1, STACK[0x6A00] + 1, a4 + 1, v105 ^ 0xA5E18614 ^ v31, v139 ^ 0x6A8F3DF8u, a7 + 1, v138);
}

uint64_t sub_100A12D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  char v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v13 = LODWORD(STACK[0x6AB0]) ^ 0xA4D27B97;
  v14 = (STACK[0x6990] & 2) == 0;
  v15 = STACK[0x68D0];
  if ((STACK[0x6990] & 2) == 0)
    v15 = STACK[0x6880];
  LODWORD(STACK[0x6588]) = v15;
  v16 = STACK[0x6930];
  if (!v14)
    v16 = STACK[0x68E0];
  LODWORD(STACK[0x6590]) = v16;
  v17 = STACK[0x6720];
  if ((STACK[0x6980] & 2) != 0)
    v17 = STACK[0x6710];
  LODWORD(STACK[0x63C0]) = v17;
  v18 = (v9 + v12 + ((v12 + v8) >> 16) - v11 - v10) ^ 0xEC332374;
  LODWORD(STACK[0x6AC0]) = (v13 + 1529742291) | 0x823;
  v19 = ((v18 - (v18 >> 11)) ^ 0x59FBD367)
      - 21188642
      + (((v18 - (v18 >> 11)) << (((v13 - 45) | 0x23) ^ 0x3E)) & 0xB3F7A6CE);
  v20 = (v19 ^ 0xB7567E3B) & (2 * (v19 & 0xA7477CBB)) ^ v19 & 0xA7477CBB;
  v21 = ((2 * (v19 ^ 0xBFDAF669)) ^ 0x313B15A4) & (v19 ^ 0xBFDAF669) ^ (2 * (v19 ^ 0xBFDAF669)) & 0x189D8AD2;
  v22 = v21 ^ 0x8848A52;
  v23 = (v21 ^ 0x10990880) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x62762B48) & v22 ^ (4 * v22) & 0x189D8AD0;
  v25 = (v24 ^ 0x140A42) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x18898092)) ^ 0x89D8AD20) & (v24 ^ 0x18898092) ^ (16 * (v24 ^ 0x18898092)) & 0x189D8AD0;
  v27 = v25 ^ 0x189D8AD2 ^ (v26 ^ 0x8988800) & (v25 << 8);
  v28 = (v19 ^ (2
              * ((v27 << 16) & 0x189D0000 ^ v27 ^ ((v27 << 16) ^ 0xAD20000) & (((v26 ^ 0x100502D2) << 8) & 0x189D0000 ^ 0x150000 ^ (((v26 ^ 0x100502D2) << 8) ^ 0x1D8A0000) & (v26 ^ 0x100502D2))))) >> 6;
  v29 = v19
      - 1467562345
      + (((v28 ^ 0x8BF73A5A) + 672857780) ^ ((v28 ^ 0x14287723) - 1211780149) ^ ((v28 ^ 0x9DC23CDD) + 1043331125));
  v30 = (v29 ^ 0x5CDF6ED7) & (2 * (v29 & 0x5CD000D6)) ^ v29 & 0x5CD000D6;
  v31 = ((2 * (v29 ^ 0xC45F6F73)) ^ 0x311EDF4A) & (v29 ^ 0xC45F6F73) ^ (2 * (v29 ^ 0xC45F6F73)) & 0x988F6FA4;
  v32 = v31 ^ 0x888120A5;
  v33 = (v31 ^ 0x18012704) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0x623DBE94) & v32 ^ (4 * v32) & 0x988F6FA4;
  v35 = (v34 ^ 0xD2E81) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x98824121)) ^ 0x88F6FA50) & (v34 ^ 0x98824121) ^ (16 * (v34 ^ 0x98824121)) & 0x988F6FA0;
  v37 = v35 ^ 0x988F6FA5 ^ (v36 ^ 0x88866A00) & (v35 << 8);
  v38 = v29 ^ (2
             * ((v37 << 16) & 0x188F0000 ^ v37 ^ ((v37 << 16) ^ 0x6FA50000) & (((v36 ^ 0x100905A5) << 8) & 0x188F0000 ^ 0x10800000 ^ (((v36 ^ 0x100905A5) << 8) ^ 0xF6F0000) & (v36 ^ 0x100905A5))));
  v39 = ((v38 ^ 0xEAAADC60) - 128383589) ^ ((v38 ^ 0xBF437868) - 1380933229) ^ ((v38 ^ 0x292D7B94) + 1004446319);
  v40 = ((v39 + 1770559738) ^ 0xD02469F9) & (2 * ((v39 + 1770559738) & 0x99316DFA)) ^ (v39 + 1770559738) & 0x99316DFA;
  v41 = ((2 * ((v39 + 1770559738) ^ 0xE004AB3D)) ^ 0xF26B8D8E) & ((v39 + 1770559738) ^ 0xE004AB3D) ^ (2 * ((v39 + 1770559738) ^ 0xE004AB3D)) & 0x7935C6C6;
  v42 = v41 ^ 0x9144241;
  v43 = (v41 ^ 0x60018480) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0xE4D71B1C) & v42 ^ (4 * v42) & 0x7935C6C4;
  v45 = (v44 ^ 0x60150200) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x1920C4C3)) ^ 0x935C6C70) & (v44 ^ 0x1920C4C3) ^ (16 * (v44 ^ 0x1920C4C3)) & 0x7935C6C0;
  v47 = v45 ^ 0x7935C6C7 ^ (v46 ^ 0x11144487) & (v45 << 8);
  v48 = v39
      + 45745909
      + ((((v39 + 1770559738) ^ (2
                               * ((v47 << 16) & 0x79350000 ^ v47 ^ ((v47 << 16) ^ 0x46C70000) & (((v46 ^ 0x68218287) << 8) & 0x79350000 ^ 0x48310000 ^ (((v46 ^ 0x68218287) << 8) ^ 0x35C60000) & (v46 ^ 0x68218287))))) >> 12) ^ 0xFFF14AF1);
  v49 = v48 - (v48 >> 1) - ((2 * (v48 - (v48 >> 1))) & 0x42D06352) - 1587007063;
  v50 = (v49 ^ 0xDB7542D7)
      - ((((v49 >> 13) ^ 0x3C4BD340) - 80855498) ^ (((v49 >> 13) ^ 0x3BC07615) - 56255647) ^ (((v49 >> 13) ^ 0x78D7EFF)
                                                                                            - 1058499701));
  v51 = (v50 + 826668355) ^ 0xF38C6FD7;
  v52 = (2 * ((v50 + 826668355) & 0x961D419D)) & v51 ^ (v50 + 826668355) & 0x961D419D ^ ((2
                                                                                        * ((v50 + 826668355) & 0x961D419D)) & 0x2410020A | 0x40000400);
  v53 = (2 * v51) & 0x65912E4A ^ 0x2491224A ^ ((2 * v51) ^ 0xCB225C94) & v51;
  v54 = (4 * v52) & 0x65912E48 ^ v52 ^ ((4 * v52) ^ 0x1000) & v53;
  v55 = (4 * v53) & 0x65912E48 ^ 0x61910642 ^ ((4 * v53) ^ 0x9644B928) & v53;
  v56 = (16 * v54) & 0x65912E40 ^ v54 ^ ((16 * v54) ^ 0x4000) & v55;
  v57 = (16 * v55) & 0x65912E40 ^ 0x24810A4A ^ ((16 * v55) ^ 0x5912E4A0) & v55;
  v58 = v56 ^ (v56 << 8) & 0x65912E00 ^ ((v56 << 8) ^ 0x40000) & v57 ^ 0x25912A4A;
  v59 = ((v50 + 826668355) ^ (2
                            * ((v58 << 16) & 0x65910000 ^ v58 ^ ((v58 << 16) ^ 0x2E4A0000) & ((v57 << 8) & 0x65910000 ^ 0x64910000 ^ ((v57 << 8) ^ 0x112E0000) & v57)))) >> 4;
  v60 = v50
      - 1791845111
      + (((v59 ^ 0x11A70683) - 5020659) ^ ((v59 ^ 0x90C62EAB) + 2127711269) ^ ((v59 ^ 0x8032D9F8) + 1848032120))
      + 3792;
  v61 = (v60 ^ 0x2ACAF7A7) & (2 * (v60 & 0x42E8F7A7)) ^ v60 & 0x42E8F7A7;
  v62 = ((2 * (v60 ^ 0x2E9BB0E1)) ^ 0xD8E68E8C) & (v60 ^ 0x2E9BB0E1) ^ (2 * (v60 ^ 0x2E9BB0E1)) & 0x6C734746;
  v63 = v62 ^ 0x24114142;
  v64 = (v62 ^ 0x8620604) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0xB1CD1D18) & v63 ^ (4 * v63) & 0x6C734744;
  v66 = (v65 ^ 0x20410506) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x4C324246)) ^ 0xC7347460) & (v65 ^ 0x4C324246) ^ (16 * (v65 ^ 0x4C324246)) & 0x6C734740;
  v68 = v66 ^ 0x6C734746 ^ (v67 ^ 0x44304400) & (v66 << 8);
  v69 = v60 ^ (2
             * ((v68 << 16) & 0x6C730000 ^ v68 ^ ((v68 << 16) ^ 0x47460000) & (((v67 ^ 0x28430306) << 8) & 0x6C730000 ^ 0xC300000 ^ (((v67 ^ 0x28430306) << 8) ^ 0x73470000) & (v67 ^ 0x28430306))));
  v70 = ((v69 ^ 0x77ACA75E) - 685441015) ^ ((v69 ^ 0xDE481A0) - 1385355529) ^ ((v69 ^ 0x68C25FD5) - 934545276);
  v71 = ((v70 + 1341996153) ^ 0xA5643689) & (2 * ((v70 + 1341996153) & 0xB50446AD)) ^ (v70 + 1341996153) & 0xB50446AD;
  v72 = ((2 * ((v70 + 1341996153) ^ 0x8F6C339B)) ^ 0x74D0EA6C) & ((v70 + 1341996153) ^ 0x8F6C339B) ^ (2 * ((v70 + 1341996153) ^ 0x8F6C339B)) & 0x3A687536;
  v73 = v72 ^ 0xA281512;
  v74 = (v72 ^ 0x30002024) & (4 * v71) ^ v71;
  v75 = ((4 * v73) ^ 0xE9A1D4D8) & v73 ^ (4 * v73) & 0x3A687534;
  v76 = (v75 ^ 0x28205410) & (16 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x12482126)) ^ 0xA6875360) & (v75 ^ 0x12482126) ^ (16 * (v75 ^ 0x12482126)) & 0x3A687530;
  v78 = v76 ^ 0x3A687536 ^ (v77 ^ 0x22005116) & (v76 << 8);
  v79 = ((v70 + 1341996153) ^ (2
                             * ((v78 << 16) & 0x3A680000 ^ v78 ^ ((v78 << 16) ^ 0x75360000) & (((v77 ^ 0x18682416) << 8) & 0x3A680000 ^ 0x12080000 ^ (((v77 ^ 0x18682416) << 8) ^ 0x68750000) & (v77 ^ 0x18682416))))) >> 11;
  v80 = v70
      - 1199965142
      + (((v79 ^ 0xA0748C8E) - 320390943) ^ ((v79 ^ 0x8E42674A) - 1026436315) ^ ((v79 ^ 0x2E22D951) + 1655795008));
  v81 = v80 + (v80 >> 3) - ((2 * (v80 + (v80 >> 3))) & 0x8E20A3E0) + 1192251888;
  v82 = (((v81 ^ 0x9FD7F973) + 1613235853) ^ ((v81 ^ 0xC25F5BDF) + 1033937953) ^ ((v81 ^ 0x1A98F35C) - 446231388))
      - 700923492;
  v83 = v82 + (v82 >> 15) - ((v82 + (v82 >> 15)) >> 5);
  v84 = ((v83 + 2097841712 - ((v83 + 2097841712) >> 8)) ^ 0x8FFFFFFF)
      + 2 * ((v83 + 2097841712 - ((v83 + 2097841712) >> 8)) & 0xFFFFFFF)
      + 2075838523;
  v85 = (v84 ^ 0xF030B7F4) & (2 * (v84 & 0xF44537C6)) ^ v84 & 0xF44537C6;
  v86 = ((2 * (v84 ^ 0xD032FEF0)) ^ 0x48EF926C) & (v84 ^ 0xD032FEF0) ^ (2 * (v84 ^ 0xD032FEF0)) & 0x2477C936;
  v87 = v86 ^ 0x24104912;
  v88 = (v86 ^ 0x4258022) & (4 * v85) ^ v85;
  v89 = ((4 * v87) ^ 0x91DF24D8) & v87 ^ (4 * v87) & 0x2477C934;
  v90 = v88 ^ 0x2477C936 ^ (v89 ^ 0x570006) & (16 * v88);
  v91 = (16 * (v89 ^ 0x2420C926)) & 0x2477C930 ^ 0x20034816 ^ ((16 * (v89 ^ 0x2420C926)) ^ 0x477C9360) & (v89 ^ 0x2420C926);
  v92 = (v90 << 8) & 0x2477C900 ^ v90 ^ ((v90 << 8) ^ 0x77C93600) & v91;
  v93 = (v84 ^ (2
              * ((v92 << 16) & 0x24770000 ^ v92 ^ ((v92 << 16) ^ 0x49360000) & ((v91 << 8) & 0x24770000 ^ 0x360000 ^ ((v91 << 8) ^ 0x77C90000) & v91)))) >> 3;
  v94 = ((v83 + 2097841712 - ((v83 + 2097841712) >> 8)) ^ 0x8FFFFFFF)
      + 2 * ((v83 + 2097841712 - ((v83 + 2097841712) >> 8)) & 0xFFFFFFF)
      - 1530043650
      + (((v93 ^ 0xED4D1C96) + 735119304) ^ ((v93 ^ 0x34E25F44) - 226606058) ^ ((v93 ^ 0xC727D767) + 29084727));
  v95 = (v94 ^ 0xEBDFE9DD) & (2 * (v94 & 0xF31E0D1E)) ^ v94 & 0xF31E0D1E;
  v96 = ((2 * (v94 ^ 0xBE7EBED)) ^ 0xF1F3CDE6) & (v94 ^ 0xBE7EBED) ^ (2 * (v94 ^ 0xBE7EBED)) & 0xF8F9E6F2;
  v97 = v96 ^ 0x8082211;
  v98 = (v96 ^ 0xD0F046E1) & (4 * v95) ^ v95;
  v99 = ((4 * v97) ^ 0xE3E79BCC) & v97 ^ (4 * v97) & 0xF8F9E6F0;
  v100 = (v99 ^ 0xE0E182D3) & (16 * v98) ^ v98;
  v101 = ((16 * (v99 ^ 0x18186433)) ^ 0x8F9E6F30) & (v99 ^ 0x18186433) ^ (16 * (v99 ^ 0x18186433)) & 0xF8F9E6F0;
  v102 = v100 ^ 0xF8F9E6F3 ^ (v101 ^ 0x88986600) & (v100 << 8);
  v103 = v94 ^ (2
              * ((v102 << 16) & 0x78F90000 ^ v102 ^ ((v102 << 16) ^ 0x66F30000) & (((v101 ^ 0x706180C3) << 8) & 0x78F90000 ^ 0x190000 ^ (((v101 ^ 0x706180C3) << 8) ^ 0x79E60000) & (v101 ^ 0x706180C3))));
  v104 = (v103 ^ 0x22EB2C17) + ((v103 >> 10) ^ 0xFFF74534) + 1;
  v105 = v104 - (v104 >> 7);
  v106 = v38 ^ a8 ^ v81 ^ (v105 - ((2 * v105) & 0xB135764E) - 660948185);
  v107 = v105 - 119608444 + ((v105 - 119608444) >> 8) - ((v105 - 119608444 + ((v105 - 119608444) >> 8)) >> 7);
  v108 = v49 ^ a6 ^ (v83 - ((2 * v83) & 0x5E9B3DB4) + 793616090) ^ v107;
  v109 = ((v107 - 1788676026) ^ 0xD59493BD) & (2 * ((v107 - 1788676026) & 0xC5A6A33E)) ^ (v107 - 1788676026) & 0xC5A6A33E;
  v110 = ((2 * ((v107 - 1788676026) ^ 0xD5DDD3F9)) ^ 0x20F6E18E) & ((v107 - 1788676026) ^ 0xD5DDD3F9) ^ (2 * ((v107 - 1788676026) ^ 0xD5DDD3F9)) & 0x107B70C6;
  v111 = v110 ^ 0x10091041;
  v112 = (v110 ^ 0x320081) & (4 * v109) ^ v109;
  v113 = ((4 * v111) ^ 0x41EDC31C) & v111 ^ (4 * v111) & 0x107B70C4;
  v114 = (v113 ^ 0x694003) & (16 * v112) ^ v112;
  v115 = ((16 * (v113 ^ 0x101230C3)) ^ 0x7B70C70) & (v113 ^ 0x101230C3) ^ (16 * (v113 ^ 0x101230C3)) & 0x107B70C0;
  v116 = v114 ^ 0x107B70C7 ^ (v115 ^ 0x330087) & (v114 << 8);
  v117 = ((v107 - 1788676026) ^ (2
                               * ((v116 << 16) & 0x107B0000 ^ v116 ^ ((v116 << 16) ^ 0x70C70000) & (((v115 ^ 0x10487087) << 8) & 0x107B0000 ^ 0xB0000 ^ (((v115 ^ 0x10487087) << 8) ^ 0x7B700000) & (v115 ^ 0x10487087))))) >> 8;
  LODWORD(STACK[0x66E8]) = v106;
  v118 = v107
       + 444472707
       - (((v117 ^ 0x5DE1C099) - 454604507) ^ ((v117 ^ 0xCDBC2F18) + 1958389414) ^ ((v117 ^ 0x909839C3) + 698265727));
  v119 = (v118 ^ 0xF96E9FB4) & (2 * (v118 & 0xFA4EDE01)) ^ v118 & 0xFA4EDE01;
  v120 = ((2 * (v118 ^ 0x59760BB4)) ^ 0x4671AB6A) & (v118 ^ 0x59760BB4) ^ (2 * (v118 ^ 0x59760BB4)) & 0xA338D5B4;
  v121 = v120 ^ 0xA1085495;
  v122 = (v120 ^ 0x2308491) & (4 * v119) ^ v119;
  v123 = ((4 * v121) ^ 0x8CE356D4) & v121 ^ (4 * v121) & 0xA338D5B4;
  v124 = (v123 ^ 0x80205491) & (16 * v122) ^ v122;
  v125 = ((16 * (v123 ^ 0x23188121)) ^ 0x338D5B50) & (v123 ^ 0x23188121) ^ (16 * (v123 ^ 0x23188121)) & 0xA338D5B0;
  v126 = v124 ^ 0xA338D5B5 ^ (v125 ^ 0x23085100) & (v124 << 8);
  v127 = (v118 ^ (2
                * ((v126 << 16) & 0x23380000 ^ v126 ^ ((v126 << 16) ^ 0x55B50000) & (((v125 ^ 0x803084A5) << 8) & 0x23380000 ^ 0x3280000 ^ (((v125 ^ 0x803084A5) << 8) ^ 0x38D50000) & (v125 ^ 0x803084A5))))) >> 6;
  v128 = v118
       - 500632044
       + (((v127 ^ 0x263BE5B1) - 1121284308) ^ ((v127 ^ 0x59DE07E) - 1634956571) ^ ((v127 ^ 0x215F781A) - 1169288575));
  v129 = v128 & 0x7E3DD09D ^ 0x14422092 ^ (2 * (v128 & 0x7E3DD09D)) & (v128 ^ 0x6AFFF00F) ^ ((2 * (v128 & 0x7E3DD09D)) & 0x14422012 | 0x800000);
  v130 = (2 * (v128 ^ 0x6AFFF00F)) & 0x14C22092 ^ 0x14422092 ^ ((2 * (v128 ^ 0x6AFFF00F)) ^ 0x29844124) & (v128 ^ 0x6AFFF00F);
  v131 = (4 * v129) & 0x14C22090 ^ v129 ^ ((4 * v129) ^ 0x53088248) & v130;
  v132 = (4 * v130) & 0x14C22090 ^ 0x4C22092 ^ ((4 * v130) ^ 0x53088248) & v130;
  v133 = v131 ^ (16 * v131) & 0x14C22090 ^ ((16 * v131) ^ 0x4C220920) & v132 ^ 0x14020000;
  v134 = (16 * v132) & 0x14C22090 ^ 0x10C02092 ^ ((16 * v132) ^ 0x4C220920) & v132;
  v135 = (v133 << 8) & 0x14C22000 ^ v133 ^ ((v133 << 8) ^ 0xC2209200) & v134;
  LODWORD(STACK[0x6710]) = v106 ^ 0xED0C2605;
  v136 = (v106 ^ 0xED0C2605 ^ -(v106 ^ 0xED0C2605) ^ ((v106 ^ 0x12F3D9E6) + 29)) + 28;
  v137 = v69 ^ a5 ^ v103 ^ v128 ^ (2
                                 * ((v135 << 16) & 0x14C20000 ^ v135 ^ ((v135 << 16) ^ 0x20920000) & ((v134 << 8) & 0x14C20000 ^ 0x14C20000 ^ ((v134 << 8) ^ 0x42200000) & v134)));
  LODWORD(STACK[0x6570]) = v136 & 0xFFFFFF80;
  LODWORD(STACK[0x6860]) = v136 & 0x7F;
  v138 = (v137 | 0xFFFFFFF8) + 841761928;
  LODWORD(STACK[0x65C0]) = v138 ^ 0x79BCD0AF;
  v139 = (v138 & 0x30244084) + 4339412 + (v138 ^ 0x79BCD0AF) - ((v138 ^ 0x79BCD0AF) & 0x43000424) - 3012;
  LODWORD(STACK[0x6750]) = v139;
  LODWORD(STACK[0x68D0]) = v137;
  v140 = (((2 * (v137 & 0xFFFFFFF8 ^ 0xB04D7440)) & 0x7BB65860) - (v137 & 0xFFFFFFF8 ^ 0xB04D7440) - 1037773873) ^ 0x8092D6AD;
  LODWORD(STACK[0x6A60]) = (v140 | 0x9B8B8D99) - (v140 | 0x64747266);
  v141 = ((((4 - v137) ^ (v137 + 4)) ^ ((v137 ^ 3) + 1)) + 1) & 7 ^ 0x82C64AE4;
  v142 = ((v141 & 0x864262 ^ 0x58010003) + (v141 & 0x400085) - 1) ^ 0x58C742E6;
  LODWORD(STACK[0x6740]) = v139 ^ 0x78B15662;
  if ((v139 ^ 0x78B15662) == 0x4047ADFA)
    v143 = 0;
  else
    v143 = 255;
  LODWORD(STACK[0x6A90]) = v142;
  v144 = v143 << v142;
  LODWORD(STACK[0x6A50]) = 16843009 * v144;
  LODWORD(STACK[0x6A30]) = 654311424 * v144;
  v145 = v136 ^ 0x1C;
  if ((v139 ^ 0x78B15662) == 0x4047ADFA)
    v146 = 0;
  else
    v146 = ~(_BYTE)v144;
  LODWORD(STACK[0x6580]) = v145;
  LODWORD(STACK[0x6A40]) = (v145 & v146);
  LODWORD(STACK[0x6730]) = v136;
  LODWORD(STACK[0x6A20]) = v136 ^ 0x49 ^ ((unsigned __int16)(v136 ^ 0x1849) >> 8) ^ ((v136 ^ 0xD4F21849) >> 16) ^ HIBYTE(v136) ^ 0x95;
  LODWORD(STACK[0x68E0]) = v108;
  v147 = STACK[0x6890];
  v148 = STACK[0xDB08];
  v149 = *(_QWORD *)(STACK[0xDB08] + 8 * (0x9D80BF49 % STACK[0x6890]));
  LODWORD(STACK[0x6880]) = 16843009
                         * (v108 ^ 0xDD ^ ((unsigned __int16)(v108 ^ 0xC6DD) >> 8) ^ ((v108 ^ 0x50AEC6DD) >> 16) ^ HIBYTE(v108) ^ 0xBE);
  v150 = *(_QWORD *)(v148
                   + 8
                   * (((((v149 ^ 0xB725F2571FB416BFLL) + 0x2732FAFC7447128DLL) ^ ((v149 ^ 0x39B0E7BB3E899FBBLL)
                                                                                - 0x565810EFAA856477) ^ ((v149 ^ 0xD6CD4DB47965D15CLL) + 0x46DA451F1296D570))
                     + 0x37B0AF0DA0FB3473)
                    % v147));
  v151 = *(_QWORD *)(v148
                   + 8
                   * (((((v150 ^ 0x87B19A5BB4185C0CLL) + 0x55FC9749A9B26007) ^ ((v150 ^ 0xDBE2F16E49AFE619)
                                                                                + 0x9AFFC7C5405DA14) ^ ((v150 ^ 0x40B336DA5EFE24DLL) - 0x29B9C18047BA21B8))
                     + 0x75EAAAB64188E170)
                    % v147));
  STACK[0x6AB0] = v148;
  v152 = *(_QWORD *)(v148
                   + 8
                   * (((((v151 ^ 0xB80F18F64253673CLL) + 0x349DC10CF0180432) ^ ((v151 ^ 0x25916697C3C2808DLL)
                                                                                - 0x56FC40928E761C7FLL) ^ ((v151 ^ 0xC5C62639D9C9BFE9) + 0x4954FFC36B82DCE5))
                     + 0x2B357E5DEEBC604ALL)
                    % v147));
  LODWORD(v152) = ((((v152 ^ 0x52A29B03FB4AB036) - 0x38AA040FBF59253BLL) ^ ((v152 ^ 0x5E7D8D92B956A9F6)
                                                                            - 0x3475129EFD453CFBLL) ^ ((v152 ^ 0x54874EC91A444198uLL) - 0x3E8FD1C55E57D495))
                 + 0x3250C75459B90C5ALL)
                % v147;
  LODWORD(STACK[0x6A70]) = ((((v152 - ((2 * v152) & 0x3368FDBC) + 968130270) ^ 0x98ED7035) + 277892675) ^ (((v152 - ((2 * v152) & 0x3368FDBC) + 968130270) ^ 0x71515D63) - 114531563) ^ (((v152 - ((2 * v152) & 0x3368FDBC) + 968130270) ^ 0xD0085388) + 1484090880))
                         - 1083941884;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((27250 * (v13 != 1888936445)) ^ (v13 + 1529733636))))();
}

uint64_t sub_100A14858@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  _BOOL4 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  _BOOL4 v134;

  v6 = LODWORD(STACK[0x6A70]);
  v7 = v6 < a3;
  v8 = (a2 | ((unint64_t)(a2 < ((LODWORD(STACK[0x6AC0]) - 8024) ^ 0x4812D87Du)) << 32)) + 0x3D7BAB443566B79FLL;
  v9 = (((*(_QWORD *)(STACK[0x6AB0] + 8 * v8 + 0x1422A5DC1432AE38) ^ 0xB4F3FAFA814DE5D4) + 0x58AF7F2536B513F2) ^ ((*(_QWORD *)(STACK[0x6AB0] + 8 * v8 + 0x1422A5DC1432AE38) ^ 0x58011D289F80F69ELL) - 0x4BA26708D787FF44) ^ ((*(_QWORD *)(STACK[0x6AB0] + 8 * v8 + 0x1422A5DC1432AE38) ^ 0xB4AABF8A46954B12) + 0x58F63A55F16DBD38))
     * v4
     - 0x579CCA6237BBF18ELL;
  v10 = (v9 ^ 0x4C5EA089F6E8340) & (2 * (v9 & 0xA6E98B521F8E0388)) ^ v9 & 0xA6E98B521F8E0388;
  v11 = ((2 * (v9 ^ 0x45EC2892768150)) ^ 0x4D58CEF51BF105B0) & (v9 ^ 0x45EC2892768150) ^ (2
                                                                                              * (v9 ^ 0x45EC2892768150)) & 0xA6AC677A8DF882D8;
  v12 = v11 ^ 0xA2A4210A84088248;
  v13 = (v11 ^ 0x408465008700000) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x9AB19DEA37E20B60) & v12 ^ (4 * v12) & 0xA6AC677A8DF882D8;
  v15 = (v14 ^ 0x82A0056A05E00240) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x240C621088188098)) ^ 0x6AC677A8DF882D80) & (v14 ^ 0x240C621088188098) ^ (16 * (v14 ^ 0x240C621088188098)) & 0xA6AC677A8DF882D0;
  v17 = (((v16 ^ 0x8428005200708258) << 8) ^ 0xAC677A8DF882D800) & (v16 ^ 0x8428005200708258) ^ ((v16 ^ 0x8428005200708258) << 8) & 0xA6AC677A8DF88200;
  v18 = (v16 ^ 0x228467288D880000) & (v15 << 8) ^ v15 ^ 0xA6AC677A8DF882D8 ^ (v17 ^ 0xA424620888800000) & (((v16 ^ 0x228467288D880000) & (v15 << 8) ^ v15) << 16);
  v19 = v9 ^ (2
            * ((v18 << 32) & 0x26AC677A00000000 ^ v18 ^ ((v18 << 32) ^ 0xDF882D800000000) & (((v17 ^ 0x2880572057802D8) << 16) & 0x26AC677A00000000 ^ 0x84620200000000 ^ (((v17 ^ 0x2880572057802D8) << 16) ^ 0x677A8DF800000000) & (v17 ^ 0x2880572057802D8))));
  v20 = v8
      + 0x2B8C0F0EF65FD16ALL
      + (((v19 ^ a1 ^ 0x84C56CB9E21957E0) - 0x4C27D34308317343) ^ ((v19 ^ a1 ^ 0x476466829BAF66ABLL)
                                                                     + 0x707926878E78BDF8) ^ ((v19 ^ a1 ^ 0x21404B2C7DC93773)
                                                                                              + 0x165D0B29681EEC30));
  v21 = (v20 ^ 0x96FF525A7279A6F9) & (2 * (v20 & 0xC0FC449A7A7DA6F8)) ^ v20 & 0xC0FC449A7A7DA6F8;
  v22 = ((2 * (v20 ^ 0x17F7D35E6628E7F9)) ^ 0xAE172F8838AA8202) & (v20 ^ 0x17F7D35E6628E7F9) ^ (2 * (v20 ^ 0x17F7D35E6628E7F9)) & 0xD70B97C41C554100;
  v23 = ((4 * (v22 ^ 0x5108904404554101)) ^ 0x5C2E5F1071550404) & (v22 ^ 0x5108904404554101) ^ (4 * (v22 ^ 0x5108904404554101)) & 0xD70B97C41C554100;
  v24 = (v23 ^ 0x540A170010550000) & (16 * ((v22 ^ 0x603068018000000) & (4 * v21) ^ v21)) ^ (v22 ^ 0x603068018000000) & (4 * v21) ^ v21;
  v25 = ((16 * (v23 ^ 0x830180C40C004101)) ^ 0x70B97C41C5541010) & (v23 ^ 0x830180C40C004101) ^ (16 * (v23 ^ 0x830180C40C004101)) & 0xD70B97C41C554100;
  v26 = (((v25 ^ 0x8702838418014101) << 8) ^ 0xB97C41C55410100) & (v25 ^ 0x8702838418014101) ^ ((v25 ^ 0x8702838418014101) << 8) & 0xD70B97C41C554100;
  v27 = (v25 ^ 0x5009144004540000) & (v24 << 8) ^ v24 ^ 0xD70B97C41C554101 ^ (v26 ^ 0x303840414410000) & (((v25 ^ 0x5009144004540000) & (v24 << 8) ^ v24) << 16);
  v28 = (v20 ^ (2
              * ((v27 << 32) & 0x570B97C400000000 ^ v27 ^ ((v27 << 32) ^ 0x1C55410100000000) & (((v26 ^ 0xD40813C008144001) << 16) & 0x570B97C400000000 ^ 0x400B838000000000 ^ (((v26 ^ 0xD40813C008144001) << 16) ^ 0x17C41C5500000000) & (v26 ^ 0xD40813C008144001))))) >> 32;
  v29 = v20
      - (((v28 ^ 0x6950DCAC5E0968EFLL) + 0x27BEFD0637AB2976) ^ ((v28 ^ 0x437A76D8C73483D5) + 0xD945772AE96C250) ^ ((v28 ^ 0x2A2AAA74DFD48228) + 0x64C48BDEB676C3B3))
      - 0xB78754963101E0CLL;
  v30 = ((2 * (v29 ^ 0xECD89D5E862DAE6ELL)) ^ 0xEF748DA115EA87C6) & (v29 ^ 0xECD89D5E862DAE6ELL) ^ (2 * (v29 ^ 0xECD89D5E862DAE6ELL)) & 0xF7BA46D08AF543E2;
  v31 = v30 ^ 0x108A42508A154021;
  v32 = (v29 ^ 0xDA589B4E8E9CED6CLL) & (2 * (v29 & 0x1B62DB8E0CD8ED8DLL)) ^ v29 & 0x1B62DB8E0CD8ED8DLL;
  v33 = (v30 ^ 0xE710040000E00240) & (4 * v32) ^ v32;
  v34 = ((4 * v31) ^ 0xDEE91B422BD50F8CLL) & v31 ^ (4 * v31) & 0xF7BA46D08AF543E0;
  v35 = ((16 * (v34 ^ 0x2112449080204063)) ^ 0x7BA46D08AF543E30) & (v34 ^ 0x2112449080204063) ^ (16 * (v34 ^ 0x2112449080204063)) & 0xF7BA46D08AF543E0;
  v36 = (v35 ^ 0x73A044008A540200) & (((v34 ^ 0xD6A802400AD50380) & (16 * v33) ^ v33) << 8) ^ (v34 ^ 0xD6A802400AD50380) & (16 * v33) ^ v33;
  v37 = (((v35 ^ 0x841A02D000A141C3) << 8) ^ 0xBA46D08AF543E300) & (v35 ^ 0x841A02D000A141C3) ^ ((v35 ^ 0x841A02D000A141C3) << 8) & 0xF7BA46D08AF54300;
  v38 = v36 ^ 0xF7BA46D08AF543E3 ^ (v37 ^ 0xB202408080410000) & (v36 << 16);
  v39 = (v29 ^ (2
              * ((v38 << 32) & 0x77BA46D000000000 ^ v38 ^ ((v38 << 32) ^ 0xAF543E300000000) & (((v37 ^ 0x45B806500AB400E3) << 16) & 0x77BA46D000000000 ^ 0x312A440000000000 ^ (((v37 ^ 0x45B806500AB400E3) << 16) ^ 0x46D08AF500000000) & (v37 ^ 0x45B806500AB400E3))))) >> 16;
  v40 = v29
      + 0x7E3618DAAC3F3396
      + (((v39 ^ 0xE051614625C84559) - 0x161BDE3E979C71F7) ^ ((v39 ^ 0xDFD847EDB7B3428) + 0x448C4F996D0FF7ALL) ^ ((v39 ^ 0xEDAC144E2D1C6843) - 0x1BE6AB369F485CEDLL));
  v41 = (v40 ^ 0x936604FD9200C752) & (2 * (v40 & 0x937710C1C294E793)) ^ v40 & 0x937710C1C294E793;
  v42 = ((2 * (v40 ^ 0x934E24FC9708C276)) ^ 0x72687AAB384BCALL) & (v40 ^ 0x934E24FC9708C276) ^ (2
                                                                                                  * (v40 ^ 0x934E24FC9708C276)) & 0x39343D559C25E4;
  v43 = v42 ^ 0x9140554842425;
  v44 = (v42 ^ 0x300008001000C0) & (4 * v41) ^ v41;
  v45 = ((4 * v43) ^ 0xE4D0F556709794) & v43 ^ (4 * v43) & 0x39343D559C25E4;
  v46 = (v45 ^ 0x20103554100580) & (16 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0x192408018C2061)) ^ 0x39343D559C25E50) & (v45 ^ 0x192408018C2061) ^ (16
                                                                                                * (v45 ^ 0x192408018C2061)) & 0x39343D559C25E0;
  v48 = (((v47 ^ 0x283428041C21A5) << 8) ^ 0x39343D559C25E500) & (v47 ^ 0x283428041C21A5) ^ ((v47 ^ 0x283428041C21A5) << 8) & 0x39343D559C2500;
  v49 = (v47 ^ 0x11001551800400) & (v46 << 8) ^ v46 ^ 0x39343D559C25E5 ^ (v48 ^ 0x30341514040000) & (((v47 ^ 0x11001551800400) & (v46 << 8) ^ v46) << 16);
  v50 = (v40 ^ (2
              * ((v49 << 32) & 0x39343D00000000 ^ v49 ^ ((v49 << 32) ^ 0x559C25E500000000) & (((v48 ^ 0x90028419800E5) << 16) & 0x39343D00000000 ^ 0x202100000000 ^ (((v48 ^ 0x90028419800E5) << 16) ^ 0x343D559C00000000) & (v48 ^ 0x90028419800E5))))) >> 8;
  v19 ^= 0xF9F5D0D2A9C3E79ELL;
  v51 = v40
      - (((v50 ^ 0x53AA31F2C66213EDLL) + 0x3AB15781D7C9222CLL) ^ ((v50 ^ 0xDFE86845D6D29EC6) - 0x490CF1C9388650FFLL) ^ ((v50 ^ 0x8CD16C87E1D92187) - 0x1A35F50B0F8DEFBELL))
      - 0x2D4BCAEA0E8E7236;
  v52 = (v51 ^ 0xB88E78414FFB387) & (2 * (v51 & 0x832CC71694FF8328)) ^ v51 & 0x832CC71694FF8328;
  v53 = ((2 * (v51 ^ 0xFD9EB851DFAB797)) ^ 0x19EA5927120A697ELL) & (v51 ^ 0xFD9EB851DFAB797) ^ (2
                                                                                                  * (v51 ^ 0xFD9EB851DFAB797)) & 0x8CF52C93890534BELL;
  v54 = ((4 * (v53 ^ 0x8415249089051481)) ^ 0x33D4B24E2414D2FCLL) & (v53 ^ 0x8415249089051481) ^ (4 * (v53 ^ 0x8415249089051481)) & 0x8CF52C93890534BCLL;
  v55 = ((16 * (v54 ^ 0x8C210C9189012403)) ^ 0xCF52C93890534BF0) & (v54 ^ 0x8C210C9189012403) ^ (16 * (v54 ^ 0x8C210C9189012403)) & 0x8CF52C93890534B0;
  v56 = (v55 ^ 0x8C50081080010000) & (((v54 ^ 0xD42002000410A0) & (16
                                                                     * ((v53 ^ 0x8E0080200000020) & (4 * v52) ^ v52)) ^ (v53 ^ 0x8E0080200000020) & (4 * v52) ^ v52) << 8) ^ (v54 ^ 0xD42002000410A0) & (16 * ((v53 ^ 0x8E0080200000020) & (4 * v52) ^ v52)) ^ (v53 ^ 0x8E0080200000020) & (4 * v52) ^ v52;
  v57 = (((v55 ^ 0xA524830904340FLL) << 8) ^ 0xF52C93890534BF00) & (v55 ^ 0xA524830904340FLL) ^ ((v55 ^ 0xA524830904340FLL) << 8) & 0x8CF52C9389053400;
  v58 = v56 ^ 0x8CF52C93890534BFLL ^ (v57 ^ 0x8424008101040000) & (v56 << 16);
  v59 = v51 ^ (2
             * ((v58 << 32) & 0xCF52C9300000000 ^ v58 ^ ((v58 << 32) ^ 0x90534BF00000000) & (((v57 ^ 0x8D12C12880100BFLL) << 16) & 0xCF52C9300000000 ^ 0x64249200000000 ^ (((v57 ^ 0x8D12C12880100BFLL) << 16) ^ 0x2C93890500000000) & (v57 ^ 0x8D12C12880100BFLL))));
  v60 = v8
      + 0x39A7CE9D057224D1
      + (((v59 ^ v19 ^ 0xD275AC6E3095691FLL) - 0x5EA4661C471EF498) ^ ((v59 ^ v19 ^ 0x4F948F98E91AFF09)
                                                                      + 0x3CBABA15616E9D72) ^ ((v59 ^ v19 ^ 0xC396524F2C69DE6)
                                                                                               + 0x7F1750A97AB2FF9FLL));
  v61 = (v60 ^ 0x85E7503C9996E649) & (2 * (v60 & 0xA5E612BED9D6C76DLL)) ^ v60 & 0xA5E612BED9D6C76DLL;
  v62 = ((2 * (v60 ^ 0xCCEF50498893E693)) ^ 0xD21285EEA28A43FCLL) & (v60 ^ 0xCCEF50498893E693) ^ (2 * (v60 ^ 0xCCEF50498893E693)) & 0x690942F7514521FELL;
  v63 = ((4 * (v62 ^ 0x2909421151452002)) ^ 0xA4250BDD451487F8) & (v62 ^ 0x2909421151452002) ^ (4 * (v62 ^ 0x2909421151452002)) & 0x690942F7514521FCLL;
  v64 = (v63 ^ 0x200102D5410401F0) & (16 * ((v62 ^ 0xE6000001FCLL) & (4 * v61) ^ v61)) ^ (v62 ^ 0xE6000001FCLL) & (4 * v61) ^ v61;
  v65 = ((16 * (v63 ^ 0x4908402210412006)) ^ 0x90942F7514521FE0) & (v63 ^ 0x4908402210412006) ^ (16 * (v63 ^ 0x4908402210412006)) & 0x690942F7514521F0;
  v66 = v65 ^ 0x690940824105201ELL;
  v67 = (v65 ^ 0x27510400100) & (v64 << 8) ^ v64;
  v68 = ((v66 << 8) ^ 0x942F7514521FE00) & v66 ^ (v66 << 8) & 0x690942F751452100;
  v69 = (v60 ^ (2
              * (((v67 ^ 0x690942F7514521FELL ^ (v68 ^ 0x900425141010000) & (v67 << 16)) << 32) & 0x690942F700000000 ^ v67 ^ 0x690942F7514521FELL ^ (v68 ^ 0x900425141010000) & (v67 << 16) ^ (((v67 ^ 0x690942F7514521FELL ^ (v68 ^ 0x900425141010000) & (v67 << 16)) << 32) ^ 0x514521FE00000000) & (((v68 ^ 0x600900A6104401FELL) << 16) & 0x690942F700000000 ^ 0x290802B200000000 ^ (((v68 ^ 0x600900A6104401FELL) << 16) ^ 0x42F7514500000000) & (v68 ^ 0x600900A6104401FELL))))) >> 32;
  v70 = v60
      - (((v69 ^ 0xFDBAC35D9BC25E6DLL) - 0xE9D455A6C5C3FFFLL) ^ ((v69 ^ 0x3F9CDB68F1A35EF7) + 0x3344A290F9C2C09BLL) ^ ((v69 ^ 0xC22618359F979626) - 0x31019E326809F7B4));
  v71 = ((v70 + 0x23B868A33DBC952DLL) ^ 0xE349492D5ADB39BLL) & (2 * ((v70 + 0x23B868A33DBC952DLL) & 0x8F06241499B13B12)) ^ (v70 + 0x23B868A33DBC952DLL) & 0x8F06241499B13B12;
  v72 = ((2 * ((v70 + 0x23B868A33DBC952DLL) ^ 0x1A38D49AE7EFF79FLL)) ^ 0x2A7DE11CFCBD991ALL) & ((v70
                                                                                               + 0x23B868A33DBC952DLL) ^ 0x1A38D49AE7EFF79FLL) ^ (2 * ((v70 + 0x23B868A33DBC952DLL) ^ 0x1A38D49AE7EFF79FLL)) & 0x953EF08E7E5ECC8CLL;
  v73 = ((4 * (v72 ^ 0x9502108202424485)) ^ 0x54FBC239F97B3234) & (v72 ^ 0x9502108202424485) ^ (4 * (v72 ^ 0x9502108202424485)) & 0x953EF08E7E5ECC8CLL;
  v74 = (v73 ^ 0x143AC008785A0000) & (16 * ((v72 ^ 0x38A0046C0C8808) & (4 * v71) ^ v71)) ^ (v72 ^ 0x38A0046C0C8808) & (4 * v71) ^ v71;
  v75 = ((16 * (v73 ^ 0x810430860604CC89)) ^ 0x53EF08E7E5ECC8D0) & (v73 ^ 0x810430860604CC89) ^ (16 * (v73 ^ 0x810430860604CC89)) & 0x953EF08E7E5ECC80;
  v76 = (v75 ^ 0x112E0086644CC800) & (v74 << 8) ^ v74;
  v77 = (((v75 ^ 0x8410F0081A12040DLL) << 8) ^ 0x3EF08E7E5ECC8D00) & (v75 ^ 0x8410F0081A12040DLL) ^ ((v75 ^ 0x8410F0081A12040DLL) << 8) & 0x953EF08E7E5ECC00;
  v78 = v76 ^ 0x953EF08E7E5ECC8DLL ^ (v77 ^ 0x1430800E5E4C0000) & (v76 << 16);
  v79 = ((v70 + 0x23B868A33DBC952DLL) ^ (2
                                       * ((v78 << 32) & 0x153EF08E00000000 ^ v78 ^ ((v78 << 32) ^ 0x7E5ECC8D00000000) & (((v77 ^ 0x810E70802012408DLL) << 16) & 0x153EF08E00000000 ^ 0x530808000000000 ^ (((v77 ^ 0x810E70802012408DLL) << 16) ^ 0x708E7E5E00000000) & (v77 ^ 0x810E70802012408DLL))))) >> 16;
  v80 = v70
      + 0x1C7A3959FA585DFLL
      + (((v79 ^ 0x9665C90FBE9396FFLL) - 0x83B9865C50099FFLL) ^ ((v79 ^ 0x8A68D7A1A10C2906) - 0x143686CBDA9F2606) ^ ((v79 ^ 0x1C0D93E85B8FDAF5) + 0x7DAC3D7DDFE32A0BLL));
  v81 = (v80 ^ 0x4E55A42D762B376BLL) & (2 * (v80 & 0x4F55C54E774BB46CLL)) ^ v80 & 0x4F55C54E774BB46CLL;
  v82 = ((2 * (v80 ^ 0xD65E2CAD5CAB3763)) ^ 0x3217D3C657C1061ELL) & (v80 ^ 0xD65E2CAD5CAB3763) ^ (2 * (v80 ^ 0xD65E2CAD5CAB3763)) & 0x990BE9E32BE0830ELL;
  v83 = ((4 * (v82 ^ 0x8908282128208101)) ^ 0x642FA78CAF820C3CLL) & (v82 ^ 0x8908282128208101) ^ (4 * (v82 ^ 0x8908282128208101)) & 0x990BE9E32BE0830CLL;
  v84 = (v83 ^ 0xBA1802B800000) & (16 * ((v82 ^ 0x1003014203400200) & (4 * v81) ^ v81)) ^ (v82 ^ 0x1003014203400200) & (4 * v81) ^ v81;
  v85 = ((16 * (v83 ^ 0x9900486300608303)) ^ 0x90BE9E32BE0830F0) & (v83 ^ 0x9900486300608303) ^ (16 * (v83 ^ 0x9900486300608303)) & 0x990BE9E32BE08300;
  v86 = (v85 ^ 0x900A88222A000000) & (v84 << 8) ^ v84;
  v87 = (((v85 ^ 0x90161C101E0830FLL) << 8) ^ 0xBE9E32BE0830F00) & (v85 ^ 0x90161C101E0830FLL) ^ ((v85 ^ 0x90161C101E0830FLL) << 8) & 0x990BE9E32BE08300;
  v88 = v86 ^ 0x990BE9E32BE0830FLL ^ (v87 ^ 0x909E12320800000) & (v86 << 16);
  v89 = (v80 ^ (2
              * ((v88 << 32) & 0x190BE9E300000000 ^ v88 ^ ((v88 << 32) ^ 0x2BE0830F00000000) & (((v87 ^ 0x900208C00B60800FLL) << 16) & 0x190BE9E300000000 ^ 0x1008C00300000000 ^ (((v87 ^ 0x900208C00B60800FLL) << 16) ^ 0x69E32BE000000000) & (v87 ^ 0x900208C00B60800FLL))))) >> 8;
  v90 = v80
      - (((v89 ^ 0x9522E49F0918F37CLL) + 0x96A858E91ED41BELL) ^ ((v89 ^ 0x1B6BD16444D2708BLL) - 0x78DC4F8A23D83DB5) ^ ((v89 ^ 0x8E2676EFC3EA0945) + 0x126E17FE5B1FBB85))
      + 0x6815F6B00DCCE508;
  v91 = (v90 ^ 0x9E0CACC963498BACLL) & (2 * (v90 & 0xDC4888CA636D93CCLL)) ^ v90 & 0xDC4888CA636D93CCLL;
  v92 = ((2 * (v90 ^ 0x3E0DAD49A15B8DB4)) ^ 0xC48A4B07846C3CF0) & (v90 ^ 0x3E0DAD49A15B8DB4) ^ (2 * (v90 ^ 0x3E0DAD49A15B8DB4)) & 0xE2452583C2361E78;
  v93 = (v92 ^ 0xC000010380241C70) & (4 * v91) ^ v91;
  v94 = ((4 * (v92 ^ 0x2245248042120208)) ^ 0x8914960F08D879E0) & (v92 ^ 0x2245248042120208) ^ (4 * (v92 ^ 0x2245248042120208)) & 0xE2452583C2361E78;
  v95 = (v94 ^ 0x8004040300101860) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0x62412180C2260618)) ^ 0x2452583C2361E780) & (v94 ^ 0x62412180C2260618) ^ (16 * (v94 ^ 0x62412180C2260618)) & 0xE2452583C2361E70;
  v97 = v96 ^ 0xC2052583C0161878;
  v98 = (v96 ^ 0x2040000002200600) & (v95 << 8) ^ v95;
  v99 = ((v97 << 8) ^ 0x452583C2361E7800) & v97 ^ (v97 << 8) & 0xE2452583C2361E00;
  v100 = v98 ^ 0xE2452583C2361E78 ^ (v99 ^ 0x4005018202160000) & (v98 << 16);
  v101 = v90 ^ (2
              * ((v100 << 32) & 0x6245258300000000 ^ v100 ^ ((v100 << 32) ^ 0x42361E7800000000) & (((v99 ^ 0xA2402401C0200678) << 16) & 0x6245258300000000 ^ 0x4244258100000000 ^ (((v99 ^ 0xA2402401C0200678) << 16) ^ 0x2583C23600000000) & (v99 ^ 0xA2402401C0200678))));
  v102 = v8
       - 0xB01F053C166B7F8
       + (((v101 ^ v19 ^ 0xF1848113C3F67552) - 0x6D7663349BB78A7ALL) ^ ((v101 ^ v19 ^ 0x581562D8B9F2E43DLL)
                                                                        + 0x3B187F001E4CE4EBLL) ^ ((v101 ^ v19 ^ 0x2E4FB9C330B9DFF5)
                                                                                                 + 0x4D42A41B9707DF23));
  v103 = (v102 ^ 0xC6A2F93C06C53E65) & (2 * (v102 & 0xE8B2FD3E56E9BF71)) ^ v102 & 0xE8B2FD3E56E9BF71;
  v104 = ((2 * (v102 ^ 0x47A211580F855825)) ^ 0x5E21D8CCB2D9CEA8) & (v102 ^ 0x47A211580F855825) ^ (2 * (v102 ^ 0x47A211580F855825)) & a4;
  v105 = ((4 * (v104 ^ 0xA110242249242154)) ^ 0xBC43B19965B39D50) & (v104 ^ 0xA110242249242154) ^ (4 * (v104 ^ 0xA110242249242154)) & a4;
  v106 = (v105 ^ 0xAC00A00041208550) & (16 * ((v104 ^ 0x600C8401048C600) & (4 * v103) ^ v103)) ^ (v104 ^ 0x600C8401048C600) & (4 * v103) ^ v103;
  v107 = ((16 * (v105 ^ 0x3104C66184C6204)) ^ 0xF10EC66596CE7540) & (v105 ^ 0x3104C66184C6204) ^ (16 * (v105 ^ 0x3104C66184C6204)) & (a4 - 4);
  v108 = (((v107 ^ 0xE10280249208214) << 8) ^ 0x10EC66596CE75400) & (v107 ^ 0xE10280249208214) ^ ((v107 ^ 0xE10280249208214) << 8) & (a4 - 84);
  v109 = (v107 ^ 0xA100C464104C6500) & (v106 << 8) ^ v106 ^ a4 ^ (v108 ^ 0x644048640000) & (((v107 ^ 0xA100C464104C6500) & (v106 << 8) ^ v106) << 16);
  v110 = (v102 ^ (2
                * ((v109 << 32) & 0x2F10EC6600000000 ^ v109 ^ ((v109 << 32) ^ 0x596CE75400000000) & (((v108 ^ 0xAF1088261108A354) << 16) & 0x2F10EC6600000000 ^ 0x310A40200000000 ^ (((v108 ^ 0xAF1088261108A354) << 16) ^ 0x6C66596C00000000) & (v108 ^ 0xAF1088261108A354))))) >> 32;
  v111 = v102
       - (((v110 ^ 0x9F8CE51EEF21B543) - 0x42AEF7F14719CFD3) ^ ((v110 ^ 0xD5471DAB83B0449) + 0x2F899CCAEFFC8127) ^ ((v110 ^ 0x92D894C4F3885C70) - 0x4FFA862B5BB026E0))
       + 0x22AF0DF85CE0D644;
  v112 = ((2 * (v111 ^ 0x73B6976FABD62F7ALL)) ^ 0x36AE96728D10FC72) & (v111 ^ 0x73B6976FABD62F7ALL) ^ (2 * (v111 ^ 0x73B6976FABD62F7ALL)) & 0x9B574B3946887E38;
  v113 = v112 ^ 0x8951490942880209;
  v114 = (v111 ^ 0xE2F59F46E95E0D7ALL) & (2 * (v111 & 0xE8E1DC56ED5E5143)) ^ v111 & 0xE8E1DC56ED5E5143;
  v115 = (v112 ^ 0x206023004004C10) & (4 * v114) ^ v114;
  v116 = ((4 * v113) ^ 0x6D5D2CE51A21F8E4) & v113 ^ (4 * v113) & 0x9B574B3946887E38;
  v117 = ((16 * (v116 ^ 0x9202431844880619)) ^ 0xB574B3946887E390) & (v116 ^ 0x9202431844880619) ^ (16 * (v116 ^ 0x9202431844880619)) & 0x9B574B3946887E30;
  v118 = (v117 ^ 0x9154031040806200) & (((v116 ^ 0x955082102007820) & (16 * v115) ^ v115) << 8) ^ (v116 ^ 0x955082102007820) & (16 * v115) ^ v115;
  v119 = (((v117 ^ 0xA03482906081C29) << 8) ^ 0x574B3946887E3900) & (v117 ^ 0xA03482906081C29) ^ ((v117 ^ 0xA03482906081C29) << 8) & 0x9B574B3946887E00;
  v120 = (v111 ^ (2
                * (((v118 ^ 0x9B574B3946887E39 ^ (v119 ^ 0x1343090000080000) & (v118 << 16)) << 32) & 0x1B574B3900000000 ^ v118 ^ 0x9B574B3946887E39 ^ (v119 ^ 0x1343090000080000) & (v118 << 16) ^ (((v118 ^ 0x9B574B3946887E39 ^ (v119 ^ 0x1343090000080000) & (v118 << 16)) << 32) ^ 0x46887E3900000000) & (((v119 ^ 0x8814423946804639) << 16) & 0x1B574B3900000000 ^ 0x1046093100000000 ^ (((v119 ^ 0x8814423946804639) << 16) ^ 0x4B39468800000000) & (v119 ^ 0x8814423946804639))))) >> 16;
  v121 = v111
       + 0x7ED80ACD2281578FLL
       + (((v120 ^ 0x65D4AB1A58B42B08) + 0xECCD644B115DA88) ^ ((v120 ^ 0x8EDE40BE9F0401B9) - 0x1A39C21F895A0FC9) ^ ((v120 ^ 0xEB0A31EB19E64AFFLL) - 0x7FEDB34A0FB8448FLL));
  v122 = (v121 ^ 0xFCEC0278D2E147F2) & (2 * (v121 & 0xFEF12A7892E567F2)) ^ v121 & 0xFEF12A7892E567F2;
  v123 = ((2 * (v121 ^ 0x8DEE4658F26BCFD2)) ^ 0xE63ED840C11D5040) & (v121 ^ 0x8DEE4658F26BCFD2) ^ (2 * (v121 ^ 0x8DEE4658F26BCFD2)) & 0x731F6C20608EA820;
  v124 = v123 ^ 0x110124202082A820;
  v125 = (v123 ^ 0x620C4800400C0000) & (4 * v122) ^ v122;
  v126 = ((4 * v124) ^ 0xCC7DB081823AA080) & v124 ^ (4 * v124) & 0x731F6C20608EA820;
  v127 = (v126 ^ 0x401D2000000AA000) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x33024C2060840820)) ^ 0x31F6C20608EA8200) & (v126 ^ 0x33024C2060840820) ^ (16 * (v126 ^ 0x33024C2060840820)) & 0x731F6C20608EA820;
  v129 = (v128 ^ 0x31164000008A8000) & (v127 << 8) ^ v127;
  v130 = (((v128 ^ 0x42092C2060042820) << 8) ^ 0x1F6C20608EA82000) & (v128 ^ 0x42092C2060042820) ^ ((v128 ^ 0x42092C2060042820) << 8) & 0x731F6C20608EA800;
  v131 = v129 ^ 0x731F6C20608EA820 ^ (v130 ^ 0x130C202000880000) & (v129 << 16);
  v132 = (v121 ^ (2
                * ((v131 << 32) & 0x731F6C2000000000 ^ v131 ^ ((v131 << 32) ^ 0x608EA82000000000) & (((v130 ^ 0x60134C0060068820) << 16) & 0x731F6C2000000000 ^ 0x131F0C2000000000 ^ (((v130 ^ 0x60134C0060068820) << 16) ^ 0x6C20608E00000000) & (v130 ^ 0x60134C0060068820))))) >> 8;
  v133 = v121
       - (((v132 ^ 0x1C925742076E74FLL) + 0xE83005C9442C77CLL) ^ ((v132 ^ 0x3471D6AB97DACF8FLL) + 0x3B3BF38323EEEFBCLL) ^ ((v132 ^ 0x3560207DCFFFD0F7) + 0x3A2A05557BCBF0C4));
  if (v7 != a2 + 689613333 < 0x712D9CAE)
    v134 = v7;
  else
    v134 = a2 + 689613333 < v6;
  return (*(uint64_t (**)(uint64_t, unint64_t, _QWORD))(STACK[0x6AD8]
                                                                      + 8 * ((11045 * !v134) ^ LODWORD(STACK[0x6AC0]))))(v6, v133 + 0x6765B92A4266CBEALL, a2 + 1);
}

uint64_t sub_100A17558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;

  v5 = STACK[0x6950];
  if ((STACK[0x6990] & 2) == 0)
    v5 = STACK[0x6940];
  LODWORD(STACK[0x66C8]) = v5;
  v6 = STACK[0x6870];
  if ((STACK[0x6980] & 2) == 0)
    v6 = STACK[0x6760];
  LODWORD(STACK[0x64E0]) = v6;
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x68D0]) ^ 0xF3EAE425;
  LODWORD(STACK[0x64A0]) = 16843009 * LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x6A50]) ^ ~(STACK[0x6A30] & LODWORD(STACK[0x68E0]));
  v7 = 16843009 * LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6880]) ^ 0xAFAFAFAF ^ v7;
  LODWORD(STACK[0x6600]) = v7 ^ 0x41414141;
  STACK[0x6AC0] = STACK[0xDB08];
  LODWORD(STACK[0x6A70]) = (((LODWORD(STACK[0x6920]) ^ 0xFF55D273) + 732729520) ^ ((LODWORD(STACK[0x6920]) ^ 0x373E8349)
                                                                                 - 473448042) ^ ((LODWORD(STACK[0x6920]) ^ 0xD174E1A1)
                                                                                               + 93168510))
                         - 590645574;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                                                                              - 8))(a1, a2, a3, a4, 2863819010);
}

uint64_t sub_100A17778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  int v9;
  _BOOL4 v10;

  v7 = STACK[0x6A70];
  v8 = LODWORD(STACK[0x6A70]) < a5;
  STACK[0x6AB0] = v5 ^ 0xC71E1161;
  v9 = v8 ^ ((v6 + 1654617705) < 0xAAB26902);
  v10 = v6 + 1654617705 < v7;
  if (v9)
    v10 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((452 * !v10) ^ v5)) - 8))();
}

uint64_t sub_100A1A548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t (*v169)(void);

  v7 = ((a3 + 0xF00AE8A9FB24EA8) ^ 0x991A535F345FB9E4) & (2 * ((a3 + 0xF00AE8A9FB24EA8) & 0xC153025F461F39F4)) ^ (a3 + 0xF00AE8A9FB24EA8) & 0xC153025F461F39F4;
  v8 = ((2 * ((a3 + 0xF00AE8A9FB24EA8) ^ 0x1B1E57F7B867BA4CLL)) ^ 0xB49AAB51FCF10770) & ((a3 + 0xF00AE8A9FB24EA8) ^ 0x1B1E57F7B867BA4CLL) ^ (2 * ((a3 + 0xF00AE8A9FB24EA8) ^ 0x1B1E57F7B867BA4CLL)) & 0xDA4D55A8FE7883B8;
  v9 = v8 ^ 0x4A4554A802088088;
  v10 = (v8 ^ 0x8010038700330) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x693556A3F9E20EE0) & v9 ^ (4 * v9) & 0xDA4D55A8FE7883B8;
  v12 = (v11 ^ 0x480554A0F86002A0) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x9248010806188118)) ^ 0xA4D55A8FE7883B80) & (v11 ^ 0x9248010806188118) ^ (16 * (v11 ^ 0x9248010806188118)) & 0xDA4D55A8FE7883B0;
  v14 = (v13 ^ 0x80455088E6080300) & (v12 << 8) ^ v12;
  v15 = (((v13 ^ 0x5A08052018708038) << 8) ^ 0x4D55A8FE7883B800) & (v13 ^ 0x5A08052018708038) ^ ((v13 ^ 0x5A08052018708038) << 8) & 0xDA4D55A8FE788300;
  v16 = v14 ^ 0xDA4D55A8FE7883B8 ^ (v15 ^ 0x484500A878000000) & (v14 << 16);
  v17 = ((a3 + 0xF00AE8A9FB24EA8) ^ (2
                                     * ((v16 << 32) & 0x5A4D55A800000000 ^ v16 ^ ((v16 << 32) ^ 0x7E7883B800000000) & (((v15 ^ 0x92085500867803B8) << 16) & 0x5A4D55A800000000 ^ 0xA45018000000000 ^ (((v15 ^ 0x92085500867803B8) << 16) ^ 0x55A8FE7800000000) & (v15 ^ 0x92085500867803B8))))) >> 25;
  v18 = a3
      - 0x1E65CC1935FC156CLL
      + (((v17 ^ 0xA694D6FDA9D6C9B1) + 0x310CD80C66F814EALL) ^ ((v17 ^ 0xB51E1E41A9E0AD39) + 0x228610B066CE7062) ^ ((v17 ^ 0x138AC8DCACE34BD5) - 0x7BED39D29C326972));
  v19 = (v18 ^ 0x47B54C7DB7C1AB22) & (2 * (v18 & 0x57216E71B7D1AC02)) ^ v18 & 0x57216E71B7D1AC02;
  v20 = ((2 * (v18 ^ 0x63B7D01EF1C0EB22)) ^ 0x692D7CDE8C228E40) & (v18 ^ 0x63B7D01EF1C0EB22) ^ (2 * (v18 ^ 0x63B7D01EF1C0EB22)) & 0x3496BE6F46114720;
  v21 = v20 ^ 0x1492822142114120;
  v22 = (v20 ^ 0x2004384E04000000) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0xD25AF9BD18451C80) & v21 ^ (4 * v21) & 0x3496BE6F46114720;
  v24 = (v23 ^ 0x1012B82D00010400) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x2484064246104320)) ^ 0x496BE6F461147200) & (v23 ^ 0x2484064246104320) ^ (16 * (v23 ^ 0x2484064246104320)) & 0x3496BE6F46114720;
  v26 = (v25 ^ 0x2A66440104200) & (v24 << 8) ^ v24;
  v27 = (((v25 ^ 0x3494180B06010520) << 8) ^ 0x96BE6F4611472000) & (v25 ^ 0x3494180B06010520) ^ ((v25 ^ 0x3494180B06010520) << 8) & 0x3496BE6F46114700;
  v28 = v26 ^ 0x3496BE6F46114720 ^ (v27 ^ 0x14962E4600010000) & (v26 << 16);
  v29 = (v18 ^ (2
              * ((v28 << 32) & 0x3496BE6F00000000 ^ v28 ^ ((v28 << 32) ^ 0x4611472000000000) & (((v27 ^ 0x2000902946104720) << 16) & 0x3496BE6F00000000 ^ 0x90B86E00000000 ^ (((v27 ^ 0x2000902946104720) << 16) ^ 0x3E6F461100000000) & (v27 ^ 0x2000902946104720))))) >> 8;
  v30 = v18
      - (((v29 ^ 0xB903B4EBA7432D3) - 0x477B3B8172534CDBLL) ^ ((v29 ^ 0xDFB3F2B6C73BDD70) + 0x6CA70D86F0E35C88) ^ ((v29 ^ 0xD415E5E692741C81) + 0x67011AD6A5AC9D77))
      - 0x58093217370D28E3;
  v31 = (v30 ^ 0x426863A7B7D84733) & (2 * (v30 & 0x624D73B7C7C247BBLL)) ^ v30 & 0x624D73B7C7C247BBLL;
  v32 = ((2 * (v30 ^ 0x42E267A23EDC4C67)) ^ 0x415E282BF23C17B8) & (v30 ^ 0x42E267A23EDC4C67) ^ (2 * (v30 ^ 0x42E267A23EDC4C67)) & 0x20AF1415F91E0BDCLL;
  v33 = v32 ^ 0x20A1141409020844;
  v34 = (v32 ^ 0xE000130180398) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0x82BC5057E4782F70) & v33 ^ (4 * v33) & 0x20AF1415F91E0BDCLL;
  v36 = (v35 ^ 0xAC1015E0180B50) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x200304001906008CLL)) ^ 0xAF1415F91E0BDC0) & (v35 ^ 0x200304001906008CLL) ^ (16 * (v35 ^ 0x200304001906008CLL)) & 0x20AF1415F91E0BD0;
  v38 = (v37 ^ 0xA1001591000900) & (v36 << 8) ^ v36;
  v39 = (((v37 ^ 0x200E1400681E021CLL) << 8) ^ 0xAF1415F91E0BDC00) & (v37 ^ 0x200E1400681E021CLL) ^ ((v37 ^ 0x200E1400681E021CLL) << 8) & 0x20AF1415F91E0B00;
  v40 = v38 ^ 0x20AF1415F91E0BDCLL ^ (v39 ^ 0x20041411180A0000) & (v38 << 16);
  v41 = (v30 ^ (2
              * ((v40 << 32) & 0x20AF141500000000 ^ v40 ^ ((v40 << 32) ^ 0x791E0BDC00000000) & (((v39 ^ 0xAB0004E11403DCLL) << 16) & 0x20AF141500000000 ^ 0x20AA040100000000 ^ (((v39 ^ 0xAB0004E11403DCLL) << 16) ^ 0x1415F91E00000000) & (v39 ^ 0xAB0004E11403DCLL))))) >> 8;
  v42 = v30
      - (((v41 ^ 0xFA4E3175E4D75553) - 0x717FFDF37A698140) ^ ((v41 ^ 0x2B45606294C67979) + 0x5F8B531BF5875296) ^ ((v41 ^ 0xD1685E4CC424D27ALL) - 0x5A5992CA5A9A0669))
      - 0x1072BE946ADF503BLL;
  v43 = (v42 ^ 0xC7694D4FABD54DA3) & (2 * (v42 & 0xE76D6E6F08166DB3)) ^ v42 & 0xE76D6E6F08166DB3;
  v44 = ((2 * (v42 ^ 0x49AB11C7BBF557C1)) ^ 0x5D8CFF5167C674E4) & (v42 ^ 0x49AB11C7BBF557C1) ^ (2 * (v42 ^ 0x49AB11C7BBF557C1)) & 0xAEC67FA8B3E33A72;
  v45 = v44 ^ 0xA24200A890210A12;
  v46 = (v44 ^ 0xC847B0020C23040) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0xBB19FEA2CF8CE9C8) & v45 ^ (4 * v45) & 0xAEC67FA8B3E33A70;
  v48 = (v47 ^ 0xAA007EA083802840) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x4C6010830631232)) ^ 0xEC67FA8B3E33A720) & (v47 ^ 0x4C6010830631232) ^ (16 * (v47 ^ 0x4C6010830631232)) & 0xAEC67FA8B3E33A70;
  v50 = (v49 ^ 0xAC467A8832232200) & (v48 << 8) ^ v48;
  v51 = (((v49 ^ 0x280052081C01852) << 8) ^ 0xC67FA8B3E33A7200) & (v49 ^ 0x280052081C01852) ^ ((v49 ^ 0x280052081C01852) << 8) & 0xAEC67FA8B3E33A00;
  v52 = v50 ^ 0xAEC67FA8B3E33A72 ^ (v51 ^ 0x864628A0A3220000) & (v50 << 16);
  v53 = v42 ^ (2
             * ((v52 << 32) & 0x2EC67FA800000000 ^ v52 ^ ((v52 << 32) ^ 0x33E33A7200000000) & (((v51 ^ 0x2880570810C10872) << 16) & 0x2EC67FA800000000 ^ 0x464C0800000000 ^ (((v51 ^ 0x2880570810C10872) << 16) ^ 0x7FA8B3E300000000) & (v51 ^ 0x2880570810C10872))));
  v54 = ((v53 ^ 0xA3E77F3158505A33) - 0x411ECDC2FF571102) ^ ((v53 ^ 0x2DE53E46DEB1C41CLL) + 0x30E3734A864970D3) ^ ((v53 ^ 0x7167A409E9318778) + 0x6C61E905B1C933B7);
  v55 = ((v54 - 0x379A7417F4601BADLL) ^ 0xEDE3D8A704E322FCLL) & (2
                                                               * ((v54 - 0x379A7417F4601BADLL) & 0xF1F2193704F342FELL)) ^ (v54 - 0x379A7417F4601BADLL) & 0xF1F2193704F342FELL;
  v56 = ((2 * ((v54 - 0x379A7417F4601BADLL) ^ 0x6D47DAC90CE52210)) ^ 0x396B87FC102CC1DCLL) & ((v54
                                                                                               - 0x379A7417F4601BADLL) ^ 0x6D47DAC90CE52210) ^ (2 * ((v54 - 0x379A7417F4601BADLL) ^ 0x6D47DAC90CE52210)) & 0x9CB5C3FE081660EELL;
  v57 = v56 ^ 0x8494400208122022;
  v58 = (v56 ^ 0x80081FC000400C8) & (4 * v55) ^ v55;
  v59 = ((4 * v57) ^ 0x72D70FF8205983B8) & v57 ^ (4 * v57) & 0x9CB5C3FE081660ECLL;
  v60 = (v59 ^ 0x109503F8001000A0) & (16 * v58) ^ v58;
  v61 = ((16 * (v59 ^ 0x8C20C00608066046)) ^ 0xCB5C3FE081660EE0) & (v59 ^ 0x8C20C00608066046) ^ (16 * (v59 ^ 0x8C20C00608066046)) & 0x9CB5C3FE081660E0;
  v62 = (v61 ^ 0x881403E000060000) & (v60 << 8) ^ v60;
  v63 = (((v61 ^ 0x14A1C01E0810600ELL) << 8) ^ 0xB5C3FE081660EE00) & (v61 ^ 0x14A1C01E0810600ELL) ^ ((v61 ^ 0x14A1C01E0810600ELL) << 8) & 0x9CB5C3FE08166000;
  v64 = v62 ^ 0x9CB5C3FE081660EELL ^ (v63 ^ 0x9481C20800000000) & (v62 << 16);
  v65 = v54
      - 0x45A85AE0EF6CD8AFLL
      + ((((v54 - 0x379A7417F4601BADLL) ^ (2
                                         * ((v64 << 32) & 0x1CB5C3FE00000000 ^ v64 ^ ((v64 << 32) ^ 0x81660EE00000000) & (((v63 ^ 0x83401F6081600EELL) << 16) & 0x1CB5C3FE00000000 ^ 0x1C01C3E800000000 ^ (((v63 ^ 0x83401F6081600EELL) << 16) ^ 0x43FE081600000000) & (v63 ^ 0x83401F6081600EELL))))) >> 27) ^ 0x1B1623E2E2);
  v66 = v65 + (v65 >> 15) - ((v65 + (v65 >> 15)) >> 6);
  v67 = v66 + ((v66 + 0x1F1245062907D92) >> 25) + 0x20DE0C6C1E3B4AF9;
  v68 = (v67 ^ 0xD542C7C624443A59) & (2 * (v67 & 0xE11317E444553299)) ^ v67 & 0xE11317E444553299;
  v69 = ((2 * (v67 ^ 0xD740E046A4EC5F5BLL)) ^ 0x6CA7EF45C172DB84) & (v67 ^ 0xD740E046A4EC5F5BLL) ^ (2 * (v67 ^ 0xD740E046A4EC5F5BLL)) & 0x3653F7A2E0B96DC2;
  v70 = v69 ^ 0x125010A220892442;
  v71 = (v69 ^ 0x400E70000304880) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0xD94FDE8B82E5B708) & v70 ^ (4 * v70) & 0x3653F7A2E0B96DC0;
  v73 = (v72 ^ 0x1043D68280A12500) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x26102120601848C2)) ^ 0x653F7A2E0B96DC20) & (v72 ^ 0x26102120601848C2) ^ (16 * (v72 ^ 0x26102120601848C2)) & 0x3653F7A2E0B96DC0;
  v75 = (v74 ^ 0x2413722200904C00) & (v73 << 8) ^ v73;
  v76 = (((v74 ^ 0x12408580E02921C2) << 8) ^ 0x53F7A2E0B96DC200) & (v74 ^ 0x12408580E02921C2) ^ ((v74 ^ 0x12408580E02921C2) << 8) & 0x3653F7A2E0B96D00;
  v77 = v75 ^ 0x3653F7A2E0B96DC2 ^ (v76 ^ 0x1253A2A0A0290000) & (v75 << 16);
  v78 = (v67 ^ (2
              * ((v77 << 32) & 0x3653F7A200000000 ^ v77 ^ ((v77 << 32) ^ 0x60B96DC200000000) & (((v76 ^ 0x2400550240902DC2) << 16) & 0x3653F7A200000000 ^ 0x51170200000000 ^ (((v76 ^ 0x2400550240902DC2) << 16) ^ 0x77A2E0B900000000) & (v76 ^ 0x2400550240902DC2))))) >> 12;
  v79 = v66
      + ((v66 + 0x1F1245062907D92) >> 25)
      - 0x67DA6C4AA0FCB585
      + (((v78 ^ 0x305916AF70C60B3ALL) - 0x131082824FA0A4EDLL) ^ ((v78 ^ 0x8BD51335DBC77F76) + 0x576378E71B5E2F5FLL) ^ ((v78 ^ 0xBB80DCF991592632) + 0x6736B72B51C0761BLL));
  v80 = (v79 ^ 0xD1099C046EC34F5) & (2 * (v79 & 0x8D10DDE908CC30C0)) ^ v79 & 0x8D10DDE908CC30C0;
  v81 = ((2 * (v79 ^ 0x15308A4246747475)) ^ 0x3040AF569D70896ALL) & (v79 ^ 0x15308A4246747475) ^ (2 * (v79 ^ 0x15308A4246747475)) & 0x982057AB4EB844B4;
  v82 = v81 ^ 0x882050A942884495;
  v83 = (v81 ^ 0x1000070004300000) & (4 * v80) ^ v80;
  v84 = ((4 * v82) ^ 0x60815EAD3AE112D4) & v82 ^ (4 * v82) & 0x982057AB4EB844B4;
  v85 = (v84 ^ 0x56A90AA00080) & (16 * v83) ^ v83;
  v86 = ((16 * (v84 ^ 0x9820010244184421)) ^ 0x82057AB4EB844B50) & (v84 ^ 0x9820010244184421) ^ (16 * (v84 ^ 0x9820010244184421)) & 0x982057AB4EB844B0;
  v87 = (v86 ^ 0x800052A04A804000) & (v85 << 8) ^ v85;
  v88 = (((v86 ^ 0x1820050B043804A5) << 8) ^ 0x2057AB4EB844B500) & (v86 ^ 0x1820050B043804A5) ^ ((v86 ^ 0x1820050B043804A5) << 8) & 0x982057AB4EB84400;
  v89 = v87 ^ 0x982057AB4EB844B5 ^ (v88 ^ 0x30A08000000) & (v87 << 16);
  v90 = (v79 ^ (2
              * ((v89 << 32) & 0x182057AB00000000 ^ v89 ^ ((v89 << 32) ^ 0x4EB844B500000000) & (((v88 ^ 0x982054A146B840B5) << 16) & 0x182057AB00000000 ^ 0x800110300000000 ^ (((v88 ^ 0x982054A146B840B5) << 16) ^ 0x57AB4EB800000000) & (v88 ^ 0x982054A146B840B5))))) >> 8;
  v91 = v79
      + 0x3A82392B0966FBF1
      + (((v90 ^ 0xF92D540EC13F8460) - 0x18BC8144F193E96) ^ ((v90 ^ 0x253FA3F407F5782FLL) + 0x2266C011762C3D27) ^ ((v90 ^ 0xDCBFE7013B5F40F6) - 0x24197B1BB579FA00));
  v92 = (v91 ^ 0x8D2A51F6B1E3B5DLL) & (2 * (v91 & 0x4A9A319F73183B1ELL)) ^ v91 & 0x4A9A319F73183B1ELL;
  v93 = ((2 * (v91 ^ 0x1DC6E731EF3E6961)) ^ 0xAEB9AD5D384CA4FELL) & (v91 ^ 0x1DC6E731EF3E6961) ^ (2 * (v91 ^ 0x1DC6E731EF3E6961)) & 0x575CD6AE9C26527ELL;
  v94 = v93 ^ 0x514452A284225201;
  v95 = (v93 ^ 0x618840C18000078) & (4 * v92) ^ v92;
  v96 = ((4 * v94) ^ 0x5D735ABA709949FCLL) & v94 ^ (4 * v94) & 0x575CD6AE9C26527CLL;
  v97 = (v96 ^ 0x555052AA10004060) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x20C84048C261203)) ^ 0x75CD6AE9C26527F0) & (v96 ^ 0x20C84048C261203) ^ (16 * (v96 ^ 0x20C84048C261203)) & 0x575CD6AE9C265270;
  v99 = (v98 ^ 0x554C42A880240200) & (v97 << 8) ^ v97;
  v100 = (((v98 ^ 0x21094061C02500FLL) << 8) ^ 0x5CD6AE9C26527F00) & (v98 ^ 0x21094061C02500FLL) ^ ((v98 ^ 0x21094061C02500FLL) << 8) & 0x575CD6AE9C265200;
  v101 = v99 ^ 0x575CD6AE9C26527FLL ^ (v100 ^ 0x5454868C04020000) & (v99 << 16);
  v102 = v91 ^ (2
              * ((v101 << 32) & 0x575CD6AE00000000 ^ v101 ^ ((v101 << 32) ^ 0x1C26527F00000000) & (((v100 ^ 0x30850229824007FLL) << 16) & 0x575CD6AE00000000 ^ 0x150428800000000 ^ (((v100 ^ 0x30850229824007FLL) << 16) ^ 0x56AE9C2600000000) & (v100 ^ 0x30850229824007FLL))));
  v103 = ((((v102 >> 31) ^ 0xAB3CDC5627F344D8) + 0x4FE0548A451C9B00) ^ (((v102 >> 31) ^ 0x769027C6AEC11174)
                                                                          - 0x6DB350E533D130ACLL) ^ (((v102 >> 31) ^ 0xDDACFB916E59AFBELL) + 0x3970734D0CB6719ALL))
       + (((v102 ^ 0x5BD2650CD3BB530ELL) - 0x1C7DFEFD41E5EB2FLL) ^ ((v102 ^ 0x5C2CED99EA823E49) - 0x1B83766878DC8668) ^ ((v102 ^ 0xF44B759C6EE55071) + 0x4C1B1192034417B0));
  v104 = ((v103 + 0x21FB991E7BF46FC2) ^ 0x95060FEA16DF11FLL) & (2
                                                                * ((v103 + 0x21FB991E7BF46FC2) & 0xAD4244FCC409F11FLL)) ^ (v103 + 0x21FB991E7BF46FC2) & 0xAD4244FCC409F11FLL;
  v105 = ((2 * ((v103 + 0x21FB991E7BF46FC2) ^ 0x154615E296CB115)) ^ 0x582C4B45DACA8014) & ((v103
                                                                                                + 0x21FB991E7BF46FC2) ^ 0x154615E296CB115) ^ (2 * ((v103 + 0x21FB991E7BF46FC2) ^ 0x154615E296CB115)) & 0xAC1625A2ED65400ALL;
  v106 = v105 ^ 0xA41224A22525400ALL;
  v107 = (v105 ^ 0x800010000400000) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0xB058968BB5950028) & v106 ^ (4 * v106) & 0xAC1625A2ED654008;
  v109 = (v108 ^ 0xA0100482A5050000) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0xC06212048604002)) ^ 0xC1625A2ED65400A0) & (v108 ^ 0xC06212048604002) ^ (16 * (v108 ^ 0xC06212048604002)) & 0xAC1625A2ED654000;
  v111 = (v110 ^ 0x80020022C4440000) & (v109 << 8) ^ v109;
  v112 = (((v110 ^ 0x2C1425802921400ALL) << 8) ^ 0x1625A2ED65400A00) & (v110 ^ 0x2C1425802921400ALL) ^ ((v110 ^ 0x2C1425802921400ALL) << 8) & 0xAC1625A2ED654000;
  v113 = v111 ^ 0xAC1625A2ED65400ALL ^ (v112 ^ 0x40420A065400000) & (v111 << 16);
  v114 = v103
       - 0x30C221E4C0019F1ELL
       + ((((v103 + 0x21FB991E7BF46FC2) ^ (2
                                           * ((v113 << 32) & 0x2C1625A200000000 ^ v113 ^ ((v113 << 32) ^ 0x6D65400A00000000) & (((v112 ^ 0xA81205028825400ALL) << 16) & 0x2C1625A200000000 ^ 0x814008200000000 ^ (((v112 ^ 0xA81205028825400ALL) << 16) ^ 0x25A2ED6500000000) & (v112 ^ 0xA81205028825400ALL))))) >> 8) ^ 0xFF5299F042E13C8ELL);
  v115 = v114 + (v114 >> 7) - ((2 * (v114 + (v114 >> 7))) & 0x9C37A25338E73272) - 0x31E42ED6638C66C7;
  v116 = (((v115 ^ 0x7195FBD752C41CC6) - 0x7195FBD752C41CC6) ^ ((v115 ^ 0xF9F4E1BD3B5FED67) + 0x60B1E42C4A01299) ^ ((v115 ^ 0x467ACB43F5E86898) - 0x467ACB43F5E86898))
       - 0x7AE245FE1BE52338;
  LODWORD(v53) = v115 ^ v53;
  v117 = v116 + (v116 >> 25) - ((v116 + (v116 >> 25)) >> 10);
  v118 = v117
       - (v117 >> 1)
       + 0x488D08707B475E94
       + ((v117 - (v117 >> 1) + 0x488D08707B475E94) >> 27)
       - ((v117 - (v117 >> 1) + 0x488D08707B475E94 + ((v117 - (v117 >> 1) + 0x488D08707B475E94) >> 27)) >> 15);
  v119 = ((2 * v118) & 0x64FEFEEFF3F0CBEELL) + (v118 ^ 0x327F7F77F9F865F7);
  v120 = ((v119 - 0x2441E10E9080446) ^ 0x8FF2DC9ACE2F1C2ELL) & (2
                                                                * ((v119 - 0x2441E10E9080446) & 0xCFC49E98EF0F9E4FLL)) ^ (v119 - 0x2441E10E9080446) & 0xCFC49E98EF0F9E4FLL;
  v121 = ((2 * ((v119 - 0x2441E10E9080446) ^ 0x4F3ECBB523C183ALL)) ^ 0x966EE4477A670CEALL) & ((v119
                                                                                               - 0x2441E10E9080446) ^ 0x4F3ECBB523C183ALL) ^ (2 * ((v119 - 0x2441E10E9080446) ^ 0x4F3ECBB523C183ALL)) & 0xCB377223BD338674;
  v122 = v121 ^ 0x4911122085108215;
  v123 = (v121 ^ 0x226600338220060) & (4 * v120) ^ v120;
  v124 = ((4 * v122) ^ 0x2CDDC88EF4CE19D4) & v122 ^ (4 * v122) & 0xCB377223BD338674;
  v125 = (v124 ^ 0x8154002B4020050) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0xC322322109318621)) ^ 0xB377223BD3386750) & (v124 ^ 0xC322322109318621) ^ (16 * (v124 ^ 0xC322322109318621)) & 0xCB377223BD338670;
  v127 = (v126 ^ 0x8337222391300600) & (v125 << 8) ^ v125;
  v128 = (((v126 ^ 0x480050002C038025) << 8) ^ 0x377223BD33867500) & (v126 ^ 0x480050002C038025) ^ ((v126 ^ 0x480050002C038025) << 8) & 0xCB377223BD338600;
  v129 = v127 ^ 0xCB377223BD338675 ^ (v128 ^ 0x332222131020000) & (v127 << 16);
  v130 = ((v119 - 0x2441E10E9080446) ^ (2
                                        * ((v129 << 32) & 0x4B37722300000000 ^ v129 ^ ((v129 << 32) ^ 0x3D33867500000000) & (((v128 ^ 0xC80550028C318275) << 16) & 0x4B37722300000000 ^ 0x914420000000000 ^ (((v128 ^ 0xC80550028C318275) << 16) ^ 0x7223BD3300000000) & (v128 ^ 0xC80550028C318275))))) >> 7;
  v131 = v119
       - (((v130 ^ 0xCA685A4176DB813DLL) + 0x8698C06300ADFA8) ^ ((v130 ^ 0xBE8AE58B46CA9F4DLL) + 0x7C8B33CC001BC1D8) ^ ((v130 ^ 0x747527370B3BCF55) - 0x498B0E8FB2156E30))
       - 0x5D6BD5611B7E6CCCLL;
  v132 = (v131 ^ 0xE9D8A6331FEDD455) & (2 * (v131 & 0xED82A4A39F819695)) ^ v131 & 0xED82A4A39F819695;
  v133 = ((2 * (v131 ^ 0xAAD8EF7316EFD47DLL)) ^ 0x8EB497A112DC85D0) & (v131 ^ 0xAAD8EF7316EFD47DLL) ^ (2 * (v131 ^ 0xAAD8EF7316EFD47DLL)) & 0x475A4BD0896E42E8;
  v134 = v133 ^ 0x414A485089224228;
  v135 = (v133 ^ 0x6100380000C00C0) & (4 * v132) ^ v132;
  v136 = ((4 * v134) ^ 0x1D692F4225B90BA0) & v134 ^ (4 * v134) & 0x475A4BD0896E42E8;
  v137 = (v136 ^ 0x5480B40012802A0) & (16 * v135) ^ v135;
  v138 = ((16 * (v136 ^ 0x4212409088464048)) ^ 0x75A4BD0896E42E80) & (v136 ^ 0x4212409088464048) ^ (16 * (v136 ^ 0x4212409088464048)) & 0x475A4BD0896E42E0;
  v139 = (v138 ^ 0x4500090080640200) & (v137 << 8) ^ v137;
  v140 = (((v138 ^ 0x25A42D0090A4068) << 8) ^ 0x5A4BD0896E42E800) & (v138 ^ 0x25A42D0090A4068) ^ ((v138 ^ 0x25A42D0090A4068) << 8) & 0x475A4BD0896E4200;
  v141 = v139 ^ 0x475A4BD0896E42E8 ^ (v140 ^ 0x424A408008420000) & (v139 << 16);
  v142 = v131 ^ (2
               * ((v141 << 32) & 0x475A4BD000000000 ^ v141 ^ ((v141 << 32) ^ 0x96E42E800000000) & (((v140 ^ 0x5100B50812C02E8) << 16) & 0x475A4BD000000000 ^ 0x40A429000000000 ^ (((v140 ^ 0x5100B50812C02E8) << 16) ^ 0x4BD0896E00000000) & (v140 ^ 0x5100B50812C02E8))));
  v143 = ((v142 ^ 0xEE40F9E733EFB727) - 0x4DD7300185C24E2ALL) ^ ((v142 ^ 0x9BCEE2A24B2F023ALL) - 0x38592B44FD02FB37) ^ ((v142 ^ 0x142CADC7F59DA658) + 0x48449BDEBC4FA0ABLL);
  v144 = ((v143 - 0x68A7556D23D82B79) ^ 0xD91C6F0920FA3F8ALL) & (2
                                                                 * ((v143 - 0x68A7556D23D82B79) & 0xDD5E8F4D22FABF93)) ^ (v143 - 0x68A7556D23D82B79) & 0xDD5E8F4D22FABF93;
  v145 = ((2 * ((v143 - 0x68A7556D23D82B79) ^ 0xD385670B241F7DA8)) ^ 0x1DB7D08C0DCB8476) & ((v143
                                                                                                 - 0x68A7556D23D82B79) ^ 0xD385670B241F7DA8) ^ (2 * ((v143 - 0x68A7556D23D82B79) ^ 0xD385670B241F7DA8)) & 0xEDBE84606E5C23ALL;
  v146 = v145 ^ 0x248284202244209;
  v147 = (v145 ^ 0xC92400404C18010) & (4 * v144) ^ v144;
  v148 = ((4 * v146) ^ 0x3B6FA1181B9708ECLL) & v146 ^ (4 * v146) & 0xEDBE84606E5C238;
  v149 = (v148 ^ 0xA4BA00002850020) & (16 * v147) ^ v147;
  v150 = ((16 * (v148 ^ 0x49048460460C213)) ^ 0xEDBE84606E5C23B0) & (v148 ^ 0x49048460460C213) ^ (16 * (v148 ^ 0x49048460460C213)) & 0xEDBE84606E5C230;
  v151 = (v150 ^ 0xC9A804006440200) & (v149 << 8) ^ v149;
  v152 = (((v150 ^ 0x241680600A1C00BLL) << 8) ^ 0xDBE84606E5C23B00) & (v150 ^ 0x241680600A1C00BLL) ^ ((v150 ^ 0x241680600A1C00BLL) << 8) & 0xEDBE84606E5C200;
  v153 = v151 ^ 0xEDBE84606E5C23BLL ^ (v152 ^ 0xAC8400604C00000) & (v151 << 16);
  v154 = v143
       + 0x74B739DFFF22941ALL
       + ((((v143 - 0x68A7556D23D82B79) ^ (2
                                           * ((v153 << 32) & 0xEDBE84600000000 ^ v153 ^ ((v153 << 32) ^ 0x6E5C23B00000000) & (((v152 ^ 0x413A8400225C03BLL) << 16) & 0xEDBE84600000000 ^ 0x699E80200000000 ^ (((v152 ^ 0x413A8400225C03BLL) << 16) ^ 0x684606E500000000) & (v152 ^ 0x413A8400225C03BLL))))) >> 27) ^ 0x19AD5BF8A5);
  v155 = v154 + (v154 >> 12);
  v156 = ((v155 + 0x40417AC03B678FAELL) ^ 0x3FBE153FA4517D01) & (2
                                                                 * ((v155 + 0x40417AC03B678FAELL) & 0xBFBE853FC4987052)) ^ (v155 + 0x40417AC03B678FAELL) & 0xBFBE853FC4987052;
  v157 = ((2 * ((v155 + 0x40417AC03B678FAELL) ^ 0x5F9E1715AD61DD21)) ^ 0xC0412454D3F35AE6) & ((v155
                                                                                                 + 0x40417AC03B678FAELL) ^ 0x5F9E1715AD61DD21) ^ (2 * ((v155 + 0x40417AC03B678FAELL) ^ 0x5F9E1715AD61DD21)) & 0xE020922A69F9AD72;
  v158 = v157 ^ 0x2020922A2808A511;
  v159 = (v157 ^ 0xC000000000E10040) & (4 * v156) ^ v156;
  v160 = ((4 * v158) ^ 0x808248A9A7E6B5CCLL) & v158 ^ (4 * v158) & 0xE020922A69F9AD70;
  v161 = (v160 ^ 0x8000002821E0A540) & (16 * v159) ^ v159;
  v162 = ((16 * (v160 ^ 0x6020920248190833)) ^ 0x20922A69F9AD730) & (v160 ^ 0x6020920248190833) ^ (16 * (v160 ^ 0x6020920248190833)) & 0xE020922A69F9AD70;
  v163 = (v162 ^ 0x22209988500) & (v161 << 8) ^ v161;
  v164 = (((v162 ^ 0xE020900860612843) << 8) ^ 0x20922A69F9AD7300) & (v162 ^ 0xE020900860612843) ^ ((v162 ^ 0xE020900860612843) << 8) & 0xE020922A69F9AD00;
  v165 = v163 ^ 0xE020922A69F9AD73 ^ (v164 ^ 0x2000022869A90000) & (v163 << 16);
  v166 = ((v155 + 0x40417AC03B678FAELL) ^ (2
                                         * ((v165 << 32) & 0x6020922A00000000 ^ v165 ^ ((v165 << 32) ^ 0x69F9AD7300000000) & (((v164 ^ 0xC020900200508C73) << 16) & 0x6020922A00000000 ^ 0x6000920200000000 ^ (((v164 ^ 0xC020900200508C73) << 16) ^ 0x122A69F900000000) & (v164 ^ 0xC020900200508C73))))) >> 5;
  LODWORD(v155) = v155
                - (((v166 ^ 0x34417E26) - 790080876) ^ ((v166 ^ 0x3BC43637) - 546497917) ^ ((v166 ^ 0x773E1144)
                                                                                          - 1818804750))
                - 386851741;
  LODWORD(v165) = (v155 ^ 0xAB38557D) & (2 * (v155 & 0xB321597E)) ^ v155 & 0xB321597E;
  LODWORD(v166) = ((2 * (v155 ^ 0xEB7A6559)) ^ 0xB0B6784E) & (v155 ^ 0xEB7A6559) ^ (2 * (v155 ^ 0xEB7A6559)) & 0x585B3C26;
  LODWORD(v164) = v166 ^ 0x48490421;
  LODWORD(v166) = (v166 ^ 0x10022800) & (4 * v165) ^ v165;
  LODWORD(v165) = ((4 * v164) ^ 0x616CF09C) & v164 ^ (4 * v164) & 0x585B3C24;
  LODWORD(v166) = (v165 ^ 0x40483000) & (16 * v166) ^ v166;
  LODWORD(v165) = ((16 * (v165 ^ 0x18130C23)) ^ 0x85B3C270) & (v165 ^ 0x18130C23) ^ (16 * (v165 ^ 0x18130C23)) & 0x585B3C20;
  LODWORD(STACK[0x6AC0]) = a7 ^ v53 ^ 0x39098B09 ^ v155 ^ (2
                                                         * ((v165 ^ 0x130000) & ((_DWORD)v166 << 8) ^ v166 ^ 0x585B3C27 ^ ((((v165 ^ 0x58483C07) << 8) ^ 0x5B3C2700) & (v165 ^ 0x58483C07) ^ ((v165 ^ 0x58483C07) << 8) & 0x585B3C00 ^ 0x58180000) & (((v165 ^ 0x130000) & ((_DWORD)v166 << 8) ^ v166) << 16)));
  v167 = STACK[0x6AB0];
  LODWORD(v101) = (STACK[0x6AB0] + 954322143) | 0x2292;
  LODWORD(STACK[0x6870]) = LODWORD(STACK[0x6900]) ^ 0xF86C9A53;
  LODWORD(STACK[0x6568]) = LODWORD(STACK[0x6A60]) + 1685353062;
  LODWORD(STACK[0x6A70]) = v101;
  LODWORD(STACK[0x65F8]) = (v101 - 286342153) ^ LODWORD(STACK[0x6880]);
  if (((*(_BYTE *)(STACK[0x6AA0]
                  + ((*(_BYTE *)(STACK[0x6AA0]
                               + ((*(_BYTE *)(STACK[0x6AA0] + ((*(_BYTE *)(STACK[0x6AA0] + 15) + 6) & 0xF)) + 14) & 0xF))
                    + 10) & 0xF))
       + 13) & 0xE) != 0)
    v168 = (*(_BYTE *)(STACK[0x6AA0]
                     + ((*(_BYTE *)(STACK[0x6AA0]
                                  + ((*(_BYTE *)(STACK[0x6AA0] + ((*(_BYTE *)(STACK[0x6AA0] + 15) + 6) & 0xF)) + 14) & 0xF))
                       + 10) & 0xF))
          + 13) & 0xF;
  else
    v168 = 1;
  v169 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                       + 8 * ((31990 * (v167 < 0xB0A1C6A2)) ^ ((int)v167 + 954330993)))
                           - 12);
  STACK[0x6A60] = v168 - 1;
  return v169();
}

uint64_t sub_100A1CF80()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t (*v122)(void);

  v4 = STACK[0x6A70];
  v5 = (((2 * *(unsigned __int8 *)(STACK[0x6AA0] + v2)) & 0xFF7F)
      + (*(unsigned __int8 *)(STACK[0x6AA0] + v2) ^ 0x777CFABF))
     * v1
     - 2132046151;
  LODWORD(STACK[0x6AB0]) = (LODWORD(STACK[0x6A70]) - 1418964222) & 0x549397B7;
  v6 = ((2 * (v5 ^ 0x92E36016)) ^ 0xAF13EFFC) & (v5 ^ 0x92E36016) ^ (2 * (v5 ^ 0x92E36016)) & 0xD789F7FE;
  v7 = ((v5 & 0x456A97E8) << ((v4 + 2) & 0xB7 ^ 0xB0)) & (v5 ^ 0x106247C6) ^ v5 & 0x456A97E8;
  v8 = (v6 ^ 0x4700E7E0) & (4 * v7) ^ v7;
  v9 = ((4 * (v6 ^ 0x50881002)) ^ 0x5E27DFF8) & (v6 ^ 0x50881002) ^ (4 * (v6 ^ 0x50881002)) & 0xD789F7FC;
  v10 = (v9 ^ 0x5601D7E0) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x81882006)) ^ 0x789F7FE0) & (v9 ^ 0x81882006) ^ (16 * (v9 ^ 0x81882006)) & 0xD789F7F0;
  v12 = v10 ^ 0xD789F7FE ^ (v11 ^ 0x50897700) & (v10 << 8);
  v13 = v5 ^ (2
            * ((v12 << 16) & 0x57890000 ^ v12 ^ ((v12 << 16) ^ 0x77FE0000) & (((v11 ^ 0x8700801E) << 8) & 0x57890000 ^ 0x56080000 ^ (((v11 ^ 0x8700801E) << 8) ^ 0x9F70000) & (v11 ^ 0x8700801E))));
  v14 = ((v13 ^ v0 ^ 0x97097826) - 1619655548) ^ ((v13 ^ v0 ^ 0xC8BFF5EF) - 1061123765) ^ ((v13 ^ v0 ^ 0x1ADFF5DD)
                                                                                         + 312510841);
  v15 = v2 - 1103259664 + v14;
  v16 = ((2 * (v15 ^ 0xFD1BB2A9)) ^ 0x136FA3EE) & (v15 ^ 0xFD1BB2A9) ^ (2 * (v15 ^ 0xFD1BB2A9)) & 0x9B7D1F6;
  v17 = (v15 ^ 0xF40B721D) & (2 * (v15 & 0xF4AC635E)) ^ v15 & 0xF4AC635E;
  v18 = v16 ^ 0x8905011;
  v19 = (v16 ^ 0x12381E0) & (4 * v17) ^ v17;
  v20 = ((4 * v18) ^ 0x26DF47DC) & v18 ^ (4 * v18) & 0x9B7D1F4;
  v21 = (v20 ^ 0x9741C3) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x9209023)) ^ 0x9B7D1F70) & (v20 ^ 0x9209023) ^ (16 * (v20 ^ 0x9209023)) & 0x9B7D1F0;
  v23 = v21 ^ 0x9B7D1F7 ^ (v22 ^ 0x9351100) & (v21 << 8);
  v24 = (v15 ^ (2
              * ((v23 << 16) & 0x9B70000 ^ v23 ^ ((v23 << 16) ^ 0x51F70000) & (((v22 ^ 0x82C087) << 8) & 0x9B70000 ^ 0x8260000 ^ (((v22 ^ 0x82C087) << 8) ^ 0xB7D10000) & (v22 ^ 0x82C087))))) >> 16;
  v25 = v13 ^ 0x56801056;
  v26 = v14 + (((v24 ^ 0x22FED5CB) + 1972542999) ^ ((v24 ^ 0xA49169E3) - 201514433) ^ ((v24 ^ 0x866F5885) - 788327591));
  v27 = v2 - 1202933100 + v26;
  v28 = 2 * (v27 & 0xA3309949);
  v29 = v28 & (v27 ^ 0x42711C5C);
  v30 = v28 & 0x40410010 | v27 & 0xA3309949;
  v31 = ((2 * (v27 ^ 0x42711C5C)) ^ 0xC2830A2A) & (v27 ^ 0x42711C5C) ^ (2 * (v27 ^ 0x42711C5C)) & 0xE1418514;
  v32 = v31 ^ 0x21408515;
  v33 = (v31 ^ 0xA0000011) & (4 * (v30 ^ v29)) ^ v30 ^ v29;
  v34 = ((4 * v32) ^ 0x85061454) & v32 ^ (4 * v32) & 0xE1418514;
  v35 = (v34 ^ 0x81000411) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x60418101)) ^ 0x14185150) & (v34 ^ 0x60418101) ^ (16 * (v34 ^ 0x60418101)) & 0xE1418510;
  v37 = v35 ^ 0xE1418515 ^ (v36 ^ 0x100) & (v35 << 8);
  v38 = (v27 ^ (2
              * ((v37 << 16) & 0x61410000 ^ v37 ^ ((v37 << 16) ^ 0x5150000) & (((v36 ^ 0xE1418405) << 8) & 0xE1410000 ^ 0x20400000 ^ (((v36 ^ 0xE1418405) << 8) ^ 0x41850000) & (v36 ^ 0xE1418405))))) >> 8;
  v39 = v2
      + v26
      - (((v38 ^ 0x411B552B) - 1748364992) ^ ((v38 ^ 0xE0561413) + 914837512) ^ ((v38 ^ 0xA12EF0AB) + 2013246656));
  v40 = v39 + 1658477884;
  v41 = ((v39 + 1658477884) ^ 0x8F45C604) & (2 * ((v39 + 1658477884) & 0xCF55E429)) ^ (v39 + 1658477884) & 0xCF55E429;
  v42 = ((2 * ((v39 + 1658477884) ^ 0xF6D8604)) ^ 0x8070C45A) & ((v39 + 1658477884) ^ 0xF6D8604) ^ (2
                                                                                                  * ((v39 + 1658477884) ^ 0xF6D8604)) & 0xC038622C;
  v43 = v42 ^ 0x40082225;
  v44 = (v42 ^ 0x300209) & (4 * v41) ^ v41;
  v45 = ((4 * v43) ^ 0xE188B4) & v43 ^ (4 * v43) & 0xC038622C;
  v46 = (v45 ^ 0x200029) & (16 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0xC0186209)) ^ 0x38622D0) & (v45 ^ 0xC0186209) ^ (16 * (v45 ^ 0xC0186209)) & 0xC0386220;
  v48 = v46 ^ 0xC038622D ^ (v47 ^ 0x2200) & (v46 << 8);
  v49 = v39 - 1354661555;
  v50 = (v49 ^ 0x9E03E241) & (2 * (v49 & 0x9EABC852)) ^ v49 & 0x9EABC852;
  v51 = ((2 * ((v39 - 1354661555) ^ 0xAF466265)) ^ 0x63DB546E) & ((v39 - 1354661555) ^ 0xAF466265) ^ (2 * ((v39 - 1354661555) ^ 0xAF466265)) & 0x31EDAA36;
  v52 = ((4 * (v51 ^ 0x1024AA11)) ^ 0xC7B6A8DC) & (v51 ^ 0x1024AA11) ^ (4 * (v51 ^ 0x1024AA11)) & 0x31EDAA34;
  v53 = (v52 ^ 0x1A4A800) & (16 * ((v51 ^ 0x21C98800) & (4 * v50) ^ v50)) ^ (v51 ^ 0x21C98800) & (4 * v50) ^ v50;
  v54 = ((16 * (v52 ^ 0x30490223)) ^ 0x1EDAA370) & (v52 ^ 0x30490223) ^ (16 * (v52 ^ 0x30490223)) & 0x31EDAA30;
  v55 = v54 ^ 0x21250807;
  v56 = v53 ^ 0x31EDAA37 ^ (v54 ^ 0x10C8A200) & (v53 << 8);
  v57 = v49 ^ (2
             * ((v56 << 16) & 0x31ED0000 ^ v56 ^ ((v56 << 16) ^ 0x2A370000) & ((v55 << 8) & 0x31ED0000 ^ 0x10450000 ^ ((v55 << 8) ^ 0x6DAA0000) & v55))) ^ 0x9B0D8602;
  v58 = ((v57 ^ v25 ^ 0x139319B1) - 328407473) ^ ((v57 ^ v25 ^ 0xD822F99D) + 668796515) ^ ((v57 ^ v25 ^ 0xFE6F9250)
                                                                                         + 26242480);
  v59 = v2 - 1521566739 + v58;
  v60 = (v59 ^ 0x488FB68F) & (2 * (v59 & 0x908FB68F)) ^ v59 & 0x908FB68F;
  v61 = ((2 * (v59 ^ 0x6883BB87)) ^ 0xF0181A10) & (v59 ^ 0x6883BB87) ^ (2 * (v59 ^ 0x6883BB87)) & (v3 + 8);
  v62 = v60 ^ (v3 + 8) ^ (v61 ^ 0xC8080900) & (4 * v60);
  v63 = (4 * (v61 ^ 0x8040508)) & (v3 + 8) ^ 0x180C0908 ^ ((4 * (v61 ^ 0x8040508)) ^ 0xE0303420) & (v61 ^ 0x8040508);
  v64 = (16 * v62) & v3 ^ v62 ^ ((16 * v62) ^ 0x80C0D080) & v63;
  v65 = (16 * v63) & v3 ^ 0x780C0D08 ^ ((16 * v63) ^ 0x80C0D080) & v63;
  v66 = v64 ^ 0x880C0800 ^ (v64 << 8) & v3 ^ ((v64 << 8) ^ 0xC0D0800) & v65;
  v67 = (v59 ^ (2
              * ((v66 << 16) & 0x780C0000 ^ v66 ^ ((v66 << 16) ^ 0xD080000) & ((v65 << 8) & (v3 - 3328) ^ ((v65 << 8) ^ 0xC0D0000) & v65 ^ 0x70000000)))) >> 16;
  v68 = v58 + (((v67 ^ 0x900BBB8) - 212413084) ^ ((v67 ^ 0x71D349A5) - 1954207873) ^ ((v67 ^ 0x78D3829A) - 2105152446));
  v69 = v2 - 2030722903 + v68;
  v70 = ((2 * (v69 ^ 0x23497AE8)) ^ 0x2FB7933C) & (v69 ^ 0x23497AE8) ^ (2 * (v69 ^ 0x23497AE8)) & 0x97DBC99E;
  v71 = (v69 ^ 0x22483A64) & (2 * (v69 & 0xB492B376)) ^ v69 & 0xB492B376;
  v72 = ((4 * (v70 ^ 0x90484882)) ^ 0x5F6F2678) & (v70 ^ 0x90484882) ^ (4 * (v70 ^ 0x90484882)) & 0x97DBC99C;
  v73 = (v72 ^ 0x174B0000) & (16 * ((v70 ^ 0x6938118) & (4 * v71) ^ v71)) ^ (v70 ^ 0x6938118) & (4 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x8090C986)) ^ 0x7DBC99E0) & (v72 ^ 0x8090C986) ^ (16 * (v72 ^ 0x8090C986)) & 0x97DBC990;
  v75 = v69 ^ (2
             * (((v73 ^ 0x97DBC99E ^ (v74 ^ 0x15988900) & (v73 << 8)) << 16) & 0x17DB0000 ^ v73 ^ 0x97DBC99E ^ (v74 ^ 0x15988900) & (v73 << 8) ^ (((v73 ^ 0x97DBC99E ^ (v74 ^ 0x15988900) & (v73 << 8)) << 16) ^ 0x499E0000) & (((v74 ^ 0x8243401E) << 8) & 0x17DB0000 ^ 0x4120000 ^ (((v74 ^ 0x8243401E) << 8) ^ 0xDBC90000) & (v74 ^ 0x8243401E))));
  v76 = (v48 << 16) & 0x40380000 ^ v48 ^ ((v48 << 16) ^ 0x622D0000) & (((v47 ^ 0xC038402D) << 8) & 0xC0380000 ^ 0x40180000 ^ (((v47 ^ 0xC038402D) << 8) ^ 0x38620000) & (v47 ^ 0xC038402D));
  v77 = v2
      + v68
      - ((((v75 >> 8) ^ 0x26EFEA68) + 506448010) ^ (((v75 >> 8) ^ 0x87B979A) + 817608060) ^ (((v75 >> 8) ^ 0x2E0C6CD2)
                                                                                           + 382488116));
  v78 = v77 - 1648289020;
  v79 = ((v77 - 1648289020) ^ 0xC4DF4EDC) & (2 * ((v77 - 1648289020) & 0xD61F6CDD)) ^ (v77 - 1648289020) & 0xD61F6CDD;
  v80 = ((2 * ((v77 - 1648289020) ^ 0x4CC34E6C)) ^ 0x35B84562) & ((v77 - 1648289020) ^ 0x4CC34E6C) ^ (2 * ((v77 - 1648289020) ^ 0x4CC34E6C)) & 0x9ADC22B0;
  v81 = v80 ^ 0x8A442291;
  v82 = (v80 ^ 0x12980021) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x6B708AC4) & v81 ^ (4 * v81) & 0x9ADC22B0;
  v84 = ((16 * (v83 ^ 0x908C2031)) ^ 0xADC22B10) & (v83 ^ 0x908C2031) ^ (16 * (v83 ^ 0x908C2031)) & 0x9ADC22B0;
  v85 = v84 ^ 0x121C00A1;
  v77 -= 480332191;
  v86 = (v83 ^ 0xA500281) & (16 * v82) ^ v82 ^ 0x9ADC22B1 ^ (v84 ^ 0x88C02200) & (((v83 ^ 0xA500281) & (16 * v82) ^ v82) << 8);
  v87 = (v77 ^ 0xAB3EDD3B) & (2 * (v77 & 0xAC3ED9BA)) ^ v77 & 0xAC3ED9BA;
  v88 = ((2 * (v77 ^ 0xBB364C3B)) ^ 0x2E112B02) & (v77 ^ 0xBB364C3B) ^ (2 * (v77 ^ 0xBB364C3B)) & 0x17089580;
  v89 = ((4 * (v88 ^ 0x11089481)) ^ 0x5C225604) & (v88 ^ 0x11089481) ^ (4 * (v88 ^ 0x11089481)) & 0x17089580;
  v90 = (v89 ^ 0x14001401) & (16 * ((v88 ^ 0x1100) & (4 * v87) ^ v87)) ^ (v88 ^ 0x1100) & (4 * v87) ^ v87;
  v91 = (v85 << 8) & 0x9ADC0000 ^ 0x2DC0000 ^ ((v85 << 8) ^ 0xDC220000) & v85;
  v92 = ((16 * (v89 ^ 0x3088181)) ^ 0x70895810) & (v89 ^ 0x3088181) ^ (16 * (v89 ^ 0x3088181)) & 0x17089580;
  v93 = v90 ^ 0x17089581 ^ (v92 ^ 0x10081081) & (v90 << 8);
  v94 = v77 ^ (2
             * ((v93 << 16) & 0x17080000 ^ v93 ^ ((v93 << 16) ^ 0x15810000) & (((v92 ^ 0x7008581) << 8) & 0x17080000 ^ 0x17080000 ^ (((v92 ^ 0x7008581) << 8) ^ 0x8950000) & (v92 ^ 0x7008581)))) ^ 0xB269C766;
  v95 = ((v94 ^ v25 ^ 0x7567C1C5) - 1969734085) ^ ((v94 ^ v25 ^ 0x524FA803) - 1380952067) ^ ((v94 ^ v25 ^ 0x2E87345A)
                                                                                           - 780612698);
  v96 = v2 + 938272855 + v95;
  v97 = (2 * (v96 & 0xD1C27545)) & (v96 ^ 0xCC8E7363) ^ v96 & 0xD1C27545 ^ ((2 * (v96 & 0xD1C27545)) & 0x1040202 | 0x10000004);
  v98 = (2 * (v96 ^ 0xCC8E7363)) & 0x1D4C0626 ^ 0x5440222 ^ ((2 * (v96 ^ 0xCC8E7363)) ^ 0x3A980C4C) & (v96 ^ 0xCC8E7363);
  v99 = (4 * v97) & 0x1D4C0624 ^ v97 ^ ((4 * v97) ^ 0x40000010) & v98;
  v100 = (4 * v98) & 0x1D4C0624 ^ 0x84C0626 ^ ((4 * v98) ^ 0x75301898) & v98;
  v101 = (16 * v99) & 0x1D4C0620 ^ v99 ^ ((16 * v99) ^ 0x40) & v100;
  v102 = (16 * v100) & 0x1D4C0620 ^ 0x90C0406 ^ ((16 * v100) ^ 0xD4C06260) & v100;
  v103 = v101 ^ (v101 << 8) & 0x1D4C0600 ^ ((v101 << 8) ^ 0x400) & v102 ^ 0xD4C0222;
  v104 = (v96 ^ (2
               * ((v103 << 16) & 0x1D4C0000 ^ v103 ^ ((v103 << 16) ^ 0x6260000) & ((v102 << 8) & 0x1D4C0000 ^ 0x11480000 ^ ((v102 << 8) ^ 0x4C060000) & v102)))) >> 16;
  v105 = v95
       + (((v104 ^ 0xBC6CC9E3) - 1246055151) ^ ((v104 ^ 0xF8D57F6D) - 251460705) ^ ((v104 ^ 0x44B955DC) + 1299130672));
  v106 = v2 + 90839724 + v105;
  v107 = (v106 ^ 0xF84C2B2E) & (2 * (v106 & 0xFA6EA34E)) ^ v106 & 0xFA6EA34E;
  v108 = ((2 * (v106 ^ 0x28092BAE)) ^ 0xA4CF11C0) & (v106 ^ 0x28092BAE) ^ (2 * (v106 ^ 0x28092BAE)) & 0xD26788E0;
  v109 = ((4 * (v108 ^ 0x52208820)) ^ 0x499E2380) & (v108 ^ 0x52208820) ^ (4 * (v108 ^ 0x52208820)) & 0xD26788E0;
  v110 = (v109 ^ 0x40060080) & (16 * ((v108 ^ 0x80470040) & (4 * v107) ^ v107)) ^ (v108 ^ 0x80470040) & (4 * v107) ^ v107;
  v111 = ((16 * (v109 ^ 0x92618860)) ^ 0x26788E00) & (v109 ^ 0x92618860) ^ (16 * (v109 ^ 0x92618860)) & 0xD26788E0;
  v112 = (v106 ^ (2
                * (((v110 ^ 0xD26788E0 ^ (v111 ^ 0x26088E0) & (v110 << 8)) << 16) & 0x52670000 ^ v110 ^ 0xD26788E0 ^ (v111 ^ 0x26088E0) & (v110 << 8) ^ (((v110 ^ 0xD26788E0 ^ (v111 ^ 0x26088E0) & (v110 << 8)) << 16) ^ 0x8E00000) & (((v111 ^ 0xD00700E0) << 8) & 0xD2670000 ^ 0x10670000 ^ (((v111 ^ 0xD00700E0) << 8) ^ 0x67880000) & (v111 ^ 0xD00700E0))))) >> 8;
  v113 = v2
       + v105
       - (((v112 ^ 0x36F5D3D0) - 1192869056) ^ ((v112 ^ 0xDFE05529) + 1374930375) ^ ((v112 ^ 0xE94BE74B) + 1733851045));
  v114 = ((v113 + 793159758) ^ 0x5EE76682) & (2 * ((v113 + 793159758) & 0x5EE0070A)) ^ (v113 + 793159758) & 0x5EE0070A;
  v115 = ((2 * ((v113 + 793159758) ^ 0xE3E76C82)) ^ 0x7A0ED710) & ((v113 + 793159758) ^ 0xE3E76C82) ^ (2 * ((v113 + 793159758) ^ 0xE3E76C82)) & 0xBD076B88;
  v116 = v115 ^ 0x85012888;
  v117 = (v115 ^ 0x38010080) & (4 * v114) ^ v114;
  v118 = ((4 * v116) ^ 0xF41DAE20) & v116 ^ (4 * v116) & 0xBD076B88;
  v119 = (v118 ^ 0xB4052A00) & (16 * v117) ^ v117;
  v120 = ((16 * (v118 ^ 0x9024188)) ^ 0xD076B880) & (v118 ^ 0x9024188) ^ (16 * (v118 ^ 0x9024188)) & 0xBD076B80;
  v121 = v119 ^ 0xBD076B88 ^ (v120 ^ 0x90062800) & (v119 << 8);
  v122 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((491 * (STACK[0x6A60] == v2)) ^ v4)) - 12);
  LODWORD(STACK[0x6AC0]) ^= v40 ^ (2 * v76) ^ v78 ^ (2
                                                   * ((v86 << 16) & 0x1ADC0000 ^ v86 ^ ((v86 << 16) ^ 0x22B10000) & v91)) ^ (v113 + 793159758) ^ (2 * ((v121 << 16) & 0x3D070000 ^ v121 ^ ((v121 << 16) ^ 0x6B880000) & (((v120 ^ 0x2D014308) << 8) & 0x3D070000 ^ 0x38040000 ^ (((v120 ^ 0x2D014308) << 8) ^ 0x76B0000) & (v120 ^ 0x2D014308)))) ^ 0x5F1CD9D6;
  return v122();
}

uint64_t sub_100A1E7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = STACK[0x6970];
  if ((STACK[0x6990] & 2) == 0)
    v7 = STACK[0x6960];
  LODWORD(STACK[0x6560]) = v7;
  LODWORD(STACK[0x6930]) = LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6A50]);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x6AB0])) - 12);
  STACK[0x6A60] = 2037164611;
  STACK[0x6A50] = 1400525888;
  STACK[0x6A40] = 2968755;
  return v8(1385810319, 1153123698, 200689655, 1339359232, a5, 1539220124, a7, 1519992486);
}

uint64_t sub_100A1E8F0(unint64_t a1, unint64_t a2, unint64_t a3, int a4, int a5, unint64_t a6, int a7, unint64_t a8)
{
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unint64_t v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unint64_t v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unint64_t v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  unint64_t v189;
  int v190;
  unint64_t v191;
  int v192;
  unint64_t v193;
  int v194;
  unint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unint64_t v198;
  uint64_t v199;

  LODWORD(STACK[0x6960]) = a7;
  LODWORD(STACK[0x69A0]) = a5;
  STACK[0x69B0] = a6;
  STACK[0x69C0] = v9;
  STACK[0x69D0] = a8;
  STACK[0x69E0] = a3;
  STACK[0x69F0] = a2;
  STACK[0x6A00] = a1;
  STACK[0x6A10] = v12;
  STACK[0x6A20] = v14;
  STACK[0x6A30] = v11;
  v22 = *(unsigned __int8 *)(v9 + v13);
  v23 = (LODWORD(STACK[0x6AB0]) + 1183409894) & 0xB976D36D;
  LODWORD(STACK[0x6A70]) = v23;
  v24 = v23 - 122410900 + ((v22 ^ 0xB2F7BFFD) + 1299353007 + ((2 * v22) & 0xFFFFFFFB)) * v10 + 2091;
  v25 = (v24 ^ 0x3BD4E5BD) & (2 * (v24 & 0xBBC68538)) ^ v24 & 0xBBC68538;
  v26 = ((2 * (v24 ^ 0x6BD0EDDD)) ^ 0xA02CD1CA) & (v24 ^ 0x6BD0EDDD) ^ (2 * (v24 ^ 0x6BD0EDDD)) & 0xD01668E4;
  v27 = v26 ^ 0x50122825;
  v28 = (v26 ^ 0x800400C5) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ 0x4059A394) & v27 ^ (4 * v27) & 0xD01668E4;
  v30 = (v29 ^ 0x40102081) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ 0x90064861)) ^ 0x1668E50) & (v29 ^ 0x90064861) ^ (16 * (v29 ^ 0x90064861)) & 0xD01668E0;
  v32 = v30 ^ 0xD01668E5 ^ (v31 ^ 0x608A5) & (v30 << 8);
  v33 = v24 ^ (2
             * ((v32 << 16) & 0x50160000 ^ v32 ^ ((v32 << 16) ^ 0x68E50000) & (((v31 ^ 0xD01060A5) << 8) & 0x50160000 ^ 0x40160000 ^ (((v31 ^ 0xD01060A5) << 8) ^ 0x16680000) & (v31 ^ 0xD01060A5))));
  v34 = ((v33 ^ v8 ^ 0x6299D150) + 1160061329) ^ ((v33 ^ v8 ^ 0xBB36D71B) - 1668667428) ^ ((v33 ^ v8 ^ 0x424D52B9)
                                                                                         + 1710334586);
  v35 = v13 + a8 + v34;
  v36 = (v35 ^ 0xC1421936) & (2 * (v35 & 0xE9081D27)) ^ v35 & 0xE9081D27;
  v37 = ((2 * (v35 ^ 0x41422B78)) ^ 0x50946CBE) & (v35 ^ 0x41422B78) ^ (2 * (v35 ^ 0x41422B78)) & 0xA84A365E;
  v38 = v37 ^ 0xA84A1241;
  v39 = (v37 ^ 0xA265D) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0xA128D97C) & v38 ^ (4 * v38) & 0xA84A365C;
  v41 = (v40 ^ 0xA0081050) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x8422603)) ^ 0x84A365F0) & (v40 ^ 0x8422603) ^ (16 * (v40 ^ 0x8422603)) & 0xA84A3650;
  v43 = (v35 ^ (2
              * (((v41 ^ 0xA84A365F ^ (v42 ^ 0x80022400) & (v41 << 8)) << 16) & 0x284A0000 ^ v41 ^ 0xA84A365F ^ (v42 ^ 0x80022400) & (v41 << 8) ^ (((v41 ^ 0xA84A365F ^ (v42 ^ 0x80022400) & (v41 << 8)) << 16) ^ 0x365F0000) & (((v42 ^ 0x2848120F) << 8) & 0xA84A0000 ^ 0x20480000 ^ (((v42 ^ 0x2848120F) << 8) ^ 0x4A360000) & (v42 ^ 0x2848120F))))) >> 16;
  v44 = v34 + (((v43 ^ 0x11CD5FBA) - 499692421) ^ ((v43 ^ 0x2571A23) - 240317980) ^ ((v43 ^ 0x139ABC91) - 530534574));
  v45 = v13 + v14 + v44;
  v46 = ((2 * (v45 ^ 0xAFE184DB)) ^ 0xDA1C6DE6) & (v45 ^ 0xAFE184DB) ^ (2 * (v45 ^ 0xAFE184DB)) & 0x6D0E36F2;
  v47 = v46 ^ 0x25021211;
  v48 = (v45 ^ 0xAAEFA08B) & (2 * (v45 & 0xC2EFB228)) ^ v45 & 0xC2EFB228;
  v49 = (v46 ^ 0x280C02F1) & (4 * v48) ^ v48;
  v50 = ((4 * v47) ^ 0xB438DBCC) & v47 ^ (4 * v47) & 0x6D0E36F0;
  v51 = (v50 ^ 0x240812D3) & (16 * v49) ^ v49;
  v52 = ((16 * (v50 ^ 0x49062433)) ^ 0xD0E36F30) & (v50 ^ 0x49062433) ^ (16 * (v50 ^ 0x49062433)) & 0x6D0E36F0;
  v53 = v51 ^ 0x6D0E36F3 ^ (v52 ^ 0x400226C3) & (v51 << 8);
  v54 = (v45 ^ (2
              * ((v53 << 16) & 0x6D0E0000 ^ v53 ^ ((v53 << 16) ^ 0x36F30000) & (((v52 ^ 0x2D0C10C3) << 8) & 0x6D0E0000 ^ 0x61080000 ^ (((v52 ^ 0x2D0C10C3) << 8) ^ 0xE360000) & (v52 ^ 0x2D0C10C3))))) >> 8;
  v55 = v33 ^ 0xAF52E25F;
  v56 = v44 - (((v54 ^ 0x13E1A4F4) - 2099769664) ^ ((v54 ^ 0x5A58C4B1) - 882807045) ^ ((v54 ^ 0x49E9979A) - 657441326));
  v57 = v13 + a3 + v56;
  v58 = (v57 ^ 0x9495D400) & (2 * (v57 & 0xD51986A2)) ^ v57 & 0xD51986A2;
  v59 = ((2 * (v57 ^ 0x3497D540)) ^ 0xC31CA7C4) & (v57 ^ 0x3497D540) ^ (2 * (v57 ^ 0x3497D540)) & 0xE18E53E2;
  v60 = v59 ^ 0x20825022;
  v61 = (v59 ^ 0xC00C0380) & (4 * v58) ^ v58;
  v62 = ((4 * v60) ^ 0x86394F88) & v60 ^ (4 * v60) & 0xE18E53E0;
  v63 = v62 ^ 0x61861062;
  v64 = (v62 ^ 0x80084382) & (16 * v61) ^ v61;
  v65 = ((16 * v63) ^ 0x18E53E20) & v63 ^ (16 * v63) & 0xE18E53E0;
  v66 = v64 ^ 0xE18E53E2;
  v67 = v13 + a2 + v56;
  v68 = v65 ^ 0xE10A41C2;
  v69 = (v67 ^ 0x81232970) & (2 * (v67 & 0xAA330D44)) ^ v67 & 0xAA330D44;
  v70 = ((2 * (v67 ^ 0xD56323F8)) ^ 0xFEA05D78) & (v67 ^ 0xD56323F8) ^ (2 * (v67 ^ 0xD56323F8)) & 0x7F502EBC;
  v71 = (v65 ^ 0x8412C2) & (v64 << 8);
  v72 = ((4 * (v70 ^ 0x1502284)) ^ 0xFD40BAF0) & (v70 ^ 0x1502284) ^ (4 * (v70 ^ 0x1502284)) & 0x7F502EBC;
  v73 = v72 ^ 0x210040C;
  v74 = (v72 ^ 0x7D402AA0) & (16 * ((v70 ^ 0x78000CB4) & (4 * v69) ^ v69)) ^ (v70 ^ 0x78000CB4) & (4 * v69) ^ v69;
  v75 = v66 ^ v71;
  v76 = ((16 * v73) ^ 0xF502EBC0) & v73 ^ (16 * v73) & 0x7F502EB0;
  v77 = v76 ^ 0xA50043C;
  v78 = v13 + a1 + v56;
  v79 = v74 ^ 0x7F502EBC ^ (v76 ^ 0x75002A00) & (v74 << 8);
  LODWORD(STACK[0x6990]) = v79;
  v80 = (v78 ^ 0xA1AAEC45) & (2 * (v78 & 0xAA330D44)) ^ v78 & 0xAA330D44;
  v81 = ((2 * (v78 ^ 0xB5EAE44D)) ^ 0x3FB3D212) & (v78 ^ 0xB5EAE44D) ^ (2 * (v78 ^ 0xB5EAE44D)) & 0x1FD9E908;
  v82 = (v81 ^ 0x19904008) & (4 * v80) ^ v80;
  v83 = ((4 * (v81 ^ 0x482909)) ^ 0x7F67A424) & (v81 ^ 0x482909) ^ (4 * (v81 ^ 0x482909)) & 0x1FD9E908;
  v84 = ((16 * (v83 ^ 0x984909)) ^ 0xFD9E9090) & (v83 ^ 0x984909) ^ (16 * (v83 ^ 0x984909)) & 0x1FD9E900;
  v79 <<= 16;
  LODWORD(STACK[0x6950]) = v79;
  v85 = (v83 ^ 0x1F41A009) & (16 * v82) ^ v82 ^ 0x1FD9E909 ^ (v84 ^ 0x1D988009) & (((v83 ^ 0x1F41A009) & (16 * v82) ^ v82) << 8);
  v86 = v78 ^ (2
             * ((v85 << 16) & 0x1FD90000 ^ v85 ^ ((v85 << 16) ^ 0x69090000) & (((v84 ^ 0x2416909) << 8) & 0x1FD90000 ^ 0x6100000 ^ (((v84 ^ 0x2416909) << 8) ^ 0xD9E90000) & (v84 ^ 0x2416909)))) ^ 0xAEEAD3D7;
  LODWORD(STACK[0x6980]) = v86;
  v87 = ((v86 ^ v55 ^ 0x6AC68089) - 1791393929) ^ ((v86 ^ v55 ^ 0xADDE0151) + 1377959599) ^ ((v86 ^ v55 ^ 0xDAD03BF4)
                                                                                           + 623887372);
  v88 = v13 + a6 + v87;
  v89 = (v88 ^ 0x8BA84797) & (2 * (v88 & 0xC20A1790)) ^ v88 & 0xC20A1790;
  v90 = ((2 * (v88 ^ 0xFAC6E97)) ^ 0x9B4CF20E) & (v88 ^ 0xFAC6E97) ^ (2 * (v88 ^ 0xFAC6E97)) & 0xCDA67906;
  v91 = v90 ^ 0x44A20901;
  v92 = (v90 ^ 0x4C827101) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0x3699E41C) & v91 ^ (4 * v91) & 0xCDA67904;
  v94 = (v93 ^ 0x4806000) & (16 * v92) ^ v92;
  v95 = ((16 * (v93 ^ 0xC9261903)) ^ 0xDA679070) & (v93 ^ 0xC9261903) ^ (16 * (v93 ^ 0xC9261903)) & 0xCDA67900;
  v96 = v94 ^ 0xCDA67907 ^ (v95 ^ 0xC8261007) & (v94 << 8);
  v97 = (v88 ^ (2
              * ((v96 << 16) & 0x4DA60000 ^ v96 ^ ((v96 << 16) ^ 0x79070000) & (((v95 ^ 0x5806907) << 8) & 0x4DA60000 ^ 0x49860000 ^ (((v95 ^ 0x5806907) << 8) ^ 0x26790000) & (v95 ^ 0x5806907))))) >> 16;
  v98 = v87 + (((v97 ^ 0x8768EE86) + 856581333) ^ ((v97 ^ 0x5717F6AD) - 479101696) ^ ((v97 ^ 0xD07FD361) + 1679382836));
  v99 = v13 + v16 + v98;
  v100 = (v99 ^ 0xD46BE3A2) & (2 * (v99 & 0xD14BC32B)) ^ v99 & 0xD14BC32B;
  v101 = ((2 * (v99 ^ 0xF4FAE1B6)) ^ 0x4B62453A) & (v99 ^ 0xF4FAE1B6) ^ (2 * (v99 ^ 0xF4FAE1B6)) & 0x25B1229C;
  v102 = v101 ^ 0x24912285;
  v103 = (v101 ^ 0x21A02219) & (4 * v100) ^ v100;
  v104 = ((4 * v102) ^ 0x96C48A74) & v102 ^ (4 * v102) & 0x25B1229C;
  v105 = v103 ^ 0x25B1229D ^ (v104 ^ 0x4800219) & (16 * v103);
  v106 = (16 * (v104 ^ 0x21312089)) & 0x25B12290 ^ 0x24A1020D ^ ((16 * (v104 ^ 0x21312089)) ^ 0x5B1229D0) & (v104 ^ 0x21312089);
  v107 = (v105 << 8) & 0x25B12200 ^ v105 ^ ((v105 << 8) ^ 0xB1229D00) & v106;
  LODWORD(STACK[0x6970]) = (v79 ^ 0x2EBC0000) & ((v77 << 8) & v15 ^ 0x2F500000 ^ ((v77 << 8) ^ 0x502E0000) & v77);
  v108 = (v99 ^ (2
               * ((v107 << 16) & 0x25B10000 ^ v107 ^ ((v107 << 16) ^ 0x229D0000) & ((v106 << 8) & 0x25B10000 ^ 0x4910000 ^ ((v106 << 8) ^ 0x31220000) & v106)))) >> 8;
  LODWORD(STACK[0x6940]) = (v75 << 16) & 0x618E0000 ^ v75 ^ ((v75 << 16) ^ 0x53E20000) & ((v68 << 8) & 0xE18E0000 ^ 0x618C0000 ^ ((v68 << 8) ^ 0x8E530000) & v68);
  v109 = v98
       - (((v108 ^ 0x3115EC57) - 1895291145) ^ ((v108 ^ 0x54A53E7F) - 356977441) ^ ((v108 ^ 0x652999AE) - 617327856));
  v110 = v13 + v17 + v109;
  v111 = (v110 ^ 0x546B0CCB) & (2 * (v110 & 0x196A0902)) ^ v110 & 0x196A0902;
  v112 = ((2 * (v110 ^ 0x56BF0ECB)) ^ 0x9FAA0F92) & (v110 ^ 0x56BF0ECB) ^ (2 * (v110 ^ 0x56BF0ECB)) & 0x4FD507C8;
  v113 = v112 ^ 0x40550049;
  v114 = (v112 ^ 0xF800400) & (4 * v111) ^ v111;
  v115 = ((4 * v113) ^ 0x3F541F24) & v113 ^ (4 * v113) & 0x4FD507C8;
  v116 = v115 ^ 0x408100C9;
  v117 = (v115 ^ 0xF540700) & (16 * v114) ^ v114;
  v118 = 16 * (v115 ^ 0x408100C9);
  v119 = (v118 ^ 0xFD507C90) & v116;
  v120 = v13 + v18 + v109;
  v121 = v119 ^ v118 & 0x4FD507C0;
  v122 = (v120 ^ 0xB2D2C304) & (2 * (v120 & 0x32D41204)) ^ v120 & 0x32D41204;
  v123 = v117 ^ 0x4FD507C9;
  v124 = ((2 * (v120 ^ 0x97DAE304)) ^ 0x4A1DE200) & (v120 ^ 0x97DAE304) ^ (2 * (v120 ^ 0x97DAE304)) & 0xA50EF100;
  v125 = v121 ^ 0x2850349;
  v126 = v124 ^ 0xA5021100;
  v127 = (v124 ^ 0x2002C100) & (4 * v122) ^ v122;
  v128 = (v121 ^ 0x4D500400) & (v117 << 8);
  v129 = ((4 * v126) ^ 0x943BC400) & v126 ^ (4 * v126) & 0xA50EF100;
  v130 = v129 ^ 0x21043100;
  v131 = v127 ^ 0xA50EF100 ^ (v129 ^ 0x840AC000) & (16 * v127);
  v132 = (16 * v130) & 0xA50EF100 ^ 0xA500E100 ^ ((16 * v130) ^ 0x50EF1000) & v130;
  v133 = (v131 << 8) & 0xA50EF100 ^ v131 ^ ((v131 << 8) ^ 0xEF10000) & v132;
  v134 = v13 + v19 + v109;
  v135 = (v134 ^ 0xB2820A66) & (2 * (v134 & 0x32D41204)) ^ v134 & 0x32D41204;
  v136 = v123 ^ v128;
  v137 = ((2 * (v134 ^ 0xD62A0E66)) ^ 0xC9FC38C4) & (v134 ^ 0xD62A0E66) ^ (2 * (v134 ^ 0xD62A0E66)) & 0xE4FE1C62;
  v138 = ((4 * (v137 ^ 0x24020422)) ^ 0x93F87188) & (v137 ^ 0x24020422) ^ (4 * (v137 ^ 0x24020422)) & 0xE4FE1C60;
  v139 = (v137 ^ 0xE0F21C00) & (4 * v135) ^ v135 ^ 0xE4FE1C62 ^ (v138 ^ 0x80F81002) & (16
                                                                                     * ((v137 ^ 0xE0F21C00) & (4 * v135) ^ v135));
  v140 = (16 * (v138 ^ 0x64060C62)) & 0xE4FE1C60 ^ 0xA01E1842 ^ ((16 * (v138 ^ 0x64060C62)) ^ 0x4FE1C620) & (v138 ^ 0x64060C62);
  v141 = (v139 << 8) & 0xE4FE1C00 ^ v139 ^ ((v139 << 8) ^ 0xFE1C6200) & v140;
  v142 = ((v133 << 16) ^ 0x71000000) & ((v132 << 8) & 0xA50E0000 ^ 0x210E0000 ^ ((v132 << 8) ^ 0xEF10000) & v132);
  v143 = v134 ^ (2
               * ((v141 << 16) & 0x64FE0000 ^ v141 ^ ((v141 << 16) ^ 0x1C620000) & ((v140 << 8) & 0x64FE0000 ^ 0xE20000 ^ ((v140 << 8) ^ 0x7E1C0000) & v140))) ^ 0xC0D84F1A;
  v144 = ((v136 << 16) ^ 0x7C90000) & ((v125 << 8) & a4 ^ 0xAD00000 ^ ((v125 << 8) ^ 0xD5070000) & v125);
  v145 = ((v143 ^ v55 ^ 0xBA71AA19) + 1166956007) ^ ((v143 ^ v55 ^ 0xAF2D7008) + 1355976696) ^ ((v143 ^ v55 ^ 0xDAE00966)
                                                                                              + 622851738);
  v146 = v13 + v21 + v145;
  v147 = (v146 ^ 0x576FB1CE) & (2 * (v146 & 0x966FC588)) ^ v146 & 0x966FC588;
  v148 = ((2 * (v146 ^ 0x532F32CE)) ^ 0x8A81EE8C) & (v146 ^ 0x532F32CE) ^ (2 * (v146 ^ 0x532F32CE)) & 0xC540F746;
  v149 = v148 ^ 0x45401142;
  v150 = (v148 ^ 0x84002702) & (4 * v147) ^ v147;
  v151 = ((4 * v149) ^ 0x1503DD18) & v149 ^ (4 * v149) & 0xC540F744;
  v152 = ((16 * (v151 ^ 0xC0402246)) ^ 0x540F7460) & (v151 ^ 0xC0402246) ^ (16 * (v151 ^ 0xC0402246)) & 0xC540F740;
  v153 = (v151 ^ 0x500D500) & (16 * v150) ^ v150 ^ 0xC540F746 ^ (v152 ^ 0x44007406) & (((v151 ^ 0x500D500) & (16 * v150) ^ v150) << 8);
  v154 = (v146 ^ (2
                * ((v153 << 16) & 0x45400000 ^ v153 ^ ((v153 << 16) ^ 0x77460000) & (((v152 ^ 0x81408306) << 8) & 0xC5400000 ^ 0x5000000 ^ (((v152 ^ 0x81408306) << 8) ^ 0x40F70000) & (v152 ^ 0x81408306))))) >> 16;
  v155 = v145
       + (((v154 ^ 0x44FB5417) + 2035628666) ^ ((v154 ^ 0x6692C5B2) + 1530702813) ^ ((v154 ^ 0x226907CB) + 533162406));
  v156 = STACK[0x6A40];
  v157 = v13 + STACK[0x6A40] + v155;
  v158 = (v157 ^ 0x51EA0C8B) & (2 * (v157 & 0x91E08EC3)) ^ v157 & 0x91E08EC3;
  v159 = ((2 * (v157 ^ 0x71EB0C0B)) ^ 0xC0170590) & (v157 ^ 0x71EB0C0B) ^ (2 * (v157 ^ 0x71EB0C0B)) & 0xE00B82C8;
  v160 = ((4 * (v159 ^ 0x20088248)) ^ 0x802E0B20) & (v159 ^ 0x20088248) ^ (4 * (v159 ^ 0x20088248)) & 0xE00B82C8;
  v161 = (v160 ^ 0x800A0208) & (16 * ((v159 ^ 0xE00A8040) & (4 * v158) ^ v158)) ^ (v159 ^ 0xE00A8040) & (4 * v158) ^ v158;
  v162 = ((16 * (v160 ^ 0x600180C8)) ^ 0xB82C80) & (v160 ^ 0x600180C8) ^ (16 * (v160 ^ 0x600180C8)) & 0xE00B82C0;
  v163 = v161 ^ 0xE00B82C8 ^ (v162 ^ 0x80048) & (v161 << 8);
  v164 = (v136 << 16) & 0x4FD50000 ^ v136 ^ v144;
  v165 = (v157 ^ (2
                * ((v163 << 16) & 0x600B0000 ^ v163 ^ ((v163 << 16) ^ 0x2C80000) & (((v162 ^ 0xE0038248) << 8) & 0x600B0000 ^ 0x60090000 ^ (((v162 ^ 0xE0038248) << 8) ^ 0xB820000) & (v162 ^ 0xE0038248))))) >> 8;
  v166 = STACK[0x6A50];
  v167 = v155
       - (((v165 ^ 0x10E30894) - 1175827971) ^ ((v165 ^ 0x3B81D0A0) - 1836543543) ^ ((v165 ^ 0x2B333FBF) - 2110095656));
  v168 = v13 + STACK[0x6A50] + v167;
  v169 = (v168 ^ 0xC7C90F50) & (2 * (v168 & 0xE7EC2E1A)) ^ v168 & 0xE7EC2E1A;
  v170 = ((2 * (v168 ^ 0xC3915F60)) ^ 0x48FAE2F4) & (v168 ^ 0xC3915F60) ^ (2 * (v168 ^ 0xC3915F60)) & 0x247D717A;
  v171 = v170 ^ 0x2405110A;
  v172 = (v170 ^ 0x706070) & (4 * v169) ^ v169;
  v173 = ((4 * v171) ^ 0x91F5C5E8) & v171 ^ (4 * v171) & 0x247D7178;
  v174 = v173 ^ 0x24083012;
  v175 = (v173 ^ 0x754160) & (16 * v172) ^ v172;
  v176 = ((16 * v174) ^ 0x47D717A0) & v174 ^ (16 * v174) & 0x247D7170;
  v177 = v175 ^ 0x247D717A;
  v178 = LODWORD(STACK[0x6AC0]) ^ 0xF3A5EB18 ^ v57 ^ (2 * LODWORD(STACK[0x6940])) ^ v110 ^ (2 * v164) ^ v168;
  v179 = STACK[0x6A60];
  v180 = v13 + STACK[0x6A60] + v167;
  v181 = (v176 ^ 0x455115A) & (v175 << 8);
  v182 = (v180 ^ 0xEFDA1C32) & (2 * (v180 & 0xCFD85C34)) ^ v180 & 0xCFD85C34;
  v183 = ((2 * (v180 ^ 0xE65ABC52)) ^ 0x5305C0CC) & (v180 ^ 0xE65ABC52) ^ (2 * (v180 ^ 0xE65ABC52)) & 0x2982E066;
  v184 = (v183 ^ 0x100C042) & (4 * v182) ^ v182;
  v185 = ((4 * (v183 ^ 0x28822022)) ^ 0xA60B8198) & (v183 ^ 0x28822022) ^ (4 * (v183 ^ 0x28822022)) & 0x2982E064;
  v186 = (v185 ^ 0x20028006) & (16 * v184) ^ v184;
  v187 = ((16 * (v185 ^ 0x9806066)) ^ 0x982E0660) & (v185 ^ 0x9806066) ^ (16 * (v185 ^ 0x9806066)) & 0x2982E060;
  v188 = v186 ^ 0x2982E066 ^ (v187 ^ 0x8020006) & (v186 << 8);
  v189 = STACK[0x69B0];
  v190 = ((v177 ^ v181) << 16) & 0x247D0000 ^ v177 ^ v181 ^ (((v177 ^ v181) << 16) ^ 0x717A0000) & (((v176 ^ 0x2028605A) << 8) & 0x247D0000 ^ (((v176 ^ 0x2028605A) << 8) ^ 0x7D710000) & (v176 ^ 0x2028605A) ^ 0xC0000);
  v191 = STACK[0x6A00];
  v192 = STACK[0x6950] & 0x7F500000 ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6970]) ^ v133 ^ (v133 << 16) & 0x250E0000 ^ v142;
  v193 = STACK[0x69F0];
  v194 = v192 ^ v188 ^ (v188 << 16) & 0x29820000 ^ ((v188 << 16) ^ 0x60660000) & (((v187 ^ 0x2180E006) << 8) & 0x29820000 ^ 0x29020000 ^ (((v187 ^ 0x2180E006) << 8) ^ 0x2E00000) & (v187 ^ 0x2180E006));
  v195 = STACK[0x69E0];
  LODWORD(STACK[0x6AC0]) = v178 ^ (2 * v190);
  v196 = LODWORD(STACK[0x6960]) ^ 0xE6A33CC0 ^ v67 ^ v120 ^ v180 ^ (2 * v194);
  v197 = LODWORD(STACK[0x69A0]) ^ 0xD274695B ^ LODWORD(STACK[0x6980]) ^ v143;
  v198 = STACK[0x69D0];
  v199 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((22201 * (v13 == STACK[0x6A10])) ^ LODWORD(STACK[0x6AB0])));
  STACK[0x6A40] = v156 + 1;
  STACK[0x6A50] = v166 + 1;
  STACK[0x6A60] = v179 + 1;
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, _QWORD, unint64_t, uint64_t, unint64_t))(v199 - 12))(v191 + 1, v193 + 1, v195 + 1, 1339359232, v197 ^ ((_DWORD)v13 + v20 + v167), v189 + 1, v196, v198 + 1);
}

uint64_t sub_100A20240@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  unsigned int v218;
  unint64_t v219;
  unsigned int v220;
  int v221;
  uint64_t v222;
  int v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  int v228;
  unsigned int v229;
  char *v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  int v250;
  int v251;
  char *v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  int v268;
  uint64_t (*v269)(void);

  v5 = v4 + a3 - v3;
  v6 = (((v5 ^ 0x409D7BF) - 1555431415) ^ ((v5 ^ 0xDE92C614) + 2043744676) ^ ((v5 ^ 0x36A832DF) - 1846811287))
     - ((((v5 >> 11) ^ 0xA1EF90A8) - 870187311) ^ (((v5 >> 11) ^ 0x9B0F0438) - 155096511) ^ (((v5 >> 11) ^ 0x3AFD12F4)
                                                                                           + 1462992013));
  v7 = ((v6 + 1359383269) ^ 0xC1194166) & (2 * ((v6 + 1359383269) & 0xD15C6874)) ^ (v6 + 1359383269) & 0xD15C6874;
  v8 = ((2 * ((v6 + 1359383269) ^ 0x438981C6)) ^ 0x25ABD364) & ((v6 + 1359383269) ^ 0x438981C6) ^ (2
                                                                                                 * ((v6 + 1359383269) ^ 0x438981C6)) & 0x92D5E9B2;
  v9 = v8 ^ 0x92542892;
  v10 = (v8 ^ 0x81C120) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x4B57A6C8) & v9 ^ (4 * v9) & 0x92D5E9B0;
  v12 = (v11 ^ 0x255A080) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x90804932)) ^ 0x2D5E9B20) & (v11 ^ 0x90804932) ^ (16 * (v11 ^ 0x90804932)) & 0x92D5E9B0;
  v14 = v12 ^ 0x92D5E9B2 ^ (v13 ^ 0x548992) & (v12 << 8);
  v15 = ((v6 + 1359383269) ^ (2
                            * ((v14 << 16) & 0x12D50000 ^ v14 ^ ((v14 << 16) ^ 0x69B20000) & (((v13 ^ 0x92816092) << 8) & 0x12D50000 ^ 0x2140000 ^ (((v13 ^ 0x92816092) << 8) ^ 0x55E90000) & (v13 ^ 0x92816092))))) >> 6;
  v16 = v6
      + 1531076333
      + (((v15 ^ 0x136754A) + 967314615) ^ ((v15 ^ 0x70608027) + 1224669660) ^ ((v15 ^ 0x7281AB81) + 1243599486));
  v17 = (v16 ^ 0x6BC76952) & (2 * (v16 & 0x8BD76D5B)) ^ v16 & 0x8BD76D5B;
  v18 = ((2 * (v16 ^ 0x7CC32962)) ^ 0xEE288872) & (v16 ^ 0x7CC32962) ^ (2 * (v16 ^ 0x7CC32962)) & 0xF7144438;
  v19 = v18 ^ 0x11144409;
  v20 = (v18 ^ 0x66000031) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0xDC5110E4) & v19 ^ (4 * v19) & 0xF7144438;
  v22 = v20 ^ 0xF7144439 ^ (v21 ^ 0xD4100020) & (16 * v20);
  v23 = (16 * (v21 ^ 0x23044419)) & 0xF7144430 ^ 0x86100429 ^ ((16 * (v21 ^ 0x23044419)) ^ 0x71444390) & (v21 ^ 0x23044419);
  v24 = (v22 << 8) & 0xF7144400 ^ v22 ^ ((v22 << 8) ^ 0x14443900) & v23;
  v25 = v16 ^ (2
             * ((v24 << 16) & 0x77140000 ^ v24 ^ ((v24 << 16) ^ 0x44390000) & ((v23 << 8) & 0x77140000 ^ 0x63100000 ^ ((v23 << 8) ^ 0x14440000) & v23)));
  v26 = ((v25 ^ 0x934C1A87) + 528491684) ^ ((v25 ^ 0x51C54DF5) - 586583086) ^ ((v25 ^ 0x75EB25B) - 1953330048);
  v27 = ((v26 + 1046395066) ^ 0xE0757D5A) & (2 * ((v26 + 1046395066) & 0xE9767993)) ^ (v26 + 1046395066) & 0xE9767993;
  v28 = ((2 * ((v26 + 1046395066) ^ 0xF2598C5A)) ^ 0x365FEB92) & ((v26 + 1046395066) ^ 0xF2598C5A) ^ (2 * ((v26 + 1046395066) ^ 0xF2598C5A)) & 0x1B2FF5C8;
  v29 = v28 ^ 0x9201449;
  v30 = (v28 ^ 0x20BF081) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0x6CBFD724) & v29 ^ (4 * v29) & 0x1B2FF5C8;
  v32 = (v31 ^ 0x82FD500) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x130020C9)) ^ 0xB2FF5C90) & (v31 ^ 0x130020C9) ^ (16 * (v31 ^ 0x130020C9)) & 0x1B2FF5C0;
  v34 = v32 ^ 0x1B2FF5C9 ^ (v33 ^ 0x122F5400) & (v32 << 8);
  v35 = ((v26 + 1046395066) ^ (2
                             * ((v34 << 16) & 0x1B2F0000 ^ v34 ^ ((v34 << 16) ^ 0x75C90000) & (((v33 ^ 0x900A149) << 8) & 0x1B2F0000 ^ 0x100A0000 ^ (((v33 ^ 0x900A149) << 8) ^ 0x2FF50000) & (v33 ^ 0x900A149))))) >> 12;
  v36 = v26 - (((v35 ^ 0x56431F5D) - 1684857830) ^ ((v35 ^ 0xB43556AC) + 2045072873) ^ ((v35 ^ 0xE2799A48) + 799643917));
  v37 = ((v36 - 1057982107) ^ 0xB4E281C6) & (2 * ((v36 - 1057982107) & 0x34C489E6)) ^ (v36 - 1057982107) & 0x34C489E6;
  v38 = ((2 * ((v36 - 1057982107) ^ 0xBC6A90C6)) ^ 0x115C3240) & ((v36 - 1057982107) ^ 0xBC6A90C6) ^ (2 * ((v36 - 1057982107) ^ 0xBC6A90C6)) & 0x88AE1920;
  v39 = v38 ^ 0x88A20920;
  v40 = (v38 ^ 0x8840000) & (4 * v37) ^ v37;
  v41 = ((4 * v39) ^ 0x22B86480) & v39 ^ (4 * v39) & 0x88AE1920;
  v42 = v40 ^ 0x88AE1920 ^ (v41 ^ 0xA80000) & (16 * v40);
  v43 = (16 * (v41 ^ 0x88061920)) & 0x88AE1920 ^ 0xE0920 ^ ((16 * (v41 ^ 0x88061920)) ^ 0x8AE19200) & (v41 ^ 0x88061920);
  v44 = (v42 << 8) & 0x88AE1900 ^ v42 ^ ((v42 << 8) ^ 0xAE192000) & v43;
  v45 = ((v36 - 1057982107) ^ (2
                             * ((v44 << 16) & 0x8AE0000 ^ v44 ^ ((v44 << 16) ^ 0x19200000) & ((v43 << 8) & 0x8AE0000 ^ 0xA60000 ^ ((v43 << 8) ^ 0xAE190000) & v43)))) >> 1;
  v46 = v36
      - (((v45 ^ 0x85547373) + 815398051) ^ ((v45 ^ 0x13D4FF92) - 1508282300) ^ ((v45 ^ 0x8464D132) + 833183460))
      - 1235453710;
  v47 = (v46 ^ 0xE471181B) & (2 * (v46 & 0xE6825C5C)) ^ v46 & 0xE6825C5C;
  v48 = ((2 * (v46 ^ 0x6475A80B)) ^ 0x5EFE8AE) & (v46 ^ 0x6475A80B) ^ (2 * (v46 ^ 0x6475A80B)) & 0x82F7F456;
  v49 = v48 ^ 0x82101451;
  v50 = (v48 ^ 0x3E401) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0xBDFD15C) & v49 ^ (4 * v49) & 0x82F7F454;
  v52 = (v51 ^ 0x2D7D040) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x80202403)) ^ 0x2F7F4570) & (v51 ^ 0x80202403) ^ (16 * (v51 ^ 0x80202403)) & 0x82F7F450;
  v54 = v52 ^ 0x82F7F457 ^ (v53 ^ 0x2774400) & (v52 << 8);
  v55 = v46 ^ (2
             * ((v54 << 16) & 0x2F70000 ^ v54 ^ ((v54 << 16) ^ 0x74570000) & (((v53 ^ 0x8080B007) << 8) & 0x2F70000 ^ (((v53 ^ 0x8080B007) << 8) ^ 0x77F40000) & (v53 ^ 0x8080B007) ^ 0x30000)));
  v56 = (((v55 ^ 0x60B2199) + 1801990994) ^ ((v55 ^ 0xAEFE8772) - 1013082693) ^ ((v55 ^ 0x312B6167) + 1548252080))
      - ((((v55 >> 13) ^ 0x1D044324) + 619188682) ^ (((v55 >> 13) ^ 0x34166B64) + 234502538) ^ (((v55 >> 13) ^ 0x2916E6B6)
                                                                                              + 284865628));
  v57 = ((v56 - 996554976) ^ 0x4C9AFFA6) & (2 * ((v56 - 996554976) & 0x8090FFB7)) ^ (v56 - 996554976) & 0x8090FFB7;
  v58 = ((2 * ((v56 - 996554976) ^ 0x4C9ABCE8)) ^ 0x981486BE) & ((v56 - 996554976) ^ 0x4C9ABCE8) ^ (2
                                                                                                  * ((v56 - 996554976) ^ 0x4C9ABCE8)) & 0xCC0A435E;
  v59 = v58 ^ 0x440A4141;
  v60 = (v58 ^ 0x4008021D) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0x30290D7C) & v59 ^ (4 * v59) & 0xCC0A435C;
  v62 = (v61 ^ 0x80153) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0xCC024203)) ^ 0xC0A435F0) & (v61 ^ 0xCC024203) ^ (16 * (v61 ^ 0xCC024203)) & 0xCC0A4350;
  v64 = v62 ^ 0xCC0A435F ^ (v63 ^ 0xC000010F) & (v62 << 8);
  v65 = ((v56 - 996554976) ^ (2
                            * ((v64 << 16) & 0x4C0A0000 ^ v64 ^ ((v64 << 16) ^ 0x435F0000) & (((v63 ^ 0xC0A420F) << 8) & 0x4C0A0000 ^ 0x44080000 ^ (((v63 ^ 0xC0A420F) << 8) ^ 0xA430000) & (v63 ^ 0xC0A420F))))) >> 4;
  v66 = v56
      + 1546636767
      + (((v65 ^ 0x5B758FB0) - 395651518) ^ ((v65 ^ 0xABF8C660) + 417832850) ^ ((v65 ^ 0xF9044E40) + 1243289522));
  v67 = (v66 ^ 0xC445896) & (2 * (v66 & 0x2E649A96)) ^ v66 & 0x2E649A96;
  v68 = ((2 * (v66 ^ 0x40454C96)) ^ 0xDC43AC00) & (v66 ^ 0x40454C96) ^ (2 * (v66 ^ 0x40454C96)) & 0x6E21D600;
  v69 = v68 ^ 0x22205200;
  v70 = (v68 ^ 0x48008400) & (4 * v67) ^ v67;
  v71 = ((4 * v69) ^ 0xB8875800) & v69 ^ (4 * v69) & 0x6E21D600;
  v72 = v70 ^ 0x6E21D600 ^ (v71 ^ 0x28015000) & (16 * v70);
  v73 = (16 * (v71 ^ 0x46208600)) & 0x6E21D600 ^ 0xC209600 ^ ((16 * (v71 ^ 0x46208600)) ^ 0xE21D6000) & (v71 ^ 0x46208600);
  v74 = (v72 << 8) & 0x6E21D600 ^ v72 ^ ((v72 << 8) ^ 0x21D60000) & v73;
  v75 = v66 ^ (2
             * ((v74 << 16) & 0x6E210000 ^ v74 ^ ((v74 << 16) ^ 0x56000000) & ((v73 << 8) & 0x6E210000 ^ 0x4E210000 ^ ((v73 << 8) ^ 0x21D60000) & v73)));
  v76 = ((v75 ^ 0x2BA93B99) + 1559984882) ^ ((v75 ^ 0x599D7728) + 785331777) ^ ((v75 ^ 0x4C137A27) + 994130768);
  v77 = ((v76 - 1781746694) ^ 0xC7B33503) & (2 * ((v76 - 1781746694) & 0xD7C335AB)) ^ (v76 - 1781746694) & 0xD7C335AB;
  v78 = ((2 * ((v76 - 1781746694) ^ 0xCBB57E13)) ^ 0x38EC9770) & ((v76 - 1781746694) ^ 0xCBB57E13) ^ (2 * ((v76 - 1781746694) ^ 0xCBB57E13)) & 0x1C764BB8;
  v79 = v78 ^ 0x4124888;
  v80 = (v78 ^ 0x18060330) & (4 * v77) ^ v77;
  v81 = ((4 * v79) ^ 0x71D92EE0) & v79 ^ (4 * v79) & 0x1C764BB8;
  v82 = (v81 ^ 0x10500AA8) & (16 * v80) ^ v80;
  v83 = ((16 * (v81 ^ 0xC264118)) ^ 0xC764BB80) & (v81 ^ 0xC264118) ^ (16 * (v81 ^ 0xC264118)) & 0x1C764BB0;
  v84 = v82 ^ 0x1C764BB8 ^ (v83 ^ 0x4640B38) & (v82 << 8);
  v85 = ((v76 - 1781746694) ^ (2
                             * ((v84 << 16) & 0x1C760000 ^ v84 ^ ((v84 << 16) ^ 0x4BB80000) & (((v83 ^ 0x18124038) << 8) & 0x1C760000 ^ 0x8340000 ^ (((v83 ^ 0x18124038) << 8) ^ 0x764B0000) & (v83 ^ 0x18124038))))) >> 11;
  v86 = v76
      - 533006129
      + (((v85 ^ 0x94FA874C) + 592906628) ^ ((v85 ^ 0xD45A4859) + 1677182615) ^ ((v85 ^ 0x40BF26E1) - 149772241));
  v87 = (v86 ^ 0xC50809D8) & (2 * (v86 & 0xD5A2899A)) ^ v86 & 0xD5A2899A;
  v88 = ((2 * (v86 ^ 0x654C09E8)) ^ 0x61DD00E4) & (v86 ^ 0x654C09E8) ^ (2 * (v86 ^ 0x654C09E8)) & 0xB0EE8072;
  v89 = v88 ^ 0x90228012;
  v90 = v87 ^ 0xB0EE8072 ^ (v88 ^ 0x208C0060) & (4 * v87);
  v91 = ((4 * v89) ^ 0xC3BA01C8) & v89 ^ (4 * v89) & 0xB0EE8070;
  v92 = v91 & 0x47BB4288 ^ v90 ^ (v91 ^ 0x80AA0042) & ((16 * v90) ^ 0x495345A8);
  v93 = ((16 * v91) ^ 0x4D1B4688) & (v91 ^ 0x80AA0042) ^ v91 & 0x47BB4288;
  v94 = v93 & 0x47BB4288 ^ v92 ^ ((v92 << 8) ^ 0x33B3088) & (v93 ^ 0xAA0072);
  v95 = ((v93 << 8) ^ 0xEDBB4288) & (v93 ^ 0xAA0072) ^ v93 & 0x47BB4288;
  v96 = (v86 ^ (2
              * (v94 ^ v95 & 0x47BB4288 ^ ((v94 << 16) ^ 0xC7C94289) & (v95 ^ 0x30440000) ^ ((v94 << 16) ^ 0xC7C94289) & 0x30EE0000))) >> 3;
  v97 = v86
      - 140032453
      + (((v96 ^ 0xA834594) + 241053172) ^ ((v96 ^ 0x3540C2B0) + 832416472) ^ ((v96 ^ 0x2966F60B) + 767270509));
  v98 = (v97 ^ 0xCB93A8C4) & (2 * (v97 & 0xCB832A16)) ^ v97 & 0xCB832A16;
  v99 = ((2 * (v97 ^ 0xCC91ECC4)) ^ 0xE258DA4) & (v97 ^ 0xCC91ECC4) ^ (2 * (v97 ^ 0xCC91ECC4)) & 0x712C6D2;
  v100 = v99 ^ 0x1124252;
  v101 = (v99 ^ 0x7028282) & (4 * v98) ^ v98;
  v102 = ((4 * v100) ^ 0x1C4B1B48) & v100 ^ (4 * v100) & 0x712C6D0;
  v103 = (v102 ^ 0x4020252) & (16 * v101) ^ v101;
  v104 = ((16 * (v102 ^ 0x310C492)) ^ 0x712C6D20) & (v102 ^ 0x310C492) ^ (16 * (v102 ^ 0x310C492)) & 0x712C6D0;
  v105 = v103 ^ 0x712C6D2 ^ (v104 ^ 0x10044D2) & (v103 << 8);
  v106 = v97 ^ (2
              * ((v105 << 16) & 0x7120000 ^ v105 ^ ((v105 << 16) ^ 0x46D20000) & (((v104 ^ 0x61282D2) << 8) & 0x7120000 ^ 0x5100000 ^ (((v104 ^ 0x61282D2) << 8) ^ 0x12C60000) & (v104 ^ 0x61282D2))));
  v107 = ((v106 ^ 0x255ECB06) + 682347036) ^ ((v106 ^ 0x489AEF59) + 1164963397) ^ ((v106 ^ 0xA44683ED) - 1447853327);
  v108 = v25 ^ LODWORD(STACK[0x6AC0]) ^ v106;
  v109 = ((v107 + 1248843451) ^ 0x882CEB44) & (2 * ((v107 + 1248843451) & 0x8040F241)) ^ (v107 + 1248843451) & 0x8040F241;
  v110 = ((2 * ((v107 + 1248843451) ^ 0x88ACCB44)) ^ 0x11D8720A) & ((v107 + 1248843451) ^ 0x88ACCB44) ^ (2 * ((v107 + 1248843451) ^ 0x88ACCB44)) & 0x8EC3904;
  v111 = v110 ^ 0x8240905;
  v112 = (v110 ^ 0x8201001) & (4 * v109) ^ v109;
  v113 = ((4 * v111) ^ 0x23B0E414) & v111 ^ (4 * v111) & 0x8EC3904;
  v114 = (v113 ^ 0xA02001) & (16 * v112) ^ v112;
  v115 = ((16 * (v113 ^ 0x84C1901)) ^ 0x8EC39050) & (v113 ^ 0x84C1901) ^ (16 * (v113 ^ 0x84C1901)) & 0x8EC3900;
  v116 = v114 ^ 0x8EC3905 ^ (v115 ^ 0x8C01005) & (v114 << 8);
  v117 = v107
       - 894383876
       + ((((v107 + 1248843451) ^ (2
                                 * ((v116 << 16) & 0x8EC0000 ^ v116 ^ ((v116 << 16) ^ 0x39050000) & (((v115 ^ 0x2C2905) << 8) & 0x8EC0000 ^ 0xC40000 ^ (((v115 ^ 0x2C2905) << 8) ^ 0xEC390000) & (v115 ^ 0x2C2905))))) >> 15) ^ 0x10321);
  v118 = v117 - (v117 >> 5) - ((2 * (v117 - (v117 >> 5))) & 0x7312D18) - 2087151988;
  v119 = ((v118 ^ 0xBC7C7F70) + 1132691600) ^ ((v118 ^ 0xAD34AE24) + 1389056476) ^ ((v118 ^ 0x92D047D8) + 1831843880);
  v120 = ((v119 + 512029466) ^ 0xDA5C2520) & (2 * ((v119 + 512029466) & 0xE21E29A2)) ^ (v119 + 512029466) & 0xE21E29A2;
  v121 = ((2 * ((v119 + 512029466) ^ 0x9A707524)) ^ 0xF0DCB90C) & ((v119 + 512029466) ^ 0x9A707524) ^ (2 * ((v119 + 512029466) ^ 0x9A707524)) & 0x786E5C86;
  v122 = v121 ^ 0x8224482;
  v123 = (v121 ^ 0x104A0802) & (4 * v120) ^ v120;
  v124 = ((4 * v122) ^ 0xE1B97218) & v122 ^ (4 * v122) & 0x786E5C84;
  v125 = (v124 ^ 0x60285000) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0x18460C86)) ^ 0x86E5C860) & (v124 ^ 0x18460C86) ^ (16 * (v124 ^ 0x18460C86)) & 0x786E5C80;
  v127 = v125 ^ 0x786E5C86 ^ (v126 ^ 0x644886) & (v125 << 8);
  v128 = ((v119 + 512029466) ^ (2
                              * ((v127 << 16) & 0x786E0000 ^ v127 ^ ((v127 << 16) ^ 0x5C860000) & (((v126 ^ 0x780A1486) << 8) & 0x786E0000 ^ 0x10220000 ^ (((v126 ^ 0x780A1486) << 8) ^ 0x6E5C0000) & (v126 ^ 0x780A1486))))) >> 8;
  v129 = v119
       - (((v128 ^ 0x15F42D1A) + 718419001) ^ ((v128 ^ 0xDA16E58E) - 449774419) ^ ((v128 ^ 0xCF400604) - 261742809))
       + 1287310253;
  v130 = (v129 ^ 0xF26C24D9) & (2 * (v129 & 0xF36D28C2)) ^ v129 & 0xF36D28C2;
  v131 = ((2 * (v129 ^ 0x94BC345D)) ^ 0xCFA2393E) & (v129 ^ 0x94BC345D) ^ (2 * (v129 ^ 0x94BC345D)) & 0x67D11C9E;
  v132 = v131 ^ 0x20510481;
  v133 = (v131 ^ 0x67800099) & (4 * v130) ^ v130;
  v134 = ((4 * v132) ^ 0x9F44727C) & v132 ^ (4 * v132) & 0x67D11C9C;
  v135 = (v134 ^ 0x7401003) & (16 * v133) ^ v133;
  v136 = ((16 * (v134 ^ 0x60910C83)) ^ 0x7D11C9F0) & (v134 ^ 0x60910C83) ^ (16 * (v134 ^ 0x60910C83)) & 0x67D11C90;
  v137 = v135 ^ 0x67D11C9F ^ (v136 ^ 0x65110800) & (v135 << 8);
  v138 = (v129 ^ (2
                * ((v137 << 16) & 0x67D10000 ^ v137 ^ ((v137 << 16) ^ 0x1C9F0000) & (((v136 ^ 0x2C0140F) << 8) & 0x67D10000 ^ 0x26C10000 ^ (((v136 ^ 0x2C0140F) << 8) ^ 0x511C0000) & (v136 ^ 0x2C0140F))))) >> 3;
  v139 = v129
       + 2000456143
       + (((v138 ^ 0x6C2D1F2E) + 1811258369) ^ ((v138 ^ 0x4EA1D264) + 1232687435) ^ ((v138 ^ 0x24316F75) + 602532956));
  v140 = (v139 ^ 0x78CA79D5) & (2 * (v139 & 0x7ACB7DE1)) ^ v139 & 0x7ACB7DE1;
  v141 = ((2 * (v139 ^ 0xF84E8BD5)) ^ 0x50BEC68) & (v139 ^ 0xF84E8BD5) ^ (2 * (v139 ^ 0xF84E8BD5)) & 0x8285F634;
  v142 = v141 ^ 0x82841214;
  v143 = (v141 ^ 0x81E410) & (4 * v140) ^ v140;
  v144 = ((4 * v142) ^ 0xA17D8D0) & v142 ^ (4 * v142) & 0x8285F634;
  v145 = (v144 ^ 0x205D010) & (16 * v143) ^ v143;
  v146 = ((16 * (v144 ^ 0x80802624)) ^ 0x285F6340) & (v144 ^ 0x80802624) ^ (16 * (v144 ^ 0x80802624)) & 0x8285F630;
  v147 = v145 ^ 0x8285F634 ^ (v146 ^ 0x56234) & (v145 << 8);
  v148 = v139 ^ (2
               * ((v147 << 16) & 0x2850000 ^ v147 ^ ((v147 << 16) ^ 0x76340000) & (((v146 ^ 0x82809434) << 8) & 0x82850000 ^ 0x2010000 ^ (((v146 ^ 0x82809434) << 8) ^ 0x5F60000) & (v146 ^ 0x82809434))));
  v149 = (((v148 ^ 0xB25FF4EE) + 870893038) ^ ((v148 ^ 0x63B1E366) - 502869402) ^ ((v148 ^ 0x4BC26AEE) - 898278418))
       - ((((v148 >> 10) ^ 0xB3C63B90) - 1278335216) ^ (((v148 >> 10) ^ 0xD384435) + 221272235) ^ (((v148 >> 10) ^ 0xBED8F4BA)
                                                                                                 - 1093605338))
       + 1104275380;
  v150 = (v149 ^ 0x80954A47) & (2 * (v149 & 0xA2C16367)) ^ v149 & 0xA2C16367;
  v151 = ((2 * (v149 ^ 0x8015CECB)) ^ 0x45A95B58) & (v149 ^ 0x8015CECB) ^ (2 * (v149 ^ 0x8015CECB)) & 0x22D4ADAC;
  v152 = v151 ^ 0x2254A4A4;
  v153 = (v151 ^ 0x20502908) & (4 * v150) ^ v150;
  v154 = ((4 * v152) ^ 0x8B52B6B0) & v152 ^ (4 * v152) & 0x22D4ADAC;
  v155 = (v154 ^ 0x250A4A0) & (16 * v153) ^ v153;
  v156 = ((16 * (v154 ^ 0x2084090C)) ^ 0x2D4ADAC0) & (v154 ^ 0x2084090C) ^ (16 * (v154 ^ 0x2084090C)) & 0x22D4ADA0;
  v157 = v155 ^ 0x22D4ADAC ^ (v156 ^ 0x2040882C) & (v155 << 8);
  v158 = v149
       + (((v149 ^ (2
                  * ((v157 << 16) & 0x22D40000 ^ v157 ^ ((v157 << 16) ^ 0x2DAC0000) & (((v156 ^ 0x294252C) << 8) & 0x22D40000 ^ 0x22500000 ^ (((v156 ^ 0x294252C) << 8) ^ 0x54AD0000) & (v156 ^ 0x294252C))))) >> 7) ^ 0xFEB33F8F)
       + 1;
  v159 = (v158 ^ 0xAAA46B67) & (2 * (v158 & 0xA2C16367)) ^ v158 & 0xA2C16367;
  v160 = ((2 * (v158 ^ 0xEE26ED65)) ^ 0x99CF1C04) & (v158 ^ 0xEE26ED65) ^ (2 * (v158 ^ 0xEE26ED65)) & 0x4CE78E02;
  v161 = v160 ^ 0x44208202;
  v162 = (v160 ^ 0x48270C00) & (4 * v159) ^ v159;
  v163 = ((4 * v161) ^ 0x339E3808) & v161 ^ (4 * v161) & 0x4CE78E00;
  v164 = (v163 ^ 0x860802) & (16 * v162) ^ v162;
  v165 = ((16 * (v163 ^ 0x4C618602)) ^ 0xCE78E020) & (v163 ^ 0x4C618602) ^ (16 * (v163 ^ 0x4C618602)) & 0x4CE78E00;
  v166 = v164 ^ 0x4CE78E02 ^ (v165 ^ 0x4C608002) & (v164 << 8);
  v167 = v158 ^ (2
               * ((v166 << 16) & 0x4CE70000 ^ v166 ^ ((v166 << 16) ^ 0xE020000) & (((v165 ^ 0x870E02) << 8) & 0x4CE70000 ^ 0x8610000 ^ (((v165 ^ 0x870E02) << 8) ^ 0x678E0000) & (v165 ^ 0x870E02))));
  v168 = (((v167 ^ 0x7E562E78) - 692108097) ^ ((v167 ^ 0x7947303A) - 777102595) ^ ((v167 ^ 0x241B6121) - 1930294296))
       + 1828443614;
  v169 = v108 ^ v167;
  v170 = v168 + (v168 >> 8) - ((v168 + (v168 >> 8)) >> 7);
  v171 = v169 ^ 0x4B832175;
  v172 = v55 ^ a2 ^ v118 ^ (v170 - ((2 * v170) & 0xFBF6805E) + 2113617967);
  v173 = ((v170 - 1903234563) ^ 0xAC720187) & (2 * ((v170 - 1903234563) & 0xCC7AA987)) ^ (v170 - 1903234563) & 0xCC7AA987;
  v174 = ((2 * ((v170 - 1903234563) ^ 0x34D3028F)) ^ 0xF1535610) & ((v170 - 1903234563) ^ 0x34D3028F) ^ (2 * ((v170 - 1903234563) ^ 0x34D3028F)) & 0xF8A9AB08;
  v175 = v174 ^ 0x8A8A908;
  v176 = (v174 ^ 0x70010200) & (4 * v173) ^ v173;
  v177 = ((4 * v175) ^ 0xE2A6AC20) & v175 ^ (4 * v175) & 0xF8A9AB08;
  v178 = (v177 ^ 0xE0A0A800) & (16 * v176) ^ v176;
  v179 = ((16 * (v177 ^ 0x18090308)) ^ 0x8A9AB080) & (v177 ^ 0x18090308) ^ (16 * (v177 ^ 0x18090308)) & 0xF8A9AB00;
  v180 = v178 ^ 0xF8A9AB08 ^ (v179 ^ 0x8888A008) & (v178 << 8);
  v181 = ((v170 - 1903234563) ^ (2
                               * ((v180 << 16) & 0x78A90000 ^ v180 ^ ((v180 << 16) ^ 0x2B080000) & (((v179 ^ 0x70210B08) << 8) & 0x78A90000 ^ 0x50000000 ^ (((v179 ^ 0x70210B08) << 8) ^ 0x29AB0000) & (v179 ^ 0x70210B08))))) >> 8;
  v182 = v170
       - (((v181 ^ 0xAB78D0E5) + 2069812574) ^ ((v181 ^ 0x7F2EA4C5) - 1358388866) ^ ((v181 ^ 0xD43B4DDF) + 69027944))
       + 1292370131;
  v183 = (v182 ^ 0xDD6896F0) & (2 * (v182 & 0xDE4CD6F9)) ^ v182 & 0xDE4CD6F9;
  v184 = ((2 * (v182 ^ 0xE9E93790)) ^ 0x6F4BC2D2) & (v182 ^ 0xE9E93790) ^ (2 * (v182 ^ 0xE9E93790)) & 0x37A5E168;
  v185 = v184 ^ 0x10A42129;
  v186 = (v184 ^ 0x2301C040) & (4 * v183) ^ v183;
  v187 = ((4 * v185) ^ 0xDE9785A4) & v185 ^ (4 * v185) & 0x37A5E168;
  v188 = (v187 ^ 0x16858129) & (16 * v186) ^ v186;
  v189 = ((16 * (v187 ^ 0x21206049)) ^ 0x7A5E1690) & (v187 ^ 0x21206049) ^ (16 * (v187 ^ 0x21206049)) & 0x37A5E160;
  v190 = v188 ^ 0x37A5E169 ^ (v189 ^ 0x32040069) & (v188 << 8);
  v191 = (v182 ^ (2
                * ((v190 << 16) & 0x37A50000 ^ v190 ^ ((v190 << 16) ^ 0x61690000) & (((v189 ^ 0x5A1E169) << 8) & 0x37A50000 ^ 0x12040000 ^ (((v189 ^ 0x5A1E169) << 8) ^ 0xA5E10000) & (v189 ^ 0x5A1E169))))) >> 6;
  v192 = v182
       - 1298032192
       + (((v191 ^ 0x2EBD2FCA) + 2140843164) ^ ((v191 ^ 0x5265B6A8) + 54670842) ^ ((v191 ^ 0x7F158D32) + 775032420));
  v193 = (v192 ^ 0x9E882627) & (2 * (v192 & 0xD8C0A637)) ^ v192 & 0xD8C0A637;
  v194 = ((2 * (v192 ^ 0x9E096A07)) ^ 0x8D939860) & (v192 ^ 0x9E096A07) ^ (2 * (v192 ^ 0x9E096A07)) & 0x46C9CC30;
  v195 = v194 ^ 0x42484410;
  v196 = (v194 ^ 0x4018820) & (4 * v193) ^ v193;
  v197 = ((4 * v195) ^ 0x1B2730C0) & v195 ^ (4 * v195) & 0x46C9CC30;
  v198 = v196 ^ 0x46C9CC30 ^ (v197 ^ 0x2010000) & (16 * v196);
  v199 = (16 * (v197 ^ 0x44C8CC30)) & 0x46C9CC30 ^ 0x2410C30 ^ ((16 * (v197 ^ 0x44C8CC30)) ^ 0x6C9CC300) & (v197 ^ 0x44C8CC30);
  v200 = (v198 << 8) & 0x46C9CC00 ^ v198 ^ ((v198 << 8) ^ 0xC9CC3000) & v199;
  v201 = ((v169 ^ 0x8608F3A5) + (v171 | 0x32742D2F) + 1) | v171;
  v202 = v75 ^ a1 ^ v148 ^ v192 ^ (2
                                 * ((v200 << 16) & 0x46C90000 ^ v200 ^ ((v200 << 16) ^ 0x4C300000) & ((v199 << 8) & 0x46C90000 ^ 0x6010000 ^ ((v199 << 8) ^ 0xC9CC0000) & v199)));
  v203 = (v202 & 5) + 409346769 + (v202 & 2 | 0x186622D5);
  LODWORD(STACK[0x6578]) = v203;
  v203 += 127524138;
  LODWORD(STACK[0x6720]) = v203;
  v204 = v203 & 0x1004001F;
  v205 = v203 & 0x1004001F ^ 0x68583814;
  LOBYTE(v75) = ((v202 ^ 0xC8) + 85) ^ ((v202 ^ 0x3D) - 94) ^ ((v202 ^ 0x94) + 9);
  LOBYTE(v203) = -3 - v75;
  v206 = (v203 ^ (2
                                                  * (((2 * (v203 & 1)) | (-3 - v75) & 1) ^ (2 * (v203 & 1)) & (v75 + 2)))) & 7 ^ 1;
  v207 = (v203 & 1) + v206 - (v206 & 1) - 414565096;
  LODWORD(STACK[0x69E0]) = v207;
  v208 = v207 & 0xC14801FF;
  if (v205 == 2019309573)
    v209 = 0;
  else
    v209 = 255;
  LODWORD(STACK[0x6678]) = v207 & 0xC14801FF ^ 0x16B03AFD;
  LODWORD(STACK[0x6490]) = (v207 ^ 0xFD) & 0x1A;
  LODWORD(STACK[0x6498]) = (v207 ^ 0xFD) & 5 ^ 4;
  v210 = v209 << ((v207 ^ 0xFD) & 0x1A) << ((v207 ^ 0xFD) & 5 ^ 4);
  LODWORD(STACK[0x6AB0]) = v210;
  if (v205 == 2019309573)
    v211 = 0;
  else
    v211 = ~v210;
  LODWORD(STACK[0x6A20]) = v211 & (v201 ^ 0x70);
  LODWORD(STACK[0x69A0]) = v172;
  v212 = v171 & 0x7F;
  LODWORD(STACK[0x6680]) = v212;
  v213 = 16843009 * v212;
  v214 = STACK[0x64A0];
  v215 = LODWORD(STACK[0x65F0]) ^ (((16843009 * v212) ^ LODWORD(STACK[0x64A0])) >> 5);
  LODWORD(STACK[0x6A40]) = ((v208 ^ 0xF0E24420) + 430801187) ^ ((v208 ^ 0x4F3BD4E8) - 1502342677) ^ ((v208 ^ 0x7E9191D1) - 1747036972);
  v216 = 33686018 * LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x62D8]) = v216;
  LODWORD(STACK[0x65F0]) = v205;
  v217 = STACK[0x6750];
  v218 = (v214 - (v216 & 0x51D72A94) - 1460955830) ^ v213 ^ (v215 - ((2 * v215) & 0x674AB4A6) - 1281009069) ^ v205 ^ ((v204 ^ LODWORD(STACK[0x6750])) >> 2) ^ 0x692E49FE;
  LODWORD(STACK[0x69F0]) = v218 + 1078439418 - ((2 * v218) & 0x808F5BF4);
  v219 = v204 ^ 0x10040011u;
  v220 = (v217 & 0x10123A27 ^ 0x80120004) + (v217 & 0x207 ^ 0x68E5C7DB) - ((v217 & 0x10123A27 ^ 0x80120004) & 0x207);
  v221 = (v220 & 0x203B31EC ^ 0x1123024) + (v220 ^ 0x2EE947D8) - ((v220 ^ 0x2EE947D8) & 0x423B31EC);
  LODWORD(STACK[0x64D8]) = ((v208 ^ 0x5FC50F51) - 1232418220) ^ ((v208 ^ 0x18C8B463) - 242781854) ^ ((v208 ^ 0x8645BA2B) + 1862958890);
  v222 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6A70]) ^ 0x528F));
  v223 = STACK[0x6A70];
  v224 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6A70]) ^ 0x54C1)) - 4;
  v225 = 4 * (v217 ^ 0x38F6FB98u);
  LODWORD(STACK[0x6970]) = *(_DWORD *)&v224[v225] ^ (((2 * v217) & 8)
                                                   + 243087780
                                                   + (((v221 ^ 0xEDF32272) - 2035570149) ^ ((v221 ^ 0x9AE0A474)
                                                                                          - 239588323) ^ ((v221 ^ 0xEDC9C835) - 2037301154)));
  v222 -= 12;
  STACK[0x6348] = v219;
  v226 = 4 * v219;
  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x6688]) + (*(_DWORD *)(v222 + v226) ^ 0xFB797661);
  v227 = 16843009
       * (v201 ^ 0x25 ^ ((unsigned __int16)(v201 ^ 0x1825) >> 8) ^ ((v201 ^ 0xD4F21825) >> 16) ^ HIBYTE(v201) ^ 0xF7);
  v228 = 16843009
       * (v172 ^ 0x6D ^ ((unsigned __int16)(v172 ^ 0xE36D) >> 8) ^ ((v172 ^ 0xED7EE36D) >> 16) ^ HIBYTE(v172) ^ 0xB8);
  LODWORD(STACK[0x6528]) = v227;
  LODWORD(STACK[0x6A30]) = v228;
  v229 = v227 ^ 0x76767676 ^ v228;
  LODWORD(STACK[0x6A50]) = v229;
  v230 = (char *)*(&off_1015B46D0 + v223 - 19195) - 12;
  v231 = *(_DWORD *)&v230[4 * (v229 % 0x101)] ^ (((v229 % 0x101) ^ 0x135C6AE1) + v229 % 0x101);
  LODWORD(STACK[0x6A10]) = (v213 % 0x101) ^ (v213 % 0x101 + 804111836) ^ 0x3A9523FD ^ *(_DWORD *)&v224[4 * (v213 % 0x101)];
  LODWORD(v219) = STACK[0x6708];
  LODWORD(STACK[0x69D0]) = (((LODWORD(STACK[0x6708]) % 0x101) ^ 0x135C6AE1) + LODWORD(STACK[0x6708]) % 0x101) ^ LODWORD(STACK[0x6598]) ^ *(_DWORD *)&v230[4 * (LODWORD(STACK[0x6708]) % 0x101)] ^ (v231 - ((2 * v231) & 0xCDE1EFA0) + 1727068112);
  v232 = STACK[0x65B0];
  v233 = LODWORD(STACK[0x65B0]) ^ 0xA4008C80 ^ ((v208 ^ LODWORD(STACK[0x6A90])) << 7);
  LODWORD(STACK[0x64B0]) = v233;
  LODWORD(STACK[0x6990]) = v233 & 0x57F83BE6 ^ v232 & 2;
  LODWORD(STACK[0x64A8]) = 16 * v219 - ((32 * v219) & 0xD8639300);
  v234 = STACK[0x6568];
  v235 = v217 & 0x2890F143 ^ 0x60193501 ^ (LODWORD(STACK[0x6568]) ^ 0x395BE427) & (v217 ^ 0xC7090467);
  v236 = v201 & 0xFFFFFF80 ^ 0x78C41680 | v213;
  v237 = 0xFF00FF00FF0100
       * (((v202 ^ 0x3107147CA048A35) - 0x310714725231DAALL) ^ ((v202 ^ 0xF595DCE4F5FB1018) + 0xA6A231BE5237879) ^ ((v202 ^ 0xF685ADA3A86A4EBCLL) + 0x97A525CB8B226DDLL))
       + 0x4C69E2408AC17E7FLL;
  v238 = (2 * (v237 & 0xB89122BAF2738F00)) & 0x1000444040A60E00 ^ v237 & 0xB89122BAF2738F00 ^ ((2 * (v237 & 0xB89122BAF2738F00)) | 2) & (v237 ^ 0xA685EEFAB3C58024);
  v239 = (2 * (v237 ^ 0xA685EEFAB3C58024)) & 0x1E14CC4041B60E00 ^ 0x214444040920001 ^ ((2
                                                                                            * (v237 ^ 0xA685EEFAB3C58024)) ^ 0x3C299880836C1F4ALL) & (v237 ^ 0xA685EEFAB3C58024);
  v240 = (4 * v238) & 0x1E14CC4041B60FA4 ^ v238 ^ ((4 * v238) | 4) & v239;
  v241 = (4 * v239) & 0x1E14CC4041B60FA4 ^ 0x604CC4041260121 ^ ((4 * v239) ^ 0x7853310106D83E94) & v239;
  v242 = (16 * v240) & 0x1E14CC4041B60FA0 ^ v240 ^ ((16 * v240) ^ 0x50) & v241;
  v243 = (16 * v241) & 0x1E14CC4041B60FA0 ^ 0x1E100840409605A5 ^ ((16 * v241) ^ 0xE14CC4041B60FA50) & v241;
  v244 = (v242 << 8) & 0x1E14CC4041B60F00 ^ v242 ^ ((v242 << 8) ^ 0x500) & v243;
  v245 = (v243 << 8) & 0x1E14CC4041B60F00 ^ 0xA108C0041B00AA5 ^ ((v243 << 8) ^ 0x14CC4041B60FA500) & v243;
  v246 = v244 ^ (v244 << 16) & 0x1E14CC4041B60000 ^ ((v244 << 16) ^ 0x5050000) & v245;
  v247 = v237 ^ (2
               * (((v246 ^ 0x1E14CC4040B20AA0) << 32) & 0x1E14CC4000000000 ^ v246 ^ 0x1E14CC4040B20AA0 ^ (((v246 ^ 0x1E14CC4040B20AA0) << 32) ^ 0x41B60FA500000000) & ((v245 << 16) & 0x1E14CC4000000000 ^ 0x12148C4000000000 ^ ((v245 << 16) ^ 0x4C4041B600000000) & v245)));
  v248 = ((v247 ^ 0x53184B403142F268) + 0x731B973C3609C552) ^ ((v247 ^ 0x7AE5E55966F3FDD6) + 0x5AE6392561B8CAF0);
  LODWORD(v247) = __CFADD__(257 * (v248 ^ ((v247 ^ 0xAD6D0C2326AE9F75) - 0x72912FA0DE1A57B3)), 0xC7EE3B433503650DLL)
                + (((v248 ^ ((v247 ^ 0xAD6D0C2326AE9F75) - 0x72912FA0DE1A57B3)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v247 ^ 0x53184B403142F268, 0x731B973C3609C552) - 1) ^ (__CFADD__(v247 ^ 0x7AE5E55966F3FDD6, 0x5AE6392561B8CAF0)- 1) ^ (__CFADD__(v247 ^ 0xAD6D0C2326AE9F75, 0x8D6ED05F21E5A84DLL)- 1))+ 973832791;
  LODWORD(v248) = (v247 ^ 0xF1F07E04) & (2 * (v247 & 0xC5F47E04)) ^ v247 & 0xC5F47E04;
  LODWORD(v245) = ((2 * (v247 ^ 0x7838F60C)) ^ 0x7B991010) & (v247 ^ 0x7838F60C) ^ (2 * (v247 ^ 0x7838F60C)) & 0xBDCC8808;
  LODWORD(v248) = (v245 ^ 0x39800000) & (4 * v248) ^ v248;
  LODWORD(v245) = ((4 * (v245 ^ 0x84448808)) ^ 0xF7322020) & (v245 ^ 0x84448808) ^ (4 * (v245 ^ 0x84448808)) & 0xBDCC8808;
  LODWORD(v248) = (v245 ^ 0xB5000008) & (16 * v248) ^ v248;
  LODWORD(v245) = ((16 * (v245 ^ 0x8CC8808)) ^ 0xDCC88080) & (v245 ^ 0x8CC8808) ^ (16 * (v245 ^ 0x8CC8808)) & 0xBDCC8800;
  LODWORD(v248) = v248 ^ 0xBDCC8808 ^ (v245 ^ 0x9CC88008) & ((_DWORD)v248 << 8);
  LODWORD(v247) = v247 ^ (2
                        * (((_DWORD)v248 << 16) & 0x3DCC0000 ^ v248 ^ (((_DWORD)v248 << 16) ^ 0x8080000) & (((v245 ^ 0x21040808) << 8) & 0xBDCC0000 ^ 0x31440000 ^ (((v245 ^ 0x21040808) << 8) ^ 0x4C880000) & (v245 ^ 0x21040808))));
  v249 = STACK[0x68D0];
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x65D8]) ^ (((2 * v235) & 0xEB53246E)
                                                                            - v235
                                                                            - 1974047288);
  LODWORD(v245) = v236 ^ v201 ^ 0x78C41680 ^ LODWORD(STACK[0x65A8]) ^ ((v236 ^ v201 ^ 0x78C41680) >> 6);
  v250 = *(_DWORD *)(v222 + 4 * (v214 % 0x101));
  LODWORD(STACK[0x6500]) = *(_DWORD *)(v222 + 4 * ((v202 ^ 0x9795D491) % 0x101));
  LODWORD(v222) = ((v247 ^ 0xAE7D6E14) + (v247 ^ 0xBD2104F5)) ^ 0x5E301DAA ^ *(_DWORD *)&v230[4
                                                                                            * (v247 ^ 0xAE7D6E14)];
  v251 = v223;
  v252 = (char *)*(&off_1015B46D0 + (v223 ^ 0x5555)) - 8;
  LODWORD(STACK[0x65D8]) = *(_DWORD *)&v252[v226];
  LODWORD(STACK[0x65B0]) = *(_DWORD *)&v252[v225];
  LODWORD(STACK[0x6980]) = v201 ^ 0x78C41680;
  LODWORD(STACK[0x6940]) = v236;
  LODWORD(v225) = *(_DWORD *)&v252[4 * ((v201 ^ 0x78C41680) % 0x101)];
  LODWORD(STACK[0x64F8]) = *(_DWORD *)&v252[4 * (v236 % 0x101)];
  LODWORD(v252) = (LODWORD(STACK[0x6770]) ^ 0x86D1DD8F) + v222;
  LODWORD(v247) = LODWORD(STACK[0x65E8]) + (v225 ^ 0xD8D30ED9);
  LODWORD(STACK[0x6A00]) = v217 & 0x38269230 ^ 0xBCF6FFDF ^ (v234 ^ 0x29ED8354) & (v217 ^ 0xC7090467);
  LODWORD(v248) = ((v249 ^ 0x6EEC4B6F) + 364554144) ^ ((v249 ^ 0x6CF033CA) + 396812091) ^ ((v249 ^ 0xC6516A86)
                                                                                         - 1123580297);
  LODWORD(v225) = LODWORD(STACK[0x6588])
                - (((v202 ^ 0x2506A56C) + 903793933) ^ ((v202 ^ 0xADF51DCD) - 1121094226) ^ ((v202 ^ 0x1F666C30)
                                                                                           + 264111185))
                + (((v202 ^ 0xCAE93735) - 1415198833) ^ ((v202 ^ 0x397E7BB6) + 1479707406) ^ ((v202 ^ 0x64029812)
                                                                                            + 89024682))
                - 230403816;
  LODWORD(v226) = (v225 ^ 0x5EA967AF) & (2 * (v225 & 0x9E3047AF)) ^ v225 & 0x9E3047AF;
  LODWORD(v222) = ((2 * (v225 ^ 0x4AA9E1B9)) ^ 0xA9334C2C) & (v225 ^ 0x4AA9E1B9) ^ (2 * (v225 ^ 0x4AA9E1B9)) & 0xD499A616;
  LODWORD(v226) = (v222 ^ 0x80010404) & (4 * v226) ^ v226;
  LODWORD(v222) = ((4 * (v222 ^ 0x5488A212)) ^ 0x52669858) & (v222 ^ 0x5488A212) ^ (4 * (v222 ^ 0x5488A212)) & 0xD499A614;
  LODWORD(v226) = (v222 ^ 0x50008010) & (16 * v226) ^ v226;
  LODWORD(v222) = ((16 * (v222 ^ 0x84992606)) ^ 0x499A6160) & (v222 ^ 0x84992606) ^ (16 * (v222 ^ 0x84992606)) & 0xD499A610;
  LODWORD(v226) = v226 ^ 0xD499A616 ^ (v222 ^ 0x40982016) & ((_DWORD)v226 << 8);
  LODWORD(STACK[0x69B0]) = v225 ^ (2
                                 * (((_DWORD)v226 << 16) & 0x54990000 ^ v226 ^ (((_DWORD)v226 << 16) ^ 0x26160000) & (((v222 ^ 0x94018616) << 8) & 0x54990000 ^ 0x44190000 ^ (((v222 ^ 0x94018616) << 8) ^ 0x19A60000) & (v222 ^ 0x94018616))));
  LODWORD(v226) = LODWORD(STACK[0x6570]) ^ 0x3EB6DB80;
  LODWORD(v222) = LODWORD(STACK[0x6730]) ^ 0x3EB6DB80;
  v253 = *(_DWORD *)&v224[4 * (v222 % 0x101)] ^ (v222 % 0x101 + 804111836);
  v254 = (v234 ^ 0x600A505C) & (v217 ^ 0xC7090467) ^ v217 & 0x30C04138;
  v255 = (v222 % 0x101) ^ LODWORD(STACK[0x65E0]) ^ ((((v214 + v226) % 0x101) ^ 0x135C6AE1)
                                                                + (v214 + v226) % 0x101) ^ *(_DWORD *)&v230[4 * ((v214 + v226) % 0x101)] ^ (v253 - 2033066609 - ((2 * v253) & 0xDA3BB1E));
  LODWORD(STACK[0x64F0]) = (((v254 & 0xB11E9EBE ^ 0x81169EB6) + (v254 ^ 0x30880108) - ((v254 ^ 0x30880108) & 0xB11E9EBE)) ^ 0x839E9F96)
                         + (((v249 ^ 0x9D5CFEBA) - 435547573) ^ ((v249 ^ 0xF0910E64) - 1949834603) ^ ((v249 ^ 0xA980E2FD) - 757723634));
  LODWORD(STACK[0x6A60]) = v202;
  v256 = v245
       + (((v202 ^ 0x563B2A76) - 1627661029) ^ ((v202 ^ 0x17E79908) - 551063963) ^ ((v202 ^ 0x29B69810) - 512331907))
       + (((v202 ^ 0xF80378D5) - 1722840977) ^ ((v202 ^ 0x7FA96B77) + 518364109) ^ ((v202 ^ 0x103FC733) + 1903376265))
       - 1932697436;
  v257 = (v256 ^ 0x9BAC5F0F) & (2 * (v256 & 0xDBAE9F2F)) ^ v256 & 0xDBAE9F2F;
  LODWORD(STACK[0x6598]) = v256;
  LODWORD(v230) = ((2 * (v256 ^ 0xAEA84F11)) ^ 0xEA0DA07C) & (v256 ^ 0xAEA84F11) ^ (2 * (v256 ^ 0xAEA84F11)) & 0x7506D03E;
  v258 = (v230 ^ 0x6004803E) & (4 * v257) ^ v257;
  LODWORD(v230) = ((4 * (v230 ^ 0x15025002)) ^ 0xD41B40F8) & (v230 ^ 0x15025002) ^ (4 * (v230 ^ 0x15025002)) & 0x7506D03C;
  v259 = (v230 ^ 0x54024030) & (16 * v258) ^ v258;
  LODWORD(v230) = ((16 * (v230 ^ 0x21049006)) ^ 0x506D03E0) & (v230 ^ 0x21049006) ^ (16 * (v230 ^ 0x21049006)) & 0x7506D030;
  v260 = v259 ^ 0x7506D03E ^ (v230 ^ 0x5004001E) & (v259 << 8);
  LODWORD(STACK[0x64E8]) = (v260 << 16) & 0x75060000 ^ v260 ^ ((v260 << 16) ^ 0x503E0000) & (((v230 ^ 0x2502D01E) << 8) & 0x75060000 ^ 0x71060000 ^ (((v230 ^ 0x2502D01E) << 8) ^ 0x6D00000) & (v230 ^ 0x2502D01E));
  LODWORD(STACK[0x63B8]) = (-1954477669 * LODWORD(STACK[0x6580])) ^ LODWORD(STACK[0x6590]);
  v261 = STACK[0x6890];
  v262 = STACK[0xDB08];
  v263 = *(_QWORD *)(STACK[0xDB08] + 8 * (0xEF609989 % STACK[0x6890]));
  v264 = *(_QWORD *)(STACK[0xDB08]
                   + 8
                   * (((((v263 ^ 0x530F42E0171EFED3) - 0x71F782EC18BB6819) ^ ((v263 ^ 0x62DCF3495DD8CAD0)
                                                                                - 0x40243345527D5C1ALL) ^ ((v263 ^ 0x698BE9F1129E6C5BuLL) - 0x4B7329FD1D3BFA91))
                     + 0x7AA098548EDD94A3)
                    % STACK[0x6890]));
  v265 = *(_QWORD *)(STACK[0xDB08]
                   + 8
                   * (((((v264 ^ 0xD952726AC48C6563) - 0x37DEAF8319EC4AA5) ^ ((v264 ^ 0x12EC556FB492C0A2)
                                                                                + 0x39F7779960D109CLL) ^ ((v264 ^ 0x93E67F5D2846FD99) - 0x7D6AA2B4F526D25FLL))
                     - 0x492B7A4DE42938EBLL)
                    % STACK[0x6890]));
  STACK[0x6AC0] = STACK[0xDB08];
  v266 = *(_QWORD *)(v262
                   + 8
                   * (((((v265 ^ 0x3F90E03A65897EEFLL) - 0x343A9B2434579E5BLL) ^ ((v265 ^ 0x3F876A19496D7F29)
                                                                                - 0x342D110718B39F9DLL) ^ ((v265 ^ 0x584FD27B74BC599EuLL) - 0x53E5A9652562B92ALL))
                     + 0x53F22346D6E1F550)
                    % v261));
  LODWORD(v266) = ((((v266 ^ 0x857084F62F688B51) + 0x24578325D1B12BC4) ^ ((v266 ^ 0xBFF37857C028361CLL)
                                                                            + 0x1ED47F843EF1968FLL) ^ ((v266 ^ 0x62DBA4F9B718E515) - 0x3C035CD5B63EBA78))
                 + 0x680A0751F75E533)
                % v261;
  LODWORD(v261) = LODWORD(STACK[0x69A0]) ^ 0xBDD025B0;
  v267 = LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x69A0]) = v261;
  LODWORD(STACK[0x6688]) = 16843009 * v267;
  LODWORD(STACK[0x6860]) = (1660944384 * v267) & v261 ^ (16843009 * v267);
  LODWORD(STACK[0x69F0]) ^= LODWORD(STACK[0x6740]);
  v268 = LODWORD(STACK[0x6618]) - v214;
  LODWORD(STACK[0x6488]) = v213;
  LODWORD(STACK[0x65E8]) = v268 + v213;
  LODWORD(v261) = STACK[0x6970];
  LODWORD(STACK[0x6960]) = (2 * LODWORD(STACK[0x6970])) & 0x808F5BF4;
  LODWORD(STACK[0x6478]) = v261 + 1078439418;
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x6950]) + 1;
  LODWORD(STACK[0x6468]) = v250 ^ 0xFB797661;
  LODWORD(v262) = STACK[0x6A90];
  LODWORD(STACK[0x6470]) = LODWORD(STACK[0x6A90]) - LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x64B0]) -= 671597596;
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x64A8]) - 332281463;
  LODWORD(STACK[0x6770]) = v226;
  LODWORD(STACK[0x6588]) = v214;
  LODWORD(STACK[0x6570]) = v222;
  LODWORD(STACK[0x64A8]) = 46797541 * ((v214 ^ v226) - v222);
  LODWORD(STACK[0x6950]) = (_DWORD)v252 + 1;
  LODWORD(STACK[0x6A40]) = v247 + 1;
  LODWORD(STACK[0x6568]) = LODWORD(STACK[0x64D8]) - v262;
  LODWORD(STACK[0x6580]) = -(int)v248;
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x68E0]) ^ 0x4672CD6C;
  LODWORD(STACK[0x6618]) = v201;
  LODWORD(STACK[0x63B0]) = -1954477669 * (v201 ^ 0x4672CD1C);
  LODWORD(STACK[0x64D8]) = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6560]);
  LODWORD(STACK[0x6AB0]) = ((((v266 - ((2 * v266) & 0x3C516DB6) - 30886181) ^ 0x225E443D) + 1575083854) ^ (((v266 - ((2 * v266) & 0x3C516DB6) - 30886181) ^ 0x5A299F9B) + 630588652) ^ (((v266 - ((2 * v266) & 0x3C516DB6) - 30886181) ^ 0x865F6D7D) - 102697458))
                         - 1482459381;
  v269 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v251) - 12);
  LODWORD(STACK[0x6560]) = v219 - LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x65A8]) = v255;
  LODWORD(STACK[0x63A8]) = v255 ^ 0x9B5AC1A8;
  return v269();
}

uint64_t sub_100A23E14()
{
  unsigned int v0;
  int v1;
  _BOOL4 v2;

  v2 = (v1 + 131304158) < LODWORD(STACK[0x6AB0]);
  if (LODWORD(STACK[0x6AB0]) < v0 != (v1 + 131304158) < 0x293AA4B7)
    v2 = LODWORD(STACK[0x6AB0]) < v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1607 * !v2) ^ LODWORD(STACK[0x6A70]))) - 12))();
}

uint64_t sub_100A26C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;

  v7 = 5923 * (v6 ^ 0x5C95);
  v8 = LODWORD(STACK[0x65B8]) + LODWORD(STACK[0x6468]) + LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x6AB0]) = v7;
  v9 = v8 + (v7 + 672663575) * LODWORD(STACK[0x6470]);
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x6970])
                         + (LODWORD(STACK[0x6750]) ^ 0x4224759F ^ (LODWORD(STACK[0x6478]) - LODWORD(STACK[0x6960])));
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6A90]) ^ (LODWORD(STACK[0x64B0])
                                                                            - 2 * LODWORD(STACK[0x6990]));
  LODWORD(STACK[0x65D0]) += LODWORD(STACK[0x64A8]);
  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x64F8]) ^ 0x272CF126;
  v10 = LODWORD(STACK[0x6588]) | LODWORD(STACK[0x6770]);
  v11 = LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x6118]) = ~LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x64F8]) = 130691187 * LODWORD(STACK[0x6560]);
  LODWORD(STACK[0x65B8]) = v9 + 1210895829;
  LODWORD(STACK[0x6588]) = LODWORD(STACK[0x6500]) ^ 0x486899E;
  LODWORD(STACK[0x6990]) = v11 ^ v10;
  LODWORD(STACK[0x6568]) *= 2083148725;
  LODWORD(STACK[0x66B0]) += LODWORD(STACK[0x6980]);
  LODWORD(STACK[0x6570]) = 1108759353 * LODWORD(STACK[0x64F0]);
  LODWORD(STACK[0x6628]) = 2 * LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x6560]) = -LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x6980]) = LODWORD(STACK[0x64D8]) ^ LODWORD(STACK[0x6A60]);
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6528]) ^ 0x23232323;
  v12 = ((LODWORD(STACK[0x6920]) ^ 0x728F447F) - 1502214492) ^ ((LODWORD(STACK[0x6920]) ^ 0x9E07D1D9) + 1258197766) ^ ((LODWORD(STACK[0x6920]) ^ 0xF597253D) + 560883682);
  STACK[0x6A70] = STACK[0xDB08];
  LODWORD(STACK[0x6A60]) = v12 + 24875671;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6)
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 3479340255);
}

uint64_t sub_100A27040(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v7;
  _BOOL4 v8;
  int v9;
  unsigned int v10;
  _BOOL4 v11;

  v7 = STACK[0x6A60];
  v8 = LODWORD(STACK[0x6A60]) < a7;
  v9 = STACK[0x6AB0];
  STACK[0x6AC0] = (LODWORD(STACK[0x6AB0]) - 11614);
  v10 = a1 - 1376031994;
  if (v8 != v10 < 0xCF6284DF)
    v11 = v8;
  else
    v11 = v7 > v10;
  return ((uint64_t (*)(_QWORD, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * v11) ^ v9)) - 12))(v10 + 1376031995, 0x9517FD43FD67933DLL);
}

uint64_t sub_100A2A3DC()
{
  int v0;

  LODWORD(STACK[0x63A0]) = LODWORD(STACK[0x65E8]) + LODWORD(STACK[0x64F8]);
  v0 = LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6A50]) ^ (16 * LODWORD(STACK[0x6A50]));
  LODWORD(STACK[0x6950]) += LODWORD(STACK[0x6588]);
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x66B0]) - LODWORD(STACK[0x6940]);
  STACK[0x6588] = LODWORD(STACK[0x69E0]) ^ 0x19u;
  LODWORD(STACK[0x6590]) = v0;
  LODWORD(STACK[0x6398]) = v0 ^ 0xC9042218;
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x69B0]) ^ 0x201C0C27;
  LODWORD(STACK[0x6940]) = LODWORD(STACK[0x6980]) ^ 0xC039A0E4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 8))();
}

uint64_t sub_100A2B398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v1 == a1) * v2) ^ STACK[0x6AC0])) - 8))();
}

uint64_t sub_100A2B524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;

  LODWORD(STACK[0x6688]) ^= LODWORD(STACK[0x6A20]);
  v6 = LODWORD(STACK[0x6630]) + LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x66D0]) = LODWORD(STACK[0x69C0]) ^ 0x36705128 ^ (v4 - 13);
  LODWORD(STACK[0x66B0]) = v6 + LODWORD(STACK[0x6A00]) + LODWORD(STACK[0x6568]) + 812729096;
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x66B8]) + 184454467 * (LODWORD(STACK[0x6560]) + LODWORD(STACK[0x65E0]));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8))(a1, a2, a3+ 465373242+ v5+ ((v5 + v3) >> 16)- ((v5 + v3 + ((v5 + v3) >> 16)) >> 8)- 1);
}

uint64_t sub_100A2B68C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 + v1 != 15) * v3) ^ v2)) - 8))();
}

uint64_t sub_100A2B830@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;

  LODWORD(STACK[0x6A50]) = v5;
  LODWORD(STACK[0x66B8]) = v7;
  LODWORD(STACK[0x6390]) = LODWORD(STACK[0x69D0]) ^ 0x43C51C41;
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x6570]) + LODWORD(STACK[0x69F0]) + 319019525;
  v8 = (v3 + a2 + ((a2 + v4) >> 16) - ((a2 + v4 + ((a2 + v4) >> 16)) >> 8) - a3) ^ 0xEC332374;
  v9 = v8 - (v8 >> 11) + ((v8 - (v8 >> 11)) >> 6);
  v10 = v9 + 1894845787 - ((v9 + 1894845787) >> 12) - ((v9 + 1894845787 - ((v9 + 1894845787) >> 12)) >> 1);
  v11 = (v10 ^ 0x7A1D737E) - ((v10 ^ 0x7A1D737E) >> 13) + (((v10 ^ 0x7A1D737E) - ((v10 ^ 0x7A1D737E) >> 13)) >> 4);
  v12 = v11 - 1224384092 + ((v11 - 1224384092) >> 11) + ((v11 - 1224384092 + ((v11 - 1224384092) >> 11)) >> 3);
  LODWORD(STACK[0x6A20]) = v9;
  LODWORD(STACK[0x6A00]) = v12;
  v13 = v12 ^ v9;
  v14 = v12 - 1893175380 + ((v12 - 1893175380) >> 15) - ((v12 - 1893175380 + ((v12 - 1893175380) >> 15)) >> 5);
  v15 = v14 + 2097841712 - ((v14 + 2097841712) >> 8) + ((v14 + 2097841712 - ((v14 + 2097841712) >> 8)) >> 3);
  LODWORD(STACK[0x6580]) = v10;
  LODWORD(STACK[0x6570]) = v14;
  v16 = v14 ^ v10;
  v17 = (v15 ^ 0xE1E4ECEF) - ((v15 ^ 0xE1E4ECEF) >> 10) - (((v15 ^ 0xE1E4ECEF) - ((v15 ^ 0xE1E4ECEF) >> 10)) >> 7);
  LODWORD(STACK[0x6A70]) = v11;
  LODWORD(STACK[0x6A60]) = v15;
  v18 = v15 ^ v11;
  LODWORD(STACK[0x69F0]) = v17;
  LODWORD(STACK[0x64E8]) = v6 & (4 * (v13 ^ v17));
  v19 = v17 - 119608444 + ((v17 - 119608444) >> 8) - ((v17 - 119608444 + ((v17 - 119608444) >> 8)) >> 7);
  LODWORD(STACK[0x6560]) = v6 & (4 * (v16 ^ v19));
  LODWORD(STACK[0x6568]) = v19;
  v20 = v19 + 1527356292 - ((v19 + 1527356292) >> 8) + ((v19 + 1527356292 - ((v19 + 1527356292) >> 8)) >> 6);
  LODWORD(STACK[0x6478]) = v20;
  v21 = v6 & (4 * (v18 ^ v20));
  v22 = STACK[0x68B0];
  v23 = LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6710]) ^ 0x772ABE4D;
  LODWORD(STACK[0x64D8]) = v23;
  v24 = (((4 * v23) & 0x4080E088 ^ 0x6500908B | (4 * v23) & 0x9A2F0170) - 1) ^ 0xB69AF38B;
  LODWORD(STACK[0x64B0]) = ((2 * v24) & 0x251B0320) - v24 - 848136595;
  LODWORD(STACK[0x64A8]) = v6 & (4 * v22);
  v25 = STACK[0x68C0];
  v26 = LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x6528]) = v26;
  LODWORD(STACK[0x6500]) = (v6 & (4 * v26) ^ 0x18222080)
                         - ((2 * (v6 & (4 * v26) ^ 0x18222080)) & 0x105C150)
                         - 1534922579;
  LODWORD(STACK[0x64F8]) = v6 & (4 * v25);
  LODWORD(STACK[0x64F0]) = v25 - ((2 * v25) & 0x46E7862A) - 1552694507;
  v27 = STACK[0x66D0];
  LODWORD(STACK[0x6760]) = (813745672
                          - (v6 & (4 * (LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x66D0]))) ^ 0x4206A168)
                          + ((2
                            * (v6 & (4 * (LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x66D0]))) ^ 0x4206A168)) & 0x945E4330)
                          + 1628) & 0xFFFFE7F8;
  v28 = STACK[0x6890];
  v29 = LODWORD(STACK[0x6638]) ^ ((((v6 & (4 * v27) ^ 0x18A821F8)
                                  + 2021561986
                                  - ((2 * (v6 & (4 * v27) ^ 0x18A821F8)) & 0xB05D0100)) ^ 0xE3B0B08F)
                                - 1) ^ 0x1165669C ^ v21;
  v30 = STACK[0xDB08];
  v31 = *(_QWORD *)(STACK[0xDB08] + 8 * (0xA2D31B6A % STACK[0x6890]));
  LODWORD(STACK[0x6638]) = (2 * v29) & 0x77031516;
  v32 = *(_QWORD *)(v30
                  + 8
                  * (((((v31 ^ 0x9861978F70654EDFLL) + 0x33F17A600E4DE917) ^ ((v31 ^ 0xF175F78C92243876)
                                                                              + 0x5AE51A63EC0C9FC0) ^ ((v31 ^ 0x314C385BBA192EF1) - 0x65232A4B3BCE76C7))
                    + 0xC374A492769BF2ELL)
                   % v28));
  v33 = *(_QWORD *)(v30
                  + 8
                  * (((((v32 ^ 0xDA7E5684E16632CCLL) + 0x7D91FFAE0366A71DLL) ^ ((v32 ^ 0x28D28ADBEB9A8933)
                                                                              - 0x70C2DC0EF665E31CLL) ^ ((v32 ^ 0xAAF4840752A4E3A7) + 0xD1B2D2DB0A47678))
                    + 0x480E8DBE19CBB9)
                   % v28));
  STACK[0x6AC0] = v30;
  v34 = *(_QWORD *)(v30
                  + 8
                  * (((((v33 ^ 0xBA06CB09CA1CC708) - 0x1710D39898561ACALL) ^ ((v33 ^ 0xDDA8EA703CE1CBD1)
                                                                              - 0x70BEF2E16EAB1613) ^ ((v33 ^ 0x3FF67921AEA55481) + 0x6D1F9E4F031076BDLL))
                    - 0xAB1BF360BF682BALL)
                   % v28));
  LODWORD(STACK[0x6470]) = v29 + 998345355;
  v35 = ((((v34 ^ 0xF4CCA4FA482FFB36) + 0x5CCA2F1E3D09B44BLL) ^ ((v34 ^ 0x942560580EAC89E9) + 0x3C23EBBC7B8AC696) ^ ((v34 ^ 0x38B19CFA1EDB2A87) - 0x6F48E8E194029A04))
       + 0xFA12C43F56B71BALL)
      % v28;
  LODWORD(STACK[0x6AB0]) = ((((v35 - ((2 * v35) & 0x14E33366) + 1248958899) ^ 0xC60F5858) + 58094028) ^ (((v35 - ((2 * v35) & 0x14E33366) + 1248958899) ^ 0x5AA7FDB0) - 1612786652) ^ (((v35 - ((2 * v35) & 0x14E33366) + 1248958899) ^ 0xD6D93C5B) + 329258441))
                         - 1061949690;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8))();
}

uint64_t sub_100A2C040(int a1)
{
  int v1;
  unsigned int v2;
  _BOOL4 v3;

  v3 = (v1 + 1145097509) < LODWORD(STACK[0x6AB0]);
  if (LODWORD(STACK[0x6AB0]) < v2 != (v1 + 1145097509) < 0x4FBC9F27)
    v3 = LODWORD(STACK[0x6AB0]) < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4841 * !v3) ^ a1)) - 8))();
}

uint64_t sub_100A2F52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;

  v7 = (v6 - 183991508) & 0xAF77CCE;
  LODWORD(STACK[0x6910]) = LODWORD(STACK[0x6A40]) + LODWORD(STACK[0x6A10]);
  v8 = LODWORD(STACK[0x6470]) - LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x6AB0]) = v7;
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x68D0]) ^ a6 ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6478]) ^ v8 ^ (v7 - 231264205);
  STACK[0x6AC0] = STACK[0xDB08];
  LODWORD(STACK[0x6A60]) = (((LODWORD(STACK[0x6920]) ^ 0xA25E0780) + 1990673757) ^ ((LODWORD(STACK[0x6920]) ^ 0x55C618D2)
                                                                                  - 2126554609) ^ ((LODWORD(STACK[0x6920]) ^ 0xEE87AFC9)
                                                                                                 + 981396758))
                         - 1071939798;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4))();
}

uint64_t sub_100A2F6A4()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;
  unsigned int v3;
  _BOOL4 v4;

  v1 = STACK[0x6A60];
  v2 = LODWORD(STACK[0x6A60]) < 0x8E027172;
  v3 = STACK[0x6AB0];
  STACK[0x6A70] = (LODWORD(STACK[0x6AB0]) + 1057);
  if (v2 != (v0 - 2105106576) < 0x8E027172)
    v4 = v2;
  else
    v4 = v0 - 2105106576 < v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * v4) ^ v3)) - 4))();
}

uint64_t sub_100A32B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t (*v79)(void);

  v9 = LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x64D8]) ^ LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x6638]) = v9;
  LODWORD(STACK[0x6900]) = v9 ^ 0xC4E768F2;
  v10 = ((a7 + 0x29060B0E2EDB1596) ^ 0x978CDCCAD9077880) & (2 * ((a7 + 0x29060B0E2EDB1596) & 0xC78C9EE2D90770CALL)) ^ (a7 + 0x29060B0E2EDB1596) & 0xC78C9EE2D90770CALL;
  v11 = ((2 * ((a7 + 0x29060B0E2EDB1596) ^ 0x9A84F18F490B3804)) ^ 0xBA10DEDB2018919CLL) & ((a7 + 0x29060B0E2EDB1596) ^ 0x9A84F18F490B3804) ^ (2 * ((a7 + 0x29060B0E2EDB1596) ^ 0x9A84F18F490B3804)) & 0x5D086F6D900C48CELL;
  v12 = v11 ^ 0x4508212490044842;
  v13 = (v11 ^ 0x18004E0900080008) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x7421BDB640312338) & v12 ^ (4 * v12) & 0x5D086F6D900C48CCLL;
  v15 = (v14 ^ 0x54002D2400000000) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x9084249900C48C6)) ^ 0xD086F6D900C48CE0) & (v14 ^ 0x9084249900C48C6) ^ (16 * (v14 ^ 0x9084249900C48C6)) & 0x5D086F6D900C48C0;
  v17 = (v16 ^ 0x5000664900040800) & (v15 << 8) ^ v15;
  v18 = (((v16 ^ 0xD0809249008400ELL) << 8) ^ 0x86F6D900C48CE00) & (v16 ^ 0xD0809249008400ELL) ^ ((v16 ^ 0xD0809249008400ELL) << 8) & 0x5D086F6D900C4800;
  v19 = v17 ^ 0x5D086F6D900C48CELL ^ (v18 ^ 0x8086D0000080000) & (v17 << 16);
  v20 = ((a7 + 0x29060B0E2EDB1596) ^ (2
                                      * ((v19 << 32) & 0x5D086F6D00000000 ^ v19 ^ ((v19 << 32) ^ 0x100C48CE00000000) & (((v18 ^ 0x5500026D900400CELL) << 16) & 0x5D086F6D00000000 ^ 0x10006F6100000000 ^ (((v18 ^ 0x5500026D900400CELL) << 16) ^ 0x6F6D900C00000000) & (v18 ^ 0x5500026D900400CEuLL))))) >> 25;
  v21 = a7
      - 0x2FBF4EE140E88D47
      + (((v20 ^ 0x58363C3B1E148BCLL) + 0x47A946056DA698A4) ^ ((v20 ^ 0x7BACE2F19587512ALL) + 0x3986C73749C08136) ^ ((v20 ^ 0x7E2F811CE20E496ALL) + 0x3C05A4DA3E499976));
  v22 = 2 * (v21 & 0xDE27D2EA2E9B92C3);
  v23 = v21 & 0xC3 ^ 0xFE ^ v22 & (v21 ^ 0xBB);
  LOBYTE(v19) = 61
              - ((v21 ^ ~(2
                        * ((4 * v23) ^ v23 ^ ((4 * v23) ^ 0xF8) & ((2 * (v21 ^ 0x3D)) & 0xFC ^ ((2 * (v21 ^ 0x3D)) ^ 0xFC) & (v21 ^ 0x3D))))) & 8);
  LOBYTE(v19) = (v19 & 0x29 ^ 0x22) + (v19 ^ 0x5D) - ((v19 ^ 0x5D) & 0x28);
  v24 = v22 & (v21 ^ 0xDCB7D8E10C9382E3) ^ v21 & 0xDE27D2EA2E9B92C3;
  v25 = ((2 * (v21 ^ 0xFCBFF965598582E3)) ^ 0x4530571EEE3C2040) & (v21 ^ 0xFCBFF965598582E3) ^ (2 * (v21 ^ 0xFCBFF965598582E3)) & 0x22982B8F771E1020;
  v26 = (v25 ^ 0x100308661C0000) & (4 * v24) ^ v24;
  v27 = ((4 * (v25 ^ 0x2288288111021020)) ^ 0x8A60AE3DDC784080) & (v25 ^ 0x2288288111021020) ^ (4 * (v25 ^ 0x2288288111021020)) & 0x22982B8F771E1020;
  v28 = (v27 ^ 0x2002A0D54180000) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x2098018223061020)) ^ 0x2982B8F771E10200) & (v27 ^ 0x2098018223061020) ^ (16 * (v27 ^ 0x2098018223061020)) & 0x22982B8F771E1020;
  v30 = (v29 ^ 0x2080288771000000) & (v28 << 8) ^ v28;
  v31 = (((v29 ^ 0x2180308061E1020) << 8) ^ 0x982B8F771E102000) & (v29 ^ 0x2180308061E1020) ^ ((v29 ^ 0x2180308061E1020) << 8) & 0x22982B8F771E1000;
  v32 = v30 ^ 0x22982B8F771E1020 ^ (v31 ^ 0x80B0716100000) & (v30 << 16);
  v33 = (v21 ^ (2
              * ((v32 << 32) & 0x22982B8F00000000 ^ v32 ^ ((v32 << 32) ^ 0x771E102000000000) & (((v31 ^ 0x22902088610E1020) << 16) & 0x22982B8F00000000 ^ 0x10088100000000 ^ (((v31 ^ 0x22902088610E1020) << 16) ^ 0x2B8F771E00000000) & (v31 ^ 0x22902088610E1020)))) ^ 0xDF2785F4C0A7B283) >> ((v19 ^ 0xEC) & 0x64 ^ 0x24) >> ((v19 ^ 0xEC) & 0x9B ^ 0x83) >> ((v19 ^ 0xF6) & 0x42) >> ((v19 ^ 0xF6) & 0xBD ^ 0xB5);
  v34 = v21
      - (((v33 ^ 0xA89E543F7866A7F9) - 0x1F8806FEAA72EF64) ^ ((v33 ^ 0x48235B5B6B2D3808) + 0xCAF66546C68F6BLL) ^ ((v33 ^ 0xE0BD0F64134B9FF1) - 0x57AB5DA5C15FD76CLL))
      + 0x3416035D2A0FFEF5;
  v35 = (v34 ^ 0xF0FB7EC2A1664A2DLL) & (2 * (v34 & 0xF2FB7CCB32774B31)) ^ v34 & 0xF2FB7CCB32774B31;
  v36 = ((2 * (v34 ^ 0xB1BF574681444A0FLL)) ^ 0x8688571B6666027CLL) & (v34 ^ 0xB1BF574681444A0FLL) ^ (2 * (v34 ^ 0xB1BF574681444A0FLL)) & 0x43442B8DB333013ELL;
  v37 = v36 ^ 0x4144288491110102;
  v38 = (v36 ^ 0x20003090222000CLL) & (4 * v35) ^ v35;
  v39 = ((4 * v37) ^ 0xD10AE36CCCC04F8) & v37 ^ (4 * v37) & 0x43442B8DB333013CLL;
  v40 = (v39 ^ 0x1002A0480000030) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x4244018933330106)) ^ 0x3442B8DB333013E0) & (v39 ^ 0x4244018933330106) ^ (16 * (v39 ^ 0x4244018933330106)) & 0x43442B8DB3330130;
  v42 = (v41 ^ 0x40288933300100) & (v40 << 8) ^ v40;
  v43 = (((v41 ^ 0x430403048003001ELL) << 8) ^ 0x442B8DB333013E00) & (v41 ^ 0x430403048003001ELL) ^ ((v41 ^ 0x430403048003001ELL) << 8) & 0x43442B8DB3330100;
  v44 = v42 ^ 0x43442B8DB333013ELL ^ (v43 ^ 0x4000098133010000) & (v42 << 16);
  v45 = (v34 ^ (2
              * ((v44 << 32) & 0x43442B8D00000000 ^ v44 ^ ((v44 << 32) ^ 0x3333013E00000000) & (((v43 ^ 0x344220C8032013ELL) << 16) & 0x43442B8D00000000 ^ 0x4040088C00000000 ^ (((v43 ^ 0x344220C8032013ELL) << 16) ^ 0x2B8DB33300000000) & (v43 ^ 0x344220C8032013ELL))))) >> 8;
  v46 = v34
      - (((v45 ^ 0xF05DFDCACAFE41C2) + 0x6C0C50FD9683B87CLL) ^ ((v45 ^ 0xFA803E61595ED770) + 0x66D1935605232ECALL) ^ ((v45 ^ 0xAAFB0825BF487FBLL) - 0x6901E24AF87681BDLL))
      - 0x3867983CABF26D4CLL;
  v47 = (v46 ^ 0xC736EAB7780B994DLL) & (2 * (v46 & 0xC786F3267293A16ELL)) ^ v46 & 0xC786F3267293A16ELL;
  v48 = ((2 * (v46 ^ 0xC9366CB7BD0B99DDLL)) ^ 0x1D613F239F307166) & (v46 ^ 0xC9366CB7BD0B99DDLL) ^ (2 * (v46 ^ 0xC9366CB7BD0B99DDLL)) & 0xEB09F91CF9838B2;
  v49 = v48 ^ 0x290809040880891;
  v50 = (v48 ^ 0xC201D018E100020) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0x3AC27E473E60E2CCLL) & v49 ^ (4 * v49) & 0xEB09F91CF9838B0;
  v52 = (v51 ^ 0xA801E010E002080) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x4308190C1981833)) ^ 0xEB09F91CF9838B30) & (v51 ^ 0x4308190C1981833) ^ (16 * (v51 ^ 0x4308190C1981833)) & 0xEB09F91CF9838B0;
  v54 = (v53 ^ 0xA009910C9800800) & (v52 << 8) ^ v52;
  v55 = (((v53 ^ 0x4B0068106183083) << 8) ^ 0xB09F91CF9838B300) & (v53 ^ 0x4B0068106183083) ^ ((v53 ^ 0x4B0068106183083) << 8) & 0xEB09F91CF983800;
  v56 = v54 ^ 0xEB09F91CF9838B3 ^ (v55 ^ 0x90918188180000) & (v54 << 16);
  v57 = v46 ^ (2
             * ((v56 << 32) & 0xEB09F9100000000 ^ v56 ^ ((v56 << 32) ^ 0x4F9838B300000000) & (((v55 ^ 0xE200E10478008B3) << 16) & 0xEB09F9100000000 ^ 0x20100100000000 ^ (((v55 ^ 0xE200E10478008B3) << 16) ^ 0x1F91CF9800000000) & (v55 ^ 0xE200E10478008B3))));
  v58 = ((v57 ^ 0x7719A842C363DE3DLL) - 0x213CF95E7095D3DCLL) ^ ((v57 ^ 0xAC9BB9BC2DF39FD0) + 0x541175F61FA6DCFLL) ^ ((v57 ^ 0x1C45ECD9033391E5) - 0x4A60BDC5B0C59C04);
  v59 = ((v58 - 0x52E4124AF52094AALL) ^ 0x55E20D579B28177DLL) & (2
                                                               * ((v58 - 0x52E4124AF52094AALL) & 0x81820C179B32477ELL)) ^ (v58 - 0x52E4124AF52094AALL) & 0x81820C179B32477ELL;
  v60 = ((2 * ((v58 - 0x52E4124AF52094AALL) ^ 0x57E61D7DBB2C93C9)) ^ 0xACC822D4403DA96ELL) & ((v58
                                                                                               - 0x52E4124AF52094AALL) ^ 0x57E61D7DBB2C93C9) ^ (2 * ((v58 - 0x52E4124AF52094AALL) ^ 0x57E61D7DBB2C93C9)) & 0xD664116A201ED4B6;
  v61 = v60 ^ 0x5224112A20025491;
  v62 = (v60 ^ 0x400004000180020) & (4 * v59) ^ v59;
  v63 = ((4 * v61) ^ 0x599045A8807B52DCLL) & v61 ^ (4 * v61) & 0xD664116A201ED4B4;
  v64 = (v63 ^ 0x50000128001A5080) & (16 * v62) ^ v62;
  v65 = ((16 * (v63 ^ 0x8664104220048423)) ^ 0x664116A201ED4B70) & (v63 ^ 0x8664104220048423) ^ (16 * (v63 ^ 0x8664104220048423)) & 0xD664116A201ED4B0;
  v66 = (v65 ^ 0x46401022000C4000) & (v64 << 8) ^ v64;
  v67 = (((v65 ^ 0x9024014820129487) << 8) ^ 0x64116A201ED4B700) & (v65 ^ 0x9024014820129487) ^ ((v65 ^ 0x9024014820129487) << 8) & 0xD664116A201ED400;
  v68 = v66 ^ 0xD664116A201ED4B7 ^ (v67 ^ 0x4400002000140000) & (v66 << 16);
  v69 = v58
      + 0x2E9DF9CCA611B2D4
      + ((((v58 - 0x52E4124AF52094AALL) ^ (2
                                         * ((v68 << 32) & 0x5664116A00000000 ^ v68 ^ ((v68 << 32) ^ 0x201ED4B700000000) & (((v67 ^ 0x9264114A200A40B7) << 16) & 0x5664116A00000000 ^ 0x4604116000000000 ^ (((v67 ^ 0x9264114A200A40B7) << 16) ^ 0x116A201E00000000) & (v67 ^ 0x9264114A200A40B7))))) >> 27) ^ 0x5A841D0FBLL);
  v70 = v69 + (v69 >> 15) - ((v69 + (v69 >> 15)) >> 6);
  LODWORD(v67) = v8 & (4 * v70) ^ v70;
  v71 = v70
      + 0x1F1245062907D92
      + ((v70 + 0x1F1245062907D92) >> 25)
      + ((v70 + 0x1F1245062907D92 + ((v70 + 0x1F1245062907D92) >> 25)) >> 12);
  v72 = ((v71 + (v71 >> 8)) ^ 0x3F9EC5971C88A2D6)
      + (((v71 + (v71 >> 8)) ^ 0x3F9EC5971C88A2D6) >> 31)
      - ((((v71 + (v71 >> 8)) ^ 0x3F9EC5971C88A2D6) + (((v71 + (v71 >> 8)) ^ 0x3F9EC5971C88A2D6) >> 31)) >> 8);
  v73 = v72
      + (v72 >> 7)
      - 0x48FE1727B858BC71
      + ((v72 + (v72 >> 7) - 0x48FE1727B858BC71) >> 25)
      - ((v72 + (v72 >> 7) - 0x48FE1727B858BC71 + ((v72 + (v72 >> 7) - 0x48FE1727B858BC71) >> 25)) >> 10);
  v74 = v73 - (v73 >> 1);
  v75 = v74
      + 0x488D08707B475E94
      + ((v74 + 0x488D08707B475E94) >> 27)
      - ((v74 + 0x488D08707B475E94 + ((v74 + 0x488D08707B475E94) >> 27)) >> 15);
  v76 = v75
      - (v75 >> 7)
      - 0x4D7E45843C4E562ELL
      + ((v75 - (v75 >> 7) - 0x4D7E45843C4E562ELL) >> 27)
      + ((v75 - (v75 >> 7) - 0x4D7E45843C4E562ELL + ((v75 - (v75 >> 7) - 0x4D7E45843C4E562ELL) >> 27)) >> 12);
  v77 = ((v76 - (v76 >> 5)) ^ 0x91247475698401ALL)
      + (((v76 - (v76 >> 5)) ^ 0x91247475698401ALL) >> 26)
      - ((((v76 - (v76 >> 5)) ^ 0x91247475698401ALL) + (((v76 - (v76 >> 5)) ^ 0x91247475698401ALL) >> 26)) >> 11);
  LODWORD(STACK[0x6AB0]) = v7 ^ 0x9CA58002 ^ v67 ^ v74 ^ v8 & (4 * v74) ^ ((v8 & (4 * (v77 - (v77 >> 1))) ^ (v77 - (v77 >> 1)))
                                                                         - ((2
                                                                           * (v8 & (4 * (v77 - (v77 >> 1))) ^ (v77 - (v77 >> 1)))) & 0x960B1014)
                                                                         - 888829942);
  if (((*(_BYTE *)(STACK[0x6AA0]
                  + ((*(_BYTE *)(STACK[0x6AA0]
                               + ((*(_BYTE *)(STACK[0x6AA0] + ((*(_BYTE *)(STACK[0x6AA0] + 1) + 13) & 0xF)) + 8) & 0xF))
                    + 7) & 0xF))
       - 1) & 0xE) != 0)
    v78 = (*(_BYTE *)(STACK[0x6AA0]
                    + ((*(_BYTE *)(STACK[0x6AA0]
                                 + ((*(_BYTE *)(STACK[0x6AA0] + ((*(_BYTE *)(STACK[0x6AA0] + 1) + 13) & 0xF)) + 8) & 0xF))
                      + 7) & 0xF))
         - 1) & 0xF;
  else
    v78 = 1;
  v79 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x6A70]) - 8);
  STACK[0x6AC0] = v78;
  STACK[0x6A40] = v78 - 1;
  return v79();
}

uint64_t sub_100A33E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t (*v60)(void);

  LODWORD(STACK[0x6A60]) = v7;
  v10 = *(unsigned __int8 *)(STACK[0x6AA0] + a2);
  v11 = STACK[0x6A70];
  LODWORD(STACK[0x6A50]) = STACK[0x6A70] - 4151;
  v12 = v10 * ((v11 - 4151) ^ (v8 + 4022)) + 1441559292;
  v13 = (v12 ^ 0x2A8B2884) & (2 * (v12 & 0xAA138D04)) ^ v12 & 0xAA138D04;
  v14 = ((2 * (v12 ^ 0x6AAA328C)) ^ 0x81737F10) & (v12 ^ 0x6AAA328C) ^ (2 * (v12 ^ 0x6AAA328C)) & 0xC0B9BF88;
  v15 = ((4 * (v14 ^ 0x40888088)) ^ 0x2E6FE20) & (v14 ^ 0x40888088) ^ (4 * (v14 ^ 0x40888088)) & 0xC0B9BF88;
  v16 = (v15 ^ 0xA0BE08) & (16 * ((v14 ^ 0x80103C00) & (4 * v13) ^ v13)) ^ (v14 ^ 0x80103C00) & (4 * v13) ^ v13;
  v17 = ((16 * (v15 ^ 0xC0190188)) ^ 0xB9BF880) & (v15 ^ 0xC0190188) ^ (16 * (v15 ^ 0xC0190188)) & 0xC0B9BF80;
  v18 = v16 ^ 0xC0B9BF88 ^ (v17 ^ 0x99B808) & (v16 << 8);
  v19 = v12 ^ (2
             * ((v18 << 16) & 0x40B90000 ^ v18 ^ ((v18 << 16) ^ 0x3F880000) & (((v17 ^ 0xC0200708) << 8) & 0xC0B90000 ^ (((v17 ^ 0xC0200708) << 8) ^ 0xB9BF0000) & (v17 ^ 0xC0200708) ^ 0x40000000)));
  v20 = (v6 - 1693174610 - ((2 * v6) & 0x3628695C)) ^ 0xB164C6BA ^ v19;
  v21 = (unint64_t)(v20 + a2) >> 16;
  v22 = a2 + 2119873979 + v20 + v21 + 210;
  v23 = ((2 * (v22 ^ 0x11698DA7)) ^ 0x219989A8) & (v22 ^ 0x11698DA7) ^ (2 * (v22 ^ 0x11698DA7)) & 0x90CCC4D4;
  v24 = v23 ^ 0x90444454;
  v25 = (v22 ^ 0x11210D63) & (2 * (v22 & 0x81A54973)) ^ v22 & 0x81A54973;
  v26 = (v23 ^ 0x880080) & (4 * v25) ^ v25;
  v27 = ((4 * v24) ^ 0x43331350) & v24 ^ (4 * v24) & 0x90CCC4D4;
  v28 = (v27 ^ 0x50) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x90CCC484)) ^ 0xCCC4D40) & (v27 ^ 0x90CCC484) ^ (16 * (v27 ^ 0x90CCC484)) & 0x90CCC4D0;
  v30 = v28 ^ 0x90CCC4D4 ^ (v29 ^ 0xCC4494) & (v28 << 8);
  v31 = (((v29 ^ 0x90008094) << 8) ^ 0xCCC4D400) & (v29 ^ 0x90008094) ^ ((v29 ^ 0x90008094) << 8) & 0x90CCC400;
  v32 = (v22 ^ (2
              * (v31 & 0x62159000 ^ v30 ^ ((v30 << 16) ^ 0xA6C19009) & 0x10CC8000 ^ (v31 ^ 0x10080000) & ((v30 << 16) ^ 0xA6C19009)))) >> 8;
  v33 = a2
      + v21
      + v20
      - (((v32 ^ 0x922709F7) - 113557423) ^ ((v32 ^ 0x59EEDA9C) + 854758204) ^ ((v32 ^ 0xCB69E6AB) - 1602900211));
  v34 = ((v33 - 1465569103) ^ 0x80F5AF92) & (2 * ((v33 - 1465569103) & 0xD0F5CFD4)) ^ (v33 - 1465569103) & 0xD0F5CFD4;
  v35 = ((2 * ((v33 - 1465569103) ^ 0x9CB33A)) ^ 0xA0D2F9DC) & ((v33 - 1465569103) ^ 0x9CB33A) ^ (2
                                                                                                * ((v33 - 1465569103) ^ 0x9CB33A)) & 0xD0697CEE;
  v36 = ((4 * (v35 ^ 0x50290422)) ^ 0x41A5F3B8) & (v35 ^ 0x50290422) ^ (4 * (v35 ^ 0x50290422)) & 0xD0697CEC;
  v37 = (v36 ^ 0x402170A0) & (16 * ((v35 ^ 0x904078C2) & (4 * v34) ^ v34)) ^ (v35 ^ 0x904078C2) & (4 * v34) ^ v34;
  v38 = ((16 * (v36 ^ 0x90480C46)) ^ 0x697CEE0) & (v36 ^ 0x90480C46) ^ (16 * (v36 ^ 0x90480C46)) & 0xD0697CE0;
  v39 = v37 ^ 0xD0697CEE ^ (v38 ^ 0x14C0E) & (v37 << 8);
  v40 = (v33 - 1465569103) ^ (2
                            * ((v39 << 16) & 0x50690000 ^ v39 ^ ((v39 << 16) ^ 0x7CEE0000) & (((v38 ^ 0xD068300E) << 8) & 0x50690000 ^ 0x10010000 ^ (((v38 ^ 0xD068300E) << 8) ^ 0x697C0000) & (v38 ^ 0xD068300E))));
  v33 -= 1232882482;
  v41 = (v33 ^ 0xD0E5AF93) & (2 * (v33 & 0xD0F5CFD4)) ^ v33 & 0xD0F5CFD4;
  v42 = ((2 * (v33 ^ 0xF1CEAF93)) ^ 0x4276C08E) & (v33 ^ 0xF1CEAF93) ^ (2 * (v33 ^ 0xF1CEAF93)) & 0x213B6046;
  v43 = v42 ^ 0x21092041;
  v44 = (v42 ^ 0x20324000) & (4 * v41) ^ v41;
  v45 = ((4 * v43) ^ 0x84ED811C) & v43 ^ (4 * v43) & 0x213B6044;
  LODWORD(v21) = ((16 * (v45 ^ 0x21126043)) ^ 0x13B60470) & (v45 ^ 0x21126043) ^ (16 * (v45 ^ 0x21126043)) & 0x213B6040;
  v46 = v21 ^ 0x20096007;
  LODWORD(v21) = (v45 ^ 0x290003) & (16 * v44) ^ v44 ^ 0x213B6047 ^ (v21 ^ 0x1320000) & (((v45 ^ 0x290003) & (16 * v44) ^ v44) << 8);
  v47 = v33 ^ (2
             * (((_DWORD)v21 << 16) & 0x213B0000 ^ v21 ^ (((_DWORD)v21 << 16) ^ 0x60470000) & ((v46 << 8) & 0x213B0000 ^ 0x1B0000 ^ ((v46 << 8) ^ 0x3B600000) & v46)));
  v48 = a2
      + (v19 ^ 0xF8F5FD4E ^ v47)
      + (((v19 ^ 0xF8F5FD4E ^ v47) + a2) >> 16)
      - (((v19 ^ 0xF8F5FD4E ^ v47) + (_DWORD)a2 + (((v19 ^ 0xF8F5FD4E ^ v47) + a2) >> 16)) >> 8);
  v49 = ((2 * v48) & 0xFDDFFFCE) + (v48 ^ 0x7EEFFFE7);
  v50 = v49 - 1767642857;
  v51 = (v50 ^ 0x24A51E3E) & (2 * (v50 & 0x6291F3C)) ^ v50 & 0x6291F3C;
  v52 = ((2 * (v50 ^ 0x24F7202E)) ^ 0x45BC7E24) & (v50 ^ 0x24F7202E) ^ (2 * (v50 ^ 0x24F7202E)) & 0x22DE3F12;
  v53 = ((4 * (v52 ^ 0x22420112)) ^ 0x8B78FC48) & (v52 ^ 0x22420112) ^ (4 * (v52 ^ 0x22420112)) & 0x22DE3F10;
  v54 = ((16 * (v53 ^ 0x20860312)) ^ 0x2DE3F120) & (v53 ^ 0x20860312) ^ (16 * (v53 ^ 0x20860312)) & 0x22DE3F10;
  v55 = (v53 ^ 0x2583C12) & (16 * ((v52 ^ 0x8C3C00) & (4 * v51) ^ v51)) ^ (v52 ^ 0x8C3C00) & (4 * v51) ^ v51 ^ 0x22DE3F12 ^ (v54 ^ 0x20C23112) & (((v53 ^ 0x2583C12) & (16 * ((v52 ^ 0x8C3C00) & (4 * v51) ^ v51)) ^ (v52 ^ 0x8C3C00) & (4 * v51) ^ v51) << 8);
  v56 = LODWORD(STACK[0x6AB0]) ^ (174566087
                                - (a6 & (4 * v40) ^ 0x53541188 | 0xA67AAC7)
                                + (a6 & (4 * v40) ^ 0x53541188 | 0xF5985538)) ^ 0xE8D82115 ^ (((4 * (v49 - 1896971210)) & 0xEE133854 ^ (v49 - 1896971210))
                                                                                            + 768943218
                                                                                            - 2
                                                                                            * (((4 * (v49 - 1896971210)) & 0xEE133854 ^ (v49 - 1896971210)) & 0x2DD5247B ^ (v49 - 1896971210) & 9));
  v57 = v19 ^ 0xE99B6CAF ^ (v49 - 1767642857) ^ 0xC45AFFA3 ^ (2
                                                            * ((v55 << 16) & 0x22DE0000 ^ v55 ^ ((v55 << 16) ^ 0x3F120000) & (((v54 ^ 0x21C0E12) << 8) & 0x22DE0000 ^ 0x20C00000 ^ (((v54 ^ 0x21C0E12) << 8) ^ 0x5E3F0000) & (v54 ^ 0x21C0E12))));
  v58 = v57 + a2;
  HIDWORD(v59) = v40 ^ 0xBBBA2102 ^ (v56 - ((2 * v56) & 0xD69A2E14) + 1800214282);
  LODWORD(v59) = HIDWORD(v59);
  LODWORD(v59) = (v59 >> 19) ^ __ROR4__((4 * (a2 + 232686621 + v57 - ((v58 + WORD1(v58)) >> 8) + (v58 >> 16))) & 0xEE133854 ^ (a2 + 232686621 + v57 - ((v58 + WORD1(v58)) >> 8) + (v58 >> 16)), 19) ^ 0x5925DC2;
  HIDWORD(v59) = v59;
  v60 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((17821 * (STACK[0x6A40] == a2)) ^ v11))
                          - 8);
  LODWORD(STACK[0x6AB0]) = ((v59 >> 13) - ((2 * (v59 >> 13)) & 0xE0BEC680) + 1885299520) ^ 0xBF9E1605;
  return v60();
}

uint64_t sub_100A34E20(uint64_t a1)
{
  int v1;
  unint64_t v2;

  v1 = LODWORD(STACK[0x6A50]) + 4655;
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x6A30]) ^ 0x55555555;
  v2 = STACK[0x6AD8];
  LODWORD(STACK[0x6A00]) = v1;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * v1) - 4))(a1, -2028017452);
}

uint64_t sub_100A34EB8(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;

  LODWORD(STACK[0x6A60]) = v4;
  STACK[0x6A70] = v3;
  v9 = (LODWORD(STACK[0x6A50]) - 1456656508) & 0x56D2D1FF;
  v10 = *(unsigned __int8 *)(STACK[0x6A70] + STACK[0x6AC0]) * v5 - 743760613;
  LODWORD(STACK[0x69F0]) = v9;
  v11 = (v10 ^ 0xAD56FAE4) & (2 * (v10 & (v9 ^ 0x2C54F31F))) ^ v10 & (v9 ^ 0x2C54F31F);
  v12 = ((2 * (v10 ^ 0xB5FEBF2C)) ^ 0x3354BB92) & (v10 ^ 0xB5FEBF2C) ^ (2 * (v10 ^ 0xB5FEBF2C)) & 0x99AA5DC8;
  v13 = ((4 * (v12 ^ 0x88AA4449)) ^ 0x66A97724) & (v12 ^ 0x88AA4449) ^ (4 * (v12 ^ 0x88AA4449)) & 0x99AA5DC8;
  v14 = (v13 ^ 0xA85509) & (16 * ((v12 ^ 0x190859C1) & (4 * v11) ^ v11)) ^ (v12 ^ 0x190859C1) & (4 * v11) ^ v11;
  v15 = ((16 * (v13 ^ 0x990208C9)) ^ 0x9AA5DC90) & (v13 ^ 0x990208C9) ^ (16 * (v13 ^ 0x990208C9)) & 0x99AA5DC0;
  v16 = v10 ^ (2
             * (((v14 ^ 0x99AA5DC9 ^ (v15 ^ 0x98A05C00) & (v14 << 8)) << 16) & 0x19AA0000 ^ v14 ^ 0x99AA5DC9 ^ (v15 ^ 0x98A05C00) & (v14 << 8) ^ (((v14 ^ 0x99AA5DC9 ^ (v15 ^ 0x98A05C00) & (v14 << 8)) << 16) ^ 0x5DC90000) & (((v15 ^ 0x10A0149) << 8) & 0x19AA0000 ^ 0x11A20000 ^ (((v15 ^ 0x10A0149) << 8) ^ 0x2A5D0000) & (v15 ^ 0x10A0149))));
  v17 = (v2 - ((2 * v2) & 0xB3C69C2E) + 1508068887) ^ 0x75F31760 ^ v16;
  v18 = STACK[0x6AC0] + v6;
  v19 = LODWORD(STACK[0x6AC0]) + v6;
  STACK[0x6A20] = v18;
  v20 = v18 + v17 - ((v17 + v8 + ((v17 + v8) >> 16)) >> 8) + ((v17 + v8) >> 16);
  v21 = ((2 * v20) & 0xF6FFDBCA) + (v20 ^ 0xFB7FEDE5);
  v22 = v21 + 752803808;
  v23 = ((2 * (v22 ^ 0x5DDE4E)) ^ 0xAFF9D8EA) & (v22 ^ 0x5DDE4E) ^ (2 * (v22 ^ 0x5DDE4E)) & 0xD7FCEC74;
  v24 = v23 ^ 0x50042415;
  v25 = (v23 ^ 0x8788EC60) & (4 * ((2 * ((v21 + 752803808) & 0xD7A1323B)) & (v22 ^ 0x871DBA3A) ^ v22 & 0xD7A1323B)) ^ (2 * ((v21 + 752803808) & 0xD7A1323B)) & (v22 ^ 0x871DBA3A) ^ v22 & 0xD7A1323B;
  v26 = ((4 * v24) ^ 0x5FF3B1D4) & v24 ^ (4 * v24) & 0xD7FCEC74;
  v27 = (v26 ^ 0x57F0A050) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x800C4C21)) ^ 0x7FCEC750) & (v26 ^ 0x800C4C21) ^ (16 * (v26 ^ 0x800C4C21)) & 0xD7FCEC70;
  v29 = v28 ^ 0x80302825;
  v30 = (v28 ^ 0x57CCC400) & (v27 << 8);
  v31 = (v28 ^ 0x80302825) << 8;
  v32 = v21 + 1662792130;
  v33 = ((v21 + 1662792130) ^ 0x2F037767) & (2 * ((v21 + 1662792130) & 0xAF426476)) ^ (v21 + 1662792130) & 0xAF426476;
  v34 = v27 ^ 0xD7FCEC75 ^ v30;
  v35 = ((2 * ((v21 + 1662792130) ^ 0x6503370F)) ^ 0x9482A6F2) & ((v21 + 1662792130) ^ 0x6503370F) ^ (2 * ((v21 + 1662792130) ^ 0x6503370F)) & 0xCA415378;
  v36 = ((4 * (v35 ^ 0x4A415109)) ^ 0x29054DE4) & (v35 ^ 0x4A415109) ^ (4 * (v35 ^ 0x4A415109)) & 0xCA415378;
  v37 = v31 & 0x17FC0000 ^ 0x3100000 ^ (v31 ^ 0xFCEC0000) & v29;
  v38 = (v36 ^ 0x8014179) & (16 * ((v35 ^ 0x80404271) & (4 * v33) ^ v33)) ^ (v35 ^ 0x80404271) & (4 * v33) ^ v33;
  v39 = ((16 * (v36 ^ 0xC2401219)) ^ 0xA4153790) & (v36 ^ 0xC2401219) ^ (16 * (v36 ^ 0xC2401219)) & 0xCA415370;
  v40 = v38 ^ 0xCA415379 ^ (v39 ^ 0x80011369) & (v38 << 8);
  v21 += 1895478751;
  v41 = (v21 ^ 0x2F016567) & (2 * (v21 & 0xAF426476)) ^ v21 & 0xAF426476;
  v42 = ((2 * (v21 ^ 0x35812DCB)) ^ 0x3586937A) & (v21 ^ 0x35812DCB) ^ (2 * (v21 ^ 0x35812DCB)) & 0x9AC349BC;
  LODWORD(STACK[0x6A40]) = (v34 << 16) & 0x15C00000 ^ v34 ^ ((v34 << 16) ^ 0xC750000) & v37;
  v43 = ((4 * (v42 ^ 0x8A414885)) ^ 0x6B0D26F4) & (v42 ^ 0x8A414885) ^ (4 * (v42 ^ 0x8A414885)) & 0x9AC349BC;
  v44 = v32 ^ (2
             * ((v40 << 16) & 0x4A410000 ^ v40 ^ ((v40 << 16) ^ 0x53790000) & (((v39 ^ 0x4A404069) << 8) & 0xCA410000 ^ 0xA000000 ^ (((v39 ^ 0x4A404069) << 8) ^ 0x41530000) & (v39 ^ 0x4A404069))));
  v45 = (v43 ^ 0xA0100A9) & (16 * ((v42 ^ 0x1042493D) & (4 * v41) ^ v41)) ^ (v42 ^ 0x1042493D) & (4 * v41) ^ v41;
  v46 = ((16 * (v43 ^ 0x90C24909)) ^ 0xAC349BD0) & (v43 ^ 0x90C24909) ^ (16 * (v43 ^ 0x90C24909)) & 0x9AC349B0;
  v47 = v45 ^ 0x9AC349BD ^ (v46 ^ 0x8800092D) & (v45 << 8);
  v48 = v21 ^ (2
             * ((v47 << 16) & 0x1AC30000 ^ v47 ^ ((v47 << 16) ^ 0x49BD0000) & (((v46 ^ 0x12C3402D) << 8) & 0x1AC30000 ^ 0x18820000 ^ (((v46 ^ 0x12C3402D) << 8) ^ 0x43490000) & (v46 ^ 0x12C3402D))));
  LODWORD(STACK[0x6A10]) = ((4 * v44) & 0x8123810 ^ 0x113CD403) + ((4 * v44) & 0xE6010044 ^ 0xA4C00041);
  LODWORD(STACK[0x6A30]) = ((((4 * (v48 ^ 0xE0705BB4)) & 0xEE133854 ^ 0x6571F76D) - 1) & 0x2A123850 ^ 0x21903B51)
                         + ((((4 * (v48 ^ 0xE0705BB4)) & 0xEE133854 ^ 0x6571F76D) - 1) & 0xC4010004 ^ 0xC0090007);
  v49 = v19
      + (v16 ^ 0xA7D6AE7B ^ v48)
      - (((v16 ^ 0xA7D6AE7B ^ v48) + v8 + (((v16 ^ 0xA7D6AE7B ^ v48) + v8) >> 16)) >> 8)
      + (((v16 ^ 0xA7D6AE7B ^ v48) + v8) >> 16);
  v50 = ((2 * v49) & 0x7FFEFED6) + (v49 ^ 0x3FFF7F6B);
  v51 = v50 - 841022286;
  v50 += 462962513;
  v52 = (v50 ^ 0xEC81247E) & (2 * (v50 & 0xC025497E)) ^ v50 & 0xC025497E;
  v53 = ((2 * (v50 ^ 0x6C8334FE)) ^ 0x594CFB00) & (v50 ^ 0x6C8334FE) ^ (2 * (v50 ^ 0x6C8334FE)) & 0xACA67D80;
  v54 = ((4 * (v53 ^ 0xA4A20480)) ^ 0xB299F600) & (v53 ^ 0xA4A20480) ^ (4 * (v53 ^ 0xA4A20480)) & 0xACA67D80;
  v55 = (v53 ^ 0x46900) & (4 * v52) ^ v52 ^ 0xACA67D80 ^ (v54 ^ 0xA0807400) & (16 * ((v53 ^ 0x46900) & (4 * v52) ^ v52));
  v56 = (16 * (v54 ^ 0xC260980)) & 0xACA67D80 ^ 0x24802580 ^ ((16 * (v54 ^ 0xC260980)) ^ 0xCA67D800) & (v54 ^ 0xC260980);
  v57 = (v55 << 8) & 0xACA67D00 ^ v55 ^ ((v55 << 8) ^ 0xA67D8000) & v56;
  v58 = v16 ^ 0xF6A213CF ^ v50 ^ 0x5293F8C6 ^ (2
                                             * ((v57 << 16) & 0x2CA60000 ^ v57 ^ ((v57 << 16) ^ 0x7D800000) & ((v56 << 8) & 0x2CA60000 ^ 0x8820000 ^ ((v56 << 8) ^ 0xA67D0000) & v56)));
  LODWORD(v18) = STACK[0x6AC0] + v7 + v58 + ((v58 + v8) >> 16);
  v59 = (v18 ^ 0xE8CD48ED) & (2 * (v18 & 0xE8896CCC)) ^ v18 & 0xE8896CCC;
  v60 = ((2 * (v18 ^ 0xE9CD896D)) ^ 0x289CB42) & (v18 ^ 0xE9CD896D) ^ (2 * (v18 ^ 0xE9CD896D)) & 0x144E5A0;
  v61 = ((4 * (v60 ^ 0x14424A1)) ^ 0x5139684) & (v60 ^ 0x14424A1) ^ (4 * (v60 ^ 0x14424A1)) & 0x144E5A0;
  v62 = (v61 ^ 0x1008481) & (16 * ((v60 ^ 0x100C181) & (4 * v59) ^ v59)) ^ (v60 ^ 0x100C181) & (4 * v59) ^ v59;
  v63 = ((16 * (v61 ^ 0x446121)) ^ 0x144E5A10) & (v61 ^ 0x446121) ^ (16 * (v61 ^ 0x446121)) & 0x144E5A0;
  v64 = v62 ^ 0x144E5A1 ^ (v63 ^ 0x4440A1) & (v62 << 8);
  LODWORD(v18) = (v18 ^ (2
                                     * ((v64 << 16) & 0x1440000 ^ v64 ^ ((v64 << 16) ^ 0x65A10000) & (((v63 ^ 0x100A5A1) << 8) & 0x1440000 ^ (((v63 ^ 0x100A5A1) << 8) ^ 0x44E50000) & (v63 ^ 0x100A5A1) ^ 0x1000000)))) >> 8;
  LODWORD(v18) = STACK[0x6AC0]
               + a2
               + v58
               + ((v58 + v8) >> 16)
               - (((v18 ^ 0x4B139E1D) + 403055170) ^ ((v18 ^ 0x5428F363) + 121458496) ^ ((v18 ^ 0x1FD36DD9) + 1288098182));
  v65 = (v18 ^ 0xEC9C97A6) & (2 * (v18 & 0xCCDED428)) ^ v18 & 0xCCDED428;
  v66 = ((2 * (v18 ^ 0x6D34BFE6)) ^ 0x43D4D79C) & (v18 ^ 0x6D34BFE6) ^ (2 * (v18 ^ 0x6D34BFE6)) & 0xA1EA6BCE;
  v67 = v66 ^ 0xA02A2842;
  v68 = (v66 ^ 0x1C04180) & (4 * v65) ^ v65;
  v69 = ((4 * v67) ^ 0x87A9AF38) & v67 ^ (4 * v67) & 0xA1EA6BCC;
  v70 = (v69 ^ 0x81A82B00) & (16 * v68) ^ v68;
  v71 = ((16 * (v69 ^ 0x204240C6)) ^ 0x1EA6BCE0) & (v69 ^ 0x204240C6) ^ (16 * (v69 ^ 0x204240C6)) & 0xA1EA6BC0;
  v72 = v70 ^ 0xA1EA6BCE ^ (v71 ^ 0xA2280E) & (v70 << 8);
  v73 = v18 ^ (2
             * ((v72 << 16) & 0x21EA0000 ^ v72 ^ ((v72 << 16) ^ 0x6BCE0000) & (((v71 ^ 0xA148430E) << 8) & 0xA1EA0000 ^ (((v71 ^ 0xA148430E) << 8) ^ 0xEA6B0000) & (v71 ^ 0xA148430E) ^ 0x1800000)));
  v74 = (((v73 ^ 0x9981553A) - 600259452) ^ ((v73 ^ 0x3C425AC9) + 2046544753) ^ ((v73 ^ 0x695D0C47) + 753180159))
      - 815881715;
  v75 = (v74 ^ 0x355D1952) & (2 * (v74 & 0xB5585002)) ^ v74 & 0xB5585002;
  LODWORD(v18) = ((2 * (v74 ^ 0x7FCD9956)) ^ 0x952B92A8) & (v74 ^ 0x7FCD9956) ^ (2 * (v74 ^ 0x7FCD9956)) & 0xCA95C954;
  v76 = v18 ^ 0x4A944954;
  LODWORD(v18) = (v18 ^ 0x80158944) & (4 * v75) ^ v75;
  v77 = ((4 * v76) ^ 0x2A572550) & v76 ^ (4 * v76) & 0xCA95C954;
  v78 = ((16 * (v77 ^ 0xC080C804)) ^ 0xA95C9540) & (v77 ^ 0xC080C804) ^ (16 * (v77 ^ 0xC080C804)) & 0xCA95C950;
  LODWORD(v18) = (v77 ^ 0xA150144) & (16 * v18) ^ v18 ^ 0xCA95C954 ^ (v78 ^ 0x88148100) & (((v77 ^ 0xA150144) & (16 * (_DWORD)v18) ^ v18) << 8);
  LODWORD(v18) = ((_DWORD)v18 << 16) & 0x4A950000 ^ v18 ^ (((_DWORD)v18 << 16) ^ 0x49540000) & (((v78 ^ 0x42814814) << 8) & 0xCA950000 ^ 0x4A140000 ^ (((v78 ^ 0x42814814) << 8) ^ 0x95C90000) & (v78 ^ 0x42814814));
  LODWORD(STACK[0x6AB0]) ^= v44 ^ (LODWORD(STACK[0x6A10]) - 2) ^ (((4 * v51) & 0xEE133854 ^ v51)
                                                                + 542542700
                                                                - 2
                                                                * (((4 * v51) & 0xEE133854 ^ v51) & 0x20568B6F ^ v51 & 3)) ^ v74 ^ (2 * v18) ^ 0xBF415FEF ^ (((4 * (v74 ^ (2 * v18))) & 0xEE133854 ^ LODWORD(STACK[0x6104])) - ((2 * ((4 * (v74 ^ (2 * v18))) & 0xEE133854 ^ LODWORD(STACK[0x6104]))) & 0x902210A8) - 906950401);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((108 * (STACK[0x6A20] == 15)) ^ LODWORD(STACK[0x6A00])))
                            - 4))();
}

uint64_t sub_100A361D4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;

  LODWORD(STACK[0x6A60]) = v2;
  v3 = (v1 ^ 0xEC332374) - ((v1 ^ 0xEC332374) >> 11) + (((v1 ^ 0xEC332374) - ((v1 ^ 0xEC332374) >> 11)) >> 6);
  v4 = v3 - ((2 * v3) & 0x951BB54E) - 896673113;
  v5 = (((v4 ^ 0x75DC35C5) - 1977365957) ^ ((v4 ^ 0xD54DB13A) + 716328646) ^ ((v4 ^ 0x6A1C5E58) - 1780244056))
     + 998172674;
  v6 = v5 - (v5 >> 12) - ((v5 - (v5 >> 12)) >> 1);
  v7 = (v6 ^ 0x7A1D737E) - ((v6 ^ 0x7A1D737E) >> 13) + (((v6 ^ 0x7A1D737E) - ((v6 ^ 0x7A1D737E) >> 13)) >> 4);
  v8 = v7 - ((2 * v7) & 0x27F9964) + 20958386;
  v9 = (((v8 ^ 0x91670DA7) + 1855517273) ^ ((v8 ^ 0x65FA89FD) - 1710918141) ^ ((v8 ^ 0xF5A248E8) + 173913880))
     - 1203425706;
  v10 = v9 + (v9 >> 11) + ((v9 + (v9 >> 11)) >> 3);
  v11 = v10 - ((2 * v10) & 0x8925015C) + 1150451886;
  v12 = (((v11 ^ 0x3378A39C) - 863544220) ^ ((v11 ^ 0x627F917E) - 1652527486) ^ ((v11 ^ 0x1595B24C) - 362132044))
      - 742723494;
  v13 = v12 + (v12 >> 15) - ((v12 + (v12 >> 15)) >> 5);
  v14 = v13 + 2097841712 - ((v13 + 2097841712) >> 8) + ((v13 + 2097841712 - ((v13 + 2097841712) >> 8)) >> 3);
  v15 = v14 - ((2 * v14) & 0x4FDD1B48) - 1477538396;
  v16 = (v15 ^ 0x460A614B) - ((v15 ^ 0x460A614Bu) >> 10) - (((v15 ^ 0x460A614B) - ((v15 ^ 0x460A614Bu) >> 10)) >> 7);
  v17 = v16 - ((2 * v16) & 0x7D0CC422) + 1048994321;
  v18 = (((v17 ^ 0xE5A1CA2D) + 442381779) ^ ((v17 ^ 0x5806E19E) - 1476845982) ^ ((v17 ^ 0x832149A2) + 2094970462))
      + 929385877;
  v19 = v18 + (v18 >> 8) - ((v18 + (v18 >> 8)) >> 7);
  v20 = LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x6870]);
  v21 = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x67F0]) ^ v6 ^ LODWORD(STACK[0x6AB0]) ^ (v13
                                                                                       - 1425070853
                                                                                       - ((2 * v13) & 0x561E5C66)
                                                                                       + 2360) ^ (v19
                                                                                                + 1549440104
                                                                                                - ((2 * v19) & 0xB8B531C4)
                                                                                                + 1146) ^ (4 * (LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x68A0]) ^ ((v13 ^ v6 ^ v19) - ((2 * (v13 ^ v6 ^ v19)) & 0x3EED7F7E) + 1064746943))) & 0xEE133854;
  v22 = STACK[0x68D0];
  v23 = (v21 ^ 0xC715ED2B) & (v22 ^ 0xFAFBC9BF) ^ v22 & 0xF1910279;
  v24 = 2 * ((v23 & 0x45797A37 ^ 0x40000031) + (v23 & 0x3A8685C8 ^ 0x1A0685C9)) - 2;
  v25 = (((v22 ^ 0x5B5118FC) + 1464075047) ^ ((v22 ^ 0x80FAC395) - 1930438576) ^ ((v22 ^ 0x215012D6) + 759499021))
      + (((v21 ^ 0x44EF0CDD) - 1162063200) ^ ((v21 ^ 0x3184329E) - 807965475) ^ ((v21 ^ 0x43EFD111) - 1111716012))
      - (((v24 ^ 0x2AADFD09) - 444859461) ^ ((v24 ^ 0xA47CB9FE) + 1806352206) ^ ((v24 ^ 0xDBFE4F77) + 338184645))
      - 402291937;
  v26 = (v25 ^ 0xE229161D) & (2 * (v25 & 0xF32D069E)) ^ v25 & 0xF32D069E;
  v27 = ((2 * (v25 ^ 0xC6231329)) ^ 0x6A1C2B6E) & (v25 ^ 0xC6231329) ^ (2 * (v25 ^ 0xC6231329)) & 0x350E15B6;
  v28 = v27 ^ 0x15021491;
  v29 = (v27 ^ 0xE0021) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ 0xD43856DC) & v28 ^ (4 * v28) & 0x350E15B4;
  v31 = (v30 ^ 0x14081483) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x21060123)) ^ 0x50E15B70) & (v30 ^ 0x21060123) ^ (16 * (v30 ^ 0x21060123)) & 0x350E15B0;
  v33 = v31 ^ 0x350E15B7 ^ (v32 ^ 0x10001187) & (v31 << 8);
  v34 = v25 ^ (2
             * ((v33 << 16) & 0x350E0000 ^ v33 ^ ((v33 << 16) ^ 0x15B70000) & (((v32 ^ 0x250E0487) << 8) & 0x350E0000 ^ 0x310A0000 ^ (((v32 ^ 0x250E0487) << 8) ^ 0xE150000) & (v32 ^ 0x250E0487))));
  v35 = a1 ^ LODWORD(STACK[0x65D0]) ^ v8;
  v36 = v19 + 1527356292 - ((v19 + 1527356292) >> 8) + ((v19 + 1527356292 - ((v19 + 1527356292) >> 8)) >> 6);
  v37 = (4 * (v15 ^ v8 ^ v36)) & 0xEE133854;
  LODWORD(STACK[0x6AC0]) = v4;
  LODWORD(STACK[0x6AB0]) = v11;
  LODWORD(STACK[0x6A70]) = v17;
  LODWORD(STACK[0x6A50]) = 4 * (v20 ^ v4 ^ v11 ^ v17);
  v38 = (4 * (v34 ^ LODWORD(STACK[0x6790]))) & 0xEE133854;
  LODWORD(STACK[0x68F0]) = v21;
  LODWORD(STACK[0x68D0]) = v35 ^ v15 ^ v36 ^ v37 ^ v21 ^ (4 * v21) & 0xEE133854 ^ v34 ^ v38;
  return ((uint64_t (*)(_QWORD, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x69F0]))
                                                           - 4))(STACK[0x65F0] & 0x10040017 ^ 0x10040005u, STACK[0xDB10]);
}

uint64_t sub_100A369D4@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v7;
  char v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  char v19;
  int v20;
  int v21;
  unsigned int v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  HIDWORD(v23) = *((_DWORD *)*(&off_1015B46D0 + (v16 ^ v22)) + (v10 ^ v15) - 3);
  LODWORD(v23) = HIDWORD(v23);
  v24 = (v23 >> 21) ^ v20 ^ ((v16 ^ 0x3929) + 183544170) & ((v23 >> 21) >> 4);
  v25 = v24 ^ (2 * (v24 & a4));
  v26 = 4
      * (((((v10 ^ (2 * (v10 & a3))) & STACK[0x6930]) >> v19)
                         + ((v10 ^ (2 * (v10 & a3))) << v11)) ^ v8);
  *(_DWORD *)(STACK[0xDB20] + v26) = v18 ^ v12 ^ v9 ^ ((((((v25 & STACK[0x6690])
                                                         + a6
                                                         - ((2 * (v25 & STACK[0x6690])) & 0xAB1F46B8)) ^ a6) << a1) ^ v7) & ~((v25 & STACK[0x6688]) >> LODWORD(STACK[0x6A90])) | ((v25 & STACK[0x6688]) >> LODWORD(STACK[0x6A90])) & 0x2B38854E);
  *(_DWORD *)(a2 + v26) = v13 ^ v21 ^ v17 ^ ((v10 ^ a5) + *(_DWORD *)(a7 + 4 * (v10 ^ 0x4Eu)) + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 255) * v14) ^ v16)) - 4))();
}

uint64_t sub_100A36B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v33;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  char v98;
  unsigned int v99;
  int v100;
  int v101;
  char v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  char v130;
  char v131;
  char v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  char v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  char v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  char v195;
  char v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  char v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  char v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned __int8 *v306;
  unint64_t v307;
  unint64_t v308;
  unint64_t v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  int v316;
  char v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  unint64_t v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  char v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  uint64_t (*v424)(void);
  int v425;

  v8 = LODWORD(STACK[0x64F8]) ^ LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6528]) ^ LODWORD(STACK[0x6500]) ^ LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x6560]);
  v9 = LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6AC0]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x6920]) = v6 ^ LODWORD(STACK[0x6658]);
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x6378]) = LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6628]);
  v10 = v9 ^ STACK[0x6A50] & 0xEE133854 ^ 0xBF406AB4;
  LODWORD(STACK[0x6A30]) = v10;
  v11 = (v10 ^ LODWORD(STACK[0x6960])) + 1495465628 - ((2 * (v10 ^ LODWORD(STACK[0x6960]))) & 0xB245FD38);
  v12 = STACK[0x68B0];
  v13 = STACK[0x6640];
  v14 = STACK[0x66C8];
  v15 = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x66C8]) ^ ((v11 ^ v12) + 1495465628 - ((2 * (v11 ^ v12)) & 0xB245FD38));
  v16 = LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6800]) ^ (v15 + 1928530637 - ((2 * v15) & 0xE5E6159A));
  v17 = LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x6910]) ^ (v16 + 524224420 - ((2 * v16) & 0x3E7E0F48));
  LODWORD(STACK[0x65D0]) = v7;
  v18 = 7841 * (v7 ^ 0x28D0);
  LODWORD(STACK[0x6AC0]) = v18;
  v19 = LODWORD(STACK[0x68D0]) ^ v18 ^ 0x7C3441D7;
  LODWORD(STACK[0x69F0]) = v19;
  v20 = v19 ^ (v17 - 1252080867 - ((2 * v17) & 0x6ABD863A));
  LODWORD(STACK[0x68A0]) = v8 ^ 0xCAA49B1E;
  v21 = (v8 ^ 0xCAA49B1E ^ LODWORD(STACK[0x65E0]))
      + 1495465628
      - ((2 * (v8 ^ 0xCAA49B1E ^ LODWORD(STACK[0x65E0]))) & 0xB245FD38);
  v22 = STACK[0x66C0];
  v23 = STACK[0x6660];
  v24 = STACK[0x66E0];
  v25 = LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6810]) ^ (v22 - ((2 * v22) & 0x44296228) - 1575702252);
  v26 = STACK[0x65B8];
  v27 = STACK[0x66D0];
  v28 = LODWORD(STACK[0x68F0]) ^ 0xE2F2173C;
  LODWORD(STACK[0x69A0]) = v28;
  v29 = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6820]) ^ v28 ^ ((v25 ^ v26 ^ v27 ^ 0x5FB29653 ^ v21)
                                                               + 406169576
                                                               - ((2 * (v25 ^ v26 ^ v27 ^ 0x5FB29653 ^ v21)) & 0x306B4FD0));
  v30 = LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x65A8]) ^ 0xBE6F2A39 ^ (v29
                                                                                               - 2033066609
                                                                                               - ((2 * v29) & 0xDA3BB1E));
  v31 = LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6890]) ^ 0x98D0EBA2 ^ (v20 + 1611367027 - ((2 * v20) & 0xC01704E6));
  v33 = v31 ^ (2 * (v31 & a5));
  v35 = (a6 & (v23 ^ 0x5922FE9C) ^ 0x20968E85) - ((2 * (a6 & (v23 ^ 0x5922FE9C) ^ 0x20968E85)) & 0x5D397AB4);
  v36 = LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x69D0]) ^ (LODWORD(STACK[0x65E8])
                                                                                  - ((2 * LODWORD(STACK[0x65E8])) & 0x319EE63E)
                                                                                  - 1731235041) ^ 0xAFEB4D75 ^ (v30 - 2033066609 - ((2 * v30) & 0xDA3BB1E));
  v37 = STACK[0x6678];
  v38 = STACK[0x6678] & 0x1F ^ 4;
  LODWORD(STACK[0x6658]) = v38;
  v39 = STACK[0x6930];
  v40 = STACK[0x6690];
  v41 = STACK[0x6740];
  v42 = STACK[0x6740] & 3 ^ 2;
  LODWORD(STACK[0x6500]) = v42;
  v43 = STACK[0x6750];
  v44 = STACK[0x6750] & 0x1C ^ 0x18;
  LODWORD(STACK[0x64F8]) = v44;
  LODWORD(STACK[0x6338]) = ((v33 & v40) << v44 << v42) | ((v33 & v39) >> v38);
  v45 = STACK[0x6118];
  v46 = (((2 * v35 - 583435596) ^ 0x9C1467BE) + 1495465628 - ((2 * ((2 * v35 - 583435596) ^ 0x9C1467BE)) & 0xB245FD38)) ^ v23;
  v47 = STACK[0x6688];
  v48 = STACK[0x6A90];
  v49 = STACK[0x65F0];
  v50 = STACK[0x65F0] & 0x1000000C ^ 0x10000004;
  LODWORD(STACK[0x6478]) = v50;
  LODWORD(STACK[0x65A8]) = 262145;
  v51 = v49 & 0x40013 ^ 0x40001;
  LODWORD(STACK[0x6470]) = v51;
  LODWORD(STACK[0x65D8]) = ((((v36 ^ (2 * (v36 & a6))) & v47) >> v48)
                          - 830642143
                          - ((2 * (((v36 ^ (2 * (v36 & a6))) & v47) >> v48)) & 0x9CFAD042)) ^ 0xCE7D6821 ^ (((((v36 ^ (2 * (v36 & a6))) & v45) + 1849445741 - ((2 * ((v36 ^ (2 * (v36 & a6))) & v45)) & 0xDC789ADA)) ^ 0x6E3C4D6D) << v51 << v50);
  v52 = ((v46 & v39) >> v48) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x6760]);
  v53 = v45 & v46;
  v54 = v41;
  v55 = v41 & 0x1B ^ 0x1A;
  LODWORD(STACK[0x6670]) = v55;
  LODWORD(STACK[0x6618]) = v43 & 4;
  LODWORD(STACK[0x66E8]) = v52 ^ (v53 << (v43 & 4) << v55);
  v56 = 2 * ((a6 & (v12 ^ 0x5922FE9C) & 0x1B9F18F3 ^ 0x129B08E2) + (a6 & (v12 ^ 0x5922FE9C) & 0x6460E70C ^ 0x4001)) - 2;
  v57 = ((v56 ^ 0x253691C4) + 1495465628 - 2 * ((v56 ^ 0x253691C4) & 0x5922FEBC ^ v56 & 0x20)) ^ v12;
  v58 = v41 & 0xF ^ 0xA;
  LODWORD(STACK[0x6580]) = v58;
  v59 = ~v43 & 0x10;
  LODWORD(STACK[0x6588]) = v59;
  v60 = (v57 & v40) << v59 << v58;
  v61 = v37 & 0x1D ^ 4;
  LODWORD(STACK[0x6AB0]) = v61;
  v62 = STACK[0x69E0] & 2;
  LODWORD(STACK[0x6730]) = v62;
  v63 = ((v57 & v39) >> v61 >> v62) + v60;
  v64 = (2 * (a5 & (v14 ^ 0x5922FE9C)) + 1495465628 - ((4 * (a5 & (v14 ^ 0x5922FE9C))) & 0xB245FD38)) ^ v14;
  v65 = STACK[0x6600];
  v66 = STACK[0x65F8];
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x6600]) ^ v63;
  v67 = (2 * (a6 & (v24 ^ 0x5922FE9C)) + 1495465628 - ((4 * (a6 & (v24 ^ 0x5922FE9C))) & 0xB245FD38)) ^ v24;
  v68 = v65;
  v69 = v65 ^ v66 ^ ((v47 & v64) >> v48);
  v70 = v43;
  v71 = v41 & 0x16 ^ 0x12;
  v72 = v43 & 9 ^ 8;
  v73 = (v40 & v64) << (v43 & 9 ^ 8) << v71;
  v74 = v71;
  LODWORD(STACK[0x66E0]) = v73 ^ v69;
  v75 = (v45 & v67) - 503594342 - ((2 * (v45 & v67)) & 0xC3F78534);
  v76 = v37 & 6 ^ 4;
  LODWORD(STACK[0x6870]) = v76;
  LODWORD(STACK[0x67F0]) = v37 & 0x19;
  v77 = ((LODWORD(STACK[0x69C0]) ^ 0x12F4B156) & a5 & 0x2A819AC3 ^ 0x2819AC3)
      + ((LODWORD(STACK[0x69C0]) ^ 0x12F4B156) & a5 & 0x557E653C ^ 0x44400021);
  v78 = v68 ^ 0x584D1B58 ^ v66 ^ (((v47 & v67) >> (v37 & 0x19) >> v76)
                                + 1481448280
                                - ((2 * ((v47 & v67) >> (v37 & 0x19) >> v76)) & 0xB09A36B0));
  v79 = v49 & 0xC ^ 4;
  LODWORD(STACK[0x68E0]) = v79;
  v80 = v49 & 0x10040013 ^ 0x10040001;
  LODWORD(STACK[0x68B0]) = v80;
  LODWORD(STACK[0x66D8]) = v78 ^ ((v75 ^ 0xE1FBC29A) << v80 << v79);
  v81 = v27 ^ (2 * v77 - 2);
  v82 = (v81 ^ 0x46B16464) & v45 | STACK[0x6860] & 0x6FB68879;
  v83 = v70 & 0x1D ^ 0x18;
  LODWORD(STACK[0x6630]) = v83;
  LOBYTE(v12) = v54;
  v84 = ~v54 & 2;
  LODWORD(STACK[0x6628]) = v84;
  LODWORD(STACK[0x6A60]) = (((((v81 ^ 0x2907EC1D) & v47 & 0xC4A88F2 ^ 0x40A88D0)
                            + ((v81 ^ 0x2907EC1D) & v47 ^ 0x940342B)
                            - (((v81 ^ 0x2907EC1D) & v47 ^ 0x940342B) & 0xC4A88F2)) ^ 0x50ABCD9) >> v48) | ((v82 ^ 0x6FB68879) << v84 << v83);
  v85 = v13 ^ (2 * (a5 & v13));
  v86 = v49 & 0xE ^ 4;
  LODWORD(STACK[0x6368]) = v86;
  v87 = v49 & 0x10040011 ^ 0x10040001;
  LODWORD(STACK[0x6880]) = v87;
  v88 = (((v45 & v85) + 1765215600 - ((2 * (v45 & v85)) & 0xD26E1AE0)) ^ 0x69370D70) << v87 << v86;
  v89 = v37 & 0x14 ^ 4;
  LODWORD(STACK[0x6598]) = v89;
  LOBYTE(v13) = v37 & 0xB;
  LODWORD(STACK[0x6590]) = v37 & 0xB;
  LODWORD(STACK[0x6A50]) = ((v39 & v85) >> v89 >> (v37 & 0xB))
                         - 853721414
                         + (((v88 ^ 0x86A2A6E6) - 1270847580) ^ ((v88 ^ 0xECA89C8A) - 565551664) ^ ((v88 ^ 0x6A0A3A6C)
                                                                                                  + 1491663658));
  v90 = (2 * ((LODWORD(STACK[0x6638]) ^ 0x3614623F) & a6)
       + 1928530637
       - ((4 * ((LODWORD(STACK[0x6638]) ^ 0x3614623F) & a6)) & 0xE5E61598)) ^ LODWORD(STACK[0x6900]);
  LODWORD(STACK[0x6250]) = v72;
  LOBYTE(v89) = v74;
  LODWORD(STACK[0x6258]) = v74;
  v91 = v37 & 0xD ^ 4;
  LODWORD(STACK[0x64F0]) = v91;
  LODWORD(STACK[0x64E8]) = v37 & 0x12;
  LODWORD(STACK[0x66D0]) = ((v90 & v45) << v72 << v74) + ((v90 & v39) >> v91 >> (v37 & 0x12));
  v92 = LODWORD(STACK[0x6800]) ^ (2 * (a5 & STACK[0x6800]));
  v93 = v12 & 0x17 ^ 0x12;
  LODWORD(STACK[0x6568]) = v93;
  v94 = (v40 & v92) << v93;
  v95 = ~v70 & 8;
  LODWORD(STACK[0x6560]) = v95;
  v96 = v94 << v95;
  v97 = v37 & 0xF ^ 4;
  LODWORD(STACK[0x6388]) = v97;
  v98 = v37;
  LODWORD(STACK[0x6380]) = v37 & 0x10;
  LODWORD(STACK[0x6A40]) = ((v39 & v92) >> v97 >> (v37 & 0x10)) ^ v96;
  v99 = (2
       * (((LODWORD(STACK[0x69B0]) ^ 0x3F230B83) & a6 ^ 0x6B400)
        - ((2 * ((LODWORD(STACK[0x69B0]) ^ 0x3F230B83) & a6 ^ 0x6B400)) & 0x42A24938))
       - 1029551816) ^ 0xC2AF2138;
  v100 = (v99 + 524224420 - ((2 * v99) & 0x3E7E0F48)) ^ LODWORD(STACK[0x6708]);
  LOBYTE(v96) = v49 & 0x1E ^ 4;
  v101 = (STACK[0x6578] & 1) == 0;
  v102 = (STACK[0x6578] & 1) == 0;
  LODWORD(STACK[0x6320]) = v101;
  LODWORD(STACK[0x66C8]) = (((v100 & v47) >> v48) - 950636889 - ((2 * ((v100 & v47) >> v48)) & 0x8EACDD4E)) ^ 0xC7566EA7 ^ ((((v100 & v45) + 1884760272 - ((2 * (v100 & v45)) & 0xE0AE51A0)) ^ 0x705728D0) << v101 << v96);
  v103 = v22 ^ (2 * (a6 & v22));
  v104 = v49 & 7 ^ 5;
  LODWORD(STACK[0x6578]) = v104;
  v105 = (((v103 & v40) + 388691042 - ((2 * (v103 & v40)) & 0x2E55E8C4)) ^ 0x172AF462) << v104;
  v106 = LODWORD(STACK[0x6A30]) ^ (2 * (STACK[0x6A30] & a6));
  LODWORD(STACK[0x6A30]) = (((v105 ^ 0x6F590E8B) + 1790330579) ^ ((v105 ^ 0x19841EF6) + 476796592) ^ ((v105 ^ 0x76DD107D) + 1932679205))
                         + ((v47 & v103) >> LODWORD(STACK[0x6730]) >> LODWORD(STACK[0x6AB0]))
                         - 99567706;
  v107 = (((v106 & v45) + 556324894 - ((2 * (v106 & v45)) & 0x4251B03C)) ^ 0x2128D81E) << (v49 & 0x19 ^ 1) << (v49 & 6 ^ 4);
  v108 = v98 & 0x16 ^ 4;
  v109 = v98 & 9;
  LODWORD(STACK[0x66C0]) = ((v106 & v47) >> (v98 & 9) >> (v98 & 0x16 ^ 4))
                         - 834968113
                         + (((v107 ^ 0x4613F499) + 2010607274) ^ ((v107 ^ 0x9A727E1A) - 1414077397) ^ ((v107 ^ 0xDC618A83) - 307949388));
  v110 = v26 ^ (2 * (v26 & a6));
  v111 = (((v110 & v40) - 1650324219 - ((2 * (v110 & v40)) & 0x3B441A0A)) ^ 0x9DA20D05) << v102 << v96;
  v112 = (v110 & v39) >> (v98 & 0x16 ^ 4) >> (v98 & 9);
  LODWORD(STACK[0x6370]) = (v111 ^ 0x82360B9) & ~v112 | v112 & 0xF7DC9F46;
  v113 = LODWORD(STACK[0x6960]) ^ (2 * (STACK[0x6960] & a6));
  v114 = (v113 & v45) << v89 << v72;
  v115 = v98 & 0x1E ^ 4;
  LODWORD(STACK[0x6638]) = v115;
  LODWORD(STACK[0x6640]) = v98 & 1;
  LODWORD(STACK[0x66B8]) = v114 | ((v113 & v47) >> v115 >> (v98 & 1));
  v116 = LODWORD(STACK[0x6610]) ^ (2 * (a5 & STACK[0x6610]));
  v117 = LODWORD(STACK[0x6810]) ^ (2 * (a5 & STACK[0x6810]));
  LODWORD(STACK[0x6660]) = 262149;
  LODWORD(STACK[0x6200]) = (((((v40 & v116) + 1849960926 - ((2 * (v40 & v116)) & 0xDC8853BC)) ^ 0x6E4429DE) << (v49 & 0x1F ^ 5)) ^ 0x447A983C) & ~((v39 & v116) >> v48) | ((v39 & v116) >> v48) & 0xBB8567C3;
  v118 = LODWORD(STACK[0x6648]) ^ (2 * (a6 & STACK[0x6648]));
  LODWORD(STACK[0x6528]) = ((v118 & v39) >> LODWORD(STACK[0x6658])) | ((v118 & v40) << LODWORD(STACK[0x6588]) << LODWORD(STACK[0x6580]));
  v119 = STACK[0x6720] & 3 ^ 1;
  v120 = v49 & 0x1004001C ^ 0x10040004;
  LODWORD(STACK[0x6340]) = v120;
  LODWORD(STACK[0x6610]) = v119;
  LODWORD(STACK[0x67E0]) = (((((((v45 & v117) + 303739053 - ((2 * (v45 & v117)) & 0x2435615A)) ^ 0x121AB0AD) << (v49 & 0x1C ^ 4) << v119) ^ 0xCABDAC88) & ~((v47 & v117) >> v48) & 0x7D9E5ED9 | ((v47 & v117) >> v48) & 0x35025251) ^ 0x4D9C0ED8)
                         + (((((((v45 & v117) + 303739053 - ((2 * (v45 & v117)) & 0x2435615A)) ^ 0x121AB0AD) << (v49 & 0x1C ^ 4) << v119) ^ 0xCABDAC88) & ~((v47 & v117) >> v48) & 0x8261A126 | ((v47 & v117) >> v48) & 0x400126) ^ 0x400007);
  v121 = LODWORD(STACK[0x68C0]) ^ (2 * (a5 & STACK[0x68C0]));
  v122 = LODWORD(STACK[0x6650]) ^ (2 * (a6 & STACK[0x6650]));
  v123 = STACK[0x65C0] & 1;
  LODWORD(STACK[0x6650]) = v123;
  LODWORD(STACK[0x6648]) = v12 & 0x1E ^ 0x1A;
  LODWORD(STACK[0x6A20]) = ((v47 & v121) >> v48) + ((v40 & v121) << (v12 & 0x1E ^ 0x1A) << v123);
  v124 = LODWORD(STACK[0x67A0]) ^ (2 * (a6 & STACK[0x67A0]));
  v125 = (((v45 & v122) + 1154377739 - ((2 * (v45 & v122)) & 0x899CD016)) ^ 0x44CE680B) << (v49 & 0x1B ^ 1) << (~(_BYTE)v49 & 4);
  LODWORD(STACK[0x61F8]) = ((v122 & v39) >> LODWORD(STACK[0x6598]) >> v13)
                         - 1496847016
                         + (((v125 ^ 0x696AD617) + 810734423) ^ ((v125 ^ 0xEDAB8A2) + 1474477540) ^ ((v125 ^ 0x67B06EB5) + 1049127925));
  if (LODWORD(STACK[0x6680]))
    v126 = ~(LODWORD(STACK[0x65C8]) ^ a5);
  else
    v126 = STACK[0x65C8];
  v127 = LODWORD(STACK[0x65C8]) ^ (2 * (v126 & a5));
  LODWORD(STACK[0x6710]) = v108;
  LODWORD(STACK[0x6708]) = v109;
  v128 = ((((((v45 & v127) - 1221909212 - ((2 * (v45 & v127)) & 0x6E564A48)) ^ 0xB72B2524) << (v49 & 0x1A) << (~(_BYTE)v49 & 5)) ^ 0xE656F915) & ~((v47 & v127) >> v108 >> v109) | ((v47 & v127) >> v108 >> v109) & 0x19A906EA) ^ 0x10080242;
  LODWORD(STACK[0x61F0]) = ((2 * v128) | 0x82062ACC) - v128;
  v129 = LODWORD(STACK[0x66B0]) ^ (2 * (STACK[0x66B0] & a5));
  v130 = STACK[0x64F8];
  LODWORD(STACK[0x6A10]) = ((v124 & v40) << LODWORD(STACK[0x6500]) << v130) ^ ((v124 & v39) >> v48);
  v131 = STACK[0x6628];
  v132 = STACK[0x6630];
  LODWORD(STACK[0x6A00]) = ((v129 & v47) >> (v98 & 9) >> v108) | ((v129 & v45) << v131 << v132);
  v133 = LODWORD(STACK[0x6780]) ^ (2 * (a6 & STACK[0x6780]));
  v134 = (((v47 & v133) >> LODWORD(STACK[0x6490]) >> LODWORD(STACK[0x6498])) & 0xB8178830 | (((((v133 & v40)
                                                                                              + 1773809152
                                                                                              - ((2 * (v133 & v40)) & 0xD3745C00)) ^ 0x69BA2E00) << (v49 & 0x17 ^ 5)) ^ 0x47E877CF) & ~((v47 & v133) >> LODWORD(STACK[0x6490]) >> LODWORD(STACK[0x6498]))) ^ 0x8178830;
  LODWORD(STACK[0x6810]) = ((2 * v134) & 0x464CD54) - v134;
  v135 = LODWORD(STACK[0x67B0]) ^ (2 * (a5 & STACK[0x67B0]));
  v136 = (LODWORD(STACK[0x68D0]) ^ 0x496AD929) & a5 ^ 0x280C0268;
  v137 = v49 & 0x10040016 ^ 0x10040004;
  LODWORD(STACK[0x65B8]) = v137;
  v138 = STACK[0x6720];
  v139 = STACK[0x6720] & 9 ^ 1;
  LODWORD(STACK[0x65B0]) = v139;
  v140 = (((v40 & v135) + 46218751 - ((2 * (v40 & v135)) & 0x5827BFE)) ^ 0x2C13DFF) << v137 << v139;
  v141 = v98 & 0xE ^ 4;
  LODWORD(STACK[0x6358]) = v141;
  LODWORD(STACK[0x6350]) = v98 & 0x11;
  v142 = (((v47 & v135) >> v141 >> (v98 & 0x11)) & 0xE38675B0 | (v140 ^ 0x1C798A4F) & ~((v47 & v135) >> v141 >> (v98 & 0x11))) ^ 0x63005130;
  LODWORD(STACK[0x6800]) = 283066331 - (v142 | 0x10DF3FDB) + (v142 | 0xEF20C024);
  v143 = (2 * (((2 * v136) & 0x3E576598) - v136) - 1045915034) ^ 0x91B09EB6;
  v144 = LODWORD(STACK[0x69F0]) ^ (v143 - 1252080867 - ((2 * v143) & 0x6ABD8638));
  v145 = STACK[0x6638];
  v146 = ((((((v144 & v40) + 1487020926 - ((2 * (v144 & v40)) & 0xB14446FC)) ^ 0x58A2237E) << v119 << v120) ^ 0xB836AC5A) & ~((v144 & v47) >> (v98 & 1) >> v145) | ((v144 & v47) >> (v98 & 1) >> v145) & 0x47C953A5) ^ 0x1C900A0;
  LODWORD(STACK[0x6330]) = ((2 * v146) & 0x99E12F48) - v146;
  v147 = LODWORD(STACK[0x6700]) ^ (2 * (a6 & STACK[0x6700]));
  v148 = v138 & 0xB ^ 1;
  LODWORD(STACK[0x6700]) = v148;
  v149 = v49 & 0x10040014 ^ 0x10040004;
  v150 = (((v147 & v40) - 1240520381 - ((2 * (v147 & v40)) & 0x6C1E5286)) ^ 0xB60F2943) << v148 << v149;
  LODWORD(STACK[0x6570]) = v149;
  v151 = v98 & 0x17 ^ 4;
  LODWORD(STACK[0x62C8]) = v151;
  LODWORD(STACK[0x62D0]) = v98 & 8;
  LODWORD(STACK[0x69F0]) = (((v150 ^ 0x4D348EE8) - 387888444) ^ ((v150 ^ 0x8821784F) + 771013733) ^ ((v150 ^ 0xC515F6A7) + 1623208589))
                         + ((v47 & v147) >> (v98 & 8) >> v151)
                         + 1512717268;
  v152 = LODWORD(STACK[0x6910]) ^ (2 * (STACK[0x6910] & a6));
  LODWORD(STACK[0x69E0]) = ((v152 & v40) << v131 << v132) | ((v152 & v39) >> v48);
  v153 = LODWORD(STACK[0x6970]) ^ (2 * (STACK[0x6970] & a6));
  v154 = STACK[0x6740];
  v155 = STACK[0x6740] & 0xB ^ 0xA;
  LODWORD(STACK[0x65C0]) = v155;
  v156 = STACK[0x6750];
  v157 = STACK[0x6750] & 0x14 ^ 0x10;
  LODWORD(STACK[0x65C8]) = v157;
  LODWORD(STACK[0x69D0]) = ((v153 & v45) << v157 << v155) ^ ((v153 & v39) >> LODWORD(STACK[0x6AB0]) >> LODWORD(STACK[0x6730]));
  v158 = (2
        * (((LODWORD(STACK[0x68F0]) ^ 0x7AC7B0D4) & a6 ^ 0x87C0C608 | 0x74612170)
         - ((LODWORD(STACK[0x68F0]) ^ 0x7AC7B0D4) & a6 ^ 0x87C0C608 | 0xB9EDE8F))
        + 389922078) ^ 0xE743CEF0;
  v159 = (v158 + 406169576 - ((2 * v158) & 0x306B4FD0)) ^ LODWORD(STACK[0x69A0]);
  v160 = STACK[0x6650];
  LOBYTE(v157) = STACK[0x6648];
  LODWORD(STACK[0x69C0]) = ((v159 & v45) << v160 << v157) + ((v159 & v39) >> v48);
  v161 = a5;
  v162 = LODWORD(STACK[0x67C0]) ^ (2 * (a5 & STACK[0x67C0]));
  v163 = (LODWORD(STACK[0x6980]) ^ 0x20322297) & a5 ^ 0x12AAF1C4;
  v164 = LODWORD(STACK[0x64E0]) ^ (2 * (a6 & STACK[0x64E0]));
  LODWORD(STACK[0x69B0]) = ((v45 & v162) << v131 << v132) ^ ((v47 & v162) >> v48);
  v165 = (2 * (v163 + 1973597547 - ((2 * v163) & 0x6B456AD6))) ^ 0xCE10895E;
  v166 = (v165 + 1611367027 - ((2 * v165) & 0xC01704E4)) ^ LODWORD(STACK[0x6940]);
  v167 = (((v164 & v40) - 1756861651 - ((2 * (v164 & v40)) & 0x2E90D65A)) ^ 0x97486B2D) << LODWORD(STACK[0x6470]) << LODWORD(STACK[0x6478]);
  v168 = v98 & 0x1C ^ 4;
  LODWORD(STACK[0x64B0]) = v168;
  LODWORD(STACK[0x64A8]) = v98 & 3;
  LODWORD(STACK[0x61E8]) = ((v164 & v39) >> v168 >> (v98 & 3)) & 0x791842E5 | (v167 ^ 0x86E7BD1A) & ~((v164 & v39) >> v168 >> (v98 & 3));
  v169 = LODWORD(STACK[0x6550]) ^ (2 * (a6 & STACK[0x6550]));
  v170 = (((v45 & v166) - 1208978222 - ((2 * (v45 & v166)) & 0x6FE0E9A4)) ^ 0xB7F074D2) << (v49 & 0xF ^ LODWORD(STACK[0x6660]));
  v171 = v98 & 0x15 ^ 4;
  LODWORD(STACK[0x6468]) = v171;
  LODWORD(STACK[0x6460]) = v98 & 0xA;
  LODWORD(STACK[0x66B0]) = (((v166 & v39) >> (v98 & 0xA) >> v171)
                          + 1943651173
                          - ((2 * ((v166 & v39) >> (v98 & 0xA) >> v171)) & 0xE7B386CA)) ^ 0x73D9C365 ^ v170;
  v172 = v154 & 7 ^ 2;
  LODWORD(STACK[0x64E0]) = v172;
  v173 = ~v156 & 0x18;
  LODWORD(STACK[0x64D8]) = v173;
  LODWORD(STACK[0x6910]) = ((v47 & v169) >> v48) | ((v169 & v40) << v173 << v172);
  v174 = LODWORD(STACK[0x6820]) ^ (2 * (a5 & STACK[0x6820]));
  v175 = LODWORD(STACK[0x63D8]) ^ (2 * (a6 & STACK[0x63D8]));
  LODWORD(STACK[0x69A0]) = ((v47 & v174) >> v48) + ((v40 & v174) << v131 << v132);
  v176 = LODWORD(STACK[0x6990]) ^ (2 * (STACK[0x6990] & a5));
  v177 = LODWORD(STACK[0x6558]) ^ (2 * (a6 & STACK[0x6558]));
  v178 = v49 & 0x4001B ^ LODWORD(STACK[0x65A8]);
  LODWORD(STACK[0x6820]) = v178;
  v179 = ~v49 & 0x10000004;
  LODWORD(STACK[0x67B0]) = v179;
  v180 = (((v45 & v175) + 2000670578 - ((2 * (v45 & v175)) & 0xEE7F9EE4)) ^ 0x773FCF72) << v178 << v179;
  LOBYTE(v178) = STACK[0x6710];
  LOBYTE(v172) = STACK[0x6708];
  v181 = ((v180 ^ 0x64E71FC2) & ~((v175 & v39) >> v178 >> v172) | ((v175 & v39) >> v178 >> v172) & 0x9B18E03D) ^ 0x900200D;
  LODWORD(STACK[0x61E0]) = ((2 * v181) | 0x2D6C0472) - v181;
  LODWORD(STACK[0x6980]) = ((v39 & v176) >> v178 >> v172) + ((v40 & v176) << LODWORD(STACK[0x6500]) << v130);
  v182 = LODWORD(STACK[0x6950]) ^ (2 * (STACK[0x6950] & v161));
  v183 = (((v182 & v45) + 1034148563 - ((2 * (v182 & v45)) & 0x7B47B5A6)) ^ 0x3DA3DAD3) << LODWORD(STACK[0x6368]) << LODWORD(STACK[0x6880]);
  v184 = ((((((v45 & v177) + 113892591 - ((2 * (v45 & v177)) & 0xD93B9DE)) ^ 0x6C9DCEF) << LODWORD(STACK[0x68B0]) << LODWORD(STACK[0x68E0])) ^ 0x5EF2400A) & ~((v47 & v177) >> v48) | ((v47 & v177) >> v48) & 0xA10DBFF5) ^ 0xA105B044;
  LODWORD(STACK[0x61DC]) = v184 - ((2 * v184) & 0x1BC1E1E2);
  LODWORD(STACK[0x6990]) = (((v182 & v47) >> v48) - 40923334 - ((2 * ((v182 & v47) >> v48)) & 0xFB1F1E74)) ^ 0xFD8F8F3A ^ v183;
  v185 = LODWORD(STACK[0x66A8]) ^ (2 * (a6 & STACK[0x66A8]));
  v186 = (2 * (v161 & (LODWORD(STACK[0x6830]) ^ 0x6D1DD8F))
        - 2033066609
        - ((4 * (v161 & (LODWORD(STACK[0x6830]) ^ 0x6D1DD8F))) & 0xDA3BB1C)) ^ LODWORD(STACK[0x6830]);
  v187 = v40;
  LODWORD(STACK[0x6900]) = ((v185 & v39) >> LODWORD(STACK[0x6658])) | ((v185 & v40) << v160 << v157);
  v188 = (((v47 & v186) >> v145 >> LODWORD(STACK[0x6640])) & 0x3A98CB28 | (((((v40 & v186)
                                                                            - 1912670913
                                                                            - ((2 * (v40 & v186)) & 0x1BFDEA7E)) ^ 0x8DFEF53F) << v149 << LODWORD(STACK[0x6700])) ^ 0xC56734D7) & ~((v47 & v186) >> v145 >> LODWORD(STACK[0x6640]))) ^ 0x12108228;
  LODWORD(STACK[0x67C0]) = ((2 * v188) | 0xBAD26C2C) - v188;
  v189 = LODWORD(STACK[0x65A0]) ^ (2 * (a6 & STACK[0x65A0]));
  v190 = LODWORD(STACK[0x63A8]) ^ (2 * (STACK[0x63A8] & a6));
  v191 = v154 & 0x1F ^ 0x1A;
  LODWORD(STACK[0x6110]) = v191;
  LODWORD(STACK[0x68F0]) = ((v45 & v189) << v191) + ((v189 & v39) >> v48);
  LODWORD(STACK[0x6310]) = v49 & 0x1A;
  LODWORD(STACK[0x65A0]) = 268697605;
  v192 = ~v49 & 0x10040005;
  LODWORD(STACK[0x6308]) = v192;
  v193 = (((v190 & v45) + 645657723 - ((2 * (v190 & v45)) & 0x4CF7E8F6)) ^ 0x267BF47B) << (v49 & 0x1A) << v192;
  v194 = LODWORD(STACK[0x6620]) ^ (2 * (v161 & STACK[0x6620]));
  v195 = STACK[0x6730];
  v196 = STACK[0x6AB0];
  LODWORD(STACK[0x6970]) = ((v190 & v39) >> v195 >> v196)
                         - 1477655051
                         + (((v193 ^ 0x74A3E793) + 749788570) ^ ((v193 ^ 0x1982F92F) + 1100071718) ^ ((v193 ^ 0x6D211EBC) + 892478647));
  v197 = STACK[0x67D0];
  v198 = STACK[0x6750];
  v199 = STACK[0x6750] & 0x15 ^ 0x10;
  LODWORD(STACK[0x6550]) = v199;
  v200 = ~v154 & 0xA;
  LODWORD(STACK[0x6558]) = v200;
  LODWORD(STACK[0x66A8]) = ((v47 & v194) >> v48) + ((v187 & v194) << v200 << v199);
  v201 = (2 * ((a6 & (v197 ^ 0x6D1DD8F) & 0x24B6DCF3 ^ 0x4865C43) + (a6 & (v197 ^ 0x6D1DD8F) & 0x5B49230C ^ 0x2012001))
        - 2) ^ 0xD0EF886;
  v202 = (v201 - 2033066609 - ((2 * v201) & 0xDA3BB1C)) ^ v197;
  v203 = LODWORD(STACK[0x63C8]) ^ (2 * (v161 & STACK[0x63C8]));
  LODWORD(STACK[0x6960]) = ((((v202 & v187) - 1289508149 - ((2 * (v202 & v187)) & 0x66475596)) ^ 0xB323AACB) << LODWORD(STACK[0x6578])) ^ 0x19F288DC ^ (((v47 & v202) >> LODWORD(STACK[0x64E8]) >> LODWORD(STACK[0x64F0])) + 435325148 - ((2 * ((v47 & v202) >> LODWORD(STACK[0x64E8]) >> LODWORD(STACK[0x64F0]))) & 0x33E511B8));
  v204 = LODWORD(STACK[0x6840]) ^ (2 * (a6 & (LODWORD(STACK[0x6840]) ^ 0x2535EB91)));
  v205 = v45;
  LOBYTE(v200) = STACK[0x6560];
  v206 = STACK[0x6568];
  LODWORD(STACK[0x68E0]) = ((v45 & v203) << v200 << v206) ^ ((v39 & v203) >> v48);
  v207 = v45 & (v204 ^ 0xAAEBB435);
  v208 = STACK[0x6860];
  v209 = LODWORD(STACK[0x63F0]) ^ (2 * (v161 & STACK[0x63F0]));
  v210 = v49 & 0x1000001F ^ 0x10000005;
  LODWORD(STACK[0x6228]) = v210;
  LODWORD(STACK[0x6620]) = 268435461;
  v211 = (((v187 & v209) + 355622471 - ((2 * (v187 & v209)) & 0x2A64BC8E)) ^ 0x15325E47) << v210;
  v212 = ((((v204 ^ 0x2535EB91) & v39 & 0x1E23411F ^ 0x1C23411E)
         + ((v204 ^ 0x2535EB91) & v39 ^ 0x83003481)
         - (((v204 ^ 0x2535EB91) & v39 ^ 0x83003481) & 0x1E23411F)) ^ 0x9D23759E) >> LODWORD(STACK[0x64A8]) >> LODWORD(STACK[0x64B0]);
  v213 = ~v154 & 0x1A;
  LODWORD(STACK[0x6368]) = v213;
  LODWORD(STACK[0x6360]) = v198 & 5;
  LODWORD(STACK[0x6950]) = (((v208 & 0x8FDE5FA4 | v207) ^ 0x8FDE5FA4) << v213 << (v198 & 5)) + v212;
  v214 = LODWORD(STACK[0x6390]) ^ (2 * (STACK[0x6390] & v161));
  v215 = v49 & 0x15 ^ 5;
  LODWORD(STACK[0x6290]) = v215;
  v216 = (((v214 & v45) - 1836782401 - ((2 * (v214 & v45)) & 0x2509D97E)) ^ 0x9284ECBF) << v215;
  v217 = STACK[0x6720] & 0xA;
  LODWORD(STACK[0x6108]) = v217;
  LODWORD(STACK[0x6940]) = (((v214 & v47) >> v48) - 1512708936 - ((2 * ((v214 & v47) >> v48)) & 0x4BABC970)) ^ 0xA5D5E4B8 ^ (v216 << v217);
  LODWORD(STACK[0x68D0]) = (((v211 ^ 0x6B527762) + 1336570949) ^ ((v211 ^ 0xA19069BB) - 2056754530) ^ ((v211 ^ 0xCAC21ED9) - 298181120))
                         + ((v47 & v209) >> v48)
                         - 620233511;
  v218 = LODWORD(STACK[0x63E0]) ^ (2 * (a6 & STACK[0x63E0]));
  v219 = a6;
  v220 = LODWORD(STACK[0x6398]) ^ (2 * (STACK[0x6398] & a6));
  LODWORD(STACK[0x68C0]) = ((v218 & v39) >> LODWORD(STACK[0x6710]) >> LODWORD(STACK[0x6708])) ^ ((v218 & v187) << LODWORD(STACK[0x6618]) << LODWORD(STACK[0x6670]));
  v221 = ((v47 & v220) >> v195 >> v196) | ((v45 & v220) << v191);
  v222 = LODWORD(STACK[0x6410]) ^ (2 * (v161 & STACK[0x6410]));
  v223 = v161;
  v224 = (2
        * ((v161 & (LODWORD(STACK[0x6850]) ^ 0x2535EB91) & 0x200663B7 ^ 0x66300)
         + (v161 & (LODWORD(STACK[0x6850]) ^ 0x2535EB91) & 0x5FF99C48 ^ 0x7C08C01))
        - 2) ^ LODWORD(STACK[0x6850]);
  v225 = v49 & 0x1C ^ 4;
  LODWORD(STACK[0x62E8]) = v225;
  LODWORD(STACK[0x68B0]) = (((v39 & v222) >> v48) - 1067160672 - ((2 * ((v39 & v222) >> v48)) & 0x80C8D740)) ^ 0xC0646BA0 ^ ((((v187 & v222) + 1183918530 - ((2 * (v187 & v222)) & 0x8D225384)) ^ 0x469129C2) << LODWORD(STACK[0x6610]) << v225);
  v226 = (((v208 & 0x697A70EB | v45 & (v224 ^ 0x43C2457A)) ^ 0x697A70EB) << v200 << v206)
       + ((v47 & (v224 ^ 0x2AB83591)) >> v196 >> v195);
  v227 = LODWORD(STACK[0x6418]) ^ (2 * (a6 & STACK[0x6418]));
  v228 = v187;
  v229 = ((((((v227 & v187) + 723036552 - ((2 * (v227 & v187)) & 0x56315310)) ^ 0x2B18A988) << (v49 & 7 ^ 5)) ^ 0x77364188) & ~((v227 & v39) >> v48) | ((v227 & v39) >> v48) & 0x88C9BE77) ^ 0x880AA16;
  LODWORD(STACK[0x61D0]) = 486409732 - (v229 | 0x1CFE0604) + (v229 | 0xE301F9FB);
  v230 = LODWORD(STACK[0x6890]) ^ (2 * (STACK[0x6890] & a6));
  v231 = LODWORD(STACK[0x63F8]) ^ (2 * (v161 & STACK[0x63F8]));
  v232 = LODWORD(STACK[0x65E0]) ^ (2 * (STACK[0x65E0] & a6));
  v233 = (((((v230 & v187) + 1711373189 - ((2 * (v230 & v187)) & 0xCC02F70A)) ^ 0x66017B85) << LODWORD(STACK[0x67B0]) << LODWORD(STACK[0x6820])) ^ 0x296451F3) & ~((v230 & v39) >> v48) | ((v230 & v39) >> v48) & 0xD69BAE0C;
  LOBYTE(v225) = STACK[0x6550];
  LOBYTE(v161) = STACK[0x6558];
  LODWORD(STACK[0x6880]) = ((v45 & v231) << v225 << v161)
                         + ((v47 & v231) >> LODWORD(STACK[0x6490]) >> LODWORD(STACK[0x6498]));
  v234 = LODWORD(STACK[0x6430]) ^ (2 * (v223 & STACK[0x6430]));
  v235 = v49;
  LOBYTE(v230) = v49 & 0xD ^ LODWORD(STACK[0x6660]);
  v236 = (((v187 & v234) + 1681012751 - ((2 * (v187 & v234)) & 0xC864701E)) ^ 0x6432380F) << v230 << (v49 & 0x12);
  v237 = LODWORD(STACK[0x68A0]) ^ (2 * (STACK[0x68A0] & v223));
  v238 = ((v45 & v232) << LODWORD(STACK[0x6630]) << LODWORD(STACK[0x6628])) | ((v232 & v39) >> v48);
  LODWORD(STACK[0x65E0]) = ((v47 & v234) >> LODWORD(STACK[0x6640]) >> LODWORD(STACK[0x6638]))
                         + 427066488
                         + (((v236 ^ 0x6CD7CADC) - 1973639702) ^ ((v236 ^ 0x648DBCEF) - 2113481765) ^ ((v236 ^ 0x85A7633) - 288286457));
  v239 = (((v237 & v187) - 293756511 - ((2 * (v237 & v187)) & 0xDCFB4342)) ^ 0xEE7DA1A1) << LODWORD(STACK[0x6700]) << (v49 & 0x14 ^ 4);
  v240 = LODWORD(STACK[0x63C0]) ^ (2 * (v219 & STACK[0x63C0]));
  v241 = (v237 & v47) >> LODWORD(STACK[0x67F0]) >> LODWORD(STACK[0x6870]);
  v242 = LODWORD(STACK[0x65E8]) ^ (2 * (STACK[0x65E8] & v219));
  v243 = v241
       + 502121527
       + (((v239 ^ 0x539890EE) - 1316312281) ^ ((v239 ^ 0x7E8D29C2) - 1667296757) ^ ((v239 ^ 0x2D15B92C) - 821591323));
  v244 = v225;
  LODWORD(STACK[0x6850]) = ((v45 & v240) << v161 << v225) | ((v240 & v39) >> v48);
  v245 = LODWORD(STACK[0x63E8]) ^ (2 * (v223 & STACK[0x63E8]));
  v246 = ((v47 & v242) >> v48) | ((v242 & v187) << LODWORD(STACK[0x6500]) << LODWORD(STACK[0x64F8]));
  v247 = (((v205 & v245) - 332437734 - ((2 * (v205 & v245)) & 0xD85ECE34)) ^ 0xEC2F671A) << (v49 & 0x12) << v230;
  LOBYTE(v191) = STACK[0x6350];
  LOBYTE(v236) = STACK[0x6358];
  LODWORD(STACK[0x6830]) = ((v39 & v245) >> v191 >> v236)
                         - 1061320313
                         + (((v247 ^ 0xD484A776) - 339291889) ^ ((v247 ^ 0x5566872) + 974396939) ^ ((v247 ^ 0xD1D2CF04)
                                                                                                  - 292505219));
  v248 = STACK[0x6760];
  v249 = STACK[0x6770];
  LODWORD(STACK[0x6820]) = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x63A0]);
  v250 = LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x6840]) = v246;
  v251 = v250 ^ v246 ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x68A0]) = v221;
  v252 = v251 ^ v221 ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x6870]) = v238;
  v253 = v252 ^ LODWORD(STACK[0x69B0]) ^ v238 ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6960]);
  LODWORD(STACK[0x6890]) = v226;
  v254 = v253 ^ LODWORD(STACK[0x6950]) ^ v226 ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x69D0]);
  v255 = (LODWORD(STACK[0x6810]) + 2110626133) ^ 0x323266AA;
  v256 = LODWORD(STACK[0x6800]) ^ 0x90591B5B;
  v257 = (LODWORD(STACK[0x67C0]) - 1567176214) ^ 0x8A1E80E9;
  LODWORD(STACK[0x6800]) = v255;
  LODWORD(STACK[0x67F0]) = v256;
  LODWORD(STACK[0x6810]) = v257;
  v258 = v254 ^ v255 ^ v256 ^ v257;
  v259 = (LODWORD(STACK[0x67E0]) - 1) ^ 0x8761A256;
  v260 = LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x67E0]) = v259;
  v261 = v258 ^ v260 ^ v259 ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x66B8]);
  v262 = LODWORD(STACK[0x6370]) ^ 0x82360B9;
  v263 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6970]);
  LODWORD(STACK[0x67D0]) = v262;
  v264 = v261 ^ v263 ^ v262 ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x66D0]);
  v265 = ((v233 ^ 0x96902604) - (v233 & 0x610DD9B9) + (v233 & 0x610DD9B9 ^ 0x610DD9B9)) ^ 0xDEF9AE4E;
  LODWORD(STACK[0x6860]) = v243;
  LODWORD(STACK[0x67C0]) = v265;
  LODWORD(STACK[0x6430]) = v264 ^ v243 ^ v265 ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x69C0]);
  v266 = STACK[0x6600];
  v267 = STACK[0x65F8];
  LODWORD(STACK[0x67B0]) = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x63B0]) ^ LODWORD(STACK[0x6790]);
  v268 = v266 - ((2 * v266) & 0xC17EE0FA);
  v269 = v266 ^ LODWORD(STACK[0x6440]);
  v270 = v266 ^ LODWORD(STACK[0x6400]);
  LODWORD(STACK[0x67A0]) = v269 ^ v267;
  LODWORD(STACK[0x6790]) = v270 ^ v267;
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x6378]) ^ 0x9FFEA1C0 ^ (v268 - 524324739);
  v271 = LODWORD(STACK[0x6450]) ^ (2 * (v219 & STACK[0x6450]));
  v272 = LODWORD(STACK[0x6448]) ^ (2 * (v223 & STACK[0x6448]));
  v273 = v249 ^ LODWORD(STACK[0x63D0]);
  LODWORD(STACK[0x6770]) = v249 ^ LODWORD(STACK[0x6408]) ^ v248;
  LODWORD(STACK[0x6760]) = v273 ^ v248;
  v274 = LODWORD(STACK[0x6458]) ^ (2 * (v223 & STACK[0x6458]));
  v275 = v39;
  v276 = STACK[0x6678];
  v277 = ~LODWORD(STACK[0x6678]) & 4;
  LODWORD(STACK[0x6328]) = v277;
  LODWORD(STACK[0x6318]) = v276 & 0x1B;
  v278 = ((v271 & v39) >> v277 >> (v276 & 0x1B))
       - 910995185
       - ((2 * ((v271 & v39) >> v277 >> (v276 & 0x1B))) & 0x9366A21E);
  v279 = (v271 & v228) - 2019252054 + (~(2 * (v271 & v228)) | 0xF0B6AEAB) + 1;
  v280 = v49 & 0x1000001C ^ 0x10000004;
  LODWORD(STACK[0x6378]) = v280;
  LOBYTE(v221) = STACK[0x6610];
  LODWORD(STACK[0x6458]) = v278 ^ ((v279 ^ 0x87A4A8AA) << v280 << v221);
  v281 = LODWORD(STACK[0x6698]) ^ (2 * (v223 & STACK[0x6698]));
  LODWORD(STACK[0x6418]) = v49 & 0x1004001A ^ 0x10040000;
  v282 = ~v49 & 5;
  LODWORD(STACK[0x6410]) = v282;
  LODWORD(STACK[0x6450]) = (((v39 & v274) >> v236 >> v191)
                          - 938021753
                          - ((2 * ((v39 & v274) >> v236 >> v191)) & 0x902DD90E)) ^ 0xC816EC87 ^ ((((v205 & v274)
                                                                                                 + 1564487298
                                                                                                 - ((2 * (v205 & v274)) & 0xBA805D04)) ^ 0x5D402E82) << (v49 & 0x1A) << v282);
  v283 = (v205 & v281) << LODWORD(STACK[0x6580]) << LODWORD(STACK[0x6588]);
  v284 = LODWORD(STACK[0x6510]) ^ (2 * (v219 & STACK[0x6510]));
  v285 = (((v284 & v228) - 963914808 - ((2 * (v284 & v228)) & 0x8D17A790)) ^ 0xC68BD3C8) << LODWORD(STACK[0x6578]);
  LODWORD(STACK[0x6448]) = ((v205 & v272) << LODWORD(STACK[0x65C0]) << LODWORD(STACK[0x65C8])) | ((v47 & v272) >> v48);
  LOBYTE(v236) = v48;
  LODWORD(STACK[0x6408]) = v283 | ((v47 & v281) >> v48);
  LODWORD(STACK[0x6400]) = v285 ^ 0xBB59EED7 ^ (((v284 & v39) >> LODWORD(STACK[0x64E8]) >> LODWORD(STACK[0x64F0]))
                                              - 1151734057
                                              - ((2 * ((v284 & v39) >> LODWORD(STACK[0x64E8]) >> LODWORD(STACK[0x64F0]))) & 0x76B3DDAE));
  v286 = LODWORD(STACK[0x6530]) ^ (2 * (v219 & STACK[0x6530]));
  LODWORD(STACK[0x65F8]) = (((((v205 & v286) + 416731206 - ((2 * (v205 & v286)) & 0x31ADA08C)) ^ 0x18D6D046) << LODWORD(STACK[0x65B0]) << LODWORD(STACK[0x65B8])) ^ 0xF911D82D) & ~((v47 & v286) >> v48) | ((v47 & v286) >> v48) & 0x6EE27D2;
  v287 = LODWORD(STACK[0x6480]) ^ (2 * (v223 & STACK[0x6480]));
  v288 = v276 & 0xC ^ 4;
  LODWORD(STACK[0x6698]) = v288;
  LODWORD(STACK[0x6600]) = v276 & 0x13;
  LODWORD(STACK[0x6440]) = ((v39 & v287) >> v288 >> (v276 & 0x13)) ^ ((v228 & v287) << v161 << v244);
  v289 = LODWORD(STACK[0x6438]) ^ (2 * (v219 & STACK[0x6438]));
  v290 = (((v205 & v289) - 970404633 - ((2 * (v205 & v289)) & 0x8C5199CE)) ^ 0xC628CCE7) << (v49 & 0x1D ^ LODWORD(STACK[0x6620]));
  LOBYTE(v285) = v276 & 0x18;
  LOBYTE(v288) = v276 & 7 ^ 4;
  v291 = ((v47 & v289) >> (v276 & 0x18) >> v288)
       - 487554548
       - ((2 * ((v47 & v289) >> (v276 & 0x18) >> v288)) & 0xC5E10418);
  v292 = STACK[0x6720] & 2;
  LODWORD(STACK[0x6588]) = v292;
  LODWORD(STACK[0x63F8]) = v291 ^ 0xE2F0820C ^ (v290 << v292);
  v293 = LODWORD(STACK[0x6668]) ^ (2 * (v223 & STACK[0x6668]));
  LOBYTE(v282) = STACK[0x6740];
  v294 = STACK[0x6740] & 0xE ^ 0xA;
  v295 = STACK[0x6750];
  v296 = STACK[0x6750] & 0x11 ^ 0x10;
  LODWORD(STACK[0x63F0]) = ((v228 & v293) << v294 << v296) | ((v39 & v293) >> v48);
  v297 = LODWORD(STACK[0x6518]) ^ (2 * (v219 & STACK[0x6518]));
  LODWORD(STACK[0x6438]) = ((v205 & v297) << (v295 & 0xC ^ 8) << (v282 & 0x13 ^ 0x12)) | ((v297 & v39) >> v48);
  v298 = LODWORD(STACK[0x6548]) ^ (2 * (v223 & STACK[0x6548]));
  v299 = (2 * (v223 & (LODWORD(STACK[0x66A0]) ^ 0x40290148))
        - 1866946297
        - ((4 * (v223 & (LODWORD(STACK[0x66A0]) ^ 0x40290148))) & 0x2171520C)) ^ LODWORD(STACK[0x6538]);
  LOBYTE(v297) = v49 & 0x1C ^ 4;
  v300 = (((v228 & v298) + 795239852 - ((2 * (v228 & v298)) & 0x5ECCCB58)) ^ 0x2F6665AC) << v221 << v297;
  v301 = LODWORD(STACK[0x6520]) ^ (2 * (v219 & STACK[0x6520]));
  v302 = (((v205 & v301) + 1103296663 - ((2 * (v205 & v301)) & 0x8385F12E)) ^ 0x41C2F897) << (v49 & 7 ^ LODWORD(STACK[0x65A0]));
  LODWORD(STACK[0x63E8]) = ((v47 & v299) >> v48) ^ ((v228 & v299) << LODWORD(STACK[0x64E0]) << LODWORD(STACK[0x64D8]));
  LODWORD(STACK[0x63E0]) = (((v300 ^ 0xAE5ACA60) + 571752856) ^ ((v300 ^ 0xEC1564F4) + 1616637700) ^ ((v300 ^ 0x424FAE94) - 838785692))
                         + ((v47 & v298) >> LODWORD(STACK[0x6730]) >> LODWORD(STACK[0x6AB0]))
                         + 1941009416;
  LODWORD(STACK[0x63D8]) = ((v301 & v39) >> LODWORD(STACK[0x6460]) >> LODWORD(STACK[0x6468]))
                         - 398867592
                         + (((v302 ^ 0xEAB9743E) - 41989958) ^ ((v302 ^ 0x3B7EC482) + 750319622) ^ ((v302 ^ 0xD1C7B0BC)
                                                                                                  - 972977092));
  v303 = LODWORD(STACK[0x66F8]) ^ (2 * (v223 & STACK[0x66F8]));
  v304 = (((v205 & v303) + 1579602711 - ((2 * (v205 & v303)) & 0xBC4DA62E)) ^ 0x5E26D317) << (v235 & 0x11 ^ 1) << (v235 & 0xE ^ 4);
  v305 = LODWORD(STACK[0x6540]) ^ (2 * (v219 & STACK[0x6540]));
  LODWORD(STACK[0x63D0]) = ((v47 & v303) >> v48)
                         - 649454759
                         + (((v304 ^ 0xAFBD905D) - 1995934468) ^ ((v304 ^ 0x56C94A52) + 1887219445) ^ ((v304 ^ 0xF974DA0F) - 540983638));
  LODWORD(STACK[0x63C8]) = ((v305 & v39) >> v288 >> v285)
                         + ((v305 & v228) << LODWORD(STACK[0x6670]) << LODWORD(STACK[0x6618]));
  v306 = (unsigned __int8 *)STACK[0x6AA0];
  v307 = STACK[0x64B8];
  v308 = STACK[0x64C0];
  v309 = STACK[0x64C8];
  v310 = (*(_BYTE *)(STACK[0x64C0] + (*(unsigned __int8 *)STACK[0x6AA0] ^ 0x4ALL)) - 1);
  v311 = (((*(_BYTE *)(v307 + (v306[10] ^ 0xDBLL)) + (v306[10] ^ 0xF8)) ^ 0xC5) << 8) | ((((*(_BYTE *)(v308 + (v306[9] ^ 0x82)) - 1) ^ ((*(_BYTE *)(v308 + (v306[9] ^ 0x82)) - 1) >> 6) ^ ((*(_BYTE *)(v308 + (v306[9] ^ 0x82)) - 1) >> 4)) ^ 0x7A) << 16) | (((*(unsigned __int8 *)(v307 + (v306[8] ^ 0x7CLL)) + (v306[8] ^ 0x5F)) ^ 0x4E) << 24) | *(unsigned __int8 *)(STACK[0x64C8] + (v306[11] ^ 0xCLL)) ^ 0xB8;
  v312 = *(unsigned __int8 *)(STACK[0x64D0] + (v306[7] ^ 0x8BLL)) ^ ((v306[7] ^ 0x2C) + 11) ^ 0x99 | ((*(unsigned __int8 *)(v309 + (v306[4] ^ 0xF3)) ^ 0xFFFFFFFD) << 24) | ((*(unsigned __int8 *)(v309 + (v306[5] ^ 0xD3)) ^ 0x1E) << 16) | ((((v306[6] ^ 0x5E) + 11) ^ 0xCE ^ *(unsigned __int8 *)(STACK[0x64D0] + (v306[6] ^ 0xF9))) << 8);
  v313 = ((*(_BYTE *)(v308 + (v306[3] ^ 0x80)) - 1) ^ ((*(_BYTE *)(v308 + (v306[3] ^ 0x80))
                                                                                          - 1) >> 6) ^ ((*(_BYTE *)(v308 + (v306[3] ^ 0x80)) - 1) >> 4)) ^ 0x25 | (((*(unsigned __int8 *)(v308 + (*v306 ^ 0x4ALL)) - 1) ^ (v310 >> 6) ^ (v310 >> 4) ^ 0xB6) << 24) | ((((v306[2] ^ 0x8E) + *(_BYTE *)(STACK[0x64B8] + (v306[2] ^ 0xADLL))) ^ 0xEF) << 8) | ((((*(_BYTE *)(v308 + (v306[1] ^ 0x77)) - 1) ^ ((*(_BYTE *)(v308 + (v306[1] ^ 0x77)) - 1) >> 6) ^ ((*(_BYTE *)(v308 + (v306[1] ^ 0x77)) - 1) >> 4)) ^ 0x45) << 16);
  v314 = (*(_BYTE *)(STACK[0x64C0] + (*(unsigned __int8 *)(STACK[0x6AA0] + 12) ^ 0x8FLL)) - 1);
  v315 = *(unsigned __int8 *)(v309 + (v306[15] ^ 0xF9)) ^ 0x87 | ((((v306[14] ^ 0xA) + 11) ^ 0x58 ^ *(unsigned __int8 *)(STACK[0x64D0] + (v306[14] ^ 0xADLL))) << 8) | ((*(unsigned __int8 *)(v309 + (v306[13] ^ 0x4CLL)) ^ 0x3A) << 16) | (((*(unsigned __int8 *)(STACK[0x64C0] + (v306[12] ^ 0x8FLL)) - 1) ^ (v314 >> 6) ^ (v314 >> 4) ^ 3) << 24);
  v316 = v219;
  LOBYTE(v306) = STACK[0x6490];
  v317 = STACK[0x6498];
  LODWORD(STACK[0x6578]) = (((v312 ^ (2 * (v312 & v219))) & v228) << LODWORD(STACK[0x6568]) << LODWORD(STACK[0x6560])) ^ (((v312 ^ (2 * (v312 & v219))) & v275) >> (char)v306 >> v317);
  LODWORD(STACK[0x6678]) = ((((v313 ^ (2 * (v313 & v223))) & v47) >> v236)
                          - 559325416
                          - ((2 * (((v313 ^ (2 * (v313 & v223))) & v47) >> v236)) & 0xBD52BE30)) ^ 0xDEA95F18 ^ (((((v313 ^ (2 * (v313 & v223))) & v205) - 209422773 - ((2 * ((v313 ^ (2 * (v313 & v223))) & v205)) & 0xE708EC96)) ^ 0xF384764B) << v297 << v221);
  LODWORD(v309) = v228;
  v318 = v275;
  LOBYTE(v243) = STACK[0x6658];
  LODWORD(STACK[0x65E8]) = ((((v311 ^ (2 * (v311 & v223))) & v275) >> v243)
                          + 881477233
                          - ((2 * (((v311 ^ (2 * (v311 & v223))) & v275) >> v243)) & 0x69148CE2)) ^ 0x348A4671 ^ (((((v311 ^ (2 * (v311 & v223))) & v228) + 1410640676 - ((2 * ((v311 ^ (2 * (v311 & v223))) & v228)) & 0xA8295648)) ^ 0x5414AB24) << (v235 & 0x1F ^ 5));
  LODWORD(STACK[0x6668]) = (((v315 ^ (2 * (v315 & v316))) & v205) << LODWORD(STACK[0x6650]) << LODWORD(STACK[0x6648]))
                         + (((v315 ^ (2 * (v315 & v316))) & v47) >> v236);
  LODWORD(STACK[0x63C0]) = v235 & 0x40011 ^ LODWORD(STACK[0x65A8]);
  v319 = STACK[0x62D8];
  v320 = STACK[0x62D8] & 0xD57D355A ^ 0xEABE9AAD;
  v321 = v235 & 0x4000C ^ 0x40004;
  v322 = v235 & 0x10000013 ^ 0x10000001;
  LODWORD(STACK[0x6580]) = v321;
  v323 = (((v205 & v320) - 1797102106 - ((2 * (v205 & v320)) & 0x29C44BCC)) ^ 0x94E265E6) << v321 << v322;
  LODWORD(STACK[0x6568]) = v322;
  LOBYTE(v275) = STACK[0x6598];
  v324 = (v47 & v320) >> LODWORD(STACK[0x6590]) >> v275;
  v325 = ((v323 ^ 0x4F0B9241) & ~v324 | v324 & 0xB0F46DBE) ^ 0xA00432;
  LODWORD(STACK[0x66A0]) = ((2 * v325) & 0xB0A00904) - v325;
  LODWORD(v307) = 33686018 * LODWORD(STACK[0x6680]);
  v326 = v307 & 0xD57D355A ^ 0xEABE9AAD;
  LOBYTE(v316) = STACK[0x6368];
  LOBYTE(v314) = STACK[0x6360];
  v327 = (v326 & v318) >> v236;
  LODWORD(STACK[0x63B8]) = ((v326 & v309) << v316 << v314) + v327;
  LODWORD(STACK[0x63B0]) = ((v205 & v326) << v316 << v314) + v327;
  v328 = (((v309 & v320) - 1532965105 - ((2 * (v309 & v320)) & 0x49411E1E)) ^ 0xA4A0CF0F) << v321 << (v235 & 0x13 ^ 1);
  LODWORD(STACK[0x63A8]) = (((v328 ^ 0xC5B85759) + 244600453) ^ ((v328 ^ 0x9F77AF45) + 1415296665) ^ ((v328 ^ 0x5ACFF81C) - 1847336510))
                         + v324
                         + 886302242;
  v329 = v319 & 0x30EAAE32 ^ 0x18755719;
  v330 = (((((v205 & v329) + 560562755 - ((2 * (v205 & v329)) & 0x40D30406)) ^ 0x21698243) << LODWORD(STACK[0x6470]) << LODWORD(STACK[0x6478])) ^ 0x525238FF) & ~((v47 & v329) >> LODWORD(STACK[0x6710]) >> LODWORD(STACK[0x6708])) | ((v47 & v329) >> LODWORD(STACK[0x6710]) >> LODWORD(STACK[0x6708])) & 0x2DADC700;
  LODWORD(STACK[0x63A0]) = (v330 & 0x50E78E83 ^ 0x50E20A83) + (v330 ^ 0x250DC400) - ((v330 ^ 0x250DC400) & 0x50E78E83);
  v331 = v307 & 0x30EAAE32 ^ 0x18755719;
  LODWORD(STACK[0x65A8]) = v331;
  v332 = ((v331 & v309) - 911466059 - ((2 * (v331 & v309)) & 0x11584262)) ^ 0xC9AC21B5;
  LODWORD(STACK[0x6398]) = v332 << v314 << v316;
  LODWORD(STACK[0x6390]) = ((((v332 << LODWORD(STACK[0x6700]) << LODWORD(STACK[0x6570])) ^ 0xB7B8AF83) + 489408506) ^ (((v332 << LODWORD(STACK[0x6700]) << LODWORD(STACK[0x6570])) ^ 0x52475992) - 120311319) ^ (((v332 << LODWORD(STACK[0x6700]) << LODWORD(STACK[0x6570])) ^ 0xE5FFF611) + 1332518508))
                         + ((v47 & v331) >> v236)
                         + 1433180037;
  LODWORD(STACK[0x6388]) = (((v319 & 0x30EAAE32 ^ v205 ^ 0x208AA822) & v329) << (STACK[0x6750] & 0x19 ^ 0x18) << (STACK[0x6740] & 6 ^ 2))
                         + ((v318 & v329) >> LODWORD(STACK[0x6380]) >> LODWORD(STACK[0x6388]));
  v333 = v307 & 0xC423CD5C ^ 0x6211E6AE;
  v334 = (((v205 & v333) - 965802446 - ((2 * (v205 & v333)) & 0x8C460C64)) ^ 0xC66F0632) << LODWORD(STACK[0x6378]) << v221;
  LODWORD(STACK[0x6380]) = ((v47 & v333) >> v236)
                         - 2078982186
                         + (((v334 ^ 0xAFE8E6BF) - 738056553) ^ ((v334 ^ 0x97C84947) - 333280913) ^ ((v334 ^ 0x3820AFF8) + 1137340370));
  LOBYTE(v321) = STACK[0x6628];
  LOBYTE(v191) = STACK[0x6630];
  LODWORD(STACK[0x6378]) = ((v333 & v309) << v321 << v191) + ((v333 & v318) >> v236);
  v335 = v319 & 0xC423CD5C ^ 0x6211E6AE;
  LODWORD(STACK[0x6720]) = v335;
  LODWORD(v308) = v235;
  LODWORD(STACK[0x6370]) = (((v205 & v335) + 2143132533 - ((2 * (v205 & v335)) & 0xCC6316E8)) ^ 0x7FBD9B75) << (~(_BYTE)v235 & 4) << (v235 & 0x1B ^ 1);
  LODWORD(STACK[0x6368]) = ((v47 & v335) >> v243) + 1834166625 - ((2 * ((v47 & v335) >> v243)) & 0xDAA652C2);
  v336 = v307 & 0xBA68DA6C ^ 0x5D346D36;
  LODWORD(STACK[0x60F8]) = v294;
  LODWORD(STACK[0x60F0]) = v296;
  LODWORD(STACK[0x6360]) = ((v205 & v336) << v294 << v296) + ((v336 & v318) >> v236);
  v337 = v319 & 0xBA68DA6C ^ 0x5D346D36;
  v338 = (((v309 & v337) + 1532895632 - ((2 * (v309 & v337)) & 0xB6B84220)) ^ 0x5B5E2190) << (v235 & 0x1D ^ 5);
  v339 = (v47 & v337) >> LODWORD(STACK[0x6328]) >> LODWORD(STACK[0x6318]);
  LODWORD(STACK[0x6358]) = v339 - 506010499 - ((2 * v339) & 0xC3ADC8FA);
  v340 = v205;
  v341 = (v205 & v337) + 1997308129 - 2 * (v205 & v337 & 0x770C8062 ^ v205 & 2);
  LOBYTE(v205) = STACK[0x6550];
  LOBYTE(v235) = STACK[0x6558];
  LODWORD(STACK[0x6350]) = ((v336 & v318) >> LODWORD(STACK[0x6698]) >> LODWORD(STACK[0x6600])) | ((v336 & v309) << v205 << v235);
  LODWORD(STACK[0x6658]) = ((v47 & v337) >> v236)
                         - 1361613218
                         + (((((v341 ^ 0x770C80E1) << STACK[0x6348]) ^ 0xCEA563E9) - 1618088438) ^ ((((v341 ^ 0x770C80E1) << STACK[0x6348]) ^ 0xAB68A5CB)
                                                                                                  - 96458708) ^ ((((v341 ^ 0x770C80E1) << STACK[0x6348]) ^ 0x65CDC622) + 887442371));
  v342 = v319 & 0x15A548FC ^ 0x8AD2A47E;
  LODWORD(STACK[0x6560]) = v342;
  LODWORD(STACK[0x6548]) = v340 & v342;
  LODWORD(STACK[0x6348]) = ((v340 & v342) << LODWORD(STACK[0x6500]) << LODWORD(STACK[0x64F8])) | ((v47 & v342) >> v236);
  v343 = v307 & 0x15A548FC ^ 0x8AD2A47E;
  v344 = (((v343 & v309) - 1243431024 - ((2 * (v343 & v309)) & 0x2BC55920)) ^ 0xB5E2BF90) << LODWORD(STACK[0x6340]) << v221;
  LODWORD(STACK[0x6340]) = v344;
  v345 = ((v343 & v318) >> v317 >> (char)v306) & 0x60B36175 | (v344 ^ 0x9F4C9E8A) & ~((v343 & v318) >> v317 >> (char)v306);
  LODWORD(STACK[0x6540]) = (v345 & 0xCE5AAA78 ^ 0xCE488A59) + (v345 & 0x31A55587);
  v346 = (LODWORD(STACK[0x6330]) - 1290835877) ^ 0xAF0C4A1;
  LODWORD(STACK[0x6AA0]) = v346;
  v347 = LODWORD(STACK[0x6430]) ^ v346;
  v348 = LODWORD(STACK[0x6338]) % 0x101;
  LODWORD(STACK[0x6538]) = v347 ^ LODWORD(STACK[0x6338]);
  v349 = STACK[0x65D0];
  STACK[0x6530] = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x65D0]) - 9090)
                + 4 * ((v347 ^ LODWORD(STACK[0x65D8])) % 0x101);
  HIDWORD(v350) = *((_DWORD *)*(&off_1015B46D0 + v349 - 9373) + v348);
  LODWORD(v350) = HIDWORD(v350);
  LODWORD(STACK[0x61A0]) = (v350 >> 27) ^ ((v350 >> 27) >> 4) ^ ((v350 >> 27) >> 2);
  LODWORD(STACK[0x6510]) = v319 & 0xED2A14C6;
  v351 = v319 & 0xED2A14C6 ^ 0xF6950A63;
  LOBYTE(v344) = v275;
  LOBYTE(v332) = STACK[0x6590];
  LODWORD(STACK[0x6330]) = (v47 & v343) >> v275 >> v332;
  LODWORD(STACK[0x6338]) = v351;
  v352 = v47;
  v353 = (v47 & v351) >> v332 >> v344;
  v354 = STACK[0x6620];
  v355 = (((v340 & v351) + 1205028317 + (~(2 * (v340 & v351)) | 0x70D9F675) + 1) ^ 0x47D345DD) << (v308 & 0x17 ^ v354);
  v356 = ((v355 ^ 0x2B6BB50E) - 795436638) ^ ((v355 ^ 0xFF05613E) + 83381650) ^ ((v355 ^ 0xD46ED430) + 798226592);
  v357 = ((v356 + 1843689744) ^ 0x45DD5822) & (2 * ((v356 + 1843689744) & 0x961E5A40)) ^ (v356 + 1843689744) & 0x961E5A40;
  v358 = ((2 * ((v356 + 1843689744) ^ 0x6DC1E8A2)) ^ 0xF7BF65C4) & ((v356 + 1843689744) ^ 0x6DC1E8A2) ^ (2 * ((v356 + 1843689744) ^ 0x6DC1E8A2)) & 0xFBDFB2E2;
  v359 = (v358 ^ 0xF09B2000) & (4 * v357) ^ v357;
  v360 = ((4 * (v358 ^ 0x8409222)) ^ 0xEF7ECB88) & (v358 ^ 0x8409222) ^ (4 * (v358 ^ 0x8409222)) & 0xFBDFB2E0;
  v361 = (v360 ^ 0xEB5E8280) & (16 * v359) ^ v359;
  v362 = ((16 * (v360 ^ 0x10813062)) ^ 0xBDFB2E20) & (v360 ^ 0x10813062) ^ (16 * (v360 ^ 0x10813062)) & 0xFBDFB2E0;
  v363 = v361 ^ 0xFBDFB2E2 ^ (v362 ^ 0xB9DB2200) & (v361 << 8);
  v364 = ((v356 + 1843689744) ^ 0x4253F84 ^ (2
                                           * ((v363 << 16) & 0x7BDF0000 ^ v363 ^ ((v363 << 16) ^ 0x32E20000) & (((v362 ^ 0x420490C2) << 8) & 0x7BDF0000 ^ 0x204D0000 ^ (((v362 ^ 0x420490C2) << 8) ^ 0x5FB20000) & (v362 ^ 0x420490C2))))) & v353 ^ 0xA100C2;
  LODWORD(STACK[0x6598]) = v353
                         + 67291147
                         + v356
                         + ((2 * ((v364 | 0xC729012) - (v364 | 0x738D6FED)) - 417669158) ^ 0xE658DE5F);
  v365 = v307 & 0xED2A14C6 ^ 0xF6950A63;
  LODWORD(STACK[0x6590]) = v365;
  LODWORD(STACK[0x6328]) = ((v365 & v309) << v321 << v191) | ((v365 & v318) >> v236);
  v366 = (v319 & 0x92094910 | 0x4986A48C) ^ v319 & 0x1040008;
  v367 = (((v309 & v366) + 756782012 - ((2 * (v309 & v366)) & 0x12170338)) ^ 0x2D1B93BC) << (v308 & 0x1E ^ 4) << LODWORD(STACK[0x6320]);
  LODWORD(STACK[0x6320]) = ((v318 & v366) >> v236)
                         + 1017916309
                         + (((v367 ^ 0x338229C2) - 254673495) ^ ((v367 ^ 0x7FFDC1A3) - 1129441846) ^ ((v367 ^ 0x4C7FE861) - 1892926452));
  v368 = v319 & 0x930D4918 ^ 0x4986A48C;
  v369 = (((v309 & v368) - 2991640 - ((2 * (v309 & v368)) & 0xB7049310)) ^ 0xFFD259E8) << (v308 & 0x1D ^ LODWORD(STACK[0x65A0]));
  LOBYTE(v365) = STACK[0x6588];
  LODWORD(STACK[0x6318]) = v338 << v365;
  LODWORD(STACK[0x6518]) = (((v369 << v365) ^ 0xEA2D7A74) - 922186713) ^ (((v369 << v365) ^ 0x6727C6A6) + 1140994293) ^ (((v369 << v365) ^ 0x8D0ABCD2) - 1372632447);
  v370 = v319 & 0xA061623E ^ 0x5030B11F;
  LODWORD(STACK[0x6288]) = v370;
  v371 = ((v309 & v370) + 802805389 - ((2 * (v309 & v370)) & 0x40A3A41A)) ^ 0x2FD9D68D;
  LODWORD(STACK[0x6520]) = v371;
  LODWORD(STACK[0x6740]) = v371 << v235 << v205;
  v372 = v307 & 0xA061623E ^ 0x5030B11F;
  v373 = ((v340 & v372) - 1191762888 - ((2 * (v340 & v372)) & 0x60E24070)) ^ 0xB8F72438;
  LODWORD(STACK[0x6750]) = v373;
  LODWORD(STACK[0x6310]) = v373 << LODWORD(STACK[0x6310]) << LODWORD(STACK[0x6308]);
  v374 = (((v372 & v309) - 1048492111 - ((2 * (v372 & v309)) & 0x80028662)) ^ 0xC18147B1) << LODWORD(STACK[0x65B0]);
  v375 = (((v374 << LODWORD(STACK[0x65B8])) ^ 0x30758088) + 15534741) ^ (((v374 << LODWORD(STACK[0x65B8])) ^ 0x8FB2A84B)
                                                                       - 1087757736) ^ (((v374 << LODWORD(STACK[0x65B8])) ^ 0xBFC728C3)
                                                                                      - 1889557792);
  v376 = v319 & 0x5393E6DA ^ 0x29C9F36D;
  LODWORD(STACK[0x6558]) = v376;
  LOBYTE(v365) = STACK[0x6700];
  LODWORD(STACK[0x6308]) = (((v309 & v351) - 716652903 - ((2 * (v309 & v351)) & 0xAA103D02)) ^ 0xD548BE99) << (v308 & 0x14 ^ 4) << v365;
  v377 = (((v340 & v376) + 534860700 - ((2 * (v340 & v376)) & 0x3782A738)) ^ 0x1FE1539C) << v365 << LODWORD(STACK[0x6570]);
  LODWORD(STACK[0x6570]) = ((v377 ^ 0xAAECD94A) + 1364958707) ^ ((v377 ^ 0xC9EAE7AE) + 844997399) ^ ((v377 ^ 0x63063EE4) - 1733199267);
  LODWORD(STACK[0x65B0]) = v307 & 0x5393E6DA;
  v378 = v307 & 0x5393E6DA ^ 0x29C9F36D;
  LOBYTE(v314) = v191;
  v379 = (v378 & v309) << v191 << v321;
  LOBYTE(v191) = v321;
  LODWORD(STACK[0x6300]) = v379 + ((v378 & v318) >> v236);
  v380 = ((v340 & v378) - 768503477 - ((2 * (v340 & v378)) & 0xA4232296)) ^ 0xD231914B;
  LODWORD(STACK[0x65A0]) = v380;
  LODWORD(STACK[0x62F8]) = (v380 << LODWORD(STACK[0x64D8]) << LODWORD(STACK[0x64E0]))
                         + ((v378 & v318) >> LODWORD(STACK[0x64E8]) >> LODWORD(STACK[0x64F0]));
  v381 = ((v309 & v376) - 860691841 + (~(2 * (v309 & v376)) | 0x6EDA1DBD) + 3747) ^ 0xCCB2F121;
  LODWORD(STACK[0x6588]) = v381;
  v382 = v381 << (v308 & 0x12) << (v308 & 0xD ^ v354);
  v383 = v352 & v376;
  LODWORD(STACK[0x62F0]) = (((v382 ^ 0x5D6E1E42) + 409742964) ^ ((v382 ^ 0x35E03D63) + 1893862739) ^ ((v382 ^ 0x688E2321) + 764154641))
                         + ((v352 & v376) >> v236)
                         - 1157771314;
  v384 = v307 & 0xD04C335E ^ 0xE82619AF;
  v385 = (((v340 & v384) + 280019061 - ((2 * (v340 & v384)) & 0x204000EA)) ^ 0x10B0C075) << LODWORD(STACK[0x62E8]) << LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6700]) = v385;
  LODWORD(STACK[0x62E8]) = ((v384 & v318) >> v236) - 696736449 - ((2 * ((v384 & v318) >> v236)) & 0xACF14A7E);
  v386 = v318;
  LOBYTE(v321) = STACK[0x6698];
  LOBYTE(v365) = STACK[0x6600];
  LODWORD(STACK[0x62E0]) = (v318 & STACK[0x6720]) >> v321 >> v365;
  v387 = v352;
  LOBYTE(v302) = v365;
  v388 = (v352 & (v319 & 0xA061623E ^ 0x5030B11F)) >> v365 >> v321;
  LOBYTE(v382) = v321;
  v389 = v319 & 0xD04C335E ^ 0xE82619AF;
  LODWORD(STACK[0x65B8]) = v352 & v389;
  LODWORD(STACK[0x6610]) = (v352 & v389) >> v382 >> v302;
  LODWORD(STACK[0x6430]) = (v309 & v389) << LODWORD(STACK[0x6670]) << LODWORD(STACK[0x6618]);
  v390 = ((v385 ^ 0xB607E910) & ~((v384 & v318) >> LODWORD(STACK[0x62C8]) >> LODWORD(STACK[0x62D0])) | ((v384 & v318) >> LODWORD(STACK[0x62C8]) >> LODWORD(STACK[0x62D0])) & 0x49F816EF) ^ 0x1B814E9;
  LODWORD(STACK[0x6698]) = v390 - ((2 * v390) & 0x7A4A5CCE);
  LODWORD(v307) = v307 & 0x930D4918 ^ 0x4986A48C;
  LOBYTE(v381) = STACK[0x6638];
  LOBYTE(v221) = STACK[0x6640];
  LODWORD(STACK[0x62D8]) = (v352 & v307) >> v381 >> v221;
  LODWORD(STACK[0x6670]) = v307 & v318;
  LOBYTE(v352) = STACK[0x6650];
  v391 = STACK[0x6648];
  LODWORD(STACK[0x62D0]) = ((v307 & v318) >> v381 >> v221)
                         + ((v307 & v309) << v352 << LODWORD(STACK[0x6648]));
  LODWORD(v306) = (((v340 & v368) + 1087460844 - ((2 * (v340 & v368)) & 0x81028B18)) ^ 0x40D155EC) << (v308 & 7 ^ LODWORD(STACK[0x6660]));
  v392 = v387 & v368;
  LODWORD(STACK[0x62C8]) = (v392 >> v236)
                         - 624557920
                         + (((v306 ^ 0x6E2C0960) + 1259730496) ^ ((v306 ^ 0x16870DF2)
                                                                              + 868151982) ^ ((v306 ^ 0x78AB0492)
                                                                                            + 1569913806));
  v393 = (LODWORD(STACK[0x6488]) ^ 0x36795B73) + (LODWORD(STACK[0x6488]) | 0x4986A48C);
  LOBYTE(v302) = STACK[0x6710];
  LOBYTE(v390) = STACK[0x6708];
  v394 = LODWORD(STACK[0x6518]) - 589690451;
  LODWORD(STACK[0x62C0]) = (v392 >> v302 >> v390) + v394;
  LODWORD(STACK[0x62B8]) = (v392 >> v236) + v394;
  v395 = (2 * v393 + 2) ^ 0x4986A48C;
  LODWORD(STACK[0x62B0]) = (v340 & v395) << v314 << v191;
  LODWORD(STACK[0x62A8]) = v375 + ((v387 & v372) >> v236) - 815303197;
  v375 += 388868503;
  v396 = (v375 ^ 0xBD39AE69) & (2 * (v375 & 0xB839CC4C)) ^ v375 & 0xB839CC4C;
  v397 = ((2 * (v375 ^ 0xFD6B3E79)) ^ 0x8AA5E46A) & (v375 ^ 0xFD6B3E79) ^ (2 * (v375 ^ 0xFD6B3E79)) & 0x4552F234;
  v398 = (v397 ^ 0x4106025) & (4 * v396) ^ v396;
  v399 = ((4 * (v397 ^ 0x45521215)) ^ 0x154BC8D4) & (v397 ^ 0x45521215) ^ (4 * (v397 ^ 0x45521215)) & 0x4552F234;
  v400 = (v399 ^ 0x542C001) & (16 * v398) ^ v398;
  v401 = ((16 * (v399 ^ 0x40103221)) ^ 0x552F2350) & (v399 ^ 0x40103221) ^ (16 * (v399 ^ 0x40103221)) & 0x4552F230;
  v402 = v400 ^ 0x4552F235 ^ (v401 ^ 0x45022225) & (v400 << 8);
  v403 = (v372 & v386) >> v236;
  LODWORD(STACK[0x62A0]) = v403;
  LODWORD(STACK[0x6298]) = (v375 ^ (2
                                  * ((v402 << 16) & 0x45520000 ^ v402 ^ ((v402 << 16) ^ 0x72350000) & (((v401 ^ 0x50D025) << 8) & 0x45520000 ^ 0x5000000 ^ (((v401 ^ 0x50D025) << 8) ^ 0x52F20000) & (v401 ^ 0x50D025)))) ^ 0x45BFBBC0) & ~v403 | v403 & 0x8FC6C19;
  v404 = (LODWORD(STACK[0x6520]) << LODWORD(STACK[0x6108]) << LODWORD(STACK[0x6290])) ^ 0xEC92D84B;
  LODWORD(STACK[0x6290]) = v388 | LODWORD(STACK[0x6740]);
  LOBYTE(v372) = STACK[0x64B0];
  v405 = STACK[0x64A8];
  LOBYTE(v191) = STACK[0x65C0];
  LOBYTE(v402) = STACK[0x65C8];
  v406 = (v340 & STACK[0x6288]) << v191 << v402;
  LODWORD(STACK[0x6288]) = v406 + ((v386 & STACK[0x6288]) >> v372 >> LODWORD(STACK[0x64A8]));
  LODWORD(STACK[0x6280]) = v406 + v388;
  v407 = (v388 & 0x136D27B4 | v404 & ~v388) ^ 0xE1FB8E4F;
  LODWORD(STACK[0x6278]) = ((v388 & 0x13692330 | v404 & ~v388 & 0x936BA330) ^ 0x12002130) + v407 - (v407 & 0x936BA330);
  v408 = v383 >> v405 >> v372;
  v409 = STACK[0x6570];
  LODWORD(STACK[0x6270]) = v408 + 71875399 + LODWORD(STACK[0x6570]);
  v410 = v409 + 2000167417;
  v411 = ((v409 + 2000167417) ^ 0x488E944D) & (2 * ((v409 + 2000167417) & 0x8D10994E)) ^ (v409 + 2000167417) & 0x8D10994E;
  v412 = ((2 * (v410 ^ 0x58AF8645)) ^ 0xAB7E3E16) & (v410 ^ 0x58AF8645) ^ (2 * (v410 ^ 0x58AF8645)) & 0xD5BF1F0A;
  v413 = (v412 ^ 0x70E01) & (4 * v411) ^ v411;
  v414 = ((4 * (v412 ^ 0x54810109)) ^ 0x56FC7C2C) & (v412 ^ 0x54810109) ^ (4 * (v412 ^ 0x54810109)) & 0xD5BF1F08;
  v415 = (v414 ^ 0x54BC1C00) & (16 * v413) ^ v413;
  v416 = ((16 * (v414 ^ 0x81030303)) ^ 0x5BF1F0B0) & (v414 ^ 0x81030303) ^ (16 * (v414 ^ 0x81030303)) & 0xD5BF1F00;
  v417 = v415 ^ 0xD5BF1F0B ^ (v416 ^ 0x51B11000) & (v415 << 8);
  LODWORD(STACK[0x6268]) = (v410 ^ (2
                                  * ((v417 << 16) & 0x55BF0000 ^ v417 ^ ((v417 << 16) ^ 0x1F0B0000) & (((v416 ^ 0x840E0F0B) << 8) & 0x55BF0000 ^ 0x40A00000 ^ (((v416 ^ 0x840E0F0B) << 8) ^ 0x3F1F0000) & (v416 ^ 0x840E0F0B)))) ^ 0x8CB80FC7) & ~v408 | v408 & 0x7F3F5760;
  v418 = LODWORD(STACK[0x65B0]) + 701100909 - ((263172 * LODWORD(STACK[0x6680])) & 0x103C490);
  LOBYTE(v416) = STACK[0x6258];
  LOBYTE(v417) = STACK[0x6250];
  LODWORD(STACK[0x6260]) = LODWORD(STACK[0x6750]) << v416 << v417;
  LODWORD(STACK[0x6258]) = ((v418 & v309) << v417 << v416) | ((v418 & v386) >> v236);
  LODWORD(STACK[0x6250]) = LODWORD(STACK[0x65A0]) << LODWORD(STACK[0x6568]) << LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x6248]) = (v395 & v386) >> v390 >> v302;
  LODWORD(STACK[0x6240]) = ((v387 & v378) >> v390 >> v302)
                         - 1007151063
                         - ((2 * ((v387 & v378) >> v390 >> v302)) & 0x87F03052);
  LODWORD(STACK[0x6238]) = (LODWORD(STACK[0x6588]) << v191 << v402) | ((v386 & STACK[0x6558]) >> v236);
  v419 = STACK[0x6590];
  LODWORD(STACK[0x6230]) = (v340 & STACK[0x6590]) << v391 << v352;
  LODWORD(STACK[0x6228]) = (((v340 & v389) - 576218391 - ((2 * (v340 & v389)) & 0xB04C35D2)) ^ 0xDDA79AE9) << LODWORD(STACK[0x6228]);
  v420 = (v386 & v389) >> LODWORD(STACK[0x6730]) >> LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x6220]) = v420;
  LODWORD(STACK[0x6218]) = v420 - 686652548 - ((2 * v420) & 0xAE2506F8);
  v421 = (v387 & v384) >> v236;
  LODWORD(STACK[0x6210]) = v421 | ((v384 & v309) << v352 << v391);
  LODWORD(STACK[0x6208]) = v421 - 696736449 - ((2 * v421) & 0xACF14A7E);
  v422 = ((LODWORD(STACK[0x6608]) ^ 0xCA97DCC4) + 502001350) ^ ((LODWORD(STACK[0x6608]) ^ 0x62910E75) - 1242743691) ^ ((LODWORD(STACK[0x6608]) ^ 0x60FB5669) - 1215863703);
  LODWORD(STACK[0x60E8]) = v308 & 0x10000015 ^ LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x6518]) = LODWORD(STACK[0x6200]) ^ 0x447A983C;
  LODWORD(STACK[0x6520]) = LODWORD(STACK[0x61F8]) + 3430;
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x61E8]) ^ 0x86E7BD1A;
  LODWORD(STACK[0x6750]) = (LODWORD(STACK[0x61E0]) + 1766456775) ^ 0xFB513DF6;
  LODWORD(STACK[0x6710]) = (LODWORD(STACK[0x61DC]) - 1914638095) ^ 0x721700BF;
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x61D0]) ^ 0x9CB71265;
  LODWORD(STACK[0x6730]) = LODWORD(STACK[0x65E0]) + 3154;
  LODWORD(STACK[0x6200]) = LODWORD(STACK[0x65F8]) ^ 0xF911D82D;
  LODWORD(STACK[0x61F8]) = v308 & 0x1000000E ^ 0x10000004;
  LODWORD(STACK[0x61F0]) = LODWORD(STACK[0x66A0]) + 665844605;
  LODWORD(STACK[0x61E8]) = (STACK[0x65A8] & v386) >> v236;
  LODWORD(STACK[0x61E0]) = (v309 & STACK[0x6720]) << LODWORD(STACK[0x64E0]) << LODWORD(STACK[0x64D8]);
  LODWORD(STACK[0x61DC]) = 202090211 * LODWORD(STACK[0x65D8]);
  LODWORD(STACK[0x61D0]) = 202090211 * LODWORD(STACK[0x6538]);
  LODWORD(STACK[0x61C8]) = LODWORD(STACK[0x6658]) + 961;
  LODWORD(STACK[0x61C0]) = LODWORD(STACK[0x6540]) - 1;
  v423 = v386 & STACK[0x6560];
  LODWORD(STACK[0x61BC]) = LODWORD(STACK[0x6548]) << LODWORD(STACK[0x6110]);
  LODWORD(STACK[0x61B0]) = v423 >> v236;
  LODWORD(STACK[0x61A8]) = __ROR4__(*(_DWORD *)(STACK[0x6530] - 12), 16) ^ 0xF0E7BE3A;
  LODWORD(STACK[0x61A0]) ^= 0xB56CF4D1;
  LODWORD(STACK[0x6198]) = LODWORD(STACK[0x6510]) ^ v386 ^ 0x92A1484;
  LODWORD(STACK[0x6190]) = (v387 & v419) >> LODWORD(STACK[0x64F0]) >> LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x6188]) = LODWORD(STACK[0x6598]) + 2886;
  LODWORD(STACK[0x6180]) = (v340 & v307) << LODWORD(STACK[0x64F8]) << LODWORD(STACK[0x6500]);
  LODWORD(STACK[0x6178]) = LODWORD(STACK[0x6670]) >> v236;
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6700]) ^ 0xD678A53F;
  LODWORD(STACK[0x6170]) = LODWORD(STACK[0x6610]) | LODWORD(STACK[0x6430]);
  LODWORD(STACK[0x616C]) = LODWORD(STACK[0x65B8]) >> v236;
  LODWORD(STACK[0x6160]) = LODWORD(STACK[0x6698]) - 1121636761;
  LODWORD(STACK[0x6698]) = v422 - 1950095163;
  v424 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x65D0])) - 12);
  LODWORD(STACK[0x6158]) = LODWORD(STACK[0x6458]) ^ 0xC9B3510F;
  v425 = STACK[0x6438] & 0x2000;
  LODWORD(STACK[0x6148]) = STACK[0x6438] & 0xFFFFDFFF;
  LODWORD(STACK[0x6150]) = v425;
  LODWORD(STACK[0x6140]) = -v425;
  LODWORD(STACK[0x6138]) = -LODWORD(STACK[0x6448]);
  LODWORD(STACK[0x6130]) = -LODWORD(STACK[0x6440]);
  LODWORD(STACK[0x6720]) = STACK[0x6A80];
  HIDWORD(v350) = STACK[0x6450];
  LODWORD(v350) = STACK[0x6450];
  LODWORD(STACK[0x6128]) = v350 >> 16;
  return v424();
}

uint64_t sub_100A3CF68(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unint64_t v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  BOOL v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  uint64_t v172;
  int v173;
  char v174;
  BOOL v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  BOOL v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  uint64_t v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  _DWORD *v294;
  _DWORD *v295;
  int *v296;
  int v297;
  _DWORD *v298;
  unint64_t v299;
  _DWORD *v300;
  _DWORD *v301;
  _DWORD *v302;
  int *v303;
  int v304;
  unint64_t v305;
  _DWORD *v306;
  unint64_t v307;
  int *v308;
  int v309;
  unint64_t v310;
  int v311;
  uint64_t v312;
  int v313;
  int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  _DWORD *v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  _DWORD *v328;
  unint64_t v329;
  unint64_t v330;
  _DWORD *v331;
  unint64_t v332;
  _DWORD *v333;
  int *v334;
  int v335;
  uint64_t v336;
  _DWORD *v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  _DWORD *v341;
  uint64_t v342;
  _DWORD *v343;
  uint64_t v344;
  _DWORD *v345;
  int v346;
  int v347;
  unsigned int v348;
  _DWORD *v349;
  _DWORD *v350;
  _DWORD *v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  _DWORD *v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  _DWORD *v359;
  uint64_t v360;
  unint64_t v361;
  uint64_t v362;
  _DWORD *v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  unint64_t v367;
  unint64_t v368;
  _DWORD *v369;
  _DWORD *v370;
  _DWORD *v371;
  uint64_t v372;
  _DWORD *v373;
  uint64_t v374;
  unint64_t v375;
  unint64_t v376;
  uint64_t v377;
  int v378;
  int v379;
  _DWORD *v380;
  _DWORD *v381;
  unint64_t v382;
  _DWORD *v383;
  unint64_t v384;
  _DWORD *v385;
  _DWORD *v386;
  _DWORD *v387;
  _DWORD *v388;
  unint64_t v389;
  _DWORD *v390;
  _DWORD *v391;
  unint64_t v392;
  _DWORD *v393;
  unint64_t v394;
  uint64_t v395;
  _DWORD *v396;
  uint64_t v397;
  _DWORD *v398;
  int v399;
  int v400;
  _DWORD *v401;
  int v402;
  unint64_t v403;
  int v404;
  _DWORD *v405;
  uint64_t v406;
  unint64_t v407;
  uint64_t v408;
  int *v409;
  uint64_t v410;
  int *v411;
  uint64_t v412;
  int *v413;
  uint64_t v414;
  int *v415;
  uint64_t v416;
  int *v417;
  uint64_t v418;
  int *v419;
  int v420;
  int v421;
  int v422;
  uint64_t v423;
  int *v424;
  uint64_t v425;
  unint64_t v426;
  uint64_t v427;
  int *v428;
  uint64_t v429;
  int *v430;
  uint64_t v431;
  int *v432;
  int v433;
  int v434;
  int *v435;
  uint64_t v436;
  int *v437;
  uint64_t v438;
  int *v439;
  int v440;
  int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  int v448;
  unint64_t v449;
  unsigned int v450;
  unsigned int v451;
  unint64_t v452;
  int v453;
  unint64_t v454;
  unint64_t v455;
  int v456;
  _DWORD *v457;
  _DWORD *v458;
  _DWORD *v459;
  uint64_t v460;
  unint64_t v461;
  uint64_t v462;
  unint64_t v463;
  unint64_t v464;
  uint64_t v465;
  unint64_t v466;
  unint64_t v467;
  _DWORD *v468;
  _DWORD *v469;
  uint64_t v470;
  unint64_t v471;
  unint64_t v472;
  unint64_t v473;
  uint64_t v474;
  _DWORD *v475;
  uint64_t v476;
  unint64_t v477;
  unint64_t v478;
  int v479;
  int v480;
  unint64_t v481;
  int v482;
  unsigned int v483;
  uint64_t v484;
  uint64_t v485;
  unint64_t v486;
  uint64_t v487;
  _DWORD *v488;
  _DWORD *v489;
  uint64_t v490;
  uint64_t v491;
  _DWORD *v492;
  uint64_t v493;
  unint64_t v494;
  unint64_t v495;
  _DWORD *v496;
  _DWORD *v497;
  uint64_t v498;
  unint64_t v499;
  uint64_t v500;
  _DWORD *v501;
  uint64_t v502;
  _DWORD *v503;
  uint64_t v504;
  _DWORD *v505;
  _DWORD *v506;
  uint64_t v507;
  _DWORD *v508;
  int v509;
  uint64_t v510;
  unint64_t v511;
  _DWORD *v512;
  _DWORD *v513;
  unint64_t v514;
  _DWORD *v515;
  uint64_t v516;
  unint64_t v517;
  uint64_t v518;
  unint64_t v519;
  unint64_t v520;
  _DWORD *v521;
  uint64_t v522;
  _DWORD *v523;
  uint64_t v524;
  _DWORD *v525;
  uint64_t v526;
  _DWORD *v527;
  uint64_t v528;
  _DWORD *v529;
  uint64_t v530;
  _DWORD *v531;
  uint64_t v532;
  _DWORD *v533;
  unint64_t v534;
  uint64_t v535;
  _DWORD *v536;
  char *v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  _DWORD *v542;
  uint64_t v543;
  unint64_t v544;
  uint64_t v545;
  unint64_t v546;
  unint64_t v547;
  uint64_t v548;
  unint64_t v549;
  uint64_t v550;
  unint64_t v551;
  uint64_t v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  _DWORD *v557;
  uint64_t v558;
  unint64_t v559;
  uint64_t v560;
  _DWORD *v561;
  uint64_t v562;
  _DWORD *v563;
  uint64_t v564;
  _DWORD *v565;
  uint64_t v566;
  _DWORD *v567;
  unint64_t v568;
  unint64_t v569;
  unint64_t v570;
  uint64_t v571;
  _DWORD *v572;
  uint64_t v573;
  _DWORD *v574;
  uint64_t v575;
  _DWORD *v576;
  _DWORD *v577;
  _DWORD *v578;
  char *v579;
  uint64_t v580;
  char *v581;
  uint64_t v582;
  char *v583;
  uint64_t v584;
  char *v585;
  uint64_t v586;
  char *v587;
  uint64_t v588;
  char *v589;
  unint64_t v590;
  unint64_t v591;
  int v592;
  int v593;
  int v594;
  unint64_t v595;
  unsigned int v596;
  unint64_t v597;
  _DWORD *v598;
  _DWORD *v599;
  _DWORD *v600;
  _DWORD *v601;
  unint64_t v602;
  _DWORD *v603;
  _DWORD *v604;
  uint64_t v605;
  unint64_t v606;
  uint64_t v607;
  _DWORD *v608;
  _DWORD *v609;
  uint64_t v610;
  uint64_t v611;
  _DWORD *v612;
  uint64_t v613;
  _DWORD *v614;
  uint64_t v615;
  unint64_t v616;
  uint64_t v617;
  _DWORD *v618;
  _DWORD *v619;
  uint64_t v620;
  _DWORD *v621;
  uint64_t v622;
  unint64_t v623;
  uint64_t v624;
  unint64_t v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  _DWORD *v629;
  _DWORD *v630;
  _DWORD *v631;
  uint64_t v632;
  unint64_t v633;
  uint64_t v634;
  _DWORD *v635;
  _DWORD *v636;
  _DWORD *v637;
  uint64_t v638;
  unint64_t v639;
  uint64_t v640;
  _DWORD *v641;
  _DWORD *v642;
  _DWORD *v643;
  uint64_t v644;
  _DWORD *v645;
  uint64_t v646;
  _DWORD *v647;
  uint64_t v648;
  _DWORD *v649;
  unint64_t v650;
  unint64_t v651;
  _DWORD *v652;
  _DWORD *v653;
  uint64_t v654;
  _DWORD *v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t v658;
  _DWORD *v659;
  uint64_t v660;
  _DWORD *v661;
  uint64_t v662;
  _DWORD *v663;
  uint64_t v664;
  _DWORD *v665;
  _DWORD *v666;
  _DWORD *v667;
  _DWORD *v668;
  uint64_t v669;
  _DWORD *v670;
  uint64_t v671;
  _DWORD *v672;
  unint64_t v673;
  _DWORD *v674;
  unsigned int v675;
  unsigned int v676;
  _DWORD *v677;
  _DWORD *v678;
  _DWORD *v679;
  _DWORD *v680;
  _DWORD *v681;
  _DWORD *v682;
  int *v683;
  int *v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  unint64_t v695;
  int v696;
  int v697;
  unint64_t v698;
  int v699;
  uint64_t v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  char *v723;
  unint64_t v724;
  int v725;
  char *v726;
  unsigned int v727;
  char *v728;
  uint64_t v729;
  unsigned int v730;
  unsigned int v731;
  unint64_t v732;
  unint64_t v733;
  int v734;
  unsigned int v735;
  unsigned int v736;
  BOOL v737;
  int v738;
  int v739;
  int v740;

  LODWORD(STACK[0x66F0]) = v12;
  LODWORD(STACK[0x6AC0]) = v10;
  v20 = (v10 - 335961926) & 0x7D6FCBEB;
  LODWORD(STACK[0x6120]) = v20;
  v21 = ((2 * (v8 & (v10 ^ 0xFFFFA415) ^ (v20 + 314391376))) & 0xCBB496C2)
      - (v8 & (v10 ^ 0xFFFFA415) ^ (v20 + 314391376));
  v22 = v8;
  v23 = (v8 & 0x458AAA64 ^ 0x400A027) + (v8 & 0xBA755599);
  v24 = (((2 * (v8 & 0xFFFFFFFA ^ 0x3DA63ADA)) | 0xB1770D0) - (v8 & 0xFFFFFFFA ^ 0x3DA63ADA) + 2054440856) ^ 0xC68BB462;
  v25 = (v21 - 1708804962) ^ 0x5F5B7FC8;
  STACK[0x6680] = v25;
  v26 = STACK[0x64B8];
  v27 = *(_BYTE *)(STACK[0x64B8] + (*(unsigned __int8 *)(v9 + v25) ^ 0x40)) + (*(_BYTE *)(v9 + v25) ^ 0x63);
  v28 = (v23 - 1) ^ 0xBD5968A9;
  STACK[0x6670] = v28;
  v29 = STACK[0x64D0];
  v30 = ((*(_BYTE *)(v9 + v28) ^ 0xC9) + 11) ^ *(unsigned __int8 *)(STACK[0x64D0]
                                                                                   + (*(unsigned __int8 *)(v9 + v28) ^ 0x6ELL));
  v31 = (((2 * v24) | 0x7A221CA4) - v24 - 1024527954) ^ 0xFAEEF00DLL;
  STACK[0x6660] = v31;
  v32 = STACK[0xDB18];
  STACK[0x6630] = STACK[0xDB18];
  LODWORD(v31) = *(unsigned __int8 *)(v29 + (*(unsigned __int8 *)(v32 + v31) ^ 0x75)) ^ ((*(_BYTE *)(v32 + v31) ^ 0xD2) + 11) ^ 0x33;
  LODWORD(STACK[0x6650]) = v22 & 0xFFFFFFF4;
  v33 = (-1682568907 - (v22 & 0xFFFFFFF9 ^ 0xCB06D5A8 | 0x9BB60935) + (v22 & 0xFFFFFFF9 ^ 0xCB06D5A8 | 0x6449F6CA)) ^ 0x1616EBEDLL;
  STACK[0x6658] = v33;
  v34 = STACK[0x64C0];
  LOBYTE(v33) = *(_BYTE *)(STACK[0x64C0] + (*(unsigned __int8 *)(v32 + v33) ^ 0xFBLL)) - 1;
  v35 = ((_DWORD)v31 << 16) | (((v33 ^ (v33 >> 6) ^ (v33 >> 4)) ^ 0xB8) << 8);
  v36 = *(unsigned __int8 *)(v32
                           + ((((((2 * (v22 & 0xFFFFFFF4 ^ 0xEA7C2F80)) & 0x6B7513C8)
                               - (v22 & 0xFFFFFFF4 ^ 0xEA7C2F80)
                               + 1246066203) ^ 0xEF48F3CA)
                             - 1) ^ 0xF62862DFLL));
  LODWORD(v36) = (*(_BYTE *)(v26 + (v36 ^ 0x7B)) + (v36 ^ 0x58)) | ((v27 ^ 0x52) << 16);
  v37 = ((v22 & 0xFFFFFFF3 ^ 0x7B35731) - ((2 * (v22 & 0xFFFFFFF3 ^ 0x7B35731)) & 0x3A0B7124) - 1660569450) ^ 0x23EF2728;
  STACK[0x6618] = v37;
  v38 = STACK[0x64C8];
  LODWORD(v37) = ((*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v32 + v37) ^ 0x2FLL)) ^ 0xEB) << 24) | ((*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v32 + ((((v22 & 0x8509CCC0 ^ 0x8101804D) - 1) & 0x8509CCC4 | v22 & 0x7AF63331) ^ 0x385848CBLL)) ^ 0x6CLL)) ^ 0x17) << 8);
  v39 = v22 & 0xFFFFFFF5 ^ 0xB959C88F;
  STACK[0x6648] = v39;
  LODWORD(v36) = v36 | ((((*(_BYTE *)(v32 + v39) ^ 0x92) + 11) ^ 0xB1 ^ *(unsigned __int8 *)(v29 + (*(unsigned __int8 *)(v32 + v39) ^ 0x35))) << 8);
  LODWORD(STACK[0x6608]) = v22 & 0xFFFFFFF2;
  LODWORD(v39) = ((v22 & 0xFFFFFFF2 ^ 0x46E62B32) - ((2 * (v22 & 0xFFFFFFF2 ^ 0x46E62B32)) & 0x20B37D80) + 274316996) ^ 0x1059A280;
  v40 = v22 ^ 0xB959C88F;
  STACK[0x6610] = v40;
  v41 = (((2 * (v22 & 0xFFFFFFFB ^ 0xDB736D50)) & 0x66F9CC52) - (v22 & 0xFFFFFFFB ^ 0xDB736D50) - 863823402) ^ 0x48C359F6;
  LODWORD(v40) = ((v30 ^ 1) << 8) | ((((*(unsigned __int8 *)(v32 + v40) ^ 0x16)
                                     + *(unsigned __int8 *)(v26 + (*(unsigned __int8 *)(v32 + v40) ^ 0x35))) ^ 6) << 24);
  v42 = *(unsigned __int8 *)(v32 + ((767081328 - (_DWORD)v39 + ((2 * (_DWORD)v39) | 0xA48E8622) + 383) ^ 0x2DF8BCE8));
  v43 = ((2 * (v22 & 0xFFFFFFFC ^ 0xA0D4CE44)) & 0x667EEF8) - (v22 & 0xFFFFFFFC ^ 0xA0D4CE44) + 2093746304;
  LODWORD(v37) = v37 | ((*(unsigned __int8 *)(v29 + (v42 ^ 0x3C)) ^ ((v42 ^ 0x9B) + 11) ^ 0xB5) << 16);
  v44 = (-308573184 - v41 + ((2 * v41) & 0x24C8DA96) + 1716) ^ 0xBF1774BLL;
  STACK[0x6640] = v44;
  LODWORD(v44) = v35 | ((*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v32 + v44) ^ 0x15)) ^ 0x1B) << 24);
  v45 = ((v22 & 0xFCE37158 ^ 0xF0E00107) + (v22 & 0x31C8EA0 ^ 0x3000C01) - 2) ^ 0xB5E23076;
  LODWORD(STACK[0x6600]) = v22 & 0xFFFFFFFE;
  v46 = (v22 & 0xFFFFFFFE ^ 0x21039004) - ((2 * (v22 & 0xFFFFFFFE ^ 0x21039004)) & 0xF6F3EDD8) + 2071590636;
  v47 = ((v43 & 0x9B525D18 ^ 0x1101D0B) + (v43 & 0x64ADA2E4) - 1) ^ 0x64511341;
  STACK[0x65F8] = v47;
  LODWORD(v40) = v40 & 0xFFFFFF00 | ((*(_BYTE *)(v34 + (*(unsigned __int8 *)(v32 + v47) ^ 0x72)) - 1) ^ ((*(_BYTE *)(v34 + (*(unsigned __int8 *)(v32 + v47) ^ 0x72)) - 1) >> 6) ^ ((*(_BYTE *)(v34 + (*(unsigned __int8 *)(v32 + v47) ^ 0x72)) - 1) >> 4)) ^ 0xD7;
  v48 = (((2 * v45) & 0x4486AC10) - v45 - 574838287) ^ 0x22E75C0ELL;
  STACK[0x6620] = v48;
  LODWORD(v44) = v44 & 0xFFFFFF00 | ((*(_BYTE *)(v32 + v48) ^ 0x8A)
                                                    + *(_BYTE *)(v26 + (*(unsigned __int8 *)(v32 + v48) ^ 0xA9))) ^ 0x5C;
  v49 = *(unsigned __int8 *)(v32 + (((v46 & 0x21A08370 ^ 0x21808041) + (v46 & 0xDE5F7C8E ^ 0x1C5D508D) - 2) ^ 0xDEFE7EAB));
  LOBYTE(v49) = *(_BYTE *)(v26 + (v49 ^ 7)) + (v49 ^ 0x24);
  LODWORD(STACK[0x6638]) = v22;
  v50 = v22 & 0xFFFFFFF7 ^ 0xB959C88F;
  STACK[0x6628] = v50;
  LODWORD(v36) = v36 | ((*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v32 + v50) ^ 0x9CLL)) ^ 0x74) << 24);
  LODWORD(v40) = v40 & 0xFF00FFFF | ((v49 ^ 0xD3) << 16);
  LODWORD(v49) = v40 ^ (2 * (v40 & v14));
  v51 = v22 & 0xFFFFFFF0 ^ 0xB959C88F;
  STACK[0x65F0] = v51;
  LODWORD(v44) = v44 ^ (2 * (v44 & v11));
  LODWORD(v37) = v37 & 0xFFFFFF00 | ((*(_BYTE *)(v32 + v51) ^ 0xD1)
                                                    + *(_BYTE *)(v26 + (*(unsigned __int8 *)(v32 + v51) ^ 0xF2)));
  v52 = (((v49 & v13) >> LODWORD(STACK[0x64A8]) >> LODWORD(STACK[0x64B0])) | ((v49 & a7) << LODWORD(STACK[0x64F8]) << LODWORD(STACK[0x6500]))) ^ LODWORD(STACK[0x6678]);
  LODWORD(v49) = (((v44 & a8) + 625266353 - ((2 * (v44 & a8)) & 0x4A899D62)) ^ 0x2544CEB1) << LODWORD(STACK[0x6410]);
  LODWORD(v47) = ((v44 & a4) >> a5)
               + 1447764235
               + (((((_DWORD)v49 << LODWORD(STACK[0x6418])) ^ 0x35E927AF) - 1671562916) ^ ((((_DWORD)v49 << LODWORD(STACK[0x6418])) ^ 0xA7D98AFD)
                                                                                         + 242045962) ^ ((((_DWORD)v49 << LODWORD(STACK[0x6418])) ^ 0x9230AD52) + 998536103));
  LODWORD(v36) = v36 ^ 0x83 ^ (2 * ((v36 ^ 0x83) & v14));
  v53 = (((v36 & v13) >> LODWORD(STACK[0x6468]) >> LODWORD(STACK[0x6460])) | ((v36 & a7) << LODWORD(STACK[0x64D8]) << LODWORD(STACK[0x64E0]))) ^ v17;
  LODWORD(v37) = v37 ^ 0xEC ^ (2 * ((v37 ^ 0xEC) & v11));
  LODWORD(v49) = (((v37 & a8) + 2145897349 - ((2 * (v37 & a8)) & 0xFFCF970A)) ^ 0x7FE7CB85) << LODWORD(STACK[0x61F8]);
  LODWORD(v37) = (((v37 & a4) >> a5)
                - 798910635
                + (((((_DWORD)v49 << LODWORD(STACK[0x63C0])) ^ 0x9BC36205) - 1268970832) ^ ((((_DWORD)v49 << LODWORD(STACK[0x63C0])) ^ 0x3151F192)
                                                                                          + 516921657) ^ ((((_DWORD)v49 << LODWORD(STACK[0x63C0])) ^ 0xAA929397) - 2062746818))) ^ LODWORD(STACK[0x6668]);
  v54 = STACK[0x6A10];
  v55 = STACK[0x6950];
  v56 = v47 ^ v16;
  LODWORD(STACK[0x66A8]) = v47 ^ v16;
  LODWORD(v49) = (-1835993293 * (v55 ^ v54 ^ v56)) ^ ((-1835993293 * (v55 ^ v54 ^ v56)) >> 16);
  v57 = v49 + (v49 >> 8);
  v58 = v37 ^ v57;
  v59 = 45938719 * v58;
  v60 = (45938719 * v58) >> 16;
  v61 = v60 + 45938719 * v58;
  v62 = v61 >> 8;
  LODWORD(v49) = (831689365 * (v61 + v52 + v62)) ^ ((831689365 * (v61 + v52 + v62)) >> 16);
  v63 = v49 + v53 + (v49 >> 8);
  v64 = STACK[0x6980] & 0x80;
  v65 = STACK[0x6980] & 0xFFFFFF7F;
  LODWORD(STACK[0x6678]) = LODWORD(STACK[0x6698]) < 0xAB459F9F;
  if ((v63 & v64) != 0)
    v64 = -v64;
  v66 = v63 ^ v65 ^ (v64 + v63);
  v67 = v58 ^ v57;
  v68 = STACK[0x68D0];
  LODWORD(STACK[0x6510]) = v15;
  v69 = -1835993293 * (v68 ^ v15 ^ v56);
  v70 = HIWORD(v69);
  v71 = 45938719 * (v67 ^ ((v70 ^ v69) + ((v70 ^ v69) >> 8)));
  v72 = v71 + HIWORD(v71);
  v73 = (831689365 * (v72 + v52 + (v72 >> 8))) ^ ((831689365 * (v72 + v52 + (v72 >> 8))) >> 16);
  v74 = v73 + v53 + (v73 >> 8);
  v75 = ((v62 + v61) ^ v52) - (v62 + v61) + 2 * ((v62 + v61) & v52);
  v76 = (831689365 * ((v72 >> 8) + v72 + v75)) ^ ((831689365 * ((v72 >> 8) + v72 + v75)) >> 16);
  v77 = -1279168371 * (v76 + v53 + (v76 >> 8)) - ((-1279168371 * (v76 + v53 + (v76 >> 8))) >> 16);
  v78 = STACK[0xDB20];
  v79 = v77 + STACK[0xDB20] + (v77 >> 8);
  LODWORD(STACK[0x6AB0]) = v79;
  v80 = ((LODWORD(STACK[0x68A0]) - v57) ^ v57) + 2 * ((LODWORD(STACK[0x68A0]) - v57) & v57);
  v81 = 831689365 * ((v60 ^ v59) + 2 * (v60 & v59) + (((v60 ^ v59) + 2 * (v60 & v59)) >> 8) + v75);
  v82 = (((v81 ^ 0x20C9D636) + (v81 | 0xDF3629C9) + 1) | v81) + LODWORD(STACK[0x6940]) - v81;
  v83 = 45938719 * (v67 ^ (v70 + v69 - 2 * (v70 & v69) + ((v70 + v69 - 2 * (v70 & v69)) >> 8)));
  v84 = 831689365 * (v83 + HIWORD(v83) + ((v83 + HIWORD(v83)) >> 8) + v75);
  *(_QWORD *)(v19 - 152) = v67;
  LODWORD(STACK[0x65B8]) = (v84 ^ HIWORD(v84)) + v53 + ((v84 ^ HIWORD(v84)) >> 8);
  v85 = v78
      + v12
      + -1279168371 * v74
      - ((-1279168371 * v74) >> 16)
      + ((-1279168371 * v74 - ((-1279168371 * v74) >> 16)) >> 8);
  v86 = (v79 & 1) == 0;
  v87 = STACK[0x6A70];
  v88 = STACK[0x66E0];
  if ((v79 & 1) != 0)
    v89 = STACK[0x66E0];
  else
    v89 = STACK[0x6A70];
  LODWORD(STACK[0x65B0]) = v89;
  v90 = STACK[0x66D8];
  if ((v79 & 1) != 0)
    v88 = STACK[0x66D8];
  LODWORD(STACK[0x65E0]) = v88;
  v91 = STACK[0x66E8];
  if ((v79 & 1) != 0)
    v92 = STACK[0x66E8];
  else
    v92 = v90;
  if ((v79 & 1) != 0)
    v91 = v87;
  LODWORD(STACK[0x6550]) = v91;
  v93 = STACK[0x66D0];
  v94 = STACK[0x6A40];
  if ((v79 & 1) != 0)
    v95 = STACK[0x6A40];
  else
    v95 = STACK[0x66D0];
  LODWORD(STACK[0x6980]) = v95;
  v96 = STACK[0x6A50];
  if ((v79 & 1) == 0)
    v93 = STACK[0x6A50];
  LODWORD(STACK[0x6548]) = v93;
  v97 = STACK[0x6A60];
  if ((v79 & 1) == 0)
    v96 = STACK[0x6A60];
  LODWORD(STACK[0x65A8]) = v96;
  if ((v79 & 1) != 0)
    v98 = v97;
  else
    v98 = v94;
  v99 = STACK[0x6A30];
  v100 = STACK[0x66C0];
  if ((v79 & 1) != 0)
    v101 = STACK[0x66C0];
  else
    v101 = STACK[0x6A30];
  LODWORD(STACK[0x65A0]) = v101;
  v102 = STACK[0x67D0];
  if ((v79 & 1) != 0)
    v100 = STACK[0x67D0];
  LODWORD(STACK[0x65D8]) = v100;
  if ((v79 & 1) != 0)
    v103 = STACK[0x66C8];
  else
    v103 = v102;
  if ((v79 & 1) != 0)
    v104 = v99;
  else
    v104 = STACK[0x66C8];
  v105 = STACK[0x6A20];
  v106 = STACK[0x67E0];
  if ((v79 & 1) != 0)
    v107 = STACK[0x6A20];
  else
    v107 = STACK[0x67E0];
  LODWORD(STACK[0x6598]) = v107;
  if ((v79 & 1) != 0)
    v105 = v54;
  LODWORD(STACK[0x65D0]) = v105;
  v108 = STACK[0x66B8];
  if ((v79 & 1) != 0)
    v109 = STACK[0x66B8];
  else
    v109 = v54;
  if ((v79 & 1) != 0)
    v108 = v106;
  LODWORD(STACK[0x6A20]) = v108;
  v110 = STACK[0x67F0];
  v111 = STACK[0x6AA0];
  if ((v79 & 1) != 0)
    v112 = STACK[0x6AA0];
  else
    v112 = STACK[0x67F0];
  LODWORD(STACK[0x68A0]) = v112;
  v113 = STACK[0x6800];
  if ((v79 & 1) == 0)
    v110 = STACK[0x6800];
  LODWORD(STACK[0x67F0]) = v110;
  v114 = STACK[0x6A00];
  if ((v79 & 1) == 0)
    v113 = STACK[0x6A00];
  LODWORD(STACK[0x6590]) = v113;
  if ((v79 & 1) != 0)
    v115 = v114;
  else
    v115 = v111;
  v116 = STACK[0x69F0];
  v117 = STACK[0x69E0];
  if ((v79 & 1) != 0)
    v118 = STACK[0x69E0];
  else
    v118 = STACK[0x69F0];
  LODWORD(STACK[0x66C8]) = v118;
  v119 = STACK[0x69C0];
  if ((v79 & 1) == 0)
    v116 = STACK[0x69C0];
  LODWORD(STACK[0x6540]) = v116;
  v120 = STACK[0x69D0];
  if ((v79 & 1) == 0)
    v119 = STACK[0x69D0];
  LODWORD(STACK[0x69F0]) = v119;
  if ((v79 & 1) != 0)
    v121 = v120;
  else
    v121 = v117;
  v122 = STACK[0x69B0];
  if ((v79 & 1) != 0)
    v123 = STACK[0x69B0];
  else
    v123 = v66;
  LODWORD(STACK[0x66C0]) = v123;
  v124 = STACK[0x66B0];
  if ((v79 & 1) != 0)
    v125 = STACK[0x66B0];
  else
    v125 = v122;
  v126 = STACK[0x69A0];
  if ((v79 & 1) != 0)
    v124 = STACK[0x69A0];
  LODWORD(STACK[0x6588]) = v124;
  if ((v79 & 1) != 0)
    v127 = v66;
  else
    v127 = v126;
  v128 = STACK[0x6910];
  v129 = STACK[0x6740];
  if ((v79 & 1) != 0)
    v130 = STACK[0x6910];
  else
    v130 = STACK[0x6740];
  LODWORD(STACK[0x6580]) = v130;
  v131 = STACK[0x6750];
  if ((v79 & 1) != 0)
    v128 = STACK[0x6750];
  LODWORD(STACK[0x6940]) = v128;
  v132 = STACK[0x6710];
  if ((v79 & 1) == 0)
    v129 = STACK[0x6710];
  LODWORD(STACK[0x6910]) = v129;
  if ((v79 & 1) != 0)
    v133 = v132;
  else
    v133 = v131;
  v134 = STACK[0x6990];
  v135 = STACK[0x6960];
  if ((v79 & 1) != 0)
    v136 = STACK[0x6990];
  else
    v136 = STACK[0x6960];
  v137 = STACK[0x6970];
  if ((v79 & 1) == 0)
    v135 = STACK[0x6970];
  LODWORD(STACK[0x65C8]) = v135;
  v138 = STACK[0x6810];
  if ((v79 & 1) != 0)
    v134 = STACK[0x6810];
  LODWORD(STACK[0x6578]) = v134;
  if ((v79 & 1) == 0)
    v137 = v138;
  v139 = STACK[0x68F0];
  if ((v79 & 1) != 0)
    v140 = v18;
  else
    v140 = STACK[0x68F0];
  LODWORD(STACK[0x66B8]) = v140;
  v141 = STACK[0x6900];
  if ((v79 & 1) == 0)
    v139 = STACK[0x6900];
  LODWORD(STACK[0x68F0]) = v139;
  v142 = STACK[0x68E0];
  if ((v79 & 1) == 0)
    v141 = STACK[0x68E0];
  LODWORD(STACK[0x6570]) = v141;
  if ((v79 & 1) != 0)
  {
    v143 = v80;
  }
  else
  {
    v142 = v18;
    v143 = v82;
  }
  LODWORD(STACK[0x66B0]) = v143;
  v144 = STACK[0x6890];
  if ((v79 & 1) != 0)
    v80 = STACK[0x6890];
  LODWORD(STACK[0x6538]) = v80;
  if ((v79 & 1) != 0)
    v144 = v55;
  LODWORD(STACK[0x6560]) = v144;
  if ((v79 & 1) == 0)
    v82 = v55;
  v145 = STACK[0x68B0];
  v146 = STACK[0x6708];
  if ((v79 & 1) != 0)
    v147 = STACK[0x6708];
  else
    v147 = STACK[0x68B0];
  LODWORD(STACK[0x6568]) = v147;
  if ((v79 & 1) != 0)
    v146 = v68;
  LODWORD(STACK[0x65C0]) = v146;
  v148 = STACK[0x68C0];
  if ((v79 & 1) != 0)
    v149 = STACK[0x68C0];
  else
    v149 = v68;
  if ((v79 & 1) != 0)
    v148 = v145;
  LODWORD(STACK[0x68C0]) = v148;
  v150 = STACK[0x6870];
  v151 = STACK[0x6860];
  if ((v79 & 1) != 0)
    v152 = STACK[0x6860];
  else
    v152 = STACK[0x6870];
  LODWORD(STACK[0x66E0]) = v152;
  v153 = STACK[0x67C0];
  if ((v79 & 1) != 0)
    v154 = v150;
  else
    v154 = STACK[0x67C0];
  v155 = STACK[0x6840];
  if ((v79 & 1) == 0)
    v153 = STACK[0x6840];
  LODWORD(STACK[0x66D0]) = v153;
  if ((v79 & 1) != 0)
    v156 = v155;
  else
    v156 = v151;
  v157 = STACK[0x6850];
  v158 = STACK[0x6730];
  if ((v79 & 1) != 0)
    v159 = STACK[0x6850];
  else
    v159 = STACK[0x6730];
  v160 = STACK[0x6830];
  if ((v79 & 1) != 0)
    v157 = STACK[0x6830];
  LODWORD(STACK[0x6870]) = v157;
  if ((v79 & 1) != 0)
    v160 = STACK[0x6880];
  else
    v158 = STACK[0x6880];
  v161 = STACK[0x6920];
  v162 = STACK[0x6820];
  if ((v79 & 1) != 0)
    v163 = STACK[0x6820];
  else
    v163 = STACK[0x6920];
  LODWORD(STACK[0x6668]) = v163;
  v164 = STACK[0x67B0];
  if (v86)
    v161 = STACK[0x67B0];
  LODWORD(STACK[0x6920]) = v161;
  v165 = STACK[0x6780];
  if (v86)
    v166 = v162;
  else
    v166 = STACK[0x6780];
  if (!v86)
    v165 = v164;
  LODWORD(STACK[0x6780]) = v165;
  v167 = STACK[0x67A0];
  v168 = STACK[0x6760];
  if (v86)
    v169 = STACK[0x6760];
  else
    v169 = STACK[0x67A0];
  LODWORD(STACK[0x65E8]) = v169;
  v170 = STACK[0x6790];
  if (v86)
    v168 = STACK[0x6790];
  LODWORD(STACK[0x6760]) = v168;
  v171 = STACK[0x6770];
  if (v86)
    v170 = STACK[0x6770];
  LODWORD(STACK[0x6558]) = v170;
  v172 = *(_QWORD *)(v19 - 152);
  if (v86)
    v173 = v167;
  else
    v173 = v171;
  v174 = v85;
  LODWORD(STACK[0x6700]) = v85;
  v175 = (v85 & 1) == 0;
  if ((v85 & 1) != 0)
    v176 = STACK[0x66A8];
  else
    v176 = v75;
  if (v175)
  {
    v75 = v172;
    LODWORD(v172) = v53;
    v53 = STACK[0x66A8];
  }
  if ((v174 & 2) != 0)
    v177 = v53;
  else
    v177 = v75;
  LODWORD(STACK[0x6530]) = v177;
  if ((v174 & 2) != 0)
    v178 = v75;
  else
    v178 = v53;
  LODWORD(STACK[0x66E8]) = v178;
  if ((v174 & 2) != 0)
    v179 = v172;
  else
    v179 = v176;
  LODWORD(STACK[0x66D8]) = v179;
  if ((v174 & 2) != 0)
    v180 = v176;
  else
    v180 = v172;
  v181 = -1279168371 * LODWORD(STACK[0x65B8]) - ((-1279168371 * LODWORD(STACK[0x65B8])) >> 16);
  LODWORD(STACK[0x6720]) += v78 + v181 + (v181 >> 8);
  v182 = (STACK[0x6AB0] & 2) == 0;
  v183 = STACK[0x65B0];
  if ((STACK[0x6AB0] & 2) != 0)
    v184 = STACK[0x65B0];
  else
    v184 = v92;
  if ((STACK[0x6AB0] & 2) != 0)
    v183 = v92;
  LODWORD(STACK[0x6A70]) = v183;
  if (v182)
    v185 = STACK[0x65E0];
  else
    v185 = STACK[0x6550];
  if (v182)
    v186 = STACK[0x6550];
  else
    v186 = STACK[0x65E0];
  v187 = STACK[0x6548];
  if (v182)
    v188 = v98;
  else
    v188 = STACK[0x6548];
  LODWORD(STACK[0x6A40]) = v188;
  if (v182)
    v189 = v187;
  else
    v189 = v98;
  LODWORD(STACK[0x6A50]) = v189;
  v190 = STACK[0x6980];
  v191 = STACK[0x65A8];
  if (v182)
    v192 = STACK[0x65A8];
  else
    v192 = STACK[0x6980];
  LODWORD(STACK[0x6A60]) = v192;
  if (v182)
    v193 = v190;
  else
    v193 = v191;
  v194 = STACK[0x65A0];
  if (v182)
    v195 = STACK[0x65A0];
  else
    v195 = v103;
  LODWORD(STACK[0x6A30]) = v195;
  if (v182)
    v196 = v103;
  else
    v196 = v194;
  LODWORD(STACK[0x67D0]) = v196;
  if (v182)
    v197 = STACK[0x65D8];
  else
    v197 = v104;
  if (!v182)
    v104 = STACK[0x65D8];
  v198 = STACK[0x6598];
  if (v182)
    v199 = STACK[0x6598];
  else
    v199 = v109;
  LODWORD(STACK[0x67E0]) = v199;
  if (v182)
    v200 = v109;
  else
    v200 = v198;
  LODWORD(STACK[0x6A10]) = v200;
  v201 = STACK[0x6A20];
  if (v182)
    v202 = STACK[0x6A20];
  else
    v202 = STACK[0x65D0];
  if (v182)
    v201 = STACK[0x65D0];
  LODWORD(STACK[0x6A20]) = v201;
  v203 = STACK[0x67F0];
  if (v182)
    v204 = v115;
  else
    v204 = STACK[0x67F0];
  LODWORD(STACK[0x6AA0]) = v204;
  if (v182)
    v205 = v203;
  else
    v205 = v115;
  LODWORD(STACK[0x6800]) = v205;
  v206 = STACK[0x68A0];
  v207 = STACK[0x6590];
  if (v182)
    v208 = STACK[0x68A0];
  else
    v208 = STACK[0x6590];
  LODWORD(STACK[0x67F0]) = v208;
  if (v182)
    v209 = v207;
  else
    v209 = v206;
  LODWORD(STACK[0x6A00]) = v209;
  v210 = STACK[0x6540];
  if (v182)
    v211 = v121;
  else
    v211 = STACK[0x6540];
  LODWORD(STACK[0x69E0]) = v211;
  if (v182)
    v212 = v210;
  else
    v212 = v121;
  LODWORD(STACK[0x69C0]) = v212;
  v213 = STACK[0x66C8];
  v214 = STACK[0x69F0];
  if (v182)
    v215 = STACK[0x69F0];
  else
    v215 = STACK[0x66C8];
  LODWORD(STACK[0x69D0]) = v215;
  if (v182)
    v216 = v213;
  else
    v216 = v214;
  LODWORD(STACK[0x69F0]) = v216;
  if (v182)
    v217 = v127;
  else
    v217 = v125;
  LODWORD(STACK[0x69A0]) = v217;
  if (v182)
    v218 = v125;
  else
    v218 = v127;
  LODWORD(STACK[0x69B0]) = v218;
  v219 = STACK[0x6588];
  if (v182)
    v220 = STACK[0x6588];
  else
    v220 = STACK[0x66C0];
  if (v182)
    v219 = STACK[0x66C0];
  LODWORD(STACK[0x6980]) = v219;
  v221 = STACK[0x6580];
  if (v182)
    v222 = v133;
  else
    v222 = STACK[0x6580];
  LODWORD(STACK[0x6750]) = v222;
  if (v182)
    v223 = v221;
  else
    v223 = v133;
  LODWORD(STACK[0x6740]) = v223;
  if (v182)
    v224 = v136;
  else
    v224 = v137;
  LODWORD(STACK[0x6960]) = v224;
  if (v182)
    v225 = v137;
  else
    v225 = v136;
  LODWORD(STACK[0x6810]) = v225;
  v226 = STACK[0x6940];
  v227 = STACK[0x6910];
  if (v182)
    v228 = STACK[0x6910];
  else
    v228 = STACK[0x6940];
  LODWORD(STACK[0x6710]) = v228;
  if (v182)
    v229 = v226;
  else
    v229 = v227;
  LODWORD(STACK[0x6910]) = v229;
  v230 = STACK[0x65C8];
  v231 = STACK[0x6578];
  if (v182)
    v232 = STACK[0x6578];
  else
    v232 = STACK[0x65C8];
  LODWORD(STACK[0x6990]) = v232;
  if (v182)
    v233 = v230;
  else
    v233 = v231;
  LODWORD(STACK[0x6970]) = v233;
  v234 = STACK[0x68F0];
  if (v182)
    v235 = v142;
  else
    v235 = STACK[0x68F0];
  LODWORD(STACK[0x66A8]) = v235;
  if (v182)
    v236 = v234;
  else
    v236 = v142;
  LODWORD(STACK[0x6900]) = v236;
  v237 = STACK[0x66B8];
  v238 = STACK[0x6570];
  if (v182)
    v239 = STACK[0x66B8];
  else
    v239 = STACK[0x6570];
  LODWORD(STACK[0x68F0]) = v239;
  if (v182)
    v240 = v238;
  else
    v240 = v237;
  LODWORD(STACK[0x68E0]) = v240;
  v241 = STACK[0x6538];
  if (v182)
    v242 = v82;
  else
    v242 = STACK[0x6538];
  LODWORD(STACK[0x6950]) = v242;
  if (v182)
    v243 = v241;
  else
    v243 = v82;
  LODWORD(STACK[0x68A0]) = v243;
  v244 = STACK[0x66B0];
  v245 = STACK[0x6560];
  if (v182)
    v246 = STACK[0x6560];
  else
    v246 = STACK[0x66B0];
  LODWORD(STACK[0x6890]) = v246;
  if (v182)
    v247 = v244;
  else
    v247 = v245;
  LODWORD(STACK[0x6940]) = v247;
  v248 = STACK[0x6568];
  if (v182)
    v249 = v149;
  else
    v249 = STACK[0x6568];
  LODWORD(STACK[0x68D0]) = v249;
  if (v182)
    v250 = v248;
  else
    v250 = v149;
  LODWORD(STACK[0x68B0]) = v250;
  v251 = STACK[0x65C0];
  v252 = STACK[0x68C0];
  if (v182)
    v253 = STACK[0x65C0];
  else
    v253 = STACK[0x68C0];
  LODWORD(STACK[0x6708]) = v253;
  if (v182)
    v254 = v252;
  else
    v254 = v251;
  LODWORD(STACK[0x68C0]) = v254;
  if (v182)
    v255 = v154;
  else
    v255 = v156;
  LODWORD(STACK[0x67C0]) = v255;
  if (v182)
    v256 = v156;
  else
    v256 = v154;
  LODWORD(STACK[0x6860]) = v256;
  if (v182)
    v257 = v160;
  else
    v257 = v159;
  LODWORD(STACK[0x6830]) = v257;
  if (v182)
    v258 = v159;
  else
    v258 = v160;
  LODWORD(STACK[0x6730]) = v258;
  v259 = STACK[0x6870];
  if (v182)
    v260 = STACK[0x6870];
  else
    v260 = v158;
  LODWORD(STACK[0x6850]) = v260;
  if (v182)
    v261 = v158;
  else
    v261 = v259;
  LODWORD(STACK[0x6880]) = v261;
  v262 = STACK[0x66E0];
  v263 = STACK[0x66D0];
  if (v182)
    v264 = STACK[0x66E0];
  else
    v264 = STACK[0x66D0];
  LODWORD(STACK[0x6870]) = v264;
  if (v182)
    v265 = v263;
  else
    v265 = v262;
  LODWORD(STACK[0x6840]) = v265;
  v266 = STACK[0x6920];
  if (v182)
    v267 = v166;
  else
    v267 = STACK[0x6920];
  LODWORD(STACK[0x6820]) = v267;
  if (v182)
    v268 = v266;
  else
    v268 = v166;
  LODWORD(STACK[0x67B0]) = v268;
  v269 = STACK[0x6668];
  v270 = STACK[0x6780];
  if (v182)
    v271 = STACK[0x6668];
  else
    v271 = STACK[0x6780];
  LODWORD(STACK[0x6920]) = v271;
  if (v182)
    v272 = v270;
  else
    v272 = v269;
  LODWORD(STACK[0x6780]) = v272;
  v273 = STACK[0x6760];
  if (v182)
    v274 = STACK[0x6760];
  else
    v274 = v173;
  LODWORD(STACK[0x6790]) = v274;
  if (v182)
    v275 = v173;
  else
    v275 = v273;
  LODWORD(STACK[0x67A0]) = v275;
  v276 = STACK[0x65E8];
  v277 = STACK[0x6558];
  if (v182)
    v278 = STACK[0x65E8];
  else
    v278 = STACK[0x6558];
  LODWORD(STACK[0x6760]) = v278;
  if (v182)
    v279 = v277;
  else
    v279 = v276;
  LODWORD(STACK[0x6770]) = v279;
  v280 = STACK[0x6400];
  v281 = LODWORD(STACK[0x6200]) ^ LODWORD(STACK[0x6400]);
  v282 = STACK[0x6438];
  v283 = v281 ^ 0x68046D0E ^ LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x6530]);
  LODWORD(STACK[0x66E0]) = v185;
  v284 = v185 ^ v180;
  v285 = STACK[0x6140];
  if ((v284 & STACK[0x6150]) == 0)
    v285 = STACK[0x6150];
  v286 = v281 ^ LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x6148]) ^ (v285 + v284);
  v287 = v281 ^ LODWORD(STACK[0x63B0]) ^ v282 ^ LODWORD(STACK[0x66D8]);
  LODWORD(STACK[0x66D8]) = v184;
  v288 = v283 ^ v184;
  v289 = 4 * BYTE2(v288);
  STACK[0xDB20] = v78 + v289;
  v290 = v281 ^ LODWORD(STACK[0x63A8]) ^ v282 ^ LODWORD(STACK[0x66E8]);
  LODWORD(STACK[0x66E8]) = v186;
  v291 = v287 ^ v186;
  v292 = v290 ^ LODWORD(STACK[0x6A70]);
  LODWORD(v289) = *(_DWORD *)(v78 + v289);
  STACK[0xDB20] = v78;
  v293 = *(_DWORD *)(v78 + 4 * BYTE1(v291));
  v294 = (_DWORD *)(v78 + 4 * BYTE1(v292));
  v295 = (_DWORD *)(v78 + 4 * HIBYTE(v292));
  STACK[0xDB20] = (unint64_t)v294;
  LODWORD(v294) = *v294;
  STACK[0xDB20] = (unint64_t)v295;
  LODWORD(v295) = *v295;
  v296 = (int *)(v78 + 4 * v286);
  STACK[0xDB20] = (unint64_t)v296;
  v297 = *v296;
  v298 = (_DWORD *)(v78 + 4 * HIBYTE(v291));
  v299 = v78 + 4 * BYTE2(v286);
  v300 = (_DWORD *)(v78 + 4 * HIBYTE(v288));
  v301 = (_DWORD *)(v78 + 4 * v288);
  v302 = (_DWORD *)(v78 + 4 * BYTE1(v288));
  STACK[0xDB20] = (unint64_t)v298;
  LODWORD(v298) = *v298;
  STACK[0xDB20] = v299;
  LODWORD(v299) = *(_DWORD *)v299;
  STACK[0xDB20] = (unint64_t)v300;
  LODWORD(v300) = *v300;
  STACK[0xDB20] = (unint64_t)v301;
  LODWORD(v301) = *v301;
  STACK[0xDB20] = (unint64_t)v302;
  LODWORD(v302) = *v302;
  v303 = (int *)(v78 + 4 * BYTE2(v291));
  STACK[0xDB20] = (unint64_t)v303;
  v304 = *v303;
  v305 = v78 + 4 * BYTE2(v292);
  v306 = (_DWORD *)(v78 + 4 * v291);
  STACK[0xDB20] = v305;
  LODWORD(v305) = *(_DWORD *)v305;
  STACK[0xDB20] = (unint64_t)v306;
  v307 = v78;
  LODWORD(v306) = *v306;
  v308 = (int *)(v78 + 4 * HIBYTE(v286));
  STACK[0xDB20] = (unint64_t)v308;
  v309 = *v308;
  v310 = v307 + 4 * v292;
  STACK[0xDB20] = v310;
  v311 = *(_DWORD *)v310;
  v312 = 4 * BYTE1(v286);
  STACK[0xDB20] = v307 + v312;
  v313 = STACK[0x6440];
  LODWORD(v310) = LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x6440]);
  LODWORD(v289) = v310 ^ v289 ^ __ROR4__(v293, 8) ^ __ROR4__(v309, 24);
  v314 = __ROR4__(v311, 16);
  LODWORD(STACK[0x66D0]) = v193;
  v315 = STACK[0x6700];
  v316 = LODWORD(STACK[0x6AB0]) + LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6A80]) = v316;
  v317 = LODWORD(STACK[0x63A0]) ^ 0x27B8727C ^ ((v289 ^ v314 ^ v315 ^ v193 ^ -(v289 ^ v314 ^ v315 ^ v193) ^ (v316 - (v289 ^ v314 ^ v315 ^ v193 ^ v316)))
                                              + v316);
  LODWORD(v294) = v310 ^ LODWORD(STACK[0x61E8]) ^ LODWORD(STACK[0x6398]) ^ __ROR4__((_DWORD)v294, 8) ^ __ROR4__(v297, 16) ^ __ROR4__((_DWORD)v300, 24) ^ LODWORD(STACK[0x6A40]) ^ v304;
  v318 = STACK[0x6720];
  LODWORD(v312) = v310 ^ LODWORD(STACK[0x6388]) ^ __ROR4__((_DWORD)v298, 24) ^ __ROR4__((_DWORD)v301, 16) ^ v305 ^ __ROR4__(*(_DWORD *)(v307 + v312), 8) ^ LODWORD(STACK[0x6720]) ^ v315 ^ LODWORD(STACK[0x6A60]);
  LODWORD(v305) = v310 ^ LODWORD(STACK[0x6390]) ^ __ROR4__((_DWORD)v295, 24) ^ v299 ^ __ROR4__((_DWORD)v302, 8) ^ __ROR4__((_DWORD)v306, 16) ^ LODWORD(STACK[0x6A50]);
  v319 = 4 * BYTE1(v317);
  v320 = v307 + v319;
  v321 = 4 * BYTE3(v305);
  v322 = (_DWORD *)(v320 + v321 - v319);
  v323 = BYTE2(v317);
  v324 = (unint64_t)&v322[v323 + v321 / 0xFFFFFFFFFFFFFFFCLL];
  v325 = 4 * BYTE2(v305);
  v326 = v324 - v323 * 4 + v325;
  v327 = 4 * BYTE3(v312);
  v328 = (_DWORD *)(v326 + v327 - v325);
  STACK[0xDB20] = v320;
  LODWORD(v320) = *(_DWORD *)v320;
  STACK[0xDB20] = (unint64_t)v322;
  LODWORD(v322) = *v322;
  STACK[0xDB20] = v324;
  LODWORD(v324) = *(_DWORD *)v324;
  STACK[0xDB20] = v326;
  LODWORD(v326) = *(_DWORD *)v326;
  STACK[0xDB20] = (unint64_t)v328;
  v329 = (unint64_t)&v328[v327 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v328) = *v328;
  v330 = v329 + 4 * (v294 >> 24);
  STACK[0xDB20] = v330;
  LODWORD(v299) = *(_DWORD *)v330;
  v331 = (_DWORD *)(v329 + 4 * BYTE2(v294));
  STACK[0xDB20] = (unint64_t)v331;
  LODWORD(v330) = *v331;
  STACK[0xDB20] = v329;
  LODWORD(v331) = *(_DWORD *)(v329 + 4 * v317);
  v332 = v329 + 4 * BYTE1(v305);
  STACK[0xDB20] = v332;
  LODWORD(v302) = *(_DWORD *)v332;
  v333 = (_DWORD *)(v329 + 4 * BYTE2(v312));
  STACK[0xDB20] = (unint64_t)v333;
  LODWORD(v332) = *v333;
  v334 = (int *)(v329 + 4 * HIBYTE(v317));
  STACK[0xDB20] = (unint64_t)v334;
  v335 = *v334;
  v336 = 4 * v305;
  v337 = (_DWORD *)(v329 + v336);
  v338 = v312;
  v339 = (unint64_t)&v337[v338 + v336 / 0xFFFFFFFFFFFFFFFCLL];
  v340 = 4 * BYTE1(v312);
  v341 = (_DWORD *)(v339 + v340 - v338 * 4);
  v342 = 4 * BYTE1(v294);
  v343 = &v341[v340 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v342 / 4];
  v344 = 4 * v294;
  v345 = &v343[(unint64_t)v344 / 4 + v342 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v310) = LODWORD(STACK[0x63E0]) ^ v280;
  v346 = v310 ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x62E0]);
  LODWORD(STACK[0x66C0]) = v197;
  STACK[0xDB20] = (unint64_t)v337;
  v347 = v346 ^ v197 ^ v330 ^ __ROR4__(v335, 24) ^ __ROR4__(*v337, 16);
  STACK[0xDB20] = v339;
  LODWORD(v339) = *(_DWORD *)v339;
  STACK[0xDB20] = (unint64_t)v341;
  v348 = v347 ^ __ROR4__(*v341, 8);
  LODWORD(v320) = v310 ^ LODWORD(STACK[0x6380]) ^ __ROR4__(v320, 8) ^ v326;
  STACK[0xDB20] = (unint64_t)v343;
  LODWORD(v343) = *v343;
  STACK[0xDB20] = (unint64_t)v345;
  v349 = &v345[v344 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v326) = *v345;
  LODWORD(STACK[0x66C8]) = v104;
  LODWORD(v320) = v320 ^ __ROR4__((_DWORD)v328, 24) ^ v104 ^ __ROR4__(v326, 16);
  LODWORD(v343) = v310 ^ LODWORD(STACK[0x6378]) ^ __ROR4__((_DWORD)v322, 24) ^ v324 ^ LODWORD(STACK[0x6A30]) ^ __ROR4__(v339, 16) ^ __ROR4__((_DWORD)v343, 8);
  LODWORD(v339) = v310 ^ LODWORD(STACK[0x6368]) ^ 0x6D532961 ^ LODWORD(STACK[0x6370]) ^ __ROR4__(v299, 24) ^ LODWORD(STACK[0x67D0]) ^ __ROR4__((_DWORD)v331, 16) ^ __ROR4__((_DWORD)v302, 8) ^ v332;
  v350 = &v349[BYTE1(v348)];
  STACK[0xDB20] = (unint64_t)v350;
  LODWORD(v322) = *v350;
  v351 = &v349[BYTE3(v339)];
  STACK[0xDB20] = (unint64_t)v351;
  LODWORD(v350) = *v351;
  v352 = BYTE2(v320);
  v353 = (unint64_t)&v349[v352];
  v354 = 4 * v320;
  v355 = (_DWORD *)(v353 + v354 - v352 * 4);
  v356 = 4 * v339;
  v357 = &v355[(unint64_t)v356 / 4 + v354 / 0xFFFFFFFFFFFFFFFCLL];
  v358 = 4 * BYTE3(v320);
  v359 = &v357[v356 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v358 / 4];
  v360 = v343;
  v361 = (unint64_t)&v359[v360 + v358 / 0xFFFFFFFFFFFFFFFCLL];
  v362 = 4 * v348;
  v363 = (_DWORD *)(v361 + v362 - v360 * 4);
  v364 = BYTE2(v339);
  v365 = (unint64_t)&v363[v364 + v362 / 0xFFFFFFFFFFFFFFFCLL];
  v366 = 4 * BYTE2(v343);
  v367 = v365 + v366 - v364 * 4;
  STACK[0xDB20] = v353;
  LODWORD(v353) = *(_DWORD *)v353;
  STACK[0xDB20] = (unint64_t)v355;
  LODWORD(v355) = *v355;
  STACK[0xDB20] = (unint64_t)v357;
  LODWORD(v357) = *v357;
  STACK[0xDB20] = (unint64_t)v359;
  LODWORD(v359) = *v359;
  STACK[0xDB20] = v361;
  LODWORD(v361) = *(_DWORD *)v361;
  STACK[0xDB20] = (unint64_t)v363;
  LODWORD(v363) = *v363;
  STACK[0xDB20] = v365;
  LODWORD(v365) = *(_DWORD *)v365;
  STACK[0xDB20] = v367;
  v368 = v367 - v366;
  LODWORD(v367) = *(_DWORD *)v367;
  v369 = (_DWORD *)(v368 + 4 * BYTE1(v320));
  STACK[0xDB20] = (unint64_t)v369;
  LODWORD(v320) = *v369;
  v370 = (_DWORD *)(v368 + 4 * BYTE1(v339));
  STACK[0xDB20] = (unint64_t)v370;
  LODWORD(v339) = *v370;
  v371 = (_DWORD *)(v368 + 4 * HIBYTE(v348));
  STACK[0xDB20] = (unint64_t)v371;
  LODWORD(v370) = *v371;
  LODWORD(v371) = v343 >> 24;
  v372 = 4 * BYTE1(v343);
  v373 = (_DWORD *)(v368 + v372);
  v374 = v371;
  v375 = (unint64_t)&v373[v374 + v372 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = (unint64_t)v373;
  LODWORD(v373) = *v373;
  STACK[0xDB20] = v375;
  v376 = v375 - v374 * 4;
  LODWORD(v375) = *(_DWORD *)v375;
  v377 = 4 * BYTE2(v348);
  STACK[0xDB20] = v376 + v377;
  v378 = STACK[0x63E8];
  LODWORD(v310) = LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x63E8]);
  v379 = v310 ^ LODWORD(STACK[0x6360]);
  LODWORD(STACK[0x66B8]) = v202;
  LODWORD(v322) = v379 ^ v202 ^ __ROR4__((_DWORD)v322, 8) ^ __ROR4__((_DWORD)v357, 16) ^ __ROR4__((_DWORD)v359, 24) ^ v367;
  LODWORD(v375) = v310 ^ LODWORD(STACK[0x6318]) ^ 0xE1D6E47D ^ LODWORD(STACK[0x6358]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__((_DWORD)v355, 16) ^ __ROR4__(v339, 8) ^ __ROR4__(v375, 24) ^ *(_DWORD *)(v376 + v377);
  LODWORD(v377) = v310 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6A20]) ^ __ROR4__(v361, 16) ^ v365 ^ __ROR4__(v320, 8) ^ __ROR4__((_DWORD)v370, 24);
  LODWORD(v353) = v310 ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x61DC]) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x6A10]) ^ __ROR4__((_DWORD)v350, 24) ^ v353 ^ __ROR4__((_DWORD)v363, 16) ^ __ROR4__((_DWORD)v373, 8);
  v380 = (_DWORD *)(v376 + 4 * BYTE3(v377));
  STACK[0xDB20] = (unint64_t)v380;
  LODWORD(v339) = *v380;
  v381 = (_DWORD *)(v376 + 4 * v353);
  v382 = v376 + 4 * BYTE3(v353);
  v383 = (_DWORD *)(v376 + 4 * v375);
  v384 = v376 + 4 * BYTE3(v375);
  STACK[0xDB20] = (unint64_t)v381;
  LODWORD(v381) = *v381;
  STACK[0xDB20] = v382;
  LODWORD(v382) = *(_DWORD *)v382;
  STACK[0xDB20] = (unint64_t)v383;
  LODWORD(v383) = *v383;
  STACK[0xDB20] = v384;
  LODWORD(v384) = *(_DWORD *)v384;
  v385 = (_DWORD *)(v376 + 4 * BYTE2(v375));
  STACK[0xDB20] = (unint64_t)v385;
  LODWORD(v361) = *v385;
  v386 = (_DWORD *)(v376 + 4 * v322);
  STACK[0xDB20] = (unint64_t)v386;
  LODWORD(v385) = *v386;
  v387 = (_DWORD *)(v376 + 4 * v377);
  STACK[0xDB20] = (unint64_t)v387;
  LODWORD(v386) = *v387;
  v388 = (_DWORD *)(v376 + 4 * BYTE1(v377));
  STACK[0xDB20] = (unint64_t)v388;
  LODWORD(v387) = *v388;
  v389 = v376 + 4 * BYTE1(v375);
  STACK[0xDB20] = v389;
  LODWORD(v375) = *(_DWORD *)v389;
  v390 = (_DWORD *)(v376 + 4 * BYTE2(v353));
  STACK[0xDB20] = (unint64_t)v390;
  LODWORD(v389) = *v390;
  v391 = (_DWORD *)(v376 + 4 * BYTE1(v353));
  v392 = v376 + 4 * BYTE2(v377);
  v393 = (_DWORD *)(v376 + 4 * BYTE1(v322));
  v394 = v376;
  LODWORD(v376) = v322 >> 24;
  v395 = 4 * BYTE2(v322);
  v396 = (_DWORD *)(v394 + v395);
  v397 = 4 * v376;
  v398 = &v396[(unint64_t)v397 / 4 + v395 / 0xFFFFFFFFFFFFFFFCLL];
  v399 = STACK[0x63D8];
  LODWORD(v310) = LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x6158]);
  LODWORD(v384) = v310 ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6800]) ^ __ROR4__(v384, 24) ^ __ROR4__((_DWORD)v385, 16);
  STACK[0xDB20] = (unint64_t)v391;
  v400 = __ROR4__(*v391, 8);
  STACK[0xDB20] = v392;
  LODWORD(v392) = v384 ^ v400 ^ *(_DWORD *)v392;
  LODWORD(v382) = LODWORD(STACK[0x6458]) ^ 0x98B745DD ^ LODWORD(STACK[0x61C0]) ^ v399 ^ LODWORD(STACK[0x6AA0]) ^ __ROR4__(v382, 24) ^ __ROR4__((_DWORD)v386, 16);
  STACK[0xDB20] = (unint64_t)v393;
  LODWORD(v393) = *v393;
  STACK[0xDB20] = (unint64_t)v396;
  LODWORD(v382) = v382 ^ __ROR4__(v375, 8) ^ *v396;
  LODWORD(v375) = v310 ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x6A00]) ^ __ROR4__((_DWORD)v381, 16) ^ v361 ^ __ROR4__((_DWORD)v387, 8);
  STACK[0xDB20] = (unint64_t)v398;
  v401 = &v398[v397 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v398) = v375 ^ __ROR4__(*v398, 24);
  LODWORD(v375) = v310 ^ LODWORD(STACK[0x6330]) ^ LODWORD(STACK[0x67F0]) ^ __ROR4__(v339, 24) ^ __ROR4__((_DWORD)v383, 16) ^ v389;
  v402 = __ROR4__((_DWORD)v393, 8);
  LODWORD(v393) = LODWORD(STACK[0x6340]) ^ 0xCA767DCB ^ ((v375 ^ v402) - 898204213 - ((2 * (v375 ^ v402)) & 0x94ECFB96));
  v403 = (unint64_t)&v401[v392];
  STACK[0xDB20] = v403;
  v404 = *(_DWORD *)v403;
  v405 = &v401[BYTE1(v393)];
  STACK[0xDB20] = (unint64_t)v405;
  LODWORD(v403) = *v405;
  v406 = BYTE1(v392);
  v407 = (unint64_t)&v401[v406];
  v408 = 4 * (v393 >> 24);
  v409 = (int *)(v407 + v408 - v406 * 4);
  v410 = 4 * v393;
  v411 = &v409[(unint64_t)v410 / 4 + v408 / 0xFFFFFFFFFFFFFFFCLL];
  v412 = 4 * BYTE3(v382);
  v413 = &v411[(unint64_t)v412 / 4 + v410 / 0xFFFFFFFFFFFFFFFCLL];
  v414 = 4 * BYTE2(v382);
  v415 = &v413[(unint64_t)v414 / 4 + v412 / 0xFFFFFFFFFFFFFFFCLL];
  v416 = 4 * BYTE1(v382);
  v417 = &v415[v414 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v416 / 4];
  v418 = 4 * BYTE2(v392);
  v419 = &v417[(unint64_t)v418 / 4 + v416 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = v407;
  LODWORD(v407) = *(_DWORD *)v407;
  STACK[0xDB20] = (unint64_t)v409;
  v420 = *v409;
  STACK[0xDB20] = (unint64_t)v411;
  LODWORD(v411) = *v411;
  STACK[0xDB20] = (unint64_t)v413;
  LODWORD(v413) = *v413;
  STACK[0xDB20] = (unint64_t)v415;
  v421 = *v415;
  STACK[0xDB20] = (unint64_t)v417;
  v422 = *v417;
  STACK[0xDB20] = (unint64_t)v419;
  LODWORD(v403) = *v419 ^ __ROR4__(v403, 8);
  v423 = 4 * v382;
  v424 = &v419[(unint64_t)v423 / 4 + v418 / 0xFFFFFFFFFFFFFFFCLL];
  v425 = BYTE2(v398);
  v426 = (unint64_t)&v424[v425 + v423 / 0xFFFFFFFFFFFFFFFCLL];
  v427 = 4 * BYTE2(v393);
  v428 = (int *)(v426 + v427 - v425 * 4);
  STACK[0xDB20] = (unint64_t)v424;
  LODWORD(v403) = v403 ^ __ROR4__(*v424, 16);
  v429 = 4 * BYTE3(v392);
  v430 = &v428[(unint64_t)v429 / 4 + v427 / 0xFFFFFFFFFFFFFFFCLL];
  v431 = 4 * (v398 >> 24);
  v432 = &v430[(unint64_t)v431 / 4 + v429 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = v426;
  LODWORD(v426) = *(_DWORD *)v426;
  STACK[0xDB20] = (unint64_t)v428;
  v433 = *v428;
  STACK[0xDB20] = (unint64_t)v430;
  v434 = *v430;
  STACK[0xDB20] = (unint64_t)v432;
  v435 = &v432[v431 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v432) = v403 ^ __ROR4__(*v432, 24);
  v436 = 4 * v398;
  v437 = &v435[(unint64_t)v436 / 4];
  v438 = 4 * BYTE1(v398);
  v439 = &v437[(unint64_t)v438 / 4 + v436 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v407) = LODWORD(STACK[0x69C0]) ^ v313 ^ __ROR4__(v407, 8) ^ __ROR4__((_DWORD)v411, 16);
  v440 = __ROR4__((_DWORD)v413, 24);
  v441 = STACK[0x6448];
  v442 = LODWORD(STACK[0x61A8]) + LODWORD(STACK[0x61A0]) + (_DWORD)v432;
  v443 = (v441 ^ LODWORD(STACK[0x6138]) ^ ((v407 ^ v440 ^ v426) - (v407 ^ v440 ^ v426 ^ v441))) + (v407 ^ v440 ^ v426);
  v444 = STACK[0x6198];
  if (!LODWORD(STACK[0x66F0]))
    v444 = STACK[0x6930];
  v445 = LODWORD(STACK[0x6308]) ^ 0xB4643FE6 ^ (((v444 & STACK[0x6338]) >> LODWORD(STACK[0x6A90]))
                                              - 1268498458
                                              - ((2 * ((v444 & STACK[0x6338]) >> LODWORD(STACK[0x6A90]))) & 0x68C87FCC)) ^ v443;
  v446 = v441 ^ v313 ^ LODWORD(STACK[0x6190]) ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x69F0]) ^ (v442 + 1);
  v447 = v441 ^ v313 ^ LODWORD(STACK[0x6188]) ^ LODWORD(STACK[0x69D0]) ^ __ROR4__(v404, 16) ^ __ROR4__(v420, 24) ^ v421;
  STACK[0xDB20] = (unint64_t)v437;
  v448 = *v437;
  STACK[0xDB20] = (unint64_t)v439;
  v449 = (unint64_t)&v439[v438 / 0xFFFFFFFFFFFFFFFCLL];
  v450 = v447 ^ __ROR4__(*v439, 8);
  v451 = v441 ^ v313 ^ LODWORD(STACK[0x6328]) ^ LODWORD(STACK[0x69E0]) ^ __ROR4__(v422, 8) ^ v433 ^ __ROR4__(v434, 24) ^ __ROR4__(v448, 16);
  v452 = v449 + 4 * BYTE1(v445);
  STACK[0xDB20] = v452;
  v453 = *(_DWORD *)v452;
  v454 = v449 + 4 * BYTE2(v445);
  STACK[0xDB20] = v454;
  LODWORD(v452) = *(_DWORD *)v454;
  STACK[0xDB20] = v449;
  LODWORD(v454) = *(_DWORD *)(v449 + 4 * BYTE2(v451));
  v455 = v449 + 4 * HIBYTE(v451);
  STACK[0xDB20] = v455;
  v456 = *(_DWORD *)v455;
  v457 = (_DWORD *)(v449 + 4 * v445);
  STACK[0xDB20] = (unint64_t)v457;
  LODWORD(v455) = *v457;
  v458 = (_DWORD *)(v449 + 4 * v450);
  STACK[0xDB20] = (unint64_t)v458;
  LODWORD(v457) = *v458;
  v459 = (_DWORD *)(v449 + 4 * v446);
  STACK[0xDB20] = (unint64_t)v459;
  LODWORD(v454) = v454 ^ __ROR4__(v455, 16);
  LODWORD(v455) = *v459;
  v460 = 4 * BYTE1(v451);
  v461 = v449 + v460;
  v462 = 4 * HIBYTE(v445);
  v463 = v461 + v462 - v460;
  STACK[0xDB20] = v461;
  HIDWORD(v464) = *(_DWORD *)v461;
  LODWORD(v464) = *(_DWORD *)v461;
  LODWORD(v461) = (v464 >> 8) ^ __ROR4__((_DWORD)v457, 16);
  v465 = 4 * BYTE1(v450);
  v466 = v463 + v465 - v462;
  STACK[0xDB20] = v463;
  LODWORD(v461) = v461 ^ __ROR4__(*(_DWORD *)v463, 24);
  STACK[0xDB20] = v466;
  v467 = v466 - v465;
  LODWORD(v466) = *(_DWORD *)v466;
  v468 = (_DWORD *)(v467 + 4 * BYTE2(v450));
  STACK[0xDB20] = (unint64_t)v468;
  LODWORD(v466) = v454 ^ __ROR4__(v466, 8);
  LODWORD(v463) = *v468;
  v469 = (_DWORD *)(v467 + 4 * v451);
  v470 = 4 * HIBYTE(v450);
  v471 = v467 + v470;
  STACK[0xDB20] = (unint64_t)v469;
  LODWORD(v467) = *v469;
  STACK[0xDB20] = v471;
  v472 = v471 - v470;
  LODWORD(v468) = *(_DWORD *)v471;
  v473 = v472 + 4 * BYTE2(v446);
  STACK[0xDB20] = v473;
  LODWORD(v471) = v461 ^ *(_DWORD *)v473;
  v474 = 4 * HIBYTE(v446);
  v475 = (_DWORD *)(v472 + v474);
  v476 = BYTE1(v446);
  v477 = (unint64_t)&v475[v476 + v474 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = (unint64_t)v475;
  LODWORD(v473) = v466 ^ __ROR4__(*v475, 24);
  STACK[0xDB20] = v477;
  v478 = v477 - v476 * 4;
  v479 = v316 ^ v315 ^ v452 ^ __ROR4__(v467, 16) ^ __ROR4__((_DWORD)v468, 24) ^ __ROR4__(*(_DWORD *)v477, 8);
  v480 = v315 ^ v318 ^ __ROR4__(v453, 8) ^ __ROR4__(v456, 24) ^ __ROR4__(v455, 16) ^ v463;
  v481 = LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x6178]) ^ ((v313 ^ LODWORD(STACK[0x6130]) ^ ((v479 ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x69A0]))
                                                                                            - (v479 ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x69A0]) ^ v313)))
                                                          + (v479 ^ (LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x69A0]))));
  LODWORD(v477) = v313 ^ LODWORD(STACK[0x63C8]);
  v482 = v477 ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6180]);
  LODWORD(STACK[0x66B0]) = v220;
  v483 = v482 ^ v220 ^ v480;
  v484 = 4 * BYTE2(v483);
  STACK[0xDB20] = v478 + v484;
  LODWORD(v452) = v477 ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x69B0]) ^ v473;
  LODWORD(v484) = *(_DWORD *)(v478 + v484);
  STACK[0xDB20] = v478;
  LODWORD(v455) = *(_DWORD *)(v478 + 4 * BYTE1(v481));
  v485 = 4 * BYTE1(v483);
  v486 = v478 + v485;
  v487 = 4 * BYTE3(v452);
  v488 = (_DWORD *)(v486 + v487 - v485);
  STACK[0xDB20] = v486;
  LODWORD(v486) = *(_DWORD *)v486;
  STACK[0xDB20] = (unint64_t)v488;
  v489 = &v488[v487 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v463) = *v488;
  v490 = 4 * v452;
  STACK[0xDB20] = (unint64_t)v489 + v490;
  LODWORD(v468) = v477 ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6980]) ^ v471;
  LODWORD(v490) = *(_DWORD *)((char *)v489 + v490);
  v491 = BYTE1(v468);
  v492 = &v489[v491];
  v493 = 4 * BYTE2(v452);
  v494 = (unint64_t)v492 + v493 - v491 * 4;
  STACK[0xDB20] = (unint64_t)v492;
  HIDWORD(v464) = *v492;
  LODWORD(v464) = *v492;
  LODWORD(v490) = (v464 >> 8) ^ __ROR4__(v490, 16);
  STACK[0xDB20] = v494;
  v495 = v494 - v493;
  LODWORD(v494) = *(_DWORD *)v494;
  v496 = (_DWORD *)(v495 + 4 * HIBYTE(v483));
  STACK[0xDB20] = (unint64_t)v496;
  LODWORD(v464) = __ROR4__(*v496, 24);
  v497 = (_DWORD *)(v495 + 4 * BYTE2(v468));
  STACK[0xDB20] = (unint64_t)v497;
  LODWORD(v493) = *v497;
  STACK[0xDB20] = v495;
  LODWORD(v497) = *(_DWORD *)(v495 + ((v481 >> 22) & 0x3FC));
  v498 = 4 * v468;
  v499 = v495 + v498;
  v500 = 4 * v481;
  v501 = (_DWORD *)(v499 + v500 - v498);
  v502 = 4 * BYTE1(v452);
  v503 = &v501[(unint64_t)v502 / 4 + v500 / 0xFFFFFFFFFFFFFFFCLL];
  v504 = 4 * (v468 >> 24);
  v505 = &v503[(unint64_t)v504 / 4 + v502 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = v499;
  LODWORD(v499) = *(_DWORD *)v499;
  STACK[0xDB20] = (unint64_t)v501;
  LODWORD(v501) = *v501;
  STACK[0xDB20] = (unint64_t)v503;
  LODWORD(v503) = *v503;
  STACK[0xDB20] = (unint64_t)v505;
  v506 = &v505[v504 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v505) = *v505;
  v507 = 4 * BYTE2(v481);
  v508 = &v506[(unint64_t)v507 / 4];
  STACK[0xDB20] = (unint64_t)v508;
  v509 = v490 ^ v464 ^ *v508;
  v510 = v483;
  v511 = (unint64_t)&v508[v510 + v507 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v490) = LODWORD(STACK[0x6450]) ^ v313;
  LODWORD(v505) = v490 ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x6960]) ^ __ROR4__(v486, 8) ^ v494 ^ __ROR4__((_DWORD)v501, 16) ^ __ROR4__((_DWORD)v505, 24);
  LODWORD(v484) = v484 ^ LODWORD(STACK[0x6990]) ^ __ROR4__(v455, 8) ^ __ROR4__(v463, 24) ^ __ROR4__(v499, 16);
  LODWORD(v486) = v490 ^ LODWORD(STACK[0x62A0]);
  LODWORD(v455) = v486 ^ LODWORD(STACK[0x6310]) ^ 0x8D064828 ^ LODWORD(STACK[0x6810]) ^ (v509
                                                                                       - 1928968152
                                                                                       - ((2 * v509) & 0x1A0C9050));
  LODWORD(v499) = v490 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6970]) ^ v493 ^ __ROR4__((_DWORD)v497, 24) ^ __ROR4__((_DWORD)v503, 8);
  STACK[0xDB20] = v511;
  v512 = (_DWORD *)(v511 - v510 * 4);
  LODWORD(v511) = v499 ^ __ROR4__(*(_DWORD *)v511, 16);
  LODWORD(v484) = v313 ^ 0x25F73922 ^ LODWORD(STACK[0x62A8]) ^ __ROR4__(LODWORD(STACK[0x6128]) ^ __ROR4__(v484, 16) ^ 0x392225F7, 16);
  v513 = &v512[BYTE1(v511)];
  STACK[0xDB20] = (unint64_t)v513;
  LODWORD(v499) = *v513;
  v514 = (unint64_t)&v512[BYTE3(v455)];
  STACK[0xDB20] = v514;
  LODWORD(v513) = *(_DWORD *)v514;
  v515 = &v512[v455];
  STACK[0xDB20] = (unint64_t)v515;
  LODWORD(v514) = *v515;
  v516 = BYTE2(v455);
  v517 = (unint64_t)&v512[v516];
  v518 = 4 * BYTE2(v511);
  v519 = v517 + v518 - v516 * 4;
  STACK[0xDB20] = v517;
  LODWORD(v517) = *(_DWORD *)v517;
  STACK[0xDB20] = v519;
  v520 = v519 - v518;
  LODWORD(v519) = *(_DWORD *)v519;
  v521 = (_DWORD *)(v520 + 4 * (v505 >> 24));
  STACK[0xDB20] = (unint64_t)v521;
  LODWORD(v497) = *v521;
  v522 = 4 * v505;
  v523 = (_DWORD *)(v520 + v522);
  v524 = 4 * v511;
  v525 = &v523[(unint64_t)v524 / 4 + v522 / 0xFFFFFFFFFFFFFFFCLL];
  v526 = 4 * BYTE3(v484);
  v527 = &v525[v524 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v526 / 4];
  v528 = 4 * v484;
  v529 = &v527[(unint64_t)v528 / 4 + v526 / 0xFFFFFFFFFFFFFFFCLL];
  v530 = BYTE2(v505);
  v531 = &v529[v530 + v528 / 0xFFFFFFFFFFFFFFFCLL];
  v532 = 4 * BYTE1(v484);
  v533 = (_DWORD *)((char *)v531 + v532 - v530 * 4);
  STACK[0xDB20] = (unint64_t)v523;
  LODWORD(v523) = *v523;
  STACK[0xDB20] = (unint64_t)v525;
  LODWORD(v525) = *v525;
  STACK[0xDB20] = (unint64_t)v527;
  LODWORD(v527) = *v527;
  STACK[0xDB20] = (unint64_t)v529;
  LODWORD(v529) = *v529;
  STACK[0xDB20] = (unint64_t)v531;
  LODWORD(v514) = *v531 ^ __ROR4__(v514, 16);
  v534 = (unint64_t)&v533[BYTE3(v511)] - v532;
  STACK[0xDB20] = (unint64_t)v533;
  LODWORD(v514) = v514 ^ __ROR4__(*v533, 8);
  STACK[0xDB20] = v534;
  LODWORD(v514) = v514 ^ __ROR4__(*(_DWORD *)v534, 24);
  v535 = (uint64_t)&v533[BYTE2(v484)] - v532;
  v536 = (_DWORD *)((char *)&v533[BYTE1(v505)] - v532);
  STACK[0xDB20] = v535;
  LODWORD(v534) = *(_DWORD *)v535;
  STACK[0xDB20] = (unint64_t)v536;
  v537 = (char *)v533 - v532;
  LODWORD(v536) = *v536;
  v538 = 4 * BYTE1(v455);
  STACK[0xDB20] = (unint64_t)v533 + v538 - v532;
  LODWORD(v532) = LODWORD(STACK[0x63D0]) ^ v378;
  LODWORD(STACK[0x65E8]) = v532;
  LODWORD(v536) = v532 ^ LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x6940]) ^ __ROR4__((_DWORD)v513, 24) ^ v519 ^ __ROR4__((_DWORD)v529, 16) ^ __ROR4__((_DWORD)v536, 8);
  HIDWORD(v464) = STACK[0x68A0];
  LODWORD(v464) = STACK[0x68A0];
  LODWORD(v517) = v532 ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x6950]) ^ __ROR4__(v499, 8) ^ v517 ^ __ROR4__((_DWORD)v523, 16) ^ __ROR4__((_DWORD)v527, 24);
  LODWORD(v499) = v532 ^ LODWORD(STACK[0x62F8]) ^ __ROR4__((v464 >> 6) ^ __ROR4__(v514, 6) ^ 0xD7C6F4E1, 26);
  LODWORD(v538) = v532 ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x6890]) ^ __ROR4__((_DWORD)v497, 24) ^ __ROR4__((_DWORD)v525, 16) ^ v534 ^ __ROR4__(*(_DWORD *)&v537[v538], 8);
  v539 = 4 * v536;
  v540 = (unint64_t)&v537[v539];
  v541 = 4 * BYTE1(v536);
  v542 = (_DWORD *)(v540 + v541 - v539);
  LODWORD(v499) = v499 ^ 0xF1BD3875;
  v543 = BYTE2(v517);
  v544 = (unint64_t)&v542[v541 / 0xFFFFFFFFFFFFFFFCLL + v543];
  v545 = 4 * BYTE2(v499);
  v546 = v544 + v545 - v543 * 4;
  STACK[0xDB20] = v540;
  LODWORD(v540) = *(_DWORD *)v540;
  STACK[0xDB20] = (unint64_t)v542;
  LODWORD(v542) = *v542;
  STACK[0xDB20] = v544;
  LODWORD(v544) = *(_DWORD *)v544;
  STACK[0xDB20] = v546;
  v547 = v546 - v545;
  LODWORD(v546) = *(_DWORD *)v546;
  STACK[0xDB20] = v547;
  LODWORD(v497) = *(_DWORD *)(v547 + 4 * BYTE3(v538));
  v548 = 4 * v538;
  v549 = v547 + v548;
  v550 = 4 * BYTE2(v536);
  v551 = v549 + v550 - v548;
  v552 = 4 * (v536 >> 24);
  v553 = v551 - v550 + v552;
  v554 = 4 * BYTE1(v517);
  v555 = v553 + v554 - v552;
  v556 = 4 * BYTE3(v517);
  v557 = (_DWORD *)(v555 + v556 - v554);
  v558 = v499;
  v559 = (unint64_t)&v557[v558 + v556 / 0xFFFFFFFFFFFFFFFCLL];
  v560 = 4 * BYTE1(v538);
  v561 = (_DWORD *)(v559 + v560 - v558 * 4);
  v562 = 4 * BYTE1(v499);
  v563 = &v561[v560 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v562 / 4];
  v564 = 4 * v517;
  v565 = &v563[(unint64_t)v564 / 4 + v562 / 0xFFFFFFFFFFFFFFFCLL];
  v566 = 4 * BYTE3(v499);
  v567 = &v565[(unint64_t)v566 / 4 + v564 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = v549;
  LODWORD(v549) = *(_DWORD *)v549;
  STACK[0xDB20] = v551;
  LODWORD(v551) = *(_DWORD *)v551;
  STACK[0xDB20] = v553;
  LODWORD(v553) = *(_DWORD *)v553;
  STACK[0xDB20] = v555;
  LODWORD(v555) = *(_DWORD *)v555;
  STACK[0xDB20] = (unint64_t)v557;
  LODWORD(v557) = *v557;
  STACK[0xDB20] = v559;
  LODWORD(v559) = *(_DWORD *)v559;
  STACK[0xDB20] = (unint64_t)v561;
  LODWORD(v561) = *v561;
  STACK[0xDB20] = (unint64_t)v563;
  LODWORD(v563) = *v563;
  STACK[0xDB20] = (unint64_t)v565;
  LODWORD(v565) = *v565;
  STACK[0xDB20] = (unint64_t)v567;
  v568 = (unint64_t)&v567[v566 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v567) = *v567;
  v569 = v568 + 4 * BYTE2(v538);
  STACK[0xDB20] = v569;
  LODWORD(v538) = *(_DWORD *)v569;
  STACK[0xDB20] = v568;
  LODWORD(v569) = v378 ^ LODWORD(STACK[0x63F0]);
  LODWORD(v567) = v569 ^ LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6860]) ^ __ROR4__(v540, 16) ^ __ROR4__(v555, 8) ^ __ROR4__((_DWORD)v567, 24) ^ v538;
  LODWORD(v540) = v569 ^ LODWORD(STACK[0x6170]) ^ LODWORD(STACK[0x6870]) ^ v546 ^ __ROR4__(v553, 24) ^ __ROR4__((_DWORD)v561, 8) ^ __ROR4__((_DWORD)v565, 16);
  LODWORD(v568) = v569 ^ LODWORD(STACK[0x6430]);
  LODWORD(v538) = v568 ^ LODWORD(STACK[0x616C]) ^ LODWORD(STACK[0x6840]) ^ __ROR4__((_DWORD)v542, 8) ^ v544 ^ __ROR4__((_DWORD)v497, 24) ^ __ROR4__(v559, 16);
  LODWORD(v555) = v569 ^ LODWORD(STACK[0x6160]) ^ LODWORD(STACK[0x67C0]) ^ __ROR4__(v549, 16) ^ v551 ^ __ROR4__((_DWORD)v557, 24);
  LODWORD(v464) = __ROR4__((_DWORD)v563, 8);
  LODWORD(v544) = v555 ^ v464 ^ 0xA9AD39E;
  v570 = STACK[0xDB10];
  LODWORD(v549) = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE2(v538));
  LODWORD(STACK[0x6668]) = *(_DWORD *)(STACK[0xDB10] + 4 * v567);
  LODWORD(STACK[0x66F0]) = *(_DWORD *)(v570 + 4 * BYTE3(v544));
  v571 = 4 * v538;
  v572 = (_DWORD *)(v570 + v571);
  v573 = 4 * (v567 >> 24);
  v574 = &v572[(unint64_t)v573 / 4 + v571 / 0xFFFFFFFFFFFFFFFCLL];
  v575 = 4 * BYTE1(v544);
  v576 = (_DWORD *)((char *)v574 + v575 - v573);
  v577 = &v574[v573 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v540)];
  v578 = &v574[v573 / 0xFFFFFFFFFFFFFFFCLL + v540];
  v579 = (char *)v576 - v575;
  LODWORD(v553) = *(_DWORD *)((char *)&v576[BYTE2(v567)] - v575);
  LODWORD(v575) = BYTE3(v538);
  LODWORD(v559) = *(_DWORD *)&v579[4 * BYTE1(v538)];
  v580 = 4 * ((v555 ^ v464) ^ 0x9Eu);
  v581 = &v579[v580];
  v582 = 4 * v575;
  v583 = &v581[v582 - v580];
  v584 = 4 * BYTE2(v544);
  v585 = &v583[v584 - v582];
  v586 = 4 * BYTE3(v540);
  v587 = &v585[v586 - v584];
  v588 = 4 * BYTE1(v567);
  v589 = &v587[v588 - v586];
  STACK[0xDB10] = (unint64_t)v583;
  LODWORD(STACK[0x65D8]) = *(_DWORD *)v583;
  STACK[0xDB10] = (unint64_t)v585;
  LODWORD(STACK[0x65D0]) = *(_DWORD *)v585;
  STACK[0xDB10] = (unint64_t)v587;
  LODWORD(v587) = *(_DWORD *)v587;
  STACK[0xDB10] = (unint64_t)v589;
  v590 = (unint64_t)&v589[-v588];
  LODWORD(STACK[0x65C8]) = *(_DWORD *)v589;
  v591 = v590 + 4 * BYTE2(v540);
  STACK[0xDB10] = v591;
  LODWORD(v561) = *(_DWORD *)v591;
  STACK[0xDB10] = v590;
  LODWORD(v591) = LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x6420]) ^ 0x4D960342;
  v592 = v591 ^ LODWORD(STACK[0x6780]) ^ v559 ^ __ROR4__(v553, 24) ^ __ROR4__(*(_DWORD *)v581, 8) ^ __ROR4__((_DWORD)v587, 16);
  v593 = LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6480]);
  LODWORD(v553) = v593 ^ LODWORD(STACK[0x66F8]) ^ 0x4D960342;
  v594 = v553 ^ LODWORD(STACK[0x67B0]) ^ __ROR4__(v549, 24) ^ __ROR4__(*v574, 16) ^ *v576 ^ __ROR4__(*v578, 8);
  LODWORD(STACK[0x65E0]) = ((((v480 - v473 + 1208581996) ^ 0x6E7EFDB5) - v479) ^ 0x346E41ED) - v471;
  v595 = v477 ^ LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6710]) ^ v471;
  LODWORD(v587) = v477 ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6750]) ^ v479;
  LODWORD(v473) = v477 ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x6740]) ^ v473;
  v596 = v477 ^ LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x6910]) ^ v480;
  LODWORD(STACK[0x65C0]) = *v572;
  LODWORD(STACK[0x65B8]) = *v577;
  v597 = STACK[0xDB20];
  v598 = (_DWORD *)(STACK[0xDB20] + 4 * BYTE2(v595));
  STACK[0xDB20] = (unint64_t)v598;
  LODWORD(v549) = *v598;
  STACK[0xDB20] = v597;
  LODWORD(v598) = *(_DWORD *)(v597 + ((v595 >> 22) & 0x3FC));
  v599 = (_DWORD *)(v597 + 4 * BYTE2(v473));
  STACK[0xDB20] = (unint64_t)v599;
  LODWORD(v574) = *v599;
  v600 = (_DWORD *)(v597 + 4 * v473);
  STACK[0xDB20] = (unint64_t)v600;
  LODWORD(v599) = *v600;
  v601 = (_DWORD *)(v597 + 4 * (v587 >> 24));
  STACK[0xDB20] = (unint64_t)v601;
  LODWORD(v601) = *v601;
  v602 = v597 + 4 * BYTE2(v596);
  STACK[0xDB20] = v602;
  LODWORD(v602) = *(_DWORD *)v602;
  STACK[0xDB20] = v597;
  LODWORD(v600) = *(_DWORD *)(v597 + 4 * BYTE1(v595));
  v603 = (_DWORD *)(v597 + 4 * BYTE1(v596));
  STACK[0xDB20] = (unint64_t)v603;
  LODWORD(v590) = *v603;
  v604 = (_DWORD *)(v597 + 4 * v596);
  STACK[0xDB20] = (unint64_t)v604;
  LODWORD(v603) = *v604;
  v605 = 4 * BYTE2(v587);
  v606 = v597 + v605;
  v607 = 4 * HIBYTE(v596);
  v608 = (_DWORD *)(v606 + v607 - v605);
  STACK[0xDB20] = v606;
  LODWORD(v606) = *(_DWORD *)v606;
  STACK[0xDB20] = (unint64_t)v608;
  v609 = &v608[v607 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v608) = *v608;
  v610 = BYTE1(v473);
  STACK[0xDB20] = (unint64_t)&v609[v610];
  LODWORD(v471) = BYTE3(v473);
  LODWORD(v473) = v609[v610];
  v611 = 4 * v595;
  v612 = &v609[(unint64_t)v611 / 4];
  v613 = 4 * v471;
  v614 = &v612[(unint64_t)v613 / 4 + v611 / 0xFFFFFFFFFFFFFFFCLL];
  v615 = BYTE1(v587);
  v616 = (unint64_t)&v614[v613 / 0xFFFFFFFFFFFFFFFCLL + v615];
  v617 = 4 * v587;
  v618 = (_DWORD *)(v616 + v617 - v615 * 4);
  LODWORD(v602) = v490 ^ LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6900]) ^ v602;
  STACK[0xDB20] = (unint64_t)v612;
  LODWORD(v602) = v602 ^ __ROR4__(*v612, 16);
  STACK[0xDB20] = (unint64_t)v614;
  LODWORD(v602) = v602 ^ __ROR4__(*v614, 24);
  STACK[0xDB20] = v616;
  LODWORD(v616) = v602 ^ __ROR4__(*(_DWORD *)v616, 8);
  LODWORD(v602) = v490 ^ LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x68F0]) ^ __ROR4__((_DWORD)v599, 16) ^ __ROR4__((_DWORD)v600, 8) ^ v606 ^ __ROR4__((_DWORD)v608, 24);
  LODWORD(v614) = v490 ^ LODWORD(STACK[0x6278]) ^ 0x9E02F534 ^ LODWORD(STACK[0x66A8]) ^ v549 ^ __ROR4__((_DWORD)v601, 24) ^ __ROR4__((_DWORD)v603, 16) ^ __ROR4__(v473, 8);
  LODWORD(v486) = v486 ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__((_DWORD)v598, 24) ^ v574 ^ __ROR4__(v590, 8);
  STACK[0xDB20] = (unint64_t)v618;
  v619 = &v618[v617 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v486) = v486 ^ __ROR4__(*v618, 16);
  v620 = (uint64_t)&v618[v617 / 0xFFFFFFFFFFFFFFFCLL + BYTE3(v602)];
  STACK[0xDB20] = v620;
  LODWORD(v618) = *(_DWORD *)v620;
  v621 = &v619[v602];
  STACK[0xDB20] = (unint64_t)v621;
  LODWORD(v620) = *v621;
  v622 = BYTE2(v486);
  v623 = (unint64_t)&v619[v622];
  v624 = 4 * BYTE2(v614);
  v625 = v623 + v624 - v622 * 4;
  v626 = 4 * BYTE1(v614);
  v627 = v625 + v626 - v624;
  v628 = 4 * BYTE1(v486);
  v629 = (_DWORD *)(v627 + v628 - v626);
  LODWORD(v616) = v616 ^ 0xF70393E6;
  STACK[0xDB20] = v623;
  LODWORD(v623) = *(_DWORD *)v623;
  STACK[0xDB20] = v625;
  LODWORD(v625) = *(_DWORD *)v625;
  STACK[0xDB20] = v627;
  LODWORD(v627) = *(_DWORD *)v627;
  STACK[0xDB20] = (unint64_t)v629;
  v630 = &v629[v628 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v629) = *v629;
  v631 = &v630[BYTE1(v616)];
  STACK[0xDB20] = (unint64_t)v631;
  LODWORD(v612) = *v631;
  v632 = BYTE1(v602);
  v633 = (unint64_t)&v630[v632];
  v634 = 4 * BYTE3(v486);
  v635 = (_DWORD *)(v633 + v634 - v632 * 4);
  STACK[0xDB20] = v633;
  LODWORD(v633) = *(_DWORD *)v633;
  STACK[0xDB20] = (unint64_t)v635;
  v636 = &v635[v634 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v635) = *v635;
  v637 = &v636[v486];
  STACK[0xDB20] = (unint64_t)v637;
  LODWORD(v486) = *v637;
  v638 = BYTE2(v616);
  v639 = (unint64_t)&v636[v638];
  v640 = 4 * BYTE3(v616);
  v641 = (_DWORD *)(v639 + v640 - v638 * 4);
  STACK[0xDB20] = v639;
  LODWORD(v639) = *(_DWORD *)v639;
  STACK[0xDB20] = (unint64_t)v641;
  v642 = &v641[v640 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v641) = *v641;
  v643 = &v642[v616];
  STACK[0xDB20] = (unint64_t)v643;
  LODWORD(v616) = *v643;
  v644 = 4 * v614;
  v645 = &v642[(unint64_t)v644 / 4];
  v646 = 4 * BYTE2(v602);
  v647 = &v645[(unint64_t)v646 / 4 + v644 / 0xFFFFFFFFFFFFFFFCLL];
  v648 = 4 * (v614 >> 24);
  v649 = &v647[(unint64_t)v648 / 4 + v646 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v535) = STACK[0x65E8];
  LODWORD(v633) = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6708]) ^ __ROR4__(v633, 8) ^ __ROR4__((_DWORD)v635, 24) ^ v639;
  STACK[0xDB20] = (unint64_t)v645;
  LODWORD(v633) = v633 ^ __ROR4__(*v645, 16);
  LODWORD(v623) = v535 ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x68B0]) ^ __ROR4__(v620, 16) ^ v623 ^ __ROR4__((_DWORD)v612, 8);
  STACK[0xDB20] = (unint64_t)v647;
  LODWORD(v620) = *v647;
  STACK[0xDB20] = (unint64_t)v649;
  v650 = (unint64_t)&v649[v648 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v623) = v623 ^ __ROR4__(*v649, 24);
  LODWORD(v616) = v535 ^ LODWORD(STACK[0x6240]) ^ 0xC3F81829 ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x68C0]) ^ __ROR4__((_DWORD)v618, 24) ^ v625 ^ __ROR4__((_DWORD)v629, 8) ^ __ROR4__(v616, 16);
  LODWORD(v535) = v535 ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x68D0]) ^ __ROR4__(v627, 8) ^ __ROR4__(v486, 16) ^ __ROR4__((_DWORD)v641, 24) ^ v620;
  v651 = v650 + 4 * BYTE2(v535);
  STACK[0xDB20] = v651;
  LODWORD(v486) = *(_DWORD *)v651;
  LODWORD(v651) = v633 ^ 0x80C0A89F;
  STACK[0xDB20] = v650;
  LODWORD(v618) = *(_DWORD *)(v650 + 4 * BYTE1(v616));
  v652 = (_DWORD *)(v650 + 4 * ((v633 ^ 0x80C0A89F) >> 16));
  STACK[0xDB20] = (unint64_t)v652;
  LODWORD(v620) = *v652;
  STACK[0xDB20] = v650;
  LODWORD(v652) = *(_DWORD *)(v650 + 4 * BYTE1(v623));
  v653 = (_DWORD *)(v650 + 4 * BYTE2(v616));
  STACK[0xDB20] = (unint64_t)v653;
  LODWORD(v627) = *v653;
  v654 = 4 * ((unsigned __int16)(v633 ^ 0xA89F) >> 8);
  v655 = (_DWORD *)(v650 + v654);
  v656 = BYTE2(v623);
  v657 = (unint64_t)&v655[v656 + v654 / 0xFFFFFFFFFFFFFFFCLL];
  v658 = 4 * BYTE3(v535);
  v659 = (_DWORD *)(v657 + v658 - v656 * 4);
  v660 = 4 * v535;
  v661 = &v659[(unint64_t)v660 / 4 + v658 / 0xFFFFFFFFFFFFFFFCLL];
  v662 = 4 * BYTE3(v651);
  v663 = &v661[v660 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v662 / 4];
  v664 = 4 * BYTE3(v623);
  v665 = &v663[(unint64_t)v664 / 4 + v662 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = (unint64_t)v655;
  LODWORD(v655) = *v655;
  STACK[0xDB20] = v657;
  LODWORD(v657) = *(_DWORD *)v657;
  STACK[0xDB20] = (unint64_t)v659;
  LODWORD(v659) = *v659;
  STACK[0xDB20] = (unint64_t)v661;
  LODWORD(v661) = *v661;
  STACK[0xDB20] = (unint64_t)v663;
  LODWORD(v663) = *v663;
  STACK[0xDB20] = (unint64_t)v665;
  v666 = &v665[v664 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v665) = *v665;
  v667 = &v666[v623];
  STACK[0xDB20] = (unint64_t)v667;
  LODWORD(v623) = *v667;
  v668 = &v666[v651];
  STACK[0xDB20] = (unint64_t)v668;
  LODWORD(v651) = *v668;
  v669 = 4 * BYTE3(v616);
  v670 = &v666[(unint64_t)v669 / 4];
  v671 = 4 * BYTE1(v535);
  v672 = &v670[(unint64_t)v671 / 4 + v669 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDB20] = (unint64_t)v670;
  LODWORD(v670) = *v670;
  STACK[0xDB20] = (unint64_t)v672;
  v673 = (unint64_t)&v672[v671 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v672) = *v672;
  v674 = (_DWORD *)(v673 + 4 * v616);
  STACK[0xDB20] = (unint64_t)v674;
  LODWORD(v616) = *v674;
  STACK[0xDB20] = v673;
  LODWORD(v673) = v569 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6880]) ^ __ROR4__((_DWORD)v652, 8) ^ v627 ^ __ROR4__((_DWORD)v659, 24) ^ __ROR4__(v651, 16);
  v675 = v569 ^ LODWORD(STACK[0x6218]) ^ 0xD712837C ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x6830]) ^ v486 ^ __ROR4__((_DWORD)v618, 8) ^ __ROR4__((_DWORD)v663, 24) ^ __ROR4__(v623, 16);
  LODWORD(v486) = v569 ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6850]) ^ v620 ^ __ROR4__((_DWORD)v665, 24) ^ __ROR4__((_DWORD)v672, 8) ^ __ROR4__(v616, 16);
  v676 = v568 ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x6730]) ^ __ROR4__((_DWORD)v655, 8) ^ v657 ^ __ROR4__((_DWORD)v661, 16) ^ __ROR4__((_DWORD)v670, 24);
  v677 = (_DWORD *)(STACK[0xDB10] + 4 * BYTE2(v673));
  v678 = (_DWORD *)(STACK[0xDB10] + 4 * BYTE2(v676));
  v679 = (_DWORD *)(STACK[0xDB10] + 4 * HIBYTE(v675));
  v680 = (_DWORD *)(STACK[0xDB10] + 4 * BYTE3(v486));
  v681 = (_DWORD *)(STACK[0xDB10] + 4 * BYTE3(v673));
  v682 = (_DWORD *)(STACK[0xDB10] + 4 * v673);
  v683 = (int *)(STACK[0xDB10] + 4 * v486);
  v684 = (int *)(STACK[0xDB10] + 4 * BYTE1(v486));
  v685 = v591 ^ LODWORD(STACK[0x6920]) ^ __ROR4__(STACK[0x6668], 8) ^ LODWORD(STACK[0x65B8]) ^ __ROR4__(STACK[0x65D8], 16) ^ __ROR4__(STACK[0x65D0], 24);
  v686 = v553 ^ LODWORD(STACK[0x6820]) ^ __ROR4__(STACK[0x66F0], 16) ^ __ROR4__(STACK[0x65C0], 8) ^ LODWORD(STACK[0x65C8]) ^ ((_DWORD)v561 << 8) ^ (v561 >> 24);
  v687 = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE1(v673));
  v688 = *(_DWORD *)(STACK[0xDB10] + 4 * v676);
  v689 = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE1(v675));
  v690 = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE2(v675));
  v691 = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE1(v676));
  v692 = *(_DWORD *)(STACK[0xDB10] + 4 * BYTE2(v486));
  v693 = STACK[0x6A80];
  if ((STACK[0x6A80] & 1) != 0)
    v694 = v592;
  else
    v694 = v594;
  if ((v693 & 1) != 0)
  {
    v592 = v686;
    v686 = v685;
    v685 = v594;
  }
  v695 = STACK[0xDB10];
  STACK[0xDB10] = (unint64_t)v683;
  v696 = *v683;
  STACK[0xDB10] = (unint64_t)v684;
  v697 = *v684;
  v698 = v695 + 4 * v675;
  STACK[0xDB10] = v698;
  v699 = *(_DWORD *)v698;
  v700 = 4 * HIBYTE(v676);
  STACK[0xDB10] = v695 + v700;
  LODWORD(v698) = v593 ^ LODWORD(STACK[0x66F8]) ^ 0xEAC2C5F0;
  v701 = LODWORD(STACK[0x65E0]) - 1389842507;
  v702 = v698 ^ LODWORD(STACK[0x6770]) ^ v701 ^ __ROR4__(*v678, 24) ^ __ROR4__(*v681, 16) ^ v697 ^ __ROR4__(v699, 8);
  v703 = v698 ^ LODWORD(STACK[0x6790]) ^ v701 ^ v689 ^ __ROR4__(v692, 24) ^ __ROR4__(*v682, 8) ^ __ROR4__(*(_DWORD *)(v695 + v700), 16);
  v704 = v698 ^ LODWORD(STACK[0x6760]) ^ v701 ^ v687 ^ __ROR4__(v688, 8) ^ __ROR4__(v690, 24) ^ __ROR4__(*v680, 16);
  v705 = v698 ^ LODWORD(STACK[0x67A0]) ^ v701 ^ __ROR4__(*v677, 24) ^ __ROR4__(*v679, 16) ^ v691 ^ __ROR4__(v696, 8);
  if ((v693 & 1) != 0)
    v706 = v702;
  else
    v706 = v703;
  if ((v693 & 1) != 0)
  {
    v702 = v705;
    v705 = v704;
    v704 = v703;
  }
  if ((v693 & 2) != 0)
    v707 = v685;
  else
    v707 = v592;
  if ((v693 & 2) != 0)
    v708 = v592;
  else
    v708 = v685;
  if ((v693 & 2) != 0)
    v709 = v686;
  else
    v709 = v694;
  if ((v693 & 2) != 0)
    v710 = v694;
  else
    v710 = v686;
  if ((v693 & 2) != 0)
    v711 = v702;
  else
    v711 = v704;
  if ((v693 & 2) != 0)
  {
    v712 = v706;
  }
  else
  {
    v704 = v702;
    v712 = v705;
  }
  if ((v693 & 2) == 0)
    v705 = v706;
  v713 = (265032163 * (v708 ^ v701)) ^ v709 ^ (265032163 * (v712 ^ 0xA754C6B2));
  v714 = v710 ^ (1970885327 * (v701 ^ 0xA754C6B2)) ^ (1970885327 * (v713 ^ v711));
  v715 = (-1039754737 * (v704 ^ v701)) ^ v707 ^ (-1039754737 * (v714 ^ 0xA754C6B2));
  v716 = v705 ^ 0xA754C6B2;
  v717 = v708 + 391730677 * ((v715 ^ v701) - v716);
  v718 = v713 ^ v704 ^ v714;
  v719 = v718 ^ v711 ^ (v715 + 798782951 * ((v701 ^ 0xA754C6B2) - (v717 ^ v712)));
  v720 = v716 - (v719 ^ v701);
  v721 = v714 + 1152227787 * v720;
  v722 = (v701 ^ 0xA754C6B2 ^ v704 ^ (v717 + 950535437 * v720) ^ v721)
       + 1780822821 * ((v711 ^ 0x58AB394D) + (v718 ^ 0xA754C6B2))
       + 1780822821;
  v723 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x5D14)) - 12;
  v724 = STACK[0x6630];
  *(_BYTE *)(v724 + STACK[0x65F0]) = v723[v722 ^ 0x18] ^ 0xD ^ (v723[v722 ^ 0x18] >> 1) & 0x23;
  v725 = STACK[0x6638];
  v726 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 20784) - 12;
  v727 = v726[BYTE1(v722) ^ 0xCFLL];
  *(_BYTE *)(v724
           + (((v725 & 0xFFFFFFF1 ^ 0x663FE7A0) - ((2 * (v725 & 0xFFFFFFF1 ^ 0x663FE7A0)) & 0xB6FE6C80) + 1535063624) ^ 0x84191967)) = ((v727 >> 3) | (32 * v727)) ^ (((v727 >> 3) | (32 * v727)) >> 5) ^ (((v727 >> 3) | (32 * v727)) >> 1) ^ 0xA3;
  v728 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 22811) - 8;
  *(_BYTE *)(v724
           + ((-1680842047
             - (LODWORD(STACK[0x6608]) ^ 0x552BE3C0 | 0x9BD062C1)
             + (LODWORD(STACK[0x6608]) ^ 0x552BE3C0 | 0x642F9D3E)) ^ 0x885DB671)) = v728[BYTE2(v722) ^ 0x29] ^ BYTE2(v722) ^ 0x15;
  *(_BYTE *)(v724 + STACK[0x6670]) = v728[BYTE1(v721) ^ 0xD3] ^ BYTE1(v721) ^ 0x35;
  v729 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x5EAE));
  *(_BYTE *)(v724 + STACK[0x6610]) = *(_BYTE *)(v729 + (HIBYTE(v721) ^ 0xDELL)) ^ 0x80;
  *(_BYTE *)(v724 + STACK[0x65F8]) = *(_BYTE *)(v729 + (v721 ^ 0x22)) ^ 0xC3;
  *(_BYTE *)(v724 + STACK[0x6660]) = v728[BYTE2(v719) ^ 0x23] ^ ~BYTE2(v719);
  v730 = (((LODWORD(STACK[0x6600]) ^ 0x23E3A48C) & 0xA707CD54) - (LODWORD(STACK[0x6600]) ^ 0x23E3A48C | 0xA707CD55)) ^ 0x7CB8A2AB;
  *(_BYTE *)(v724 + ((1054016208 - (v730 | 0x3ED302D0) + (v730 | 0xC12CFD2F)) ^ 0x7FD6012CLL)) = *(_BYTE *)(v729 + (BYTE2(v721) ^ 0x43)) ^ 0xA3;
  *(_BYTE *)(v724 + STACK[0x6618]) = v728[HIBYTE(v722) ^ 0xCFLL] ^ HIBYTE(v722) ^ 0x4D;
  v731 = v718 ^ v712 ^ v722;
  v732 = STACK[0xDB18];
  v733 = STACK[0xDB18];
  *(_BYTE *)(v732 + STACK[0x6648]) = v728[BYTE1(v731) ^ 0xB4] ^ BYTE1(v731) ^ 0xAB;
  *(_BYTE *)(v732 + STACK[0x6620]) = *(_BYTE *)(v729 + (v719 ^ 0xF4)) ^ 0xF6;
  v734 = ((LODWORD(STACK[0x6650]) ^ 0x32286794)
        + (v725 & 0x7F553F80 ^ 0x4D55180B)
        - ((LODWORD(STACK[0x6650]) ^ 0x32286794) & 0x7F553F80)) ^ 0x2FDD3F02;
  *(_BYTE *)(v732 + ((((2 * v734) & 0x71D695FA) - v734 - 954944256) ^ 0x1CED1A92u)) = v728[v731 ^ 0xDALL] ^ v731 ^ 0xDB;
  LODWORD(v726) = v726[BYTE1(v719) ^ 0xD6];
  *(_BYTE *)(v732 + STACK[0x6658]) = ((v726 >> 3) | (32 * (_BYTE)v726)) ^ (((v726 >> 3) | (32 * (_BYTE)v726)) >> 5) ^ (((v726 >> 3) | (32 * (_BYTE)v726)) >> 1) ^ 0x59;
  *(_BYTE *)(v732 + STACK[0x6628]) = *(_BYTE *)(v729 + (HIBYTE(v731) ^ 0x87)) ^ 0x1B;
  LODWORD(v723) = v723[BYTE2(v731) ^ 0xFELL];
  *(_BYTE *)(v733 + STACK[0x6680]) = v723 ^ 0xB3 ^ (v723 >> 1) & 0x23;
  *(_BYTE *)(v733 + STACK[0x6640]) = HIBYTE(v719) ^ 0xD6 ^ v728[HIBYTE(v719) ^ 0xDELL];
  STACK[0xDB10] = v695;
  v735 = (((v725 ^ 0x84376FBE) + 2076741698) ^ ((v725 ^ 0x98A5B3FA) + 1733970950) ^ ((v725 ^ 0xA5CB14CB) + 1513417525))
       - 539721835;
  LODWORD(v723) = (v735 ^ 0x9DA10D62) & (2 * (v735 & 0xD985490A)) ^ v735 & 0xD985490A;
  LODWORD(v726) = ((2 * (v735 ^ 0x2CA91F76)) ^ 0xEA58ACF8) & (v735 ^ 0x2CA91F76) ^ (2 * (v735 ^ 0x2CA91F76)) & 0xF52C567C;
  LODWORD(v723) = (v726 ^ 0xE0080478) & (4 * (_DWORD)v723) ^ v723;
  LODWORD(v726) = ((4 * (v726 ^ 0x15245204)) ^ 0xD4B159F0) & (v726 ^ 0x15245204) ^ (4 * (v726 ^ 0x15245204)) & 0xF52C567C;
  LODWORD(v723) = (v726 ^ 0xD420506C) & (16 * (_DWORD)v723) ^ v723;
  LODWORD(v726) = ((16 * (v726 ^ 0x210C060C)) ^ 0x52C567C0) & (v726 ^ 0x210C060C) ^ (16 * (v726 ^ 0x210C060C)) & 0xF52C5670;
  LODWORD(v723) = v723 ^ 0xF52C567C ^ (v726 ^ 0x5004463C) & ((_DWORD)v723 << 8);
  v736 = v735 ^ (2
               * (((_DWORD)v723 << 16) & 0x752C0000 ^ v723 ^ (((_DWORD)v723 << 16) ^ 0x567C0000) & (((v726 ^ 0xA528103C) << 8) & 0x752C0000 ^ 0x51280000 ^ (((v726 ^ 0xA528103C) << 8) ^ 0x2C560000) & (v726 ^ 0xA528103C))));
  LODWORD(v723) = (((v736 ^ 0x5C7BFCA6) - 2124927451) ^ ((v736 ^ 0x65A02ECE) - 1199309747) ^ ((v736 ^ 0xA25E379A)
                                                                                            + 2138957081))
                + 1688168494;
  v737 = v723 >= LODWORD(STACK[0x6698]);
  v738 = LODWORD(STACK[0x6678]) ^ (v723 < 0xAB459F9F);
  v739 = !v737;
  if (v738)
    v740 = STACK[0x6678];
  else
    v740 = v739;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((2 * (v740 ^ 1)) | (8 * (v740 ^ 1))) ^ LODWORD(STACK[0x6AC0])))
                            - 8))();
}

uint64_t sub_100A41A28@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v3 = STACK[0x64A0];
  v4 = STACK[0x6688];
  v5 = STACK[0x6A90];
  v6 = ((a1 & STACK[0x6488]) << (((v2 ^ 0x30) + 16) ^ 0xE2)) ^ a1;
  v7 = STACK[0x6118];
  LODWORD(STACK[0x6668]) = (((v6 & STACK[0x6930]) >> LODWORD(STACK[0x6498]) >> LODWORD(STACK[0x6490]))
                          - 1915267985
                          - ((2
                            * ((v6 & STACK[0x6930]) >> LODWORD(STACK[0x6498]) >> LODWORD(STACK[0x6490]))) & 0x1BAEA8DE)) ^ 0x8DD7546F ^ ((((v6 & STACK[0x6118]) - 1466825060 - ((2 * (v6 & STACK[0x6118])) & 0x51240D38)) ^ 0xA892069C) << LODWORD(STACK[0x6108]) << LODWORD(STACK[0x60E8]));
  v8 = v1 ^ (2 * (v1 & v3));
  v9 = (((v8 & v7) + 853275055 - ((2 * (v8 & v7)) & 0x65B7E35E)) ^ 0x32DBF1AF) << LODWORD(STACK[0x6478]);
  LODWORD(STACK[0x6678]) = ((v8 & v4) >> v5)
                         + 1952443604
                         + ((((v9 << LODWORD(STACK[0x6470])) ^ 0xE9A8EA78) + 1644755284) ^ (((v9 << LODWORD(STACK[0x6470])) ^ 0x45DC5D20)
                                                                                          - 830714356) ^ (((v9 << LODWORD(STACK[0x6470])) ^ 0xAC74B758) + 668247156));
  v10 = STACK[0x6AB0];
  v11 = STACK[0x6510];
  if ((STACK[0x6AB0] & 1) != 0)
    v12 = STACK[0x6510];
  else
    v12 = STACK[0x6520];
  v13 = STACK[0x6518];
  if ((v10 & 1) != 0)
    v11 = STACK[0x6518];
  v14 = STACK[0x6528];
  if ((v10 & 1) != 0)
  {
    v13 = STACK[0x6528];
    v14 = STACK[0x6520];
  }
  if ((v10 & 2) != 0)
    v15 = v13;
  else
    v15 = v12;
  LODWORD(STACK[0x6520]) = v15;
  if ((v10 & 2) == 0)
    v12 = v13;
  LODWORD(STACK[0x6518]) = v12;
  if ((v10 & 2) != 0)
    v16 = v11;
  else
    v16 = v14;
  LODWORD(STACK[0x6528]) = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ 0x7330)) - 12))();
}

uint64_t sub_100A41D38()
{
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8]
                                                     + 8
                                                     * (LODWORD(STACK[0x6120]) ^ 0x6969F2D8 ^ ((LODWORD(STACK[0x6120]) < 0x97D56D8)
                                                                                             * ((LODWORD(STACK[0x6120])
                                                                                               - 1768521987) ^ 0x97A)))))(STACK[0xDB20]);
}

uint64_t sub_100A41DBC()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = (uint64_t (*)(uint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v3 = v2(v0);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v1))(v3);
}

uint64_t sub_100A41E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE *v9;
  int v10;

  STACK[0xD1A8] = v6 - 32;
  *v9 = *(_BYTE *)(v7 + (v8 - 251923730 + v10 - 11860));
  v9[1] = *(_BYTE *)(v7 + (v8 - 251919515));
  v9[2] = *(_BYTE *)(v7 + (v8 - 251919514));
  v9[3] = *(_BYTE *)(v7 + (v8 - 251919513));
  v9[4] = *(_BYTE *)(v7 + (v8 - 251919512));
  v9[5] = *(_BYTE *)(v7 + (v8 - 251919511));
  v9[6] = *(_BYTE *)(v7 + (v8 - 251919510));
  v9[7] = *(_BYTE *)(v7 + (v8 - 251919509));
  v9[8] = *(_BYTE *)(v7 + (v8 - 251919508));
  v9[9] = *(_BYTE *)(v7 + (v8 - 251919507));
  v9[10] = *(_BYTE *)(v7 + (v8 - 251919506));
  v9[11] = *(_BYTE *)(v7 + (v8 - 251919505));
  v9[12] = *(_BYTE *)(v7 + (v8 - 251919504));
  v9[13] = *(_BYTE *)(v7 + (v8 - 251919503));
  v9[14] = *(_BYTE *)(v7 + (v8 - 251919502));
  v9[15] = *(_BYTE *)(v7 + (v8 - 251919501));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v10)
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 251919500);
}

uint64_t sub_100A41F50()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100A41F60()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 4366) | 0x440;
  v1 = STACK[0x6508] - 3550;
  STACK[0x9358] = STACK[0x8208] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0x3B2A) + v1)) - 12))();
}

_QWORD *sub_100A41FE0()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] ^ 0x35B2;
  v1 = STACK[0x6508] - 3523;
  STACK[0x86E8] = STACK[0x7420] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v2 + 8 * ((v0 - 655) ^ v1)) - 12))(&STACK[0xFF53]);
}

_QWORD *sub_100A4204C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 5454;
  STACK[0x7AE8] = STACK[0x8808] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3513)) + (v1 ^ 0xFFFFFFFFFFFFDA38);
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v2 + 8 * ((int)v0 + 4368)) - 12))(&STACK[0xFF5B]);
}

uint64_t sub_100A420C4()
{
  unint64_t v0;
  uint64_t (*v1)(void);

  v0 = STACK[0x6508];
  STACK[0x74A0] = STACK[0xAE30] + 16;
  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 4368)) - ((v0 + 5454) ^ 0x25C8));
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3532)) - 12;
  return v1();
}

uint64_t sub_100A42144()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = STACK[0x6508];
  v1 = (STACK[0x6508] + 845966686) & 0xCD93A7EF;
  STACK[0x72D8] = STACK[0xCB50] + 16;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 4368));
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3530)) - 12;
  return ((uint64_t (*)(void))(v2 - v1 + 9656))();
}

_QWORD *sub_100A421D4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xC9F0] = STACK[0x9990] + 16;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3511)) - 8;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * ((int)v0 + 4368))
                                                                 - (v0 ^ 0x107ALL)))(&STACK[0xFF63]);
}

uint64_t sub_100A42258()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xC158] = STACK[0xABE0] + 16;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3524)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((v0 - 3524) ^ 0x23 ^ (8983
                                                                    * ((((_DWORD)v0 + 5454) ^ 0x53EF19DEu)
                                                                     + (_DWORD)v0
                                                                     - 3524 < 0x5E7BC94F))))
                            - 12))();
}

uint64_t sub_100A42304()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 166534503) & 0xF612F7E6;
  v1 = STACK[0x6508] - 3565;
  STACK[0x7E78] = STACK[0x84A8] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0x3B39) + v1)) - 12))();
}

_QWORD *sub_100A4238C()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xC998] = STACK[0x94C8] + 16;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = (((_DWORD)v0 + 1464788862) & 0xA8B12DCF)
                - 9676
                + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3525));
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * (int)((v0 - 3525) ^ 0x2337))
                                                                 - 12))(&STACK[0x94E0]);
}

uint64_t sub_100A42420()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3528;
  STACK[0x7A90] = STACK[0x8E28] + 16;
  v1 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x2328 ^ (25252 * (v0 == -1372568211)))) - 12))();
}

uint64_t sub_100A424B0()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 5454;
  v2 = STACK[0x6508] - 3501;
  STACK[0x8870] = STACK[0xBE00] + 16;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 4368)) - v1 + 9656);
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  return v3();
}

uint64_t sub_100A42530()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] + 5454;
  v1 = STACK[0x6508] - 3522;
  STACK[0xB728] = STACK[0x6F98] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ v1 ^ 0x6F6)) - 12))();
}

uint64_t sub_100A425AC()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 1771235183) & 0x966D2DDE;
  v1 = STACK[0x6508] - 3510;
  STACK[0x8130] = STACK[0x8818] + 16;
  v2 = STACK[0x6AD8];
  STACK[0xAD00] = v0 - 9680 + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x2346)) - 12))();
}

uint64_t sub_100A42640()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] ^ 0x425D;
  v1 = STACK[0x6508] + 1788798802;
  STACK[0x6AB0] = STACK[0x9DB0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x6A9E943B ^ (42008 * (v1 == v0 - 1764086585))))
                            - 8))();
}

uint64_t sub_100A426C8@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  STACK[0x6178] = v2;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8
                                     * ((112 * (((a1 < v1 + 251898501) ^ ((v1 ^ 0xF7) + 1)) & 1)) ^ v1))
                         - 4);
  LODWORD(STACK[0x6AC0]) = a1;
  return v3();
}

uint64_t sub_100A4271C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (31902 * (a1 == v2 + 36))))
                            - ((6469 * (v1 ^ 0x39DEu)) ^ 0x3286)))();
}

uint64_t sub_100A4278C()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0x7B68] = STACK[0xC9F0] + LODWORD(STACK[0xAFEC]) - 251919500;
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2832)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 ^ 0x906) + v0 - 2832 - 2875)) - 12))();
}

uint64_t sub_100A42814()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 2822;
  STACK[0xB278] = STACK[0x86E8] + (int)(LODWORD(STACK[0x8F74]) + (STACK[0x6508] ^ 0xF0FC1302));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x16EB)) - 12))();
}

uint64_t sub_100A428A4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0x86C0] = STACK[0x72D8] + LODWORD(STACK[0x8488]) - 251919500;
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2842)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 - 2842 + ((v0 + 1219972992) & 0xB748B979) - 2865)) - 12))();
}

uint64_t sub_100A42938()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xCFC0] = STACK[0xC158] + LODWORD(STACK[0xBB10]) - 251919500;
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2828));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 - 2828 + 296 * (v0 ^ 0x1060) - 2879)) - 12))();
}

uint64_t sub_100A429CC()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] ^ 0x115E;
  STACK[0x9BF0] = STACK[0x74A0] + LODWORD(STACK[0xAC74]) - 251919500;
  v2 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2852)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((22 * v1 - 679) ^ ((int)v0 - 2852))) - 12))();
}

uint64_t sub_100A42A5C()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xAF00] = STACK[0x7E78]
                + (int)(((STACK[0x6508] + 1891518850) & 0x8F41BF77) - 251926012 + LODWORD(STACK[0x9730]));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2820)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 805)) - 12))();
}

uint64_t sub_100A42AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((60 * (LODWORD(STACK[0x6B60]) == a7 + 16)) ^ (STACK[0x6508] + 9126)))
                            - ((STACK[0x6508] + 9126 - 3451) ^ (STACK[0x6508] + 5683))))();
}

uint64_t sub_100A42B8C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_DWORD *)(*v6 + (*v7 & v5));
  v12 = ((((v11 ^ ((_DWORD)v2 + (_DWORD)v0)) & 0x7FFFFFFF) * v3) ^ ((((v11 ^ ((_DWORD)v2 + (_DWORD)v0)) & 0x7FFFFFFFu)
                                                                   * v3) >> 16))
      * v3;
  v13 = ((((v11 ^ ((_DWORD)v4 + (_DWORD)v0)) & 0x7FFFFFFF) * v3) ^ ((((v11 ^ ((_DWORD)v4 + (_DWORD)v0)) & 0x7FFFFFFFu)
                                                                   * v3) >> 16))
      * v3;
  *(_BYTE *)(v4 + v0) = *(_BYTE *)(v8 + (v12 >> 24)) ^ *(_BYTE *)(v2 + v0) ^ *(_BYTE *)(v10 + (v12 >> 24)) ^ *(_BYTE *)(v9 + 3299 * (v1 ^ 0x341Fu) - 9893 + (v12 >> 24)) ^ *(_BYTE *)(v8 + (v13 >> 24)) ^ *(_BYTE *)(v10 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v9 + 4) ^ v12 ^ v13 ^ (13 * BYTE3(v12)) ^ (13 * BYTE3(v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((60 * (v0 == 15)) ^ v1)) - 8))();
}

uint64_t sub_100A42C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  STACK[0xD1A8] += 16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * v3))(a1, a2, a3, 1772493245, STACK[0x60B0]);
}

uint64_t sub_100A42CE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  v12 = (((a5 + v7) ^ *(_DWORD *)(v8 + v9)) & 0x7FFFFFFF) * v10;
  *(_BYTE *)(v6 + v7) = *(_BYTE *)(v11
                                 + (v7 | (16 * (((v12 ^ HIWORD(v12)) * (v5 ^ 0x3DB3 ^ (a4 - 1772))) >> 24)))) ^ *(_BYTE *)(a5 + v7) ^ (-53 * (v12 ^ BYTE2(v12)));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2279 * (v7 == 15)) ^ v5)))();
}

uint64_t sub_100A42D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((138
                                                                                            * ((v4 ^ 0x99868F55) + v5 != -1467313957)) ^ v4))
                                                                              - 12))(a1, a2, a3, a4, 2147479433);
}

uint64_t sub_100A42DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7, _QWORD *a8)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _BOOL4 v17;
  uint64_t v18;
  char *v19;
  char v20;
  unsigned int v21;
  unsigned int v22;

  v17 = v11 < a6;
  v18 = v8;
  v19 = (char *)(v9 + v8);
  v20 = *v19;
  LODWORD(v19) = ((*(_DWORD *)(*a8 + (*v16 & a7)) ^ v19) & (a5 + ((v10 - 6650) | 0x441) + 2837)) * v13;
  LODWORD(v19) = v19 ^ (v19 >> 16);
  v21 = v8 & 0xF | (16 * (((_DWORD)v19 * v13) >> 24));
  v22 = v8 + 1;
  *(_BYTE *)(v14 + v18) = *(_BYTE *)(v15 + v21) ^ v20 ^ (-53 * (_BYTE)v19);
  if (v17 == v22 > 0x57756F24)
    v17 = v22 + a6 < v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v17 * v12) ^ v10)) - 12))();
}

uint64_t sub_100A42E7C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;

  v7 = v3 + 1385115135;
  v8 = (v7 ^ 0x5E4A9575) & (2 * (v7 & 0x9E6CD575)) ^ v7 & 0x9E6CD575;
  v9 = ((2 * (v7 ^ 0x761A3D5F)) ^ 0xD0EDD054) & (v7 ^ 0x761A3D5F) ^ (2 * (v7 ^ 0x761A3D5F)) & 0xE876E82A;
  v10 = (((v4 + 1179195545) & 0xB9B6FB75) + 672272058) ^ v9;
  v11 = (v9 ^ 0xC064C000) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xA1DBA0A8) & v10 ^ (4 * v10) & 0xE876E828;
  v13 = (v12 ^ 0xA052A020) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x48244802)) ^ 0x876E82A0) & (v12 ^ 0x48244802) ^ (16 * (v12 ^ 0x48244802)) & 0xE876E820;
  v15 = v13 ^ 0xE876E82A ^ (v14 ^ 0x80668000) & (v13 << 8);
  v16 = (v3 + 1385115135) ^ 0x199F04D7 ^ (2
                                        * ((v15 << 16) & 0x68760000 ^ v15 ^ ((v15 << 16) ^ 0x682A0000) & (((v14 ^ 0x6810680A) << 8) & 0x68760000 ^ 0x8160000 ^ (((v14 ^ 0x6810680A) << 8) ^ 0x76E80000) & (v14 ^ 0x6810680A))));
  v17 = 1503753289 * ((((v6 - 240) | 0xA130728C) - ((v6 - 240) & 0xA130728C)) ^ 0x6FF004AC);
  v18 = STACK[0x6508] - v17;
  STACK[0x1D368] = a1 + 0x5E39224396782A6FLL;
  STACK[0x1D378] = v2;
  LODWORD(STACK[0x1D380]) = v18 + 12131;
  STACK[0x1D360] = v1;
  LODWORD(STACK[0x1D370]) = v16 + v17;
  v19 = (_BYTE *)STACK[0x6080];
  STACK[0x1D350] = STACK[0x6080];
  v20 = v5(v6 - 240);
  STACK[0xD1A8] -= 16;
  *v19 = *(_BYTE *)(v2 + (v3 - 251919516));
  v19[1] = *(_BYTE *)(v2 + (v3 - 251919515));
  v19[2] = *(_BYTE *)(v2 + (v3 - 251919514));
  v19[3] = *(_BYTE *)(v2 + (v3 - 251919513));
  v19[4] = *(_BYTE *)(v2 + (v3 - 251919512));
  v19[5] = *(_BYTE *)(v2 + (v3 - 251919511));
  v19[6] = *(_BYTE *)(v2 + (v3 - 251919510));
  v19[7] = *(_BYTE *)(v2 + (v3 - 251919509));
  v19[8] = *(_BYTE *)(v2 + (v3 - 251919508));
  v19[9] = *(_BYTE *)(v2 + (v3 - 251919507));
  v19[10] = *(_BYTE *)(v2 + (v3 - 251919506));
  v19[11] = *(_BYTE *)(v2 + (v3 - 251919505));
  v19[12] = *(_BYTE *)(v2 + (v3 - 251919504));
  v19[13] = *(_BYTE *)(v2 + (v3 - 251919503));
  v19[14] = *(_BYTE *)(v2 + (v3 - 251919502));
  v19[15] = *(_BYTE *)(v2 + (v3 - 251919501));
  STACK[0x99E0] = v2 + LODWORD(STACK[0x6B60]) - 251919500;
  v21 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 12;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (v4 ^ 0x16FA)) - 12))(v20);
}

uint64_t sub_100A431E8()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 3958;
  STACK[0xA120] = STACK[0x8130] + LODWORD(STACK[0x9DEC]) - 251919500;
  v2 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2824));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 | 0x1870) - 635) ^ ((int)v0 - 2824))) - 12))();
}

uint64_t sub_100A43274()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0x7910] = STACK[0x9358] + (int)(LODWORD(STACK[0x6C14]) + ((STACK[0x6508] + 2298) ^ 0xF0FC1A04));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2840));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 2840) ^ 0x16C5)) - 12))();
}

uint64_t sub_100A432F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 4778)) - 8))(a1, a2, 1772495178, 3192319592, 1772489163, 3505252704, STACK[0x60C0], v2);
}

uint64_t sub_100A4337C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, _QWORD *a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  unint64_t v23;

  v19 = STACK[0x6508];
  v20 = ((*(_DWORD *)(*a7 + (*v11 & a6)) ^ (v8 + v9)) & 0x7FFFFFFF) * a5;
  v21 = (v20 ^ HIWORD(v20)) * ((STACK[0x6508] + 7996) ^ (a3 + 1327));
  v22 = ((*(_DWORD *)(*a7 + (*v11 & a4)) ^ (a8 + v9)) & 0x7FFFFFFF) * a5;
  v23 = (v22 ^ HIWORD(v22)) * a5;
  *(_BYTE *)(v18 + v9) = *(_BYTE *)(v12 + (v21 >> 24)) ^ *(_BYTE *)(v10 + v9) ^ *(_BYTE *)((v21 >> 24) + v16 + 1) ^ *(_BYTE *)(v14 + (v21 >> 24)) ^ *(_BYTE *)(v15 + (v23 >> 24)) ^ *(_BYTE *)(v17 + (v23 >> 24)) ^ v21 ^ *(_BYTE *)((v23 >> 24) + v13 + 4) ^ (-105 * BYTE3(v21)) ^ v23 ^ (13 * BYTE3(v23));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((49 * (v9 != 19)) ^ ((int)v19 + 4763))) - 8))();
}

uint64_t sub_100A43470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3)
                                                                              - 12))(a1, a2, STACK[0x60B0], 932440957);
}

uint64_t sub_100A4362C@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v8 = (((a1 + v3) ^ *(_DWORD *)(v5 + v6)) & 0x7FFFFFFF) * a2;
  *(_BYTE *)(v4 + v3) = *(_BYTE *)(v7 + (v3 | (16 * ((((v8 >> ((a3 + 29) ^ 0xDF)) ^ v8) * a2) >> 24)))) ^ *(_BYTE *)(a1 + v3) ^ (-53 * ((v8 >> ((a3 + 29) ^ 0xDF)) ^ v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15 * (v3 == 15)) ^ a3)) - 12))();
}

uint64_t sub_100A436A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((453
                                * (((v4 + 1304525616) & 0xB23E6735 ^ 0x2EA2DB8A)
                                 + (((v5 ^ v6 ^ 0x430F4235) - 687223287) ^ ((v5 ^ v6 ^ 0xC5BDCAF5) + 1371227849) ^ ((v5 ^ v6 ^ 0x1A450840) - 1908177794)) == a4)) ^ v4)))();
}

uint64_t sub_100A43760(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int a6, _QWORD *a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  char v20;
  unsigned int v21;

  v15 = v10 < a4;
  v16 = v9;
  v17 = v14 + v9;
  v18 = ((*(_DWORD *)(*a7 + (*v12 & a6)) ^ v17) & 0x7FFFFFFF) * a5;
  v19 = v18 ^ HIWORD(v18);
  v20 = *(_BYTE *)(a8 + (v9 & 0xF | (16 * ((v19 * (a5 + v8 - 7578 - 1333)) >> 24))));
  v21 = v9 + 1;
  *(_BYTE *)(v13 + v16) = v20 ^ *(_BYTE *)(v17 - 0x68D65B6A818CDE99) ^ (-53 * v19);
  if (v15 == v21 > 0xC86C1482)
    v15 = v21 + a4 < v10;
  return (*(uint64_t (**)(BOOL))(STACK[0x6AD8] + 8 * ((!v15 * v11) ^ v8)))(v21 + a4 < v10);
}

uint64_t sub_100A43820@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;

  v8 = 1503753289 * ((((2 * (v7 - 240)) | 0xD0FAEEAC) - (v7 - 240) - 1753053014) ^ 0xA6BD0176);
  v9 = STACK[0x6508] - v8;
  STACK[0x1D378] = v4;
  STACK[0x1D360] = v1;
  STACK[0x1D368] = STACK[0x6060];
  STACK[0x1D350] = (unint64_t)v5;
  LODWORD(STACK[0x1D380]) = v9 + 12131;
  LODWORD(STACK[0x1D370]) = (a1 ^ 0x1BAD8176) + v8;
  v10 = v6(v7 - 240);
  STACK[0xD1A8] -= 16;
  *v5 = *(_BYTE *)(v4 + (v2 - 251926012 + v3 + 5179 - 16));
  v5[1] = *(_BYTE *)(v4 + (v2 - 251919515));
  v5[2] = *(_BYTE *)(v4 + (v2 - 251919514));
  v5[3] = *(_BYTE *)(v4 + (v2 - 251919513));
  v5[4] = *(_BYTE *)(v4 + (v2 - 251919512));
  v5[5] = *(_BYTE *)(v4 + (v2 - 251919511));
  v5[6] = *(_BYTE *)(v4 + (v2 - 251919510));
  v5[7] = *(_BYTE *)(v4 + (v2 - 251919509));
  v5[8] = *(_BYTE *)(v4 + (v2 - 251919508));
  v5[9] = *(_BYTE *)(v4 + (v2 - 251919507));
  v5[10] = *(_BYTE *)(v4 + (v2 - 251919506));
  v5[11] = *(_BYTE *)(v4 + (v2 - 251919505));
  v5[12] = *(_BYTE *)(v4 + (v2 - 251919504));
  v5[13] = *(_BYTE *)(v4 + (v2 - 251919503));
  v5[14] = *(_BYTE *)(v4 + (v2 - 251919502));
  v5[15] = *(_BYTE *)(v4 + (v2 - 251919501));
  STACK[0xCD30] = v4 + LODWORD(STACK[0x9734]) - 251919500;
  v11 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * (v3 ^ 0x16AE)) - 12))(v10);
}

uint64_t sub_100A43A20()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0xBC98]) != 251919500)
                                               * ((STACK[0x6508] + 111381881) & 0xF95C677B ^ 0x4736)) ^ (STACK[0x6508] + 3924)))
                            - 8))();
}

uint64_t sub_100A43A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>)
{
  unint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;

  STACK[0x6AC0] = v5;
  STACK[0x6178] = v6;
  v7 = STACK[0x6508] + 2086;
  v8 = STACK[0x6508] + 12534;
  v9 = STACK[0xBDA4];
  LODWORD(STACK[0x6AB0]) = a5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((51 * (((v8 ^ ((((v9 ^ 0x25CE083) - 39641219) ^ ((v9 ^ 0x32F05D22) - 854613282) ^ ((v9 ^ 0xBD8129C6) + 1115608634)) - a5 == 1674473229)) & 1) == 0)) ^ v7)) - 8))(a1, a2, a3, STACK[0x60B8], a4, 3192319592, 3093419610);
}

uint64_t sub_100A43B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13679
                                          * ((((v8 ^ 0x8900DAA3) + 1996432733) ^ ((v8 ^ 0x6778B0C6) - 1735962822) ^ ((((v7 + 10124) | 0x144) ^ 0x9CAA4092) + (v8 ^ 0x6355FE02)))
                                           + 1167026881 != a7)) ^ v7))
                            - 8))();
}

uint64_t sub_100A43C34@<X0>(_DWORD *a1@<X3>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _BOOL4 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;

  v13 = v8 < a3;
  v14 = v6 + v7;
  v15 = *(_BYTE *)(v14 - 0x62F99AA9C7806AF7);
  v16 = v4 + v7;
  v17 = *(_DWORD *)(*v12 + (*a1 & a2));
  v18 = ((((v17 ^ v14) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v14) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  v19 = v18 >> ((v5 - 48) ^ 0x74u);
  v20 = ((((v17 ^ v16) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v16) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  v21 = v7 + 1;
  *(_BYTE *)(v16 - 0x62F99AA9C7806AF7) = *(_BYTE *)(v11 + v19) ^ v15 ^ *(_BYTE *)(a4 + v19) ^ *(_BYTE *)(v19 + v9 + 4) ^ *(_BYTE *)(v11 + (v20 >> 24)) ^ *(_BYTE *)(a4 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v9 + 4) ^ v18 ^ v20 ^ (13 * v19) ^ (13 * BYTE3(v20));
  if (v13 == v21 > 0x479E29A5)
    v13 = v21 - 1201547686 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13679 * v13) ^ v5)) - 8))();
}

uint64_t sub_100A43D64()
{
  int v0;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100A43DD8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v8 = (((a1 + v3) ^ *(_DWORD *)(v4 + v5)) & 0x7FFFFFFF) * v7;
  *(_BYTE *)(v2 + v3) = *(_BYTE *)(v6 + (((v1 + 5723) ^ 0x5837) & (((v8 ^ HIWORD(v8)) * v7) >> 20) | v3)) ^ *(_BYTE *)(a1 + v3) ^ (-53 * (v8 ^ BYTE2(v8)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1663 * (v3 == 15)) ^ v1)) - 4))();
}

uint64_t sub_100A43E50()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v0 ^ (16 * (LODWORD(STACK[0x6AB0]) + (v0 ^ 0xFC5B6B67) != 190789932))))
                            - 12))();
}

uint64_t sub_100A43ED0@<X0>(unsigned int a1@<W4>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  _QWORD *v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  unsigned int v17;

  v12 = v5 < a1;
  v13 = v3;
  v14 = v2 + v3;
  v15 = ((*(_DWORD *)(*v9 + (*a2 & v7)) ^ v14) & 0x7FFFFFFF) * v10;
  v16 = *(_BYTE *)(v11
                 + (v3 & 0xF | (16 * (((v15 ^ HIWORD(v15)) * (((v8 + v4 + 3627) | 0x1C001480) ^ 0x95FD356B)) >> 24))));
  v17 = v3 + 1;
  *(_BYTE *)(v6 + v13) = v16 ^ *(_BYTE *)(v14 - 0x62F99AA9C7806AF7) ^ (-53 * (v15 ^ BYTE2(v15)));
  if (v12 == v17 > 0xEBA40D01)
    v12 = v17 + a1 < v5;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 | (16 * v12))) - 12))(v17 + a1 < v5);
}

uint64_t sub_100A43F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;

  v14 = STACK[0x6AC0] + 0x5E39224396782A6FLL;
  v15 = ((v9 + 261759317) ^ 0xC86DDBDE) & (2 * ((v11 ^ 0x1D3ADEBF) & (v9 + 261759317))) ^ (v11 ^ 0x1D3ADEBF) & (v9 + 261759317);
  v16 = ((2 * ((v9 + 261759317) ^ 0xC8EDDBE2)) ^ 0x531873FA) & ((v9 + 261759317) ^ 0xC8EDDBE2) ^ (2
                                                                                                * ((v9 + 261759317) ^ 0xC8EDDBE2)) & 0x298C39FC;
  v17 = v16 ^ (a8 + 1333);
  v18 = (v16 ^ (a7 - 428)) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0xA630E7F4) & v17 ^ (4 * v17) & 0x298C39FC;
  v20 = (v19 ^ (a6 + 1967)) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x98C1809)) ^ 0x98C39FD0) & (v19 ^ 0x98C1809) ^ (16 * (v19 ^ 0x98C1809)) & 0x298C39F0;
  v22 = v20 ^ 0x298C39FD ^ (v21 ^ 0x880192D) & (v20 << 8);
  v23 = (v9 + 261759317) ^ (2
                          * ((v22 << 16) & 0x298C0000 ^ v22 ^ ((v22 << 16) ^ 0x39FD0000) & (((v21 ^ 0x210C202D) << 8) & 0x298C0000 ^ 0x21840000 ^ (((v21 ^ 0x210C202D) << 8) ^ 0x8C390000) & (v21 ^ 0x210C202D)))) ^ 0x663B9013;
  v24 = 1503753289 * ((v13 + 1902691349 - 2 * ((v13 - 240) & 0x7168C505)) ^ 0xBFA8B325);
  v25 = (_BYTE *)STACK[0x6080];
  STACK[0x1D350] = STACK[0x6080];
  STACK[0x1D368] = v14;
  LODWORD(STACK[0x1D380]) = v11 - v24 + 61145913;
  LODWORD(STACK[0x1D370]) = v23 + v24;
  STACK[0x1D378] = v10;
  STACK[0x1D360] = v8;
  v26 = v12(v13 - 240);
  STACK[0xD1A8] -= 16;
  *v25 = *(_BYTE *)(v10 + (v9 - 251919516));
  v25[1] = *(_BYTE *)(v10 + (v9 - 251919515));
  v25[2] = *(_BYTE *)(v10 + (v9 - 251919514));
  v25[3] = *(_BYTE *)(v10 + (v9 - 251919513));
  v25[4] = *(_BYTE *)(v10 + (v9 - 251919512));
  v25[5] = *(_BYTE *)(v10 + (v9 - 251919511));
  v25[6] = *(_BYTE *)(v10 + (v9 - 251919510));
  v25[7] = *(_BYTE *)(v10 + (v9 - 251919509));
  v25[8] = *(_BYTE *)(v10 + (v9 - 251919508));
  v25[9] = *(_BYTE *)(v10 + (v9 - 251919507));
  v25[10] = *(_BYTE *)(v10 + (v9 - 251919506));
  v25[11] = *(_BYTE *)(v10 + (v9 - 251919505));
  v25[12] = *(_BYTE *)(v10 + (v9 - 251919504));
  v25[13] = *(_BYTE *)(v10 + (v9 - 251919503));
  v25[14] = *(_BYTE *)(v10 + (v9 - 251919502));
  v25[15] = *(_BYTE *)(v10 + (v9 - 251919501));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)(v11 ^ 0xFC5B3C8F ^ (8165 * (v11 > 0x35C08C64))))
                                          - 8))(v26);
}

uint64_t sub_100A442C8()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  STACK[0x9058] = v1 + v0 - 251919500;
  v3 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 + v2 + 5125 - 2880)) - 12))();
}

uint64_t sub_100A44348()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((17265
                                               * ((((683 * (STACK[0x6508] ^ 0x1074)) ^ (LODWORD(STACK[0x6B2C]) == 251919500)) & 1) == 0)) ^ (STACK[0x6508] + 5625)))
                            - (STACK[0x6508] ^ 0x3D01)
                            + 11635))();
}

uint64_t sub_100A443C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  int v6;

  STACK[0x6AB0] = v5;
  v6 = STACK[0xA118];
  LODWORD(STACK[0x6AC0]) = a4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * ((248
                                                                                   * ((((v6 ^ 0x6DDB31A4) - 1843081636) ^ ((v6 ^ 0x96F45A27) + 1762371033) ^ (((v4 - 3464) ^ 0x7602E00B ^ v6) - 1979908068))
                                                                                    - a4 != 1674473229)) ^ v4))
                                                                     - 8))(a1, a2, a3, 1330659062);
}

uint64_t sub_100A444AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((25751
                                          * ((((v5 ^ 0xA04063F9) + 1606392839) ^ ((v5 ^ 0x5A5B2F2E) - 1515925294) ^ ((((v4 - 6729) | 0xCC1) ^ 0x88C938BF) + (v5 ^ 0x7736D8B0)))
                                           - 595733667 != a4)) ^ v4))
                            - 8))();
}

uint64_t sub_100A44548@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  _BOOL4 v14;
  char *v15;
  _BYTE *v16;
  char v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  char v22;

  v14 = v5 < a1;
  v15 = (char *)(v3 + v4);
  v16 = (_BYTE *)(v8 + v4);
  v17 = *v15;
  v18 = *(_DWORD *)(*v12 + (*v13 & v10));
  v19 = ((((v18 ^ v15) & 0x7FFFFFFF) * v9) ^ ((((v18 ^ v15) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  v20 = ((((v18 ^ v16) & 0x7FFFFFFF) * v9) ^ ((((v18 ^ v16) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  v21 = v4 + 1;
  v22 = *(_BYTE *)(v7 + (v19 >> 24)) ^ v17 ^ *(_BYTE *)(v11 + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + a2 + 4) ^ *(_BYTE *)(v7 + (v20 >> 24)) ^ *(_BYTE *)(v11 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + a2 + 4) ^ v19 ^ v20 ^ (BYTE3(v19) * (v2 - 106)) ^ (13 * BYTE3(v20));
  if (v14 == v21 > 0xB0AFC109)
    v14 = v21 + 1330659062 < v5;
  *v16 = v22;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v14 * v6) ^ v2)) - 8))(v21 + 1330659062 < v5);
}

uint64_t sub_100A44650()
{
  int v0;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100A44834@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = (((a1 + v2) ^ *(_DWORD *)(v4 + v5)) & 0x7FFFFFFF) * v6;
  *(_BYTE *)(v3 + v2) = *(_BYTE *)(v7 + ((((v8 ^ HIWORD(v8)) * v6) >> (v1 + 48)) & 0xFF0 | v2)) ^ *(_BYTE *)(a1 + v2) ^ (-53 * (v8 ^ BYTE2(v8)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((11 * (v2 != 15)) ^ v1)) - 4))();
}

uint64_t sub_100A448A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((v4 + 1692) ^ (19
                                              * ((((v5 ^ v6 ^ 0xCD6F1525) + 1856096998) ^ ((v5 ^ v6 ^ 0x16C0A8B1) + a4) ^ ((v5 ^ v6 ^ 0x3F53F448) - 1667421303)) != 1194497565)))))();
}

uint64_t sub_100A44958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, _QWORD *a8)
{
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  _BOOL4 v18;
  char *v19;
  char v20;
  unsigned int v21;

  v18 = v11 < v12;
  v19 = (char *)(v8 + v9);
  v20 = *v19;
  LODWORD(v19) = ((*(_DWORD *)(*a8 + (*v17 & a6)) ^ v19) & 0x7FFFFFFF) * v16;
  *(_BYTE *)(v14 + v9) = *(_BYTE *)(v15
                                  + ((((v19 ^ (v19 >> 16)) * v16) >> (((v10 - 60) | 0x2B)
                                                                                                - 91)) & 0xFF0 | v9 & 0xF)) ^ v20 ^ (-53 * (v19 ^ BYTE2(v19)));
  v21 = v9 + 1;
  if (v18 == v21 > 0x38881788)
    v18 = v21 + a7 < v11;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v18 * v13) ^ v10)))();
}

uint64_t sub_100A44A08()
{
  unint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;

  v7 = STACK[0x6AB0] + 0x5E39224396782A6FLL;
  v8 = v1 ^ 0x63A6482A;
  v9 = 1503753289 * ((((2 * (v6 - 240)) | 0x27F757BA) - (v6 - 240) + 1812223011) ^ 0x5D3BDDFD);
  LODWORD(STACK[0x1D370]) = v8 + v9;
  STACK[0x1D378] = v3;
  LODWORD(STACK[0x1D380]) = v4 - v9 + 6506;
  STACK[0x1D368] = v7;
  STACK[0x1D360] = v0;
  v10 = (_BYTE *)STACK[0x6080];
  STACK[0x1D350] = STACK[0x6080];
  v11 = v5(v6 - 240);
  STACK[0xD1A8] -= 16;
  *v10 = *(_BYTE *)(v3 + (v2 - 251919516));
  v10[1] = *(_BYTE *)(v3 + (v2 - 251919515));
  v10[2] = *(_BYTE *)(v3 + (v2 - 251919514));
  v10[3] = *(_BYTE *)(v3 + (v2 - 251919513));
  v10[4] = *(_BYTE *)(v3 + (v2 - 251919512));
  v10[5] = *(_BYTE *)(v3 + v2 - 251923730 + (v4 ^ 0x2339u) + 2853);
  v10[6] = *(_BYTE *)(v3 + (v2 - 251919510));
  v10[7] = *(_BYTE *)(v3 + (v2 - 251919509));
  v10[8] = *(_BYTE *)(v3 + (v2 - 251919508));
  v10[9] = *(_BYTE *)(v3 + (v2 - 251919507));
  v10[10] = *(_BYTE *)(v3 + (v2 - 251919506));
  v10[11] = *(_BYTE *)(v3 + (v2 - 251919505));
  v10[12] = *(_BYTE *)(v3 + (v2 - 251919504));
  v10[13] = *(_BYTE *)(v3 + (v2 - 251919503));
  v10[14] = *(_BYTE *)(v3 + (v2 - 251919502));
  v10[15] = *(_BYTE *)(v3 + (v2 - 251919501));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 4))(v11);
}

uint64_t sub_100A44BC4()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;

  STACK[0xB238] = v1 + v0 - 251919500;
  v3 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)v2) + (v2 ^ 0xFFFFFFFFFFFFFAAALL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(v2 + 3653)) - 12))();
}

uint64_t sub_100A44C48()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 2811;
  STACK[0xA0A8] = STACK[0x70E0] + (int)(((STACK[0x6508] + 445385471) & 0xE573FDFA) - 251926012 + LODWORD(STACK[0x7964]));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x16E0)) - 12))();
}

uint64_t sub_100A44CE4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xB4E0] = STACK[0xC998] + (int)(LODWORD(STACK[0x763C]) + (STACK[0x6508] ^ 0xF0FC1302));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2834)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 805)) - 12))();
}

uint64_t sub_100A44D74()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 2915;
  STACK[0xC7D0] = STACK[0x7A90]
                + (int)(((STACK[0x6508] + 1329491717) & 0xB0C199F4 ^ 0xF0FC1A04) + LODWORD(STACK[0xC47C]));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1688)) - 12))();
}

uint64_t sub_100A44E04()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0x9620] = STACK[0x7AE8] + LODWORD(STACK[0xAF70]) - 251919500;
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2853)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 + 2186) | 0x70) - 678) ^ (v0 - 2853))) - 12))();
}

uint64_t sub_100A44E84()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xCC90] = STACK[0xB728] + (int)(((88 * (STACK[0x6508] ^ 0x103C)) ^ 0xF0FC1A04) + LODWORD(STACK[0xC878]));
  v1 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 2876)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 2876) ^ 0x16A1)) - 12))();
}

uint64_t sub_100A44F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;

  v7 = (STACK[0x6508] - 1335013553) & 0x4F92B9FA;
  v8 = STACK[0x6508] + 2902;
  v9 = STACK[0x72B0];
  LODWORD(STACK[0x6AC0]) = STACK[0x72B0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == a7 + 16) * (v7 - 6532)) ^ v8)) - 8))();
}

uint64_t sub_100A44FBC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 12576)) - 8))();
}

uint64_t sub_100A44FF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  unint64_t v13;

  v10 = STACK[0x6508] + 2938;
  v11 = *(_DWORD *)(*v6 + (*v8 & v4));
  v12 = ((((v11 ^ ((_DWORD)v2 + (_DWORD)v3)) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ ((_DWORD)v2 + (_DWORD)v3)) & 0x7FFFFFFFu)
                                                                   * v5) >> 16))
      * v5;
  v13 = ((((v11 ^ ((_DWORD)v1 + (_DWORD)v3)) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ ((_DWORD)v1 + (_DWORD)v3)) & 0x7FFFFFFFu)
                                                                   * v5) >> 16))
      * v5;
  *(_BYTE *)(v1 + v3 - 0x34E7D12451F1E1EDLL) = *(_BYTE *)(a1 + (v12 >> 24)) ^ *(_BYTE *)(v2 + v3 - 0x34E7D12451F1E1EDLL) ^ *(_BYTE *)(v7 + (v12 >> 24)) ^ *(_BYTE *)((v12 >> 24) + v9 + 4) ^ *(_BYTE *)(a1 + (v13 >> 24)) ^ *(_BYTE *)(v7 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v9 + 4) ^ v12 ^ v13 ^ (BYTE3(v12) * ((-32 * (STACK[0x6508] ^ 0x74)) ^ 0xCD)) ^ (13 * BYTE3(v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23142 * (v3 != 15)) ^ v10)) - 8))();
}

uint64_t sub_100A450EC()
{
  int v0;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100A452C8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = ((((a1 + v2) ^ *(_DWORD *)(v4 + v5)) & 0x7FFFFFFF) * v6) ^ ((((((_DWORD)a1 + (_DWORD)v2) ^ *(_DWORD *)(v4 + v5)) & 0x7FFFFFFFu)
                                                                  * v6) >> 16);
  *(_BYTE *)(v3 + v2) = *(_BYTE *)(v7 + (((v8 * v6) >> (v1 + 121)) & 0xFF0 | v2)) ^ *(_BYTE *)(a1 + v2) ^ (-53 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((91 * (v2 != 15)) ^ v1)) - 12))();
}

uint64_t sub_100A4533C()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((47
                                          * ((((v1 ^ v2 ^ 0xB9E953B1) + 938400965) ^ ((v1 ^ v2 ^ 0x759DF60D) - 73762439) ^ ((v1 ^ v2 ^ 0x7C1800AF ^ (v0 + 1629437024) & 0x9EE0AF47) - 232813926)) != 1047211814)) ^ (v0 + 13046)))
                            - 12))();
}

uint64_t sub_100A4540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7, _QWORD *a8)
{
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  char v22;
  unsigned int v23;

  v17 = v11 < a6;
  v18 = v10;
  v19 = v8 + v10;
  v20 = ((*(_DWORD *)(*a8 + (*v16 & a7)) ^ v19) & 0x7FFFFFFF) * v15;
  v21 = v20 ^ HIWORD(v20);
  v22 = *(_BYTE *)(v13 + ((((v9 - 2022489410) & 0x788C75F3) + 2733) & ((v21 * v15) >> 20) | v10 & 0xF));
  v23 = v10 + 1;
  *(_BYTE *)(v14 + v18) = v22 ^ *(_BYTE *)(v19 - 0x34E7D12451F1E1EDLL) ^ (-53 * v21);
  if (v17 == v23 > 0xF414B0D8)
    v17 = v23 + a6 < v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v17 * v12) ^ v9)) - 12))();
}

uint64_t sub_100A454D8()
{
  unint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;

  v8 = v1 ^ 0x3736A1A6;
  v9 = 1503753289 * ((((v6 - 240) | 0x818DD12F) + (~(v6 - 240) | 0x7E722ED0)) ^ 0x4F4DA70E);
  LODWORD(STACK[0x1D380]) = STACK[0x6508] - v9 + 12131;
  LODWORD(STACK[0x1D370]) = v8 + v9;
  STACK[0x1D368] = v7 + 0x5E39224396782A6FLL;
  STACK[0x1D378] = v3;
  v10 = (_BYTE *)STACK[0x6080];
  STACK[0x1D350] = STACK[0x6080];
  STACK[0x1D360] = v0;
  v11 = v5(v6 - 240);
  STACK[0xD1A8] -= 16;
  *v10 = *(_BYTE *)(v3 + (v2 - 251919516));
  v10[1] = *(_BYTE *)(v3 + (v2 - 251919515));
  v10[2] = *(_BYTE *)(v3 + (v2 - 251919514));
  v10[3] = *(_BYTE *)(v3 + (v2 - 251919513));
  v10[4] = *(_BYTE *)(v3 + (v2 - 251919512));
  v10[5] = *(_BYTE *)(v3 + (((v4 - 1267) | 0x1920) ^ 0xF0FC1A19) + v2);
  v10[6] = *(_BYTE *)(v3 + (v2 - 251919510));
  v10[7] = *(_BYTE *)(v3 + (v2 - 251919509));
  v10[8] = *(_BYTE *)(v3 + (v2 - 251919508));
  v10[9] = *(_BYTE *)(v3 + (v2 - 251919507));
  v10[10] = *(_BYTE *)(v3 + (v2 - 251919506));
  v10[11] = *(_BYTE *)(v3 + (v2 - 251919505));
  v10[12] = *(_BYTE *)(v3 + (v2 - 251919504));
  v10[13] = *(_BYTE *)(v3 + (v2 - 251919503));
  v10[14] = *(_BYTE *)(v3 + (v2 - 251919502));
  v10[15] = *(_BYTE *)(v3 + (v2 - 251919501));
  STACK[0x91F0] = v3 + LODWORD(STACK[0x72B0]) - 251919500;
  v12 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * (v4 + 3672)) - 12))(v11);
}

uint64_t sub_100A456F0()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] - 96792826) & 0x5C4F9F3;
  v1 = STACK[0x6508] - 2830;
  STACK[0xAB30] = STACK[0x8870] + LODWORD(STACK[0xB4EC]) - 251919500;
  v2 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4225 * ((v1 ^ 0xD6C269F2) > 0x46644C3D)) ^ (v1 - 7102 + v0)))
                            - 12))();
}

uint64_t sub_100A457B8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((63 * (a1 == ((((v1 - 1866099389) & 0x6F3A1DFD) + 2826) ^ (v2 - 3986)))) ^ (v1 - 6223)))
                            - 12))();
}

uint64_t sub_100A4582C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3788)) - 4))();
}

uint64_t sub_100A4585C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  unint64_t v15;
  unint64_t v16;

  v11 = v2 + v4;
  v12 = v1 + v4;
  v13 = *(_DWORD *)(*v10 + (*a1 & v8));
  v14 = *(_BYTE *)(v11 - 0x62F99AA9C7806AF7);
  v15 = ((((v13 ^ v11) & 0x7FFFFFFF) * v6) ^ ((((v13 ^ v11) & 0x7FFFFFFF) * v6) >> 16)) * v6;
  v16 = ((((v13 ^ v12) & 0x7FFFFFFF) * v6) ^ ((((v13 ^ v12) & 0x7FFFFFFF) * v6) >> 16)) * v6;
  *(_BYTE *)(v12 - 0x62F99AA9C7806AF7) = *(_BYTE *)(v7 + (v15 >> 24)) ^ v14 ^ *(_BYTE *)(v9 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v5 + 4) ^ *(_BYTE *)(v7 + (v16 >> 24)) ^ *(_BYTE *)(v9 + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24) + v5 + 4) ^ v15 ^ v16 ^ (BYTE3(v15) * (((v3 - 110) | 0x82) ^ 0x87)) ^ (13 * BYTE3(v16));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13 * (v4 + 1 < 0x24)) | (v3 + 13516))) - 12))();
}

uint64_t sub_100A45950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v5)
                                                                                                - 12))(a1, a2, STACK[0x60B0], a4, a5, 2658475188);
}

uint64_t sub_100A459C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  v8 = ((((((_DWORD)a1 + (_DWORD)v4) ^ *(_DWORD *)(v5 + v6)) & 0x7FFFFFFFu) * v7) >> (v2 - 122)) ^ ((((a1 + v4) ^ *(_DWORD *)(v5 + v6)) & 0x7FFFFFFF)
                                                                                                  * v7);
  *(_BYTE *)(v3 + v4) = *(_BYTE *)(a2 + (v4 | (16 * ((v8 * v7) >> 24)))) ^ *(_BYTE *)(a1 + v4) ^ (-53 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3007 * (v4 == 15)) ^ v2)) - 12))();
}

uint64_t sub_100A45A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((((v6 - 5045) ^ 0x1EE9)
                                                                                            * (LODWORD(STACK[0x6AC0])
                                                                                             - 1888411608 != a6)) ^ (v6 - 5045)))
                                                                              - 12))(a1, a2, 704643047, 904965761, 2417496594);
}

uint64_t sub_100A45AC4@<X0>(char a1@<W2>, unsigned int a2@<W5>, int a3@<W6>, char a4@<W7>, _DWORD *a5@<X8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;
  uint64_t v14;
  char v15;
  unsigned int v16;

  v13 = v8 < a2;
  v14 = v5 + v7;
  v15 = *(_BYTE *)(v14 - 0x62F99AA9C7806AF7);
  LODWORD(v14) = ((*(_DWORD *)(*v10 + (*a5 & a3)) ^ v14) & 0x7FFFFFFF) * v12;
  *(_BYTE *)(v9 + v7) = *(_BYTE *)(v11
                                 + ((((v14 ^ WORD1(v14)) * v12) >> ((v6 + a4) & a1 ^ 0x54)) & 0xFF0 | v7 & 0xF)) ^ v15 ^ (-53 * (v14 ^ BYTE2(v14)));
  v16 = v7 + 1;
  if (v13 == v16 > 0x618AE34B)
    v13 = v16 + a2 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((60 * v13) ^ v6)) - 12))();
}

uint64_t sub_100A45B88(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;

  v11 = STACK[0x6AB0] + 0x5E39224396782A6FLL;
  v12 = ((v9 - 172862669) ^ 0xF321AA11) & (2 * ((v9 - 172862669) & 0xFB49B041)) ^ (v9 - 172862669) & 0xFB49B041;
  v13 = ((((v9 - 172862669) ^ 0x61B1EA13) << (((v8 + 12) | 0x20) - 107)) ^ (a4 + 1571)) & ((v9 - 172862669) ^ 0x61B1EA13) ^ (((v9 - 172862669) ^ 0x61B1EA13) << (((v8 + 12) | 0x20) - 107)) & 0x9AF85A52;
  v14 = v13 ^ 0x8A084A52;
  v15 = (v13 ^ 0x10600852) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x6BE16948) & v14 ^ (4 * v14) & 0x9AF85A50;
  v17 = (v16 ^ 0xAE04840) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ a5)) ^ 0xAF85A520) & (v16 ^ a5) ^ (16 * (v16 ^ a5)) & 0x9AF85A50;
  v19 = v17 ^ 0x9AF85A52 ^ (v18 ^ 0x8A800052) & (v17 << 8);
  v20 = (v9 - 172862669) ^ (2
                          * ((v19 << 16) & 0x1AF80000 ^ v19 ^ ((v19 << 16) ^ 0x5A520000) & (((v18 ^ 0x10785A52) << 8) & 0x1AF80000 ^ 0x2A00000 ^ (((v18 ^ 0x10785A52) << 8) ^ 0x785A0000) & (v18 ^ 0x10785A52)))) ^ 0x7D430513;
  v21 = 1503753289
      * ((-1090875910 - ((v10 - 240) ^ 0x3A9EF004 | 0xBEFA8DFA) + ((v10 - 240) ^ 0x3A9EF004 | 0x41057205)) ^ 0xB55BF421);
  v22 = (_BYTE *)STACK[0x6080];
  STACK[0x1D350] = STACK[0x6080];
  STACK[0x1D368] = v11;
  LODWORD(STACK[0x1D380]) = v8 - v21 + 2713;
  LODWORD(STACK[0x1D370]) = v20 + v21;
  STACK[0x1D378] = v6;
  STACK[0x1D360] = v5;
  v23 = v7(v10 - 240);
  STACK[0xD1A8] -= 16;
  *v22 = *(_BYTE *)(v6 + (v9 - 251919516));
  v22[1] = *(_BYTE *)(v6 + (v9 - 251919515));
  v22[2] = *(_BYTE *)(v6 + (v9 - 251919514));
  v22[3] = *(_BYTE *)(v6 + (v9 - 251919513));
  v22[4] = *(_BYTE *)(v6 + (v9 - 251919512));
  v22[5] = *(_BYTE *)(v6 + (v9 - 251919511));
  v22[6] = *(_BYTE *)(v6 + (v9 - 251919510));
  v22[7] = *(_BYTE *)(v6 + (v9 - 251919509));
  v22[8] = *(_BYTE *)(v6 + (v9 - 251919508));
  v22[9] = *(_BYTE *)(v6 + (v9 - 251919507));
  v22[10] = *(_BYTE *)(v6 + (v9 - 251919506));
  v22[11] = *(_BYTE *)(v6 + (v9 - 251919505));
  v22[12] = *(_BYTE *)(v6 + (v9 - 251919504));
  v22[13] = *(_BYTE *)(v6 + (v9 - 251919503));
  v22[14] = *(_BYTE *)(v6 + (v9 - 251919502));
  v22[15] = *(_BYTE *)(v6 + (v9 - 251919501));
  LODWORD(STACK[0x6AC0]) = STACK[0x8E04];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 4))(v23);
}

uint64_t sub_100A45EA0()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  STACK[0x77B0] = v0 + LODWORD(STACK[0x6AC0]) - 251919500;
  v2 = STACK[0x6AD8];
  STACK[0x84C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + ((v1 + 5124) ^ 0xFFFFFFFFFFFFE688);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x16F7)) - 12))();
}

uint64_t sub_100A45F48()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((11361 * ((v1 ^ 0xE3 ^ (v0 == ((v1 - 2298) ^ 0x1076))) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100A45F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * v3))(a1, a2, a3, 973 * (v3 ^ 0x4C84u));
}

uint64_t sub_100A45FA8@<X0>(unsigned __int8 *a1@<X8>)
{
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;

  v8 = (((16 * v3) ^ 0x9A339FCF) + 104519049) ^ (((16 * v3) ^ 0x2ED691EB) - 1293952083) ^ (((16 * v3) ^ 0xB4E50E24)
                                                                                         + 686572644);
  v9 = ((v8 + 816951092) ^ 0x32452466) & (2 * ((v8 + 816951092) & 0x33450674)) ^ (v8 + 816951092) & 0x33450674;
  v10 = ((2 * ((v8 + 816951092) ^ 0x70CD24E6)) ^ 0x87104524) & ((v8 + 816951092) ^ 0x70CD24E6) ^ (2
                                                                                                * ((v8 + 816951092) ^ 0x70CD24E6)) & 0x43882292;
  v11 = v10 ^ 0x40882292;
  v12 = (v10 ^ 0x3800002) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xE208A48) & v11 ^ (4 * v11) & 0x43882290;
  v14 = (v13 ^ 0x2000212) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x41882092)) ^ 0x38822920) & (v13 ^ 0x41882092) ^ (16 * (v13 ^ 0x41882092)) & 0x43882290;
  v16 = v14 ^ 0x43882292 ^ (v15 ^ 0x802092) & (v14 << 8);
  v17 = (v8 + 816951092) ^ (2
                          * ((v16 << 16) & 0x43880000 ^ v16 ^ ((v16 << 16) ^ 0x22920000) & (((v15 ^ 0x43080292) << 8) & 0x43880000 ^ 0x43880000 ^ (((v15 ^ 0x43080292) << 8) ^ 0x88220000) & (v15 ^ 0x43080292))));
  v18 = v2 + 8;
  a1[v18] = *(_BYTE *)(v6 + (v18 & 0xF)) ^ HIBYTE(v17) ^ *(_BYTE *)((v18 & 0xF) + v5 + 6) ^ *(_BYTE *)((v18 & 0xF) + v7 + 5) ^ ((v4 + 46 + (v4 ^ 0x23) - 12) * ((v2 + 8) & 0xF)) ^ 0xB1;
  a1[v2 + 9] = (-43 * ((v2 + 9) & 0xF)) ^ BYTE2(v17) ^ *(_BYTE *)(v6 + ((v2 + 9) & 0xFLL)) ^ *(_BYTE *)(((v2 + 9) & 0xFLL) + v5 + 6) ^ *(_BYTE *)(((v2 + 9) & 0xFLL) + v7 + 5) ^ 0x55;
  a1[v2 + 10] = (-43 * ((v2 + 10) & 0xF)) ^ BYTE1(v17) ^ *(_BYTE *)(v6 + ((v2 + 10) & 0xFLL)) ^ *(_BYTE *)(((v2 + 10) & 0xFLL) + v5 + 6) ^ *(_BYTE *)(((v2 + 10) & 0xFLL) + v7 + 5) ^ 0x43;
  v19 = v1 - v3;
  a1[v2 + 11] = (-43 * ((v2 + 11) & 0xF)) ^ *(_BYTE *)(v6 + ((v2 + 11) & 0xFLL)) ^ *(_BYTE *)(((v2 + 11) & 0xFLL)
                                                                                            + v5
                                                                                            + 6) ^ *(_BYTE *)(((v2 + 11) & 0xFLL) + v7 + 5) ^ 0x50 ^ v17;
  v20 = (((*a1 ^ 0x26E91CF1) - 1955609696) ^ ((*a1 ^ 0xD9E92B92) + 1953494269) ^ ((*a1 ^ 0xFF003763) + 1384572942))
      + 1383669905;
  a1[v2 + 12] = *(_BYTE *)(v6 + ((v2 + 12) & 0xFLL)) ^ (-43 * ((v2 + 12) & 0xF)) ^ *(_BYTE *)(((v2 + 12) & 0xFLL)
                                                                                            + v5
                                                                                            + 6) ^ *(_BYTE *)(((v2 + 12) & 0xFLL) + v7 + 5);
  a1[v2 + 13] = *(_BYTE *)(v6 + ((v2 + 13) & 0xFLL)) ^ (-43 * ((v2 + 13) & 0xF)) ^ *(_BYTE *)(((v2 + 13) & 0xFLL)
                                                                                            + v5
                                                                                            + 6) ^ *(_BYTE *)(((v2 + 13) & 0xFLL) + v7 + 5);
  a1[v2 + 14] = *(_BYTE *)(v6 + ((v2 + 14) & 0xFLL)) ^ (-43 * ((v2 + 14) & 0xF)) ^ *(_BYTE *)(((v2 + 14) & 0xFLL)
                                                                                            + v5
                                                                                            + 6) ^ *(_BYTE *)(((v2 + 14) & 0xFLL) + v7 + 5);
  a1[v2 | 0xFLL] = (v20 % (v17 ^ 0xB1554350) - ((2 * (v20 % (v17 ^ 0xB1554350))) & 0xA6) - 45) ^ 0x6C;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v4 ^ (219 * (v19 != 0)))))();
}

uint64_t sub_100A463B0@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = (v2 + 7);
  v5 = (-127 * (v4 & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v3 + 8 * (a1 - 21801)) + (v4 & 0xF) - 8) ^ *(_BYTE *)(*(_QWORD *)(v3 + 8 * (a1 - 20748)) + (v4 & 0xF) - 1) ^ *(_BYTE *)(*(_QWORD *)(v3 + 8 * (a1 ^ 0x5D66)) + (v4 & 0xF) - 8) ^ *(_BYTE *)(a2 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((248
                                          * ((v5
                                                             - (((v5 ^ 0xC4) - 120) ^ ((v5 ^ 0x89) - 53) ^ ((v5 ^ 0x4D) + 15))) != 187)) ^ a1))
                            - 4))();
}

uint64_t sub_100A4653C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 13511)) - 12))();
}

uint64_t sub_100A46558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  int v8;
  unsigned __int8 v9;
  char v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((255
                                          * (((1 << ((((v11
                                                      + v9
                                                      - ((v9 << ((v8 + a7) ^ 0xEF)) & ((v8 + 120) ^ 0xB6))
                                                      + 42) & 0x1F ^ (v10 - 88))
                                                    - 64) ^ 0x74)) & *(_DWORD *)(v7
                                                                               + 4
                                                                               * (((v11
                                                                                  + v9
                                                                                  - ((v9 << ((v8 + a7) ^ 0xEF)) & ((v8 + 6776) ^ 0x2AB6u))
                                                                                  - 2518) >> 5) ^ 0xFFFFB1))) == 0)) ^ (v8 + 18439)))
                            - 8))();
}

uint64_t sub_100A46604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((28627 * ((((a5 - 120) ^ (a5 - 116) ^ 0xD) + v5 - v6) != 187)) ^ a5))
                            - 12))();
}

uint64_t sub_100A46660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  *(_DWORD *)(v8 + 4 * a7) = v9 | a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a6) - ((a6 - 3966) | 0x200Au) + 15214))();
}

uint64_t sub_100A46690@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v5;
  BOOL v7;

  *(_BYTE *)(a4 + a1) = a3 ^ v5;
  v7 = (a3 & 1) == 0 || v4 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26576 * (((a2 - 1) ^ v7) & 1)) ^ a2))
                            - 8))();
}

uint64_t sub_100A46708(uint64_t a1, uint64_t a2, int a3)
{
  unsigned __int8 *v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v3[1] < *v3) * (((a3 + 1166) | 0xC40) - 19284)) ^ a3))
                            - 8))();
}

uint64_t sub_100A46744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = (((a3 + 1772266094) & 0x965D6E5F ^ 0xFFFFB37A) + 8 * (a4 - ((2 * a4) & 0x142)) - 1979912744) ^ 0x89FCED08;
  v11 = (_BYTE *)(v5 + v10);
  *v11 = *(_BYTE *)(a5 + v6) ^ (-43 * (v6 & 0xF)) ^ *(_BYTE *)(v8 + (v6 & 0xF)) ^ *(_BYTE *)((v6 & 0xF) + v7 + 6) ^ *(_BYTE *)((v6 & 0xF) + v9 + 5);
  v12 = v6 + 1;
  *(_BYTE *)(v5 + (v10 | 1)) = *(_BYTE *)(a5 + v12) ^ (-43 * (v12 & 0xF)) ^ *(_BYTE *)(v8 + (v12 & 0xF)) ^ *(_BYTE *)((v12 & 0xF) + v7 + 6) ^ *(_BYTE *)((v12 & 0xF) + v9 + 5);
  v13 = v6 + 2;
  v11[2] = *(_BYTE *)(a5 + v13) ^ (-43 * (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v7 + 6) ^ *(_BYTE *)((v13 & 0xF) + v9 + 5);
  v14 = v6 + 3;
  v11[3] = *(_BYTE *)(a5 + v14) ^ (-43 * (v14 & 0xF)) ^ *(_BYTE *)(v8 + (v14 & 0xF)) ^ *(_BYTE *)((v14 & 0xF) + v7 + 6) ^ *(_BYTE *)((v14 & 0xF) + v9 + 5);
  v15 = v6 + 4;
  *(_BYTE *)(v5 + (v10 | 4)) = *(_BYTE *)(a5 + v15) ^ (-43 * (v15 & 0xF)) ^ *(_BYTE *)(v8 + (v15 & 0xF)) ^ *(_BYTE *)((v15 & 0xF) + v7 + 6) ^ *(_BYTE *)((v15 & 0xF) + v9 + 5);
  v16 = v6 + 5;
  *(_BYTE *)(v5 + (v10 | 5)) = *(_BYTE *)(a5 + v16) ^ (-43 * (v16 & 0xF)) ^ *(_BYTE *)(v8 + (v16 & 0xF)) ^ *(_BYTE *)((v16 & 0xF) + v7 + 6) ^ *(_BYTE *)((v16 & 0xF) + v9 + 5);
  v17 = v6 + 6;
  v11[6] = *(_BYTE *)(a5 + v17) ^ (-43 * (v17 & 0xF)) ^ *(_BYTE *)(v8 + (v17 & 0xF)) ^ *(_BYTE *)((v17 & 0xF) + v7 + 6) ^ *(_BYTE *)((v17 & 0xF) + v9 + 5);
  v11[7] = *(_BYTE *)(a5 + a1) ^ (-43 * a2) ^ *(_BYTE *)(v8 + a2) ^ *(_BYTE *)(a2 + v7 + 6) ^ *(_BYTE *)(a2 + v9 + 5);
  ++*(_BYTE *)(v5 + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 8))();
}

uint64_t sub_100A46994(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 + 2298)) - 8))();
}

uint64_t sub_100A469B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, a3, 3923602517);
}

uint64_t sub_100A469BC()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] + 1687;
  v1 = STACK[0x6508] - 1210;
  LODWORD(STACK[0xA884]) = 16 * LODWORD(STACK[0xB394]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = v0 - 5905 + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x18B9)) - 4))();
}

uint64_t sub_100A46A20()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 1216;
  LODWORD(STACK[0xA15C]) = LODWORD(STACK[0x885C]) << (((STACK[0x6508] - 109) | 4) - 9);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x18B3)) - 4))();
}

uint64_t sub_100A46A8C()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  LODWORD(STACK[0x78C4]) = 16 * LODWORD(STACK[0xB61C]);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1206)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 - 2409) | 0x1000) + 440) ^ (v0 - 1206))) - 4))();
}

uint64_t sub_100A46AEC()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  LODWORD(STACK[0xBE90]) = 16 * LODWORD(STACK[0xBA18]);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1329)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 655)) - (v0 ^ 0x1072)))();
}

uint64_t sub_100A46B50()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] + 394;
  v1 = STACK[0x6508] - 1212;
  LODWORD(STACK[0x6D8C]) = 16 * LODWORD(STACK[0xA934]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 | 0x50D) + 434) ^ v1)) - 4))();
}

uint64_t sub_100A46BB4()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 147) | 0x604;
  v1 = STACK[0x6508] - 1226;
  LODWORD(STACK[0xAD40]) = 16 * LODWORD(STACK[0xADF8]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0x1054) + v1)) - 4))();
}

uint64_t sub_100A46C10()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 976178905) & 0xC5D0B7BD;
  v1 = STACK[0x6508] - 1227;
  LODWORD(STACK[0x7F6C]) = 16 * LODWORD(STACK[0xD0C0]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0x1057) + v1)) - 4))();
}

uint64_t sub_100A46C80()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] - 78592281) & 0x4AF3FAF;
  v1 = STACK[0x6508] - 1220;
  LODWORD(STACK[0x8114]) = 16 * LODWORD(STACK[0xCEB4]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x18B7)) - (v0 ^ 0x1709)))();
}

uint64_t sub_100A46CF4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  LODWORD(STACK[0x7DAC]) = LODWORD(STACK[0x9674]) << (((STACK[0x6508] - 118) | 0xD) ^ 9);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1247)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 655)) - 4))();
}

uint64_t sub_100A46D5C()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = 281 * (STACK[0x6508] ^ 0x1063);
  v1 = STACK[0x6508] - 1207;
  LODWORD(STACK[0xACAC]) = 16 * LODWORD(STACK[0x863C]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x18BA)) - (v0 ^ 0x1709)))();
}

uint64_t sub_100A46DC4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] ^ 0x77B;
  LODWORD(STACK[0x9E88]) = 16 * LODWORD(STACK[0x8ECC]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = v1 - 5905 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1237));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((int)v0 + 655)) - 4))();
}

uint64_t sub_100A46E28()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  LODWORD(STACK[0x87E0]) = LODWORD(STACK[0x9F74]) << ((25 * (STACK[0x6508] ^ 0x63)) ^ 9);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1292)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 655)) - 4))();
}

uint64_t sub_100A46E94()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 1217;
  LODWORD(STACK[0xC954]) = 16 * LODWORD(STACK[0xCCB0]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v0 + 2106) ^ v1)) - 4))();
}

uint64_t sub_100A46EF0()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 143;
  LODWORD(STACK[0x9D68]) = 16 * LODWORD(STACK[0x9B64]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1209)) + ((v1 | 0x608u) ^ 0xFFFFFFFFFFFFE8F9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((int)v0 + 655)) - 4))();
}

uint64_t sub_100A46F58()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  LODWORD(STACK[0x7D0C]) = 16 * LODWORD(STACK[0xCCA4]);
  v1 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1221)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 1687 + (int)v0 - 1221 - 4025)) - 4))();
}

uint64_t sub_100A46FAC()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = 1967 * (STACK[0x6508] ^ 0x1075);
  v1 = STACK[0x6508] - 1229;
  LODWORD(STACK[0x73D4]) = 16 * LODWORD(STACK[0xC46C]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0xFA1 ^ v0)) - 4))();
}

uint64_t sub_100A47018()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 404623031) & 0xE7E1F7DF;
  v1 = STACK[0x6508] - 1201;
  LODWORD(STACK[0x8B94]) = 16 * LODWORD(STACK[0xC994]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + (v0 ^ 0xFFFFFFFFFFFFE8F5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x18C0)) - 4))();
}

uint64_t sub_100A47088()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] ^ 0x77B;
  LODWORD(STACK[0x8258]) = 16 * LODWORD(STACK[0xBFB4]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 1204)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + (int)v0 - 1204 - 4042)) - 4))();
}

uint64_t sub_100A470E8()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] - 2422) | 0x100D;
  v1 = STACK[0x6508] - 1218;
  LODWORD(STACK[0x8A98]) = 16 * LODWORD(STACK[0xA744]);
  v2 = STACK[0x6AD8];
  STACK[0x8888] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((4839 * ((v1 ^ 0xF0030D98) > 0x6CD6231F)) ^ ((v0 ^ 0xFFFFE123) + v1)))
                            - 4))();
}

uint64_t sub_100A47178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;

  v5 = STACK[0x6508] - 1203;
  v6 = (16 * LODWORD(STACK[0x7560]));
  v7 = STACK[0x6AD8];
  STACK[0x8888] = (((STACK[0x6508] - 3442) | 0x1409) ^ 0xFFFFFFFFFFFFE8F5)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v5 ^ 0x18C6))
                                                                                       - 4))(a1, a2, a3, a4, a5, v6);
}

uint64_t sub_100A471D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  STACK[0xA3A0] = v7;
  STACK[0xB108] = v8;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a6 == ((v6 + 11624) ^ 0x4475)) * (v6 - 5873)) ^ v6)))();
}

uint64_t sub_100A47224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                                                                                       - 8))(a1, a2, 1772489163, a4, STACK[0x60B0]);
}

uint64_t sub_100A47288(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = (((a5 + v5) ^ *(_DWORD *)(v7 + v8)) & 0x7FFFFFFF) * a3;
  *(_BYTE *)(v9 + v5) = *(_BYTE *)(v10 + ((((v11 ^ HIWORD(v11)) * a3) >> ((v6 - 113) ^ 0x10)) & 0xFF0 | v5)) ^ *(_BYTE *)(a5 + v5) ^ (-53 * (v11 ^ BYTE2(v11)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4866 * (v5 == 15)) ^ v6)) - 8))();
}

uint64_t sub_100A47300@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  STACK[0xD1A8] = v1 + 32;
  STACK[0xDAE0] = v3;
  STACK[0xDAF8] = v4;
  STACK[0xDB00] = a1;
  STACK[0xDAD8] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 | (9403 * (v5 == v3)))) - 8))();
}

uint64_t sub_100A47374()
{
  int v0;
  uint64_t v1;
  char *v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v1;
  *v3 = *v2;
  v3[1] = v2[1];
  v3[2] = v2[2];
  v3[3] = v2[3];
  v3[4] = v2[4];
  v3[5] = v2[5];
  v3[6] = v2[6];
  v3[7] = v2[7];
  v3[8] = v2[8];
  v3[9] = v2[9];
  v3[10] = v2[10];
  v3[11] = v2[11];
  v3[12] = v2[12];
  v3[13] = v2[13];
  v3[14] = v2[14];
  v3[15] = v2[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 8167) ^ 0x2115)))();
}

uint64_t sub_100A47420@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 ^ 0x360C) + 20267) * (a1 != 0)) ^ v1)) - 12))();
}

uint64_t sub_100A4745C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  _BOOL4 v20;

  v9 = (a6 + 1680657990) ^ v7 ^ 0x78A1F50A;
  v10 = ((a6 + 1680657990) ^ 0x5B83B537) & (2 * ((a6 + 1680657990) & 0x9BD331B0)) ^ (a6 + 1680657990) & 0x9BD331B0;
  v11 = (2 * v9) & 0xE372E5A0 ^ (v8 + 567) ^ ((2 * v9) ^ 0xC6E5CB50) & v9;
  v12 = (4 * v10) & 0xE350C580 ^ v10 ^ v11 & ((4 * v10) | 0x18);
  v13 = (4 * v11) & 0xE372E5AC ^ 0x62306109 ^ ((4 * v11) ^ 0x8DCB96B4) & v11;
  v14 = v12 ^ 0xE372E503 ^ (16 * v12) & 0xE372E5A0 ^ ((16 * v12) ^ 0xE0) & v13;
  v15 = ((16 * v13) ^ 0x372E5AD0) & v13 ^ (16 * v13) & 0xE372E5A0;
  v16 = v14 ^ v15 & 0xF264A40 ^ ((v14 << 8) ^ 0x7DC3E740) & (v15 ^ 0x2322402D);
  v17 = ((v15 << 8) ^ 0x2D66CA40) & (v15 ^ 0x2322402D) ^ v15 & 0xF264A40;
  v18 = (a6 + 1680657990) ^ (2
                           * (v16 ^ v17 & 0xF264A40 ^ ((v16 << 16) ^ 0xAA8B4A42) & (v17 ^ 0x60500000) ^ ((v16 << 16) ^ 0xAA8B4A42) & 0x63724000));
  v20 = ((((v6 - 1579901284) & 0x5E2B5757) - 5899) & ((v18 & 0xE ^ a4) - 1) ^ 0x240015)
      - (((v18 & 0xE ^ a4) - 1) & 0x10408) == ((v6 + 813907130) & 0xCF7CEB7D ^ 0x22B544)
     && v18 != 1563884256;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25521 * v20) ^ v6)) - 12))();
}

uint64_t sub_100A4767C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unint64_t v7;
  int v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;

  STACK[0x6AB0] = v7;
  LODWORD(STACK[0x66F8]) = v6;
  LODWORD(STACK[0x6170]) = a6;
  STACK[0xDAE8] = 0;
  v9 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  v10 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xDAE8] = v10;
  v11 = v9(1028);
  STACK[0xDAF0] = v11;
  if (v10)
    v12 = v11 == 0;
  else
    v12 = 1;
  v13 = !v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((8 * (((v8 - 68) ^ v13) & 1)) & 0xDF | (32 * (((v8 - 68) ^ v13) & 1)) | v8))
                            - 4))();
}

uint64_t sub_100A4771C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  char *v3;
  unsigned __int8 v4;
  char v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  char *v17;
  int v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unint64_t v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  BOOL v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  BOOL v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unsigned int v238;
  int v239;
  unsigned __int8 v240;
  unsigned __int8 *v241;
  int v242;
  unsigned __int8 v243;
  unint64_t v244;
  unsigned int v245;
  int v246;
  unint64_t v247;
  unsigned __int8 v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  unint64_t v255;
  unint64_t v256;
  int v257;
  unint64_t v258;
  unint64_t v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  unsigned int v270;
  unint64_t v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  unint64_t v293;
  unsigned int v294;
  int v295;
  int v296;
  unsigned int v297;
  unint64_t v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unint64_t v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  int v406;
  unint64_t v407;
  unint64_t v408;
  unint64_t v409;
  unint64_t v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  uint64_t (*v416)(uint64_t, uint64_t);
  int v417;

  STACK[0x6178] = v2;
  v3 = (char *)*(&off_1015B46D0 + v1 - 17761) - 8;
  v4 = v3[v0[3] ^ 0x19];
  v5 = *((_BYTE *)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x34D3)) + (v0[2] ^ 0x1ALL) - 12);
  v6 = (char *)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x34D3)) - 12;
  v7 = v0[1];
  LODWORD(STACK[0x6AC0]) = 154 * ((v1 - 5064) ^ 0x35D4);
  v8 = (unint64_t)*(&off_1015B46D0 + v1 - 17422);
  v9 = v8;
  v10 = v4 ^ 0xA8 ^ (v4 >> 4) & 0xA | ((((v5 + 47) ^ ((v5 + 47) >> 4) ^ ((v5 + 47) >> ((-102 * ((v1 + 56) ^ 0xD4)) ^ 0x89))) ^ 0xDF) << 8);
  v11 = v6[v0[6] ^ 0x4CLL] + 47;
  v12 = v10 & 0xFF00FFFF | ((*(_BYTE *)(v8 + (v7 ^ 0xFA)) ^ 0x91 ^ (*(_BYTE *)(v8 + (v7 ^ 0xFA)) >> 2) & 0x1E) << 16);
  v13 = ((v11 >> 5) | (8 * v11)) ^ 0x41 ^ (v11 ^ ((v6[v0[6] ^ 0x4CLL] + 47) >> 1)) & 0xFFFFFFF8;
  LODWORD(v7) = ((*(_BYTE *)(v8 + (v0[5] ^ 0x28)) ^ 0xB4 ^ (*(_BYTE *)(v8 + (v0[5] ^ 0x28)) >> 2) & 0x1E) << 16) | ((((v13 >> 3) | (32 * v13)) ^ 0x8B) << 8);
  v14 = (*(_BYTE *)(v9 + (v0[14] ^ 0x58)) ^ (*(_BYTE *)(v9 + (v0[14] ^ 0x58)) >> 2) & 0x1E ^ 0xC) << 8;
  v15 = v0[13];
  v16 = v6[v0[12] ^ 0x13];
  v17 = v6;
  STACK[0x64E8] = (unint64_t)v6;
  LODWORD(v15) = v3[v15 ^ 0xC];
  v18 = v14 | (((v16 + 47) ^ ((v16 + 47) >> 4) ^ ((v16 + 47) >> 3) ^ 0xB0) << 24);
  v19 = (unsigned __int8 *)STACK[0xDAF8];
  v20 = v0[10] ^ 0xA3;
  v21 = (unint64_t)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x358A)) - 8;
  STACK[0x64D8] = v21;
  LOBYTE(v15) = (v15 >> 4) & 0xA ^ v15;
  v22 = ((*(_BYTE *)(v21 + v20) + 109) ^ 0xB4 ^ (-102 * (*(_BYTE *)(v21 + v20) + 109))) << 8;
  v23 = v19[7];
  STACK[0x69E0] = v23;
  v24 = (unint64_t)v3;
  LODWORD(v8) = v3[v23 ^ 0x36];
  v25 = v19[11];
  STACK[0x69D0] = v25;
  LODWORD(v23) = *(unsigned __int8 *)(v24 + (v25 ^ 0xCC));
  v26 = v24;
  v27 = v19[8];
  STACK[0x6A70] = v27;
  LODWORD(v7) = v7 & 0xFFFFFF00 | (v8 ^ (v8 >> 4) & 0xA) ^ 3;
  v28 = v9;
  STACK[0x64E0] = v9;
  LODWORD(v8) = *(unsigned __int8 *)(v9 + (v27 ^ 0xDC));
  v29 = v19[4];
  STACK[0x6A30] = v29;
  STACK[0x64F0] = v24;
  LODWORD(v27) = *(unsigned __int8 *)(v24 + (v29 ^ 0x44));
  v30 = v19[9];
  STACK[0x6920] = v30;
  LODWORD(v21) = v22 & 0xFFFFFF00 | ((v8 ^ (v8 >> 2) & 0x1E ^ 0x55555555) << 24) | v23 ^ 0xE9 ^ (v23 >> 4) & 0xA;
  LODWORD(v23) = *(unsigned __int8 *)(v28 + (v30 ^ 0xB8));
  v31 = v7 | ((v27 ^ 0x8A ^ (v27 >> 4) & 0xA) << 24);
  LODWORD(STACK[0x6990]) = v31;
  STACK[0x6910] = (unint64_t)v19;
  v32 = v19[15];
  STACK[0x6950] = v32;
  LODWORD(v27) = v21 & 0xFF00FFFF | ((v23 ^ 0x95 ^ (v23 >> 2) & 0x1E) << 16);
  LODWORD(STACK[0x6A60]) = v27;
  LOBYTE(v7) = *(_BYTE *)(v26 + (v32 ^ 0xB));
  v33 = *v19;
  STACK[0x6940] = v33;
  LODWORD(v23) = (v17[v33 ^ 0xCB] + 47);
  LODWORD(v21) = v12 | (((v17[v33 ^ 0xCB] + 47) ^ (v23 >> 4) ^ (v23 >> 3) ^ 0xE8) << 24);
  LODWORD(STACK[0x6A50]) = v21;
  LODWORD(v8) = (v18 & 0xFF00FF00 | (v7 >> 4) & 0xA ^ v7 ^ 0x97 | ((v15 ^ 0xF3) << 16)) ^ 0x80060B1;
  v34 = (unint64_t)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x37AA));
  v35 = (BYTE3(v8) ^ 0x45A5017D) + *(_DWORD *)(v34 + 4 * (BYTE3(v8) ^ 0x43));
  v36 = (unint64_t)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x312C));
  v37 = *(_DWORD *)(v36 + 4 * (v15 ^ 0x9Cu));
  LODWORD(STACK[0x6A80]) = v1 - 5064;
  v38 = (unint64_t)*(&off_1015B46D0 + ((v1 - 5064) ^ 0x3D38)) - 4;
  v39 = (unint64_t)*(&off_1015B46D0 + v1 - 16447) - 4;
  v40 = v8 ^ *(_DWORD *)(v38 + 4 * ((v7 >> 4) & 0xAu ^ ~(_BYTE)v7)) ^ v21 ^ __ROR4__(v37 ^ 0x16217F78 ^ (32 * v37), 16) ^ __ROR4__((*(_DWORD *)(v39 + 4 * (BYTE1(v8) ^ 3u)) - 321530508) ^ 0x5AD2CFF2, 24) ^ __ROR4__(v35 ^ 0x5BC77E65, 8);
  LODWORD(STACK[0x6880]) = v40 ^ v31;
  v41 = v40 ^ v31 ^ 0x1A4BBC07;
  v42 = v41 ^ v27;
  LODWORD(STACK[0x6960]) = v41;
  v43 = v41 ^ v27 ^ v8;
  LODWORD(STACK[0x6AA0]) = v8;
  LODWORD(v15) = *(_DWORD *)(v36 + 4 * (HIBYTE(v43) ^ 0x63));
  LODWORD(v15) = *(_DWORD *)(v38 + 4 * ((v41 ^ v27 ^ v8) ^ 0x79u)) ^ __ROR4__(v15 ^ 0x16217F78 ^ (32 * v15), 8) ^ v40 ^ __ROR4__((*(_DWORD *)(v39 + 4 * (BYTE2(v43) ^ 0x5Cu)) - 321530508) ^ 0x5AD2CFF2, 16) ^ v43 ^ 0xA0 ^ __ROR4__(*(_DWORD *)(v38 + 4 * (((unsigned __int16)(v43 ^ 0x20A0) >> 8) ^ 0xD9u)) ^ ((unsigned __int16)(v43 ^ 0x20A0) >> 8) ^ 0xE1440DAA, 24);
  v44 = v15 ^ v41;
  LODWORD(v17) = v15;
  LODWORD(STACK[0x67A0]) = v15;
  LODWORD(v23) = v15 ^ v41 ^ v8 ^ 0x4F45D0FC;
  LODWORD(STACK[0x68A0]) = v23;
  v45 = v15 ^ v41 ^ v8 ^ 0xE5AAE378;
  LODWORD(v15) = *(_DWORD *)(v36 + 4 * (BYTE2(v45) ^ 0x80u));
  v46 = (HIBYTE(v45) ^ 0x45A501D7) + *(_DWORD *)(v34 + 4 * (HIBYTE(v45) ^ 0xE9));
  LODWORD(v7) = *(_DWORD *)(v38 + 4 * (BYTE1(v23) ^ 0xD9u)) ^ BYTE1(v23) ^ 0xE1440DAA;
  LODWORD(STACK[0x6970]) = v45;
  LODWORD(v8) = *(_DWORD *)(v36 + 4 * ((v44 ^ v8) ^ 0x93u)) ^ 0xB20D175;
  LODWORD(v7) = v8 ^ __ROR4__(v15 ^ 0x16217F78 ^ (32 * v15), 16) ^ (32 * v8) ^ v17 ^ __ROR4__(v7, 24) ^ __ROR4__(v46 ^ 0x5BC77E65, 8);
  LODWORD(STACK[0x68B0]) = v7;
  LODWORD(STACK[0x68E0]) = v42 ^ 0xC5F20A0;
  LODWORD(STACK[0x6980]) = v44;
  LODWORD(STACK[0x6890]) = v44 ^ 0xD80FB1AD;
  LODWORD(v15) = v44 ^ v42 ^ 0xC5F20A0;
  LODWORD(STACK[0x6800]) = v15;
  v47 = v7 ^ 0x7DFB0284 ^ v44 ^ 0xD80FB1AD;
  LODWORD(STACK[0x68F0]) = v7 ^ 0x7DFB0284;
  v48 = v15 ^ 0x12000000 ^ v47;
  v49 = v48 ^ v45;
  LODWORD(STACK[0x6930]) = v48;
  v50 = *(_DWORD *)(v38 + 4 * ((v15 ^ v47 ^ v45) ^ 0xF0u)) ^ 0x1A4BBC07 ^ __ROR4__((*(_DWORD *)(v39 + 4 * (((v48 ^ v45) >> 16) ^ 0xE3u))- 321530508) ^ 0x5AD2CFF2, 16) ^ v7 ^ 0x7DFB0284 ^ (v15 ^ v47 ^ v45) ^ 0x29 ^ __ROR4__(*(_DWORD *)(v38 + 4 * (((unsigned __int16)(v49 ^ 0x8229) >> 8) ^ 0xD9u)) ^ ((unsigned __int16)(v49 ^ 0x8229) >> 8) ^ 0xE1440DAA, 24) ^ __ROR4__(((((v49 ^ 0x60E08229u) >> 24) ^ 0x45A5017D) + *(_DWORD *)(v34 + 4 * (((v49 ^ 0x60E08229u) >> 24) ^ 0x43))) ^ 0x5BC77E65, 8);
  LODWORD(v7) = v50 ^ v47;
  LODWORD(v8) = v50;
  LODWORD(STACK[0x6A20]) = v50;
  v51 = v50 ^ v47 ^ 0x974A6151;
  LODWORD(STACK[0x69A0]) = v51;
  LODWORD(STACK[0x6A10]) = v7;
  v52 = v51 ^ v15 ^ 0x12000000 ^ v47;
  LODWORD(v21) = v52 ^ v49 ^ 0x60E08229;
  LODWORD(STACK[0x67D0]) = v21;
  LODWORD(v17) = v52;
  LODWORD(STACK[0x67B0]) = v52;
  v53 = *(_DWORD *)(v34 + 4 * (BYTE2(v21) ^ 0x43u));
  LODWORD(v23) = *(_DWORD *)(v36 + 4 * (((unsigned __int16)(v21 ^ 0xB1AD) >> 8) ^ 0xDEu));
  v54 = (BYTE2(v21) ^ 0x45A5017D ^ v53) + 2 * ((BYTE2(v21) ^ 0x45A5017D) & v53);
  v55 = *(_DWORD *)(v36 + 4 * (v21 ^ 0x6Fu));
  v56 = v55 ^ __ROR4__(v23 ^ 0x16217F78 ^ (32 * v23), 24) ^ (32 * v55) ^ v8 ^ __ROR4__(((((v21 ^ 0x7D000000) >> 24) ^ 0x45A5017D)+ *(_DWORD *)(v34+ 4* (((v21 ^ 0x7D000000) >> 24) ^ 0x43))) ^ 0x5BC77E65, 8) ^ __ROR4__(v54 ^ 0x5BC77E65, 16);
  LODWORD(STACK[0x6850]) = v56;
  v56 ^= 0xAF2ECED5;
  LODWORD(v7) = v7 ^ 0x2045D0FC ^ v56;
  v57 = v56;
  LODWORD(STACK[0x6A40]) = v56;
  v58 = v17 ^ 0x860FB1AD ^ v7;
  LODWORD(STACK[0x69B0]) = v7;
  LOWORD(v54) = v58 ^ v21;
  LODWORD(STACK[0x69F0]) = v58;
  LODWORD(v8) = v58 ^ v21 ^ 0x7D000000 ^ 0xFB0FB1AD;
  v59 = *(_DWORD *)(v38 + 4 * (BYTE3(v8) ^ 0xD9)) ^ BYTE3(v8) ^ 0xE1440DAA;
  LODWORD(STACK[0x6A00]) = v8;
  v60 = (*(_DWORD *)(v39 + 4 * (v54 ^ 0xAEu)) - 321530508) ^ __ROR4__((*(_DWORD *)(v39+ 4* (BYTE1(v54) ^ 0xB2u))- 321530508) ^ 0x5AD2CFF2, 24) ^ v57 ^ __ROR4__(v59, 8) ^ __ROR4__(((BYTE2(v8) ^ 0x45A5017D) + *(_DWORD *)(v34 + 4 * (BYTE2(v8) ^ 0x43u))) ^ 0x5BC77E65, 16);
  v61 = v60 ^ v7;
  LODWORD(STACK[0x6840]) = v60;
  LODWORD(v23) = v60 ^ v7 ^ v17 ^ 0x860FB1AD ^ v7;
  LODWORD(v17) = v23 ^ v8;
  LODWORD(v19) = *(_DWORD *)(v36 + 4 * (((unsigned __int16)(v23 ^ v8) >> 8) ^ 0x11u));
  v62 = *(_DWORD *)(v38 + 4 * ((v23 ^ v8) ^ 0x86u)) ^ __ROR4__((*(_DWORD *)(v39+ 4* (((v23 ^ v8) >> 16) ^ 0xDEu))- 321530508) ^ 0x5AD2CFF2, 16) ^ __ROR4__(v19 ^ 0x16217F78 ^ (32 * (_DWORD)v19), 24) ^ v60 ^ (v23 ^ v8) ^ 0x5F;
  v63 = __ROR4__(((((v23 ^ v8 ^ 0x22DD7E5F) >> 24) ^ 0x45A5017D)+ *(_DWORD *)(v34 + 4 * (((v23 ^ v8 ^ 0x22DD7E5F) >> 24) ^ 0x43))) ^ 0x5BC77E65, 8);
  LODWORD(STACK[0x6870]) = v62 ^ v63;
  v64 = v62 ^ v63 ^ 0x1A4BBC07;
  v65 = v61 ^ 0x17DD7E5F ^ v64;
  LODWORD(STACK[0x67F0]) = v64;
  LODWORD(STACK[0x6860]) = v65;
  LODWORD(STACK[0x66E8]) = v61;
  v66 = v65 ^ v23;
  LODWORD(v33) = v61 ^ v21 ^ 0x7D000000 ^ v65 ^ v23;
  v67 = v33 ^ 0x22DD7E5F;
  LODWORD(v33) = (*(_DWORD *)(v39 + 4 * ((v61 ^ v21 ^ v65 ^ v23) ^ 0x5Cu)) - 321530508) ^ __ROR4__((*(_DWORD *)(v39 + 4 * (BYTE3(v33) ^ 0x21)) - 321530508) ^ 0x5AD2CFF2, 8);
  v68 = *(_DWORD *)(v38 + 4 * (BYTE1(v67) ^ 0xD9u));
  STACK[0x68D0] = v38;
  STACK[0x6900] = v34;
  LODWORD(v33) = v33 ^ __ROR4__(v68 ^ BYTE1(v67) ^ 0xE1440DAA, 24) ^ __ROR4__(((BYTE2(v67) ^ 0x45A5017D)+ *(_DWORD *)(v34 + 4 * (BYTE2(v67) ^ 0x43u))) ^ 0x5BC77E65, 16);
  LODWORD(STACK[0x69C0]) = v33 ^ v61;
  LODWORD(v27) = v33 ^ v61 ^ 0xD9D2CFF2;
  v69 = (v27 ^ v66 ^ 0x780FB1AD) - 2097152000 - ((2 * (v27 ^ v66)) & 0x6000000);
  LODWORD(v7) = v69;
  LODWORD(STACK[0x6820]) = v69;
  LODWORD(v26) = ((v27 ^ v66) ^ 0xAD ^ v67 ^ 0x45A5018F)
               + *(_DWORD *)(v34 + 4 * ((v27 ^ v66) ^ 0xAD ^ v67 ^ 0xB1u));
  v70 = v69 ^ v67 ^ 0x75D2CFF2;
  LODWORD(STACK[0x6A90]) = v70;
  v71 = *(_DWORD *)(v38 + 4 * (HIBYTE(v70) ^ 0xD9)) ^ HIBYTE(v70) ^ 0xE1440DAA;
  v72 = (BYTE2(v70) ^ 0x45A5017D) + *(_DWORD *)(v34 + 4 * (BYTE2(v70) ^ 0x43u));
  LODWORD(v33) = v33 ^ v64;
  STACK[0x68C0] = v39;
  v73 = v33 ^ __ROR4__((*(_DWORD *)(v39+ 4 * (((unsigned __int16)(v27 ^ v65 ^ v23 ^ 0xB1AD ^ v67) >> 8) ^ 0xCCu))- 321530508) ^ 0x5AD2CFF2, 24) ^ v26 ^ __ROR4__(v71, 8) ^ __ROR4__(v72 ^ 0x5BC77E65, 16) ^ 0x7E15B197;
  LODWORD(v21) = v73 ^ v27;
  v74 = v73;
  LODWORD(STACK[0x6810]) = v73;
  v75 = v73 ^ v27 ^ 0x620FB1AD;
  v76 = v75 ^ v67;
  LODWORD(STACK[0x67E0]) = v75;
  LODWORD(v27) = *(_DWORD *)(v38 + 4 * (((v75 ^ v67) >> 16) ^ 0xD9u)) ^ ((v75 ^ v67) >> 16) ^ 0xE1440DAA;
  STACK[0x6830] = v36;
  LODWORD(v26) = *(_DWORD *)(v36 + 4 * (((v75 ^ v67) >> 24) ^ 0x6F));
  LODWORD(v34) = *(_DWORD *)(v36 + 4 * (((unsigned __int16)(v75 ^ v67) >> 8) ^ 0x6Fu));
  v77 = (*(_DWORD *)(v39 + 4 * ((v75 ^ v67) ^ 3u)) - 321530508) ^ 0x5AD2CFF2;
  LODWORD(v26) = __ROR4__(v26 ^ 0x16217F78 ^ (32 * v26), 8) ^ 0x17DD7E5F ^ __ROR4__(v34 ^ 0x16217F78 ^ (32 * v34), 24) ^ v77 ^ v74;
  v78 = __ROR4__(v27, 16);
  LODWORD(STACK[0x6790]) = v26 ^ v78;
  LODWORD(v38) = v47 ^ 0xF26FB8FF;
  LODWORD(v15) = v40 ^ 0xB79757E1;
  LODWORD(STACK[0x6708]) = v40 ^ 0xB79757E1;
  v79 = v49 ^ 0x5C55B87;
  LODWORD(STACK[0x6730]) = v49 ^ 0x5C55B87;
  LODWORD(STACK[0x6720]) = (v47 ^ 0xF26FB8FF) - 1836258501 + v77;
  v80 = LODWORD(STACK[0x6800]) ^ 0x9ECC5D87;
  LODWORD(v21) = v26 ^ v78 ^ v21;
  LODWORD(STACK[0x67C0]) = v23 ^ 0x39187BDC;
  LODWORD(STACK[0x6780]) = v75 ^ v7;
  LODWORD(v8) = v21 ^ v75 ^ v7;
  LODWORD(STACK[0x6800]) = v8 ^ 0xC25C4FDD;
  v81 = (v8 ^ 0xC25C4FDD) - (v23 ^ 0x39187BDC) + 930175476;
  LODWORD(v23) = (v81 ^ 0xA41FA00C) & (2 * (v81 & 0x869FC90D)) ^ v81 & 0x869FC90D;
  v82 = ((2 * (v81 ^ 0xA901B204)) ^ 0x5F3CF612) & (v81 ^ 0xA901B204) ^ (2 * (v81 ^ 0xA901B204)) & 0x2F9E7B08;
  v83 = v82 ^ 0x20820909;
  v84 = (v82 ^ 0xE1C6101) & (4 * v23) ^ v23;
  LODWORD(v23) = ((4 * v83) ^ 0xBE79EC24) & v83 ^ (4 * v83) & 0x2F9E7B08;
  v85 = (v23 ^ 0x2E186800) & (16 * v84) ^ v84;
  LODWORD(v23) = ((16 * (v23 ^ 0x1861309)) ^ 0xF9E7B090) & (v23 ^ 0x1861309) ^ (16 * (v23 ^ 0x1861309)) & 0x2F9E7B00;
  v86 = v85 ^ 0x2F9E7B09 ^ (v23 ^ 0x29863009) & (v85 << 8);
  LODWORD(STACK[0x6660]) = v81 ^ (2
                                * ((v86 << 16) & 0x2F9E0000 ^ v86 ^ ((v86 << 16) ^ 0x7B090000) & (((v23 ^ 0x6184B09) << 8) & 0x2F9E0000 ^ 0x21840000 ^ (((v23 ^ 0x6184B09) << 8) ^ 0x9E7B0000) & (v23 ^ 0x6184B09))));
  LODWORD(STACK[0x6770]) = v33 ^ 0x763E56A0;
  v87 = v15 - v79 - 530445886;
  v88 = (v87 ^ 0xF1BBE3E6) & (2 * (v87 & 0xF53BC3E0)) ^ v87 & 0xF53BC3E0;
  LODWORD(v23) = ((2 * (v87 ^ 0x5BCAE466)) ^ 0x5DE24F0C) & (v87 ^ 0x5BCAE466) ^ (2 * (v87 ^ 0x5BCAE466)) & 0xAEF12786;
  v89 = (v23 ^ 0xEE02702) & (4 * v88) ^ v88;
  LODWORD(v23) = ((4 * (v23 ^ 0xA2112082)) ^ 0xBBC49E18) & (v23 ^ 0xA2112082) ^ (4 * (v23 ^ 0xA2112082)) & 0xAEF12784;
  v90 = (v23 ^ 0xAAC00606) & (16 * v89) ^ v89;
  LODWORD(v23) = ((16 * (v23 ^ 0x4312186)) ^ 0xEF127860) & (v23 ^ 0x4312186) ^ (16 * (v23 ^ 0x4312186)) & 0xAEF12780;
  v91 = v90 ^ 0xAEF12786 ^ (v23 ^ 0xAE102086) & (v90 << 8);
  LODWORD(STACK[0x6710]) = v87 ^ (2
                                * ((v91 << 16) & 0x2EF10000 ^ v91 ^ ((v91 << 16) ^ 0x27860000) & (((v23 ^ 0xE10786) << 8) & 0xAEF10000 ^ 0xED00000 ^ (((v23 ^ 0xE10786) << 8) ^ 0x71270000) & (v23 ^ 0xE10786))));
  LODWORD(v34) = v66 ^ 0x64C5EEE1;
  v92 = LODWORD(STACK[0x67A0]) ^ 0xA3690F52;
  v93 = (v43 ^ 0x196CF8C2) - 1183424091 + v92;
  LODWORD(v33) = (v93 ^ 0xF8F658C1) & (2 * (v93 & 0xF88612D1)) ^ v93 & 0xF88612D1;
  v94 = ((2 * (v93 ^ 0x68F67D61)) ^ 0x20E0DF60) & (v93 ^ 0x68F67D61) ^ (2 * (v93 ^ 0x68F67D61)) & 0x90706FB0;
  LODWORD(v33) = (v94 ^ 0x10206F10) & (4 * v33) ^ v33;
  v95 = ((4 * (v94 ^ 0x90102090)) ^ 0x41C1BEC0) & (v94 ^ 0x90102090) ^ (4 * (v94 ^ 0x90102090)) & 0x90706FB0;
  LODWORD(v33) = (v95 ^ 0x402E80) & (16 * v33) ^ v33;
  v96 = ((16 * (v95 ^ 0x90304130)) ^ 0x706FB00) & (v95 ^ 0x90304130) ^ (16 * (v95 ^ 0x90304130)) & 0x90706FB0;
  LODWORD(v33) = v33 ^ 0x90706FB0 ^ (v96 ^ 0x6B00) & ((_DWORD)v33 << 8);
  LODWORD(STACK[0x66F0]) = v93 ^ (2
                                * (((_DWORD)v33 << 16) & 0x10700000 ^ v33 ^ (((_DWORD)v33 << 16) ^ 0x6FB00000) & (((v96 ^ 0x907004B0) << 8) & 0x90700000 ^ (((v96 ^ 0x907004B0) << 8) ^ 0x706F0000) & (v96 ^ 0x907004B0) ^ 0x100000)));
  LODWORD(v27) = STACK[0x67D0];
  v97 = (LODWORD(STACK[0x67D0]) ^ 0x74AB9A38 ^ LODWORD(STACK[0x6A90])) - 1462552764;
  LODWORD(STACK[0x6518]) = (v17 ^ 0x39187BDC)
                         + 933237790
                         + (v66 ^ 0x64C5EEE1)
                         - 1925082394
                         - ((2 * ((v17 ^ 0x39187BDC) + 933237790 + (v66 ^ 0x64C5EEE1))) & 0x1A8325CC);
  LODWORD(STACK[0x6700]) = v21 ^ 0xB78E802F;
  LODWORD(v33) = STACK[0x67B0];
  v98 = (v21 ^ 0xB78E802F) - (LODWORD(STACK[0x67B0]) ^ 0x609A7D35) - 1203795362;
  LODWORD(v39) = (v98 ^ 0x8EBD3CEE) & (2 * (v98 & 0xAF3E3CEF)) ^ v98 & 0xAF3E3CEF;
  v99 = ((2 * (v98 ^ 0x928D44FE)) ^ 0x7B66F022) & (v98 ^ 0x928D44FE) ^ (2 * (v98 ^ 0x928D44FE)) & 0x3DB37810;
  LODWORD(v39) = (v99 ^ 0x39207000) & (4 * v39) ^ v39;
  v100 = ((4 * (v99 ^ 0x4910811)) ^ 0xF6CDE044) & (v99 ^ 0x4910811) ^ (4 * (v99 ^ 0x4910811)) & 0x3DB37810;
  LODWORD(v39) = (v100 ^ 0x34816000) & (16 * v39) ^ v39;
  v101 = ((16 * (v100 ^ 0x9321811)) ^ 0xDB378110) & (v100 ^ 0x9321811) ^ (16 * (v100 ^ 0x9321811)) & 0x3DB37810;
  LODWORD(v39) = v39 ^ 0x3DB37811 ^ (v101 ^ 0x19330000) & ((_DWORD)v39 << 8);
  LODWORD(STACK[0x6658]) = v98 ^ (2
                                * (((_DWORD)v39 << 16) & 0x3DB30000 ^ v39 ^ (((_DWORD)v39 << 16) ^ 0x78110000) & (((v101 ^ 0x24807801) << 8) & 0x3DB30000 ^ 0xC830000 ^ (((v101 ^ 0x24807801) << 8) ^ 0x33780000) & (v101 ^ 0x24807801))));
  v102 = STACK[0x6990];
  v103 = LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6990]);
  LODWORD(STACK[0x6760]) = (v97 ^ v103) + 833020972 - ((2 * (v97 ^ v103)) & 0x634DC858);
  LODWORD(STACK[0x6740]) = (v97 ^ v102) + 833020972 - ((2 * (v97 ^ v102)) & 0x634DC858);
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x6960]) - 197385625 - 2 * (STACK[0x6960] & 0x743C226F ^ STACK[0x6880] & 8);
  LODWORD(STACK[0x6990]) = (v103 ^ 0x78BE2287 ^ LODWORD(STACK[0x6A60]))
                         + 833020972
                         - ((2 * (v103 ^ 0x78BE2287 ^ LODWORD(STACK[0x6A60]))) & 0x634DC858);
  LODWORD(STACK[0x6750]) = (v92 ^ v103 ^ 0x78BE2287) - 2117320601 - ((2 * (v92 ^ v103 ^ 0x78BE2287)) & 0x39880CE);
  v104 = v80;
  LODWORD(STACK[0x6880]) = (v80 ^ v103 ^ 0x78BE2287) - 2117320601 - ((2 * (v80 ^ v103 ^ 0x78BE2287)) & 0x39880CE);
  LODWORD(v39) = v8 ^ v76 ^ 0x38DD7E5F;
  v105 = v76 ^ 0x6050DFFE;
  v106 = v8 ^ v76 ^ 0xC25C4FDD;
  LODWORD(v36) = (v76 ^ 0x6050DFFE) - v106 + 920988474;
  LODWORD(STACK[0x6960]) = (v36 ^ v43 ^ 0x196CF8C2) - 197385625 - ((2 * (v36 ^ v43 ^ 0x196CF8C2)) & 0xE87844CE);
  v107 = LODWORD(STACK[0x68A0]) - 2117320601 - 2 * (STACK[0x68A0] & 0x1CC407F ^ STACK[0x6970] & 0x18);
  LODWORD(STACK[0x67A0]) = (v36 ^ LODWORD(STACK[0x6708]))
                         - 197385625
                         - ((2 * (v36 ^ LODWORD(STACK[0x6708]))) & 0xE87844CE);
  v108 = v38 - 519101794 - ((2 * v38) & 0xC21E453C);
  LODWORD(STACK[0x6980]) = LODWORD(STACK[0x6890]) - 2117320601 - 2 * (STACK[0x6890] & 0x1CC4077 ^ STACK[0x6980] & 0x10);
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x68F0]) - 519101794 - 2 * (STACK[0x68F0] & 0x610F229F ^ STACK[0x68B0] & 1);
  LODWORD(v15) = v36 ^ LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x6680]) = v36;
  LODWORD(STACK[0x68F0]) = v15 - 197385625 - ((2 * v15) & 0xE87844CE);
  LODWORD(v23) = LODWORD(STACK[0x6730]) - 519101794 - ((2 * LODWORD(STACK[0x6730])) & 0xC21E453C);
  v109 = v27 ^ 0x609A7D35;
  v110 = (v76 ^ 0x6050DFFE) + (v27 ^ 0x609A7D35);
  LODWORD(STACK[0x68A0]) = (v110 ^ 0x48B369D4 ^ LODWORD(STACK[0x6930]))
                         - 519101794
                         - ((2 * (v110 ^ 0x48B369D4 ^ LODWORD(STACK[0x6930]))) & 0xC21E453C);
  LODWORD(v21) = LODWORD(STACK[0x6660]) ^ 0xE7F7F78;
  v111 = v103 ^ 0x78BE2287;
  v112 = v21 ^ v107 ^ -(v21 ^ v107) ^ ((v103 ^ 0x78BE2287) - (v21 ^ v107 ^ v103 ^ 0x78BE2287));
  HIDWORD(v113) = v33 ^ 0x609A7D35;
  LODWORD(v113) = v33;
  LODWORD(STACK[0x6890]) = v113 >> 27;
  v114 = LODWORD(STACK[0x6850]) ^ 0xCE304A62;
  LODWORD(STACK[0x6930]) = v110 ^ 0xF4C9098E ^ v108;
  LODWORD(STACK[0x6850]) = v110 ^ 0xF4C9098E ^ v23;
  LODWORD(STACK[0x67D0]) = (v17 ^ 0x39187BDC)
                         - 197385625
                         - ((2 * (v17 ^ 0x39187BDC)) & 0xE87844CE);
  LODWORD(STACK[0x6730]) = LODWORD(STACK[0x66E8]) - 197385625 - ((2 * LODWORD(STACK[0x66E8])) & 0xE87844CE);
  v115 = LODWORD(STACK[0x67F0]) + 1791484991 - ((2 * LODWORD(STACK[0x67F0])) & 0xD58FC87E);
  LODWORD(STACK[0x67F0]) = v67 + 1791484991 - ((2 * v67) & 0xD58FC87E);
  v116 = LODWORD(STACK[0x6780]) ^ 0x5AD2CFF2;
  v117 = v114 ^ v116;
  LODWORD(STACK[0x6708]) = (v114 ^ v116 ^ LODWORD(STACK[0x6840]))
                         - 197385625
                         - ((2 * (v114 ^ v116 ^ LODWORD(STACK[0x6840]))) & 0xE87844CE);
  LODWORD(STACK[0x6780]) = v116 - 1925082394 - ((2 * v116) & 0x1A8325CC);
  v118 = LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x69A0]);
  v119 = LODWORD(STACK[0x6770]) + v34;
  v120 = v110 ^ 0x48B369D4;
  LODWORD(STACK[0x6840]) = (v110 ^ 0x48B369D4 ^ v34) + 1791484991 - ((2 * (v110 ^ 0x48B369D4 ^ v34)) & 0xD58FC87E);
  LODWORD(STACK[0x67C0]) = (v117 ^ LODWORD(STACK[0x67C0]))
                         - 197385625
                         - ((2 * (v117 ^ LODWORD(STACK[0x67C0]))) & 0xE87844CE);
  LODWORD(STACK[0x69A0]) = (v110 ^ 0x48B369D4 ^ LODWORD(STACK[0x6860]))
                         + 1791484991
                         - ((2 * (v110 ^ 0x48B369D4 ^ LODWORD(STACK[0x6860]))) & 0xD58FC87E);
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6790]) - 1925082394 - ((2 * LODWORD(STACK[0x6790])) & 0x1A8325CC);
  LODWORD(v7) = STACK[0x67E0];
  LODWORD(STACK[0x6770]) = (LODWORD(STACK[0x67E0]) ^ v97)
                         - 1925082394
                         - ((2 * (LODWORD(STACK[0x67E0]) ^ v97)) & 0x1A8325CC);
  LODWORD(v34) = v39 ^ v7;
  v121 = LODWORD(STACK[0x6870]) ^ 0x236A9F15 ^ v39;
  LODWORD(STACK[0x66D8]) = (LODWORD(STACK[0x6810]) ^ v97)
                         - 1925082394
                         - ((2 * (LODWORD(STACK[0x6810]) ^ v97)) & 0x1A8325CC);
  v122 = v121 ^ LODWORD(STACK[0x6700]);
  v123 = v121;
  LODWORD(STACK[0x6510]) = v121;
  LODWORD(STACK[0x67E0]) = v122 - 1925082394 - ((2 * v122) & 0x1A8325CC);
  LODWORD(STACK[0x6700]) = (v105 ^ v97) - 1925082394 - ((2 * (v105 ^ v97)) & 0x1A8325CC);
  v124 = v119 ^ 0x46D236EF;
  v125 = STACK[0x66F0];
  v126 = LODWORD(STACK[0x66F0]) ^ 0x2C3AEFD6;
  v127 = v126 ^ LODWORD(STACK[0x66E0]) ^ 0x28968AB7;
  LODWORD(v8) = STACK[0x6800];
  LODWORD(STACK[0x6668]) = LODWORD(STACK[0x6800]) + v104;
  v128 = STACK[0x6518];
  LODWORD(STACK[0x6A60]) = v123 ^ LODWORD(STACK[0x6518]) ^ ((v106 ^ v119 ^ 0x46D236EF)
                                                          - 1925082394
                                                          - ((2 * (v106 ^ v119 ^ 0x46D236EF)) & 0x1A8325CC));
  LODWORD(STACK[0x6870]) = v123 ^ v128 ^ ((v8 ^ v119 ^ 0x46D236EF)
                                        - 1925082394
                                        - ((2 * (v8 ^ v119 ^ 0x46D236EF)) & 0x1A8325CC));
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x69B0]) ^ 0x680A4F8A;
  LODWORD(STACK[0x69B0]) = v36 ^ v127;
  v129 = *(&off_1015B46D0 + LODWORD(STACK[0x6A80]) - 11074) - 8;
  LODWORD(STACK[0x68B0]) = v129;
  LODWORD(v8) = (v36 ^ v127) - v129 - 1464861988;
  v130 = v21 ^ LODWORD(STACK[0x6880]);
  LODWORD(STACK[0x6620]) = v34 ^ 0x412E3114;
  v131 = v34 ^ v97;
  v132 = v34 ^ v97 ^ 0x29247E9E;
  LODWORD(v27) = v132 ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6880]) = v27;
  v133 = (v8 + v130) ^ v27 ^ (2 * (v8 + v130)) & 0xACF5D89E;
  LODWORD(STACK[0x6A40]) = v133;
  LODWORD(v8) = LODWORD(STACK[0x6A90]) ^ 0xF8E6F7A1;
  LODWORD(v36) = LODWORD(STACK[0x6820]) ^ 0x8D343853;
  LODWORD(STACK[0x6618]) = v118 ^ 0x3222FE4A;
  LODWORD(v34) = v110 ^ v118 ^ 0x3222FE4A;
  v134 = v8 ^ v34;
  v135 = v36 ^ v34;
  v136 = LODWORD(STACK[0x6710]) ^ 0xD47F68C0;
  LODWORD(STACK[0x6A90]) = v103 ^ v136 ^ 0x44CF7583 ^ LODWORD(STACK[0x6740]);
  LODWORD(v36) = LODWORD(STACK[0x6A50]) ^ 0xA16596FB ^ v136;
  LODWORD(STACK[0x6610]) = v136;
  LODWORD(STACK[0x68E0]) = v36 ^ LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x6760]) = v125 ^ 0x390937B4 ^ LODWORD(STACK[0x68F0]);
  v137 = LODWORD(STACK[0x6980]) ^ 0x46C3EC2A;
  v138 = v21 ^ LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x6688]) = v111;
  v139 = (v133 & 1) == 0;
  LODWORD(STACK[0x6558]) = v21;
  LODWORD(STACK[0x6860]) = v21 ^ v111;
  v140 = v21 ^ v111 ^ v137;
  if ((v133 & 1) != 0)
    v141 = v138;
  else
    v141 = v140;
  LODWORD(STACK[0x67B0]) = v141;
  if ((v133 & 1) != 0)
    v142 = (v112 + v111) ^ 0xD1898D7B;
  else
    v142 = v138;
  LODWORD(STACK[0x68F0]) = v142;
  if ((v133 & 1) != 0)
    v143 = v130;
  else
    v143 = (v112 + v111) ^ 0xD1898D7B;
  LODWORD(STACK[0x66C0]) = v143;
  if ((v133 & 1) != 0)
    v144 = v140;
  else
    v144 = v130;
  LODWORD(STACK[0x66E8]) = v144;
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x6970]) ^ v120 ^ 0xD95FB9F4;
  LODWORD(STACK[0x66D0]) = LODWORD(STACK[0x68A0]) ^ 0x13500859;
  v145 = STACK[0x6720];
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6720]) ^ __ROR4__(LODWORD(STACK[0x6890]) ^ 0x5E10DC94 ^ __ROR4__(v117, 27), 5) ^ 0xC2F086E4;
  v146 = LODWORD(STACK[0x6A10]) ^ 0x49BF8FB7;
  v147 = LODWORD(STACK[0x6A10]) ^ 0x3DDFADC9;
  v148 = LODWORD(STACK[0x6A20]) ^ 0xAA95CC98;
  LODWORD(STACK[0x6810]) = v117 ^ v145 ^ v109;
  LODWORD(STACK[0x6890]) = v147 ^ v117 ^ v145;
  v149 = v148 ^ v117 ^ v145;
  v150 = LODWORD(STACK[0x69F0]) ^ 0xD22BCF33 ^ v131;
  v151 = v132 ^ LODWORD(STACK[0x6A00]);
  v152 = v125 ^ 0xEE2D25A7 ^ LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x69F0]) = LODWORD(STACK[0x6730]) ^ 0xC217CA71;
  LODWORD(STACK[0x6A00]) = v115 ^ 0x88172113;
  LODWORD(STACK[0x6550]) = v118;
  v153 = LODWORD(STACK[0x69C0]) ^ v118 ^ 0x2E77603F;
  v154 = v128 ^ 0x6050DFFE ^ LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x6750]) = v128 ^ v97;
  v155 = v128 ^ v97 ^ 0x4F50DFFE ^ LODWORD(STACK[0x6780]);
  LODWORD(STACK[0x6568]) = v110;
  v156 = v153 ^ v120;
  LODWORD(STACK[0x6628]) = v120;
  if ((v133 & 1) != 0)
    v157 = v156;
  else
    v157 = v135;
  LODWORD(STACK[0x6A20]) = v157;
  if ((v133 & 1) != 0)
    v158 = v146 ^ v110;
  else
    v158 = v156;
  LODWORD(STACK[0x6980]) = v158;
  if ((v133 & 1) != 0)
    v159 = v134;
  else
    v159 = v146 ^ v110;
  LODWORD(STACK[0x6A10]) = v159;
  if ((v133 & 1) != 0)
    v160 = v135;
  else
    v160 = v134;
  LODWORD(STACK[0x6970]) = v160;
  v161 = v128 ^ 0x778DA1A1 ^ LODWORD(STACK[0x66D8]);
  v162 = LODWORD(STACK[0x6790]) ^ 0xD5813182;
  v163 = LODWORD(STACK[0x6658]) ^ 0x4575EE53;
  LODWORD(STACK[0x6670]) = v126;
  v164 = LODWORD(STACK[0x6960]) ^ v126;
  v165 = LODWORD(STACK[0x67A0]) ^ v126;
  v166 = LODWORD(STACK[0x6930]) ^ v163;
  v167 = LODWORD(STACK[0x6850]) ^ v163;
  LODWORD(STACK[0x6560]) = v117;
  v168 = v117 ^ v126;
  v169 = v117 ^ v126 ^ LODWORD(STACK[0x67D0]);
  LODWORD(STACK[0x65B8]) = v117 ^ v126;
  v170 = LODWORD(STACK[0x6668]) ^ 0xF86E18E1;
  v171 = v170 ^ LODWORD(STACK[0x6840]);
  v172 = LODWORD(STACK[0x67C0]) ^ v126;
  v173 = LODWORD(STACK[0x6700]) ^ v128;
  LODWORD(STACK[0x6800]) = v124 ^ v128;
  v174 = v124 ^ v128 ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x6678]) = v97;
  v175 = LODWORD(STACK[0x6620]) ^ v97;
  LODWORD(STACK[0x6820]) = v175;
  v176 = LODWORD(STACK[0x66E0]) ^ v175;
  v177 = LODWORD(STACK[0x6990]) ^ 0x88C14420 ^ v136 ^ v97;
  v178 = v170 ^ v120;
  v179 = v170 ^ v120 ^ LODWORD(STACK[0x67F0]) ^ 0x9FCA5F4C;
  LODWORD(STACK[0x65C0]) = v170 ^ v120;
  LODWORD(STACK[0x6698]) = v177;
  v180 = STACK[0x6A90];
  if (v139)
    v181 = v177;
  else
    v181 = STACK[0x6A90];
  LODWORD(STACK[0x69C0]) = v181;
  v182 = STACK[0x68E0];
  if (v139)
    v182 = v180;
  LODWORD(STACK[0x6690]) = v182;
  v183 = STACK[0x69B0];
  v184 = STACK[0x6760];
  if (v139)
    v185 = STACK[0x6760];
  else
    v185 = STACK[0x69B0];
  LODWORD(STACK[0x6A50]) = v185;
  LODWORD(STACK[0x6630]) = v165;
  if (v139)
    v186 = v183;
  else
    v186 = v165;
  LODWORD(STACK[0x6648]) = v164;
  if (v139)
    v184 = v164;
  v187 = LODWORD(STACK[0x6740]) ^ v163;
  LODWORD(STACK[0x6548]) = v163;
  v188 = LODWORD(STACK[0x66D0]) ^ v163;
  if (v139)
    v189 = v151;
  else
    v189 = v150;
  LODWORD(STACK[0x69B0]) = v189;
  v190 = STACK[0x6880];
  if (!v139)
    v190 = v151;
  LODWORD(STACK[0x6A90]) = v190;
  LODWORD(STACK[0x6608]) = v176;
  if (v139)
    v176 = v150;
  LODWORD(STACK[0x67F0]) = v176;
  v191 = v168 ^ LODWORD(STACK[0x69F0]);
  v192 = LODWORD(STACK[0x69A0]) ^ 0x461890BE;
  LODWORD(STACK[0x6540]) = v170;
  v193 = v192 ^ v170;
  v194 = v178 ^ LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x65E0]) = v194;
  if (v139)
    v194 = v193;
  LODWORD(STACK[0x67C0]) = v194;
  if (v139)
    v193 = v171;
  LODWORD(STACK[0x6960]) = v193;
  LODWORD(STACK[0x6600]) = v179;
  if (v139)
    v195 = v179;
  else
    v195 = v171;
  LODWORD(STACK[0x67A0]) = v195;
  LODWORD(STACK[0x66D0]) = v154;
  if (v139)
    v196 = v155;
  else
    v196 = v154;
  LODWORD(STACK[0x67E0]) = v196;
  if (v139)
    v197 = v173;
  else
    v197 = v155;
  LODWORD(STACK[0x6990]) = v197;
  LODWORD(STACK[0x66C8]) = v161;
  if (v139)
    v198 = v161;
  else
    v198 = v173;
  LODWORD(STACK[0x67D0]) = v198;
  LODWORD(STACK[0x64B0]) = v124;
  v199 = LODWORD(STACK[0x6510]) ^ v124;
  LODWORD(STACK[0x6840]) = v199;
  v200 = v199 ^ v128;
  LODWORD(STACK[0x6740]) = v200;
  v201 = v200 ^ v162;
  LODWORD(STACK[0x65C8]) = v201;
  if (v139)
    v202 = v174;
  else
    v202 = v201;
  v203 = STACK[0x6870];
  if (v139)
    v204 = STACK[0x6870];
  else
    v204 = v174;
  LODWORD(STACK[0x69A0]) = v204;
  if (v139)
    v205 = STACK[0x6A60];
  else
    v205 = v203;
  LODWORD(STACK[0x6650]) = v167;
  LODWORD(STACK[0x65D0]) = v187;
  if (v139)
    v206 = v187;
  else
    v206 = v167;
  LODWORD(STACK[0x6A00]) = v206;
  LODWORD(STACK[0x6640]) = v166;
  LODWORD(STACK[0x65D8]) = v188;
  if (v139)
    v207 = v188;
  else
    v207 = v166;
  LODWORD(STACK[0x69F0]) = v207;
  v208 = STACK[0x68A0];
  if (!v139)
    v208 = STACK[0x6890];
  LODWORD(STACK[0x66E0]) = v149;
  if (v139)
    v209 = v149;
  else
    v209 = STACK[0x6810];
  LODWORD(STACK[0x6770]) = v169;
  LODWORD(STACK[0x66D8]) = v152;
  if (v139)
    v210 = v152;
  else
    v210 = v169;
  LODWORD(STACK[0x6790]) = v210;
  LODWORD(STACK[0x6760]) = v172;
  LODWORD(STACK[0x65E8]) = v191;
  if (v139)
    v211 = v172;
  else
    v211 = v191;
  LODWORD(STACK[0x6780]) = v211;
  v212 = (STACK[0x6A40] & 2) == 0;
  if ((STACK[0x6A40] & 2) != 0)
    v213 = v186;
  else
    v213 = v184;
  LODWORD(STACK[0x6870]) = v213;
  LODWORD(STACK[0x6730]) = v202;
  LODWORD(STACK[0x6700]) = v205;
  if (v212)
    v214 = v205;
  else
    v214 = v202;
  LODWORD(STACK[0x66B0]) = v214;
  v215 = v214
       + 1551773643
       + ((((v213 - 164705820) ^ 0x3D984DD5) + 484357115) ^ (((v213 - 164705820) ^ 0xBAA64059) - 1679769993) ^ (((v213 - 164705820) ^ 0xBEEADC0D) - 1616109021));
  v216 = (v215 ^ 0xC5C8BBF7) & (2 * (v215 & 0xD5E0B3F8)) ^ v215 & 0xD5E0B3F8;
  v217 = ((2 * (v215 ^ 0x6E89BAB7)) ^ 0x76D2129E) & (v215 ^ 0x6E89BAB7) ^ (2 * (v215 ^ 0x6E89BAB7)) & 0xBB69094E;
  v218 = (v217 ^ 0x32280000) & (4 * v216) ^ v216;
  v219 = ((4 * (v217 ^ 0x89290941)) ^ 0xEDA4253C) & (v217 ^ 0x89290941) ^ (4 * (v217 ^ 0x89290941)) & 0xBB69094C;
  v220 = (v219 ^ 0xA9200103) & (16 * v218) ^ v218;
  v221 = ((16 * (v219 ^ 0x12490843)) ^ 0xB69094F0) & (v219 ^ 0x12490843) ^ (16 * (v219 ^ 0x12490843)) & 0xBB690940;
  v222 = v220 ^ 0xBB69094F ^ (v221 ^ 0xB200000F) & (v220 << 8);
  v223 = (v222 << 16) & 0x3B690000 ^ v222 ^ ((v222 << 16) ^ 0x94F0000) & (((v221 ^ 0x969090F) << 8) & 0xBB690000 ^ 0x12600000 ^ (((v221 ^ 0x969090F) << 8) ^ 0x69090000) & (v221 ^ 0x969090F));
  v224 = STACK[0x6A20];
  if (v212)
    v224 = STACK[0x6A10];
  LODWORD(STACK[0x6708]) = v224;
  v225 = v215 ^ v224 ^ (2 * v223);
  LODWORD(STACK[0x64D0]) = v225;
  LODWORD(STACK[0x6930]) = v225 >> 1;
  STACK[0x64C8] = (v225 >> 1) ^ 0x3753D471;
  STACK[0x6528] = 0x4D0BCDF53
                * ((((v225 >> 1) ^ 0x4257EB2692BC382) - 0x4257EB25E7817F3) ^ (((v225 >> 1) ^ 0xDB6147A4A8A57650)
                                                                                + 0x249EB85B60095DDFLL) ^ (((v225 >> 1) ^ 0xDF443916CB6CD9DDLL) + 0x20BBC6E903C0F254))
                + 0xCE59B51502BC581;
  if (v212)
    v226 = v186;
  else
    v226 = v184;
  LODWORD(STACK[0x66B8]) = v226;
  v227 = STACK[0x67B0];
  v228 = STACK[0x66C0];
  if (v212)
    v229 = STACK[0x67B0];
  else
    v229 = STACK[0x66C0];
  LODWORD(STACK[0x6850]) = v229;
  if (v212)
    v227 = v228;
  LODWORD(STACK[0x66A8]) = v227;
  v230 = STACK[0x68F0];
  v231 = STACK[0x66E8];
  if (v212)
    v232 = STACK[0x66E8];
  else
    v232 = STACK[0x68F0];
  LODWORD(STACK[0x67B0]) = v232;
  if (!v212)
    v230 = v231;
  LODWORD(STACK[0x66A0]) = v230;
  if (v212)
    v233 = v209;
  else
    v233 = v208;
  LODWORD(STACK[0x65F8]) = v233;
  if (v212)
    v234 = v208;
  else
    v234 = v209;
  LODWORD(STACK[0x66C0]) = v234;
  v235 = STACK[0x6910];
  v236 = STACK[0x64F0];
  v237 = STACK[0x64D8];
  v238 = *(unsigned __int8 *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6910] + 12) ^ 0x21));
  v239 = (v238 >> 4) & 0xA ^ v238;
  v240 = *(_BYTE *)(STACK[0x64D8] + (*(unsigned __int8 *)(STACK[0x6910] + 5) ^ 0x2ALL)) + 109;
  v241 = (unsigned __int8 *)STACK[0x6910];
  v242 = ((*(_BYTE *)(v236 + (*(unsigned __int8 *)(v235 + 6) ^ 0x7BLL)) ^ 0x2F ^ (*(_BYTE *)(v236
                                                                                           + (*(unsigned __int8 *)(v235 + 6) ^ 0x7BLL)) >> 4) & 0xA) << 8) | ((v240 ^ 0xF4 ^ (-102 * v240)) << 16);
  v243 = *(_BYTE *)(STACK[0x64D8] + (*(unsigned __int8 *)(STACK[0x6910] + 3) ^ 0x28)) + 109;
  v244 = STACK[0x64E0];
  v245 = *(unsigned __int8 *)(STACK[0x64E0] + (STACK[0x6940] ^ 0xD2));
  v246 = v243 ^ 0xC5 ^ (-102 * v243) | ((*(_BYTE *)(v236 + (*(unsigned __int8 *)(v235 + 2) ^ 0x1BLL)) ^ (*(_BYTE *)(v236 + (*(unsigned __int8 *)(v235 + 2) ^ 0x1BLL)) >> 4) & 0xA ^ 0x99) << 8) | ((*(_BYTE *)(v236 + (v241[1] ^ 0x18)) ^ 0x8B ^ (*(_BYTE *)(v236 + (v241[1] ^ 0x18)) >> 4) & 0xA) << 16) | ((v245 ^ 0x5E ^ (v245 >> 2) & 0x1E) << 24);
  v247 = STACK[0x64E8];
  v248 = (*(_BYTE *)(v247 + (STACK[0x6950] ^ 0x32)) + 47) ^ ((*(_BYTE *)(v247 + (STACK[0x6950] ^ 0x32))
                                                                             + 47) >> 4) ^ ((*(_BYTE *)(v247 + (STACK[0x6950] ^ 0x32)) + 47) >> 3);
  v249 = *(unsigned __int8 *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6910] + 13) ^ 0x84));
  v250 = (v249 >> 4) & 0xA ^ v249;
  v251 = v242 & 0xFFFFFF00 | ((*(_BYTE *)(v237 + (STACK[0x69E0] ^ 0x61)) + 109) ^ (-102
                                                                                                  * (*(_BYTE *)(v237 + (STACK[0x69E0] ^ 0x61)) + 109))) ^ 0x9F | ((*(unsigned __int8 *)(v244 + (STACK[0x6A30] ^ 0x89)) ^ 0x3B ^ (*(unsigned __int8 *)(v244 + (STACK[0x6A30] ^ 0x89)) >> 2) & 0x1E) << 24);
  v252 = (*(_BYTE *)(v237 + (STACK[0x69D0] ^ 0x69)) + 109) ^ 0xD3 ^ (-102 * (*(_BYTE *)(v237 + (STACK[0x69D0] ^ 0x69)) + 109)) | (((*(_BYTE *)(v237 + (STACK[0x6920] ^ 0x69)) + 109) ^ 0xD3 ^ (-102 * (*(_BYTE *)(v237 + (STACK[0x6920] ^ 0x69)) + 109))) << 16) | ((*(unsigned __int8 *)(v244 + (STACK[0x6A70] ^ 0xCD)) ^ (*(unsigned __int8 *)(v244 + (STACK[0x6A70] ^ 0xCD)) >> 2) & 0x1E ^ 0x78) << 24) | ((*(_BYTE *)(v244 + (v241[10] ^ 0x16)) ^ 0x32 ^ (*(_BYTE *)(v244 + (v241[10] ^ 0x16)) >> 2) & 0x1E) << 8);
  v253 = (v248 ^ 0x10 | ((v250 ^ 0x90) << 16) | ((v239 ^ 0x69) << 24) | ((((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL)) + 47) ^ ((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL)) + 47) >> 4) ^ ((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL)) + 47) >> 3)) ^ 0x36) << 8)) ^ 0x80060B1;
  v254 = ((unsigned __int16)((v248 ^ 0x10 | ((((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL))
                                                                                + 47) ^ ((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL)) + 47) >> 4) ^ ((*(_BYTE *)(v247 + (v241[14] ^ 0x2DLL)) + 47) >> 3)) ^ 0x36) << 8)) ^ 0x60B1) >> 8);
  v255 = STACK[0x68D0];
  v256 = STACK[0x6830];
  v257 = *(_DWORD *)(STACK[0x6830] + 4 * (v239 ^ 0xEu));
  v258 = STACK[0x6900];
  v259 = STACK[0x68C0];
  v260 = (*(_DWORD *)(STACK[0x68C0] + 4 * (v248 ^ 0xA2u)) - 321530508) ^ v246 ^ __ROR4__(v257 ^ 0x16217F78 ^ (32 * v257), 8) ^ __ROR4__((*(_DWORD *)(STACK[0x6900] + 4 * (v250 ^ 0xD3u))+ (v250 ^ 0x45A501ED)) ^ 0x5BC77E65, 16) ^ __ROR4__(*(_DWORD *)(STACK[0x68D0] + 4 * (v254 ^ 0xD9u)) ^ v254 ^ 0xE1440DAA, 24);
  LODWORD(STACK[0x6A70]) = v260 ^ v251;
  v261 = v260;
  LODWORD(STACK[0x69E0]) = v260;
  v262 = v260 ^ v251 ^ v252;
  LODWORD(STACK[0x6920]) = v262 ^ 0x9C782C8A;
  v263 = v262 ^ 0x9C782C8A ^ v253;
  v264 = BYTE2(v263) ^ 0xFA;
  v265 = v263 ^ 0x31FA7275;
  v266 = *(_DWORD *)(v255 + 4 * (BYTE2(v263) ^ 0x23u));
  v267 = STACK[0x6A90];
  v268 = STACK[0x67F0];
  if (v212)
    v269 = STACK[0x6A90];
  else
    v269 = STACK[0x67F0];
  LODWORD(STACK[0x68F0]) = v269;
  if (v212)
    v267 = v268;
  LODWORD(STACK[0x65F0]) = v267;
  v270 = HIBYTE(v263) ^ 0x32;
  v271 = v256;
  v272 = *(_DWORD *)(v256 + 4 * (BYTE1(v263) ^ 0x1Du));
  v273 = *(_DWORD *)(v256 + 4 * (v262 ^ 0x8A ^ v253 ^ 0x1Au)) ^ 0xB20D175;
  v274 = (*(_DWORD *)(v259 + 4 * v270) - 321530508) ^ 0x5AD2CFF2;
  v275 = v273 ^ (32 * v273) ^ __ROR4__(v274, 8) ^ __ROR4__(v272 ^ 0x16217F78 ^ (32 * v272), 24);
  v276 = __ROR4__(v266 ^ v264 ^ 0xE1440DAA, 16);
  v277 = v275 ^ v276 ^ v251;
  v278 = v277 ^ v262;
  LODWORD(STACK[0x6A30]) = v265;
  v279 = v277 ^ v262 ^ v265 ^ 0x60D3BF03;
  v280 = *(_DWORD *)(v256 + 4 * ((v277 ^ v262 ^ v265) ^ 0x6Cu)) ^ 0xB20D175;
  v281 = v261 ^ v280 ^ (32 * v280) ^ v275 ^ v276 ^ __ROR4__(*(_DWORD *)(v255 + 4 * (BYTE1(v279) ^ 0xD9u)) ^ BYTE1(v279) ^ 0xE1440DAA, 24) ^ __ROR4__(((HIBYTE(v279) ^ 0x45A5017D)+ *(_DWORD *)(v258 + 4 * (HIBYTE(v279) ^ 0x43))) ^ 0x5BC77E65, 8) ^ __ROR4__(((BYTE2(v279) ^ 0x45A5017D)+ *(_DWORD *)(v258 + 4 * (BYTE2(v279) ^ 0x43u))) ^ 0x5BC77E65, 16) ^ 0x5E324DDB;
  v282 = v277 ^ v265 ^ v281;
  v283 = v282 ^ 0xCD51E1FC;
  v284 = *(_DWORD *)(v256 + 4 * (HIBYTE(v282) ^ 0xA2));
  v285 = *(_DWORD *)(v256 + 4 * (BYTE2(v283) ^ 0x6Fu));
  v286 = (*(_DWORD *)(v259 + 4 * (v283 ^ 3u)) - 321530508) ^ __ROR4__(v284 ^ 0x16217F78 ^ (32 * v284), 8) ^ __ROR4__(v285 ^ 0x16217F78 ^ (32 * v285), 16) ^ __ROR4__(((BYTE1(v283) ^ 0x45A5017D)+ *(_DWORD *)(v258 + 4 * (BYTE1(v283) ^ 0x43u))) ^ 0x5BC77E65, 24);
  v287 = v286 ^ v281;
  v288 = v287 ^ v278;
  v289 = v287 ^ v278 ^ v283;
  LOWORD(v283) = v289 ^ 0x3FAE;
  v290 = ((v289 ^ 0x28C83FAE) >> 16) ^ 0xCA;
  v291 = v289 ^ 0x760170F1;
  HIDWORD(v293) = (*(_DWORD *)(v259 + 4 * (HIBYTE(v289) ^ 0x75)) - 321530508) ^ 0x5AD2CFF2;
  LODWORD(v293) = HIDWORD(v293);
  v292 = v293 >> 25;
  LODWORD(v293) = __ROR4__(v287 ^ __ROR4__((*(_DWORD *)(v259 + 4 * v290) - 321530508) ^ 0x5AD2CFF2, 16), 17);
  v294 = (((v292 ^ v293 ^ 0x80FCA8AB) >> (BYTE1(v274) & 0xF) >> (BYTE1(v274) & 0xF ^ 0xF))
        + ((v292 ^ v293 ^ 0x80FCA8AB) << 17)) ^ (*(_DWORD *)(v259 + 4 * (v283 ^ 0x5Cu))
                                                             - 321530508) ^ __ROR4__(((BYTE1(v283) ^ 0x45A50132)+ *(_DWORD *)(v258+ 4 * (BYTE1(v283) ^ 0xCu))) ^ 0x5BC77E65, 24);
  v295 = v286 ^ v277;
  v296 = v288 ^ v286 ^ v277 ^ v294;
  v297 = v296 ^ v291 ^ 0xBED55F06;
  v298 = v258;
  v299 = (((v297 & 0xDC | 0x23) ^ v297 & 0x23 ^ 0x45A5015E)
        + *(_DWORD *)(v258 + 4 * ((v297 & 0xDC | 0x23) ^ v297 & 0x23 ^ 0x60))) ^ __ROR4__((*(_DWORD *)(v259+ 4* (((v296 ^ v291) >> 24) ^ 0xBD))- 321530508) ^ 0x5AD2CFF2, 8) ^ __ROR4__(((BYTE2(v297) ^ 0x45A5017D)+ *(_DWORD *)(v258 + 4 * (BYTE2(v297) ^ 0x43u))) ^ 0x5BC77E65, 16) ^ __ROR4__(((BYTE1(v297) ^ 0x45A5017D) + *(_DWORD *)(v258 + 4 * (BYTE1(v297) ^ 0x43u))) ^ 0x5BC77E65, 24);
  v300 = v295 ^ 0xDB832E0E ^ v299;
  v301 = *(_DWORD *)(v271 + 4 * (((unsigned __int16)(v300 ^ v291) >> 8) ^ 0x11u));
  HIDWORD(v293) = (*(_DWORD *)(v259 + 4 * (((v300 ^ v291) >> 16) ^ 0xC4u)) - 321530508) ^ 0x5AD2CFF2;
  LODWORD(v293) = HIDWORD(v293);
  v302 = v300 ^ v291 ^ 0xD8C77E65;
  v303 = *(_DWORD *)(v258 + 4 * ((v300 ^ v291) ^ 0x26u));
  v304 = v255;
  v305 = v299 ^ v294;
  v306 = (v293 >> 16) ^ __ROR4__(v301 ^ 0x16217F78 ^ (32 * v301), 24) ^ v305 ^ (((v300 ^ v291) ^ 0x45A50118)
                                                                              + v303) ^ __ROR4__(*(_DWORD *)(v255 + 4 * (HIBYTE(v302) ^ 0xD9)) ^ HIBYTE(v302) ^ 0xE1440DAA, 8);
  v307 = v296 ^ 0x66122163 ^ v300;
  v308 = v306 ^ v300;
  v309 = v306 ^ v300 ^ 0x5BC77E65;
  v310 = v309 ^ v307 ^ v302;
  v311 = v310 ^ 0x265701F9;
  v312 = *(_DWORD *)(v304 + 4 * (((v310 ^ 0x265701F9u) >> 16) ^ 0xD9u)) ^ ((v310 ^ 0x265701F9u) >> 16) ^ 0xE1440DAA;
  LODWORD(v304) = *(_DWORD *)(v304 + 4 * (((v310 ^ 0x265701F9u) >> 24) ^ 0xD9)) ^ ((v310 ^ 0x265701F9u) >> 24) ^ 0xE1440DAA;
  v313 = *(_DWORD *)(v271 + 4 * (BYTE1(v310) ^ 0x6Eu));
  v314 = v306 ^ 0x5BC77E65;
  v315 = (*(_DWORD *)(v259 + 4 * ((v309 ^ v307 ^ v302) ^ 0xFAu)) - 321530508) ^ 0x135701F9 ^ __ROR4__(v313 ^ 0x16217F78 ^ (32 * v313), 24) ^ v306 ^ 0x5BC77E65 ^ __ROR4__(v304, 8) ^ __ROR4__(v312, 16);
  v316 = v309 ^ v307 ^ 0x135701F9;
  v317 = v308 ^ 0xFE907F9C ^ v315;
  v318 = v317 ^ v316 ^ 0x35000000;
  LODWORD(STACK[0x69D0]) = v318;
  LODWORD(v304) = v317 ^ v316 ^ v311;
  v319 = v304 ^ 0x2E15B197;
  v320 = BYTE1(v304) ^ 0xB2;
  LODWORD(v304) = *(_DWORD *)(v271 + 4 * ((v317 ^ v316 ^ v311) ^ 0xF8u)) ^ 0xB20D175;
  LODWORD(v304) = v304 ^ (32 * v304) ^ __ROR4__((*(_DWORD *)(v259 + 4 * v320) - 321530508) ^ 0x5AD2CFF2, 24) ^ v315 ^ __ROR4__(((HIBYTE(v319) ^ 0x45A5017D) + *(_DWORD *)(v298 + 4 * (HIBYTE(v319) ^ 0x43))) ^ 0x5BC77E65, 8);
  LODWORD(v293) = __ROR4__(((BYTE2(v319) ^ 0x45A5017D) + *(_DWORD *)(v298 + 4 * (BYTE2(v319) ^ 0x43u))) ^ 0x5BC77E65, 16);
  LODWORD(STACK[0x6A90]) = v304 ^ v293;
  v321 = v304 ^ v293 ^ v317;
  LOBYTE(v304) = v321 ^ v317 ^ v316;
  v322 = v321 ^ v318 ^ 0x83000000;
  v323 = *(_DWORD *)(v271 + 4 * (((v322 ^ v319) >> 16) ^ 0x61u));
  v324 = *(_DWORD *)(v271 + 4 * (((unsigned __int16)(v321 ^ v317 ^ v316 ^ v319) >> 8) ^ 0x5Eu));
  v325 = v322 ^ v319 ^ 0x320E313A;
  HIDWORD(v293) = v324 ^ 0x16217F78 ^ (32 * v324);
  LODWORD(v293) = HIDWORD(v293);
  v326 = *(_DWORD *)(v271 + 4 * ((v304 ^ v319) ^ 0x55u)) ^ 0xB20D175;
  v327 = (v293 >> 24) ^ __ROR4__(v323 ^ 0x16217F78 ^ (32 * v323), 16) ^ v326 ^ __ROR4__((*(_DWORD *)(v259+ 4* (((v322 ^ v319) >> 24) ^ 0x31))- 321530508) ^ 0x5AD2CFF2, 8) ^ (32 * v326);
  LODWORD(STACK[0x6940]) = v327;
  v328 = STACK[0x6680];
  v329 = (v328 ^ LODWORD(STACK[0x6A70])) - 197385625 - ((2 * (v328 ^ LODWORD(STACK[0x6A70]))) & 0xE87844CE);
  v330 = (v328 ^ LODWORD(STACK[0x69E0])) - 197385625 - ((2 * (v328 ^ LODWORD(STACK[0x69E0]))) & 0xE87844CE);
  v331 = v278 - 2117320601 - ((2 * v278) & 0x39880CE);
  v332 = (v328 ^ LODWORD(STACK[0x6A30])) - 197385625 - ((2 * (v328 ^ LODWORD(STACK[0x6A30]))) & 0xE87844CE);
  v333 = v305 - 197385625 - ((2 * v305) & 0xE87844CE);
  LODWORD(v271) = v294 ^ LODWORD(STACK[0x6820]);
  v334 = v302 - 197385625 - ((2 * v302) & 0xE87844CE);
  v335 = v300 - 197385625 - ((2 * v300) & 0xE87844CE);
  v336 = STACK[0x6628];
  v337 = (v316 ^ v336) + 1791484991 - ((2 * (v316 ^ v336)) & 0xD58FC87E);
  v338 = v309 + 1791484991 - ((2 * v309) & 0xD58FC87E);
  v339 = (v314 ^ v336) + 1791484991 - ((2 * (v314 ^ v336)) & 0xD58FC87E);
  v340 = LODWORD(STACK[0x6A90]) - 1925082394 - ((2 * LODWORD(STACK[0x6A90])) & 0x1A8325CC);
  v341 = v322 - 1925082394 - 2 * (v322 & 0xD4192EF ^ v304 & 9);
  v342 = v321 - 1925082394 - ((2 * v321) & 0x1A8325CC);
  v343 = (v311 ^ v336) + 1791484991 - ((2 * (v311 ^ v336)) & 0xD58FC87E);
  v344 = v327 ^ v317 ^ 0xA80E313A;
  LODWORD(STACK[0x68D0]) = v344;
  v345 = v322 ^ v344;
  v346 = v345 - 1925082394 - ((2 * v345) & 0x1A8325CC);
  v347 = (v345 ^ v325 ^ LODWORD(STACK[0x6510]))
       - 1925082394
       - ((2 * (v345 ^ v325 ^ LODWORD(STACK[0x6510]))) & 0x1A8325CC);
  v348 = (v325 ^ LODWORD(STACK[0x6678])) - 1925082394 - ((2 * (v325 ^ LODWORD(STACK[0x6678]))) & 0x1A8325CC);
  v349 = (LODWORD(STACK[0x6860]) ^ v331 ^ 0xB15A3278) - LODWORD(STACK[0x68B0]);
  LODWORD(v298) = v329 ^ LODWORD(STACK[0x6670]);
  LODWORD(STACK[0x65B0]) = v298;
  v350 = (v349 + (v298 ^ 0x894BF4E8) + 2133518123) ^ v271;
  v351 = LODWORD(STACK[0x66F0]) ^ 0xD2F96478 ^ v332;
  v352 = LODWORD(STACK[0x66F0]) ^ 0xCBCB29A3 ^ v330;
  if (v212)
    v353 = STACK[0x6A00];
  else
    v353 = STACK[0x69F0];
  v354 = STACK[0x6790];
  if (!v212)
    v354 = STACK[0x6780];
  LODWORD(STACK[0x6860]) = v354;
  v355 = STACK[0x67C0];
  if (v212)
    v355 = STACK[0x67A0];
  LODWORD(STACK[0x6638]) = v355;
  v356 = STACK[0x6980];
  if (v212)
    v356 = STACK[0x6970];
  LODWORD(STACK[0x6820]) = v356;
  v357 = STACK[0x67E0];
  if (!v212)
    v357 = STACK[0x67D0];
  LODWORD(STACK[0x67F0]) = v357;
  LODWORD(STACK[0x6A70]) = v350 ^ 0x895CC149;
  if (((v350 ^ 0x895CC149) & 1) == 0)
    v352 = v351;
  LODWORD(STACK[0x66E8]) = v352;
  v358 = v335 ^ 0x718840B7;
  v359 = LODWORD(STACK[0x65B8]) ^ v333 ^ 0x62DF414E;
  v360 = LODWORD(STACK[0x65B8]) ^ v358;
  v361 = LODWORD(STACK[0x65B8]) ^ 0xA94F3ED2 ^ v334;
  v362 = LODWORD(STACK[0x65B8]) ^ 0xA94F3ED2 ^ (v307 - 197385625 - ((2 * v307) & 0xE87844CE));
  v363 = v337 ^ 0xBE303C8F;
  v364 = LODWORD(STACK[0x65C0]) ^ v338 ^ 0x55092597;
  v365 = v343 ^ 0x8B303C8F;
  v366 = v336 ^ LODWORD(STACK[0x6618]);
  v367 = v366 ^ v315 ^ 0x99915F6B;
  v368 = v366 ^ v319 ^ 0x184EEFC;
  v369 = v366 ^ 0x1A915F6B;
  v370 = v366 ^ 0x1A915F6B ^ v317;
  v371 = v369 ^ LODWORD(STACK[0x69D0]);
  v372 = LODWORD(STACK[0x6518]) ^ 0xC5A4352F ^ v348;
  v373 = LODWORD(STACK[0x6750]) ^ 0xF7AA0415 ^ v341;
  v374 = LODWORD(STACK[0x6750]) ^ 0x6FBFB582 ^ v342;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v375 = v372;
  else
    v375 = LODWORD(STACK[0x6750]) ^ 0xF7AA0415 ^ v341;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v376 = LODWORD(STACK[0x6750]) ^ 0x74AA0415 ^ v340;
  else
    v376 = v372;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v377 = v374;
  else
    v377 = LODWORD(STACK[0x6750]) ^ 0x74AA0415 ^ v340;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v378 = v373;
  else
    v378 = v374;
  v379 = LODWORD(STACK[0x6800]) ^ 0x2D8F00B8 ^ v347;
  v380 = LODWORD(STACK[0x6740]) ^ v346 ^ 0x2D8F00B8;
  v381 = STACK[0x6668];
  v382 = LODWORD(STACK[0x6668]) ^ v363;
  LODWORD(STACK[0x6588]) = v364;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v383 = v382;
  else
    v383 = v364;
  LODWORD(STACK[0x6950]) = v383;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v382 = v381 ^ v365;
  LODWORD(STACK[0x68C0]) = v382;
  LODWORD(STACK[0x64F8]) = v381 ^ v339 ^ 0x75A04313;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v384 = v381 ^ v339 ^ 0x75A04313;
  else
    v384 = v381 ^ v365;
  LODWORD(STACK[0x6910]) = v384;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v385 = v370;
  else
    v385 = v367;
  LODWORD(STACK[0x68B0]) = v385;
  LODWORD(STACK[0x6580]) = v368;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v386 = v367;
  else
    v386 = v368;
  LODWORD(STACK[0x6578]) = v371;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v387 = v371;
  else
    v387 = v370;
  LODWORD(STACK[0x65A8]) = v359;
  LODWORD(STACK[0x6598]) = v361;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v388 = v359;
  else
    v388 = v361;
  LODWORD(STACK[0x69E0]) = v388;
  LODWORD(STACK[0x65A0]) = v360;
  LODWORD(STACK[0x6590]) = v362;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v389 = v362;
  else
    v389 = v360;
  LODWORD(STACK[0x69D0]) = v389;
  LODWORD(STACK[0x6570]) = v380;
  LODWORD(STACK[0x6500]) = v379;
  if (((v350 ^ 0x895CC149) & 1) != 0)
    v390 = v379;
  else
    v390 = v380;
  LODWORD(STACK[0x6900]) = v390;
  LODWORD(STACK[0x6A30]) = v350;
  if ((v350 & 2) != 0)
    v391 = v386;
  else
    v391 = v387;
  LODWORD(STACK[0x6498]) = v391;
  if ((v350 & 2) != 0)
    v386 = v387;
  LODWORD(STACK[0x6520]) = v386;
  if ((v350 & 2) != 0)
    v392 = v377;
  else
    v392 = v375;
  LODWORD(STACK[0x6538]) = v392;
  if ((v350 & 2) != 0)
    v393 = v375;
  else
    v393 = v377;
  LODWORD(STACK[0x6530]) = v393;
  LODWORD(STACK[0x6750]) = v376;
  LODWORD(STACK[0x6740]) = v378;
  if ((v350 & 2) != 0)
    v394 = v376;
  else
    v394 = v378;
  LODWORD(STACK[0x6528]) = v394;
  v395 = (LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6AA0]))
       + 833020972
       - ((2 * (LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6AA0]))) & 0x634DC858);
  v396 = LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6A90]) ^ 0x215B197;
  LODWORD(STACK[0x64D0]) = (LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x68D0]))
                         - 1925082394
                         - ((2 * (LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x68D0]))) & 0x1A8325CC);
  v397 = LODWORD(STACK[0x68F0]) ^ 0x1315E47C;
  LODWORD(STACK[0x6840]) = v353;
  v398 = (((v353 ^ 0xBC7A605A) - LODWORD(STACK[0x67B0]) + v397) ^ 0x7F7FFAFF)
       + 1853842069
       + ((2 * ((v353 ^ 0xBC7A605A) - LODWORD(STACK[0x67B0]) + v397)) & 0xFEFFF5FE);
  v399 = (v398 ^ 0xD1EBA5B6) & (2 * (v398 & 0xD5F3A586)) ^ v398 & 0xD5F3A586;
  v400 = ((2 * (v398 ^ 0xD12EEDB6)) ^ 0x9BA9060) & (v398 ^ 0xD12EEDB6) ^ (2 * (v398 ^ 0xD12EEDB6)) & 0x4DD4830;
  v401 = (v400 ^ 0x984020) & (4 * v399) ^ v399;
  v402 = ((4 * (v400 ^ 0x4454810)) ^ 0x137520C0) & (v400 ^ 0x4454810) ^ (4 * (v400 ^ 0x4454810)) & 0x4DD4830;
  v403 = v401 ^ 0x4DD4830 ^ (v402 ^ 0x550010) & (16 * v401);
  v404 = (16 * (v402 ^ 0x4884830)) & 0x4DD4830 ^ 0x94830 ^ ((16 * (v402 ^ 0x4884830)) ^ 0x4DD48300) & (v402 ^ 0x4884830);
  v406 = LODWORD(STACK[0x66F8]) >> 3;
  LODWORD(STACK[0x6940]) = v406;
  v407 = v406 ^ 0xBA6DF5Cu;
  v408 = STACK[0xDB00];
  v409 = (*(_QWORD *)(v408
                    + 8
                    * ((*(_QWORD *)(v408
                                  + 8
                                  * ((*(_QWORD *)(v408 + 8 * (0x6D890454 % v407)) + 1832454039) % v407))
                      + 2586335864)
                     % v407))
        + 4123009451)
       % v407;
  STACK[0x6AA0] = STACK[0xDB00];
  v410 = *(_QWORD *)(v408 + 8 * v409) + 1216263911;
  v405 = (v403 << 8) & 0x4DD4800 ^ v403 ^ ((v403 << 8) ^ 0xDD483000) & v404;
  v411 = v398 ^ (2
               * ((v405 << 16) & 0x4DD0000 ^ v405 ^ ((v405 << 16) ^ 0x48300000) & ((v404 << 8) & 0x4DD0000 ^ 0x950000 ^ ((v404 << 8) ^ 0xDD480000) & v404)));
  STACK[0x68D0] = v407;
  v412 = v410 % v407 - ((2 * (v410 % v407)) & 0x3F7D21CE) + 1069453543;
  LODWORD(STACK[0x6A90]) = (((v412 ^ 0xF88F4EB6) + 201533123) ^ ((v412 ^ 0x13D280B3) - 413210424) ^ ((v412 ^ 0xD4E35EE2) + 544159383))
                         + 1516210474;
  v413 = v395 ^ LODWORD(STACK[0x6610]);
  v414 = STACK[0x6920];
  LODWORD(STACK[0x65B8]) = (2 * LODWORD(STACK[0x6920])) & 0xE87844CE;
  LODWORD(STACK[0x64C8]) = v414 - 197385625;
  LODWORD(STACK[0x64C0]) = (2 * v396) & 0x1A8325CC;
  LODWORD(STACK[0x64A8]) = v396 - 1925082394;
  v415 = 2 * (((LODWORD(STACK[0x6850]) ^ 0x28B1CC79) + LODWORD(STACK[0x67F0])) ^ LODWORD(STACK[0x6870]));
  LODWORD(STACK[0x6920]) = v411 >> 1;
  v416 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80])) - 12);
  v417 = STACK[0x6688];
  LODWORD(STACK[0x65C0]) = v413;
  LODWORD(STACK[0x64A0]) = v413 ^ v417;
  LODWORD(STACK[0x64B8]) = -v417;
  LODWORD(STACK[0x6800]) = v415;
  STACK[0x6A80] = STACK[0xDAD8];
  return v416(1398168741, 630358462);
}

uint64_t sub_100A4B8D4(unsigned int a1, unsigned int a2)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  unint64_t v7;
  _BOOL4 v8;

  v4 = STACK[0x6A90];
  v5 = STACK[0x6AC0];
  v6 = LODWORD(STACK[0x6A90]) < a2;
  v7 = 8 * ((v2 | ((unint64_t)(v2 < a1) << 32)) + 0x395EE90C147D9EF3) + 0x3508B79CC1602340;
  *(_QWORD *)(STACK[0x6A80] + v7) = *(_QWORD *)(STACK[0x6AA0] + v7) ^ v3;
  if (v6 != v2 - 767810278 < 0x259281BE)
    v8 = v6;
  else
    v8 = v2 - 767810278 < v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7 * v8) ^ v5)) - 12))(1398168741);
}

uint64_t sub_100A4E7CC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  BOOL v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  BOOL v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  BOOL v43;
  uint64_t (*v44)(void);
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;

  v1 = LODWORD(STACK[0x64C8]) - LODWORD(STACK[0x65B8]);
  v2 = LODWORD(STACK[0x64A8]) - LODWORD(STACK[0x64C0]);
  v3 = (LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x64B8]) ^ (LODWORD(STACK[0x65C0]) - LODWORD(STACK[0x64A0])))
     + LODWORD(STACK[0x65C0]);
  v4 = STACK[0x6A40];
  if ((STACK[0x6A40] & 1) != 0)
    v5 = STACK[0x6648];
  else
    v5 = STACK[0x6630];
  if ((v4 & 1) != 0)
    v6 = STACK[0x65D0];
  else
    v6 = STACK[0x6640];
  if ((v4 & 1) != 0)
    v7 = STACK[0x65D8];
  else
    v7 = STACK[0x6650];
  v8 = STACK[0x68A0];
  if ((v4 & 1) == 0)
    v8 = STACK[0x6810];
  LODWORD(STACK[0x68A0]) = v8;
  v9 = STACK[0x6890];
  if ((v4 & 1) != 0)
    v9 = STACK[0x66E0];
  LODWORD(STACK[0x6890]) = v9;
  v10 = STACK[0x6608];
  if ((v4 & 1) != 0)
    v10 = STACK[0x6880];
  v11 = STACK[0x66D8];
  if ((v4 & 1) == 0)
    v11 = STACK[0x65E8];
  LODWORD(STACK[0x6880]) = v11;
  if ((v4 & 1) != 0)
    v12 = STACK[0x6600];
  else
    v12 = STACK[0x65E0];
  if ((v4 & 1) != 0)
    v13 = STACK[0x66C8];
  else
    v13 = STACK[0x66D0];
  v14 = STACK[0x65C8];
  if ((v4 & 1) != 0)
    v14 = STACK[0x6A60];
  v15 = v3 ^ 0xB93B3655;
  v16 = STACK[0x6698];
  LODWORD(STACK[0x6648]) = v15;
  if ((v4 & 1) != 0)
    v15 = v16;
  v17 = (v4 & 2) == 0;
  v18 = STACK[0x6690];
  if (v17)
    v19 = v15;
  else
    v19 = STACK[0x6690];
  LODWORD(STACK[0x65B8]) = v19;
  if (v17)
    v20 = v18;
  else
    v20 = v15;
  LODWORD(STACK[0x6630]) = v20;
  v21 = STACK[0x6790];
  if (v17)
    v21 = STACK[0x6780];
  LODWORD(STACK[0x65C0]) = v21;
  v22 = STACK[0x67C0];
  if (!v17)
    v22 = STACK[0x67A0];
  LODWORD(STACK[0x65E8]) = v22;
  v23 = STACK[0x67E0];
  if (v17)
    v23 = STACK[0x67D0];
  LODWORD(STACK[0x65D8]) = v23;
  v24 = LODWORD(STACK[0x65B0]) ^ 0x62BBA724;
  v25 = LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6680]) ^ v1 ^ 0xCF39B8C1;
  v26 = 2 * (a1 ^ 0x61D1);
  LODWORD(STACK[0x6AC0]) = v26;
  v27 = v25 ^ v26;
  v28 = STACK[0x6A50];
  LODWORD(STACK[0x6780]) = v5;
  if (!v17)
    v28 = v5;
  LODWORD(STACK[0x67D0]) = v28;
  LODWORD(STACK[0x67A0]) = v6;
  LODWORD(STACK[0x66D8]) = v7;
  if (v17)
    v29 = v7;
  else
    v29 = v6;
  LODWORD(STACK[0x67C0]) = v29;
  v30 = STACK[0x69B0];
  LODWORD(STACK[0x67E0]) = v10;
  if (v17)
    v30 = v10;
  LODWORD(STACK[0x6810]) = v30;
  v31 = STACK[0x6960];
  LODWORD(STACK[0x6698]) = v12;
  if (!v17)
    v31 = v12;
  LODWORD(STACK[0x65D0]) = v31;
  v32 = STACK[0x6990];
  LODWORD(STACK[0x66D0]) = v13;
  if (v17)
    v32 = v13;
  LODWORD(STACK[0x65C8]) = v32;
  v33 = STACK[0x69A0];
  LODWORD(STACK[0x66E0]) = v14;
  if (v17)
    v33 = v14;
  LODWORD(STACK[0x6490]) = v33;
  v34 = (STACK[0x6A70] & 1) == 0;
  if ((STACK[0x6A70] & 1) == 0)
    v27 = v24;
  LODWORD(STACK[0x66C8]) = v27;
  if (v34)
    v35 = STACK[0x65A8];
  else
    v35 = STACK[0x65A0];
  if (v34)
    v36 = STACK[0x6590];
  else
    v36 = STACK[0x6598];
  if (v34)
    v37 = STACK[0x64F8];
  else
    v37 = STACK[0x6588];
  if (v34)
    v38 = STACK[0x6578];
  else
    v38 = STACK[0x6580];
  if (v34)
    v39 = STACK[0x6500];
  else
    v39 = LODWORD(STACK[0x6510]) ^ LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x6518]) ^ 0x1F813182 ^ v2;
  if (v34)
    v40 = LODWORD(STACK[0x6510]) ^ LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x6518]) ^ 0x1F813182 ^ v2;
  else
    v40 = LODWORD(STACK[0x6518]) ^ 0x1F813182 ^ LODWORD(STACK[0x64D0]);
  if (v34)
    v41 = LODWORD(STACK[0x6518]) ^ 0x1F813182 ^ LODWORD(STACK[0x64D0]);
  else
    v41 = STACK[0x6570];
  v42 = ((LODWORD(STACK[0x6940]) ^ 0x32F34F8A) - 1355523623) ^ ((LODWORD(STACK[0x6940]) ^ 0xECD64043) + 1896961554) ^ ((LODWORD(STACK[0x6940]) ^ 0xD583D095) + 1212466888);
  v43 = (STACK[0x6A30] & 2) == 0;
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6920]) ^ 0xA605DA0A;
  LODWORD(STACK[0x6A90]) = v42 - 2134886099;
  v44 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4);
  v45 = STACK[0x69E0];
  if (v43)
    v45 = STACK[0x69D0];
  LODWORD(STACK[0x6458]) = v45;
  LODWORD(STACK[0x6640]) = v35;
  LODWORD(STACK[0x6608]) = v36;
  if (v43)
    v46 = v36;
  else
    v46 = v35;
  LODWORD(STACK[0x6460]) = v46;
  v47 = STACK[0x68C0];
  LODWORD(STACK[0x6600]) = v37;
  if (v43)
    v47 = v37;
  LODWORD(STACK[0x6468]) = v47;
  v48 = STACK[0x6950];
  if (v43)
    v48 = STACK[0x6910];
  LODWORD(STACK[0x6470]) = v48;
  STACK[0x6A80] = STACK[0xDB00];
  v49 = STACK[0x68B0];
  LODWORD(STACK[0x65E0]) = v38;
  if (v43)
    v49 = v38;
  LODWORD(STACK[0x6478]) = v49;
  LODWORD(STACK[0x65B0]) = v39;
  LODWORD(STACK[0x65A0]) = v41;
  if (v43)
    v50 = v39;
  else
    v50 = v41;
  LODWORD(STACK[0x6488]) = v50;
  STACK[0x6A60] = STACK[0xDAD8];
  v51 = STACK[0x6900];
  LODWORD(STACK[0x6650]) = v40;
  if (!v43)
    v51 = v40;
  LODWORD(STACK[0x6480]) = v51;
  return v44();
}

uint64_t sub_100A4EEF0(unsigned int a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v4 = STACK[0x6A90];
  v5 = LODWORD(STACK[0x6A90]) < v2;
  v6 = STACK[0x6AC0];
  v7 = 8 * ((v3 | ((unint64_t)(v3 < a1) << 32)) + 0x1299DCA6888C8D9FLL) + 0x6B311AC920E8ADE0;
  v8 = *(_QWORD *)(STACK[0x6A80] + v7);
  STACK[0x6AA0] = (LODWORD(STACK[0x6AC0]) - 10050);
  *(_QWORD *)(STACK[0x6A60] + v7) = v8 ^ v1;
  if (v5 != v3 - 1010063976 < 0x1722023C)
    v9 = v5;
  else
    v9 = v4 > v3 - 1010063976;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((70 * v9) ^ v6)) - 4))(1398168741);
}

uint64_t sub_100A51B24()
{
  int v0;
  int v1;
  BOOL v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  if ((STACK[0x6A40] & 1) != 0)
    v0 = STACK[0x6648];
  else
    v0 = STACK[0x68E0];
  v1 = STACK[0x6760];
  if ((STACK[0x6A40] & 1) == 0)
    v1 = STACK[0x6770];
  v2 = (STACK[0x6A40] & 2) == 0;
  v3 = STACK[0x69C0];
  LODWORD(STACK[0x68E0]) = v0;
  if (v2)
    v3 = v0;
  LODWORD(STACK[0x6648]) = v3;
  v4 = STACK[0x67A0];
  if (!v2)
    v4 = STACK[0x66D8];
  LODWORD(STACK[0x66D8]) = v4;
  v5 = STACK[0x68A0];
  if (!v2)
    v5 = STACK[0x6890];
  LODWORD(STACK[0x6690]) = v5;
  v6 = STACK[0x6880];
  LODWORD(STACK[0x6A80]) = v1;
  if (!v2)
    v6 = v1;
  LODWORD(STACK[0x65A8]) = v6;
  v7 = STACK[0x6960];
  if (v2)
    v7 = STACK[0x6698];
  LODWORD(STACK[0x6698]) = v7;
  v8 = STACK[0x6980];
  if (!v2)
    v8 = STACK[0x6970];
  LODWORD(STACK[0x67A0]) = v8;
  v9 = STACK[0x6730];
  if (!v2)
    v9 = STACK[0x6700];
  LODWORD(STACK[0x6430]) = v9;
  v10 = (STACK[0x6A30] & 2) == 0;
  v11 = STACK[0x6640];
  if ((STACK[0x6A30] & 2) != 0)
    v11 = STACK[0x6608];
  LODWORD(STACK[0x6420]) = v11;
  v12 = STACK[0x68C0];
  if (!v10)
    v12 = STACK[0x6600];
  LODWORD(STACK[0x6428]) = v12;
  v13 = STACK[0x68B0];
  if (!v10)
    v13 = STACK[0x65E0];
  LODWORD(STACK[0x6440]) = v13;
  v14 = STACK[0x65B0];
  if (v10)
    v14 = STACK[0x65A0];
  LODWORD(STACK[0x6438]) = v14;
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x6800]) ^ 0xF4C3E30A;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + (*(_BYTE *)(STACK[0x6AB0]
                              + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 11) + 1) & 0xF)) + 3) & 0xF)) & 0xF))
       + 1) & 0xE) != 0)
    v15 = (*(_BYTE *)(STACK[0x6AB0]
                    + (*(_BYTE *)(STACK[0x6AB0]
                                + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 11) + 1) & 0xF)) + 3) & 0xF)) & 0xF))
         + 1) & 0xF;
  else
    v15 = 1;
  v16 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6AA0]);
  STACK[0x6A90] = v15 - 1;
  return v16();
}

uint64_t sub_100A53D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = STACK[0x6AA0];
  LODWORD(STACK[0x6AC0]) = (STACK[0x6AA0] - 1403592153) & 0x53A91F6F;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((24369 * (STACK[0x6A90] == a3)) ^ v3)))();
}

uint64_t sub_100A54FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  int v17;
  int v18;

  v10 = (STACK[0x6A40] & 2) == 0;
  v11 = STACK[0x6A50];
  if ((STACK[0x6A40] & 2) == 0)
    v11 = STACK[0x6780];
  LODWORD(STACK[0x65B0]) = v11;
  v12 = STACK[0x68A0];
  if (v10)
    v12 = STACK[0x6890];
  LODWORD(STACK[0x65A0]) = v12;
  v13 = STACK[0x6880];
  if (v10)
    v13 = STACK[0x6A80];
  LODWORD(STACK[0x6880]) = v13;
  v14 = STACK[0x6990];
  if (!v10)
    v14 = STACK[0x66D0];
  LODWORD(STACK[0x6780]) = v14;
  v15 = (STACK[0x6A30] & 2) == 0;
  v16 = STACK[0x66E8];
  if ((STACK[0x6A30] & 2) == 0)
    v16 = STACK[0x66C8];
  LODWORD(STACK[0x6640]) = v16;
  v17 = STACK[0x6950];
  if (!v15)
    v17 = STACK[0x6910];
  LODWORD(STACK[0x6410]) = v17;
  v18 = STACK[0x6900];
  if (v15)
    v18 = STACK[0x6650];
  LODWORD(STACK[0x6418]) = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * LODWORD(STACK[0x6AC0])))(-2069329705, 1817309867, STACK[0x6AB0], a4, v7, v8, a7, v9);
}

uint64_t sub_100A55160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unint64_t v9;
  int v10;

  LODWORD(STACK[0x6A50]) = v10;
  LODWORD(STACK[0x6A60]) = a8;
  LODWORD(STACK[0x6A80]) = a6;
  STACK[0x6A90] = v9;
  LODWORD(STACK[0x6AA0]) = 8629 * (LODWORD(STACK[0x6AC0]) ^ 0x1B6D);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                              + 8
                                                              * ((30 * (v8 + v9 == 15)) ^ LODWORD(STACK[0x6AC0]))))(a1 + 1, a2 + 1, a3 + 1);
}

uint64_t sub_100A564DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  unint64_t v184;
  int v185;
  int v186;
  int v187;
  char v188;
  char v189;
  int v190;
  int v191;
  int v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;

  v10 = (STACK[0x6A40] & 2) == 0;
  if ((STACK[0x6A40] & 2) != 0)
    v11 = STACK[0x68E0];
  else
    v11 = STACK[0x69C0];
  v12 = STACK[0x69B0];
  if ((STACK[0x6A40] & 2) != 0)
    v12 = STACK[0x67E0];
  LODWORD(STACK[0x6770]) = v12;
  v13 = STACK[0x69A0];
  if (!v10)
    v13 = STACK[0x66E0];
  LODWORD(STACK[0x6598]) = v13;
  v14 = STACK[0x6750];
  if ((STACK[0x6A30] & 2) != 0)
    v14 = STACK[0x6740];
  LODWORD(STACK[0x6408]) = v14;
  v15 = ((v8 - 1836660103) ^ 0xEE2D61BC) & (2 * ((v8 - 1836660103) & 0xC8AD45BE)) ^ (v8 - 1836660103) & 0xC8AD45BE;
  v16 = ((2 * ((v8 - 1836660103) ^ 0xEE67E8A4)) ^ 0x4D955A34) & ((v8 - 1836660103) ^ 0xEE67E8A4) ^ (2
                                                                                                  * ((v8 - 1836660103) ^ 0xEE67E8A4)) & 0x26CAAD1A;
  v17 = v16 ^ 0x224AA50A;
  v18 = (v16 ^ 0x4808812) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x9B2AB468) & v17 ^ (4 * v17) & 0x26CAAD18;
  v20 = (v19 ^ 0x20AA412) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x24C00912)) ^ 0x6CAAD1A0) & (v19 ^ 0x24C00912) ^ (16 * (v19 ^ 0x24C00912)) & 0x26CAAD10;
  v22 = v20 ^ 0x26CAAD1A ^ (v21 ^ 0x248A8100) & (v20 << 8);
  v23 = v8
      - 2106942751
      + ((((v8 - 1836660103) ^ (2
                              * ((v22 << 16) & 0x26CA0000 ^ v22 ^ ((v22 << 16) ^ 0x2D1A0000) & (((v21 ^ 0x2402C1A) << 8) & 0x26CA0000 ^ 0x24420000 ^ (((v21 ^ 0x2402C1A) << 8) ^ 0x4AAD0000) & (v21 ^ 0x2402C1Au))))) >> 8) ^ 0xFF32D3E0);
  v24 = (v23 ^ 0xD2C57507) & (2 * (v23 & 0xD8C97557)) ^ v23 & 0xD8C97557;
  v25 = ((2 * (v23 ^ 0x53473D83)) ^ 0x171C91A8) & (v23 ^ 0x53473D83) ^ (2 * (v23 ^ 0x53473D83)) & 0x8B8E48D4;
  v26 = v25 ^ 0x88824854;
  v27 = (v25 ^ 0xB8C0080) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0x2E392350) & v26 ^ (4 * v26) & 0x8B8E48D4;
  v29 = (v28 ^ 0xA080054) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x81864884)) ^ 0xB8E48D40) & (v28 ^ 0x81864884) ^ (16 * (v28 ^ 0x81864884)) & 0x8B8E48D0;
  v31 = v29 ^ 0x8B8E48D4 ^ (v30 ^ 0x88840894) & (v29 << 8);
  v32 = (v23 ^ (2
              * ((v31 << 16) & 0xB8E0000 ^ v31 ^ ((v31 << 16) ^ 0x48D40000) & (((v30 ^ 0x30A4094) << 8) & 0xB8E0000 ^ 0x1860000 ^ (((v30 ^ 0x30A4094) << 8) ^ 0xE480000) & (v30 ^ 0x30A4094))))) >> 8;
  v33 = v23
      - 998121895
      + (((v32 ^ 0xAFA2BC8A) + 237470110) ^ ((v32 ^ 0x46F501B4) - 412074844) ^ ((v32 ^ 0xE98960DA) + 1208769998));
  v34 = (v33 ^ 0x68C3A482) & (2 * (v33 & 0x72EBB60A)) ^ v33 & 0x72EBB60A;
  v35 = ((2 * (v33 ^ 0x6D92E486)) ^ 0x3EF2A518) & (v33 ^ 0x6D92E486) ^ (2 * (v33 ^ 0x6D92E486)) & 0x1F79528C;
  v36 = v35 ^ 0x1095284;
  v37 = (v35 ^ 0x1E700008) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x7DE54A30) & v36 ^ (4 * v36) & 0x1F79528C;
  v39 = v37 ^ 0x1F79528C ^ (v38 ^ 0x1D614200) & (16 * v37);
  v40 = (16 * (v38 ^ 0x218108C)) & 0x1F795280 ^ 0x868520C ^ ((16 * (v38 ^ 0x218108C)) ^ 0xF79528C0) & (v38 ^ 0x218108C);
  v41 = (v39 << 8) & 0x1F795200 ^ v39 ^ ((v39 << 8) ^ 0x79528C00) & v40;
  v42 = v33 ^ (2
             * ((v41 << 16) & 0x1F790000 ^ v41 ^ ((v41 << 16) ^ 0x528C0000) & ((v40 << 8) & 0x1F790000 ^ 0x6290000 ^ ((v40 << 8) ^ 0x79520000) & v40)));
  v43 = ((v42 ^ 0xAC7900A2) - 461877392) ^ ((v42 ^ 0x39D2DE63) + 1909690799) ^ ((v42 ^ 0xCF02CDD3) - 2029813217);
  v44 = ((v43 + 285402537) ^ 0xCA99A9CD) & (2 * ((v43 + 285402537) & 0x8B1DCD01)) ^ (v43 + 285402537) & 0x8B1DCD01;
  v45 = ((2 * ((v43 + 285402537) ^ 0xC883A3CD)) ^ 0x873CDD98) & ((v43 + 285402537) ^ 0xC883A3CD) ^ (2
                                                                                                  * ((v43 + 285402537) ^ 0xC883A3CD)) & 0x439E6ECC;
  v46 = v45 ^ 0x40822244;
  v47 = (v45 ^ 0x1C4E48) & (4 * v44) ^ v44;
  v48 = ((4 * v46) ^ 0xE79BB30) & v46 ^ (4 * v46) & 0x439E6ECC;
  v49 = (v48 ^ 0x2182A0C) & (16 * v47) ^ v47;
  v50 = ((16 * (v48 ^ 0x418644CC)) ^ 0x39E6ECC0) & (v48 ^ 0x418644CC) ^ (16 * (v48 ^ 0x418644CC)) & 0x439E6EC0;
  v51 = v49 ^ 0x439E6ECC ^ (v50 ^ 0x1866C00) & (v49 << 8);
  v52 = v43
      - 1675578710
      + ((((v43 + 285402537) ^ (2
                              * ((v51 << 16) & 0x439E0000 ^ v51 ^ ((v51 << 16) ^ 0x6ECC0000) & (((v50 ^ 0x4218020C) << 8) & 0x439E0000 ^ 0x41900000 ^ (((v50 ^ 0x4218020C) << 8) ^ 0x1E6E0000) & (v50 ^ 0x4218020C))))) >> 12) ^ 0x89391);
  v53 = v52 + (v52 >> 3) - ((2 * (v52 + (v52 >> 3))) & 0xC81AF5D4) - 468878614;
  v54 = (((v53 ^ 0xDA83E641) - 1247737335) ^ ((v53 ^ 0xD89035E) + 1655435032) ^ ((v53 ^ 0xE168C521) - 1907742359))
      - ((((v53 >> 12) ^ 0x279F09E0) - 1114243065) ^ (((v53 >> 12) ^ 0x1BF6AD19) - 2113952512) ^ (((v53 >> 12) ^ 0x3C6AC2DB)
                                                                                                - 1503409346));
  v55 = ((v54 - 1573431737) ^ 0xDE920987) & (2 * ((v54 - 1573431737) & 0x9E924D06)) ^ (v54 - 1573431737) & 0x9E924D06;
  v56 = ((2 * ((v54 - 1573431737) ^ 0xEA96898B)) ^ 0xE809891A) & ((v54 - 1573431737) ^ 0xEA96898B) ^ (2 * ((v54 - 1573431737) ^ 0xEA96898B)) & 0x7404C48C;
  v57 = v56 ^ 0x14044485;
  v58 = (v56 ^ 0x6004008D) & (4 * v55) ^ v55;
  v59 = ((4 * v57) ^ 0xD0131234) & v57 ^ (4 * v57) & 0x7404C48C;
  v60 = (v59 ^ 0x50000009) & (16 * v58) ^ v58;
  v61 = ((16 * (v59 ^ 0x2404C489)) ^ 0x404C48D0) & (v59 ^ 0x2404C489) ^ (16 * (v59 ^ 0x2404C489)) & 0x7404C480;
  v62 = v60 ^ 0x7404C48D ^ (v61 ^ 0x4004400D) & (v60 << 8);
  v63 = (((v61 ^ 0x3400840D) << 8) ^ 0x4C48D00) & (v61 ^ 0x3400840D) ^ ((v61 ^ 0x3400840D) << 8) & 0x7404C400;
  v64 = ((v54 - 1573431737) ^ (2
                             * (v63 & 0xE6A3400 ^ v62 ^ ((v62 << 16) ^ 0x4AE73402) & 0x74040400 ^ (v63 ^ 0x70000000) & ((v62 << 16) ^ 0x4AE73402)))) >> 5;
  v65 = v54
      - (((v64 ^ 0x94A14FEE) - 724073644) ^ ((v64 ^ 0x51DD5D15) + 296456617) ^ ((v64 ^ 0xC688CC9B) - 2030174169))
      - 534647286;
  v66 = ((2 * (v65 & 0xA429C821)) & 0x40400042 | v65 & 0xA429C821) ^ (2 * (v65 & 0xA429C821)) & (v65 ^ 0xF145EBEE);
  v67 = ((2 * (v65 ^ 0xF145EBEE)) ^ 0xAAD8479E) & (v65 ^ 0xF145EBEE) ^ (2 * (v65 ^ 0xF145EBEE)) & 0x556C23CE;
  v68 = v67 ^ 0x55242041;
  v69 = (v67 ^ 0x444801CD) & (4 * v66) ^ v66;
  v70 = ((4 * v68) ^ 0x55B08F3C) & v68 ^ (4 * v68) & 0x556C23CC;
  v71 = (v70 ^ 0x55200303) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0x4C20C3)) ^ 0x56C23CF0) & (v70 ^ 0x4C20C3) ^ (16 * (v70 ^ 0x4C20C3)) & 0x556C23C0;
  v73 = v71 ^ 0x556C23CF ^ (v72 ^ 0x5440200F) & (v71 << 8);
  v74 = v65 ^ (2
             * ((v73 << 16) & 0x556C0000 ^ v73 ^ ((v73 << 16) ^ 0x23CF0000) & (((v72 ^ 0x12C030F) << 8) & 0x556C0000 ^ 0x114C0000 ^ (((v72 ^ 0x12C030F) << 8) ^ 0x6C230000) & (v72 ^ 0x12C030F))));
  v75 = ((v74 ^ 0x8A4C506) + 2005037703) ^ ((v74 ^ 0x501F3611) + 792297874) ^ ((v74 ^ 0x54D27CA8) + 737463081);
  v76 = ((v75 + 274045420) ^ 0xB5ACD044) & (2 * ((v75 + 274045420) & 0xB92ED255)) ^ (v75 + 274045420) & 0xB92ED255;
  v77 = ((2 * ((v75 + 274045420) ^ 0xD5F4D4EE)) ^ 0xD9B40D76) & ((v75 + 274045420) ^ 0xD5F4D4EE) ^ (2
                                                                                                  * ((v75 + 274045420) ^ 0xD5F4D4EE)) & 0x6CDA06BA;
  v78 = v77 ^ 0x244A0289;
  v79 = (v77 ^ 0x48900031) & (4 * v76) ^ v76;
  v80 = ((4 * v78) ^ 0xB3681AEC) & v78 ^ (4 * v78) & 0x6CDA06B8;
  v81 = (v80 ^ 0x204802A3) & (16 * v79) ^ v79;
  v82 = ((16 * (v80 ^ 0x4C920413)) ^ 0xCDA06BB0) & (v80 ^ 0x4C920413) ^ (16 * (v80 ^ 0x4C920413)) & 0x6CDA06B0;
  v83 = v81 ^ 0x6CDA06BB ^ (v82 ^ 0x4C800200) & (v81 << 8);
  v84 = ((v75 + 274045420) ^ (2
                            * ((v83 << 16) & 0x6CDA0000 ^ v83 ^ ((v83 << 16) ^ 0x6BB0000) & (((v82 ^ 0x205A040B) << 8) & 0x6CDA0000 ^ 0x24D80000 ^ (((v82 ^ 0x205A040B) << 8) ^ 0xDA060000) & (v82 ^ 0x205A040B))))) >> 10;
  v85 = v75
      - 1343451051
      + (((v84 ^ 0x2FAE0A45) - 1185340167) ^ ((v84 ^ 0x98740CF5) + 243475017) ^ ((v84 ^ 0xB7C06D07) + 557269947));
  v86 = (v85 ^ 0xAA2096E5) & (2 * (v85 & 0x82AA96E1)) ^ v85 & 0x82AA96E1;
  v87 = ((2 * (v85 ^ 0xAA359327)) ^ 0x513E0B8C) & (v85 ^ 0xAA359327) ^ (2 * (v85 ^ 0xAA359327)) & 0x289F05C6;
  v88 = v87 ^ 0x28810442;
  v89 = (v87 ^ 0x201F01C4) & (4 * v86) ^ v86;
  v90 = ((4 * v88) ^ 0xA27C1718) & v88 ^ (4 * v88) & 0x289F05C4;
  v91 = (v90 ^ 0x201C0506) & (16 * v89) ^ v89;
  v92 = ((16 * (v90 ^ 0x88300C6)) ^ 0x89F05C60) & (v90 ^ 0x88300C6) ^ (16 * (v90 ^ 0x88300C6)) & 0x289F05C0;
  v93 = v91 ^ 0x289F05C6 ^ (v92 ^ 0x8900486) & (v91 << 8);
  v94 = (((v85 ^ (2
                * ((v93 << 16) & 0x289F0000 ^ v93 ^ ((v93 << 16) ^ 0x5C60000) & (((v92 ^ 0x200F0186) << 8) & 0x289F0000 ^ 0x209A0000 ^ (((v92 ^ 0x200F0186) << 8) ^ 0x9F050000) & (v92 ^ 0x200F0186))))) >> 4) ^ 0xD2989D6)
      + v85;
  v95 = (v94 ^ 0xE82844D0) & (2 * (v94 & 0x82AA96E1)) ^ v94 & 0x82AA96E1;
  v96 = ((2 * (v94 ^ 0xED2961D2)) ^ 0xDF07EE66) & (v94 ^ 0xED2961D2) ^ (2 * (v94 ^ 0xED2961D2)) & 0x6F83F732;
  v97 = v96 ^ 0x20801111;
  v98 = (v96 ^ 0x2F02E610) & (4 * v95) ^ v95;
  v99 = ((4 * v97) ^ 0xBE0FDCCC) & v97 ^ (4 * v97) & 0x6F83F730;
  v100 = (v99 ^ 0x2E03D400) & (16 * v98) ^ v98;
  v101 = ((16 * (v99 ^ 0x41802333)) ^ 0xF83F7330) & (v99 ^ 0x41802333) ^ (16 * (v99 ^ 0x41802333)) & 0x6F83F730;
  v102 = v100 ^ 0x6F83F733 ^ (v101 ^ 0x68037300) & (v100 << 8);
  v103 = v94 ^ (2
              * ((v102 << 16) & 0x6F830000 ^ v102 ^ ((v102 << 16) ^ 0x77330000) & (((v101 ^ 0x7808403) << 8) & 0x6F830000 ^ 0x6C000000 ^ (((v101 ^ 0x7808403) << 8) ^ 0x83F70000) & (v101 ^ 0x7808403))));
  v104 = (((v103 ^ 0xFCD61432) + 296869141) ^ ((v103 ^ 0x14B37C0F) - 103500502) ^ ((v103 ^ 0x7BCE10BA) - 1767253603))
       - 953132389;
  v105 = v104 + (v104 >> 14) - ((v104 + (v104 >> 14)) >> 6);
  v106 = v105 + 1788935211 - ((2 * v105) & 0xD541F856);
  v107 = ((((v105 >> 11) ^ 0x7BDE1F6C) + 1258770726) ^ (((v105 >> 11) ^ 0x7348D3BB) + 1133616627) ^ (((v105 >> 11) ^ 0x8889AB2) + 944887036))
       + (((v105 ^ 0xD7887B44) + 1614355555) ^ ((v105 ^ 0x389C3718) - 1892855745) ^ ((v105 ^ 0x1DA76067) - 1441396926));
  v108 = (v107 - 1583018232) & 0xE8918DAD ^ 0xEC9C5F03 ^ ((v107 - 1583018232) ^ 0xC40DC9AC) & (2
                                                                                             * ((v107 - 1583018232) & 0xE8918DAD));
  v109 = ((2 * ((v107 - 1583018232) ^ 0x40DD2AE)) ^ 0xD938BE06) & ((v107 - 1583018232) ^ 0x40DD2AE) ^ (2 * ((v107 - 1583018232) ^ 0x40DD2AE)) & 0xEC9C5F02;
  v110 = v109 & 0x482B2C4E ^ v108 ^ ((4 * v108) ^ 0xFA5A5042) & (v109 ^ 0xC8181E03);
  v111 = ((4 * v109) ^ 0x684B5446) & (v109 ^ 0xC8181E03) ^ v109 & 0x482B2C4E;
  v112 = v111 & 0x482B2C4E ^ v110 ^ ((16 * v110) ^ 0x16E1C5E) & (v111 ^ 0x48080C03);
  v113 = ((16 * v111) ^ 0xC8ABEC6E) & (v111 ^ 0x48080C03) ^ v111 & 0x482B2C4E;
  v114 = v112 ^ v113 & 0x482B2C4E ^ ((v112 << 8) ^ 0xD4742F4E) & (v113 ^ 0x48080C03);
  v115 = ((v113 << 8) ^ 0x40272E4E) & (v113 ^ 0x48080C03) ^ v113 & 0x482B2C4E;
  v116 = ((v107 - 1583018232) ^ (2
                               * (v114 ^ v115 & 0x482B2C4E ^ ((v114 << 16) ^ 0x1B2A2C4E) & (v115 ^ 0x24940000) ^ ((v114 << 16) ^ 0x1B2A2C4E) & 0x6C9C0C00))) >> 3;
  v117 = v107
       - (((v116 ^ 0x3445DE69) - 1792980306) ^ ((v116 ^ 0xC2A08B0B) + 1673797584) ^ ((v116 ^ 0xF0D07317) + 1370810324))
       - 1515065175;
  v118 = (v117 ^ 0xB951C3C) & (2 * (v117 & 0x8BD65EBE)) ^ v117 & 0x8BD65EBE;
  v119 = ((2 * (v117 ^ 0xFB52568)) ^ 0x8C6F7AC) & (v117 ^ 0xFB52568) ^ (2 * (v117 ^ 0xFB52568)) & 0x84637BD6;
  v120 = v119 ^ 0x84210852;
  v121 = (v119 ^ 0x80427382) & (4 * v118) ^ v118;
  v122 = ((4 * v120) ^ 0x118DEF58) & v120 ^ (4 * v120) & 0x84637BD4;
  v123 = (v122 ^ 0x16B46) & (16 * v121) ^ v121;
  v124 = ((16 * (v122 ^ 0x84621086)) ^ 0x4637BD60) & (v122 ^ 0x84621086) ^ (16 * (v122 ^ 0x84621086)) & 0x84637BD0;
  v125 = v123 ^ 0x84637BD6 ^ (v124 ^ 0x4233996) & (v123 << 8);
  v126 = v117 ^ (2
               * ((v125 << 16) & 0x4630000 ^ v125 ^ ((v125 << 16) ^ 0x7BD60000) & (((v124 ^ 0x80404296) << 8) & 0x4630000 ^ (((v124 ^ 0x80404296) << 8) ^ 0x637B0000) & (v124 ^ 0x80404296) ^ 0x4000000)));
  v127 = ((v126 ^ 0x376CDA99) + 1750058732) ^ ((v126 ^ 0x93820314) - 861855897) ^ ((v126 ^ 0x277A709F) + 2019126510);
  v128 = ((v127 + 1986727702) ^ 0xC60F20EA) & (2 * ((v127 + 1986727702) & 0xE72FB4E3)) ^ (v127 + 1986727702) & 0xE72FB4E3;
  v129 = ((2 * ((v127 + 1986727702) ^ 0x465B29AE)) ^ 0x42E93A9A) & ((v127 + 1986727702) ^ 0x465B29AE) ^ (2 * ((v127 + 1986727702) ^ 0x465B29AE)) & 0xA1749D4C;
  v130 = v129 ^ 0xA1148545;
  v131 = (v129 ^ 0x601049) & (4 * v128) ^ v128;
  v132 = ((4 * v130) ^ 0x85D27534) & v130 ^ (4 * v130) & 0xA1749D4C;
  v133 = (v132 ^ 0x81501500) & (16 * v131) ^ v131;
  v134 = ((16 * (v132 ^ 0x20248849)) ^ 0x1749D4D0) & (v132 ^ 0x20248849) ^ (16 * (v132 ^ 0x20248849)) & 0xA1749D40;
  v135 = v133 ^ 0xA1749D4D ^ (v134 ^ 0x140940D) & (v133 << 8);
  v136 = ((v127 + 1986727702) ^ (2
                               * ((v135 << 16) & 0x21740000 ^ v135 ^ ((v135 << 16) ^ 0x1D4D0000) & (((v134 ^ 0xA034090D) << 8) & 0x21740000 ^ 0x1600000 ^ (((v134 ^ 0xA034090D) << 8) ^ 0x749D0000) & (v134 ^ 0xA034090D))))) >> 10;
  v137 = v127
       + 443985058
       + (((v136 ^ 0x596300D6) - 650896779) ^ ((v136 ^ 0xA88920D5) + 685652600) ^ ((v136 ^ 0xF1C3F3A0) + 1905584387));
  v138 = ((2 * (v137 & 0xC2A54E55)) & 0x5481080 | v137 & 0xC2A54E55) ^ (2 * (v137 & 0xC2A54E55)) & (v137 ^ 0xFDFD7DD5);
  v139 = ((2 * (v137 ^ 0xFDFD7DD5)) ^ 0x7EB06700) & (v137 ^ 0xFDFD7DD5) ^ (2 * (v137 ^ 0xFDFD7DD5)) & 0x3F583380;
  v140 = v139 ^ 0x1481080;
  v141 = (v139 ^ 0x1E502300) & (4 * v138) ^ v138;
  v142 = ((4 * v140) ^ 0xFD60CE00) & v140 ^ (4 * v140) & 0x3F583380;
  v143 = v141 ^ 0x3F583380 ^ (v142 ^ 0x3D400200) & (16 * v141);
  v144 = (16 * (v142 ^ 0x2183180)) & 0x3F583380 ^ 0xA580380 ^ ((16 * (v142 ^ 0x2183180)) ^ 0xF5833800) & (v142 ^ 0x2183180);
  v145 = (v143 << 8) & 0x3F583300 ^ v143 ^ ((v143 << 8) ^ 0x58338000) & v144;
  v146 = (((v137 ^ (2
                  * ((v145 << 16) & 0x3F580000 ^ v145 ^ ((v145 << 16) ^ 0x33800000) & ((v144 << 8) & 0x3F580000 ^ 0x27480000 ^ ((v144 << 8) ^ 0x58330000) & v144)))) >> 6) ^ 0xFC572B5A)
       + v137;
  v147 = v42 ^ v9 ^ v103 ^ (v146 - ((2 * v146 - 2058707796) & 0xBE68B9F0) + 567913294);
  v148 = v147 ^ 0xA56686EB;
  v149 = v146 - 675115503 - ((v146 - 675115503) >> 12) + ((v146 - 675115503 - ((v146 - 675115503) >> 12)) >> 1);
  v150 = v53 ^ a8 ^ v106 ^ v149;
  v151 = ((v149 - 70614587 - ((v149 - 70614587) >> 9)) ^ 0xF6F7BFFF)
       + 1865285616
       + ((2 * (v149 - 70614587 - ((v149 - 70614587) >> 9))) & 0xEDEF7FFE);
  LODWORD(STACK[0x6900]) = (v147 ^ 0xA56686EB) & 0xFFFFFF80;
  v152 = (2 * (v151 & 0x99DA4011)) & (v151 ^ 0x7D78F6F1) ^ v151 & 0x99DA4011 ^ ((2 * (v151 & 0x99DA4011)) & 0x20A08020 | 0xC0002080);
  v153 = (2 * (v151 ^ 0x7D78F6F1)) & 0xE4A2B6E0 ^ 0x24A29220 ^ ((2 * (v151 ^ 0x7D78F6F1)) ^ 0xC9456DC0) & (v151 ^ 0x7D78F6F1);
  v154 = (4 * v152) & 0xE4A2B6E0 ^ v152 ^ ((4 * v152) ^ 0x8200) & v153;
  v155 = (4 * v153) & 0xE4A2B6E0 ^ 0x64202460 ^ ((4 * v153) ^ 0x928ADB80) & v153;
  v156 = (16 * v154) & 0xE4A2B6E0 ^ v154 ^ ((16 * v154) ^ 0xA2800) & v155;
  v157 = (16 * v155) & 0xE4A2B6E0 ^ 0xA48090E0 ^ ((16 * v155) ^ 0x4A2B6E00) & v155;
  v158 = v156 ^ 0x2422B460 ^ (v156 << 8) & 0xE4A2B600 ^ ((v156 << 8) ^ 0x2828000) & v157;
  v159 = (v151 ^ (2
                * ((v158 << 16) & 0x64A20000 ^ v158 ^ ((v158 << 16) ^ 0x36E00000) & ((v157 << 8) & 0x64A20000 ^ 0x44000000 ^ ((v157 << 8) ^ 0xA2B60000) & v157)))) >> 5;
  v160 = v151
       + 1024119197
       + (((v159 ^ 0x2A98766E) - 18860667) ^ ((v159 ^ 0x44A60372) - 1864482663) ^ ((v159 ^ 0x6EF08C72) - 1165439079));
  v161 = (v160 ^ 0x8E54BBEE) & (2 * (v160 & 0x8818B3EF)) ^ v160 & 0x8818B3EF;
  v162 = ((2 * (v160 ^ 0x9E54BD3C)) ^ 0x2C981DA6) & (v160 ^ 0x9E54BD3C) ^ (2 * (v160 ^ 0x9E54BD3C)) & 0x164C0ED2;
  v163 = v162 ^ 0x12440251;
  v164 = (v162 ^ 0x12000C81) & (4 * v161) ^ v161;
  v165 = ((4 * v163) ^ 0x59303B4C) & v163 ^ (4 * v163) & 0x164C0ED0;
  v166 = (v165 ^ 0x10000A43) & (16 * v164) ^ v164;
  v167 = ((16 * (v165 ^ 0x64C0493)) ^ 0x64C0ED30) & (v165 ^ 0x64C0493) ^ (16 * (v165 ^ 0x64C0493)) & 0x164C0ED0;
  v168 = v166 ^ 0x164C0ED3 ^ (v167 ^ 0x4400CC3) & (v166 << 8);
  v169 = v74 ^ a6 ^ v126 ^ v160 ^ (2
                                 * ((v168 << 16) & 0x164C0000 ^ v168 ^ ((v168 << 16) ^ 0xED30000) & (((v167 ^ 0x120C02C3) << 8) & 0x164C0000 ^ 0x12400000 ^ (((v167 ^ 0x120C02C3) << 8) ^ 0x4C0E0000) & (v167 ^ 0x120C02C3))));
  LODWORD(STACK[0x6608]) = (v147 ^ 0xA56686EB) & 0x7F;
  v170 = 16843009
       * (((v148 & 0x7F ^ 0xCC7E6DE3) + 1620246352) ^ ((v148 & 0x7F ^ 0x6961AC13) - 980599104) ^ ((v148 & 0x7F ^ 0xA51FC1B0)
                                                                                                + 166941469))
       - 335106618;
  v171 = (v170 ^ 0xF2AE9B28) & (2 * (v170 & 0xFA8CD24D)) ^ v170 & 0xFA8CD24D;
  v172 = ((2 * (v170 ^ 0xA7A7BF22)) ^ 0xBA56DADE) & (v170 ^ 0xA7A7BF22) ^ (2 * (v170 ^ 0xA7A7BF22)) & 0x5D2B6D6E;
  v173 = v172 ^ 0x45292521;
  v174 = (v172 ^ 0x1802484C) & (4 * v171) ^ v171;
  v175 = ((4 * v173) ^ 0x74ADB5BC) & v173 ^ (4 * v173) & 0x5D2B6D6C;
  v176 = (v175 ^ 0x54292520) & (16 * v174) ^ v174;
  v177 = ((16 * (v175 ^ 0x9024843)) ^ 0xD2B6D6F0) & (v175 ^ 0x9024843) ^ (16 * (v175 ^ 0x9024843)) & 0x5D2B6D60;
  v178 = v176 ^ 0x5D2B6D6F ^ (v177 ^ 0x50224400) & (v176 << 8);
  LODWORD(STACK[0x66E8]) = v170 ^ (2
                                 * ((v178 << 16) & 0x5D2B0000 ^ v178 ^ ((v178 << 16) ^ 0x6D6F0000) & (((v177 ^ 0xD09290F) << 8) & 0x5D2B0000 ^ 0x54020000 ^ (((v177 ^ 0xD09290F) << 8) ^ 0x2B6D0000) & (v177 ^ 0xD09290F))));
  v179 = v169 & 3 ^ 0x3F;
  LODWORD(STACK[0x6400]) = v179;
  v180 = (v169 & 4) + v179 - 4;
  LODWORD(STACK[0x68E0]) = v180;
  v181 = v180 ^ 0x3C214E2E;
  v182 = v169 & 0x34280621 ^ 0x40B002E1 ^ (v169 & 0xB76E5F23 ^ 0x4893B4DE) & (v169 ^ 0x3CAAB26B);
  LODWORD(STACK[0x66D0]) = v182 - ((2 * v182) & 0x5F17F572) - 1349780807;
  LODWORD(STACK[0x6890]) = v169;
  LOBYTE(v182) = 36 - (((v169 ^ 0x34) - 26) ^ ((v169 ^ 0xDA) + 12) ^ ((v169 ^ 0xDB) + 11));
  v183 = (v182 ^ (2 * ((v182 ^ 1) & (2 * (v182 & 0xC1)) | v182 & 0xC1))) & 7 ^ 2;
  v184 = (((2 * v183) | 0xF6DB4402) - v183 - 2070782465) ^ 0x7B6DA202;
  LODWORD(STACK[0x67E0]) = v181;
  if (v181 == 1008815632)
    v185 = 0;
  else
    v185 = 255;
  STACK[0x66E0] = v184;
  v186 = v185 << v184;
  v187 = 16843009 * v186;
  LODWORD(STACK[0x6A50]) = (2063597568 * v186) & v150;
  if (v181 == 1008815632)
    v188 = 0;
  else
    v188 = ~(_BYTE)v186;
  LODWORD(STACK[0x68B0]) = v148;
  v189 = v188 & v148;
  v190 = v189 & 0x20;
  v191 = v189 & 0xDF;
  if ((v190 & v187) != 0)
    v190 = -v190;
  LODWORD(STACK[0x6600]) = v187;
  v192 = (v190 + v187) ^ v191;
  LODWORD(STACK[0x6A60]) = v11 + 473363462 - ((2 * v11) & 0x386DE80C);
  LODWORD(STACK[0x64D0]) = v192;
  LODWORD(STACK[0x69C0]) = ((2 * ((v192 & v11 & 0x558200F1 ^ 0x10000010) + (v192 & v11 & 0x2A7DFF0E ^ 0xA21F707)) - 2) ^ 0x3443EE2C)
                         - v192;
  LODWORD(STACK[0x68A0]) = v147;
  LODWORD(STACK[0x69B0]) = v147 ^ 0x1A ^ ((unsigned __int16)(v147 ^ 0xE91A) >> 8) ^ ((v147 ^ 0x573CE91A) >> 16) ^ HIBYTE(v147) ^ 0xB0;
  LODWORD(STACK[0x68C0]) = v150;
  LODWORD(STACK[0x69A0]) = 16843009
                         * (v150 ^ 3 ^ ((unsigned __int16)(v150 ^ 0xA603) >> 8) ^ ((v150 ^ 0x1E34A603) >> 16) ^ HIBYTE(v150) ^ 0x3D);
  v193 = STACK[0x68D0];
  v194 = STACK[0xDAD8];
  v195 = *(_QWORD *)(STACK[0xDAD8] + 8 * (0x97F3B6AB % STACK[0x68D0]));
  v196 = *(_QWORD *)(STACK[0xDAD8]
                   + 8
                   * (((((v195 ^ 0x5BD1CF0E0721A526) - 0x59283386ABE56DA5) ^ ((v195 ^ 0x4251C4B8B819E9B0)
                                                                                - 0x40A8383014DD2133) ^ ((v195 ^ 0x148D06BBB235419BuLL) - 0x1674FA331EF18918))
                     + 0xFF4F185A94EA968)
                    % STACK[0x68D0]));
  v197 = *(_QWORD *)(STACK[0xDAD8]
                   + 8
                   * (((((v196 ^ 0xCC7F87B8F1D83898) - 0x619C4AD1F8F9B0FFLL) ^ ((v196 ^ 0xF86940A3B90ED3FLL)
                                                                                + 0x5D9AA69CCD4E9AA8) ^ ((v196 ^ 0xCEF41EBFC745D8AALL) - 0x6317D3D6CE6450CDLL))
                     - 0x5F113F9BE34D531DLL)
                    % STACK[0x68D0]));
  STACK[0x6A90] = STACK[0xDAD8];
  v198 = *(_QWORD *)(v194
                   + 8
                   * (((((v197 ^ 0x869E3198DE7E667FLL) - 0x4204BB3799075269) ^ ((v197 ^ 0xC7E04C98D004BFD9)
                                                                                - 0x37AC637977D8BCFLL) ^ ((v197 ^ 0x4C73700D0377D4ABLL) + 0x7716055DBBF11F43))
                     - 0x3668785DB093F076)
                    % v193));
  LODWORD(v198) = ((((v198 ^ 0xAADB6A1FFFC28402) + 0x29C476547A3B0624) ^ ((v198 ^ 0xB29BCEFF16C74041)
                                                                            + 0x3184D2B4933EC261) ^ ((v198 ^ 0x154DA9EDE408C94ELL) - 0x69AD4A599E0EB490))
                 + 0x71EDEEB9E79D7F00)
                % v193;
  LODWORD(STACK[0x6A80]) = ((((v198 - ((2 * v198) & 0x2DB2022C) + 383320342) ^ 0xD3F888D4) - 355884731) ^ (((v198 - ((2 * v198) & 0x2DB2022C) + 383320342) ^ 0x25D8DFC1) + 485094994) ^ (((v198 - ((2 * v198) & 0x2DB2022C) + 383320342) ^ 0xE0F95603) - 641171564))
                         + 1596296038;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AA0])) - 8))(1954465147);
}

uint64_t sub_100A58870(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  _BOOL4 v8;

  LODWORD(STACK[0x6AC0]) = a8;
  v8 = LODWORD(STACK[0x6A80]) < a6;
  if (v8 == (a1 + 445574771) < 0x8F0DB3ED)
    v8 = (a1 + 445574771) < LODWORD(STACK[0x6A80]);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((254 * !v8) ^ LODWORD(STACK[0x6AA0])))
                                         - 8))((a1 + 1));
}

uint64_t sub_100A5B568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  v7 = STACK[0x6A00];
  if ((STACK[0x6A40] & 2) == 0)
    v7 = STACK[0x69F0];
  LODWORD(STACK[0x6750]) = v7;
  v8 = STACK[0x69E0];
  if ((STACK[0x6A30] & 2) != 0)
    v8 = STACK[0x69D0];
  LODWORD(STACK[0x63F8]) = v8;
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x6900]) ^ 0xF82F0800;
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x66E8]) ^ 0xE50DCFD1;
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6A60]) ^ 0x1C36F406 ^ LODWORD(STACK[0x64D0]);
  v9 = 16843009 * LODWORD(STACK[0x69B0]);
  v10 = STACK[0x69A0];
  LODWORD(STACK[0x6A80]) = v9;
  LODWORD(STACK[0x6588]) = v10 ^ 0xC4C4C4C4 ^ v9;
  LODWORD(STACK[0x6730]) = v10 ^ 0x23232323;
  STACK[0x6AC0] = STACK[0xDAD8];
  LODWORD(STACK[0x6AA0]) = (((LODWORD(STACK[0x6940]) ^ 0x66B28951) - 76177660) ^ ((LODWORD(STACK[0x6940]) ^ 0xC305155)
                                                                                - 1846065400) ^ ((LODWORD(STACK[0x6940]) ^ 0x61240758)
                                                                                               - 52227829))
                         + 1757968227;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 8))(a1, a2, 0xAEF199BFDCB8CB8ALL, a4, a5, a6, 4280959090);
}

uint64_t sub_100A5B794(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  unsigned int v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v8 = STACK[0x6AA0];
  v9 = LODWORD(STACK[0x6AA0]) < a7;
  STACK[0x6A60] = 415 * (v7 ^ 0x5D68u);
  v10 = a2 - 1968473352 < v8;
  if (v9 != (a2 - 1968473352) < 0xFF2A4072)
    v10 = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((229 * !v10) ^ v7)) - 8))();
}

uint64_t sub_100A5E464(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t (*v192)(void);

  v3 = STACK[0x6A20];
  if ((STACK[0x6A40] & 2) != 0)
    v3 = STACK[0x6A10];
  LODWORD(STACK[0x65E0]) = v3;
  v4 = ((a1 - 0x4555DEA1E50D0222) ^ 0x8BA66A66DCB997B1) & (2 * ((a1 - 0x4555DEA1E50D0222) & 0xC3B76B071EBDD732)) ^ (a1 - 0x4555DEA1E50D0222) & 0xC3B76B071EBDD732;
  v5 = ((2 * ((a1 - 0x4555DEA1E50D0222) ^ 0x8BA8BC6CECB035F5)) ^ 0x903FAED7E41BC58ELL) & ((a1 - 0x4555DEA1E50D0222) ^ 0x8BA8BC6CECB035F5) ^ (2 * ((a1 - 0x4555DEA1E50D0222) ^ 0x8BA8BC6CECB035F5)) & 0x481FD76BF20DE2C6;
  v6 = v5 ^ 0x4800512812042241;
  v7 = (v5 ^ 0x1F8400E009C080) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x207F5DAFC8378B1CLL) & v6 ^ (4 * v6) & 0x481FD76BF20DE2C4;
  v9 = (v8 ^ 0x1F552BC0058200) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x48008240320860C3)) ^ 0x81FD76BF20DE2C70) & (v8 ^ 0x48008240320860C3) ^ (16 * (v8 ^ 0x48008240320860C3)) & 0x481FD76BF20DE2C0;
  v11 = (v10 ^ 0x1D562B200C2000) & (v9 << 8) ^ v9;
  v12 = (((v10 ^ 0x48028140D201C287) << 8) ^ 0x1FD76BF20DE2C700) & (v10 ^ 0x48028140D201C287) ^ ((v10 ^ 0x48028140D201C287) << 8) & 0x481FD76BF20DE200;
  v13 = v11 ^ 0x481FD76BF20DE2C7 ^ (v12 ^ 0x817436200000000) & (v11 << 16);
  v14 = ((a1 - 0x4555DEA1E50D0222) ^ (2
                                      * ((v13 << 32) & 0x481FD76B00000000 ^ v13 ^ ((v13 << 32) ^ 0x720DE2C700000000) & (((v12 ^ 0x40089409F20D20C7) << 16) & 0x481FD76B00000000 ^ 0x814056200000000 ^ (((v12 ^ 0x40089409F20D20C7) << 16) ^ 0x576BF20D00000000) & (v12 ^ 0x40089409F20D20C7uLL))))) >> 24;
  v15 = a1
      + 0xC6DE2C065CC7CFLL
      + (((v14 ^ 0xF972DB4041435D2FLL) - 0x31B7322373042EFELL) ^ ((v14 ^ 0xE4A27934C432C2EELL) - 0x2C679057F675B13FLL) ^ ((v14 ^ 0x1DD0A2A71630C93BLL) + 0x2AEAB43BDB884516));
  v16 = (v15 ^ 0x746A47C59750294BLL) & (2 * (v15 & 0x466097E9D45A326CLL)) ^ v15 & 0x466097E9D45A326CLL;
  v17 = ((2 * (v15 ^ 0xF46A64959F7029DBLL)) ^ 0x6415E6F89654376ELL) & (v15 ^ 0xF46A64959F7029DBLL) ^ (2 * (v15 ^ 0xF46A64959F7029DBLL)) & 0xB20AF37C4B2A1BB6;
  v18 = v17 ^ 0x920A1104492A0891;
  v19 = (v17 ^ 0x2000E26802001320) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xC82BCDF12CA86EDCLL) & v18 ^ (4 * v18) & 0xB20AF37C4B2A1BB4;
  v21 = (v20 ^ 0x800AC17008280A80) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x3200320C43021123)) ^ 0x20AF37C4B2A1BB70) & (v20 ^ 0x3200320C43021123) ^ (16 * (v20 ^ 0x3200320C43021123)) & 0xB20AF37C4B2A1BB0;
  v23 = (v22 ^ 0x200A334402201B00) & (v21 << 8) ^ v21;
  v24 = (((v22 ^ 0x9200C038490A0087) << 8) ^ 0xAF37C4B2A1BB700) & (v22 ^ 0x9200C038490A0087) ^ ((v22 ^ 0x9200C038490A0087) << 8) & 0xB20AF37C4B2A1B00;
  v25 = v23 ^ 0xB20AF37C4B2A1BB7 ^ (v24 ^ 0x20270480A0A0000) & (v23 << 16);
  v26 = (v15 ^ (2
              * ((v25 << 32) & 0x320AF37C00000000 ^ v25 ^ ((v25 << 32) ^ 0x4B2A1BB700000000) & (((v24 ^ 0xB0088334412008B7) << 16) & 0x320AF37C00000000 ^ 0x2B05400000000 ^ (((v24 ^ 0xB0088334412008B7) << 16) ^ 0x737C4B2A00000000) & (v24 ^ 0xB0088334412008B7))))) >> 9;
  v27 = v15
      - 0x638BFE066B83C0BBLL
      + (((v26 ^ 0xC3DE01AF3E54D48CLL) + 0x79AAB803F4CBEB97) ^ ((v26 ^ 0x5E73987F1EB5F6FLL) - 0x406C7FD4C48B9F8ALL) ^ ((v26 ^ 0xC62A0883731E8CE1) + 0x7C5EB12FB981B3FCLL));
  v28 = (v27 ^ 0xEF050CC68D1F3ACCLL) & (2 * (v27 & 0xEF850CE8C99FBB0ELL)) ^ v27 & 0xEF850CE8C99FBB0ELL;
  v29 = ((2 * (v27 ^ 0xB40F1D071C093ED0)) ^ 0xB71423DFAB2D0BBCLL) & (v27 ^ 0xB40F1D071C093ED0) ^ (2 * (v27 ^ 0xB40F1D071C093ED0)) & 0x5B8A11EFD59685DELL;
  v30 = v29 ^ 0x488A102054928442;
  v31 = (v29 ^ 0x120001C700040018) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0x6E2847BF565A1778) & v30 ^ (4 * v30) & 0x5B8A11EFD59685DCLL;
  v33 = (v32 ^ 0x4A0801AF54120540) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x1182104081848086)) ^ 0xB8A11EFD59685DE0) & (v32 ^ 0x1182104081848086) ^ (16 * (v32 ^ 0x1182104081848086)) & 0x5B8A11EFD59685D0;
  v35 = (v34 ^ 0x188010ED51000500) & (v33 << 8) ^ v33;
  v36 = (((v34 ^ 0x430A01028496801ELL) << 8) ^ 0x8A11EFD59685DE00) & (v34 ^ 0x430A01028496801ELL) ^ ((v34 ^ 0x430A01028496801ELL) << 8) & 0x5B8A11EFD5968500;
  v37 = v35 ^ 0x5B8A11EFD59685DELL ^ (v36 ^ 0xA0001C594840000) & (v35 << 16);
  v38 = (v27 ^ (2
              * ((v37 << 32) & 0x5B8A11EF00000000 ^ v37 ^ ((v37 << 32) ^ 0x559685DE00000000) & (((v36 ^ 0x518A102A411201DELL) << 16) & 0x5B8A11EF00000000 ^ 0x4A00006900000000 ^ (((v36 ^ 0x518A102A411201DELL) << 16) ^ 0x11EFD59600000000) & (v36 ^ 0x518A102A411201DELL))))) >> 5;
  v39 = v27
      + 0x1DF571BB4D2C23FFLL
      + (((v38 ^ 0xDE68D746FDB88C82) - 0x3647B2BE8B4681A5) ^ ((v38 ^ 0x93D60CAA035FFEAALL) - 0x7BF9695275A1F38DLL) ^ ((v38 ^ 0x4A627289A5F2E7ADLL) + 0x5DB2E88E2CF31576));
  v40 = (v39 ^ 0xA99B7782201E8FA0) & (2 * (v39 & 0xC18367CAAA5F2FB1)) ^ v39 & 0xC18367CAAA5F2FB1;
  v41 = ((2 * (v39 ^ 0xAB9DB81630109BC0)) ^ 0xD43DBFB9349F68E2) & (v39 ^ 0xAB9DB81630109BC0) ^ (2 * (v39 ^ 0xAB9DB81630109BC0)) & 0x6A1EDFDC9A4FB470;
  v42 = v41 ^ 0x2A0240448A409411;
  v43 = (v41 ^ 0x1C9F18100D2040) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0xA87B7F72693ED1C4) & v42 ^ (4 * v42) & 0x6A1EDFDC9A4FB470;
  v45 = (v44 ^ 0x281A5F50080E9040) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x4204808C92412431)) ^ 0xA1EDFDC9A4FB4710) & (v44 ^ 0x4204808C92412431) ^ (16 * (v44 ^ 0x4204808C92412431)) & 0x6A1EDFDC9A4FB470;
  v47 = (v46 ^ 0x200CDDC8804B0400) & (v45 << 8) ^ v45;
  v48 = (((v46 ^ 0x4A1202141A04B061) << 8) ^ 0x1EDFDC9A4FB47100) & (v46 ^ 0x4A1202141A04B061) ^ ((v46 ^ 0x4A1202141A04B061) << 8) & 0x6A1EDFDC9A4FB400;
  v49 = v47 ^ 0x6A1EDFDC9A4FB471 ^ (v48 ^ 0xA1EDC980A040000) & (v47 << 16);
  v50 = v39 ^ (2
             * ((v49 << 32) & 0x6A1EDFDC00000000 ^ v49 ^ ((v49 << 32) ^ 0x1A4FB47100000000) & (((v48 ^ 0x60000344904B8471) << 16) & 0x6A1EDFDC00000000 ^ 0x2002459000000000 ^ (((v48 ^ 0x60000344904B8471) << 16) ^ 0x5FDC9A4F00000000) & (v48 ^ 0x60000344904B8471))));
  v51 = (v50 ^ 0x80C8BD219BBF9670) + ((v50 >> 27) ^ 0xFFFFFFEFE6E85BCCLL) + 1;
  v52 = v51 + (v51 >> 10) - ((v51 + (v51 >> 10)) >> 3);
  v53 = ((v52 + (v52 ^ 0x200A9D7D984BD3F3) + 1) ^ 0xFFFFFFFFFFFFFFF8) + v52;
  v54 = ((v53 - (v53 >> 28)) ^ 0xEFFC79CEE6F3ED4ELL)
      + 0x7ABBF7773DEDBEB8
      + ((2 * (v53 - (v53 >> 28))) & 0xDFF8F39DCDE7DA9CLL);
  v55 = (v54 ^ 0xD037EC39DB5D1BFBLL) & (2 * (v54 & 0x95478EB9DB1E53FALL)) ^ v54 & 0x95478EB9DB1E53FALL;
  v56 = ((2 * (v54 ^ 0xD236F8494F493B7FLL)) ^ 0x8EE2EDE128AED10ALL) & (v54 ^ 0xD236F8494F493B7FLL) ^ (2 * (v54 ^ 0xD236F8494F493B7FLL)) & 0x477176F094576884;
  v57 = v56 ^ 0x4111121094512885;
  v58 = (v56 ^ 0x62064E000024000) & (4 * v55) ^ v55;
  v59 = ((4 * v57) ^ 0x1DC5DBC2515DA214) & v57 ^ (4 * v57) & 0x477176F094576884;
  v60 = (v59 ^ 0x54152C010552000) & (16 * v58) ^ v58;
  v61 = ((16 * (v59 ^ 0x4230243084024881)) ^ 0x77176F0945768850) & (v59 ^ 0x4230243084024881) ^ (16 * (v59 ^ 0x4230243084024881)) & 0x477176F094576880;
  v62 = (v61 ^ 0x4711660004560800) & (v60 << 8) ^ v60;
  v63 = (((v61 ^ 0x6010F090016085) << 8) ^ 0x7176F09457688500) & (v61 ^ 0x6010F090016085) ^ ((v61 ^ 0x6010F090016085) << 8) & 0x477176F094576800;
  v64 = v62 ^ 0x477176F094576885 ^ (v63 ^ 0x4170709014400000) & (v62 << 16);
  v65 = (v54 ^ (2
              * ((v64 << 32) & 0x477176F000000000 ^ v64 ^ ((v64 << 32) ^ 0x1457688500000000) & (((v63 ^ 0x601066080176885) << 16) & 0x477176F000000000 ^ 0x10162A000000000 ^ (((v63 ^ 0x601066080176885) << 16) ^ 0x76F0945700000000) & (v63 ^ 0x601066080176885))))) >> 12;
  v66 = v54
      - (((v65 ^ 0x738018CC0D24273FLL) + 0x501704432BDD627ALL) ^ ((v65 ^ 0x5D315B558B8DAD7) + 0x2644093A7E419F92) ^ ((v65 ^ 0x76523D037013C6E0) + 0x55C5218C56EA83A7))
      - 0x2FB8547AC81E8312;
  v67 = (v66 ^ 0xE006110584AA115BLL) & (2 * (v66 & 0xE8961029A6B3555BLL)) ^ v66 & 0xE8961029A6B3555BLL;
  v68 = ((2 * (v66 ^ 0xB02E1157C4EC31EDLL)) ^ 0xB17002FCC4BEC96CLL) & (v66 ^ 0xB02E1157C4EC31EDLL) ^ (2 * (v66 ^ 0xB02E1157C4EC31EDLL)) & 0x58B8017E625F64B6;
  v69 = v68 ^ 0x4888010222412492;
  v70 = (v68 ^ 0x30006C001E4024) & (4 * v67) ^ v67;
  v71 = ((4 * v69) ^ 0x62E005F9897D92D8) & v69 ^ (4 * v69) & 0x58B8017E625F64B4;
  v72 = (v71 ^ 0x40A00178005D0090) & (16 * v70) ^ v70;
  v73 = ((16 * (v71 ^ 0x1818000662026426)) ^ 0x8B8017E625F64B60) & (v71 ^ 0x1818000662026426) ^ (16 * (v71 ^ 0x1818000662026426)) & 0x58B8017E625F64B0;
  v74 = (v73 ^ 0x880016620564000) & (v72 << 8) ^ v72;
  v75 = (((v73 ^ 0x5038001842092496) << 8) ^ 0xB8017E625F64B600) & (v73 ^ 0x5038001842092496) ^ ((v73 ^ 0x5038001842092496) << 8) & 0x58B8017E625F6400;
  v76 = v74 ^ 0x58B8017E625F64B6 ^ (v75 ^ 0x1800006242440000) & (v74 << 16);
  v77 = (v66 ^ (2
              * ((v76 << 32) & 0x58B8017E00000000 ^ v76 ^ ((v76 << 32) ^ 0x625F64B600000000) & (((v75 ^ 0x40B8011C201B40B6) << 16) & 0x58B8017E00000000 ^ 0x5880012000000000 ^ (((v75 ^ 0x40B8011C201B40B6) << 16) ^ 0x17E625F00000000) & (v75 ^ 0x40B8011C201B40B6))))) >> 6;
  v78 = v66
      - 0x3B596F382F912BADLL
      + (((v77 ^ 0xF916B77B7A74E4FDLL) - 0x754FF4BD9F21E13BLL) ^ ((v77 ^ 0xB0E469AD6EC7EDB7) - 0x3CBD2A6B8B92E871) ^ ((v77 ^ 0x4A95869CF13B3F3ALL) + 0x39333AA5EB91C504));
  v79 = (v78 ^ 0xB209D8C9961DB43DLL) & (2 * (v78 & 0xB32D9AEDD721B4BELL)) ^ v78 & 0xB32D9AEDD721B4BELL;
  v80 = ((2 * (v78 ^ 0x9601C80B965ED421)) ^ 0x4A58A5CC82FEC13ELL) & (v78 ^ 0x9601C80B965ED421) ^ (2 * (v78 ^ 0x9601C80B965ED421)) & 0x252C52E6417F609ELL;
  v81 = v80 ^ 0x2524522241012081;
  v82 = (v80 ^ 0x800C4000E4018) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x94B14B9905FD827CLL) & v81 ^ (4 * v81) & 0x252C52E6417F609CLL;
  v84 = (v83 ^ 0x4204280017D0000) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x210C106640026083)) ^ 0x52C52E6417F609F0) & (v83 ^ 0x210C106640026083) ^ (16 * (v83 ^ 0x210C106640026083)) & 0x252C52E6417F6090;
  v86 = (v85 ^ 0x4026401760000) & (v84 << 8) ^ v84;
  v87 = (((v85 ^ 0x252850824009600FLL) << 8) ^ 0x2C52E6417F609F00) & (v85 ^ 0x252850824009600FLL) ^ ((v85 ^ 0x252850824009600FLL) << 8) & 0x252C52E6417F6000;
  v88 = v86 ^ 0x252C52E6417F609FLL ^ (v87 ^ 0x2400424041600000) & (v86 << 16);
  v89 = v78 ^ (2
             * ((v88 << 32) & 0x252C52E600000000 ^ v88 ^ ((v88 << 32) ^ 0x417F609F00000000) & (((v87 ^ 0x12C10A6001F609FLL) << 16) & 0x252C52E600000000 ^ 0x2508128000000000 ^ (((v87 ^ 0x12C10A6001F609FLL) << 16) ^ 0x52E6417F00000000) & (v87 ^ 0x12C10A6001F609FLL))));
  v90 = (((v89 ^ 0xD30FEA6D7EEC75C8) - 0x2E1232F7ED271610) ^ ((v89 ^ 0xCC051D5A18641113) - 0x3118C5C08BAF72CBLL) ^ ((v89 ^ 0xF495AA7FE11C5AFBLL) - 0x98872E572D73923))
      - ((((v89 >> 29) ^ 0x19E1EE1CE222F3) - 0x5B106BE839657949) ^ (((v89 >> 29) ^ 0x56999E06B49CA777)
                                                                      - 0xD901400911BFCCDLL) ^ (((v89 >> 29) ^ 0x56807FEFF4846FC0)
                                                                                              - 0xD89F5E9D103347ALL));
  v91 = ((v90 + 0x32EEFFF9F87C405CLL) ^ 0x4C81FBD4A061431ELL) & (2
                                                               * ((v90 + 0x32EEFFF9F87C405CLL) & 0x8889FBD6A2656B9ELL)) ^ (v90 + 0x32EEFFF9F87C405CLL) & 0x8889FBD6A2656B9ELL;
  v92 = ((2 * ((v90 + 0x32EEFFF9F87C405CLL) ^ 0x4C80BA74E463D20ALL)) ^ 0x881283448C0D7328) & ((v90
                                                                                               + 0x32EEFFF9F87C405CLL) ^ 0x4C80BA74E463D20ALL) ^ (2 * ((v90 + 0x32EEFFF9F87C405CLL) ^ 0x4C80BA74E463D20ALL)) & 0xC40941A24606B994;
  v93 = v92 ^ 0x440940A242028894;
  v94 = (v92 ^ 0x10000043000) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0x10250689181AE650) & v93 ^ (4 * v93) & 0xC40941A24606B994;
  v96 = (v95 ^ 0x100800002A000) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0xC408412246041984)) ^ 0x40941A24606B9940) & (v95 ^ 0xC408412246041984) ^ (16 * (v95 ^ 0xC408412246041984)) & 0xC40941A24606B990;
  v98 = (v97 ^ 0x4000002040029900) & (v96 << 8) ^ v96;
  v99 = (((v97 ^ 0x8409418206042094) << 8) ^ 0x941A24606B99400) & (v97 ^ 0x8409418206042094) ^ ((v97 ^ 0x8409418206042094) << 8) & 0xC40941A24606B900;
  v100 = v98 ^ 0xC40941A24606B994 ^ (v99 ^ 0x1000206000000) & (v98 << 16);
  v101 = v90
       - 0x4487042F651E5406
       + ((((v90 + 0x32EEFFF9F87C405CLL) ^ (2
                                          * ((v100 << 32) & 0x440941A200000000 ^ v100 ^ ((v100 << 32) ^ 0x4606B99400000000) & (((v99 ^ 0xC40841A040062994) << 16) & 0x440941A200000000 ^ 0x40901A000000000 ^ (((v99 ^ 0xC40841A040062994) << 16) ^ 0x41A2460600000000) & (v99 ^ 0xC40841A040062994))))) >> 15) ^ 0x11136F7245CD0);
  v102 = v101 + (v101 >> 6) - ((2 * (v101 + (v101 >> 6))) & 0x86CFA3AD679F568CLL) - 0x3C982E294C3054BALL;
  v103 = (((v102 ^ 0x4E669A1DC5DDDF0DLL) - 0x4E669A1DC5DDDF0DLL) ^ ((v102 ^ 0xBAD682E8778460ADLL) + 0x45297D17887B9F53) ^ ((v102 ^ 0x37D7C923019614E6) - 0x37D7C923019614E6))
       + 0x11B237A69494C1C7;
  LODWORD(v102) = v102 ^ v50;
  v104 = v103 + (v103 >> 29) - ((v103 + (v103 >> 29)) >> 8);
  v105 = v104 + (v104 >> 1);
  LODWORD(v104) = v105 ^ v52;
  v106 = v105 + ((v105 + 0x26B82B458888647ALL) >> 25) + 0x74CFA629F074E00BLL;
  v107 = (v106 ^ 0x3DE8B593554BF16FLL) & (2 * (v106 & 0xB1E8851B9813846FLL)) ^ v106 & 0xB1E8851B9813846FLL;
  v108 = ((2 * (v106 ^ 0x1CA8BFB67569F1A1)) ^ 0x5A80755BDAF4EB9CLL) & (v106 ^ 0x1CA8BFB67569F1A1) ^ (2 * (v106 ^ 0x1CA8BFB67569F1A1)) & 0xAD403AADED7A75CELL;
  v109 = v108 ^ 0xA5400AA4250A1442;
  v110 = (v108 ^ 0x8003008C050218CLL) & (4 * v107) ^ v107;
  v111 = ((4 * v109) ^ 0xB500EAB7B5E9D738) & v109 ^ (4 * v109) & 0xAD403AADED7A75CCLL;
  v112 = (v111 ^ 0xA5002AA5A5685500) & (16 * v110) ^ v110;
  v113 = ((16 * (v111 ^ 0x8401008481220C6)) ^ 0xD403AADED7A75CE0) & (v111 ^ 0x8401008481220C6) ^ (16 * (v111 ^ 0x8401008481220C6)) & 0xAD403AADED7A75C0;
  v114 = (v113 ^ 0x84002A8CC5225400) & (v112 << 8) ^ v112;
  v115 = (((v113 ^ 0x294010212858210ELL) << 8) ^ 0x403AADED7A75CE00) & (v113 ^ 0x294010212858210ELL) ^ ((v113 ^ 0x294010212858210ELL) << 8) & 0xAD403AADED7A7500;
  v116 = v114 ^ 0xAD403AADED7A75CELL ^ (v115 ^ 0x28AD68700000) & (v114 << 16);
  v117 = (v106 ^ (2
                * ((v116 << 32) & 0x2D403AAD00000000 ^ v116 ^ ((v116 << 32) ^ 0x6D7A75CE00000000) & (((v115 ^ 0xAD401200850A31CELL) << 16) & 0x2D403AAD00000000 ^ 0x540128500000000 ^ (((v115 ^ 0xAD401200850A31CELL) << 16) ^ 0x3AADED7A00000000) & (v115 ^ 0xAD401200850A31CELL))))) >> 14;
  v118 = v106
       - (((v117 ^ 0x3C1430EFEA75C79CLL) - 0x5EBBB3BF27C4D21DLL) ^ ((v117 ^ 0x559AC547F298FDB2) - 0x373546173F29E833) ^ ((v117 ^ 0x698C320A5D8C31B3) - 0xB23B15A903D2432))
       + 0x49598A95AF3F9E57;
  v119 = (v118 ^ 0xD5C1A54A77EB87FFLL) & (2 * (v118 & 0x5E1B5936003C7FCLL)) ^ v118 & 0x5E1B5936003C7FCLL;
  v120 = ((2 * (v118 ^ 0xDCC18C4E77ED87F7)) ^ 0xB24073BA2FDC8016) & (v118 ^ 0xDCC18C4E77ED87F7) ^ (2 * (v118 ^ 0xDCC18C4E77ED87F7)) & 0xD92039DD17EE400ALL;
  v121 = v120 ^ 0x4920084510224009;
  v122 = (v120 ^ 0x10003098000C0000) & (4 * v119) ^ v119;
  v123 = ((4 * v121) ^ 0x6480E7745FB9002CLL) & v121 ^ (4 * v121) & 0xD92039DD17EE4008;
  v124 = (v123 ^ 0x4000215417A80000) & (16 * v122) ^ v122;
  v125 = ((16 * (v123 ^ 0x9920188900464003)) ^ 0x92039DD17EE400B0) & (v123 ^ 0x9920188900464003) ^ (16 * (v123 ^ 0x9920188900464003)) & 0xD92039DD17EE4000;
  v126 = (v125 ^ 0x900019D116E40000) & (v124 << 8) ^ v124;
  v127 = (((v125 ^ 0x4920200C010A400BLL) << 8) ^ 0x2039DD17EE400B00) & (v125 ^ 0x4920200C010A400BLL) ^ ((v125 ^ 0x4920200C010A400BLL) << 8) & 0xD92039DD17EE4000;
  v128 = v126 ^ 0xD92039DD17EE400BLL ^ (v127 ^ 0x20191506400000) & (v126 << 16);
  v129 = (v118 ^ (2
                * ((v128 << 32) & 0x592039DD00000000 ^ v128 ^ ((v128 << 32) ^ 0x17EE400B00000000) & (((v127 ^ 0xD90020C811AE400BLL) << 16) & 0x592039DD00000000 ^ 0x4020281100000000 ^ (((v127 ^ 0xD90020C811AE400BLL) << 16) ^ 0x39DD17EE00000000) & (v127 ^ 0xD90020C811AE400BLL))))) >> 6;
  v130 = v118
       - (((v129 ^ 0x9BB09A07D22085A4) - 0xFAABC0B4193775BLL) ^ ((v129 ^ 0xA099CBB346D7F4BBLL) - 0x3483EDBFD5640644) ^ ((v129 ^ 0x397ED6AC79C80C00) + 0x529B0F5F15840101))
       - 0x352C8951EFB7E33DLL;
  v131 = (v130 ^ 0x34F41998DD0F9218) & (2 * (v130 & 0xA4C09DD0D12F1B59)) ^ v130 & 0xA4C09DD0D12F1B59;
  v132 = ((2 * (v130 ^ 0x757432B85F45A08ALL)) ^ 0xA3695ED11CD577A6) & (v130 ^ 0x757432B85F45A08ALL) ^ (2 * (v130 ^ 0x757432B85F45A08ALL)) & 0xD1B4AF688E6ABBD2;
  v133 = v132 ^ 0x5094A128822A8851;
  v134 = (v132 ^ 0x81000E400C403380) & (4 * v131) ^ v131;
  v135 = ((4 * v133) ^ 0x46D2BDA239AAEF4CLL) & v133 ^ (4 * v133) & 0xD1B4AF688E6ABBD0;
  v136 = (v135 ^ 0x4090AD20082AAB40) & (16 * v134) ^ v134;
  v137 = ((16 * (v135 ^ 0x9124024886401093)) ^ 0x1B4AF688E6ABBD30) & (v135 ^ 0x9124024886401093) ^ (16 * (v135 ^ 0x9124024886401093)) & 0xD1B4AF688E6ABBD0;
  v138 = (v137 ^ 0x1100A608862AB900) & (v136 << 8) ^ v136;
  v139 = (((v137 ^ 0xC0B40960084002C3) << 8) ^ 0xB4AF688E6ABBD300) & (v137 ^ 0xC0B40960084002C3) ^ ((v137 ^ 0xC0B40960084002C3) << 8) & 0xD1B4AF688E6ABB00;
  v140 = v138 ^ 0xD1B4AF688E6ABBD3 ^ (v139 ^ 0x90A428080A2A0000) & (v138 << 16);
  v141 = v130 ^ (2
               * ((v140 << 32) & 0x51B4AF6800000000 ^ v140 ^ ((v140 << 32) ^ 0xE6ABBD300000000) & (((v139 ^ 0x41108760844028D3) << 16) & 0x51B4AF6800000000 ^ 0x5094210000000000 ^ (((v139 ^ 0x41108760844028D3) << 16) ^ 0x2F688E6A00000000) & (v139 ^ 0x41108760844028D3))));
  v142 = ((((v141 >> 26) ^ 0x5C2608AFA3EC7BCBLL) + 0x4B0581C2474B2555) ^ (((v141 >> 26) ^ 0xC2655928F80D095ALL)
                                                                          - 0x2AB92FBAE355A83ALL) ^ (((v141 >> 26) ^ 0x9E43519C6DC76E03) - 0x769F270E769FCF63))
       + (((v141 ^ 0xC2DE8719A1FDE979) - 0x60DF175EDC05231DLL) ^ ((v141 ^ 0xEB3622DFFA0453EELL) - 0x4937B29887FC998ALL) ^ ((v141 ^ 0x45303DB413B4B7B0) + 0x18CE520C91B3822CLL));
  v143 = ((v142 - 0x29229CF32B7BB550) ^ 0xDED993B98E223A20) & (2
                                                                 * ((v142 - 0x29229CF32B7BB550) & 0xE0D81BB18EB03A85)) ^ (v142 - 0x29229CF32B7BB550) & 0xE0D81BB18EB03A85;
  v144 = ((2 * ((v142 - 0x29229CF32B7BB550) ^ 0x5EE994F98F025A28)) ^ 0x7C631E900364C15ALL) & ((v142
                                                                                                 - 0x29229CF32B7BB550) ^ 0x5EE994F98F025A28) ^ (2 * ((v142 - 0x29229CF32B7BB550) ^ 0x5EE994F98F025A28)) & 0xBE318F4801B260ACLL;
  v145 = v144 ^ 0x82108148009220A5;
  v146 = (v144 ^ 0x4200E0001004008) & (4 * v143) ^ v143;
  v147 = ((4 * v145) ^ 0xF8C63D2006C982B4) & v145 ^ (4 * v145) & 0xBE318F4801B260ACLL;
  v148 = (v147 ^ 0xB8000D00008000A0) & (16 * v146) ^ v146;
  v149 = ((16 * (v147 ^ 0x631824801326009)) ^ 0xE318F4801B260AD0) & (v147 ^ 0x631824801326009) ^ (16 * (v147 ^ 0x631824801326009)) & 0xBE318F4801B260A0;
  v150 = (v149 ^ 0xA210840001220000) & (v148 << 8) ^ v148;
  v151 = (((v149 ^ 0x1C210B480090602DLL) << 8) ^ 0x318F4801B260AD00) & (v149 ^ 0x1C210B480090602DLL) ^ ((v149 ^ 0x1C210B480090602DLL) << 8) & 0xBE318F4801B26000;
  v152 = v150 ^ 0xBE318F4801B260ADLL ^ (v151 ^ 0x3001080000200000) & (v150 << 16);
  v153 = v142
       + 0x34D1D97096243C8DLL
       + ((((v142 - 0x29229CF32B7BB550) ^ (2
                                           * ((v152 << 32) & 0x3E318F4800000000 ^ v152 ^ ((v152 << 32) ^ 0x1B260AD00000000) & (((v151 ^ 0x8E308748019240ADLL) << 16) & 0x3E318F4800000000 ^ 0x30318E4800000000 ^ (((v151 ^ 0x8E308748019240ADLL) << 16) ^ 0xF4801B200000000) & (v151 ^ 0x8E308748019240ADLL))))) >> 9) ^ 0xFFB1927D67391582);
  v154 = (v153 ^ 0x70DB040DA9446484) & (2 * (v153 & 0x82E3A54DCD1048A9)) ^ v153 & 0x82E3A54DCD1048A9;
  v155 = ((2 * (v153 ^ 0x70DA4416BB44E484)) ^ 0xE473C2B6ECA9585ALL) & (v153 ^ 0x70DA4416BB44E484) ^ (2 * (v153 ^ 0x70DA4416BB44E484)) & 0xF239E15B7654AC2CLL;
  v156 = v155 ^ 0x120821491254A425;
  v157 = (v155 ^ 0x11801264000008) & (4 * v154) ^ v154;
  v158 = ((4 * v156) ^ 0xC8E7856DD952B0B4) & v156 ^ (4 * v156) & 0xF239E15B7654AC2CLL;
  v159 = (v158 ^ 0xC02181495050A020) & (16 * v157) ^ v157;
  v160 = ((16 * (v158 ^ 0x3218601226040C09)) ^ 0x239E15B7654AC2D0) & (v158 ^ 0x3218601226040C09) ^ (16 * (v158 ^ 0x3218601226040C09)) & 0xF239E15B7654AC20;
  v161 = (v160 ^ 0x2218011364408000) & (v159 << 8) ^ v159;
  v162 = (((v160 ^ 0xD021E04812142C2DLL) << 8) ^ 0x39E15B7654AC2D00) & (v160 ^ 0xD021E04812142C2DLL) ^ ((v160 ^ 0xD021E04812142C2DLL) << 8) & 0xF239E15B7654AC00;
  v163 = v161 ^ 0xF239E15B7654AC2DLL ^ (v162 ^ 0x3021415254040000) & (v161 << 16);
  v164 = (v153 ^ (2
                * ((v163 << 32) & 0x7239E15B00000000 ^ v163 ^ ((v163 << 32) ^ 0x7654AC2D00000000) & (((v162 ^ 0xC218A0092250802DLL) << 16) & 0x7239E15B00000000 ^ 0x1220810B00000000 ^ (((v162 ^ 0xC218A0092250802DLL) << 16) ^ 0x615B765400000000) & (v162 ^ 0xC218A0092250802DLL))))) >> 5;
  v165 = v153
       + 0x3337819FAF584A0FLL
       + (((v164 ^ 0x33AE7A5E40AD11D1) + 0x28CB8C49087766D2) ^ ((v164 ^ 0xD3BD959E6095EF2ALL) - 0x37279C76D7B067D5) ^ ((v164 ^ 0xE40666FF6935367CLL) - 0x9C6F17DE10BE83));
  v166 = (v165 ^ 0x22BB109493D9BF82) & (2 * (v165 & 0x303BA4861BE03F12)) ^ v165 & 0x303BA4861BE03F12;
  v167 = ((2 * (v165 ^ 0x62EE5890A259FB86)) ^ 0xA5ABF82D73738928) & (v165 ^ 0x62EE5890A259FB86) ^ (2 * (v165 ^ 0x62EE5890A259FB86)) & 0x52D5FC16B9B9C494;
  v168 = v167 ^ 0x5254041288884494;
  v169 = (v167 ^ 0x81B00031018000) & (4 * v166) ^ v166;
  v170 = ((4 * v168) ^ 0x4B57F05AE6E71250) & v168 ^ (4 * v168) & 0x52D5FC16B9B9C494;
  v171 = (v170 ^ 0x4255F012A0A10000) & (16 * v169) ^ v169;
  v172 = ((16 * (v170 ^ 0x10800C041918C484)) ^ 0x2D5FC16B9B9C4940) & (v170 ^ 0x10800C041918C484) ^ (16 * (v170 ^ 0x10800C041918C484)) & 0x52D5FC16B9B9C490;
  v173 = (v172 ^ 0x55C00299984000) & (v171 << 8) ^ v171;
  v174 = (((v172 ^ 0x52803C1420218494) << 8) ^ 0xD5FC16B9B9C49400) & (v172 ^ 0x52803C1420218494) ^ ((v172 ^ 0x52803C1420218494) << 8) & 0x52D5FC16B9B9C400;
  v175 = v173 ^ 0x52D5FC16B9B9C494 ^ (v174 ^ 0x50D41410B9800000) & (v173 << 16);
  v176 = v165 ^ (2
               * ((v175 << 32) & 0x52D5FC1600000000 ^ v175 ^ ((v175 << 32) ^ 0x39B9C49400000000) & (((v174 ^ 0x201E80600394094) << 16) & 0x52D5FC1600000000 ^ 0x2C1440600000000 ^ (((v174 ^ 0x201E80600394094) << 16) ^ 0x7C16B9B900000000) & (v174 ^ 0x201E80600394094))));
  LODWORD(STACK[0x6A90]) = v1 ^ v102 ^ 0x47D4B039 ^ v176;
  v177 = ((v176 ^ 0x47ACA88F42606C77) + 0x26439E233B2BD0C4) ^ ((v176 ^ 0x208A52767E97431) + 0x63E7938B1EA2C886) ^ ((v176 ^ 0xF117D92B4D1AAE7CLL) - 0x6F071078CBAEED37);
  v178 = ((v177 + 0x267A5D49F5A506CALL) ^ 0x3E3D4BDA85C33861) & (2
                                                                 * ((v177 + 0x267A5D49F5A506CALL) & 0xBCB98C1CD1C43171)) ^ (v177 + 0x267A5D49F5A506CALL) & 0xBCB98C1CD1C43171;
  v179 = ((2 * ((v177 + 0x267A5D49F5A506CALL) ^ 0x561F53D327CB1AE1)) ^ 0xD54DBF9FEC1E5720) & ((v177
                                                                                                 + 0x267A5D49F5A506CALL) ^ 0x561F53D327CB1AE1) ^ (2 * ((v177 + 0x267A5D49F5A506CALL) ^ 0x561F53D327CB1AE1)) & 0xEAA6DFCFF60F2B90;
  v180 = v179 ^ 0x2AA2404012012890;
  v181 = (v179 ^ 0xC0041087C4000300) & (4 * v178) ^ v178;
  v182 = ((4 * v180) ^ 0xAA9B7F3FD83CAE40) & v180 ^ (4 * v180) & 0xEAA6DFCFF60F2B90;
  v183 = (v182 ^ 0xAA825F0FD00C2A00) & (16 * v181) ^ v181;
  v184 = ((16 * (v182 ^ 0x402480C026030190)) ^ 0xAA6DFCFF60F2B900) & (v182 ^ 0x402480C026030190) ^ (16 * (v182 ^ 0x402480C026030190)) & 0xEAA6DFCFF60F2B90;
  v185 = (v184 ^ 0xAA24DCCF60022900) & (v183 << 8) ^ v183;
  v186 = (((v184 ^ 0x40820300960D0290) << 8) ^ 0xA6DFCFF60F2B9000) & (v184 ^ 0x40820300960D0290) ^ ((v184 ^ 0x40820300960D0290) << 8) & 0xEAA6DFCFF60F2B00;
  v187 = v185 ^ 0xEAA6DFCFF60F2B90 ^ (v186 ^ 0xA286CFC6060B0000) & (v185 << 16);
  v188 = v177
       - 0x1CCC16993896C7C4
       + ((((v177 + 0x267A5D49F5A506CALL) ^ (2
                                           * ((v187 << 32) & 0x6AA6DFCF00000000 ^ v187 ^ ((v187 << 32) ^ 0x760F2B9000000000) & (((v186 ^ 0x48201009F0042B90) << 16) & 0x6AA6DFCF00000000 ^ 0x202009C000000000 ^ (((v186 ^ 0x48201009F0042B90) << 16) ^ 0x5FCFF60F00000000) & (v186 ^ 0x48201009F0042B90))))) >> 26) ^ 0xFFFFFFD481F6DF30);
  v189 = v188 + (v188 >> 15) + ((v188 + (v188 >> 15)) >> 6);
  LODWORD(STACK[0x6AA0]) = v2 ^ v104 ^ 0xFCD01C77 ^ (v189 - ((2 * v189) & 0xAA0D9832) + 1426508825);
  LODWORD(STACK[0x6910]) = LODWORD(STACK[0x6890]) ^ 0xE58F032E;
  LODWORD(STACK[0x6650]) = LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x6A80]) ^ 0xE7E7E7E7;
  v190 = STACK[0x6AB0];
  if ((*(_BYTE *)(v190
                 + ((*(_BYTE *)(v190
                              + (*(_BYTE *)(v190 + ((*(unsigned __int8 *)(STACK[0x6AB0] + 1) + 13) & 0xFLL)) & 0xF))
                   + 6) & 0xF)) & 0xE) != 0)
    v191 = *(_BYTE *)(v190
                    + ((*(_BYTE *)(v190
                                 + (*(_BYTE *)(v190
                                             + ((*(unsigned __int8 *)(STACK[0x6AB0] + 1) + 13) & 0xFLL)) & 0xF))
                      + 6) & 0xF)) & 0xF;
  else
    v191 = 1;
  v192 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6A60]);
  STACK[0x6AC0] = v191;
  STACK[0x6A40] = v191 - 1;
  return v192();
}

uint64_t sub_100A61670@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;

  LODWORD(STACK[0x6A80]) = a1;
  v6 = STACK[0x6A60];
  v7 = (STACK[0x6A60] + 631908293) & 0xDA559C7F;
  v8 = *(unsigned __int8 *)(v5 + v4) * v2 - 1458335895;
  LODWORD(STACK[0x6A50]) = v7;
  v9 = ((2 * (v8 ^ 0xDD8F52F3)) ^ (v7 + 382088274)) & (v8 ^ 0xDD8F52F3) ^ (2 * (v8 ^ 0xDD8F52F3)) & 0x8B632264;
  v10 = v9 ^ 0x89212224;
  v11 = (v8 ^ 0x54CF72D7) & (2 * (v8 & 0x56EC7097)) ^ v8 & 0x56EC7097;
  v12 = (v9 ^ 0x2422040) & (4 * v11) ^ v11;
  v13 = ((4 * v10) ^ 0x2D8C8990) & v10 ^ (4 * v10) & 0x8B632264;
  v14 = (v13 ^ 0x9000004) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x82632264)) ^ 0xB6322640) & (v13 ^ 0x82632264) ^ (16 * (v13 ^ 0x82632264)) & 0x8B632260;
  v16 = v14 ^ 0x8B632264 ^ (v15 ^ 0x82222224) & (v14 << 8);
  v17 = v8 ^ (2
            * ((v16 << 16) & 0xB630000 ^ v16 ^ ((v16 << 16) ^ 0x22640000) & (((v15 ^ 0x9410024) << 8) & 0x8B630000 ^ 0x8410000 ^ (((v15 ^ 0x9410024) << 8) ^ 0x63220000) & (v15 ^ 0x9410024))));
  v18 = (a2 - 2129092674 + (~(2 * a2) | 0xFDCEC085)) ^ 0xC5F2ABE2 ^ v17;
  v19 = v4 + 381614783 + v18;
  v20 = 2 * (v19 & 0xE9410541);
  v21 = v20 & (v19 ^ 0xD8908264);
  v22 = v20 & 0x10800200 | v19 & 0xE9410541;
  v23 = ((2 * (v19 ^ 0xD8908264)) ^ 0x63A30E4A) & (v19 ^ 0xD8908264) ^ (2 * (v19 ^ 0xD8908264)) & 0x31D18724;
  v24 = v23 ^ 0x10508125;
  v25 = (v23 ^ 0x31508621) & (4 * (v22 ^ v21)) ^ v22 ^ v21;
  v26 = ((4 * v24) ^ 0xC7461C94) & v24 ^ (4 * v24) & 0x31D18724;
  v27 = (v26 ^ 0x1400401) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x30918321)) ^ 0x1D187250) & (v26 ^ 0x30918321) ^ (16 * (v26 ^ 0x30918321)) & 0x31D18720;
  v29 = v27 ^ 0x31D18725 ^ (v28 ^ 0x11100225) & (v27 << 8);
  v30 = v19 ^ (2
             * ((v29 << 16) & 0x31D10000 ^ v29 ^ ((v29 << 16) ^ 0x7250000) & (((v28 ^ 0x20C18525) << 8) & 0x31D10000 ^ 0x20500000 ^ (((v28 ^ 0x20C18525) << 8) ^ 0x51870000) & (v28 ^ 0x20C18525))));
  v31 = ((HIWORD(v30) ^ 0x9BA159EC) + 1575285079) ^ ((HIWORD(v30) ^ 0x5B0B4141) - 1655772676) ^ ((HIWORD(v30) ^ 0xC0AA904D)
                                                                                               + 116340984);
  v32 = v4 - 2025052834 + v18 - v31;
  v33 = (v32 ^ 0x3EF8F8FC) & (2 * (v32 & 0x3EF8FAFD)) ^ v32 & 0x3EF8FAFD;
  v34 = ((2 * (v32 ^ 0x5FD828A6)) ^ 0xC241A4B6) & (v32 ^ 0x5FD828A6) ^ (2 * (v32 ^ 0x5FD828A6)) & 0x6120D25A;
  v35 = v34 ^ 0x21205249;
  v36 = (v34 ^ 0x40008011) & (4 * v33) ^ v33;
  v37 = ((4 * v35) ^ 0x8483496C) & v35 ^ (4 * v35) & 0x6120D258;
  v38 = (v37 ^ 0x4040) & (16 * v36) ^ v36;
  v39 = ((16 * (v37 ^ 0x61209213)) ^ 0x120D25B0) & (v37 ^ 0x61209213) ^ (16 * (v37 ^ 0x61209213)) & 0x6120D250;
  v40 = (v32 ^ (2
              * (((v38 ^ 0x6120D25B ^ v39 & (v38 << 8)) << 16) & 0x61200000 ^ v38 ^ 0x6120D25B ^ v39 & (v38 << 8) ^ (((v38 ^ 0x6120D25B ^ v39 & (v38 << 8)) << 16) ^ 0x525B0000) & (((v39 ^ 0x6120D24B) << 8) & 0x61200000 ^ 0x41200000 ^ (((v39 ^ 0x6120D24B) << 8) ^ 0x20D20000) & (v39 ^ 0x6120D24Bu))))) >> 8;
  v41 = v4
      + v18
      + (((v40 ^ 0x4C9F16A9) + 1011234517) ^ ((v40 ^ 0x7C57A86A) + 210667544) ^ ((v40 ^ 0x30B4079D) + 1080895457))
      - v31;
  v42 = v41 + 731786092;
  v43 = ((v41 + 731786092) ^ 0xA89113E2) & (2 * ((v41 + 731786092) & 0x2A015BCB)) ^ (v41 + 731786092) & 0x2A015BCB;
  v44 = ((2 * ((v41 + 731786092) ^ 0xFC918374)) ^ 0xAD21B17E) & ((v41 + 731786092) ^ 0xFC918374) ^ (2
                                                                                                  * ((v41 + 731786092) ^ 0xFC918374)) & 0xD690D8BE;
  v45 = v44 ^ 0x52904881;
  v46 = (v44 ^ 0x829090BC) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0x5A4362FC) & v45 ^ (4 * v45) & 0xD690D8BC;
  v48 = v47 ^ 0x84909803;
  v49 = (v47 ^ 0x520040B3) & (16 * v46) ^ v46;
  v50 = ((16 * v48) ^ 0x690D8BF0) & v48 ^ (16 * v48) & 0xD690D8B0;
  v51 = v41 + 1895288844;
  v52 = v49 ^ 0xD690D8BF;
  v53 = ((v41 + 1895288844) ^ 0x7882754) & (2 * ((v41 + 1895288844) & 0x5402B796)) ^ (v41 + 1895288844) & 0x5402B796;
  v54 = v50 ^ 0x9690500F;
  v55 = ((2 * ((v41 + 1895288844) ^ 0x278D0B74)) ^ 0xE71F79C4) & ((v41 + 1895288844) ^ 0x278D0B74) ^ (2 * ((v41 + 1895288844) ^ 0x278D0B74)) & 0x738FBCE2;
  v56 = (v50 ^ 0x4000880F) & (v49 << 8);
  v57 = ((4 * (v55 ^ 0x10808422)) ^ 0xCE3EF388) & (v55 ^ 0x10808422) ^ (4 * (v55 ^ 0x10808422)) & 0x738FBCE0;
  v58 = v57 ^ 0x31810C62;
  v59 = (v57 ^ 0x420EB080) & (16 * ((v55 ^ 0x608F38C0) & (4 * v53) ^ v53)) ^ (v55 ^ 0x608F38C0) & (4 * v53) ^ v53;
  v60 = (v54 << 8) & 0x56900000;
  v61 = ((16 * v58) ^ 0x38FBCE20) & v58 ^ (16 * v58) & 0x738FBCE0;
  v62 = v52 ^ v56;
  v63 = ((v54 << 8) ^ 0x10D80000) & v54;
  v64 = v41 - 531443593;
  v65 = (v41 - 531443593) ^ 0x77F0B1FD;
  v66 = v59 ^ 0x738FBCE2 ^ (v61 ^ 0x308B8C00) & (v59 << 8);
  v67 = (v64 ^ 0x57F0B7D5) & (2 * (v64 & 0x5402B796)) ^ v64 & 0x5402B796;
  v68 = ((2 * v65) ^ 0x47E40CD6) & v65 ^ (2 * v65) & 0x23F2066A;
  v69 = v60 ^ 0x46000000 ^ v63;
  v70 = ((4 * (v68 ^ 0x20120229)) ^ 0x8FC819AC) & (v68 ^ 0x20120229) ^ (4 * (v68 ^ 0x20120229)) & 0x23F20668;
  v71 = ((v61 ^ 0x430430C2) << 8) & 0x738F0000 ^ 0x70030000 ^ (((v61 ^ 0x430430C2) << 8) ^ 0x8FBC0000) & (v61 ^ 0x430430C2);
  v72 = (v70 ^ 0x3C00023) & (16 * ((v68 ^ 0x440) & (4 * v67) ^ v67)) ^ (v68 ^ 0x440) & (4 * v67) ^ v67;
  v73 = ((16 * (v70 ^ 0x20320643)) ^ 0x3F2066B0) & (v70 ^ 0x20320643) ^ (16 * (v70 ^ 0x20320643)) & 0x23F20660;
  v74 = v72 ^ 0x23F2066B ^ (v73 ^ 0x2320064B) & (v72 << 8);
  v75 = ((v62 << 16) ^ 0x58BF0000) & v69;
  v76 = v64 ^ (2
             * ((v74 << 16) & 0x23F20000 ^ v74 ^ ((v74 << 16) ^ 0x66B0000) & (((v73 ^ 0xD2004B) << 8) & 0x23F20000 ^ (((v73 ^ 0xD2004B) << 8) ^ 0x72060000) & (v73 ^ 0xD2004B) ^ 0x1F00000))) ^ 0xE908F988;
  v77 = v4 + (v17 ^ 0xBAC07697 ^ v76) - (((v17 ^ 0xBAC07697 ^ v76) + v4) >> 16);
  v78 = (v77 ^ 0xD5D3FB7F) + 775740920 + ((2 * v77) & 0xABA7F6FE);
  v79 = (v78 ^ 0xFBCF8669) & (2 * (v78 & 0xFBEF2689)) ^ v78 & 0xFBEF2689;
  v80 = ((2 * (v78 ^ 0xB9538F69)) ^ 0x857953C0) & (v78 ^ 0xB9538F69) ^ (2 * (v78 ^ 0xB9538F69)) & 0x42BCA9E0;
  v81 = ((4 * (v80 ^ 0x4284A820)) ^ 0xAF2A780) & (v80 ^ 0x4284A820) ^ (4 * (v80 ^ 0x4284A820)) & 0x42BCA9E0;
  v82 = (v81 ^ 0x2B0A180) & (16 * ((v80 ^ 0x380040) & (4 * v79) ^ v79)) ^ (v80 ^ 0x380040) & (4 * v79) ^ v79;
  v83 = ((16 * (v81 ^ 0x400C0860)) ^ 0x2BCA9E00) & (v81 ^ 0x400C0860) ^ (16 * (v81 ^ 0x400C0860)) & 0x42BCA9E0;
  v84 = v82 ^ 0x42BCA9E0 ^ (v83 ^ 0x28888E0) & (v82 << 8);
  v85 = v78 ^ (2
             * ((v84 << 16) & 0x42BC0000 ^ v84 ^ ((v84 << 16) ^ 0x29E00000) & (((v83 ^ 0x403421E0) << 8) & 0x42BC0000 ^ 0x42140000 ^ (((v83 ^ 0x403421E0) << 8) ^ 0x3CA90000) & (v83 ^ 0x403421E0))));
  v86 = (v62 << 16) & 0x56900000 ^ v62 ^ v75;
  v87 = v78
      + ((((v85 >> 8) ^ 0x86F4F4F7) + 1957559907) ^ (((v85 >> 8) ^ 0xB6AF2FAF) + 1156982075) ^ (((v85 >> 8) ^ 0x30240D2D)
                                                                                              - 1031993415));
  v88 = v87 + 1284055943;
  v89 = ((v87 + 1284055943) ^ 0xB9BF0401) & (2 * ((v87 + 1284055943) & 0xBD3F2621)) ^ (v87 + 1284055943) & 0xBD3F2621;
  v90 = ((2 * ((v87 + 1284055943) ^ 0xCB810401)) ^ 0xED7C4440) & ((v87 + 1284055943) ^ 0xCB810401) ^ (2 * ((v87 + 1284055943) ^ 0xCB810401)) & 0x76BE2220;
  v91 = v90 ^ 0x12822220;
  v92 = (v90 ^ 0x663E0220) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0xDAF88880) & v91 ^ (4 * v91) & 0x76BE2220;
  v94 = v93 ^ 0x24062220;
  v95 = (v93 ^ 0x52B80000) & (16 * v92) ^ v92;
  v96 = v87 - 22741551;
  v97 = ((16 * v94) ^ 0x6BE22200) & v94 ^ (16 * v94) & 0x76BE2220;
  v98 = v95 ^ 0x76BE2220;
  v99 = (v96 ^ 0x727F2B28) & (2 * (v96 & 0x7A7E4C42)) ^ v96 & 0x7A7E4C42;
  v100 = v97 ^ 0x141C0020;
  v101 = ((2 * (v96 ^ 0xC27FA32C)) ^ 0x7003DEDC) & (v96 ^ 0xC27FA32C) ^ (2 * (v96 ^ 0xC27FA32C)) & 0xB801EF6E;
  v102 = (v101 ^ 0x3001422A) & (4 * v99) ^ v99;
  v103 = (v97 ^ 0x62A22200) & (v95 << 8);
  v104 = ((4 * (v101 ^ 0x88002122)) ^ 0xE007BDB8) & (v101 ^ 0x88002122) ^ (4 * (v101 ^ 0x88002122)) & 0xB801EF6C;
  v105 = ((16 * (v104 ^ 0x18004246)) ^ 0x801EF6E0) & (v104 ^ 0x18004246) ^ (16 * (v104 ^ 0x18004246)) & 0xB801EF60;
  v106 = v105 ^ 0x3801090E;
  v107 = v98 ^ v103;
  v108 = v87 + 1845493308;
  v109 = (v87 + 1845493308) ^ 0x3A996617;
  v110 = ((v87 + 1845493308) ^ 0x7A7D6E13) & (2 * ((v87 + 1845493308) & 0x7A7E4C42)) ^ (v87 + 1845493308) & 0x7A7E4C42;
  v111 = (v104 ^ 0xA001AD20) & (16 * v102) ^ v102 ^ 0xB801EF6E ^ (v105 ^ 0x8000E60E) & (((v104 ^ 0xA001AD20) & (16 * v102) ^ v102) << 8);
  v112 = ((v105 ^ 0x3801090E) << 8) & 0xB8010000;
  v113 = ((2 * v109) ^ 0x81CE54AA) & v109 ^ (2 * v109) & 0x40E72A54;
  v114 = v113 ^ 0xC20845;
  v115 = ((v106 << 8) ^ 0x1EF0000) & v106;
  v116 = ((4 * (v113 ^ 0x40212A55)) ^ 0x39CA954) & (v113 ^ 0x40212A55) ^ (4 * (v113 ^ 0x40212A55)) & 0x40E72A54;
  v117 = v116 ^ 0x40630201;
  v118 = v114 & (4 * v110) ^ v110 ^ 0x40E72A55 ^ (v116 ^ 0x842841) & (16 * (v114 & (4 * v110) ^ v110));
  v119 = v112 ^ v115;
  v120 = (16 * v117) & 0x40E72A50 ^ 0x40850A05 ^ ((16 * v117) ^ 0xE72A550) & v117;
  v121 = (v118 << 8) & 0x40E72A00 ^ v118 ^ ((v118 << 8) ^ 0xE72A5500) & v120;
  v122 = ((v107 << 16) ^ 0x22200000) & ((v100 << 8) & 0x76BE0000 ^ 0x409C0000 ^ ((v100 << 8) ^ 0xBE220000) & v100);
  v123 = v17 ^ 0x9C0FEC15 ^ v108 ^ (2
                                  * ((v121 << 16) & 0x40E70000 ^ v121 ^ ((v121 << 16) ^ 0x2A550000) & ((v120 << 8) & 0x40E70000 ^ 0xC50000 ^ ((v120 << 8) ^ 0x672A0000) & v120))) ^ 0xA39BC0A2;
  v124 = (v107 << 16) & 0x76BE0000 ^ v107;
  v125 = v4 + 36102498 + v123;
  v126 = (v125 ^ 0xFDDD1C9F) & (2 * (v125 & 0xFDD91E9E)) ^ v125 & 0xFDD91E9E;
  v127 = ((2 * (v125 ^ 0x6F5D15A7)) ^ 0x25081672) & (v125 ^ 0x6F5D15A7) ^ (2 * (v125 ^ 0x6F5D15A7)) & v3;
  v128 = v127 ^ (v3 - 559);
  v129 = (v127 ^ 0x230) & (4 * v126) ^ v126;
  v130 = ((4 * v128) ^ 0x4A102CE4) & v128 ^ (4 * v128) & v3;
  v131 = v130 ^ 0x2000839;
  v132 = (16 * (v130 ^ 0x90840319)) & (v3 - 8) ^ (v3 - 783) ^ ((16 * (v130 ^ 0x90840319)) ^ 0x2840B390) & (v130 ^ 0x90840319);
  v133 = ((v129 ^ (v3 + 1) ^ v131 & (16 * v129)) << 8) & (v3 - 56) ^ v129 ^ (v3 + 1) ^ v131 & (16 * v129) ^ (((v129 ^ (v3 + 1) ^ v131 & (16 * v129)) << 8) ^ 0x840B3900) & v132;
  v134 = (v133 << 16) & 0x12840000 ^ v133 ^ ((v133 << 16) ^ 0x2390000) & ((v132 << 8) & (v3 - 2872) ^ 0x12840000 ^ ((v132 << 8) ^ 0x840B0000) & v132);
  v135 = ((v111 << 16) ^ 0x6F6E0000) & (v119 ^ 0x38000000);
  v136 = ((((v125 ^ (2 * v134)) >> 16) ^ 0x289475AF) - 1222857479) ^ ((((v125 ^ (2 * v134)) >> 16) ^ 0xC56519DB)
                                                                    + 1525530765) ^ ((((v125 ^ (2 * v134)) >> 16) ^ 0xEDF1B0A5)
                                                                                   + 1920559603);
  v137 = v4 - 1765502145 + v123 - v136;
  v138 = ((2 * (v137 ^ 0xBB3ED403)) ^ 0x67FB4C96) & (v137 ^ 0xBB3ED403) ^ (2 * (v137 ^ 0xBB3ED403)) & 0xB3FDA64A;
  v139 = (v137 ^ 0xAABA7003) & (2 * (v137 & 0x8C37248)) ^ v137 & 0x8C37248;
  v140 = v138 ^ 0x9004A249;
  v141 = (v138 ^ 0xB3192008) & (4 * v139) ^ v139;
  v142 = ((4 * v140) ^ 0xCFF6992C) & v140 ^ (4 * v140) & 0xB3FDA648;
  v143 = (v142 ^ 0x83F48003) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x30092643)) ^ 0x3FDA64B0) & (v142 ^ 0x30092643) ^ (16 * (v142 ^ 0x30092643)) & 0xB3FDA640;
  v145 = v143 ^ 0xB3FDA64B ^ (v144 ^ 0x33D82400) & (v143 << 8);
  v146 = (v137 ^ (2
                * ((v145 << 16) & 0x33FD0000 ^ v145 ^ ((v145 << 16) ^ 0x264B0000) & (((v144 ^ 0x8025824B) << 8) & 0x33FD0000 ^ 0x2590000 ^ (((v144 ^ 0x8025824B) << 8) ^ 0x7DA60000) & (v144 ^ 0x8025824B))))) >> 8;
  v147 = v4
       + v123
       + (((v146 ^ 0xCEFA34E4) + 1635303352) ^ ((v146 ^ 0x36CD4498) - 1722822708) ^ ((v146 ^ 0xF81CDA42) + 1469993234))
       - v136;
  v148 = ((v147 - 31580430) ^ 0xF188C4A7) & (2 * ((v147 - 31580430) & 0xF1C0C527)) ^ (v147 - 31580430) & 0xF1C0C527;
  v149 = ((2 * ((v147 - 31580430) ^ 0xD18946E5)) ^ 0x40930784) & ((v147 - 31580430) ^ 0xD18946E5) ^ (2 * ((v147 - 31580430) ^ 0xD18946E5)) & 0x204983C2;
  v150 = v149 ^ 0x20488042;
  v151 = (v149 ^ 0x204981C2) & (4 * v148) ^ v148;
  v152 = ((4 * v150) ^ 0x81260F08) & v150 ^ (4 * v150) & 0x204983C0;
  v153 = (v152 ^ 0x300) & (16 * v151) ^ v151;
  v154 = ((16 * (v152 ^ 0x204980C2)) ^ 0x4983C20) & (v152 ^ 0x204980C2) ^ (16 * (v152 ^ 0x204980C2)) & 0x204983C0;
  v155 = v154 ^ 0x204183C2;
  v156 = LODWORD(STACK[0x6A90]) ^ v42 ^ (2 * v86) ^ v88 ^ (2 * (v124 ^ v122));
  v157 = (v154 ^ 0x204183C2) << 8;
  v158 = v147 + 2075679286;
  v159 = v153 ^ 0x204983C2 ^ (v154 ^ 0x800C2) & (v153 << 8);
  v160 = (v158 ^ 0xCB714B6D) & (2 * (v158 & 0xE3818A4E)) ^ v158 & 0xE3818A4E;
  v161 = (v157 ^ 0x49830000) & v155;
  v162 = ((2 * (v158 ^ 0xA724B75)) ^ 0xD3E78276) & (v158 ^ 0xA724B75) ^ (2 * (v158 ^ 0xA724B75)) & 0xE9F3C13A;
  v163 = v162 ^ 0x28104109;
  v164 = (v162 ^ 0xA0120031) & (4 * v160) ^ v160;
  v165 = ((4 * v163) ^ 0xA7CF04EC) & v163 ^ (4 * v163) & 0xE9F3C138;
  v166 = v157 & 0x20490000 ^ 0x20480000 ^ v161;
  v167 = ((16 * (v165 ^ 0x4830C113)) ^ 0x9F3C13B0) & (v165 ^ 0x4830C113) ^ (16 * (v165 ^ 0x4830C113)) & 0xE9F3C130;
  v168 = (v165 ^ 0xA1C30033) & (16 * v164) ^ v164 ^ 0xE9F3C13B ^ (v167 ^ 0x8930010B) & (((v165 ^ 0xA1C30033) & (16 * v164) ^ v164) << 8);
  LODWORD(STACK[0x6AA0]) ^= 0x3A6544AC ^ v51 ^ v96 ^ (v147 + 2075679286) ^ (2
                                                                          * ((v66 << 16) & 0x738F0000 ^ v66 ^ ((v66 << 16) ^ 0x3CE20000) & v71 ^ v111 ^ ((v111 << 16) & 0x38010000 | 0x882C) ^ v135 ^ v168 ^ (v168 << 16) & 0x69F30000 ^ ((v168 << 16) ^ 0x413B0000) & (((v167 ^ 0x60C3C00B) << 8) & 0xE9F30000 ^ 0x8320000 ^ (((v167 ^ 0x60C3C00B) << 8) ^ 0xF3C10000) & (v167 ^ 0x60C3C00B))));
  LODWORD(STACK[0x6A90]) = v156 ^ (v147 - 31580430) ^ (2
                                                     * ((v159 << 16) & 0x20490000 ^ v159 ^ ((v159 << 16) ^ 0x3C20000) & v166)) ^ 0x83D04A77;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((11932 * (STACK[0x6A40] == v4)) ^ v6)))();
}

uint64_t sub_100A62C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v5 = LODWORD(STACK[0x6A50]) + 17099;
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6930]) ^ 0x2B6DEE38;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v5);
  LODWORD(STACK[0x6580]) = LODWORD(STACK[0x69C0]) + LODWORD(STACK[0x6A30]);
  STACK[0x6A40] = -1304053929;
  return v6(-966845073, 994685282, 2083758404, 0, a5, -1721931845, -342974033);
}

uint64_t sub_100A62D24@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unint64_t v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  unint64_t v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unint64_t v173;
  int v174;
  unint64_t v175;
  unint64_t v176;
  _BOOL4 v177;
  uint64_t (*v178)(unint64_t, unint64_t, unint64_t, uint64_t);

  LODWORD(STACK[0x6A80]) = a7;
  STACK[0x69D0] = a3;
  STACK[0x69E0] = a2;
  STACK[0x69F0] = a1;
  STACK[0x6A00] = v13;
  STACK[0x6A10] = v8;
  STACK[0x6A20] = v10;
  STACK[0x6A30] = v12;
  v19 = (LODWORD(STACK[0x6A50]) + 7843) | 4;
  v20 = *(unsigned __int8 *)(v17 + v11) * v9 + 1705896907;
  LODWORD(STACK[0x6A60]) = v19;
  v21 = ((2 * (v20 ^ 0x3D1221B)) ^ 0x33066C5C) & (v20 ^ 0x3D1221B) ^ (2 * (v20 ^ 0x3D1221B)) & 0x9983362E;
  v22 = (v19 ^ 0x13512D2C ^ v20) & (2 * (v20 & 0x9A521435)) ^ v20 & 0x9A521435;
  v23 = ((4 * (v21 ^ 0x88811222)) ^ 0x660CD8B8) & (v21 ^ 0x88811222) ^ (4 * (v21 ^ 0x88811222)) & 0x9983362C;
  v24 = (v21 ^ 0x1101220E) & (4 * v22) ^ v22;
  v25 = (v23 ^ 0x1020) & (16 * v24);
  v26 = ((16 * (v23 ^ 0x99832606)) ^ 0x983362E0) & (v23 ^ 0x99832606) ^ (16 * (v23 ^ 0x99832606)) & 0x99833620;
  v27 = v25 ^ v24 ^ 0x9983362E ^ (v26 ^ 0x9803220E) & ((v25 ^ v24) << 8);
  v28 = v20 ^ (2
             * ((v27 << 16) & 0x19830000 ^ v27 ^ ((v27 << 16) ^ 0x362E0000) & (((v26 ^ 0x180140E) << 8) & 0x19830000 ^ 0x18810000 ^ (((v26 ^ 0x180140E) << 8) ^ 0x3360000) & (v26 ^ 0x180140E))));
  v29 = (a8 + 1341393024 - ((2 * a8) & 0x9FE81100)) ^ 0xC6A470E9 ^ v28;
  v30 = STACK[0x6AC0] + v16 + v29;
  v31 = ((2 * (v30 ^ 0x6E9F9EB1)) ^ 0xAB4BD14A) & (v30 ^ 0x6E9F9EB1) ^ (2 * (v30 ^ 0x6E9F9EB1)) & 0xD5A5E8A4;
  v32 = v31 ^ 0x54A428A5;
  v33 = (v30 ^ 0x3ABB7691) & (2 * (v30 & 0xBB3A7614)) ^ v30 & 0xBB3A7614;
  v34 = (v31 ^ 0x8105C004) & (4 * v33) ^ v33;
  v35 = ((4 * v32) ^ 0x5697A294) & v32 ^ (4 * v32) & 0xD5A5E8A4;
  v36 = (v35 ^ 0x5485A080) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x81204821)) ^ 0x5A5E8A50) & (v35 ^ 0x81204821) ^ (16 * (v35 ^ 0x81204821)) & 0xD5A5E8A0;
  v38 = v36 ^ 0xD5A5E8A5 ^ (v37 ^ 0x50048800) & (v36 << 8);
  v39 = (v30 ^ (2
              * ((v38 << 16) & 0x55A50000 ^ v38 ^ ((v38 << 16) ^ 0x68A50000) & (((v37 ^ 0x85A160A5) << 8) & 0x55A50000 ^ 0x50050000 ^ (((v37 ^ 0x85A160A5) << 8) ^ 0xA5E80000) & (v37 ^ 0x85A160A5))))) >> 16;
  v40 = ((v39 ^ 0xB70856EB) + 993727020) ^ ((v39 ^ 0xB181AE7A) + 1035135675) ^ ((v39 ^ 0x68969AA) - 1967510165);
  v41 = STACK[0x6AC0] + a1 + v29 - v40;
  v42 = ((2 * (v41 ^ 0xE3B238F3)) ^ 0x4CCD00FC) & (v41 ^ 0xE3B238F3) ^ (2 * (v41 ^ 0xE3B238F3)) & 0x2666807E;
  v43 = v42 ^ 0x22228002;
  v44 = (v41 ^ 0xE19238E9) & (2 * (v41 & 0xC5D4B88D)) ^ v41 & 0xC5D4B88D;
  v45 = (v42 ^ 0x444007E) & (4 * v44) ^ v44;
  v46 = ((4 * v43) ^ 0x999A01F8) & v43 ^ (4 * v43) & 0x2666807C;
  v47 = v45 ^ 0x2666807E ^ (v46 ^ 0x20076) & (16 * v45);
  v48 = (16 * (v46 ^ 0x26648006)) & 0x26668070 ^ 0x6801E ^ ((16 * (v46 ^ 0x26648006)) ^ 0x666807E0) & (v46 ^ 0x26648006);
  v49 = (v47 << 8) & 0x26668000 ^ v47 ^ ((v47 << 8) ^ 0x66807E00) & v48;
  v50 = (v41 ^ (2
              * ((v49 << 16) & 0x26660000 ^ v49 ^ ((v49 << 16) ^ 0x7E0000) & ((v48 << 8) & 0x26660000 ^ 0x660000 ^ ((v48 << 8) ^ 0x66800000) & v48)))) >> 8;
  v51 = v29
      + (((v50 ^ 0x98DA43FC) - 573244119) ^ ((v50 ^ 0x11650D7B) + 1416344496) ^ ((v50 ^ 0x897A9B3F) - 864803348))
      - v40;
  v52 = STACK[0x6AC0] + v13 + v51;
  LODWORD(STACK[0x69A0]) = v52;
  v53 = v52 & 0x9CC7E4DB ^ 0xE3244A65;
  v54 = (2 * (v52 ^ 0x7FE3AEBE)) & 0xE3244A64 ^ 0x21244A25 ^ ((2 * (v52 ^ 0x7FE3AEBE)) ^ 0xC64894CA) & (v52 ^ 0x7FE3AEBE);
  v55 = (4 * ((2 * v53) & 0x61044824 ^ v53 ^ ((2 * v53) ^ 0xC64894CA) & (v52 ^ 0x7FE3AEBE))) & 0xE3244A64 ^ (2 * v53) & 0x61044824 ^ v53 ^ ((2 * v53) ^ 0xC64894CA) & (v52 ^ 0x7FE3AEBE) ^ ((4 * ((2 * v53) & 0x61044824 ^ v53 ^ ((2 * v53) ^ 0xC64894CA) & (v52 ^ 0x7FE3AEBE))) ^ 0x8C912994) & v54;
  v56 = (4 * v54) & 0xE3244A64 ^ 0x63244261 ^ ((4 * v54) ^ 0x8C912994) & v54;
  v57 = (16 * v55) & 0xE3244A60 ^ v55 ^ ((16 * v55) ^ 0x32442610) & v56;
  v58 = (16 * v56) & 0xE3244A60 ^ 0xC1204825 ^ ((16 * v56) ^ 0x3244A650) & v56;
  v59 = STACK[0x6AC0] + a3 + v51;
  v60 = (v59 ^ 0x314FA9A7) & (2 * (v59 & 0x398FC9B6)) ^ v59 & 0x398FC9B6;
  v61 = ((2 * (v59 ^ 0x1532BCB)) ^ 0x71B9C4FA) & (v59 ^ 0x1532BCB) ^ (2 * (v59 ^ 0x1532BCB)) & 0x38DCE27C;
  v62 = ((v58 << 8) ^ 0x244A0000) & v58;
  v63 = (v61 ^ 0x2018407D) & (4 * v60) ^ v60;
  v64 = (v58 << 8) & 0x63240000 ^ 0x43240000;
  v65 = ((4 * (v61 ^ 0x8442205)) ^ 0xE37389F4) & (v61 ^ 0x8442205) ^ (4 * (v61 ^ 0x8442205)) & 0x38DCE27C;
  v66 = (v65 ^ 0x20508069) & (16 * v63) ^ v63;
  v67 = ((16 * (v65 ^ 0x188C6209)) ^ 0x8DCE27D0) & (v65 ^ 0x188C6209) ^ (16 * (v65 ^ 0x188C6209)) & 0x38DCE270;
  v68 = v67 ^ 0x3010C02D;
  v69 = v57 ^ 0xC2044A04 ^ (v57 << 8) & 0xE3244A00 ^ ((v57 << 8) ^ 0x20406100) & v58;
  v70 = STACK[0x6AC0] + a6 + v51;
  v71 = v66 ^ 0x38DCE27D ^ (v67 ^ 0x8CC2200) & (v66 << 8);
  LODWORD(STACK[0x6980]) = v71;
  v72 = (v70 ^ 0x316FA9A6) & (2 * (v70 & 0x398FC9B6)) ^ v70 & 0x398FC9B6;
  v73 = ((2 * (v70 ^ 0x726C3AE6)) ^ 0x97C7E6A0) & (v70 ^ 0x726C3AE6) ^ (2 * (v70 ^ 0x726C3AE6)) & 0x4BE3F350;
  v74 = v73 ^ 0x48201150;
  v75 = (v73 ^ 0x2437200) & (4 * v72) ^ v72;
  v76 = ((4 * v74) ^ 0x2F8FCD40) & v74 ^ (4 * v74) & 0x4BE3F350;
  v77 = (v76 ^ 0xB83C150) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0x40603210)) ^ 0xBE3F3500) & (v76 ^ 0x40603210) ^ (16 * (v76 ^ 0x40603210)) & 0x4BE3F350;
  v79 = v77 ^ 0x4BE3F350 ^ (v78 ^ 0xA233100) & (v77 << 8);
  LODWORD(STACK[0x69C0]) = (v71 << 16) & 0x38DC0000;
  v80 = v70 ^ (2
             * ((v79 << 16) & 0x4BE30000 ^ v79 ^ ((v79 << 16) ^ 0x73500000) & (((v78 ^ 0x41C0C250) << 8) & 0x4BE30000 ^ (((v78 ^ 0x41C0C250) << 8) ^ 0x63F30000) & (v78 ^ 0x41C0C250) ^ 0x8000000))) ^ 0xD82FC53;
  LODWORD(STACK[0x6960]) = v80;
  v81 = STACK[0x6AC0] + a4;
  STACK[0x6970] = v81;
  v82 = v81 + (v28 ^ 0xAC1AAB2C ^ v80) - (((v28 ^ 0xAC1AAB2C ^ v80) + v18) >> 16);
  LODWORD(STACK[0x6990]) = (v69 << 16) & 0x63240000 ^ v69 ^ ((v69 << 16) ^ 0x4A650000) & (v64 ^ v62);
  LODWORD(STACK[0x69B0]) = ((v71 << 16) ^ 0x627D0000) & ((v68 << 8) & 0x38DC0000 ^ 0x201C0000 ^ ((v68 << 8) ^ 0xDCE20000) & v68);
  v83 = (v82 ^ 0x3FDEDF9F) - 268453008 + ((2 * v82) & 0x7FBDBF3E);
  v84 = ((2 * (v83 ^ 0x7ED20153)) ^ 0x5DE6CB44) & (v83 ^ 0x7ED20153) ^ (2 * (v83 ^ 0x7ED20153)) & 0xAEF365A2;
  v85 = (v83 ^ 0xDE9040F1) & (2 * (v83 & 0xD02164F1)) ^ v83 & 0xD02164F1;
  v86 = ((4 * (v84 ^ 0xA21124A2)) ^ 0xBBCD9688) & (v84 ^ 0xA21124A2) ^ (4 * (v84 ^ 0xA21124A2)) & 0xAEF365A0;
  v87 = (v86 ^ 0xAAC10480) & (16 * ((v84 ^ 0x22920122) & (4 * v85) ^ v85)) ^ (v84 ^ 0x22920122) & (4 * v85) ^ v85;
  v88 = ((16 * (v86 ^ 0x4326122)) ^ 0xEF365A20) & (v86 ^ 0x4326122) ^ (16 * (v86 ^ 0x4326122)) & 0xAEF365A0;
  v89 = v87 ^ 0xAEF365A2 ^ (v88 ^ 0xAE324000) & (v87 << 8);
  v90 = (v83 ^ (2
              * ((v89 << 16) & 0x2EF30000 ^ v89 ^ ((v89 << 16) ^ 0x65A20000) & (((v88 ^ 0xC12582) << 8) & 0x2EF30000 ^ 0xC920000 ^ (((v88 ^ 0xC12582) << 8) ^ 0x73650000) & (v88 ^ 0xC12582))))) >> 8;
  v91 = v83
      + 1578713375
      + (((v90 ^ 0x44A824D4) - 1467746586) ^ ((v90 ^ 0x8073EDD0) + 1817722850) ^ ((v90 ^ 0xC41F4AAB) + 674535579));
  v92 = v91 + 323;
  v93 = ((v91 + 323) ^ 0x10D0CEE1) & (2 * ((v91 + 323) & 0x8518D0F0)) ^ (v91 + 323) & 0x8518D0F0;
  v94 = ((2 * ((v91 + 323) ^ 0x12F16FC1)) ^ 0x2FD37E62) & ((v91 + 323) ^ 0x12F16FC1) ^ (2 * ((v91 + 323) ^ 0x12F16FC1)) & 0x97E9BF30;
  v95 = v94 ^ 0x90288111;
  v96 = (v94 ^ 0x84C90611) & (4 * v93) ^ v93;
  v97 = ((4 * v95) ^ 0x5FA6FCC4) & v95 ^ (4 * v95) & 0x97E9BF30;
  v98 = (v97 ^ 0x17A0BC11) & (16 * v96) ^ v96;
  v99 = ((16 * (v97 ^ 0x80490331)) ^ 0x7E9BF310) & (v97 ^ 0x80490331) ^ (16 * (v97 ^ 0x80490331)) & 0x97E9BF30;
  v100 = v99 ^ 0x81600C21;
  v101 = v91 - 364760898;
  LODWORD(v81) = ((v91 - 364760898) ^ 0x80A195CB) & (2 * ((v91 - 364760898) & 0xA31A1E0)) ^ (v91 - 364760898) & 0xA31A1E0;
  v102 = v98 ^ 0x97E9BF31;
  v103 = ((2 * ((v91 - 364760898) ^ 0x80C0940B)) ^ 0x15E26BD6) & ((v91 - 364760898) ^ 0x80C0940B) ^ (2 * ((v91 - 364760898) ^ 0x80C0940B)) & 0x8AF135EA;
  v104 = (v99 ^ 0x1689B300) & (v98 << 8);
  v105 = ((4 * (v103 ^ 0x8A111429)) ^ 0x2BC4D7AC) & (v103 ^ 0x8A111429) ^ (4 * (v103 ^ 0x8A111429)) & 0x8AF135E8;
  v106 = v105 ^ 0x80312043;
  v107 = (v105 ^ 0xAC015A3) & (16 * ((v103 ^ 0x82D011A8) & (4 * v81) ^ v81)) ^ (v103 ^ 0x82D011A8) & (4 * v81) ^ v81;
  v108 = v102 ^ v104;
  LODWORD(v81) = ((16 * v106) ^ 0xAF135EB0) & v106 ^ (16 * v106) & 0x8AF135E0;
  v109 = v81 ^ 0xE0214B;
  v110 = ((v100 << 8) ^ 0x69BF0000) & v100;
  v111 = (v100 << 8) & 0x97E90000 ^ 0x16400000;
  v112 = v107 ^ 0x8AF135EB ^ (v81 ^ 0x8A11144B) & (v107 << 8);
  v91 += 1503473961;
  v113 = (v91 ^ 0x8B2585D4) & (2 * (v91 & 0xA31A1E0)) ^ v91 & 0xA31A1E0;
  v114 = ((v81 ^ 0xE0214B) << 8) & 0x8AF10000 ^ 0xAC00000;
  LODWORD(v81) = ((2 * (v91 ^ 0x8B45C514)) ^ 0x2E8C9E8) & (v91 ^ 0x8B45C514) ^ (2 * (v91 ^ 0x8B45C514)) & 0x817464F4;
  v115 = v111 ^ v110;
  v116 = v114 ^ ((v109 << 8) ^ 0xF1350000) & v109;
  v117 = ((4 * (v81 ^ 0x81142414)) ^ 0x5D193D0) & (v81 ^ 0x81142414) ^ (4 * (v81 ^ 0x81142414)) & 0x817464F4;
  v118 = v117 ^ 0x80246424;
  v119 = (v117 ^ 0x15000C4) & (16 * ((v81 ^ 0x80502094) & (4 * v113) ^ v113)) ^ (v81 ^ 0x80502094) & (4 * v113) ^ v113;
  LODWORD(v81) = ((16 * v118) ^ 0x17464F40) & v118 ^ (16 * v118) & 0x817464F0;
  v120 = v81 ^ 0x803020B4;
  LODWORD(v81) = v119 ^ 0x817464F4 ^ (v81 ^ 0x14444B4) & (v119 << 8);
  LODWORD(STACK[0x6950]) = (v112 << 16) & 0xAF10000;
  v121 = ((v108 << 16) ^ 0x3F310000) & v115;
  v122 = (v108 << 16) & 0x17E90000 ^ v108;
  v123 = v28 ^ 0x602882A6 ^ v91 ^ 0xE14992C7 ^ (2
                                              * (((_DWORD)v81 << 16) & 0x1740000 ^ v81 ^ (((_DWORD)v81 << 16) ^ 0x64F40000) & ((v120 << 8) & 0x1740000 ^ 0x1100000 ^ ((v120 << 8) ^ 0x74640000) & v120)));
  v124 = STACK[0x6AC0] + v15 + v123;
  v125 = (v124 & 0xD4142AE1 | (2 * (v124 & 0xD4142AE1)) & 0x20280002 | 0x10000) ^ (2 * (v124 & 0xD4142AE1)) & (v124 ^ 0xB17DA0E7);
  v126 = ((v112 << 16) ^ 0x35EB0000) & v116;
  v127 = (2 * (v124 ^ 0xB17DA0E7)) & 0x65698A06 ^ 0x25288A02 ^ ((2 * (v124 ^ 0xB17DA0E7)) ^ 0xCAD3140C) & (v124 ^ 0xB17DA0E7);
  v128 = v127 & 0xF0F1FF8C & (4 * v125);
  v129 = (4 * v127) & 0x65698A04 ^ 0x60498206 ^ ((4 * v127) ^ 0x95A62818) & v127;
  v130 = (16 * ((4 * v125) & 0x60618A04 ^ v125 ^ v128)) & 0x65698A00 ^ (4 * v125) & 0x60618A04 ^ v125 ^ v128 ^ ((16 * ((4 * v125) & 0x60618A04 ^ v125 ^ v128)) ^ 0x100000) & v129;
  v131 = (16 * v129) & 0x65698A00 ^ 0x21610A06 ^ ((16 * v129) ^ 0x5698A060) & v129;
  v132 = v130 ^ (v130 << 8) & 0x65698A00 ^ ((v130 << 8) ^ 0x1000000) & v131 ^ 0x64688A06;
  v133 = (v124 ^ (2
                * ((v132 << 16) & 0x65690000 ^ v132 ^ ((v132 << 16) ^ 0xA060000) & ((v131 << 8) & 0x65690000 ^ 0x4610000 ^ ((v131 << 8) ^ 0x698A0000) & v131)))) >> 16;
  v134 = ((v133 ^ 0x92C91FB8) + 764797734) ^ ((v133 ^ 0x2195E89E) - 1630989308) ^ ((v133 ^ 0xB35CE9E1) + 201332093);
  v135 = v122 ^ v121;
  v136 = STACK[0x6AC0] + a5 + v123 - v134;
  v137 = ((2 * (v136 ^ 0x4C0AE985)) ^ 0xD3EB264A) & (v136 ^ 0x4C0AE985) ^ (2 * (v136 ^ 0x4C0AE985)) & 0x69F59324;
  v138 = (v136 ^ 0x5FE7885) & (2 * (v136 & 0x25FF7AA0)) ^ v136 & 0x25FF7AA0;
  v139 = ((4 * (v137 ^ 0x28149125)) ^ 0xA7D64C94) & (v137 ^ 0x28149125) ^ (4 * (v137 ^ 0x28149125)) & 0x69F59324;
  v140 = (v139 ^ 0x21D40000) & (16 * ((v137 ^ 0x1E10224) & (4 * v138) ^ v138)) ^ (v137 ^ 0x1E10224) & (4 * v138) ^ v138;
  v141 = ((16 * (v139 ^ 0x48219321)) ^ 0x9F593250) & (v139 ^ 0x48219321) ^ (16 * (v139 ^ 0x48219321)) & 0x69F59320;
  v142 = v140 ^ 0x69F59325 ^ (v141 ^ 0x9511225) & (v140 << 8);
  v143 = v136 ^ (2
               * ((v142 << 16) & 0x69F50000 ^ v142 ^ ((v142 << 16) ^ 0x13250000) & (((v141 ^ 0x60A48125) << 8) & 0x69F50000 ^ 0x8640000 ^ (((v141 ^ 0x60A48125) << 8) ^ 0x75930000) & (v141 ^ 0x60A48125))));
  v144 = v123
       + ((((v143 >> 8) ^ 0x14B86A7F) + 1988429294) ^ (((v143 >> 8) ^ 0x1550A626) + 2003683765) ^ (((v143 >> 8) ^ 0x11C9205)
                                                                                                 + 1663171992))
       - v134;
  v145 = STACK[0x6AC0] + v14 + v144;
  v146 = (v145 ^ 0xAED37C9F) & (2 * (v145 & 0xCD47CD0)) ^ v145 & 0xCD47CD0;
  v147 = ((2 * (v145 ^ 0xA77BBD1F)) ^ 0x575F839E) & (v145 ^ 0xA77BBD1F) ^ (2 * (v145 ^ 0xA77BBD1F)) & 0xABAFC1CE;
  v148 = v147 ^ 0xA8A04041;
  v149 = (v147 ^ 0x8B038181) & (4 * v146) ^ v146;
  v150 = ((4 * v148) ^ 0xAEBF073C) & v148 ^ (4 * v148) & 0xABAFC1CC;
  v151 = v150 ^ 0x100C0C3;
  v152 = (v150 ^ 0xAAAF0100) & (16 * v149) ^ v149;
  v153 = ((16 * v151) ^ 0xBAFC1CF0) & v151 ^ (16 * v151) & 0xABAFC1C0;
  v154 = v152 ^ 0xABAFC1CF;
  v155 = LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x69A0]) ^ (2 * LODWORD(STACK[0x6990])) ^ v92 ^ (2 * v135) ^ v145;
  v156 = v153 ^ 0x103C10F;
  v157 = STACK[0x6A40];
  v158 = STACK[0x6AC0] + STACK[0x6A40] + v144;
  v159 = (v158 ^ 0x950EF933) & (2 * (v158 & 0x19A8F9A0)) ^ v158 & 0x19A8F9A0;
  v160 = 2 * (v158 ^ 0xB64E9A73);
  v161 = (v153 ^ 0xAAAC000F) & (v152 << 8);
  v162 = (v160 ^ 0x5FCCC7A6) & (v158 ^ 0xB64E9A73);
  v163 = v160 & 0xAFE663D2;
  v164 = (v156 << 8) & 0xABAF0000;
  v165 = v162 ^ v163;
  v166 = v165 ^ 0xA0222051;
  v167 = (v165 ^ 0xFC443D0) & (4 * v159) ^ v159;
  v168 = ((v156 << 8) ^ 0x2FC10000) & v156;
  v169 = ((4 * v166) ^ 0xBF998F4C) & v166 ^ (4 * v166) & 0xAFE663D0;
  v170 = (v169 ^ 0xAF800353) & (16 * v167) ^ v167;
  v171 = ((16 * (v169 ^ 0x666093)) ^ 0xFE663D30) & (v169 ^ 0x666093) ^ (16 * (v169 ^ 0x666093)) & 0xAFE663D0;
  v172 = v170 ^ 0xAFE663D3 ^ (v171 ^ 0xAE6621C3) & (v170 << 8);
  v173 = STACK[0x69D0];
  v174 = ((v154 ^ v161) << 16) & 0x2BAF0000 ^ v154 ^ v161 ^ (((v154 ^ v161) << 16) ^ 0x41CF0000) & (v164 ^ 0x2E0000 ^ v168);
  v175 = STACK[0x69F0];
  v176 = STACK[0x69E0];
  LODWORD(STACK[0x6AA0]) ^= 0x177FF97C ^ v59 ^ v101 ^ v158 ^ (2
                                                            * (LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x69B0]) ^ v112 ^ LODWORD(STACK[0x6950]) ^ v126 ^ v172 ^ (v172 << 16) & 0x2FE60000 ^ ((v172 << 16) ^ 0x63D30000) & (((v171 ^ 0x18042C3) << 8) & 0x2FE60000 ^ 0x9840000 ^ (((v171 ^ 0x18042C3) << 8) ^ 0xE6630000) & (v171 ^ 0x18042C3))));
  v177 = STACK[0x6970] != 15;
  LODWORD(STACK[0x6A90]) = v155 ^ (2 * v174) ^ 0x2DB21CD;
  v178 = *(uint64_t (**)(unint64_t, unint64_t, unint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                 + 8
                                                                                                 * ((83 * v177) ^ (LODWORD(STACK[0x6A50]) + 17052)));
  STACK[0x6A40] = v157 + 1;
  return v178(v175 + 1, v176 + 1, v173 + 1, a4 + 1);
}

uint64_t sub_100A644B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  char *v148;
  unsigned int v149;
  int v150;
  int v151;
  unint64_t v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  uint64_t v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  char *v179;
  unsigned int v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  unint64_t v193;
  uint64_t (*v194)(uint64_t);

  v14 = v10 + a5 - v8;
  v15 = (v14 ^ 0xDE77EC35) & (2 * (v14 & 0xDC778935)) ^ v14 & 0xDC778935;
  v16 = ((2 * (v14 ^ 0x4652FE55)) ^ 0x344AEEC0) & (v14 ^ 0x4652FE55) ^ (2 * (v14 ^ 0x4652FE55)) & 0x9A257760;
  v17 = (v16 ^ 0x18017440) & (4 * v15) ^ v15;
  v18 = ((4 * (v16 ^ 0x8A251120)) ^ 0x6895DD80) & (v16 ^ 0x8A251120) ^ (4 * (v16 ^ 0x8A251120)) & 0x9A257760;
  v19 = (v18 ^ 0x8055500) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x92202260)) ^ 0xA2577600) & (v18 ^ 0x92202260) ^ (16 * (v18 ^ 0x92202260)) & 0x9A257760;
  v21 = v19 ^ 0x9A257760 ^ (v20 ^ 0x82057660) & (v19 << 8);
  v22 = (v14 ^ (2
              * ((v21 << 16) & 0x1A250000 ^ v21 ^ ((v21 << 16) ^ 0x77600000) & (((v20 ^ 0x18200160) << 8) & 0x9A250000 ^ 0x1A000000 ^ (((v20 ^ 0x18200160) << 8) ^ 0x25770000) & (v20 ^ 0x18200160))))) >> 8;
  v23 = ((v22 ^ 0x7CFB76D4) - 740373803) ^ ((v22 ^ 0x26B4CB19) - 1986955494) ^ ((v22 ^ 0x5A83C0AA) - 173638485);
  v24 = v10 + v12 - v23 - v13 - v9;
  v25 = (v24 ^ 0x6BA2C4CE) & (2 * (v24 & 0xBB3168F)) ^ v24 & 0xBB3168F;
  v26 = ((2 * (v24 ^ 0x7EA0C0D6)) ^ 0xEA27ACB2) & (v24 ^ 0x7EA0C0D6) ^ (2 * (v24 ^ 0x7EA0C0D6)) & 0x7513D658;
  v27 = (v26 ^ 0x60008411) & (4 * v25) ^ v25;
  v28 = ((4 * (v26 ^ 0x15105249)) ^ 0xD44F5964) & (v26 ^ 0x15105249) ^ (4 * (v26 ^ 0x15105249)) & 0x7513D658;
  v29 = (v28 ^ 0x54035040) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x21108619)) ^ 0x513D6590) & (v28 ^ 0x21108619) ^ (16 * (v28 ^ 0x21108619)) & 0x7513D650;
  v31 = v29 ^ 0x7513D659 ^ (v30 ^ 0x51114400) & (v29 << 8);
  v32 = (v24 ^ (2
              * ((v31 << 16) & 0x75130000 ^ v31 ^ ((v31 << 16) ^ 0x56590000) & (((v30 ^ 0x24029249) << 8) & 0x75130000 ^ 0x64010000 ^ (((v30 ^ 0x24029249) << 8) ^ 0x13D60000) & (v30 ^ 0x24029249u))))) >> 8;
  v33 = v10
      + v12
      + (((v32 ^ 0xECC5A5CA) + 1708323154) ^ ((v32 ^ 0xE8B28B41) + 1638260699) ^ ((v32 ^ 0x43E9831) - 1926640469))
      - v23
      - v13
      - v11;
  v34 = (v33 ^ 0xDA47D8FE) & (2 * (v33 & 0xDA679CFF)) ^ v33 & 0xDA679CFF;
  v35 = ((2 * (v33 ^ 0x5E8FF082)) ^ 0x9D0D8FA) & (v33 ^ 0x5E8FF082) ^ (2 * (v33 ^ 0x5E8FF082)) & 0x84E86C7C;
  v36 = v35 ^ 0x84282405;
  v37 = (v35 ^ 0x4804079) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x13A1B1F4) & v36 ^ (4 * v36) & 0x84E86C7C;
  v39 = (v38 ^ 0xA02079) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x84484C09)) ^ 0x4E86C7D0) & (v38 ^ 0x84484C09) ^ (16 * (v38 ^ 0x84484C09)) & 0x84E86C70;
  v41 = v39 ^ 0x84E86C7D ^ (v40 ^ 0x480442D) & (v39 << 8);
  v42 = v33 ^ (2
             * ((v41 << 16) & 0x4E80000 ^ v41 ^ ((v41 << 16) ^ 0x6C7D0000) & (((v40 ^ 0x8068282D) << 8) & 0x84E80000 ^ 0x4800000 ^ (((v40 ^ 0x8068282D) << 8) ^ 0x686C0000) & (v40 ^ 0x8068282D))));
  v43 = ((v42 ^ 0xD6BA8CC) + 393958079) ^ ((v42 ^ 0xB9844223) - 1550534574) ^ ((v42 ^ 0x6F88AEEA) + 1972917401);
  v44 = ((v43 + 1643800001) ^ 0x8346E245) & (2 * ((v43 + 1643800001) & 0x8B56EB51)) ^ (v43 + 1643800001) & 0x8B56EB51;
  v45 = ((2 * ((v43 + 1643800001) ^ 0x914A3467)) ^ 0x3439BE6C) & ((v43 + 1643800001) ^ 0x914A3467) ^ (2 * ((v43 + 1643800001) ^ 0x914A3467)) & 0x1A1CDF36;
  v46 = (v45 ^ 0x10189E16) & (4 * v44) ^ v44;
  v47 = ((4 * (v45 ^ 0xA044112)) ^ 0x68737CD8) & (v45 ^ 0xA044112) ^ (4 * (v45 ^ 0xA044112)) & 0x1A1CDF34;
  v48 = (v47 ^ 0x8105C16) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x120C8326)) ^ 0xA1CDF360) & (v47 ^ 0x120C8326) ^ (16 * (v47 ^ 0x120C8326)) & 0x1A1CDF30;
  v50 = v48 ^ 0x1A1CDF36 ^ (v49 ^ 0xCD316) & (v48 << 8);
  v51 = ((v43 + 1643800001) ^ (2
                             * ((v50 << 16) & 0x1A1C0000 ^ v50 ^ ((v50 << 16) ^ 0x5F360000) & (((v49 ^ 0x1A100C16) << 8) & 0x1A1C0000 ^ (((v49 ^ 0x1A100C16) << 8) ^ 0x1CDF0000) & (v49 ^ 0x1A100C16) ^ 0x2000000)))) >> 12;
  v52 = v43
      + 211764330
      + (((v51 ^ 0xB62B356A) - 1030161187) ^ ((v51 ^ 0xDEBCAB1B) - 1441832274) ^ ((v51 ^ 0x689F2A04) + 472703923));
  v53 = (v52 ^ 0x63E6CCD1) & (2 * (v52 & 0x6BF68EE4)) ^ v52 & 0x6BF68EE4;
  v54 = ((2 * (v52 ^ 0x26C3CC99)) ^ 0x9A6A84FA) & (v52 ^ 0x26C3CC99) ^ (2 * (v52 ^ 0x26C3CC99)) & 0x4D35427C;
  v55 = v54 ^ 0x45154205;
  v56 = (v54 ^ 0x8210035) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0x34D509F4) & v55 ^ (4 * v55) & 0x4D35427C;
  v58 = (v57 ^ 0x4150060) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x49204209)) ^ 0xD35427D0) & (v57 ^ 0x49204209) ^ (16 * (v57 ^ 0x49204209)) & 0x4D354270;
  v60 = v58 ^ 0x4D35427D ^ (v59 ^ 0x4114022D) & (v58 << 8);
  v61 = (v52 ^ (2
              * ((v60 << 16) & 0x4D350000 ^ v60 ^ ((v60 << 16) ^ 0x427D0000) & (((v59 ^ 0xC21402D) << 8) & 0x4D350000 ^ 0x48350000 ^ (((v59 ^ 0xC21402D) << 8) ^ 0x35420000) & (v59 ^ 0xC21402D))))) >> 3;
  v62 = v52
      + 1730962900
      + (((v61 ^ 0x41797400) - 748369824) ^ ((v61 ^ 0x7D07DE73) - 283483603) ^ ((v61 ^ 0x32406B30) - 1604462736));
  v63 = (v62 ^ 0x60360BFB) & (2 * (v62 & 0x68A6ABF3)) ^ v62 & 0x68A6ABF3;
  v64 = ((2 * (v62 ^ 0x717E1C5F)) ^ 0x33B16F58) & (v62 ^ 0x717E1C5F) ^ (2 * (v62 ^ 0x717E1C5F)) & 0x19D8B7AC;
  v65 = v64 ^ 0x84890A4;
  v66 = (v64 ^ 0x1902708) & (4 * v63) ^ v63;
  v67 = ((4 * v65) ^ 0x6762DEB0) & v65 ^ (4 * v65) & 0x19D8B7AC;
  v68 = (v67 ^ 0x14096AC) & (16 * v66) ^ v66;
  v69 = ((16 * (v67 ^ 0x1898210C)) ^ 0x9D8B7AC0) & (v67 ^ 0x1898210C) ^ (16 * (v67 ^ 0x1898210C)) & 0x19D8B7A0;
  v70 = v68 ^ 0x19D8B7AC ^ (v69 ^ 0x1988322C) & (v68 << 8);
  v71 = v62 ^ (2
             * ((v70 << 16) & 0x19D80000 ^ v70 ^ ((v70 << 16) ^ 0x37AC0000) & (((v69 ^ 0x50852C) << 8) & 0x19D80000 ^ 0x1480000 ^ (((v69 ^ 0x50852C) << 8) ^ 0xD8B70000) & (v69 ^ 0x50852C))));
  v72 = (v71 ^ 0xAA689E7F) + ((v71 >> 12) ^ 0xFFF55976) + 1;
  v73 = v72 - (v72 >> 5) - ((2 * (v72 - (v72 >> 5))) & 0x5DB66808) + 786117636;
  v74 = ((v73 ^ 0xCD9597C4) + 845834300) ^ ((v73 ^ 0x5912671D) - 1494378269) ^ ((v73 ^ 0xBA5CC4DD) + 1168325411);
  v75 = v74 + ((v74 + 1806620805) >> 10) - 1108478390;
  v76 = (v75 ^ 0xDBAE8B2) & (2 * (v75 & 0xADC0E23B)) ^ v75 & 0xADC0E23B;
  v77 = ((2 * (v75 ^ 0xDBB2CB0)) ^ 0x40F79D16) & (v75 ^ 0xDBB2CB0) ^ (2 * (v75 ^ 0xDBB2CB0)) & 0xA07BCE8A;
  v78 = (v77 ^ 0xBCA01) & (4 * v76) ^ v76;
  v79 = ((4 * (v77 ^ 0xA0084289)) ^ 0x81EF3A2C) & (v77 ^ 0xA0084289) ^ (4 * (v77 ^ 0xA0084289)) & 0xA07BCE88;
  v80 = (v79 ^ 0x806B0A00) & (16 * v78) ^ v78;
  v81 = ((16 * (v79 ^ 0x2010C483)) ^ 0x7BCE8B0) & (v79 ^ 0x2010C483) ^ (16 * (v79 ^ 0x2010C483)) & 0xA07BCE80;
  v82 = v80 ^ 0xA07BCE8B ^ (v81 ^ 0x38C80B) & (v80 << 8);
  v83 = (v75 ^ (2
              * ((v82 << 16) & 0x207B0000 ^ v82 ^ ((v82 << 16) ^ 0x4E8B0000) & (((v81 ^ 0xA043060B) << 8) & 0xA07B0000 ^ 0x310000 ^ (((v81 ^ 0xA043060B) << 8) ^ 0x7BCE0000) & (v81 ^ 0xA043060B))))) >> 4;
  v84 = v75
      - 285677252
      + (((v83 ^ 0x1F7C80B5) + 1386342528) ^ ((v83 ^ 0x28490AE5) + 1704223280) ^ ((v83 ^ 0x39E79DA2) + 1950020969));
  v85 = (v84 ^ 0x7B387585) & (2 * (v84 & 0x7BB879C6)) ^ v84 & 0x7BB879C6;
  v86 = ((2 * (v84 ^ 0xEE084789)) ^ 0x2B607C9E) & (v84 ^ 0xEE084789) ^ (2 * (v84 ^ 0xEE084789)) & 0x95B03E4E;
  v87 = (v86 ^ 0x1302C49) & (4 * v85) ^ v85;
  v88 = ((4 * (v86 ^ 0x94900241)) ^ 0x56C0F93C) & (v86 ^ 0x94900241) ^ (4 * (v86 ^ 0x94900241)) & 0x95B03E4C;
  v89 = (v88 ^ 0x14803803) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x81300643)) ^ 0x5B03E4F0) & (v88 ^ 0x81300643) ^ (16 * (v88 ^ 0x81300643)) & 0x95B03E40;
  v91 = v89 ^ 0x95B03E4F ^ (v90 ^ 0x11002400) & (v89 << 8);
  v92 = v84 ^ (2
             * ((v91 << 16) & 0x15B00000 ^ v91 ^ ((v91 << 16) ^ 0x3E4F0000) & (((v90 ^ 0x84B01A0F) << 8) & 0x15B00000 ^ 0x5800000 ^ (((v90 ^ 0x84B01A0F) << 8) ^ 0x303E0000) & (v90 ^ 0x84B01A0F))));
  v93 = v42 ^ LODWORD(STACK[0x6A90]) ^ v92;
  v94 = ((v92 ^ 0x61BDC223) + 1935019848) ^ ((v92 ^ 0xBD423F5B) - 1347816896) ^ ((v92 ^ 0xA427F820) - 1228131003);
  v95 = ((v94 + 83972098) ^ 0xC4E7F3FC) & (2 * ((v94 + 83972098) & 0xD6C7F3FE)) ^ (v94 + 83972098) & 0xD6C7F3FE;
  v96 = ((2 * ((v94 + 83972098) ^ 0xEDEB1488)) ^ 0x7659CEEC) & ((v94 + 83972098) ^ 0xEDEB1488) ^ (2
                                                                                                * ((v94 + 83972098) ^ 0xEDEB1488)) & 0x3B2CE776;
  v97 = (v96 ^ 0x3208C660) & (4 * v95) ^ v95;
  v98 = ((4 * (v96 ^ 0x9242112)) ^ 0xECB39DD8) & (v96 ^ 0x9242112) ^ (4 * (v96 ^ 0x9242112)) & 0x3B2CE774;
  v99 = (v98 ^ 0x28208546) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x130C6226)) ^ 0xB2CE7760) & (v98 ^ 0x130C6226) ^ (16 * (v98 ^ 0x130C6226)) & 0x3B2CE770;
  v101 = v99 ^ 0x3B2CE776 ^ (v100 ^ 0x320C6700) & (v99 << 8);
  v102 = v94
       - 607569657
       + ((((v94 + 83972098) ^ (2
                              * ((v101 << 16) & 0x3B2C0000 ^ v101 ^ ((v101 << 16) ^ 0x67760000) & (((v100 ^ 0x9208016) << 8) & 0x3B2C0000 ^ 0x13080000 ^ (((v100 ^ 0x9208016) << 8) ^ 0x2CE70000) & (v100 ^ 0x9208016))))) >> 14) ^ 0x39B58)
       + 2809;
  v103 = v102 - (v102 >> 6) - ((2 * (v102 - (v102 >> 6))) & 0x8FD5A7A4) + 1206571986;
  v104 = (v103 ^ 0xB559FFE9) + ((v103 ^ 0xB559FFE9) >> 11) - (((v103 ^ 0xB559FFE9) + ((v103 ^ 0xB559FFE9) >> 11)) >> 3);
  v105 = v104 + 978483546 + ((v104 + 978483546) >> 10) - ((v104 + 978483546 + ((v104 + 978483546) >> 10)) >> 6);
  v106 = v105 - ((2 * v105) & 0xCBBD1706) + 1709083523;
  v107 = v93 ^ v106;
  v108 = STACK[0x6608];
  v109 = LODWORD(STACK[0x66D8]) ^ 0xBC7A605A;
  v110 = ((v107 & 0x7F ^ 0x10300171) - 1762014744 - ((2 * (v107 & 0x7F ^ 0x10300171)) & 0x206002AE) - 2705) ^ 0x86C9BE16;
  LODWORD(STACK[0x6A90]) = v110;
  v111 = v109
       + 221230843
       * ((((v108 ^ 0x75393E0F) - 640308060) ^ ((v108 ^ 0x34EEC571) - 1744676898) ^ ((v108 ^ 0x41D7FB3E) - 314873453))
        + 1826227888
        - v110
        + 3809);
  v112 = 16843009 * v110;
  v113 = ((v107 & 0x7F ^ 0x71) - 24 - ((2 * (v107 & 0x7F ^ 0x71)) & 0xAE) + 111) ^ 0x16 | (460176772 - (v107 & 0xFFFFFF80 ^ 0x91AFA580 | 0x1B6DBD84) + (v107 & 0xFFFFFF80 ^ 0x91AFA580 | 0xE492427B)) ^ 0x245D9CFB;
  LODWORD(STACK[0x6A50]) = v113;
  v114 = v107 ^ 0x51607B30;
  v115 = (((LODWORD(STACK[0x65E0]) ^ 0xD1EF4EE9) + 772845847) ^ ((LODWORD(STACK[0x65E0]) ^ 0x8F5A0A81) + 1889924479) ^ ((LODWORD(STACK[0x65E0]) ^ 0xFAD13D10) + 86950640))
       + 761201709 * (v113 - (v107 ^ 0x51607B30));
  v116 = LODWORD(STACK[0x66D0]) ^ 0x58548367;
  v117 = (((v106 ^ 0x93BEF9F9) + 1816200711) ^ ((v106 ^ 0x919FB34A) + 1851804854) ^ ((v106 ^ 0x67FFC130) - 1744814384))
       + 2063321918;
  v118 = v117 - (v117 >> 12) + ((v117 - (v117 >> 12)) >> 1);
  v119 = v71 ^ LODWORD(STACK[0x6AA0]) ^ v103 ^ (v118 - ((2 * v118) & 0x129EE502) - 1991282047);
  v120 = ((v118 - 70614587 - ((v118 - 70614587) >> 9)) ^ 0x7FFD7DD5)
       - 277348736
       + ((2 * (v118 - 70614587 - ((v118 - 70614587) >> 9))) & 0xFFFAFBAA);
  v121 = (v120 ^ 0x8A48638A) & (2 * (v120 & 0x908A83AB)) ^ v120 & 0x908A83AB;
  v122 = ((2 * (v120 ^ 0x8A5C629A)) ^ 0x35ADC262) & (v120 ^ 0x8A5C629A) ^ (2 * (v120 ^ 0x8A5C629A)) & 0x1AD6E130;
  v123 = (v122 ^ 0x8042021) & (4 * v121) ^ v121;
  v124 = ((4 * (v122 ^ 0xA522111)) ^ 0x6B5B84C4) & (v122 ^ 0xA522111) ^ (4 * (v122 ^ 0xA522111)) & 0x1AD6E130;
  v125 = (v124 ^ 0xA528001) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0x10846131)) ^ 0xAD6E1310) & (v124 ^ 0x10846131) ^ (16 * (v124 ^ 0x10846131)) & 0x1AD6E130;
  v127 = v125 ^ 0x1AD6E131 ^ (v126 ^ 0x8460121) & (v125 << 8);
  v128 = (v120 ^ (2
                * ((v127 << 16) & 0x1AD60000 ^ v127 ^ ((v127 << 16) ^ 0x61310000) & (((v126 ^ 0x1290E021) << 8) & 0x1AD60000 ^ 0x8160000 ^ (((v126 ^ 0x1290E021) << 8) ^ 0x56E10000) & (v126 ^ 0x1290E021))))) >> 5;
  v129 = v120
       + 204255020
       + (((v128 ^ 0x4040C54E) + 1991948731) ^ ((v128 ^ 0xD3A1F6C5) - 446985678) ^ ((v128 ^ 0x96C90985) - 1607240334));
  v130 = (v129 ^ 0xA4BED00) & (2 * (v129 & 0x508B8D84)) ^ v129 & 0x508B8D84;
  v131 = ((2 * (v129 ^ 0xAA4EF708)) ^ 0xF58AF518) & (v129 ^ 0xAA4EF708) ^ (2 * (v129 ^ 0xAA4EF708)) & 0xFAC57A8C;
  v132 = (v131 ^ 0xC8017084) & (4 * v130) ^ v130;
  v133 = ((4 * (v131 ^ 0xA450A84)) ^ 0xEB15EA30) & (v131 ^ 0xA450A84) ^ (4 * (v131 ^ 0xA450A84)) & 0xFAC57A8C;
  v134 = (v133 ^ 0xEA056A00) & (16 * v132) ^ v132;
  v135 = ((16 * (v133 ^ 0x10C0108C)) ^ 0xAC57A8C0) & (v133 ^ 0x10C0108C) ^ (16 * (v133 ^ 0x10C0108C)) & 0xFAC57A80;
  v136 = v134 ^ 0xFAC57A8C ^ (v135 ^ 0xA845280C) & (v134 << 8);
  v137 = (v136 << 16) & 0x7AC50000 ^ v136 ^ ((v136 << 16) ^ 0x7A8C0000) & (((v135 ^ 0x5280520C) << 8) & 0x7AC50000 ^ 0x3A850000 ^ (((v135 ^ 0x5280520C) << 8) ^ 0xC57A0000) & (v135 ^ 0x5280520C));
  v138 = v104 - 702676992 - ((2 * v104) & 0xAC3C0DD6) + 1771;
  v139 = v73 ^ a8 ^ v138 ^ v129 ^ (2 * v137);
  v140 = v139 & 7 ^ 1;
  v141 = (((v73 ^ a8 ^ v138 ^ v129 ^ (2 * v137)) ^ 6) + 1) & 7;
  if (v140)
    v142 = 255;
  else
    v142 = 0;
  LODWORD(STACK[0x6A10]) = v142 << v141;
  v143 = (v142 << v141) ^ 0x5B03CF12;
  if (!v140)
    v143 = -1526976275;
  LODWORD(STACK[0x69F0]) = (((v143 ^ 0xA4FC30ED) & (v107 ^ 0xBD3B3FB4) ^ v143 & 0xEC830B4D) & 0x97 ^ 0x86)
                         + ((v143 ^ 0xA4FC30ED) & (v107 ^ 0xBD3B3FB4) ^ v143 & 0xEC830B4D ^ 0x7F1C3759)
                         - (((v143 ^ 0xA4FC30ED) & (v107 ^ 0xBD3B3FB4) ^ v143 & 0xEC830B4D ^ 0x7F1C3759) & 0x97);
  LODWORD(STACK[0x6A00]) = v107;
  LODWORD(STACK[0x69B0]) = v119;
  v144 = STACK[0x66E8];
  LODWORD(STACK[0x6500]) = LODWORD(STACK[0x66E8]) ^ 0xDA8C0893;
  v145 = STACK[0x6A60];
  STACK[0x6A30] = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6A60]) - 10894)
                + 4 * ((v144 ^ 0xDA8C0893) % 0x101);
  LODWORD(STACK[0x66D8]) = v112;
  v146 = v112 % 0x101;
  v147 = v145;
  v148 = (char *)*(&off_1015B46D0 + v145 - 10176) - 12;
  v149 = *(_DWORD *)&v148[4 * v146] ^ 0xA01F352B ^ (1634270950 * (*(_DWORD *)&v148[4 * v146] ^ 0x96D1AEE4));
  v150 = STACK[0x68E0];
  v151 = (LODWORD(STACK[0x68E0]) ^ 0x3E) + LODWORD(STACK[0x6880]) - v140;
  LODWORD(STACK[0x65E0]) = v151 + 2010896921 - ((2 * v151) & 0xEFB7B432);
  LODWORD(STACK[0x6A20]) = LODWORD(STACK[0x65F8]) + v149;
  LODWORD(STACK[0x69C0]) = 1077952576
                         * (((v108 ^ 0x919407A7) + 1031312652) ^ ((v108 ^ 0x96E1B18) - 1518171723) ^ ((v108 ^ 0x98FA1CFF) + 873893460))
                         - 1528822592;
  v152 = STACK[0x66E0];
  LODWORD(STACK[0x69D0]) = 82746469 * (v141 - STACK[0x66E0]);
  v153 = v140 ^ LODWORD(STACK[0x65B8]) ^ (4 * (v140 ^ v150));
  LODWORD(STACK[0x6A40]) = (v153 ^ 0xF8) + 1008815632 - 2 * ((v153 ^ 0xF8) & 0x3C214E12 ^ v153 & 2);
  LODWORD(STACK[0x6990]) = v111 + 692926582;
  v154 = 16843009
       * (v107 ^ 8 ^ ((unsigned __int16)(v107 ^ 0x5B08) >> 8) ^ ((v107 ^ 0xA3E25B08) >> 16) ^ HIBYTE(v107) ^ 0xE9);
  v155 = 16843009
       * (v119 ^ 0x8F ^ ((unsigned __int16)(v119 ^ 0x2B8F) >> 8) ^ ((v119 ^ 0x5B632B8F) >> 16) ^ HIBYTE(v119) ^ 0x2A);
  LODWORD(STACK[0x6578]) = v154;
  v156 = v155 ^ v154;
  v157 = v155 ^ v154 ^ 0x3B3B3B3B;
  v158 = v147;
  v159 = (uint64_t)*(&off_1015B46D0 + (v147 ^ 0x28FC));
  v160 = *(_DWORD *)(v159 + 4 * (v157 % 0x101));
  LODWORD(STACK[0x65C0]) = LODWORD(STACK[0x65C0]) + 1008815632 - ((2 * LODWORD(STACK[0x65C0])) & 0x78429C20);
  v161 = STACK[0x6588];
  v162 = *(_DWORD *)&v148[4 * (LODWORD(STACK[0x6588]) % 0x101)];
  v163 = LODWORD(STACK[0x66A0]) + (v162 ^ 0x5FE0CAD4 ^ (1634270950 * (v162 ^ 0x96D1AEE4)));
  LODWORD(STACK[0x66D0]) = v141;
  v164 = v163 + ((v157 % 0x101 + 229321339) ^ 0xA8D55784 ^ v160);
  v165 = *(_DWORD *)&v148[4 * v141] ^ 0xA01F352B ^ (1634270950 * (*(_DWORD *)&v148[4 * v141] ^ 0x96D1AEE4));
  v166 = (v152 + 229321339) ^ 0x572AA87B ^ *(_DWORD *)(v159 + 4 * v152);
  v167 = (v144 & 0x15) + (v144 & 0xEA ^ 0x17E1) - 1;
  LODWORD(v152) = (v167 ^ 0x36D32F57) & (LODWORD(STACK[0x6900]) ^ 0xEF437FF);
  v168 = STACK[0x68B0];
  v169 = STACK[0x6890];
  v170 = (v116 % 0x101 + 229321339) ^ 0xA8D55784 ^ *(_DWORD *)(v159 + 4 * (v116 % 0x101));
  v171 = v157 + LODWORD(STACK[0x65C8]) - v161;
  LODWORD(STACK[0x66A0]) = v161 ^ LODWORD(STACK[0x65A0]) ^ v156 ^ (8 * (v157 ^ v161));
  v172 = STACK[0x68A0];
  v173 = LODWORD(STACK[0x6598])
       + 957062301 * ((LODWORD(STACK[0x68A0]) ^ 0x5D498EAB) + (v168 & 0xC92CC780 ^ 0x100C7DB ^ v152))
       + 957062301
       + v166
       + v165;
  v174 = *(_DWORD *)&v148[4 * ((v169 ^ 0xBFEDCB75) % 0x101)];
  LODWORD(v148) = LODWORD(STACK[0x65E8]) - (LODWORD(STACK[0x68A0]) ^ 0x5D498EAB);
  LODWORD(v152) = STACK[0x6A50];
  LODWORD(STACK[0x6970]) = (((LODWORD(STACK[0x65F0]) ^ 0xE976A3EE) + 378100754) ^ ((LODWORD(STACK[0x65F0]) ^ 0x2255F735)
                                                                                 - 576059189) ^ ((LODWORD(STACK[0x65F0]) ^ 0x3922DBE1)
                                                                                               - 958585825))
                         - v114
                         + 2073204628
                         + (LODWORD(STACK[0x6A50]) ^ 0x766EF7A6);
  v175 = LODWORD(STACK[0x65D0]) + v170 + (v174 ^ 0x5FE0CAD4 ^ (1634270950 * (v174 ^ 0x96D1AEE4)));
  v176 = (LODWORD(STACK[0x6590]) - 1947153367 - ((2 * LODWORD(STACK[0x6590])) & 0x17E1B600) + 3889) ^ 0x8BF0CC29 ^ v167;
  LODWORD(STACK[0x65F8]) = v115 - 1536919176;
  LODWORD(STACK[0x6900]) = (((v169 ^ 0xD3A3BF6B) + 623207344) ^ ((v169 ^ 0x1D189F21) - 341949466) ^ ((v169 ^ 0x7156EB3F) - 2016397316))
                         - v116
                         - 92217449;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x66A8]) - 700728413;
  v177 = v114 % 0x101;
  v178 = ((v169 ^ 0x320A26CD) + 1120606791) ^ ((v169 ^ 0xC75324D5) - 1215162273) ^ ((v169 ^ 0x4AB4C96D) + 980809191);
  v179 = (char *)*(&off_1015B46D0 + (v158 ^ 0x2699)) + 4 * v177;
  LODWORD(STACK[0x6590]) = (v152 % 0x101 + 229321339) ^ LODWORD(STACK[0x65A8]) ^ *(_DWORD *)(v159 + 4 * (v152 % 0x101));
  v180 = LODWORD(STACK[0x6580]) - ((2 * LODWORD(STACK[0x6580])) & 0xB28607DE) + 1497564143;
  v181 = STACK[0x68D0];
  v182 = STACK[0xDAD8];
  v183 = *(_QWORD *)(STACK[0xDAD8] + 8 * (0x54962C27 % STACK[0x68D0]));
  v184 = *(_QWORD *)(STACK[0xDAD8]
                   + 8
                   * (((((v183 ^ 0xA64AAC574D768D4ELL) + 0x45A90EE42094B839) ^ ((v183 ^ 0xD62C15AB26102564)
                                                                                + 0x35CFB7184BF21013) ^ ((v183 ^ 0x7D6BB4F1666BA527) - 0x6177E9BDF4766FAELL))
                     + 0x11115041A8768052)
                    % STACK[0x68D0]));
  LODWORD(STACK[0x63E0]) = v139 ^ 0x57058760;
  LODWORD(STACK[0x6AC0]) = v140;
  v185 = (v139 ^ 0x57058760) & 0xFFFFFFF8 | v140;
  LODWORD(STACK[0x65F0]) = v185 ^ LODWORD(STACK[0x6708]) ^ ((v139 ^ 0x57058761)
                                                          - ((2 * (v139 ^ 0x57058761)) & 0xDB663DD4)
                                                          + 1840455402);
  v186 = *(_QWORD *)(v182
                   + 8
                   * (((((v184 ^ 0x93CD2060238181ADLL) - 0x2F203F6CF11F5060) ^ ((v184 ^ 0x1F08C532D292F51CLL)
                                                                                + 0x5C1A25C1FFF3DB2FLL) ^ ((v184 ^ 0x81C8E85FFC1E79BCLL) - 0x3D25F7532E80A871))
                     - 0x4E1FEDFDBABE2C43)
                    % v181));
  STACK[0x6A80] = v182;
  v187 = *(_QWORD *)(v182
                   + 8
                   * (((((v186 ^ 0x12A5862D46AAEFD6) + 0x42917B6211AD1B77) ^ ((v186 ^ 0xEA22AAF6E3D32D2FLL)
                                                                                - 0x45E9A8464B2B2670) ^ ((v186 ^ 0xF58A21D6A874CFF4) - 0x5A412366008CC4ABLL))
                     - 0x5D39F041DC9164D3)
                    % v181));
  LODWORD(v187) = ((((v187 ^ 0x4A8F87677CDAE895) + 0x5ADE9326CB1EE45ALL) ^ ((v187 ^ 0xF3269CF379EFAB3ELL)
                                                                            - 0x1C88774D31D4580DLL) ^ ((v187 ^ 0xB4A4169908384EA6) - 0x5B0AFD274003BD95))
                 - 0x1D5C194C24E17022)
                % v181;
  LODWORD(STACK[0x6AA0]) = ((((v187 - ((2 * v187) & 0x8F9B4F0) + 612162168) ^ 0xBA52EE7F) - 1187655519) ^ (((v187 - ((2 * v187) & 0x8F9B4F0) + 612162168) ^ 0x8F09BEC2) - 1938915298) ^ (((v187 - ((2 * v187) & 0x8F9B4F0) + 612162168) ^ 0x11278AC5) + 306230299))
                         - 959310034;
  LODWORD(v187) = STACK[0x69B0];
  v188 = LODWORD(STACK[0x6A10]);
  v189 = 16843009 * v188;
  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x69B0]) ^ 0x45578D8C;
  LODWORD(STACK[0x64A8]) = (1694498816 * v188) & (v187 ^ 0x45578D8C);
  v190 = LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x65D0]) = v189;
  LODWORD(STACK[0x65E8]) = v190 ^ v189;
  LODWORD(STACK[0x6570]) = *(_DWORD *)(STACK[0x6A30] - 4);
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x6A20]) + 1;
  LODWORD(STACK[0x6950]) = (2 * v171) & 0x359E63EC;
  LODWORD(STACK[0x6880]) = v171 - 1697697290;
  LODWORD(STACK[0x66A8]) = v164 + 1;
  LODWORD(STACK[0x65C8]) = (2 * (v173 + 1)) & 0x5F177AA;
  LODWORD(STACK[0x65B8]) = v173 - 2097628202;
  LODWORD(STACK[0x6598]) = 2 * v152;
  LODWORD(STACK[0x64C8]) = (2 * (v175 + 1)) & 0x17C5B218;
  LODWORD(STACK[0x64C0]) = v175 + 199416077;
  LODWORD(v181) = STACK[0x65D8];
  LODWORD(STACK[0x6A30]) = v139;
  LODWORD(STACK[0x6A20]) = v185;
  LODWORD(STACK[0x6708]) = v185 ^ v139 ^ v181;
  LODWORD(STACK[0x69F0]) = (2 * (v176 + (_DWORD)v148)) & 0xC9A2C236;
  LODWORD(STACK[0x69E0]) = v176 + (_DWORD)v148 - 456040165;
  LODWORD(STACK[0x63F0]) = v116;
  LODWORD(STACK[0x65A0]) = v116 - v178;
  v191 = STACK[0x6A90];
  LODWORD(STACK[0x69A0]) = 1077952576 * LODWORD(STACK[0x6A90]);
  LODWORD(STACK[0x62F8]) = 33686018 * v191;
  LODWORD(STACK[0x64B8]) = (33686018 * v191) & 0x5773DDD8;
  LODWORD(STACK[0x64A0]) = LODWORD(STACK[0x66D8]) - 1413878036;
  HIDWORD(v193) = *((_DWORD *)v179 - 1);
  LODWORD(v193) = HIDWORD(v193);
  v192 = v193 >> 21;
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x6588]) = v180 ^ v168;
  LODWORD(STACK[0x6580]) = v187 ^ 0xE1401A27;
  v194 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v158) - 4);
  LODWORD(STACK[0x69B0]) = v176;
  LODWORD(STACK[0x6990]) = v176 >> 7;
  LODWORD(STACK[0x6980]) = v172 >> 7;
  LODWORD(STACK[0x64F8]) = v192;
  LODWORD(STACK[0x6450]) = v192 >> 3;
  LODWORD(STACK[0x63E8]) = v155;
  LODWORD(STACK[0x63D8]) = v155 ^ 0x71717171;
  LODWORD(STACK[0x6A50]) = -303170602;
  return v194(2389700176);
}

uint64_t sub_100A66978()
{
  int v0;
  unsigned int v1;
  int v2;

  v1 = STACK[0x6A50];
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6AA0]) < LODWORD(STACK[0x6A50]);
  v2 = STACK[0x6A90];
  if (LODWORD(STACK[0x6A90]) == v0 - 1823028736 < v1)
    v2 = (v0 - 1823028736) < LODWORD(STACK[0x6AA0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((24997 * (v2 ^ 1)) ^ LODWORD(STACK[0x6A60]))) - 4))();
}

uint64_t sub_100A69B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  int v7;
  int v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x62E8]) = LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x65D0]);
  LODWORD(STACK[0x69D0]) += LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x65C0]) ^ LODWORD(STACK[0x6AC0]);
  LODWORD(STACK[0x65B0]) = STACK[0x6598] & 0xECDDEF4C;
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x64C0]) - LODWORD(STACK[0x64C8]);
  LODWORD(STACK[0x6598]) = 1984577653 * LODWORD(STACK[0x6900]);
  LODWORD(STACK[0x6A50]) = 865701531 * LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x65A0]) = LODWORD(STACK[0x64A0]) - LODWORD(STACK[0x64B8]);
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x64F8]) ^ STACK[0x6450] & 0xBEB0B22;
  v7 = LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x63D0]) = LODWORD(STACK[0x6578]) ^ 0x4A4A4A4A;
  LODWORD(STACK[0x6588]) = v7;
  LODWORD(STACK[0x6590]) = v7 ^ 0x297B1D05;
  v8 = STACK[0x6940];
  LODWORD(STACK[0x6AA0]) = v6 ^ 0x1FD;
  STACK[0x6A90] = STACK[0xDAD8];
  LODWORD(STACK[0x6A60]) = (((v8 ^ 0xC7BE05C0) + 1517884307) ^ ((v8 ^ 0x6893D847) - 178991594) ^ ((v8 ^ v6 ^ 0x1FD ^ 0xA48B3826)
                                                                                                + 961287306))
                         - 646189112;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v6);
  LODWORD(STACK[0x65C0]) = __ROR4__(STACK[0x6570], 3) ^ 0x50DAD845;
  return v9(a1, a2, a3, a4, a5, a6, 1876801751);
}

uint64_t sub_100A69E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  unsigned int v8;
  _BOOL4 v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;

  v8 = STACK[0x6A60];
  v9 = LODWORD(STACK[0x6A60]) < a7;
  v10 = STACK[0x6AA0];
  STACK[0x6A80] = (LODWORD(STACK[0x6AA0]) + 3408);
  v11 = v7 + 356943617;
  if (v9 != v11 < 0x6FDDB8D7)
    v12 = v9;
  else
    v12 = v8 > v11;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((509 * v12) ^ v10)))();
}

uint64_t sub_100A6CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t (*v93)(_QWORD);

  LODWORD(STACK[0x65C0]) += LODWORD(STACK[0x6890]);
  LODWORD(STACK[0x65C8]) = LODWORD(STACK[0x65B8]) - LODWORD(STACK[0x65C8]);
  LODWORD(STACK[0x6578]) = LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x67D0]) + LODWORD(STACK[0x6A50]) + 1714461029;
  LODWORD(STACK[0x64B8]) = LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x6A10]);
  v7 = ((a5 + 0xCB15779BD63C8D3) ^ 0xD0A3E3111E276E24) & (2 * ((a5 + 0xCB15779BD63C8D3) & 0xD8ABC3195C374C35)) ^ (a5 + 0xCB15779BD63C8D3) & 0xD8ABC3195C374C35;
  v8 = ((2 * ((a5 + 0xCB15779BD63C8D3) ^ 0x61F0E3010E4B6606)) ^ 0x72B64030A4F85466) & ((a5 + 0xCB15779BD63C8D3) ^ 0x61F0E3010E4B6606) ^ (2 * ((a5 + 0xCB15779BD63C8D3) ^ 0x61F0E3010E4B6606)) & 0xB95B2018527C2A32;
  v9 = v8 ^ 0x8949200852042A11;
  v10 = (v8 ^ 0x2012000000780020) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xE56C806149F0A8CCLL) & v9 ^ (4 * v9) & 0xB95B2018527C2A30;
  v12 = (v11 ^ 0xA148000040702800) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x18132018120C0233)) ^ 0x95B2018527C2A330) & (v11 ^ 0x18132018120C0233) ^ (16 * (v11 ^ 0x18132018120C0233)) & 0xB95B2018527C2A30;
  v14 = (v13 ^ 0x9112000002402200) & (v12 << 8) ^ v12;
  v15 = (((v13 ^ 0x28492018503C0803) << 8) ^ 0x5B2018527C2A3300) & (v13 ^ 0x28492018503C0803) ^ ((v13 ^ 0x28492018503C0803) << 8) & 0xB95B2018527C2A00;
  v16 = v14 ^ 0xB95B2018527C2A33 ^ (v15 ^ 0x1900001050280000) & (v14 << 16);
  v17 = ((a5 + 0xCB15779BD63C8D3) ^ (2
                                     * ((v16 << 32) & 0x395B201800000000 ^ v16 ^ ((v16 << 32) ^ 0x527C2A3300000000) & (((v15 ^ 0xA05B200802540833) << 16) & 0x395B201800000000 ^ 0x1943200000000000 ^ (((v15 ^ 0xA05B200802540833) << 16) ^ 0x2018527C00000000) & (v15 ^ 0xA05B200802540833))))) >> 24;
  v18 = a5
      + 0x4B5B8DE64B10637FLL
      + (((v17 ^ 0x79ECAFAA2F2421F5) + 0x4C1B9DE57AB1F47BLL) ^ ((v17 ^ 0x1F2B6E22B6A7DF11) + 0x2ADC5C6DE3320A9FLL) ^ ((v17 ^ 0x66C7C1023440F71CLL) + 0x5330F34D61D52294));
  v19 = (v18 ^ 0x60A959C494238151) & (2 * (v18 & 0x640A59E6D633D511)) ^ v18 & 0x640A59E6D633D511;
  v20 = ((2 * (v18 ^ 0x60A9CAC43C262971)) ^ 0x9472645D42BF8C0) & (v18 ^ 0x60A9CAC43C262971) ^ (2 * (v18 ^ 0x60A9CAC43C262971)) & 0x4A39322EA15FC60;
  v21 = v20 ^ 0x4A091222A140420;
  v22 = (v20 ^ 0x30200C001F840) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0x128E4C8BA857F180) & v21 ^ (4 * v21) & 0x4A39322EA15FC60;
  v24 = (v23 ^ 0x820002A815F000) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x421932042000C60)) ^ 0x4A39322EA15FC600) & (v23 ^ 0x421932042000C60) ^ (16 * (v23 ^ 0x421932042000C60)) & 0x4A39322EA15FC60;
  v26 = (v25 ^ 0x211222A015C400) & (v24 << 8) ^ v24;
  v27 = (((v25 ^ 0x48281004A003860) << 8) ^ 0xA39322EA15FC6000) & (v25 ^ 0x48281004A003860) ^ ((v25 ^ 0x48281004A003860) << 8) & 0x4A39322EA15FC00;
  v28 = v26 ^ 0x4A39322EA15FC60 ^ (v27 ^ 0x83022200140000) & (v26 << 16);
  v29 = (v18 ^ (2
              * ((v28 << 32) & 0x4A3932200000000 ^ v28 ^ ((v28 << 32) ^ 0x6A15FC6000000000) & (((v27 ^ 0x4209100EA019C60) << 16) & 0x4A3932200000000 ^ 0x481112200000000 ^ (((v27 ^ 0x4209100EA019C60) << 16) ^ 0x1322EA1500000000) & (v27 ^ 0x4209100EA019C60))))) >> 9;
  v30 = v18
      + 0x45D387A8C5DD1741
      + (((v29 ^ 0xAE62433BBBB95BB8) - 0x594F3F24477D54A9) ^ ((v29 ^ 0x3FBDC5EFD897C6FLL) + 0xB295FBEFEB28C82) ^ ((v29 ^ 0xADAF384AB7B12BC1) - 0x5A8244554B7524D0));
  v31 = (v30 ^ 0x841A2D4F5913AAC6) & (2 * (v30 & 0x1552AD6E1D9BC0D7)) ^ v30 & 0x1552AD6E1D9BC0D7;
  v32 = ((2 * (v30 ^ 0x8EBF251F5B352A42)) ^ 0x37DB10E28D5DD52ALL) & (v30 ^ 0x8EBF251F5B352A42) ^ (2 * (v30 ^ 0x8EBF251F5B352A42)) & 0x9BED887146AEEA94;
  v33 = v32 ^ 0x8824881142A22A95;
  v34 = (v32 ^ 0x13C90060040C0000) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0x6FB621C51ABBAA54) & v33 ^ (4 * v33) & 0x9BED887146AEEA94;
  v36 = (v35 ^ 0xBA4004102AAAA10) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x9049883044044081)) ^ 0xBED887146AEEA950) & (v35 ^ 0x9049883044044081) ^ (16 * (v35 ^ 0x9049883044044081)) & 0x9BED887146AEEA90;
  v38 = (v37 ^ 0x9AC8801042AEA800) & (v36 << 8) ^ v36;
  v39 = (((v37 ^ 0x125086104004285) << 8) ^ 0xED887146AEEA9500) & (v37 ^ 0x125086104004285) ^ ((v37 ^ 0x125086104004285) << 8) & 0x9BED887146AEEA00;
  v40 = v38 ^ 0x9BED887146AEEA95 ^ (v39 ^ 0x8988004006AA0000) & (v38 << 16);
  v41 = (v30 ^ (2
              * ((v40 << 32) & 0x1BED887100000000 ^ v40 ^ ((v40 << 32) ^ 0x46AEEA9500000000) & (((v39 ^ 0x1265883140046A95) << 16) & 0x1BED887100000000 ^ 0x138C885100000000 ^ (((v39 ^ 0x1265883140046A95) << 16) ^ 0x87146AE00000000) & (v39 ^ 0x1265883140046A95))))) >> 5;
  v42 = v30
      - 0x692DCF8458A604B7
      + (((v41 ^ 0x8FA7CC1F83BEB8C8) - 0x849F1C1ED8F0A25) ^ ((v41 ^ 0x36E11FF64D3F0A6) + 0x7B7FD3DEF51DBDB5) ^ ((v41 ^ 0x8DF7588D93EB78C1) - 0xA196553FDDACA2CLL));
  v43 = (v42 ^ 0x61182115D0F557C9) & (2 * (v42 & 0x55135A590F947D0)) ^ v42 & 0x55135A590F947D0;
  v44 = ((2 * (v42 ^ 0x63B82857D107DF69)) ^ 0xCDD23BE483FD3172) & (v42 ^ 0x63B82857D107DF69) ^ (2 * (v42 ^ 0x63B82857D107DF69)) & 0x66E91DF241FE98B8;
  v45 = v44 ^ 0x2229041240028889;
  v46 = (v44 ^ 0x4C019A001EC1000) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0x9BA477C907FA62E4) & v45 ^ (4 * v45) & 0x66E91DF241FE98B8;
  v48 = (v47 ^ 0x2A015C001FA00A0) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x6449083240049819)) ^ 0x6E91DF241FE98B90) & (v47 ^ 0x6449083240049819) ^ (16 * (v47 ^ 0x6449083240049819)) & 0x66E91DF241FE98B0;
  v50 = (v49 ^ 0x66811D2001E88800) & (v48 << 8) ^ v48;
  v51 = (((v49 ^ 0x6800D240161029) << 8) ^ 0xE91DF241FE98B900) & (v49 ^ 0x6800D240161029) ^ ((v49 ^ 0x6800D240161029) << 8) & 0x66E91DF241FE9800;
  v52 = v50 ^ 0x66E91DF241FE98B9 ^ (v51 ^ 0x6009104040980000) & (v50 << 16);
  v53 = v42 ^ (2
             * ((v52 << 32) & 0x66E91DF200000000 ^ v52 ^ ((v52 << 32) ^ 0x41FE98B900000000) & (((v51 ^ 0x6E00DB2016600B9) << 16) & 0x66E91DF200000000 ^ 0x62091C0000000000 ^ (((v51 ^ 0x6E00DB2016600B9) << 16) ^ 0x1DF241FE00000000) & (v51 ^ 0x6E00DB2016600B9))));
  v54 = (v53 ^ 0xC83872D3167BA781) + ((v53 >> 27) ^ 0xFFFFFFE6F8F1A59DLL) + 1;
  v55 = v54 + (v54 >> 10) - ((v54 + (v54 >> 10)) >> 3);
  v56 = (v55 ^ 0xDFF5628267B42C0CLL)
      - ((v55 ^ 0xDFF5628267B42C0CLL) >> 28)
      - (((v55 ^ 0xDFF5628267B42C0CLL) - ((v55 ^ 0xDFF5628267B42C0CLL) >> 28)) >> 12);
  v57 = v56 + (v56 >> 6);
  v58 = (4 * v57) & 0x86E2650 ^ v57 & 0x486E26FD | (4 * v57) & 0x8601C800 ^ v57 & 0xB791D902;
  v59 = (v57 ^ 0x10B2E365D24B4BA0)
      - ((v57 ^ 0x10B2E365D24B4BA0) >> 29)
      + (((v57 ^ 0x10B2E365D24B4BA0) - ((v57 ^ 0x10B2E365D24B4BA0) >> 29)) >> 15);
  v60 = v59
      + (v59 >> 6)
      + 0x4E4A65CFE0C51681
      + ((v59 + (v59 >> 6) + 0x4E4A65CFE0C51681) >> 29)
      - ((v59 + (v59 >> 6) + 0x4E4A65CFE0C51681 + ((v59 + (v59 >> 6) + 0x4E4A65CFE0C51681) >> 29)) >> 8);
  v61 = v60
      + (v60 >> 1)
      + 0x26B82B458888647ALL
      + ((v60 + (v60 >> 1) + 0x26B82B458888647ALL) >> 25)
      - ((v60 + (v60 >> 1) + 0x26B82B458888647ALL + ((v60 + (v60 >> 1) + 0x26B82B458888647ALL) >> 25)) >> 14);
  v62 = ((2 * v61) & 0x7FBF773FB9EFDFDELL) + (v61 ^ 0x3FDFBB9FDCF7EFEFLL);
  v63 = ((v62 - 0x1087119248468804) ^ 0xC21641E36B2E5611) & (2
                                                               * ((v62 - 0x1087119248468804) & 0xD0A755F26B4E9815)) ^ (v62 - 0x1087119248468804) & 0xD0A755F26B4E9815;
  v64 = ((2 * ((v62 - 0x1087119248468804) ^ 0x62564BE36FB65611)) ^ 0x65E23C2209F19C08) & ((v62
                                                                                               - 0x1087119248468804) ^ 0x62564BE36FB65611) ^ (2 * ((v62 - 0x1087119248468804) ^ 0x62564BE36FB65611)) & 0xB2F11E1104F8CE04;
  v65 = v64 ^ 0x9211021104084204;
  v66 = (v64 ^ 0xA01C0000708000) & (4 * v63) ^ v63;
  v67 = ((4 * v65) ^ 0xCBC4784413E33810) & v65 ^ (4 * v65) & 0xB2F11E1104F8CE04;
  v68 = (v67 ^ 0x82C0180000E00800) & (16 * v66) ^ v66;
  v69 = ((16 * (v67 ^ 0x303106110418C604)) ^ 0x2F11E1104F8CE040) & (v67 ^ 0x303106110418C604) ^ (16 * (v67 ^ 0x303106110418C604)) & 0xB2F11E1104F8CE00;
  v70 = (v69 ^ 0x221100100488C000) & (v68 << 8) ^ v68;
  v71 = (((v69 ^ 0x90E01E0100700E04) << 8) ^ 0xF11E1104F8CE0400) & (v69 ^ 0x90E01E0100700E04) ^ ((v69 ^ 0x90E01E0100700E04) << 8) & 0xB2F11E1104F8CE00;
  v72 = v70 ^ 0xB2F11E1104F8CE04 ^ (v71 ^ 0xB010100000C80000) & (v70 << 16);
  v73 = ((v62 - 0x1087119248468804) ^ (2
                                       * ((v72 << 32) & 0x32F11E1100000000 ^ v72 ^ ((v72 << 32) ^ 0x4F8CE0400000000) & (((v71 ^ 0x2E10E110430CA04) << 16) & 0x32F11E1100000000 ^ 0x20E01A0100000000 ^ (((v71 ^ 0x2E10E110430CA04) << 16) ^ 0x1E1104F800000000) & (v71 ^ 0x2E10E110430CA04))))) >> 6;
  v74 = v62
      - (((v73 ^ 0x89C0E6D6B17BAC40) + 0x417FEE736D5F4F02) ^ ((v73 ^ 0xDAED9665D2DF9024) + 0x12529EC00EFB7366) ^ ((v73 ^ 0x51FFE564222EC074) - 0x66BF123E01F5DCCALL))
      - 0x7233B18EEEDCDC39;
  v75 = (v74 ^ 0xFAED134DAF4343DBLL) & (2 * (v74 & 0xFCC19361AF930B9CLL)) ^ v74 & 0xFCC19361AF930B9CLL;
  v76 = ((2 * (v74 ^ 0x73ED354FB26751DBLL)) ^ 0x1E594C5C3BE8B48ELL) & (v74 ^ 0x73ED354FB26751DBLL) ^ (2 * (v74 ^ 0x73ED354FB26751DBLL)) & 0x8F2CA62E1DF45A46;
  v77 = v76 ^ 0x8124A22204144A41;
  v78 = (v76 ^ 0x608040C18C01000) & (4 * v75) ^ v75;
  v79 = ((4 * v77) ^ 0x3CB298B877D1691CLL) & v77 ^ (4 * v77) & 0x8F2CA62E1DF45A44;
  v80 = (v79 ^ 0xC20802815D04800) & (16 * v78) ^ v78;
  v81 = ((16 * (v79 ^ 0x830C260608241243)) ^ 0xF2CA62E1DF45A470) & (v79 ^ 0x830C260608241243) ^ (16 * (v79 ^ 0x830C260608241243)) & 0x8F2CA62E1DF45A40;
  v82 = (v81 ^ 0x820822201D440000) & (v80 << 8) ^ v80;
  v83 = (((v81 ^ 0xD24840E00B05A07) << 8) ^ 0x2CA62E1DF45A4700) & (v81 ^ 0xD24840E00B05A07) ^ ((v81 ^ 0xD24840E00B05A07) << 8) & 0x8F2CA62E1DF45A00;
  v84 = v82 ^ 0x8F2CA62E1DF45A47 ^ (v83 ^ 0xC24260C14500000) & (v82 << 16);
  v85 = v74 ^ (2
             * ((v84 << 32) & 0xF2CA62E00000000 ^ v84 ^ ((v84 << 32) ^ 0x1DF45A4700000000) & (((v83 ^ 0x8308802209A41847) << 16) & 0xF2CA62E00000000 ^ 0x900A20A00000000 ^ (((v83 ^ 0x8308802209A41847) << 16) ^ 0x262E1DF400000000) & (v83 ^ 0x8308802209A41847))));
  v86 = v85 ^ 0xF1FFD831;
  v87 = ((2 * (v6 & (4 * (v85 ^ 0xF1FFD831)) ^ 0x6A29CF50)) | 0x34A3670)
      - (v6 & (4 * (v85 ^ 0xF1FFD831)) ^ 0x6A29CF50)
      + 2119886024;
  v88 = ((v85 >> 26) ^ 0x24F835B084)
      + (v85 ^ 0x93E0D6C211CCDECALL)
      - ((((v85 >> 26) ^ 0x24F835B084) + (v85 ^ 0x93E0D6C211CCDECALL)) >> 9);
  v89 = v88
      + (v88 >> 5)
      - 0x476F346A26BEBD36
      - ((v88 + (v88 >> 5) - 0x476F346A26BEBD36) >> 26)
      + ((v88 + (v88 >> 5) - 0x476F346A26BEBD36 - ((v88 + (v88 >> 5) - 0x476F346A26BEBD36) >> 26)) >> 15);
  v90 = v89 + (v89 >> 6);
  LODWORD(STACK[0x6570]) = LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x65B8]) = LODWORD(STACK[0x6708]) ^ 0x9A2F5BC0;
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x6900]) ^ 0x546A0A86;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0] + (*(_BYTE *)(STACK[0x6AB0] + 4) & 0xF)) + 7) & 0xF))
                    + 7) & 0xF))
       + 1) & 0xE) != 0)
    v92 = (*(_BYTE *)(STACK[0x6AB0]
                    + ((*(_BYTE *)(STACK[0x6AB0]
                                 + ((*(_BYTE *)(STACK[0x6AB0] + (*(_BYTE *)(STACK[0x6AB0] + 4) & 0xF)) + 7) & 0xF))
                      + 7) & 0xF))
         + 1) & 0xF;
  else
    v92 = 1;
  v93 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x6A80]) - 4);
  STACK[0x6A90] = v92;
  STACK[0x6A10] = v92 - 1;
  v91 = v90
      + 0x456F2E0C61DA9F6
      - ((v90 + 0x456F2E0C61DA9F6) >> 24)
      - ((v90 + 0x456F2E0C61DA9F6 - ((v90 + 0x456F2E0C61DA9F6) >> 24)) >> 14);
  return v93(v5 ^ v86 ^ v58 ^ v87 ^ ((_DWORD)v91 - (v91 >> 4)) ^ v6 & (4
                                                                                   * ((_DWORD)v91
                                                                                    - (v91 >> 4))) ^ 0x9F6F947A);
}

uint64_t sub_100A6E110(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;

  LODWORD(STACK[0x6A50]) = a1;
  LODWORD(STACK[0x6AA0]) = a5;
  v10 = (STACK[0x6A80] - 10305) | 0xA10;
  v11 = *(unsigned __int8 *)(a6 + v6) * v9 - 1524761650;
  LODWORD(STACK[0x6A60]) = v10;
  v12 = (v11 ^ 0x50D2B330) & (2 * (v11 & 0x5AE20432)) ^ v11 & 0x5AE20432;
  v13 = ((2 * (v10 ^ 0xD0529128 ^ v11)) ^ 0x15617E0C) & (v10 ^ 0xD0529128 ^ v11) ^ (2 * (v10 ^ 0xD0529128 ^ v11)) & 0x8AB0BF06;
  v14 = v13 ^ 0x8A908102;
  v15 = (v13 ^ 0x3000) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x2AC2FC18) & v14 ^ (4 * v14) & 0x8AB0BF04;
  v17 = (v16 ^ 0xA80BC06) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x80300306)) ^ 0xAB0BF060) & (v16 ^ 0x80300306) ^ (16 * (v16 ^ 0x80300306)) & 0x8AB0BF00;
  v19 = v17 ^ 0x8AB0BF06 ^ (v18 ^ 0x8A00B006) & (v17 << 8);
  v20 = v11 ^ (2
             * ((v19 << 16) & 0xAB00000 ^ v19 ^ ((v19 << 16) ^ 0x3F060000) & (((v18 ^ 0xB00F06) << 8) & 0xAB00000 ^ 0xA000000 ^ (((v18 ^ 0xB00F06) << 8) ^ 0xB0BF0000) & (v18 ^ 0xB00F06))));
  v21 = (v7 - ((2 * v7) & 0xE577693A) + 1924904093) ^ 0x2938CEA3 ^ v20;
  v22 = (v21 + v6) >> 16;
  v23 = v21 + v6 - v22 + ((v21 + (_DWORD)v6 - v22) >> 8);
  v24 = v6 + 1868234859 + v21 - v22 + ((v21 + (_DWORD)v6 - v22) >> 8);
  LODWORD(STACK[0x6A40]) = v24;
  v25 = ((4 * v24) ^ 0x43E1E530) & 0xBAC22D2C ^ 0x2981A16A ^ ((((4 * v24) ^ 0x43E1E530) & 0x34ADC37C ^ 0x2920605B) - 1);
  v26 = ((v23 + 584528875) ^ 0x33DCC8C2) & (2 * ((v23 + 584528875) & 0xBBDECCEB)) ^ (v23 + 584528875) & 0xBBDECCEB;
  v27 = ((2 * ((v23 + 584528875) ^ 0x417CC0C2)) ^ 0xF5441852) & ((v23 + 584528875) ^ 0x417CC0C2) ^ (2
                                                                                                  * ((v23 + 584528875) ^ 0x417CC0C2)) & 0xFAA20C28;
  v28 = ((4 * (v27 ^ 0xAA20429)) ^ 0xEA8830A4) & (v27 ^ 0xAA20429) ^ (4 * (v27 ^ 0xAA20429)) & 0xFAA20C28;
  v29 = v28 ^ 0x10220C09;
  v30 = (v28 ^ 0xEA800020) & (16 * ((v27 ^ 0xF0000000) & (4 * v26) ^ v26)) ^ (v27 ^ 0xF0000000) & (4 * v26) ^ v26;
  v31 = ((16 * v29) ^ 0xAA20C290) & v29 ^ (16 * v29) & 0xFAA20C20;
  v32 = v30 ^ 0xFAA20C29 ^ (v31 ^ 0xAA200000) & (v30 << 8);
  LODWORD(STACK[0x6A20]) = v25 - ((2 * v25) & 0x3898C830) - 1671662566;
  v33 = (v23 + 584528875) ^ (2
                           * ((v32 << 16) & 0x7AA20000 ^ v32 ^ ((v32 << 16) ^ 0xC290000) & (((v31 ^ 0x50820C29) << 8) & 0xFAA20000 ^ 0x58A20000 ^ (((v31 ^ 0x50820C29) << 8) ^ 0x220C0000) & (v31 ^ 0x50820C29)))) ^ 0x73E01601;
  LODWORD(STACK[0x6A30]) = ((4 * v33) & v8 ^ 0x82A9A648)
                         + ((4 * v33) & 0x840B0240 ^ 0x35121026)
                         - (((4 * v33) & v8 ^ 0x82A9A648) & 0x848B0248);
  v34 = (v20 ^ 0x76B9B886 ^ v33)
      + v6
      - (((v20 ^ 0x76B9B886 ^ v33) + v6) >> 16)
      + (((v20 ^ 0x76B9B886 ^ v33) + (_DWORD)v6 - (((v20 ^ 0x76B9B886 ^ v33) + v6) >> 16)) >> 8)
      - 2060300736;
  v35 = (v34 ^ 0x55F3BA57) & (2 * (v34 & 0x5983B296)) ^ v34 & 0x5983B296;
  v36 = ((2 * (v34 ^ 0xD6F1FB73)) ^ 0x1EE493CA) & (v34 ^ 0xD6F1FB73) ^ (2 * (v34 ^ 0xD6F1FB73)) & 0x8F7249E4;
  v37 = v36 ^ 0x81124825;
  v38 = (v36 ^ 0xF0000C5) & (4 * v35) ^ v35;
  v39 = ((4 * v37) ^ 0x3DC92794) & v37 ^ (4 * v37) & 0x8F7249E4;
  v40 = (v39 ^ 0xD400181) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x82324861)) ^ 0xF7249E50) & (v39 ^ 0x82324861) ^ (16 * (v39 ^ 0x82324861)) & 0x8F7249E0;
  v42 = v40 ^ 0x8F7249E5 ^ (v41 ^ 0x872008A5) & (v40 << 8);
  v43 = v34 ^ (2
             * ((v42 << 16) & 0xF720000 ^ v42 ^ ((v42 << 16) ^ 0x49E50000) & (((v41 ^ 0x85241A5) << 8) & 0xF720000 ^ 0xD320000 ^ (((v41 ^ 0x85241A5) << 8) ^ 0x72490000) & (v41 ^ 0x85241A5)))) ^ 0x4794B2E9;
  v44 = v6
      - 558497578
      + (v20 ^ 0x49B0E98B ^ v43)
      - (((v20 ^ 0x49B0E98B ^ v43) + v6) >> 16)
      + (((v20 ^ 0x49B0E98B ^ v43) + (_DWORD)v6 - (((v20 ^ 0x49B0E98B ^ v43) + v6) >> 16)) >> 8);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8
                                                     * ((5139 * (STACK[0x6A10] == v6)) ^ STACK[0x6A80]))
                                         - 4))(LODWORD(STACK[0x6A50]) ^ v33 ^ LODWORD(STACK[0x6A30]) ^ v43 ^ (((4 * v43) & 0x8E6FEE50 ^ 0x9CA8BC7B) - 1) & 0x9E6FEE50 ^ v44 ^ ((4 * v44) ^ 0x7B6249EC) & 0x734175C0 ^ 0x99B6ABC0 ^ (-2 - ((~(((4 * v44) ^ 0x7B6249EC) & 0xFD2E9B90) | 0x8BE2EEEB) + (((4 * v44) ^ 0x7B6249EC) & 0x89228A80 | 0x741D1114))));
}

uint64_t sub_100A6ECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6880]) - LODWORD(STACK[0x6950]);
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6970]) + LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x6880]) = LODWORD(STACK[0x6960]) + LODWORD(STACK[0x6598]);
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A60]));
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x65F0]) ^ 0xC9D76792;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 - 4))(a1, a2, a3, 267982247, a5, a6, 1868234859, -558497578);
}

uint64_t sub_100A6EE20(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unint64_t v52;

  LODWORD(STACK[0x6AA0]) = v11;
  STACK[0x6A40] = v8;
  STACK[0x6A50] = v10;
  v16 = *(unsigned __int8 *)(a6 + v15) * v13 + 1066540735;
  v17 = LODWORD(STACK[0x6A60]) - 2258;
  LODWORD(STACK[0x6A80]) = v17;
  v18 = (v17 ^ 0xCE49D113 ^ v16) & (2 * (v16 & 0xC06DE141)) ^ v16 & 0xC06DE141;
  v19 = ((2 * (v16 ^ 0xCE83325B)) ^ 0x1DDDA634) & (v16 ^ 0xCE83325B) ^ (2 * (v16 ^ 0xCE83325B)) & 0xEEED31A;
  v20 = v19 ^ 0x222510A;
  v21 = (v19 ^ 0xCC8200) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0x3BBB4C68) & v20 ^ (4 * v20) & 0xEEED318;
  v23 = (v22 ^ 0xAAA4002) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x4449312)) ^ 0xEEED31A0) & (v22 ^ 0x4449312) ^ (16 * (v22 ^ 0x4449312)) & 0xEEED310;
  v25 = v23 ^ 0xEEED31A ^ (v24 ^ 0xEEC1100) & (v23 << 8);
  v26 = (v25 << 16) & 0xEEE0000 ^ v25 ^ ((v25 << 16) ^ 0x531A0000) & (((v24 ^ 0x2C21A) << 8) & 0xEEE0000 ^ 0x2C0000 ^ (((v24 ^ 0x2C21A) << 8) ^ 0x6ED30000) & (v24 ^ 0x2C21A));
  v27 = v14 - ((2 * v14) & 0x484EA2D2) + 606556521;
  v28 = v16 ^ (2 * v26);
  v29 = v27 ^ 0xFD83161C ^ v28;
  v30 = v15 + v9;
  v31 = v15
      + v8
      + v29
      + ((v29 + v12 - ((v29 + v12) >> 16)) >> 8)
      - ((2 * (v15 + v9 + v29 - ((v29 + v12) >> 16) + ((v29 + v12 - ((v29 + v12) >> 16)) >> 8))) & 0x5B2E7F50)
      - ((v29 + v12) >> 16);
  v32 = (4 * v31) ^ 0x9BD611F6;
  LODWORD(STACK[0x6A30]) = v32 & 0xB9949BBE;
  LODWORD(STACK[0x6A20]) = (v32 & 0x37FB75EE) - (v32 & 0x6AB01AE) + (v32 & 0x6AB01AC ^ 0xCEAF01BC);
  v33 = (((v31 ^ 0xB92F4B4D) + 1188082867) ^ ((v31 ^ 0xB01CD02C) + 1340288980) ^ ((v31 ^ 0xA4A4A4C9) + 1532713783))
      - 1052653743;
  v34 = (v33 ^ 0xCBC37D2D) & (2 * (v33 & 0xCB0B792D)) ^ v33 & 0xCB0B792D;
  v35 = ((2 * (v33 ^ 0x5DC7DF65)) ^ 0x2D994C90) & (v33 ^ 0x5DC7DF65) ^ (2 * (v33 ^ 0x5DC7DF65)) & 0x96CCA648;
  v36 = ((4 * (v35 ^ 0x9244A248)) ^ 0x5B329920) & (v35 ^ 0x9244A248) ^ (4 * (v35 ^ 0x9244A248)) & 0x96CCA648;
  v37 = v36 ^ 0x84CC2648;
  v38 = (v35 ^ 0x86080600) & (4 * v34) ^ v34 ^ 0x96CCA648 ^ (v36 ^ 0x12008000) & (16
                                                                                * ((v35 ^ 0x86080600) & (4 * v34) ^ v34));
  v39 = (16 * v37) & 0x96CCA640 ^ 0x92048248 ^ ((16 * v37) ^ 0x6CCA6480) & v37;
  v40 = (v38 << 8) & 0x96CCA600 ^ v38 ^ ((v38 << 8) ^ 0xCCA64800) & v39;
  v41 = v33 ^ (2
             * ((v40 << 16) & 0x16CC0000 ^ v40 ^ ((v40 << 16) ^ 0x26480000) & ((v39 << 8) & 0x16CC0000 ^ 0x12480000 ^ ((v39 << 8) ^ 0x4CA60000) & v39))) ^ 0x93E06EF0;
  v42 = STACK[0x6A90]
      + a4
      + (v28 ^ 0xA94E1C38 ^ v41)
      - (((v28 ^ 0xA94E1C38 ^ v41) + v12) >> 16)
      + (((v28 ^ 0xA94E1C38 ^ v41) + v12 - (((v28 ^ 0xA94E1C38 ^ v41) + v12) >> 16)) >> 8);
  v43 = (v42 ^ 0x8EB8EA8E) & (2 * (v42 & 0xCEBCEB2F)) ^ v42 & 0xCEBCEB2F;
  v44 = ((2 * (v42 ^ 0x17E9FAC8)) ^ 0xB2AA23CE) & (v42 ^ 0x17E9FAC8) ^ (2 * (v42 ^ 0x17E9FAC8)) & 0xD95511E6;
  v45 = (v44 ^ 0x100001C5) & (4 * v43);
  v46 = ((4 * (v44 ^ 0x49551021)) ^ 0x6554479C) & (v44 ^ 0x49551021) ^ (4 * (v44 ^ 0x49551021)) & 0xD95511E4;
  v47 = (v46 ^ 0x41540180) & (16 * (v45 ^ v43)) ^ v45 ^ v43;
  v48 = ((16 * (v46 ^ 0x98011063)) ^ 0x95511E70) & (v46 ^ 0x98011063) ^ (16 * (v46 ^ 0x98011063)) & 0xD95511E0;
  v49 = v47 ^ 0xD95511E7 ^ (v48 ^ 0x91511000) & (v47 << 8);
  v50 = v42 ^ (2
             * ((v49 << 16) & 0x59550000 ^ v49 ^ ((v49 << 16) ^ 0x11E70000) & (((v48 ^ 0x48040187) << 8) & 0x59550000 ^ 0x8440000 ^ (((v48 ^ 0x48040187) << 8) ^ 0x55110000) & (v48 ^ 0x48040187))));
  v51 = STACK[0x6A90]
      + a8
      + (v28 ^ 0x87388F94 ^ v50)
      - (((v28 ^ 0x87388F94 ^ v50) + v12) >> 16)
      + (((v28 ^ 0x87388F94 ^ v50) + v12 - (((v28 ^ 0x87388F94 ^ v50) + v12) >> 16)) >> 8);
  LODWORD(v52) = ((v51 >> 26) & 8 | (v51 << 6) & 0xE6FEE500) ^ __ROR4__(v51, 28) ^ 0xECE28C9F;
  HIDWORD(v52) = v52;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * ((58 * (v30 == 15)) ^ LODWORD(STACK[0x6A60])))
                                         - 4))(a1 ^ v41 ^ (((2 * ((4 * v41) & 0x8E6FEE50 ^ 0x84297510)) | 0x2A21A7AE)
                                                           - ((4 * v41) & 0x8E6FEE50 ^ 0x84297510)
                                                           - 353424343) ^ v50 ^ (4 * v50) & 0x8E6FEE50 ^ 0x79F78A84 ^ ((v52 >> 4) - ((2 * (v52 >> 4)) & 0x6079B26C) - 1338189514));
}

uint64_t sub_100A6F7F8(int a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  LODWORD(STACK[0x6A20]) = v9;
  LODWORD(STACK[0x6A50]) = a1;
  LODWORD(STACK[0x6AA0]) = v8;
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x66A0]) ^ 0x7A4C58A3;
  LODWORD(STACK[0x65A0]) ^= LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69A0]);
  v11 = (a2 + v6) >> 16;
  v12 = (a2 + v6 - v11) >> 8;
  v13 = a2 + v5 + v12;
  v14 = (v13 - v11) >> 8;
  v15 = (v13 - v14 - v11) >> 8;
  v16 = a2 + v12 + v15;
  v17 = v10 + v16 - v14 - v11 - v4;
  v18 = v10
      + a2
      + ((v16 + v3 + ((v16 + v3 - v14 - v11) >> 12) - v14 - v11) >> 3)
      + ((v16 + v3 - v14 - v11) >> 12)
      + v15
      + v12
      - v14
      - v11
      - v7;
  v19 = ((2 * ((v18 ^ 0xD26F5AD4) - ((v18 ^ 0xD26F5AD4) >> 12))) & 0x7FE477DC)
      + (((v18 ^ 0xD26F5AD4) - ((v18 ^ 0xD26F5AD4) >> 12)) ^ 0x3FF23BEE);
  v20 = ((v19 - 587213258) ^ 0xEA49C999) & (2 * ((v19 - 587213258) & 0xE30DEDDC)) ^ (v19 - 587213258) & 0xE30DEDDC;
  v21 = ((2 * ((v19 - 587213258) ^ 0xAA581391)) ^ 0x92ABFC9A) & ((v19 - 587213258) ^ 0xAA581391) ^ (2
                                                                                                  * ((v19 - 587213258) ^ 0xAA581391)) & 0x4955FE4C;
  v22 = v21 ^ 0x49540245;
  v23 = (v21 ^ 0x4101FC05) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x2557F934) & v22 ^ (4 * v22) & 0x4955FE4C;
  v25 = (v24 ^ 0x155F800) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x48000649)) ^ 0x955FE4D0) & (v24 ^ 0x48000649) ^ (16 * (v24 ^ 0x48000649)) & 0x4955FE40;
  v27 = v25 ^ 0x4955FE4D ^ (v26 ^ 0x155E400) & (v25 << 8);
  v28 = ((v19 - 587213258) ^ (2
                            * ((v27 << 16) & 0x49550000 ^ v27 ^ ((v27 << 16) ^ 0x7E4D0000) & (((v26 ^ 0x48001A0D) << 8) & 0x49550000 ^ 0x8010000 ^ (((v26 ^ 0x48001A0D) << 8) ^ 0x55FE0000) & (v26 ^ 0x48001A0D))))) >> 5;
  v29 = v19
      - (((v28 ^ 0x45CDCB44) + 815065367) ^ ((v28 ^ 0xC5DBB6E0) - 1333619533) ^ ((v28 ^ 0x871F1D2E) - 230277251))
      + 947859082;
  v30 = (v29 ^ 0xF19C9240) & (2 * (v29 & 0xF9DED861)) ^ v29 & 0xF9DED861;
  v31 = ((2 * (v29 ^ 0x221D9280)) ^ 0xB78695C2) & (v29 ^ 0x221D9280) ^ (2 * (v29 ^ 0x221D9280)) & 0xDBC34AE0;
  v32 = v31 ^ 0x48414A21;
  v33 = (v31 ^ 0x838208A1) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0x6F0D2B84) & v32 ^ (4 * v32) & 0xDBC34AE0;
  v35 = (v34 ^ 0x4B010A81) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x90C24061)) ^ 0xBC34AE10) & (v34 ^ 0x90C24061) ^ (16 * (v34 ^ 0x90C24061)) & 0xDBC34AE0;
  v37 = v35 ^ 0xDBC34AE1 ^ (v36 ^ 0x98000AE1) & (v35 << 8);
  v38 = v29 ^ (2
             * ((v37 << 16) & 0x5BC30000 ^ v37 ^ ((v37 << 16) ^ 0x4AE10000) & (((v36 ^ 0x43C340E1) << 8) & 0xDBC30000 ^ 0x18810000 ^ (((v36 ^ 0x43C340E1) << 8) ^ 0xC34A0000) & (v36 ^ 0x43C340E1))));
  v39 = v38 ^ 0xF43B8E0E;
  v40 = ((v38 ^ 0x5C66C7FF) + 1470281231) ^ ((v38 ^ 0x3FC96614) + 873273318) ^ ((v38 ^ 0xB875EC48) - 1280205382);
  v41 = (v40 - 674038104) ^ 0x3EC9F9BF;
  v42 = (2 * ((v40 - 674038104) & 0x94E26986 ^ 0xAA2B9039)) & 0x28009008 ^ (v40 - 674038104) & 0x94E26986 ^ 0xAA2B9039 ^ ((2 * ((v40 - 674038104) & 0x94E26986 ^ 0xAA2B9039)) ^ 0x54572072) & v41;
  v43 = (2 * v41) & 0xAA2B9038 ^ 0xAA289009 ^ ((2 * v41) ^ 0x54572072) & v41;
  v44 = (4 * v42) & 0xAA2B9038 ^ v42 ^ ((4 * v42) ^ 0xA8AE40E4) & v43;
  v45 = (4 * v43) & 0xAA2B9038 ^ 0x2019019 ^ ((4 * v43) ^ 0xA8AE40E4) & v43;
  v46 = (16 * v44) & 0xAA2B9030 ^ v44 ^ ((16 * v44) ^ 0x20190190) & v45;
  v47 = (16 * v45) & 0xAA2B9030 ^ 0x8029029 ^ ((16 * v45) ^ 0xA2B90390) & v45;
  v48 = v46 ^ (v46 << 8) & 0xAA2B9000 ^ ((v46 << 8) ^ 0x8900900) & v47 ^ 0x80230030;
  v49 = v40
      + 1823828014
      + ((((v40 - 674038104) ^ (2
                              * ((v48 << 16) & 0x2A2B0000 ^ v48 ^ ((v48 << 16) ^ 0x10390000) & ((v47 << 8) & 0xAA2B0000 ^ 0x2B0000 ^ ((v47 << 8) ^ 0x2B900000) & v47)))) >> 10) ^ 0x3039D2);
  v50 = v49 + (v49 >> 4);
  STACK[0x6638] = v17;
  LODWORD(STACK[0x64F8]) = v50;
  v51 = v50 ^ v17;
  v52 = v50 + 1174211645 + ((v50 + 1174211645) >> 14) - ((v50 + 1174211645 + ((v50 + 1174211645) >> 14)) >> 6);
  v53 = (v52 ^ 0xF2B32C3B) + ((v52 ^ 0xF2B32C3B) >> 11);
  v54 = ((v53 + 937373215) ^ 0xA02ED1FD) & (2 * ((v53 + 937373215) & 0xC820D1E1)) ^ (v53 + 937373215) & 0xC820D1E1;
  v55 = ((2 * ((v53 + 937373215) ^ 0x302F537F)) ^ 0xF01F053C) & ((v53 + 937373215) ^ 0x302F537F) ^ (2
                                                                                                  * ((v53 + 937373215) ^ 0x302F537F)) & 0xF80F829E;
  v56 = v55 ^ 0x8008282;
  v57 = (v55 ^ 0x6007000C) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0xE03E0A78) & v56 ^ (4 * v56) & 0xF80F829C;
  v59 = (v58 ^ 0xE00E0210) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x18018086)) ^ 0x80F829E0) & (v58 ^ 0x18018086) ^ (16 * (v58 ^ 0x18018086)) & 0xF80F8290;
  v61 = v59 ^ 0xF80F829E ^ (v60 ^ 0x8008001E) & (v59 << 8);
  v62 = ((v53 + 937373215) ^ (2
                            * ((v61 << 16) & 0xF80FFFFF ^ v61 ^ ((v61 << 16) ^ 0x29E0000) & (((v60 ^ 0x7807821E) << 8) & 0x780F0000 ^ 0x700D0000 ^ (((v60 ^ 0x7807821E) << 8) ^ 0xF820000) & (v60 ^ 0x7807821E))))) >> 3;
  v63 = v53
      - (((v62 ^ 0xB2B45347) - 1094249053) ^ ((v62 ^ 0x4B8C9F33) + 1207949783) ^ ((v62 ^ 0xFE3CB6EF) - 229642229))
      + 1733501024;
  v64 = (v63 ^ 0x11371B1F) & (2 * (v63 & 0xA4241C1F)) ^ v63 & 0xA4241C1F;
  v65 = ((2 * (v63 ^ 0x51371323)) ^ 0xEA261E78) & (v63 ^ 0x51371323) ^ (2 * (v63 ^ 0x51371323)) & 0xF5130F3C;
  v66 = v65 ^ 0x15110104;
  v67 = (v65 ^ 0xA4010138) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0xD44C3CF0) & v66 ^ (4 * v66) & 0xF5130F3C;
  v69 = (v68 ^ 0xD4000C3C) & (16 * v67) ^ v67;
  v70 = ((16 * (v68 ^ 0x2113030C)) ^ 0x5130F3C0) & (v68 ^ 0x2113030C) ^ (16 * (v68 ^ 0x2113030C)) & 0xF5130F30;
  v71 = v69 ^ 0xF5130F3C ^ (v70 ^ 0x5110033C) & (v69 << 8);
  v72 = v63 ^ (2
             * ((v71 << 16) & 0x75130000 ^ v71 ^ ((v71 << 16) ^ 0xF3C0000) & (((v70 ^ 0xA4030C3C) << 8) & 0xF5130000 ^ 0x64100000 ^ (((v70 ^ 0xA4030C3C) << 8) ^ 0x130F0000) & (v70 ^ 0xA4030C3C))));
  STACK[0x6A10] = v18;
  LODWORD(STACK[0x69A0]) = v52;
  v73 = v52 ^ v18;
  v74 = ((v72 ^ 0x91EC6BF6) + 507971811) ^ ((v72 ^ 0xEC9D9FD) - 2124236054) ^ ((v72 ^ 0xDB07B06C) + 1420612473);
  LODWORD(STACK[0x69B0]) = v39;
  LODWORD(STACK[0x6990]) = v72 ^ 0x70549CEB;
  v75 = ((v74 - 611415245) ^ 0x5BB0EEBA) & (2 * ((v74 - 611415245) & 0x933A8CB3)) ^ (v74 - 611415245) & 0x933A8CB3;
  v76 = ((2 * ((v74 - 611415245) ^ 0x7FD0EE98)) ^ 0xD9D4C456) & ((v74 - 611415245) ^ 0x7FD0EE98) ^ (2
                                                                                                  * ((v74 - 611415245) ^ 0x7FD0EE98)) & 0xECEA622A;
  v77 = v76 ^ 0x242A2229;
  v78 = (v76 ^ 0xE8C04021) & (4 * v75) ^ v75;
  v79 = ((4 * v77) ^ 0xB3A988AC) & v77 ^ (4 * v77) & 0xECEA6228;
  v80 = (v79 ^ 0xA0A80023) & (16 * v78) ^ v78;
  v81 = ((16 * (v79 ^ 0x4C426203)) ^ 0xCEA622B0) & (v79 ^ 0x4C426203) ^ (16 * (v79 ^ 0x4C426203)) & 0xECEA6220;
  v82 = v80 ^ 0xECEA622B ^ (v81 ^ 0xCCA2220B) & (v80 << 8);
  v83 = v74
      + 1858672614
      + ((((v74 - 611415245) ^ (2
                              * ((v82 << 16) & 0x6CEA0000 ^ v82 ^ ((v82 << 16) ^ 0x622B0000) & (((v81 ^ 0x2048400B) << 8) & 0xECEA0000 ^ 0x4880000 ^ (((v81 ^ 0x2048400B) << 8) ^ 0xEA620000) & (v81 ^ 0x2048400B))))) >> 10) ^ 0x22AE92);
  v84 = v83 - (v83 >> 6) - ((2 * (v83 - (v83 >> 6))) & 0xD66448AE) + 1798448215;
  v85 = (((v84 ^ 0xB2017ADD) + 1308525859) ^ ((v84 ^ 0x23D8DCD3) - 601414867) ^ ((v84 ^ 0xFAEB8259) + 85228967))
      - 2142280686;
  v86 = v85 - (v85 >> 12) + ((v85 - (v85 >> 12)) >> 1);
  LODWORD(STACK[0x6960]) = 4 * (v73 ^ v86);
  LODWORD(STACK[0x6980]) = v86;
  v87 = v86 - 70614587 - ((v86 - 70614587) >> 9) + ((v86 - 70614587 - ((v86 - 70614587) >> 9)) >> 5);
  v88 = v87 + 558139537 - ((2 * v87) & 0x4289117C) + 45;
  LODWORD(STACK[0x6970]) = v88;
  LODWORD(STACK[0x6950]) = 4 * (v72 ^ 0x70549CEB ^ v39 ^ v88);
  v89 = LODWORD(STACK[0x6890]) ^ (LODWORD(STACK[0x68C0]) - 329920397 - ((2 * LODWORD(STACK[0x68C0])) & 0xD8ABA0E6));
  v90 = (v89 - ((2 * v89) & 0x9AF5044) + 81242146) ^ LODWORD(STACK[0x6760]);
  v91 = LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6790]) ^ (v51 - ((2 * v51) & 0x166448AE) + 724706391);
  LODWORD(STACK[0x64C8]) = v84;
  LODWORD(STACK[0x69C0]) = ((4 * (v91 ^ v84)) ^ 0xB7BC8450) & 0x658AD348 ^ 0x525D813F ^ (((2
                                                                                         * ((4 * (v91 ^ v84)) ^ 0xB7BC8450)) & 0x944A1020)
                                                                                       - (((4 * (v91 ^ v84)) ^ 0xB7BC8450) & 0xEBE53D18)
                                                                                       - 1513441972);
  LODWORD(STACK[0x64C0]) = a3 & (4 * v90);
  LODWORD(STACK[0x64A8]) = (a3 & (4 * LODWORD(STACK[0x6900])) ^ 0x806F6A50)
                         - 329920397
                         - ((2 * (a3 & (4 * LODWORD(STACK[0x6900])) ^ 0x806F6A50)) & 0x188B80A0);
  v92 = STACK[0x65C8];
  LODWORD(STACK[0x64A0]) = (((4 * (LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x65C8]))) & 0x8642C000 ^ 0xF7C2D000)
                          - ((4 * (LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x65C8]))) & 0x8642C000)
                          + ((4 * (LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x65C8]))) & a3 ^ 0x242000)) & 0xFFFFEE50;
  LODWORD(STACK[0x6450]) = v89 - ((2 * v89) & 0xCF483C54) + 1738808874;
  v93 = STACK[0x68D0];
  v94 = STACK[0xDAD8];
  v95 = *(_QWORD *)(STACK[0xDAD8] + 8 * (0x47FF8C7 % STACK[0x68D0]));
  v96 = *(_QWORD *)(STACK[0xDAD8]
                  + 8
                  * (((((v95 ^ 0x49A8BCE25CA5906ELL) + 0x2A85F7DF44E688E0) ^ ((v95 ^ 0xCCB80E30405DE97FLL)
                                                                              - 0x506ABAF2A7E10E31) ^ ((v95 ^ 0x881DBFDF11F5741CLL) - 0x14CF0B1DF6499352))
                    - 0x6E20462F46921488)
                   % STACK[0x68D0]));
  LODWORD(STACK[0x6448]) = 1196344091
                         - (a3 & (4 * v92) ^ 0xEFA38A1 | 0x474EC31B)
                         + (a3 & (4 * v92) ^ 0xEFA38A1 | 0xB8B13CE4);
  v97 = *(_QWORD *)(v94
                  + 8
                  * (((((v96 ^ 0xF112603A1DDC88A1) - 0x5A490EEC032B72FALL) ^ ((v96 ^ 0x8875489DE2E37DFCLL)
                                                                              - 0x232E264BFC1487A7) ^ ((v96 ^ 0x746A25AAF232F850) + 0x20CEB483133AFDF5))
                    - 0x59A99C24DE2590CELL)
                   % v93));
  STACK[0x6A40] = v94;
  v98 = *(_QWORD *)(v94
                  + 8
                  * (((((v97 ^ 0xBFC2D23C90EDE095) + 0x6DC3BE81D8AA7A13) ^ ((v97 ^ 0x937E6BE5175EF39DLL)
                                                                              + 0x417F07585F19691BLL) ^ ((v97 ^ 0x21B1B4D48ABE1E05) - 0xC4F27963D067B7DLL))
                    + 0x20F39E50B1E1272CLL)
                   % v93));
  LODWORD(v98) = ((((v98 ^ 0xBC293909C1DE1148) - 0x32EF268F6083C008) ^ ((v98 ^ 0x9120FF1C6F2FC8ALL)
                                                                          + 0x782BEF889850D236) ^ ((v98 ^ 0xB8363BF50A21E0CFLL) - 0x36F02473AB7C318FLL))
                - 0x7C34ED7391E50167)
               % v93;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6920]) ^ 0xBE19B4DC;
  LODWORD(STACK[0x6A30]) = ((((v98 - ((2 * v98) & 0xEE7C46A) - 948706763) ^ 0xED6FE5DA) + 895518048) ^ (((v98 - ((2 * v98) & 0xEE7C46A) - 948706763) ^ 0xA99C6165) + 1905459681) ^ (((v98 - ((2 * v98) & 0xEE7C46A) - 948706763) ^ 0x8380668A) + 1536099856))
                         + 854458642;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80])) - 8))();
}

uint64_t sub_100A70B08@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, unsigned int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  unint64_t v109;
  unint64_t v110;
  int v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unsigned int v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  int v152;
  int v153;
  int v154;

  v6 = STACK[0x6A30];
  LODWORD(STACK[0x6A60]) = LODWORD(STACK[0x6A30]) < v4;
  v7 = (a3 | ((unint64_t)(a3 < v3) << 32)) + 0x7DEB80D2A37F1507;
  v8 = (((*(_QWORD *)(STACK[0x6A40] + 8 * v7 + 0x10A3F96AB5FE3720) ^ 0xA623857F209D4612) + 0x25E123822F46019BLL) ^ ((*(_QWORD *)(STACK[0x6A40] + 8 * v7 + 0x10A3F96AB5FE3720) ^ 0x72DB92E30905FE41) - 0xEE6CBE1F9214636) ^ ((LODWORD(STACK[0x6A80]) ^ 0xD9F51A9124959414 ^ *(_QWORD *)(STACK[0x6A40] + 8 * v7 + 0x10A3F96AB5FE3720)) + 0x5A37BC6C2B4EF2D7))
     * a1
     + 0x3D3ECAABA0463F45;
  v9 = (v8 ^ 0x9BAA9879C835E55) & (2 * (v8 & 0xA9BCB217DCD35E99)) ^ v8 & 0xA9BCB217DCD35E99;
  v10 = ((2 * (v8 ^ 0x1BDAED8C8501CE45)) ^ 0x64CCBF36B3A521B8) & (v8 ^ 0x1BDAED8C8501CE45) ^ (2
                                                                                                  * (v8 ^ 0x1BDAED8C8501CE45)) & 0xB2665F9B59D290DCLL;
  v11 = v10 ^ 0x9222408948529044;
  v12 = (v10 ^ 0x2044181211800088) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xC9997E6D674A4370) & v11 ^ (4 * v11) & 0xB2665F9B59D290DCLL;
  v14 = ((16 * (v13 ^ 0x326601921890908CLL)) ^ 0x2665F9B59D290DC0) & (v13 ^ 0x326601921890908CLL) ^ (16 * (v13 ^ 0x326601921890908CLL)) & 0xB2665F9B59D290D0;
  v15 = (v14 ^ 0x2264599119000000) & (((v13 ^ 0x80005E0941420050) & (16 * v12) ^ v12) << 8) ^ (v13 ^ 0x80005E0941420050) & (16 * v12) ^ v12;
  v16 = (((v14 ^ 0x9002060A40D2901CLL) << 8) ^ 0x665F9B59D290DC00) & (v14 ^ 0x9002060A40D2901CLL) ^ ((v14 ^ 0x9002060A40D2901CLL) << 8) & 0xB2665F9B59D29000;
  v17 = v15 ^ 0xB2665F9B59D290DCLL ^ (v16 ^ 0x22461B1950900000) & (v15 << 16);
  v18 = v8 ^ (2
            * ((v17 << 32) & 0x32665F9B00000000 ^ v17 ^ ((v17 << 32) ^ 0x59D290DC00000000) & (((v16 ^ 0x90204482094200DCLL) << 16) & 0x32665F9B00000000 ^ 0x2064060900000000 ^ (((v16 ^ 0x90204482094200DCLL) << 16) ^ 0x5F9B59D200000000) & (v16 ^ 0x90204482094200DCLL))));
  v19 = (a3 | ((unint64_t)(a3 < v3) << 32))
      - 0x578255DE0E700533
      + (((v18 ^ a2 ^ 0x3D3A7D963E1530E8) + 0x1D3BA5FE2D498E69) ^ ((v18 ^ a2 ^ 0x4224343C8EB7310ALL)
                                                                     + 0x6225EC549DEB8F8BLL) ^ ((v18 ^ a2 ^ 0x92EA65BBDFD47EC3)
                                                                                              - 0x4D14422C33773FBCLL));
  v20 = (v19 ^ 0x96D6D526A221F7ELL) & (2 * (v19 & 0x898C61648C841F7CLL)) ^ v19 & 0x898C61648C841F7CLL;
  v21 = ((2 * (v19 ^ 0x197D6D1B7B2A1B0ELL)) ^ 0x21E218FFEF5C08E4) & (v19 ^ 0x197D6D1B7B2A1B0ELL) ^ (2 * (v19 ^ 0x197D6D1B7B2A1B0ELL)) & 0x90F10C7FF7AE0472;
  v22 = v21 ^ 0x9011040010A20412;
  v23 = (v21 ^ 0x60083666000060) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x43C431FFDEB811C8) & v22 ^ (4 * v22) & 0x90F10C7FF7AE0470;
  v25 = (v24 ^ 0xC0007FD6A80040) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x90310C0021060432)) ^ 0xF10C7FF7AE04720) & (v24 ^ 0x90310C0021060432) ^ (16 * (v24 ^ 0x90310C0021060432)) & 0x90F10C7FF7AE0470;
  v27 = (v26 ^ 0x10047F72A00400) & (v25 << 8) ^ v25;
  v28 = (((v26 ^ 0x90E10800850E0052) << 8) ^ 0xF10C7FF7AE047200) & (v26 ^ 0x90E10800850E0052) ^ ((v26 ^ 0x90E10800850E0052) << 8) & 0x90F10C7FF7AE0400;
  v29 = v27 ^ 0x90F10C7FF7AE0472 ^ (v28 ^ 0x90000C77A6040000) & (v27 << 16);
  v30 = (v19 ^ (2
              * ((v29 << 32) & 0x10F10C7F00000000 ^ v29 ^ ((v29 << 32) ^ 0x77AE047200000000) & (((v28 ^ 0xF1000851AA0472) << 16) & 0x10F10C7F00000000 ^ 0x1080085100000000 ^ (((v28 ^ 0xF1000851AA0472) << 16) ^ 0xC7FF7AE00000000) & (v28 ^ 0xF1000851AA0472))))) >> 32;
  v31 = v19
      + 0x6D5EB50DCFD7A25CLL
      + (((v30 ^ 0x6957C96A04F288E4) + 0x129B8DA8CB41FD1ALL) ^ ((v30 ^ 0x1EEF324E22CC9C23) + 0x6523768CED7FE9DFLL) ^ ((v30 ^ 0x77B8FB24AF1065B8) + 0xC74BFE660A31046));
  v32 = (v31 ^ 0xBF78674175EF781CLL) & (2 * (v31 & 0xA0616794760F789DLL)) ^ v31 & 0xA0616794760F789DLL;
  v33 = ((2 * (v31 ^ 0xFFB8ED4999FD291ELL)) ^ 0xBFB315BBDFE4A306) & (v31 ^ 0xFFB8ED4999FD291ELL) ^ (2 * (v31 ^ 0xFFB8ED4999FD291ELL)) & 0x5FD98ADDEFF25182;
  v34 = v33 ^ 0x40488A4420125081;
  v35 = (v33 ^ 0x3810091C8600000) & (4 * v32) ^ v32;
  v36 = ((4 * v34) ^ 0x7F662B77BFC9460CLL) & v34 ^ (4 * v34) & 0x5FD98ADDEFF25180;
  v37 = (v36 ^ 0x5F400A55AFC04000) & (16 * v35) ^ v35;
  v38 = ((16 * (v36 ^ 0x99808840321183)) ^ 0xFD98ADDEFF251830) & (v36 ^ 0x99808840321183) ^ (16
                                                                                                 * (v36 ^ 0x99808840321183)) & 0x5FD98ADDEFF25180;
  v39 = (v38 ^ 0x5D9888DCEF201000) & (v37 << 8) ^ v37;
  v40 = (((v38 ^ 0x241020100D24183) << 8) ^ 0xD98ADDEFF2518300) & (v38 ^ 0x241020100D24183) ^ ((v38 ^ 0x241020100D24183) << 8) & 0x5FD98ADDEFF25100;
  v41 = v39 ^ 0x5FD98ADDEFF25183 ^ (v40 ^ 0x598888CDE2500000) & (v39 << 16);
  v42 = v18 ^ 0x75D41DD7630B6833;
  v43 = (v31 ^ (2
              * ((v41 << 32) & 0x5FD98ADD00000000 ^ v41 ^ ((v41 << 32) ^ 0x6FF2518300000000) & (((v40 ^ 0x65102100DA25083) << 16) & 0x5FD98ADD00000000 ^ 0x5500000D00000000 ^ (((v40 ^ 0x65102100DA25083) << 16) ^ 0xADDEFF200000000) & (v40 ^ 0x65102100DA25083))))) >> 16;
  v44 = v31
      - (((v43 ^ 0x6C6C30CD5BE1F966) - 0x755A7075D2739B21) ^ ((v43 ^ 0xCB18386E95E9CD45) + 0x2DD18729E38450FELL) ^ ((v43 ^ 0xA77488D1BD259DC8) + 0x41BD3796CB480071))
      - 0x487CB90A29409770;
  v45 = ((2 * (v44 ^ 0x9E98959BC0D26212)) ^ 0xA27F9490C8844CE6) & (v44 ^ 0x9E98959BC0D26212) ^ (2 * (v44 ^ 0x9E98959BC0D26212)) & 0x513FCA4864422672;
  v46 = (v44 ^ 0x8F961F9B80D26250) & (2 * (v44 & 0xCFA75FD3A4904461)) ^ v44 & 0xCFA75FD3A4904461;
  v47 = ((4 * (v45 ^ 0x51004A4824422211)) ^ 0x44FF2921910899CCLL) & (v45 ^ 0x51004A4824422211) ^ (4 * (v45 ^ 0x51004A4824422211)) & 0x513FCA4864422670;
  v48 = (v45 ^ 0x3F800000000000) & (4 * v46) ^ v46;
  v49 = v47 ^ 0x403F080000000040;
  v50 = ((16 * (v47 ^ 0x1100C24864422633)) ^ 0x13FCA48644226730) & (v47 ^ 0x1100C24864422633) ^ (16 * (v47 ^ 0x1100C24864422633)) & 0x513FCA4864422670;
  v51 = (v50 ^ 0x113C800044022600) & ((v49 & (16 * v48) ^ v48) << 8) ^ v49 & (16 * v48) ^ v48;
  v52 = (((v50 ^ 0x40034A4820400043) << 8) ^ 0x3FCA486442267300) & (v50 ^ 0x40034A4820400043) ^ ((v50 ^ 0x40034A4820400043) << 8) & 0x513FCA4864422600;
  v53 = v51 ^ 0x513FCA4864422673 ^ (v52 ^ 0x110A484040020000) & (v51 << 16);
  v54 = (v44 ^ (2
              * ((v53 << 32) & 0x513FCA4800000000 ^ v53 ^ ((v53 << 32) ^ 0x6442267300000000) & (((v52 ^ 0x4035820824400473) << 16) & 0x513FCA4800000000 ^ 0x11378A0800000000 ^ (((v52 ^ 0x4035820824400473) << 16) ^ 0x4A48644200000000) & (v52 ^ 0x4035820824400473))))) >> 8;
  v55 = v44
      - (((v54 ^ 0xCE86CD149D61D4DDLL) + 0x2DFA0ACAA293899) ^ ((v54 ^ 0x3FDC5535D50D7D13) - 0xC7AC7721DBA6EA9) ^ ((v54 ^ 0xF1B744EE8B00BDC6) + 0x3DEE2956BC485184));
  LODWORD(v54) = (v44
                - (((v54 ^ 0x9D61D4DD) - 1440139111) ^ ((v54 ^ 0xD50D7D13) - 498757289) ^ ((v54 ^ 0x8B00BDC6)
                                                                                         - 1136111228))
                - 1434243576) ^ 0x6EC691D5;
  LODWORD(v44) = (v55 - 1434243576) & 0xEE320EA7;
  LODWORD(v50) = (2 * v44) & ((v55 - 1434243576) ^ 0xEEA28C97) ^ v44;
  LODWORD(v54) = ((2 * v54) ^ 0x1E93EE4) & v54 ^ (2 * v54) & 0x80F49F72;
  v56 = v54 ^ 0x80148112;
  LODWORD(v54) = (v54 ^ 0xC01E20) & (4 * v50) ^ v50;
  LODWORD(v50) = ((4 * v56) ^ 0x3D27DC8) & v56 ^ (4 * v56) & 0x80F49F70;
  v57 = (v50 ^ 0xD01D40) & (16 * v54) ^ v54;
  LODWORD(v54) = ((16 * (v50 ^ 0x80248232)) ^ 0xF49F720) & (v50 ^ 0x80248232) ^ (16 * (v50 ^ 0x80248232)) & 0x80F49F70;
  LODWORD(v44) = (2 * v44) & ((v55 - 1434243576) ^ 0xCDB2EC86) ^ v44;
  LODWORD(v34) = ((2 * ((v55 - 1434243576) ^ 0x95D6F98E)) ^ 0xF7C9EE52) & ((v55 - 1434243576) ^ 0x95D6F98E) ^ (2 * ((v55 - 1434243576) ^ 0x95D6F98E)) & 0x7BE4F728;
  v58 = ((4 * (v34 ^ 0x8241129)) ^ 0xEF93DCA4) & (v34 ^ 0x8241129) ^ (4 * (v34 ^ 0x8241129)) & 0x7BE4F728;
  LODWORD(v44) = (v58 ^ 0x6B80D420) & (16 * ((v34 ^ 0x71C06600) & (4 * v44) ^ v44)) ^ (v34 ^ 0x71C06600) & (4 * v44) ^ v44;
  LODWORD(v34) = ((16 * (v58 ^ 0x10642309)) ^ 0xBE4F7290) & (v58 ^ 0x10642309) ^ (16 * (v58 ^ 0x10642309)) & 0x7BE4F720;
  v59 = (v55 - 1434243576) ^ (2
                            * ((v54 ^ 0x409700) & (v57 << 8) ^ v57 ^ ((((v54 ^ 0x80B40852) << 8) ^ 0xF49F0000) & (v54 ^ 0x80B40852) ^ ((v54 ^ 0x80B40852) << 8) & 0x80F49F00 ^ 0x940000) & (((v54 ^ 0x409700) & (v57 << 8) ^ v57) << 16)));
  v60 = (v55 - 1434243576) ^ (2
                            * ((v34 ^ 0x3A447200) & ((_DWORD)v44 << 8) ^ v44 ^ ((((v34 ^ 0x41A08529) << 8) ^ 0xE4F70000) & (v34 ^ 0x41A08529) ^ ((v34 ^ 0x41A08529) << 8) & 0x7BE4F700 ^ 0x60E40000) & (((v34 ^ 0x3A447200) & ((_DWORD)v44 << 8) ^ v44) << 16)));
  v61 = ((v55 + 0x4769CD671F3E8B31) ^ 0x33BF1C81DC67DD4DLL) & (2
                                                               * ((v55 + 0x4769CD671F3E8B31) & 0x333F0089DC641D4ELL)) ^ (v55 + 0x4769CD671F3E8B31) & 0x333F0089DC641D4ELL;
  v62 = ((2 * ((v55 + 0x4769CD671F3E8B31) ^ 0x31BB1D91CCEFDFD1)) ^ 0x5083A302117853ELL) & ((v55
                                                                                              + 0x4769CD671F3E8B31) ^ 0x31BB1D91CCEFDFD1) ^ (2 * ((v55 + 0x4769CD671F3E8B31) ^ 0x31BB1D91CCEFDFD1)) & 0x2841D18108BC29ELL;
  v63 = (v62 ^ 0x200010000088098) & (4 * v61) ^ v61;
  v64 = ((4 * (v62 ^ 0x284050810884281)) ^ 0xA107460422F0A7CLL) & (v62 ^ 0x284050810884281) ^ (4
                                                                                                 * (v62 ^ 0x284050810884281)) & 0x2841D18108BC29CLL;
  v65 = (v64 ^ 0x2001400000B0200) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x8409181080C083)) ^ 0x2841D18108BC29F0) & (v64 ^ 0x8409181080C083) ^ (16
                                                                                                 * (v64 ^ 0x8409181080C083)) & 0x2841D18108BC290;
  v67 = (v66 ^ 0x110000880000) & (v65 << 8) ^ v65;
  v68 = (((v66 ^ 0x2840C181003C20FLL) << 8) ^ 0x841D18108BC29F00) & (v66 ^ 0x2840C181003C20FLL) ^ ((v66 ^ 0x2840C181003C20FLL) << 8) & 0x2841D18108BC200;
  v69 = v67 ^ 0x2841D18108BC29FLL ^ (v68 ^ 0x4181000820000) & (v67 << 16);
  LODWORD(v50) = ((v5 & (v59 >> 1) ^ 0x7014812) - ((2 * (v5 & (v59 >> 1) ^ 0x7014812)) & 0x18801460) - 1931867408) ^ 0xEC5A44B0;
  v70 = (v55 + 0x4769CD671F3E8B31) ^ (2
                                      * ((v69 << 32) & 0x2841D1800000000 ^ v69 ^ ((v69 << 32) ^ 0x108BC29F00000000) & (((v68 ^ 0x28005081009409FLL) << 16) & 0x2841D1800000000 ^ 0x2840D1000000000 ^ (((v68 ^ 0x28005081009409FLL) << 16) ^ 0x1D18108B00000000) & (v68 ^ 0x28005081009409FLL)))) ^ 0x48A03B675CA8DB6CLL;
  v71 = v7
      - 0x7093F8DAB11E2096
      + (((v70 ^ v42 ^ 0x9E75C2F72383D440) + 0x618A3D08DC7C2BC0) ^ ((v70 ^ v42 ^ 0xFC87AEEAAB379514)
                                                                      + 0x378511554C86AECLL) ^ ((v70 ^ v42 ^ 0x85455C352512155ALL)
                                                                                              + 0x7ABAA3CADAEDEAA6));
  v72 = ((2 * (v71 ^ 0xB946EA59D658C7EFLL)) ^ 0xC63284D2C7B9F8CELL) & (v71 ^ 0xB946EA59D658C7EFLL) ^ (2 * (v71 ^ 0xB946EA59D658C7EFLL)) & 0x6319426963DCFC66;
  v73 = (v71 ^ 0x995FAA38B550B3EFLL) & (2 * (v71 & 0xDA5FA830B5843B88)) ^ v71 & 0xDA5FA830B5843B88;
  v74 = v72 ^ 0x2109422920440421;
  v75 = (v72 ^ 0x421000404210F840) & (4 * v73) ^ v73;
  v76 = ((4 * v74) ^ 0x8C6509A58F73F19CLL) & v74 ^ (4 * v74) & 0x6319426963DCFC64;
  v77 = (v76 ^ 0x100210350F000) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0x63184248608C0C63)) ^ 0x319426963DCFC670) & (v76 ^ 0x63184248608C0C63) ^ (16 * (v76 ^ 0x63184248608C0C63)) & 0x6319426963DCFC60;
  v79 = (v78 ^ 0x2110020021CCC400) & (v77 << 8) ^ v77;
  v80 = (((v78 ^ 0x4209406942103807) << 8) ^ 0x19426963DCFC6700) & (v78 ^ 0x4209406942103807) ^ ((v78 ^ 0x4209406942103807) << 8) & 0x6319426963DCFC00;
  v81 = v79 ^ 0x6319426963DCFC67 ^ (v80 ^ 0x100406140DC0000) & (v79 << 16);
  v82 = ((2 * v50) | 0x1EB476E4) - v50 - 257571698;
  v83 = (v71 ^ (2
              * ((v81 << 32) & 0x6319426900000000 ^ v81 ^ ((v81 << 32) ^ 0x63DCFC6700000000) & (((v80 ^ 0x6219020823009867) << 16) & 0x6319426900000000 ^ 0x2110002100000000 ^ (((v80 ^ 0x6219020823009867) << 16) ^ 0x426963DC00000000) & (v80 ^ 0x6219020823009867))))) >> 32;
  v84 = v71
      - 0x7F0C343316908F29
      + (((v83 ^ 0xFC0C7E9A3C8E8F7FLL) + 0x42BC708615787EF4) ^ ((v83 ^ 0xEE697D622E3B05F0) + 0x50D9737E07CDF47DLL) ^ ((v83 ^ 0x126503F8C8E826AFLL) - 0x532AF21B1EE128DCLL));
  v85 = ((2 * (v84 ^ 0xD157F0D2FC7ABB8)) ^ 0x2F5D6297EF5D8D78) & (v84 ^ 0xD157F0D2FC7ABB8) ^ (2
                                                                                                  * (v84 ^ 0xD157F0D2FC7ABB8)) & 0x97AEB14BF7AEC6BCLL;
  v86 = (v84 ^ 0x1833EF049F4569B0) & (2 * (v84 & 0x9ABBCE46D8696D04)) ^ v84 & 0x9ABBCE46D8696D04;
  v87 = ((4 * (v85 ^ 0x90A2914810A24284)) ^ 0x5EBAC52FDEBB1AF0) & (v85 ^ 0x90A2914810A24284) ^ (4 * (v85 ^ 0x90A2914810A24284)) & 0x97AEB14BF7AEC6BCLL;
  v88 = (v85 ^ 0x70C2003E30C8430) & (4 * v86) ^ v86;
  v89 = (v87 ^ 0x16AA810BD6AA02A0) & (16 * v88);
  v90 = ((16 * (v87 ^ 0x810430402104C40CLL)) ^ 0x7AEB14BF7AEC6BC0) & (v87 ^ 0x810430402104C40CLL) ^ (16 * (v87 ^ 0x810430402104C40CLL)) & 0x97AEB14BF7AEC6B0;
  v91 = (v90 ^ 0x12AA100B72AC4200) & ((v89 ^ v88) << 8) ^ v89 ^ v88;
  v92 = (((v90 ^ 0x8504A1408502843CLL) << 8) ^ 0xAEB14BF7AEC6BC00) & (v90 ^ 0x8504A1408502843CLL) ^ ((v90 ^ 0x8504A1408502843CLL) << 8) & 0x97AEB14BF7AEC600;
  v93 = v91 ^ 0x97AEB14BF7AEC6BCLL ^ (v92 ^ 0x86A00143A6860000) & (v91 << 16);
  v94 = (v84 ^ (2
              * ((v93 << 32) & 0x17AEB14B00000000 ^ v93 ^ ((v93 << 32) ^ 0x77AEC6BC00000000) & (((v92 ^ 0x110EB008512842BCLL) << 16) & 0x17AEB14B00000000 ^ 0x6A4004100000000 ^ (((v92 ^ 0x110EB008512842BCLL) << 16) ^ 0x314BF7AE00000000) & (v92 ^ 0x110EB008512842BCLL))))) >> 16;
  v95 = v84
      - (((v94 ^ 0xD73F4E1E67DD0925) + 0x31567C3EEA35A331) ^ ((v94 ^ 0x416E65D11CCC8746) - 0x58F8A80E6EDBD2ACLL) ^ ((v94 ^ 0x9651B174D7D0B957) + 0x703883545A381343))
      - 0x2150BD2D6BAB1181;
  v96 = (v95 ^ 0xA966A2CF503C1B16) & (2 * (v95 & 0xA276340F653E1BA7)) ^ v95 & 0xA276340F653E1BA7;
  v97 = ((2 * (v95 ^ 0xAD4282C1D04C3A14)) ^ 0x1E696D9D6AE44366) & (v95 ^ 0xAD4282C1D04C3A14) ^ (2 * (v95 ^ 0xAD4282C1D04C3A14)) & 0xF34B6CEB57221B2;
  v98 = v97 ^ 0x114924295122091;
  v99 = (v97 ^ 0xA20200C20600120) & (4 * v96) ^ v96;
  v100 = ((4 * v98) ^ 0x3CD2DB3AD5C886CCLL) & v98 ^ (4 * v98) & 0xF34B6CEB57221B0;
  v101 = (v100 ^ 0xC10920A95400080) & (16 * v99) ^ v99;
  v102 = ((16 * (v100 ^ 0x32424C420322133)) ^ 0xF34B6CEB57221B30) & (v100 ^ 0x32424C420322133) ^ (16 * (v100 ^ 0x32424C420322133)) & 0xF34B6CEB57221B0;
  v103 = (v102 ^ 0x30024CA15220100) & (v101 << 8) ^ v101;
  v104 = (((v102 ^ 0xC349204A0502083) << 8) ^ 0x34B6CEB57221B300) & (v102 ^ 0xC349204A0502083) ^ ((v102 ^ 0xC349204A0502083) << 8) & 0xF34B6CEB5722100;
  v105 = v103 ^ 0xF34B6CEB57221B3 ^ (v104 ^ 0x434868430200000) & (v103 << 16);
  v106 = (v95 ^ (2
               * ((v105 << 32) & 0xF34B6CE00000000 ^ v105 ^ ((v105 << 32) ^ 0x357221B300000000) & (((v104 ^ 0xB00304A855200B3) << 16) & 0xF34B6CE00000000 ^ 0x930028C00000000 ^ (((v104 ^ 0xB00304A855200B3) << 16) ^ 0x36CEB57200000000) & (v104 ^ 0xB00304A855200B3))))) >> 8;
  v107 = v95
       - (((v106 ^ 0x65A2DD23667B6070) - 0x6863BD1DC9CE71C5) ^ ((v106 ^ 0xF4175C27FDD81BDLL) - 0x28015FCD0689008) ^ ((v106 ^ 0x6A55D7F98FA93B95) - 0x6794B7C7201C2A20));
  v108 = v95
       - (((v106 ^ 0x667B6070) + 909217339) ^ ((v106 ^ 0x7FDD81BD) + 798453752) ^ ((v106 ^ 0x8FA93B95) - 538716704))
       + 1571731474;
  LODWORD(v52) = 2 * (v108 & 0xCDD497A8);
  LODWORD(v104) = ((2 * (v108 ^ 0x39E7633B)) ^ 0xE867E926) & (v108 ^ 0x39E7633B) ^ (2 * (v108 ^ 0x39E7633B)) & 0xF433F492;
  LODWORD(v98) = v104 ^ 0x14101491;
  LODWORD(v104) = (v104 ^ 0x6022E000) & (4 * (v52 & (v108 ^ 0xA9C6472B) ^ v108 & 0xCDD497A8)) ^ v52 & (v108 ^ 0xA9C6472B) ^ v108 & 0xCDD497A8;
  LODWORD(v95) = ((4 * v98) ^ 0xD0CFD24C) & v98 ^ (4 * v98) & 0xF433F490;
  LODWORD(v34) = (v95 ^ 0xD003D000) & (16 * v104) ^ v104;
  LODWORD(v106) = v52 & (v108 ^ 0xADC2D726) ^ v108 & 0xCDD497A8;
  LODWORD(v104) = ((2 * (v108 ^ 0x3D6AD576)) ^ 0xE17C85BC) & (v108 ^ 0x3D6AD576) ^ (2 * (v108 ^ 0x3D6AD576)) & 0xF0BE42DE;
  LODWORD(v98) = ((16 * (v95 ^ 0x24302493)) ^ 0x433F4930) & (v95 ^ 0x24302493) ^ (16 * (v95 ^ 0x24302493)) & 0xF433F490;
  LODWORD(v52) = ((4 * (v104 ^ 0x10824242)) ^ 0xC2F90B78) & (v104 ^ 0x10824242) ^ (4 * (v104 ^ 0x10824242)) & 0xF0BE42DC;
  LODWORD(v106) = (v52 ^ 0xC0B80240) & (16 * ((v104 ^ 0x60340080) & (4 * v106) ^ v106)) ^ (v104 ^ 0x60340080) & (4 * v106) ^ v106;
  LODWORD(v52) = ((16 * (v52 ^ 0x30064086)) ^ 0xBE42DE0) & (v52 ^ 0x30064086) ^ (16 * (v52 ^ 0x30064086)) & 0xF0BE42D0;
  v109 = ((v107 - 0x2DA0A1E30D3873C6) ^ 0x32CB72755B81AF52) & (2
                                                                 * ((v107 - 0x2DA0A1E30D3873C6) & 0xA0EC73719BA92F50)) ^ (v107 - 0x2DA0A1E30D3873C6) & 0xA0EC73719BA92F50;
  v110 = ((2 * ((v107 - 0x2DA0A1E30D3873C6) ^ 0x738396B66ED1B1D2)) ^ 0xA6DFCB8FEAF13D04) & ((v107
                                                                                                 - 0x2DA0A1E30D3873C6) ^ 0x738396B66ED1B1D2) ^ (2 * ((v107 - 0x2DA0A1E30D3873C6) ^ 0x738396B66ED1B1D2)) & 0xD36FE5C7F5789E82;
  v111 = v108 ^ (2
               * ((v52 ^ 0xA40000) & ((_DWORD)v106 << 8) ^ v106 ^ ((((v52 ^ 0xF01A421E) << 8) ^ 0xBE420000) & (v52 ^ 0xF01A421E) ^ ((v52 ^ 0xF01A421E) << 8) & 0xF0BE4200 ^ 0x30020000) & (((v52 ^ 0xA40000) & ((_DWORD)v106 << 8) ^ v106) << 16)));
  LODWORD(v104) = v108 ^ (2
                        * ((v98 ^ 0x40334000) & ((_DWORD)v34 << 8) ^ v34 ^ ((((v98 ^ 0xB400B483) << 8) ^ 0x33F40000) & (v98 ^ 0xB400B483) ^ ((v98 ^ 0xB400B483) << 8) & 0xF433F400 ^ 0x30303030) & (((v98 ^ 0x40334000) & ((_DWORD)v34 << 8) ^ v34) << 16)));
  v112 = ((4 * (v110 ^ 0x5120244015088282)) ^ 0x4DBF971FD5E27A08) & (v110 ^ 0x5120244015088282) ^ (4 * (v110 ^ 0x5120244015088282)) & 0xD36FE5C7F5789E80;
  v113 = (v112 ^ 0x412F8507D5601A00) & (16 * ((v110 ^ 0xD243E186E0601C00) & (4 * v109) ^ v109)) ^ (v110 ^ 0xD243E186E0601C00) & (4 * v109) ^ v109;
  v114 = ((16 * (v112 ^ 0x924060C020188482)) ^ 0x36FE5C7F5789E820) & (v112 ^ 0x924060C020188482) ^ (16 * (v112 ^ 0x924060C020188482)) & 0xD36FE5C7F5789E80;
  v115 = (((v114 ^ 0xC101A180A0701682) << 8) ^ 0x6FE5C7F5789E8200) & (v114 ^ 0xC101A180A0701682) ^ ((v114 ^ 0xC101A180A0701682) << 8) & 0xD36FE5C7F5789E00;
  v116 = (v114 ^ 0x126E444755088800) & (v113 << 8) ^ v113 ^ 0xD36FE5C7F5789E82 ^ (v115 ^ 0x4365C5C570180000) & (((v114 ^ 0x126E444755088800) & (v113 << 8) ^ v113) << 16);
  v117 = v111 ^ (((v104 >> 1) & 0x7F616E3A ^ 0xED9113A3) - 1);
  v118 = (v107 - 0x2DA0A1E30D3873C6) ^ (2
                                        * ((v116 << 32) & 0x536FE5C700000000 ^ v116 ^ ((v116 << 32) ^ 0x75789E8200000000) & (((v115 ^ 0x900A200285601C82) << 16) & 0x536FE5C700000000 ^ 0x1228008700000000 ^ (((v115 ^ 0x900A200285601C82) << 16) ^ 0x65C7F57800000000) & (v115 ^ 0x900A200285601C82))));
  v119 = v7
       - 0x56F566F14D89A598
       + (((v118 ^ 0xD2E208025895BB7FLL ^ v42 ^ 0x9185830C798400C0) + 0x6E7A7CF3867BFF40) ^ ((v118 ^ 0xD2E208025895BB7FLL ^ v42 ^ 0xD1D1584830874E8ELL)
                                                                                               + 0x2E2EA7B7CF78B172) ^ ((v118 ^ 0xD2E208025895BB7FLL ^ v42 ^ 0xAE74537A6CB3F077) + 0x518BAC85934C0F89));
  v120 = ((2 * (v119 ^ 0x71BEF0DE613B4F61)) ^ 0x6D293D055182CBA8) & (v119 ^ 0x71BEF0DE613B4F61) ^ (2 * (v119 ^ 0x71BEF0DE613B4F61)) & 0xB6949E82A8C165D4;
  v121 = (v119 ^ 0xF7AA6C5EE1FB0A21) & (2 * (v119 & 0xC72A6E5CC9FA2AB5)) ^ v119 & 0xC72A6E5CC9FA2AB5;
  v122 = ((4 * (v120 ^ 0x92948282A8412454)) ^ 0xDA527A0AA3059750) & (v120 ^ 0x92948282A8412454) ^ (4 * (v120 ^ 0x92948282A8412454)) & 0xB6949E82A8C165D4;
  v123 = (v120 ^ 0x2400180000804180) & (4 * v121) ^ v121;
  v124 = (v122 ^ 0x92101A02A0010550) & (16 * v123);
  v125 = ((16 * (v122 ^ 0x2484848008C06084)) ^ 0x6949E82A8C165D40) & (v122 ^ 0x2484848008C06084) ^ (16 * (v122 ^ 0x2484848008C06084)) & 0xB6949E82A8C165D0;
  v126 = (v125 ^ 0x2000880288004500) & ((v124 ^ v123) << 8) ^ v124 ^ v123;
  v127 = (((v125 ^ 0x9694168020C12094) << 8) ^ 0x949E82A8C165D400) & (v125 ^ 0x9694168020C12094) ^ ((v125 ^ 0x9694168020C12094) << 8) & 0xB6949E82A8C16500;
  v128 = v126 ^ 0xB6949E82A8C165D4 ^ (v127 ^ 0x9494828080410000) & (v126 << 16);
  v129 = v119 ^ (2
               * ((v128 << 32) & 0x36949E8200000000 ^ v128 ^ ((v128 << 32) ^ 0x28C165D400000000) & (((v127 ^ 0x22001C02288021D4) << 16) & 0x36949E8200000000 ^ 0x2014160200000000 ^ (((v127 ^ 0x22001C02288021D4) << 16) ^ 0x1E82A8C100000000) & (v127 ^ 0x22001C02288021D4))));
  v130 = v119
       + 0x70413B4993795062
       + (((HIDWORD(v129) ^ 0x45552F9CEC8F5059) + 0x3C2AD67DE299518DLL) ^ ((HIDWORD(v129) ^ 0x8A08535463CFAE59)
                                                                           - 0xC88554A92265073) ^ ((HIDWORD(v129) ^ 0xCF5D7CC86443A459) - 0x49DD7AD695AA5A73));
  v131 = ((2 * (v130 ^ 0x8BD1EB746A23F8EFLL)) ^ 0xAD71A48A76910C52) & (v130 ^ 0x8BD1EB746A23F8EFLL) ^ (2 * (v130 ^ 0x8BD1EB746A23F8EFLL)) & 0x56B8D2453B488628;
  v132 = (v130 ^ 0x9941B93448637CE7) & (2 * (v130 & 0xDD693931516B7EC6)) ^ v130 & 0xDD693931516B7EC6;
  v133 = ((4 * (v131 ^ 0x5288524509488229)) ^ 0x5AE34914ED2218A4) & (v131 ^ 0x5288524509488229) ^ (4 * (v131 ^ 0x5288524509488229)) & 0x56B8D2453B488628;
  v134 = (v131 ^ 0x420800002000400) & (4 * v132) ^ v132;
  v135 = (v133 ^ 0x52A0400429000020) & (16 * v134);
  v136 = ((16 * (v133 ^ 0x418924112488609)) ^ 0x6B8D2453B4886290) & (v133 ^ 0x418924112488609) ^ (16 * (v133 ^ 0x418924112488609)) & 0x56B8D2453B488620;
  v137 = (v136 ^ 0x4288004130080200) & ((v135 ^ v134) << 8) ^ v135 ^ v134;
  v138 = (((v136 ^ 0x1430D2040B408429) << 8) ^ 0xB8D2453B48862900) & (v136 ^ 0x1430D2040B408429) ^ ((v136 ^ 0x1430D2040B408429) << 8) & 0x56B8D2453B488600;
  v139 = v137 ^ 0x56B8D2453B488629 ^ (v138 ^ 0x1090400108000000) & (v137 << 16);
  v140 = (v130 ^ (2
                * ((v139 << 32) & 0x56B8D24500000000 ^ v139 ^ ((v139 << 32) ^ 0x3B48862900000000) & (((v138 ^ 0x4628924433488629) << 16) & 0x56B8D24500000000 ^ 0x4B8C00500000000 ^ (((v138 ^ 0x4628924433488629) << 16) ^ 0x52453B4800000000) & (v138 ^ 0x4628924433488629))))) >> 16;
  v141 = v130
       - (((v140 ^ 0xDCC1EDC5C4CC44B2) + 0x50F77B483A213E89) ^ ((v140 ^ 0xACEE56A3C8CD5446) + 0x20D8C02E36202E7DLL) ^ ((v140 ^ 0x702FEF6F95B8370ELL) - 0x3E6861D94AAB2CBLL))
       + 0x746298D78AE281E9;
  v142 = ((2 * (v141 ^ 0x49B3C9421B2E4B2BLL)) ^ 0x791D57386DE6236ALL) & (v141 ^ 0x49B3C9421B2E4B2BLL) ^ (2 * (v141 ^ 0x49B3C9421B2E4B2BLL)) & 0xBC8EAB9C36F311B4;
  v143 = (v141 ^ 0xE1B948DE099C5A1FLL) & (2 * (v141 & 0xF53D62DE2DDD5A9ELL)) ^ v141 & 0xF53D62DE2DDD5A9ELL;
  v144 = ((4 * (v142 ^ 0x8482A88412111095)) ^ 0xF23AAE70DBCC46D4) & (v142 ^ 0x8482A88412111095) ^ (4 * (v142 ^ 0x8482A88412111095)) & 0xBC8EAB9C36F311B4;
  v145 = (v142 ^ 0x380C031824E20020) & (4 * v143) ^ v143;
  v146 = (v144 ^ 0xB00AAA1012C00080) & (16 * v145);
  v147 = ((16 * (v144 ^ 0xC84018C24331121)) ^ 0xC8EAB9C36F311B50) & (v144 ^ 0xC84018C24331121) ^ (16 * (v144 ^ 0xC84018C24331121)) & 0xBC8EAB9C36F311B0;
  v148 = (v147 ^ 0x888AA98026311100) & ((v146 ^ v145) << 8) ^ v146 ^ v145;
  v149 = (((v147 ^ 0x3404021C10C200A5) << 8) ^ 0x8EAB9C36F311B500) & (v147 ^ 0x3404021C10C200A5) ^ ((v147 ^ 0x3404021C10C200A5) << 8) & 0xBC8EAB9C36F31100;
  v150 = v148 ^ 0xBC8EAB9C36F311B5 ^ (v149 ^ 0x8C8A881432110000) & (v148 << 16);
  v151 = (v141 ^ (2
                * ((v150 << 32) & 0x3C8EAB9C00000000 ^ v150 ^ ((v150 << 32) ^ 0x36F311B500000000) & (((v149 ^ 0x3004238804E200B5) << 16) & 0x3C8EAB9C00000000 ^ 0x1402890C00000000 ^ (((v149 ^ 0x3004238804E200B5) << 16) ^ 0x2B9C36F300000000) & (v149 ^ 0x3004238804E200B5))))) >> 8;
  LODWORD(v52) = v141
               - (((v151 ^ 0x1020EA89) + 121659452) ^ ((v151 ^ 0x3026AB45) + 658907640) ^ ((v151 ^ 0xEE467AB5)
                                                                                         - 114888696))
               - 1595329463;
  LODWORD(v107) = 2 * (v52 & 0x6614D821);
  LODWORD(v151) = ((2 * (v52 ^ 0x60E0DB8C)) ^ 0xDE8075A) & (v52 ^ 0x60E0DB8C) ^ (2 * (v52 ^ 0x60E0DB8C)) & 0x6F403AC;
  LODWORD(v141) = v151 ^ 0x21400A5;
  LODWORD(v151) = (v151 ^ 0xE00108) & (4 * (v107 & (v52 ^ 0x64C0DB8C) ^ v52 & 0x6614D821)) ^ v107 & (v52 ^ 0x64C0DB8C) ^ v52 & 0x6614D821;
  LODWORD(v149) = ((4 * v141) ^ 0x1BD00EB4) & v141 ^ (4 * v141) & 0x6F403AC;
  LODWORD(v141) = (v149 ^ 0x2D002A0) & (16 * v151) ^ v151;
  LODWORD(v151) = ((16 * (v149 ^ 0x4240109)) ^ 0x6F403AD0) & (v149 ^ 0x4240109) ^ (16 * (v149 ^ 0x4240109)) & 0x6F403A0;
  LODWORD(v149) = ((2 * (v52 ^ 0x6FFAC76C)) ^ 0x13DC3E9A) & (v52 ^ 0x6FFAC76C) ^ (2 * (v52 ^ 0x6FFAC76C)) & 0x9EE1F4C;
  v152 = v149 ^ 0x8220145;
  LODWORD(v149) = (v149 ^ 0xC40008) & (4 * (v107 & (v52 ^ 0x67D2D72C) ^ v52 & 0x6614D821)) ^ v107 & (v52 ^ 0x67D2D72C) ^ v52 & 0x6614D821;
  LODWORD(v147) = ((4 * v152) ^ 0x27B87D34) & v152 ^ (4 * v152) & 0x9EE1F4C;
  LODWORD(v149) = (v147 ^ 0x1A81D00) & (16 * v149) ^ v149;
  LODWORD(v147) = ((16 * (v147 ^ 0x8460249)) ^ 0x9EE1F4D0) & (v147 ^ 0x8460249) ^ (16 * (v147 ^ 0x8460249)) & 0x9EE1F40;
  LODWORD(v151) = (v151 ^ 0x6400200) & ((_DWORD)v141 << 8) ^ v141 ^ ((((v151 ^ 0xB4012D) << 8) ^ 0xF4030000) & (v151 ^ 0xB4012D) ^ ((v151 ^ 0xB4012D) << 8) & 0x6F40300 ^ 0x4000000) & (((v151 ^ 0x6400200) & ((_DWORD)v141 << 8) ^ v141) << 16);
  v153 = v52 ^ (2
              * ((v147 ^ 0x8E01400) & ((_DWORD)v149 << 8) ^ v149 ^ ((((v147 ^ 0x10E0B0D) << 8) ^ 0xEE1F0000) & (v147 ^ 0x10E0B0D) ^ ((v147 ^ 0x10E0B0D) << 8) & 0x9EE1F00 ^ 0x80E0000) & (((v147 ^ 0x8E01400) & ((_DWORD)v149 << 8) ^ v149) << 16))) ^ (((2 * (((v52 ^ (2 * (_DWORD)v151)) >> 1) & 0x7F616E3A ^ 0x53946D55)) & 0x3720962A) - (((v52 ^ (2 * (_DWORD)v151)) >> 1) & 0x7F616E3A ^ 0x53946D55) - 462998422);
  if (LODWORD(STACK[0x6A60]) != a3 + 1286168495 < 0x526A83C3)
    v154 = STACK[0x6A60];
  else
    v154 = a3 + 1286168495 < v6;
  LODWORD(STACK[0x6A90]) ^= v60 ^ v82 ^ v117 ^ 0x552A1681 ^ v153;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27295 * (v154 ^ 1)) ^ LODWORD(STACK[0x6A80]))) - 8))();
}

uint64_t sub_100A739CC()
{
  int v0;
  int v1;
  unsigned int v2;

  LODWORD(STACK[0x6A60]) = v0 - 6;
  LODWORD(STACK[0x6920]) = LODWORD(STACK[0x69E0]) - LODWORD(STACK[0x69F0]);
  v1 = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x64C0]) ^ LODWORD(STACK[0x6A20]) ^ STACK[0x6A10] ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6980]) ^ (v0 - 1905274041) & STACK[0x6960];
  LODWORD(STACK[0x66C0]) = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6970]) ^ STACK[0x6950] & 0x8E6FEE50;
  LODWORD(STACK[0x63C8]) = v1;
  LODWORD(STACK[0x68D0]) = v1 ^ 0xC1068664;
  STACK[0x6A30] = STACK[0xDAD8];
  v2 = ((LODWORD(STACK[0x6940]) ^ 0x85202ABA) + 417807593) ^ ((LODWORD(STACK[0x6940]) ^ 0xB5C33176) + 671360805) ^ ((LODWORD(STACK[0x6940]) ^ 0x3B45C490) - 1501375805);
  LODWORD(STACK[0x6A20]) = v2;
  LODWORD(STACK[0x6A10]) = v2 + 105375947;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100A73C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  int v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  int v157;
  int v158;
  int v159;

  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x6A20]) < 0x9661C90F;
  v8 = v7 < v5;
  v9 = *(_QWORD *)(STACK[0x6A30]
                 + 8 * ((v7 | (unint64_t)(v8 << 32)) + 0x79401DA79A97D20CLL)
                 + 0x35FF12C2FD384EF8);
  v10 = (LODWORD(STACK[0x6A60]) + 1373) | 4u;
  STACK[0x6A80] = v10;
  v11 = (((v9 ^ 0x27F00340775AB4F1) - 0x17ACDA18320E8785) ^ ((v10 ^ 0xDB6F174F5872E423 ^ v9) + 0x14CC31E8E2D908CDLL) ^ ((v9 ^ 0xF192190222257DBBLL) + 0x3E313FA5988EB131))
      * a4
      - 0x53A1337B6E5B315;
  v12 = (v11 ^ 0x234BA2D770A8929CLL) & (2 * (v11 & 0x836B00E77520C2D8)) ^ v11 & 0x836B00E77520C2D8;
  v13 = ((2 * (v11 ^ 0x2359A351DAA9979CLL)) ^ 0x4065476D5F12AA88) & (v11 ^ 0x2359A351DAA9979CLL) ^ (2 * (v11 ^ 0x2359A351DAA9979CLL)) & 0xA032A3B6AF895544;
  v14 = v13 ^ 0xA012A092A0895544;
  v15 = (v13 ^ 0x2003240D000000) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x80CA8EDABE255510) & v14 ^ (4 * v14) & 0xA032A3B6AF895544;
  v17 = ((16 * (v16 ^ 0x2030212401880044)) ^ 0x32A3B6AF8955440) & (v16 ^ 0x2030212401880044) ^ (16 * (v16 ^ 0x2030212401880044)) & 0xA032A3B6AF895540;
  v18 = (v17 ^ 0x222322A8815400) & (((v16 ^ 0x80028292AE015500) & (16 * v15) ^ v15) << 8) ^ (v16 ^ 0x80028292AE015500) & (16 * v15) ^ v15;
  v19 = (((v17 ^ 0xA010809407080104) << 8) ^ 0x32A3B6AF89554400) & (v17 ^ 0xA010809407080104) ^ ((v17 ^ 0xA010809407080104) << 8) & 0xA032A3B6AF895500;
  v20 = v18 ^ 0xA032A3B6AF895544 ^ (v19 ^ 0x2022A2A689010000) & (v18 << 16);
  v21 = v11 ^ (2
             * ((v20 << 32) & 0x2032A3B600000000 ^ v20 ^ ((v20 << 32) ^ 0x2F89554400000000) & (((v19 ^ 0x8010011026881144) << 16) & 0x2032A3B600000000 ^ 0x3600000000 ^ (((v19 ^ 0x8010011026881144) << 16) ^ 0x23B6AF8900000000) & (v19 ^ 0x8010011026881144))));
  v22 = (v7 | (unint64_t)(v8 << 32))
      + 0x7AFA9FD7AC492B30
      + (((v21 ^ a5 ^ 0x1C68B630ECAD5FD0) + 0x460A17F55C38E2B5) ^ ((v21 ^ a5 ^ 0x5E08793324B477D2)
                                                                     + 0x46AD8F69421CAB7) ^ ((v21 ^ a5 ^ 0xC16E8A81E22B4052)
                                                                                             - 0x64F3D4BBAD4102C9));
  v23 = (v22 ^ 0x83DA7BCC334D9304) & (2 * (v22 & 0xAB987BE0B34DDB86)) ^ v22 & 0xAB987BE0B34DDB86;
  v24 = ((2 * (v22 ^ 0x95EADD8D71D6820CLL)) ^ 0x7CE54CDB8536B314) & (v22 ^ 0x95EADD8D71D6820CLL) ^ (2 * (v22 ^ 0x95EADD8D71D6820CLL)) & 0x3E72A66DC29B598ALL;
  v25 = v24 ^ 0x212A2244289488ALL;
  v26 = (v24 ^ 0x3C60040180121000) & (4 * v23) ^ v23;
  v27 = ((4 * v25) ^ 0xF9CA99B70A6D6628) & v25 ^ (4 * v25) & 0x3E72A66DC29B5988;
  v28 = ((16 * (v27 ^ 0x6302648C0921982)) ^ 0xE72A66DC29B598A0) & (v27 ^ 0x6302648C0921982) ^ (16 * (v27 ^ 0x6302648C0921982)) & 0x3E72A66DC29B5980;
  v29 = (v28 ^ 0x2622264C00911800) & (((v27 ^ 0x3842802502094000) & (16 * v26) ^ v26) << 8) ^ (v27 ^ 0x3842802502094000) & (16 * v26) ^ v26;
  v30 = (((v28 ^ 0x18508021C20A410ALL) << 8) ^ 0x72A66DC29B598A00) & (v28 ^ 0x18508021C20A410ALL) ^ ((v28 ^ 0x18508021C20A410ALL) << 8) & 0x3E72A66DC29B5900;
  v31 = v29 ^ 0x3E72A66DC29B598ALL ^ (v30 ^ 0x3222244082190000) & (v29 << 16);
  v32 = (v22 ^ (2
              * ((v31 << 32) & 0x3E72A66D00000000 ^ v31 ^ ((v31 << 32) ^ 0x429B598A00000000) & (((v30 ^ 0xC50822D4082518ALL) << 16) & 0x3E72A66D00000000 ^ 0x1812246400000000 ^ (((v30 ^ 0xC50822D4082518ALL) << 16) ^ 0x266DC29B00000000) & (v30 ^ 0xC50822D4082518ALL))))) >> 32;
  v33 = v22
      + 0x75ABF10F8EA77BDCLL
      + (((v32 ^ 0xF197D2670A2817E4) + 0x3896EAF6768C47CDLL) ^ ((v32 ^ 0x1E8AA1F01E6B734FLL) - 0x2874669E9D30DC98) ^ ((v32 ^ 0xEF1D7397C71A5380) + 0x261C4B06BBBE03A9));
  v34 = ((2 * (v33 ^ 0x4D2B30FCF771342FLL)) ^ 0x4380C58707B39912) & (v33 ^ 0x4D2B30FCF771342FLL) ^ (2 * (v33 ^ 0x4D2B30FCF771342FLL)) & 0x21C062C383D9CC88;
  v35 = (v33 ^ 0x4CEB10BE7620F427) & (2 * (v33 & 0x6CEB523F74A8F8A6)) ^ v33 & 0x6CEB523F74A8F8A6;
  v36 = ((4 * (v34 ^ 0x2040224080484489)) ^ 0x87018B0E0F673224) & (v34 ^ 0x2040224080484489) ^ (4 * (v34 ^ 0x2040224080484489)) & 0x21C062C383D9CC88;
  v37 = (v36 ^ 0x100020203410000) & (16 * ((v34 ^ 0x180408303818000) & (4 * v35) ^ v35)) ^ (v34 ^ 0x180408303818000) & (4 * v35) ^ v35;
  v38 = ((16 * (v36 ^ 0x20C060C18098CC89)) ^ 0x1C062C383D9CC890) & (v36 ^ 0x20C060C18098CC89) ^ (16 * (v36 ^ 0x20C060C18098CC89)) & 0x21C062C383D9CC80;
  v39 = (v38 ^ 0x20000198C800) & (v37 << 8) ^ v37;
  v40 = (((v38 ^ 0x21C042C382410409) << 8) ^ 0xC062C383D9CC8900) & (v38 ^ 0x21C042C382410409) ^ ((v38 ^ 0x21C042C382410409) << 8) & 0x21C062C383D9CC00;
  v41 = v39 ^ 0x21C062C383D9CC89 ^ (v40 ^ 0x40428381C80000) & (v39 << 16);
  v42 = ((v41 << 32) ^ 0x3D9CC8900000000) & (((v40 ^ 0x2180204002114489) << 16) & 0x21C062C300000000 ^ 0x100600200000000 ^ (((v40 ^ 0x2180204002114489) << 16) ^ 0x62C383D900000000) & (v40 ^ 0x2180204002114489));
  v43 = (v41 << 32) & 0x21C062C300000000 ^ v41;
  v44 = v21 ^ 0xE5900B8F77FE1262;
  v45 = v33
      - (((((v33 ^ (2 * (v43 ^ v42))) >> 16) ^ 0x52071A921E286385) + 0x94D167EA25FE4A0) ^ ((((v33 ^ (2 * (v43 ^ v42))) >> 16) ^ 0xAF1ADE2ACAAFF6D6)
                                                                                             - 0xBAF2D3989278E33) ^ ((((v33 ^ (2 * (v43 ^ v42))) >> 16) ^ 0xFD1DE853C23DE648) - 0x59A81B4081B59EADLL))
      - 0x5C8C59179A3710CLL;
  v46 = ((2 * (v45 ^ 0x938019B57F8A5E78)) ^ 0xBCFC5CDBCD200798) & (v45 ^ 0x938019B57F8A5E78) ^ (2 * (v45 ^ 0x938019B57F8A5E78)) & 0x5E7E2E6DE69003CCLL;
  v47 = (v45 ^ 0x89FC37945D9A5D30) & (2 * (v45 & 0xCDFE37D8991A5DB4)) ^ v45 & 0xCDFE37D8991A5DB4;
  v48 = ((4 * (v46 ^ 0x4202222422900044)) ^ 0x79F8B9B79A400F30) & (v46 ^ 0x4202222422900044) ^ (4 * (v46 ^ 0x4202222422900044)) & 0x5E7E2E6DE69003CCLL;
  v49 = (v46 ^ 0x1C780C40C4000380) & (4 * v47) ^ v47;
  v50 = (v48 ^ 0x5878282582000300) & (16 * v49);
  v51 = ((16 * (v48 ^ 0x6060648649000CCLL)) ^ 0xE7E2E6DE69003CC0) & (v48 ^ 0x6060648649000CCLL) ^ (16 * (v48 ^ 0x6060648649000CCLL)) & 0x5E7E2E6DE69003C0;
  v52 = (v51 ^ 0x4662264C60000000) & ((v50 ^ v49) << 8) ^ v50 ^ v49;
  v53 = (((v51 ^ 0x181C08218690030CLL) << 8) ^ 0x7E2E6DE69003CC00) & (v51 ^ 0x181C08218690030CLL) ^ ((v51 ^ 0x181C08218690030CLL) << 8) & 0x5E7E2E6DE6900300;
  v54 = v52 ^ 0x5E7E2E6DE69003CCLL ^ (v53 ^ 0x5E2E2C6480000000) & (v52 << 16);
  v55 = (v45 ^ (2
              * ((v54 << 32) & 0x5E7E2E6D00000000 ^ v54 ^ ((v54 << 32) ^ 0x669003CC00000000) & (((v53 ^ 0x500209669003CCLL) << 16) & 0x5E7E2E6D00000000 ^ 0x5012086D00000000 ^ (((v53 ^ 0x500209669003CCLL) << 16) ^ 0x2E6DE69000000000) & (v53 ^ 0x500209669003CCLL))))) >> 8;
  v56 = v45
      - (((v55 ^ 0x2BCA3BAD8A68A0BBLL) + 0x283C785668E73231) ^ ((v55 ^ 0x622B9DEEE22F12E1) + 0x61DDDE1500A0806BLL) ^ ((v55 ^ 0x491C842CF3138800) + 0x4AEAC7D7119C1A8CLL));
  LODWORD(v43) = (v56 - 418544204) & 0x2BE880D2;
  LODWORD(v51) = (2 * v43) & ((v56 - 418544204) ^ 0x83C40691) ^ v43;
  LODWORD(v53) = ((2 * ((v56 - 418544204) ^ 0xC08507B1)) ^ 0xD6DB0EC6) & ((v56 - 418544204) ^ 0xC08507B1) ^ (2 * ((v56 - 418544204) ^ 0xC08507B1)) & 0xEB6D8762;
  v57 = v53 ^ 0x29248121;
  LODWORD(v53) = (v53 ^ 0xC2400640) & (4 * v51) ^ v51;
  LODWORD(v51) = ((4 * v57) ^ 0xADB61D8C) & v57 ^ (4 * v57) & 0xEB6D8760;
  v58 = ((16 * (v51 ^ 0x42498263)) ^ 0xB6D87630) & (v51 ^ 0x42498263) ^ (16 * (v51 ^ 0x42498263)) & 0xEB6D8760;
  v59 = v58 ^ 0x49258143;
  LODWORD(v43) = (2 * v43) & ((v56 - 418544204) ^ 0xABCCA0CB) ^ v43;
  v60 = ((2 * ((v56 - 418544204) ^ 0xFBCDA1CF)) ^ 0xA04A423A) & ((v56 - 418544204) ^ 0xFBCDA1CF) ^ (2
                                                                                                  * ((v56 - 418544204) ^ 0xFBCDA1CF)) & 0xD025211C;
  LODWORD(v43) = (v60 ^ 0x8000001F) & (4 * v43) ^ v43;
  v61 = ((v58 ^ 0x49258143) << 8) & 0xEB6D8700;
  v62 = ((4 * (v60 ^ 0x50252105)) ^ 0x40948474) & (v60 ^ 0x50252105) ^ (4 * (v60 ^ 0x50252105)) & 0xD025211C;
  v63 = (v58 ^ 0xA2480600) & (((v51 ^ 0xA9240500) & (16 * (_DWORD)v53) ^ v53) << 8) ^ (v51 ^ 0xA9240500) & (16 * v53) ^ v53;
  LODWORD(v43) = (v62 ^ 0x40040000) & (16 * v43) ^ v43;
  v64 = ((16 * (v62 ^ 0x90212109)) ^ 0x25211D0) & (v62 ^ 0x90212109) ^ (16 * (v62 ^ 0x90212109)) & 0xD0252110;
  LODWORD(v55) = (v56 - 418544204) ^ (2
                                    * ((v64 ^ 0x100) & ((_DWORD)v43 << 8) ^ v43 ^ ((((v64 ^ 0xD025200D) << 8) ^ 0x25210000) & (v64 ^ 0xD025200D) ^ ((v64 ^ 0xD025200D) << 8) & 0xD0252100 ^ 0x210000) & (((v64 ^ 0x100) & ((_DWORD)v43 << 8) ^ v43) << 16)));
  LODWORD(v51) = v6 & ((((_DWORD)v56 - 418544204) ^ (2
                                                   * (v63 ^ (((v59 << 8) ^ 0x6D870000) & v59 ^ v61 ^ 0x69050000) & (v63 << 16)))) >> 1) ^ 0x76212418;
  v56 -= 0x7655261BE1ED8F4ELL;
  v65 = (v56 ^ 0xB12A792E17D57D84) & (2 * (v56 & 0x25AB7C2E57D101A4)) ^ v56 & 0x25AB7C2E57D101A4;
  v66 = ((2 * (v56 ^ 0xB368D13293F77C8CLL)) ^ 0x2D875A39884CFA50) & (v56 ^ 0xB368D13293F77C8CLL) ^ (2 * (v56 ^ 0xB368D13293F77C8CLL)) & 0x96C3AD1CC4267D28;
  v67 = ((4 * (v66 ^ 0x9240A50444220528)) ^ 0x5B0EB4731099F4A0) & (v66 ^ 0x9240A50444220528) ^ (4 * (v66 ^ 0x9240A50444220528)) & 0x96C3AD1CC4267D28;
  v68 = ((16 * (v67 ^ 0x84C1090CC4260908)) ^ 0x6C3AD1CC4267D280) & (v67 ^ 0x84C1090CC4260908) ^ (16 * (v67 ^ 0x84C1090CC4260908)) & 0x96C3AD1CC4267D20;
  v69 = (v68 ^ 0x402810C40265000) & (((v67 ^ 0x1202A41000007420) & (16
                                                                      * ((v66 ^ 0x483041C80260808) & (4 * v65) ^ v65)) ^ (v66 ^ 0x483041C80260808) & (4 * v65) ^ v65) << 8) ^ (v67 ^ 0x1202A41000007420) & (16 * ((v66 ^ 0x483041C80260808) & (4 * v65) ^ v65)) ^ (v66 ^ 0x483041C80260808) & (4 * v65) ^ v65;
  v70 = (((v68 ^ 0x92C12C1084002D28) << 8) ^ 0xC3AD1CC4267D2800) & (v68 ^ 0x92C12C1084002D28) ^ ((v68 ^ 0x92C12C1084002D28) << 8) & 0x96C3AD1CC4267D00;
  v71 = v69 ^ 0x96C3AD1CC4267D28 ^ (v70 ^ 0x82810C0404240000) & (v69 << 16);
  v72 = v56 ^ (2
             * ((v71 << 32) & 0x16C3AD1C00000000 ^ v71 ^ ((v71 << 32) ^ 0x44267D2800000000) & (((v70 ^ 0x1442A118C0025528) << 16) & 0x16C3AD1C00000000 ^ 0x12C3291800000000 ^ (((v70 ^ 0x1442A118C0025528) << 16) ^ 0x2D1CC42600000000) & (v70 ^ 0x1442A118C0025528))));
  STACK[0x6A40] = v72 ^ 0x1742D22A9D11FFC5;
  v73 = (v7 | (unint64_t)(v8 << 32))
      - 0x1FCCF1B5E64DB9E1
      + (((v72 ^ 0x1742D22A9D11FFC5 ^ v44 ^ 0xDEC1172F9F2CFDLL) - 0xDEC1172F9F2CFDLL) ^ ((v72 ^ 0x1742D22A9D11FFC5 ^ v44 ^ 0x551A8F8FD37F256DLL)
                                                                                         - 0x551A8F8FD37F256DLL) ^ ((v72 ^ 0x1742D22A9D11FFC5 ^ v44 ^ 0x2430AEB8E3A07793) - 0x2430AEB8E3A07793));
  v74 = ((2 * (v73 ^ 0x6E597DAA1E4246F1)) ^ 0xFF3158FFC31EAA7CLL) & (v73 ^ 0x6E597DAA1E4246F1) ^ (2 * (v73 ^ 0x6E597DAA1E4246F1)) & 0xFF98AC7FE18F553ELL;
  v75 = (v73 ^ 0x4DD9DD81FFC843EFLL) & (2 * (v73 & 0x91C1D1D5FFCD13CFLL)) ^ v73 & 0x91C1D1D5FFCD13CFLL;
  v76 = ((4 * (v74 ^ 0x88A40020815502)) ^ 0xFE62B1FF863D54F8) & (v74 ^ 0x88A40020815502) ^ (4
                                                                                                * (v74 ^ 0x88A40020815502)) & 0xFF98AC7FE18F553CLL;
  v77 = (v74 ^ 0xCF00087FC10C003CLL) & (4 * v75) ^ v75;
  v78 = (v76 ^ 0xFE00A07F800D5430) & (16 * v77);
  v79 = ((16 * (v76 ^ 0x1980C0061820106)) ^ 0xF98AC7FE18F553E0) & (v76 ^ 0x1980C0061820106) ^ (16 * (v76 ^ 0x1980C0061820106)) & 0xFF98AC7FE18F5530;
  v80 = (v79 ^ 0xF988847E00855100) & ((v78 ^ v77) << 8) ^ v78 ^ v77;
  v81 = (((v79 ^ 0x6102801E10A041ELL) << 8) ^ 0x98AC7FE18F553E00) & (v79 ^ 0x6102801E10A041ELL) ^ ((v79 ^ 0x6102801E10A041ELL) << 8) & 0xFF98AC7FE18F5500;
  v82 = v80 ^ 0xFF98AC7FE18F553ELL ^ (v81 ^ 0x98882C6181050000) & (v80 << 16);
  v83 = (v73 ^ (2
              * ((v82 << 32) & 0x7F98AC7F00000000 ^ v82 ^ ((v82 << 32) ^ 0x618F553E00000000) & (((v81 ^ 0x6710801E608A413ELL) << 16) & 0x7F98AC7F00000000 ^ 0x53800C7000000000 ^ (((v81 ^ 0x6710801E608A413ELL) << 16) ^ 0x2C7FE18F00000000) & (v81 ^ 0x6710801E608A413ELL))))) >> 32;
  v84 = v73
      + 0x146DDC9206B54639
      + (((v83 ^ 0x50F07A4F8F0715FBLL) + 0x2E73F13384A7C5A3) ^ ((v83 ^ 0x96A748C5D3B8C829) - 0x17DB3C4627E7E78FLL) ^ ((v83 ^ 0xC657328AF15F5C84) - 0x472B460905007322));
  v85 = ((2 * (v84 ^ 0xECB343656AA4832DLL)) ^ 0x24C6554470E7FF56) & (v84 ^ 0xECB343656AA4832DLL) ^ (2 * (v84 ^ 0xECB343656AA4832DLL)) & 0x12632AA23873FFAALL;
  v86 = (v84 ^ 0xFC9341E74A867A25) & (2 * (v84 & 0xFED069C752D77C86)) ^ v84 & 0xFED069C752D77C86;
  v87 = v85 ^ 0x12212AA2081000A9;
  v88 = (v85 ^ 0x4200001063F600) & (4 * v86) ^ v86;
  v89 = ((4 * v87) ^ 0x498CAA88E1CFFEACLL) & v87 ^ (4 * v87) & 0x12632AA23873FFA8;
  v90 = (v89 ^ 0x2A802043FEA0) & (16 * v88) ^ v88;
  v91 = ((16 * (v89 ^ 0x1263002218300103)) ^ 0x2632AA23873FFAB0) & (v89 ^ 0x1263002218300103) ^ (16 * (v89 ^ 0x1263002218300103)) & 0x12632AA23873FFA0;
  v92 = (v91 ^ 0x2222A220033FA00) & (v90 << 8) ^ v90;
  v93 = (((v91 ^ 0x104100803840050BLL) << 8) ^ 0x632AA23873FFAB00) & (v91 ^ 0x104100803840050BLL) ^ ((v91 ^ 0x104100803840050BLL) << 8) & 0x12632AA23873FF00;
  v94 = v92 ^ 0x12632AA23873FFABLL ^ (v93 ^ 0x222222030730000) & (v92 << 16);
  v95 = (v84 ^ (2
              * ((v94 << 32) & 0x12632AA200000000 ^ v94 ^ ((v94 << 32) ^ 0x3873FFAB00000000) & (((v93 ^ 0x10410882080054ABLL) << 16) & 0x12632AA200000000 ^ 0x1041028000000000 ^ (((v93 ^ 0x10410882080054ABLL) << 16) ^ 0x2AA2387300000000) & (v93 ^ 0x10410882080054ABLL))))) >> 16;
  v96 = v84
      - (((v95 ^ 0x2B4A07108CF5BA81) - 0x16ED50DAE966467CLL) ^ ((v95 ^ 0x979F67705153164BLL) + 0x55C7CF45CB3F154ALL) ^ ((v95 ^ 0xBCD59AB0B4618EFALL) + 0x7E8D32852E0D8DF9))
      + 0x542B6833716F5AACLL;
  v97 = ((2 * (v96 ^ 0xFD9F1042F366560ELL)) ^ 0x22C488764CEA2A06) & (v96 ^ 0xFD9F1042F366560ELL) ^ (2 * (v96 ^ 0xFD9F1042F366560ELL)) & 0x9162443B26751502;
  v98 = (v96 ^ 0x6CFD1071D142520CLL) & (2 * (v96 & 0x6CFD5479D513430DLL)) ^ v96 & 0x6CFD5479D513430DLL;
  v99 = ((4 * (v97 ^ 0x9122440922151501)) ^ 0x458910EC99D4540CLL) & (v97 ^ 0x9122440922151501) ^ (4 * (v97 ^ 0x9122440922151501)) & 0x9162443B26751500;
  v100 = (v97 ^ 0x40002204400000) & (4 * v98) ^ v98;
  v101 = ((16 * (v99 ^ 0x9062441326210103)) ^ 0x162443B267515030) & (v99 ^ 0x9062441326210103) ^ (16 * (v99 ^ 0x9062441326210103)) & 0x9162443B26751500;
  v102 = (v101 ^ 0x1020403226511000) & (((v99 ^ 0x100002800541400) & (16 * v100) ^ v100) << 8) ^ (v99 ^ 0x100002800541400) & (16 * v100) ^ v100;
  v103 = (((v101 ^ 0x8142040900240503) << 8) ^ 0x62443B2675150300) & (v101 ^ 0x8142040900240503) ^ ((v101 ^ 0x8142040900240503) << 8) & 0x9162443B26751500;
  v104 = v102 ^ 0x9162443B26751503 ^ (v103 ^ 0x40002224150000) & (v102 << 16);
  v105 = (v96 ^ (2
               * ((v104 << 32) & 0x1162443B00000000 ^ v104 ^ ((v104 << 32) ^ 0x2675150300000000) & (((v103 ^ 0x9122441902601403) << 16) & 0x1162443B00000000 ^ 0x1140400A00000000 ^ (((v103 ^ 0x9122441902601403) << 16) ^ 0x443B267500000000) & (v103 ^ 0x9122441902601403))))) >> 8;
  v106 = v96
       - (((v105 ^ 0xDC4E2EF12B4E57D4) - 0x430A2026961EDB59) ^ ((v105 ^ 0x781978ED1E49D38ALL) + 0x18A289C55CE6A0F9) ^ ((v105 ^ 0xA419AFC83C9E7D37) - 0x3B5DA11F81CEF1BALL));
  LODWORD(v43) = v106 - 1109569431;
  LODWORD(v84) = (v106 - 1109569431) & 0x626C7CC0;
  LODWORD(v103) = (2 * v84) & ((v106 - 1109569431) ^ 0x414978AC) ^ v84;
  LODWORD(v105) = ((2 * ((v106 - 1109569431) ^ 0x4549792C)) ^ 0x4E4A0BD8) & ((v106 - 1109569431) ^ 0x4549792C) ^ (2 * ((v106 - 1109569431) ^ 0x4549792C)) & 0x272505EC;
  LODWORD(v99) = v105 ^ 0x21250424;
  LODWORD(v105) = (v105 ^ 0x2000100) & (4 * v103) ^ v103;
  LODWORD(v103) = ((4 * v99) ^ 0x9C9417B0) & v99 ^ (4 * v99) & 0x272505EC;
  LODWORD(v99) = v103 ^ 0x2321004C;
  LODWORD(v84) = (2 * v84) & ((v106 - 1109569431) ^ 0x686F7ACB) ^ v84;
  LODWORD(v66) = ((2 * ((v106 - 1109569431) ^ 0x2C7FD24B)) ^ 0x9C275D16) & ((v106 - 1109569431) ^ 0x2C7FD24B) ^ (2 * ((v106 - 1109569431) ^ 0x2C7FD24B)) & 0x4E13AE8A;
  LODWORD(v105) = (v103 ^ 0x40405A0) & (16 * v105) ^ v105;
  LODWORD(v103) = (v66 ^ 0x8030400) & (4 * v84) ^ v84;
  v107 = ((4 * (v66 ^ 0x4210A289)) ^ 0x384EBA2C) & (v66 ^ 0x4210A289) ^ (4 * (v66 ^ 0x4210A289)) & 0x4E13AE88;
  LODWORD(v99) = ((16 * v99) ^ 0x72505EC0) & v99 ^ (16 * v99) & 0x272505E0;
  LODWORD(v84) = ((16 * (v107 ^ 0x46110483)) ^ 0xE13AE8B0) & (v107 ^ 0x46110483) ^ (16 * (v107 ^ 0x46110483)) & 0x4E13AE80;
  v108 = (v84 ^ 0x4012A800) & (((v107 ^ 0x802AA00) & (16 * (_DWORD)v103) ^ v103) << 8) ^ (v107 ^ 0x802AA00) & (16 * v103) ^ v103;
  v109 = v106 + 0x5D610E84BE5E3F79;
  v110 = (v109 ^ 0x4E9E8396F496F1A9) & (2 * (v109 & 0x4EDE0B96C4D8F980)) ^ v109 & 0x4EDE0B96C4D8F980;
  v111 = ((2 * ((v106 + 0x5D610E84BE5E3F79) ^ 0xCA0A849B7486C0A9)) ^ 0x9A91E1B60BC7252) & ((v106
                                                                                                + 0x5D610E84BE5E3F79) ^ 0xCA0A849B7486C0A9) ^ (2 * ((v106 + 0x5D610E84BE5E3F79) ^ 0xCA0A849B7486C0A9)) & 0x84D48F0DB05E3928;
  v112 = v43 ^ (2
              * ((v99 ^ 0x22000400) & ((_DWORD)v105 << 8) ^ v105 ^ ((((v99 ^ 0x525012C) << 8) ^ 0x25050000) & (v99 ^ 0x525012C) ^ ((v99 ^ 0x525012C) << 8) & 0x27250500 ^ 0x25050000) & (((v99 ^ 0x22000400) & ((_DWORD)v105 << 8) ^ v105) << 16)));
  v113 = (v111 ^ 0x80848F09A0042128) & (4 * v110) ^ v110;
  v114 = ((4 * (v111 ^ 0x8454810490420929)) ^ 0x13523C36C178E4A4) & (v111 ^ 0x8454810490420929) ^ (4 * (v111 ^ 0x8454810490420929)) & 0x84D48F0DB05E3928;
  LODWORD(v99) = v43 ^ (2
                      * (v108 ^ ((((v84 ^ 0xE01060B) << 8) ^ 0x13AE0000) & (v84 ^ 0xE01060B) ^ ((v84 ^ 0xE01060B) << 8) & 0x4E13AE00 ^ 0x2020202) & (v108 << 16)));
  v115 = (v114 ^ 0x500C0480582020) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x8484830930061909)) ^ 0x4D48F0DB05E39290) & (v114 ^ 0x8484830930061909) ^ (16 * (v114 ^ 0x8484830930061909)) & 0x84D48F0DB05E3920;
  v117 = v116 ^ 0x80940F04B01C2929;
  v118 = (v116 ^ 0x440800900421000) & (v115 << 8) ^ v115;
  v119 = (v116 ^ 0x80940F04B01C2929) << 8;
  v120 = (v119 ^ 0xD48F0DB05E392900) & v117;
  LODWORD(v117) = v99 ^ (v112 >> 1) & 0x7F616E3A;
  v121 = v120 ^ v119 & 0x84D48F0DB05E3900;
  v122 = v118 ^ 0x84D48F0DB05E3929 ^ (v121 ^ 0x84840D0010180000) & (v118 << 16);
  v123 = v109 ^ (2
               * ((v122 << 32) & 0x4D48F0D00000000 ^ v122 ^ ((v122 << 32) ^ 0x305E392900000000) & (((v121 ^ 0x50820DA0461029) << 16) & 0x4D48F0D00000000 ^ 0xD00F0100000000 ^ (((v121 ^ 0x50820DA0461029) << 16) ^ 0xF0DB05E00000000) & (v121 ^ 0x50820DA0461029)))) ^ 0x2EFCEE212DD32ED5 ^ v44;
  v124 = (v7 | (unint64_t)(v8 << 32))
       - 0x7070F457C4F877C1
       + (((v123 ^ 0x39F8401CFB7D5F87) - 0x39F8401CFB7D5F87) ^ ((v123 ^ 0xD94889FE6223F1C4) + 0x26B776019DDC0E3CLL) ^ ((v123 ^ 0xEF0D6E514D257176) + 0x10F291AEB2DA8E8ALL));
  v125 = ((2 * (v124 ^ 0x3864CA6BFF4BCBE1)) ^ 0x7094ACC0D9F1F200) & (v124 ^ 0x3864CA6BFF4BCBE1) ^ (2 * (v124 ^ 0x3864CA6BFF4BCBE1)) & 0xB84A56606CF8F900;
  v126 = (v124 ^ 0x382CDA6BDB2BAAE1) & (2 * (v124 & 0x802E9C0B93B332E1)) ^ v124 & 0x802E9C0B93B332E1;
  v127 = ((4 * (v125 ^ 0x884A522024080900)) ^ 0xE1295981B3E3E400) & (v125 ^ 0x884A522024080900) ^ (4 * (v125 ^ 0x884A522024080900)) & 0xB84A56606CF8F900;
  v128 = (v125 ^ 0x4048D0D000) & (4 * v126) ^ v126;
  v129 = (v127 ^ 0xA008500020E0E000) & (16 * v128);
  v130 = ((16 * (v127 ^ 0x184206604C181900)) ^ 0x84A56606CF8F9000) & (v127 ^ 0x184206604C181900) ^ (16 * (v127 ^ 0x184206604C181900)) & 0xB84A56606CF8F900;
  v131 = (v130 ^ 0x800046004C889000) & ((v129 ^ v128) << 8) ^ v129 ^ v128;
  v132 = (((v130 ^ 0x384A106020706900) << 8) ^ 0x4A56606CF8F90000) & (v130 ^ 0x384A106020706900) ^ ((v130 ^ 0x384A106020706900) << 8) & 0xB84A56606CF8F900;
  v133 = v131 ^ 0xB84A56606CF8F900 ^ (v132 ^ 0x842406068F80000) & (v131 << 16);
  v134 = (v124 ^ (2
                * ((v133 << 32) & 0x384A566000000000 ^ v133 ^ ((v133 << 32) ^ 0x6CF8F90000000000) & (((v132 ^ 0xB00816000400F900) << 16) & 0x384A566000000000 ^ 0x280A120000000000 ^ (((v132 ^ 0xB00816000400F900) << 16) ^ 0x56606CF800000000) & (v132 ^ 0xB00816000400F900))))) >> 32;
  v135 = v124
       - 0x224C6E91212B6514
       + (((v134 ^ 0x95F9323134EC8FF3) + 0x391DA6BBC04B40F6) ^ ((v134 ^ 0xCD6B7DD916E9BADDLL) + 0x618FE953E24E75DCLL) ^ ((v134 ^ 0x58924FE8822FA5E5) - 0xB89249D8977951CLL));
  v136 = (v135 ^ 0xF596775358083027) & (2 * (v135 & 0xF596761260513827)) ^ v135 & 0xF596761260513827;
  v137 = ((2 * (v135 ^ 0xB6B2DB739828206FLL)) ^ 0x86495AC3F0F23090) & (v135 ^ 0xB6B2DB739828206FLL) ^ (2 * (v135 ^ 0xB6B2DB739828206FLL)) & 0x4324AD61F8791848;
  v138 = v137 ^ 0x4124A52008090848;
  v139 = (v137 ^ 0x200084180400000) & (4 * v136) ^ v136;
  v140 = ((4 * v138) ^ 0xC92B587E1E46120) & v138 ^ (4 * v138) & 0x4324AD61F8791848;
  v141 = (v140 ^ 0xA501E0600000) & (16 * v139) ^ v139;
  v142 = ((16 * (v140 ^ 0x4324086018191848)) ^ 0x324AD61F87918480) & (v140 ^ 0x4324086018191848) ^ (16 * (v140 ^ 0x4324086018191848)) & 0x4324AD61F8791840;
  v143 = (v142 ^ 0x200840180110000) & (v141 << 8) ^ v141;
  v144 = (((v142 ^ 0x4124296078681848) << 8) ^ 0x24AD61F879184800) & (v142 ^ 0x4124296078681848) ^ ((v142 ^ 0x4124296078681848) << 8) & 0x4324AD61F8791800;
  v145 = (v135 ^ (2
                * (((v143 ^ 0x4324AD61F8791848 ^ (v144 ^ 0x24216078180000) & (v143 << 16)) << 32) & 0x4324AD6100000000 ^ v143 ^ 0x4324AD61F8791848 ^ (v144 ^ 0x24216078180000) & (v143 << 16) ^ (((v143 ^ 0x4324AD61F8791848 ^ (v144 ^ 0x24216078180000) & (v143 << 16)) << 32) ^ 0x7879184800000000) & (((v144 ^ 0x43008C0180611048) << 16) & 0x4324AD6100000000 ^ 0x4204050000000000 ^ (((v144 ^ 0x43008C0180611048) << 16) ^ 0x2D61F87900000000) & (v144 ^ 0x43008C0180611048))))) >> 16;
  v146 = v135
       - (((v145 ^ 0x1CE26DC1B838C852) - 0x12922BA579983C93) ^ ((v145 ^ 0x1CF3E25616AB0C3FLL) - 0x1283A432D70BF8FELL) ^ ((v145 ^ 0x117C0892C254CELL) - 0xE613A6C5362A00FLL))
       - 0x6EBDD3B2348E4563;
  v147 = ((2 * (v146 ^ 0x73123ED949CF4FAALL)) ^ 0x4DE35A23BE42AD04) & (v146 ^ 0x73123ED949CF4FAALL) ^ (2 * (v146 ^ 0x73123ED949CF4FAALL)) & 0x26F1AD11DF215682;
  v148 = (v146 ^ 0x51D31BC844CF5DAALL) & (2 * (v146 & 0x55E393C896EE1928)) ^ v146 & 0x55E393C896EE1928;
  v149 = ((4 * (v147 ^ 0x2210A51041215282)) ^ 0x9BC6B4477C855A08) & (v147 ^ 0x2210A51041215282) ^ (4 * (v147 ^ 0x2210A51041215282)) & 0x26F1AD11DF215680;
  v150 = (v147 ^ 0x48008009E000400) & (4 * v148) ^ v148;
  v151 = ((16 * (v149 ^ 0x2431091083200482)) ^ 0x6F1AD11DF2156820) & (v149 ^ 0x2431091083200482) ^ (16 * (v149 ^ 0x2431091083200482)) & 0x26F1AD11DF215680;
  v152 = (v151 ^ 0x26108111D2014000) & (((v149 ^ 0x2C0A4015C015200) & (16 * v150) ^ v150) << 8) ^ (v149 ^ 0x2C0A4015C015200) & (16 * v150) ^ v150;
  v153 = (((v151 ^ 0xE12C000D201682) << 8) ^ 0xF1AD11DF21568200) & (v151 ^ 0xE12C000D201682) ^ ((v151 ^ 0xE12C000D201682) << 8) & 0x26F1AD11DF215600;
  v154 = v152 ^ 0x26F1AD11DF215682 ^ (v153 ^ 0x20A1011101000000) & (v152 << 16);
  v155 = (v146 ^ (2
                * ((v154 << 32) & 0x26F1AD1100000000 ^ v154 ^ ((v154 << 32) ^ 0x5F21568200000000) & (((v153 ^ 0x650AC00DE215482) << 16) & 0x26F1AD1100000000 ^ 0x2E0201000000000 ^ (((v153 ^ 0x650AC00DE215482) << 16) ^ 0x2D11DF2100000000) & (v153 ^ 0x650AC00DE215482))))) >> 8;
  v156 = v146
       - (((v155 ^ 0xA53D07339E7E93FLL) - 0xA5845322399BFEELL) ^ ((v155 ^ 0xDE6B6B695353A5FBLL) + 0x219F01D7B6D20CD6) ^ ((v155 ^ 0xD42CF9DB819CE070) + 0x2BD89365641D495FLL));
  LODWORD(v84) = (v146
                - (((v155 ^ 0x39E7E93F) - 597278702) ^ ((v155 ^ 0x5353A5FB) - 1227748138) ^ ((v155 ^ 0x819CE070)
                                                                                           + 1679640927))
                + 1998087759) & 0x2E7EB874;
  LODWORD(v153) = (2 * v84) & ((v146
                              - (((v155 ^ 0x39E7E93F) - 597278702) ^ ((v155 ^ 0x5353A5FB) - 1227748138) ^ ((v155 ^ 0x819CE070) + 1679640927))
                              + 1998087759) ^ 0x8E7CBF66) ^ v84;
  LODWORD(v155) = ((2 * ((v156 + 1998087759) ^ 0x8A71CF8E)) ^ 0x481EEFF4) & ((v156 + 1998087759) ^ 0x8A71CF8E) ^ (2 * ((v156 + 1998087759) ^ 0x8A71CF8E)) & 0xA40F77FA;
  LODWORD(v149) = v155 ^ 0xA401100A;
  LODWORD(v155) = (v155 ^ 0xE63F0) & (4 * v153) ^ v153;
  LODWORD(v153) = ((4 * v149) ^ 0x903DDFE8) & v149 ^ (4 * v149) & 0xA40F77F8;
  v157 = (v153 ^ 0x800D57E0) & (16 * v155) ^ v155;
  LODWORD(v155) = ((16 * (v153 ^ 0x24022012)) ^ 0x40F77FA0) & (v153 ^ 0x24022012) ^ (16 * (v153 ^ 0x24022012)) & 0xA40F77F0;
  LODWORD(v84) = (2 * v84) & ((v156 + 1998087759) ^ 0xF7E3074) ^ v84;
  LODWORD(v153) = ((2 * ((v156 + 1998087759) ^ 0xBBB1074)) ^ 0x4B8B5000) & ((v156 + 1998087759) ^ 0xBBB1074) ^ (2 * ((v156 + 1998087759) ^ 0xBBB1074)) & 0x25C5A800;
  LODWORD(v135) = v153 ^ 0x2444A800;
  LODWORD(v153) = (v153 ^ 0x1810000) & (4 * v84) ^ v84;
  LODWORD(v84) = ((4 * v135) ^ 0x9716A000) & v135 ^ (4 * v135) & 0x25C5A800;
  LODWORD(v153) = (v84 ^ 0x504A000) & (16 * v153) ^ v153;
  LODWORD(v84) = ((16 * (v84 ^ 0x20C10800)) ^ 0x5C5A8000) & (v84 ^ 0x20C10800) ^ (16 * (v84 ^ 0x20C10800)) & 0x25C5A800;
  LODWORD(v155) = (((v156 - 0x1EF86F2088E799B1) ^ (2
                                                   * ((((v155 ^ 0xA408005A) << 8) & 0xA40F0000 ^ 0x4070000 ^ (((v155 ^ 0xA408005A) << 8) ^ 0xF770000) & (v155 ^ 0xA408005A)) & (((v155 ^ 0x77700) & (v157 << 8) ^ v157) << 16) ^ (v155 ^ 0x77700) & (v157 << 8) ^ v157))) >> 1) ^ 0xA40F77FA;
  LODWORD(v155) = ((v155 & 0x7F616E3A ^ 0x61202A30)
                 + (v155 & 0x7B616002 ^ 0x9AC340C6)
                 - ((v155 & 0x7F616E3A ^ 0x61202A30) & 0x7B616002)) ^ 0xBBF37082;
  v158 = v55 ^ LODWORD(STACK[0x6A90]) ^ (-1067889426 - (v51 | 0xC0594CEE) + (v51 | 0x3FA6B311)) ^ v117 ^ (v156 + 1998087759) ^ (2 * ((v84 ^ 0x4408000) & ((_DWORD)v153 << 8) ^ v153 ^ ((((v84 ^ 0x21852800) << 8) ^ 0xC5A80000) & (v84 ^ 0x21852800) ^ ((v84 ^ 0x21852800) << 8) & 0x25C5A800 ^ 0x5800000) & (((v84 ^ 0x4408000) & ((_DWORD)v153 << 8) ^ v153) << 16))) ^ (1749258655 - (v155 | 0x6843919F) + (v155 | 0x97BC6E60));
  v159 = LODWORD(STACK[0x6A10]) > v7 - 1763144250;
  if (LODWORD(STACK[0x6A50]) != v7 - 1763144250 < 0x9CA9B1DA)
    v159 = STACK[0x6A50];
  LODWORD(STACK[0x6A90]) = v158 ^ 0x8F91C373;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((2 * v159) | (8 * v159)) ^ LODWORD(STACK[0x6A60]))))();
}

uint64_t sub_100A76BF4()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  LODWORD(STACK[0x64C0]) = LODWORD(STACK[0x6A00]) ^ 0x62B470B4;
  LODWORD(STACK[0x64A8]) = LODWORD(STACK[0x66C0]) ^ 0x379018A2;
  v0 = STACK[0x6AB0];
  if (((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 12) + 7) & 0xF)) + 9) & 0xF)) + 5) & 0xF))
       + 4) & 0xE) != 0)
    v1 = (*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 12) + 7) & 0xF)) + 9) & 0xF)) + 5) & 0xF))
        + 4) & 0xF;
  else
    v1 = 1;
  v2 = (uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A80]) - 8);
  STACK[0x6930] = v1;
  STACK[0x6A60] = v1 - 1;
  return v2(974582864, 0);
}

uint64_t sub_100A779B4(int a1, uint64_t a2)
{
  unint64_t v2;

  v2 = STACK[0x6A80];
  LODWORD(STACK[0x6A90]) = 301 * (STACK[0x6A80] ^ 0x206A);
  return ((uint64_t (*)(_QWORD, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                + 8
                                                                                * (int)((32595 * (STACK[0x6A60] == a2)) ^ v2))
                                                                    - 8))((a1 + 1), a2 + 1, STACK[0x6AB0]);
}

uint64_t sub_100A78A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  v3 = LODWORD(STACK[0x6A90]) + 15828;
  LODWORD(STACK[0x64A0]) = LODWORD(STACK[0x69C0]) - 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 4))(a1, 1979004582, a3, 193666238, 2061901097, STACK[0x6930] + 193666238, 558497578 - STACK[0x6930], 679056435);
}

uint64_t sub_100A78B20@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unint64_t v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unint64_t v63;

  LODWORD(STACK[0x69D0]) = v15;
  LODWORD(STACK[0x6A00]) = v14;
  LODWORD(STACK[0x6A60]) = v12;
  LODWORD(STACK[0x6A80]) = v10;
  STACK[0x6A10] = a2;
  STACK[0x6A20] = v9;
  STACK[0x6A30] = a1;
  STACK[0x6A40] = v8;
  v16 = (LODWORD(STACK[0x6A90]) - 4175) | 0x4010;
  v17 = *(unsigned __int8 *)(a2 + v11);
  LODWORD(STACK[0x6950]) = v17;
  v18 = -680823311 * v17;
  v19 = (-680823311 * v17) ^ a8;
  LODWORD(STACK[0x6940]) = v18;
  v20 = (v19 + v10) >> 16;
  STACK[0x6960] = v11 + v8;
  LODWORD(STACK[0x6A50]) = v16;
  v21 = ((_DWORD)v11 + (_DWORD)v8 + v19 - v20) >> (v16 ^ 0x3F);
  v22 = v11 + v9 - v20 + v19 + v21;
  LODWORD(STACK[0x69C0]) = v22 & 0xB4606518;
  v23 = 2 * (v22 & 0xB4606518);
  LODWORD(STACK[0x69B0]) = v23;
  v24 = ((2 * (v22 ^ 0xAD2A05A2)) ^ 0x3294C174) & (v22 ^ 0xAD2A05A2) ^ (2 * (v22 ^ 0xAD2A05A2)) & 0x194A60BA;
  v25 = v24 ^ 0x94A208A;
  v26 = (v24 ^ 0x1848002A) & (4 * (v23 & (v22 ^ 0xA56A4592) ^ v22 & 0xB4606518)) ^ v23 & (v22 ^ 0xA56A4592) ^ v22 & 0xB4606518;
  v27 = ((4 * v25) ^ 0x652982E8) & v25 ^ (4 * v25) & 0x194A60B8;
  v28 = v11 + v13 - v20 + v19 + v21;
  LODWORD(STACK[0x69E0]) = v28;
  v29 = ((16 * (v27 ^ 0x18426012)) ^ 0x94A60BA0) & (v27 ^ 0x18426012) ^ (16 * (v27 ^ 0x18426012)) & 0x194A60B0;
  LODWORD(STACK[0x69F0]) = ((v28 >> 1) & 0x55400E0A ^ 0x55C00E03) + ((v28 >> 1) & 0x2A216030 ^ 0x20C021);
  v30 = v11 + a1 - v20 + v19 + v21;
  v31 = (v30 ^ 0x44E4A329) & (2 * (v30 & 0x68C0CA30)) ^ v30 & 0x68C0CA30;
  v32 = ((2 * (v30 ^ 0xC4E5A309)) ^ 0x584AD272) & (v30 ^ 0xC4E5A309) ^ (2 * (v30 ^ 0xC4E5A309)) & 0xAC256938;
  v33 = v32 ^ 0xA4252909;
  v34 = (v32 ^ 0x204009) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xB095A4E4) & v33 ^ (4 * v33) & 0xAC256938;
  v36 = (v27 ^ 0x10800B2) & (16 * v26) ^ v26 ^ 0x194A60BA ^ (v29 ^ 0x1002001A) & (((v27 ^ 0x10800B2) & (16 * v26) ^ v26) << 8);
  v37 = ((16 * (v35 ^ 0xC204919)) ^ 0xC2569390) & (v35 ^ 0xC204919) ^ (16 * (v35 ^ 0xC204919)) & 0xAC256930;
  v38 = (v35 ^ 0xA0052020) & (16 * v34) ^ v34 ^ 0xAC256939 ^ (v37 ^ 0x80040129) & (((v35 ^ 0xA0052020) & (16 * v34) ^ v34) << 8);
  v39 = ((v37 ^ 0x2C216829) << 8) & 0x2C250000 ^ 0x8040000 ^ (((v37 ^ 0x2C216829) << 8) ^ 0x25690000) & (v37 ^ 0x2C216829);
  v40 = ((v18 + 1358306086) ^ 0x2EEDE29A) & (2 * ((v18 + 1358306086) & 0xAF09E4DA)) ^ (v18 + 1358306086) & 0xAF09E4DA;
  v41 = ((2 * ((v18 + 1358306086) ^ 0x72EC2A1E)) ^ 0xBBCB9D88) & ((v18 + 1358306086) ^ 0x72EC2A1E) ^ (2 * ((v18 + 1358306086) ^ 0x72EC2A1E)) & 0xDDE5CEC4;
  v42 = v41 ^ 0x44244244;
  v43 = (v41 ^ 0x98418480) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0x77973B10) & v42 ^ (4 * v42) & 0xDDE5CEC4;
  v45 = (v44 ^ 0x55850A00) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x8860C4C4)) ^ 0xDE5CEC40) & (v44 ^ 0x8860C4C4) ^ (16 * (v44 ^ 0x8860C4C4)) & 0xDDE5CEC0;
  v47 = v46 ^ 0x1A10284;
  v48 = v45 ^ 0xDDE5CEC4 ^ (v46 ^ 0xDC44CC00) & (v45 << 8);
  v49 = v30 ^ (2 * ((v38 << 16) & 0x2C250000 ^ v38 ^ ((v38 << 16) ^ 0x69390000) & v39));
  v50 = (v18 + 1358306086) ^ (2
                            * ((v48 << 16) & 0x5DE50000 ^ v48 ^ ((v48 << 16) ^ 0x4EC40000) & ((v47 << 8) & 0x5DE50000 ^ 0x18210000 ^ ((v47 << 8) ^ 0x65CE0000) & v47)));
  LODWORD(STACK[0x69A0]) = (v36 << 16) & 0x194A0000 ^ v36 ^ ((v36 << 16) ^ 0x60BA0000) & (((v29 ^ 0x948601A) << 8) & 0x194A0000 ^ 0x110A0000 ^ (((v29 ^ 0x948601A) << 8) ^ 0x4A600000) & (v29 ^ 0x948601A));
  v51 = (((2 * ((v49 >> 1) & 0x7F616E3A ^ 0x42202E3A)) & 0x82029800)
       - ((v49 >> 1) & 0x7F616E3A ^ 0x42202E3A)
       + 1047310906) ^ 0x9EF65C8F;
  v52 = v49 ^ 0x38B945AC ^ (a6 + v20 - v19 - v21) ^ ((((v50 ^ 0x52A232C6) + 1172792927) ^ ((v50 ^ 0xACD54909)
                                                                                         - 1148183150) ^ ((v50 ^ 0x733D029D) + 1685607942))
                                                   - (((v49 ^ 0x38B945AC ^ v50 ^ 0x42B0540D) + 1442119830) ^ ((v49 ^ 0x38B945AC ^ v50 ^ 0x3C644068) + 723588337) ^ ((v49 ^ 0x38B945AC ^ v50 ^ 0xABEF30D9) - 1129683902))
                                                   + 678380122);
  v53 = (((v50 ^ 0x1920FEB0) + 241543721) ^ ((v50 ^ 0xEB01010A) - 62630509) ^ ((v50 ^ 0x7F6B86E8) + 1747898993))
      + (((v52 ^ 0xD50F6E98) - 686062079) ^ ((v52 ^ 0x365BE4C5) + 877595742) ^ ((v52 ^ 0xBB25D7B3) - 1187954900));
  LODWORD(STACK[0x6990]) = 105981079 - (v51 | 0x6512497) + (v51 | 0xF9AEDB68);
  v54 = (v53 + a5) >> 16;
  v55 = (unint64_t)(v53 + a5 - v54) >> 8;
  LODWORD(STACK[0x6980]) = v11 + a3 - v54 + v53 + v55;
  v56 = v11 + a4 - v54 + v53 + v55;
  v57 = v11 + a7 - v54 + v53 + v55;
  v58 = (v57 ^ 0xD1B7497C) & (2 * (v57 & 0xC1C78961)) ^ v57 & 0xC1C78961;
  LODWORD(v55) = ((2 * (v57 ^ 0x51B349BE)) ^ 0x20E981BE) & (v57 ^ 0x51B349BE) ^ (2 * (v57 ^ 0x51B349BE)) & 0x9074C0DE;
  v59 = v55 ^ 0x90144041;
  LODWORD(v55) = (v55 ^ 0x902000CD) & (4 * v58) ^ v58;
  v60 = ((4 * v59) ^ 0x41D3037C) & v59 ^ (4 * v59) & 0x9074C0DC;
  LODWORD(v55) = (v60 ^ 0x500053) & (16 * v55) ^ v55;
  v61 = ((16 * (v60 ^ 0x9024C083)) ^ 0x74C0DF0) & (v60 ^ 0x9024C083) ^ (16 * (v60 ^ 0x9024C083)) & 0x9074C0D0;
  LODWORD(v55) = v55 ^ 0x9074C0DF ^ (v61 ^ 0x44000F) & ((_DWORD)v55 << 8);
  LODWORD(v55) = v57 ^ (2
                      * (((_DWORD)v55 << 16) & 0x10740000 ^ v55 ^ (((_DWORD)v55 << 16) ^ 0x40DF0000) & (((v61 ^ 0x9030C00F) << 8) & 0x10740000 ^ 0x340000 ^ (((v61 ^ 0x9030C00F) << 8) ^ 0x74C00000) & (v61 ^ 0x9030C00F))));
  LODWORD(STACK[0x6970]) = ((v56 >> 1) & 0x7F616E3A) - (v56 & 0xD0C08820) + 1752716373;
  v62 = ((((v55 >> 1) ^ 0x65D3E83) & 0x4A73B579)
       - (((v55 >> 1) ^ 0x65D3E83) & 0x40138050)
       + (((v55 >> 1) ^ 0x65D3E83) & 0x40138050 ^ 0xE59FC252)) ^ ((v55 >> 1) ^ 0x65D3E83) & 0x3512DB43;
  v63 = STACK[0x6960];
  LODWORD(STACK[0x6950]) = (v62 & 0xB635E160 ^ 0x10300141) + (v62 & 0x49CA1E9B);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((116 * (v63 != 15)) ^ (LODWORD(STACK[0x6A90]) + 15816)))
                            - 4))();
}

uint64_t sub_100A79E68()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;

  LODWORD(STACK[0x6A60]) = v0;
  v4 = ((v2 + 161377886) ^ 0xAF84FC8F) & (2 * ((v2 + 161377886) & 0x8E16FECF)) ^ (v2 + 161377886) & 0x8E16FECF;
  v5 = ((2 * ((v2 + 161377886) ^ 0xA7A51C09)) ^ 0x5367C58C) & ((v2 + 161377886) ^ 0xA7A51C09) ^ (2
                                                                                               * ((v2 + 161377886) ^ 0xA7A51C09)) & 0x29B3E2C6;
  v6 = v5 ^ 0x28902242;
  v7 = (v5 ^ 0x23C006) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xA6CF8B18) & v6 ^ (4 * v6) & 0x29B3E2C4;
  v9 = (v8 ^ 0x20838206) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x93060C6)) ^ 0x9B3E2C60) & (v8 ^ 0x93060C6) ^ (16 * (v8 ^ 0x93060C6)) & 0x29B3E2C0;
  v11 = v9 ^ 0x29B3E2C6 ^ (v10 ^ 0x9322086) & (v9 << 8);
  v12 = v2
      - 1749717714
      + ((((v2 + 161377886) ^ (2
                             * ((v11 << 16) & 0x29B30000 ^ v11 ^ ((v11 << 16) ^ 0x62C60000) & (((v10 ^ 0x2081C286) << 8) & 0x29B30000 ^ 0x8110000 ^ (((v10 ^ 0x2081C286) << 8) ^ 0xB3E20000) & (v10 ^ 0x2081C286))))) >> 8) ^ 0xFF638AC4);
  v13 = v12 + (v12 >> 8) - 2060758363 - ((2 * (v12 + (v12 >> 8))) & 0xA56A54A);
  v14 = (((v13 ^ 0xD3A889E2) + 743929374) ^ ((v13 ^ 0x90CDAF61) + 1865568415) ^ ((v13 ^ 0xC64E7426) + 967936986))
      + 871653935;
  v15 = v14 + (v14 >> 12) + ((v14 + (v14 >> 12)) >> 3);
  v16 = ((2 * ((v15 ^ 0xD26F5AD4) - ((v15 ^ 0xD26F5AD4) >> 12))) & 0xFF37D67E)
      + (((v15 ^ 0xD26F5AD4) - ((v15 ^ 0xD26F5AD4) >> 12)) ^ 0xFF9BEB3F);
  v17 = ((v16 + 1912561101) ^ 0x6C4024E7) & (2 * ((v16 + 1912561101) & 0x8E64B6F4)) ^ (v16 + 1912561101) & 0x8E64B6F4;
  v18 = ((2 * ((v16 + 1912561101) ^ 0x74094047)) ^ 0xF4DBED66) & ((v16 + 1912561101) ^ 0x74094047) ^ (2 * ((v16 + 1912561101) ^ 0x74094047)) & 0xFA6DF6B2;
  v19 = v18 ^ 0xA241291;
  v20 = (v18 ^ 0x7001E420) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0xE9B7DACC) & v19 ^ (4 * v19) & 0xFA6DF6B0;
  v22 = (v21 ^ 0xE825D290) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x12482433)) ^ 0xA6DF6B30) & (v21 ^ 0x12482433) ^ (16 * (v21 ^ 0x12482433)) & 0xFA6DF6B0;
  v24 = v22 ^ 0xFA6DF6B3 ^ (v23 ^ 0xA24D6200) & (v22 << 8);
  v25 = ((v16 + 1912561101) ^ (2
                             * ((v24 << 16) & 0x7A6D0000 ^ v24 ^ ((v24 << 16) ^ 0x76B30000) & (((v23 ^ 0x58209483) << 8) & 0xFA6D0000 ^ 0x12090000 ^ (((v23 ^ 0x58209483) << 8) ^ 0x6DF60000) & (v23 ^ 0x58209483))))) >> 5;
  v26 = v16
      - (((v25 ^ 0x27EAD745) - 1381003669) ^ ((v25 ^ 0x5A197FFA) - 799267114) ^ ((v25 ^ 0x79044263) - 213836979))
      - 1795398329;
  v27 = (v26 ^ 0xF05A424E) & (2 * (v26 & 0xFA1A636E)) ^ v26 & 0xFA1A636E;
  v28 = ((2 * (v26 ^ 0xF45A8246)) ^ 0x1C81C250) & (v26 ^ 0xF45A8246) ^ (2 * (v26 ^ 0xF45A8246)) & 0xE40E128;
  v29 = v28 ^ 0x2402128;
  v30 = v27 ^ 0xE40E128 ^ (v28 ^ 0xA00A000) & (4 * v27);
  v31 = (4 * v29) & 0xE40E128 ^ 0x6406108 ^ ((4 * v29) ^ 0x390384A0) & v29;
  v32 = (16 * v30) & 0xE40E120 ^ v30 ^ ((16 * v30) ^ 0xE40E1280) & v31;
  v33 = (16 * v31) & 0xE40E120 ^ 0xA40E128 ^ ((16 * v31) ^ 0xE40E1280) & v31;
  v34 = v32 ^ 0x4402000 ^ (v32 << 8) & 0xE40E100 ^ ((v32 << 8) ^ 0x40E12800) & v33;
  v35 = v26 ^ (2
             * ((v34 << 16) & 0xE400000 ^ v34 ^ ((v34 << 16) ^ 0x61280000) & ((v33 << 8) & 0xE400000 ^ ((v33 << 8) ^ 0x40E10000) & v33 ^ 0xE000000)));
  v36 = v35 ^ 0x59E50999;
  v37 = ((v35 ^ 0xB06B713E) + 376538969) ^ ((v35 ^ 0xCF1D66CC) + 1762103467) ^ ((v35 ^ 0x99EDB6CC) + 1073168555);
  v38 = ((v37 + 766896185) ^ 0xAC5E66CE) & (2 * ((v37 + 766896185) & 0xCE9C64EF)) ^ (v37 + 766896185) & 0xCE9C64EF;
  v39 = ((2 * ((v37 + 766896185) ^ 0xB4762616)) ^ 0xF5D485F2) & ((v37 + 766896185) ^ 0xB4762616) ^ (2
                                                                                                  * ((v37 + 766896185) ^ 0xB4762616)) & 0x7AEA42F8;
  v40 = v39 ^ 0xA2A4209;
  v41 = (v39 ^ 0x70C000F0) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0xEBA90BE4) & v40 ^ (4 * v40) & 0x7AEA42F8;
  v43 = (v42 ^ 0x6AA802E0) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x10424019)) ^ 0xAEA42F90) & (v42 ^ 0x10424019) ^ (16 * (v42 ^ 0x10424019)) & 0x7AEA42F0;
  v45 = v43 ^ 0x7AEA42F9 ^ (v44 ^ 0x2AA00269) & (v43 << 8);
  v46 = v37
      - 61715160
      + ((((v37 + 766896185) ^ (2
                              * ((v45 << 16) & 0x7AEA0000 ^ v45 ^ ((v45 << 16) ^ 0x42F90000) & (((v44 ^ 0x504A4069) << 8) & 0x7AEA0000 ^ 0x10A80000 ^ (((v44 ^ 0x504A4069) << 8) ^ 0xEA420000) & (v44 ^ 0x504A4069))))) >> 10) ^ 0x2FA638);
  v47 = v46 + (v46 >> 4);
  v48 = v47 + 1174211645 + ((v47 + 1174211645) >> 14) - ((v47 + 1174211645 + ((v47 + 1174211645) >> 14)) >> 6);
  v49 = (v48 ^ 0xF2B32C3B) + ((v48 ^ 0xF2B32C3B) >> 11) - (((v48 ^ 0xF2B32C3B) + ((v48 ^ 0xF2B32C3B) >> 11)) >> 3);
  v50 = (v47 - 2060758363 - ((2 * v47) & 0xA56A54A)) ^ v13;
  v51 = ((((v49 - ((2 * v49) & 0xBA16EE5C) - 586451154) ^ 0x17B6EDFC) - 397864444) ^ (((v49
                                                                                      - ((2 * v49) & 0xBA16EE5C)
                                                                                      - 586451154) ^ 0x93A76D0F)
                                                                                    + 1817744113) ^ (((v49 - ((2 * v49) & 0xBA16EE5C) - 586451154) ^ 0x591AF7DD) - 1494939613))
      + 392032392;
  v52 = v51 + (v51 >> 10) - ((v51 + (v51 >> 10)) >> 6);
  v53 = v52 - 1225361974 - ((2 * v52) & 0x6DECEB94);
  v54 = v50 - 1225361974 - ((2 * v50) & 0x6DECEB94);
  v55 = (((v53 ^ 0x27EA4E43) - 669666883) ^ ((v53 ^ 0x954B5D3D) + 1790223043) ^ ((v53 ^ 0x45766B4) - 72836788))
      - 871123579;
  v56 = v55 - (v55 >> 12) + ((v55 - (v55 >> 12)) >> 1);
  v57 = STACK[0x67D0];
  v58 = LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x67D0]) ^ 0x7BD16530;
  LODWORD(STACK[0x6A40]) = v36;
  v59 = (((v58 ^ LODWORD(STACK[0x6790])) >> 1) & 0x7F616E3A ^ 0x49604E18)
      + (((v58 ^ LODWORD(STACK[0x6790])) >> 1) & 0x5C406C18 ^ 0x140E2084)
      - ((((v58 ^ LODWORD(STACK[0x6790])) >> 1) & 0x7F616E3A ^ 0x49604E18) & 0x5C406C18);
  v60 = STACK[0x6880];
  v61 = ((v60 ^ LODWORD(STACK[0x68C0])) - 992499678 - ((2 * (v60 ^ LODWORD(STACK[0x68C0]))) & 0x89AF5044)) ^ LODWORD(STACK[0x6760]);
  v62 = v57 ^ LODWORD(STACK[0x6690]) ^ v58 ^ (((v57 >> 1) & 0x7F616E3A ^ 0x4D61083A)
                                            - 1697697290
                                            - ((2 * ((v57 >> 1) & 0x7F616E3A ^ 0x4D61083A)) & 0x34824064)) ^ ((v59 & 0xAC40C8C2 ^ 0xA854C043) + (v59 & 0x53A33638 ^ 0x508A2515) - 2) ^ v13;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x65E8]) ^ 0x83;
  v63 = v62 ^ v3 ^ v47 ^ v53 ^ ((v53 ^ v54) >> 1) & 0x7F616E3A;
  v64 = LODWORD(STACK[0x66B0]) ^ v60 ^ v61 ^ (STACK[0x66E0] - ((2 * STACK[0x66E0]) & 0x222DF1C0) + 286718176) ^ LODWORD(STACK[0x66D0]) ^ v1 ^ v15 ^ v48 ^ v56 ^ 0xD852E910 ^ ((v61 ^ v60 ^ v15 ^ v48 ^ v56) >> 1) & 0x7F616E3A;
  v65 = LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x6910]);
  LODWORD(STACK[0x6A30]) = (2 * v64) & 0x89AF5044;
  LODWORD(STACK[0x6A80]) = 525345435
                         - ((v65 >> 1) & 0x7F616E3A ^ 0x8620C113 | 0x1F50229B)
                         + ((v65 >> 1) & 0x7F616E3A ^ 0x8620C113 | 0xE0AFDD64);
  LODWORD(STACK[0x69D0]) = v63;
  LODWORD(STACK[0x69E0]) = v63 ^ 0xD8BE2648;
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x66E8]) ^ 0x5A8C0893;
  LODWORD(STACK[0x68C0]) = ~LODWORD(STACK[0x6650]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A50])) - 12))();
}

uint64_t sub_100A7AB20@<X0>(unsigned __int8 a1@<W4>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  char v4;
  int v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;

  v17 = STACK[0x6A50];
  v18 = (2 * ((a3 & STACK[0x6690] & v13 ^ v11) + (a3 & STACK[0x6690] & 0x708FFED8 ^ (v3 + 2264))) - 2) ^ a3;
  v19 = a3 ^ 0x9869B838 ^ *(_DWORD *)(*(_QWORD *)(v8 + 8 * (LODWORD(STACK[0x6A50]) - 14798)) + 4 * (a3 ^ 0xEDu) - 12);
  v20 = 4
      * ((((((((v18 ^ 0xB6) & v7 ^ v18 & v4) & 0x95 ^ 0x81)
                            + ((v18 ^ 0xB6) & v7 ^ v18 & v4 ^ (v9 + 19))
                            - (((v18 ^ 0xB6) & v7 ^ v18 & v4 ^ (v9 + 19)) & 0x95)) ^ 0x75) >> v14) | (((LODWORD(STACK[0x6A50]) + 970357688) & 0xC6295D53 ^ 0xF5 ^ v18) << v6)) ^ a1);
  *(_DWORD *)(STACK[0xDAE8] + v20) = v5 ^ v16 ^ ((((19863099
                                                  - ((v19 ^ (2 * (v19 & v15))) & STACK[0x68C0] ^ 0xF929700B)
                                                  + ((2 * ((v19 ^ (2 * (v19 & v15))) & STACK[0x68C0] ^ 0xF929700B)) & 0xFDA1D388)) ^ 0xF8066630) << LODWORD(STACK[0x6AC0]))
                                               + (((v19 ^ (2 * (v19 & v15))) & STACK[0x6A90]) >> LODWORD(STACK[0x66D0])));
  v21 = *(_DWORD *)(v10 + 4 * (a3 ^ 0x6Fu));
  *(_DWORD *)(a2 + v20) = v5 ^ v16 ^ v21 ^ v12 ^ (32 * (v21 ^ v12)) ^ 0x791B80AD;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6319 * (a3 == 255)) ^ v17)) - 12))();
}

uint64_t sub_100A7AD00(uint64_t a1, int a2, int a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  char v102;
  char v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unint64_t v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  unsigned __int8 *v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  unint64_t v270;
  int v271;
  unint64_t v272;
  unint64_t v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  char v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  int v334;
  int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unint64_t v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  unsigned int v382;
  int v383;
  int v384;
  int v385;
  uint64_t (*v386)(void);

  v7 = LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x68B0]) ^ STACK[0x6638] ^ LODWORD(STACK[0x6AA0]);
  v8 = LODWORD(STACK[0x64F8]) ^ LODWORD(STACK[0x64C8]) ^ LODWORD(STACK[0x64A0]);
  LODWORD(STACK[0x6AA0]) = v4 - LODWORD(STACK[0x6A30]);
  v9 = LODWORD(STACK[0x6A40]) ^ v6 ^ a2 ^ (a4 - a3);
  v10 = STACK[0x66E8];
  v11 = STACK[0x66E8] & 0x7B58740 ^ 0x7A10400 ^ STACK[0x6500] & (LODWORD(STACK[0x6640]) ^ 0xEC45D48C);
  v12 = (2 * (v11 - ((2 * v11) & 0x7C1352D6)) - 65842474) ^ 0xF6595AD6;
  v13 = v12 - ((2 * v12) & 0xD7E0A798) - 336571444 == LODWORD(STACK[0x6640]);
  v14 = STACK[0x6608];
  LODWORD(STACK[0x63C0]) = 2228738
                         * (((LODWORD(STACK[0x6608]) ^ 0x624BD433) - 827898208) ^ ((LODWORD(STACK[0x6608]) ^ 0xE546125F)
                                                                                 + 1235910900) ^ ((LODWORD(STACK[0x6608]) ^ 0x870DC62C)
                                                                                                + 736187521))
                         - 343474138;
  LODWORD(STACK[0x6278]) = v5;
  v15 = 2156 * (v5 ^ 0x1940);
  LODWORD(STACK[0x6698]) = v15;
  v16 = v7 ^ v8 ^ 0xFBCA5B5D;
  LODWORD(STACK[0x6A50]) = v16;
  v17 = STACK[0x6750];
  v18 = LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A60]) ^ v9;
  LODWORD(STACK[0x6910]) = v18;
  v19 = STACK[0x6870];
  v20 = STACK[0x6630];
  v21 = STACK[0x6570];
  v22 = STACK[0x66B8];
  v23 = STACK[0x6648];
  v24 = STACK[0x66D0];
  v25 = STACK[0x6590];
  v26 = STACK[0x6578];
  v27 = LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6578]);
  v28 = v27 ^ 0x8E72EAFB;
  v29 = STACK[0x64B8];
  v30 = v27 & 0x977717D ^ 0x966616C ^ (v27 ^ 0x8E72EAFB) & (LODWORD(STACK[0x64B8]) ^ 0xF18036F4);
  v31 = 2 * (((2 * v30) | 0x75840916) - v30) - 1971587350;
  v32 = STACK[0x6850];
  v33 = LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6850]) ^ ((v20 ^ v19 ^ v21)
                                                         + 1098343320
                                                         - ((v15 - 2098287124) & (2 * (v20 ^ v19 ^ v21))));
  v34 = STACK[0x6AC0];
  v35 = (((v29 ^ 0x1FBE44D1) - 1200185725) ^ ((v29 ^ 0xAB29DDDA) + 216074122) ^ ((v29 ^ 0x4C60DE82) - 341310254))
      + v28
      - (((v31 ^ 0x71E0C177) - 377800154) ^ ((v31 ^ 0x8C661D1) - 1872913788) ^ ((v31 ^ 0xE8AAB9A) - 1777250103))
      - 1167191050;
  v36 = (v35 ^ 0xC5613C5D) & (2 * (v35 & 0xD58A3E9E)) ^ v35 & 0xD58A3E9E;
  v37 = ((2 * (v35 ^ 0x6E657079)) ^ 0x77DE9DCE) & (v35 ^ 0x6E657079) ^ (2 * (v35 ^ 0x6E657079)) & 0xBBEF4EE6;
  v38 = (v37 ^ 0x32480CC0) & (4 * v36) ^ v36;
  v39 = ((4 * (v37 ^ 0x88214221)) ^ 0xEFBD3B9C) & (v37 ^ 0x88214221) ^ (4 * (v37 ^ 0x88214221)) & 0xBBEF4EE4;
  v40 = (v39 ^ 0xABAD0A80) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x10424463)) ^ 0xBEF4EE70) & (v39 ^ 0x10424463) ^ (16 * (v39 ^ 0x10424463)) & 0xBBEF4EE0;
  v42 = v40 ^ 0xBBEF4EE7 ^ (v41 ^ 0xBAE44E00) & (v40 << 8);
  v43 = LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6840]) ^ v16 ^ (v33 - 1132830630 - ((2 * v33) & 0x78F4C0B4));
  v44 = LODWORD(STACK[0x6810]) ^ 0x8FAFC257 ^ LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x66C0]) ^ (v43 - 1132830630 - ((2 * v43) & 0x78F4C0B4));
  v45 = (v44 + 2010896921 - ((2 * v44) & 0xEFB7B432)) ^ LODWORD(STACK[0x65E0]);
  v46 = (v45 - 456040165 - ((2 * v45) & 0xC9A2C236)) ^ LODWORD(STACK[0x6920]);
  v47 = LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x65B0]) ^ 0xE6ADC7BE ^ (v46 - 1697697290 - ((2 * v46) & 0x359E63EC));
  v48 = LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x65B8]) ^ v35 ^ (2
                                                               * ((v42 << 16) & 0x3BEF0000 ^ v42 ^ ((v42 << 16) ^ 0x4EE70000) & (((v41 ^ 0x10B0087) << 8) & 0x3BEF0000 ^ 0x10A10000 ^ (((v41 ^ 0x10B0087) << 8) ^ 0x6F4E0000) & (v41 ^ 0x10B0087))));
  v49 = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x65C0]) ^ ((v48 ^ LODWORD(STACK[0x69E0]) ^ 0xD4C58741)
                                                         - 105180201
                                                         - ((2 * (v48 ^ LODWORD(STACK[0x69E0]) ^ 0xD4C58741)) & 0xF37627AE));
  v50 = LODWORD(STACK[0x68F0]) ^ 0x301FF77B ^ v17 ^ LODWORD(STACK[0x65D0]) ^ (LODWORD(STACK[0x6860])
                                                                            - 1038192526
                                                                            - ((2 * LODWORD(STACK[0x6860])) & 0x843CF082)
                                                                            + 1999) ^ (v49
                                                                                     - 1132830630
                                                                                     - ((2 * v49) & 0x78F4C0B4));
  v51 = (v50 + 199416076 - ((2 * v50) & 0x17C5B218)) ^ LODWORD(STACK[0x65D8]);
  v18 ^= 0xE1066D38;
  LODWORD(STACK[0x6830]) = v18;
  v52 = LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x67A0]) ^ v18 ^ (v51 - 1881639980 - ((2 * v51) & 0x1FB0E7A8));
  v53 = v47 ^ (2 * (v47 & STACK[0x66D8]));
  v54 = STACK[0x68C0];
  v55 = STACK[0x6A90];
  v56 = STACK[0x67E0];
  v57 = STACK[0x67E0] & 0x1C ^ 0x10;
  LODWORD(STACK[0x64F8]) = v57;
  LODWORD(STACK[0x64C8]) = v56 & 3;
  LODWORD(STACK[0x6450]) = ((((v53 & v54 & 0x4986C5D7 ^ 0x4906C543) + (v53 & v54 & 0xB6793A28 ^ 0x2300801) - 1) ^ 0x4B36CD43) << v57 << (v56 & 3)) ^ ((v53 & v55) >> v24);
  v58 = 2 * ((v52 ^ 0xB028ADE) & (v10 ^ 0x1ED80D56) ^ v52 & 0x445405C5);
  v59 = ((v58 ^ 0x188) - 2 * ((v58 ^ 0x188) & 0x7FDDAD16 ^ v58 & 0x12) - 2249468) ^ v52;
  v60 = STACK[0x62E8];
  v61 = (v59 ^ 0x74DF27DA) & (LODWORD(STACK[0x62E8]) ^ 0x7ED1C04F) ^ v59 & 0x812E3FB0;
  v62 = 2 * ((v26 ^ 0x57058761) & (v10 ^ 0x24522D85) ^ v26 & 0x7EDE2516);
  v63 = ((v62 ^ 0xAC080A00) + 580811148 - 2 * ((v62 ^ 0xAC080A00) & 0x229E799C ^ v62 & 0x10)) ^ v26;
  v64 = STACK[0x64D0];
  v65 = (v59 ^ 0x74DF27DA) & (LODWORD(STACK[0x64D0]) ^ 0x25581E2) ^ v59 & 0x25581E2;
  v66 = STACK[0x6650];
  LODWORD(STACK[0x6448]) = ((((v61 & 0x302609A6 ^ 0x30060106) + (v61 ^ 0x2808B0) - ((v61 ^ 0x2808B0) & 0x302609A6)) ^ 0x30002686) << v34) | ((((v65 & 0xC1EF88F ^ 0xC1AF80F) + (v65 & 0xF3E10770 ^ 0x2000121) - 1) ^ 0xE4FF8ED) >> STACK[0x66E0]);
  v67 = STACK[0x6500];
  v68 = 2
      * (((2 * (v10 & 0x42ACDFAB ^ 0x2248A89 ^ (LODWORD(STACK[0x6588]) ^ 0xB2A0AF34) & v67)) & 0x591E4CA2)
       - (v10 & 0x42ACDFAB ^ 0x2248A89 ^ (LODWORD(STACK[0x6588]) ^ 0xB2A0AF34) & v67))
      + 652325724;
  v69 = v56 & 0x1A ^ 0x10;
  LODWORD(STACK[0x6640]) = v69;
  LODWORD(STACK[0x6638]) = v56 & 5;
  LODWORD(STACK[0x6790]) = ((v63 & 0xA8DB5AD7 ^ 0x209B5AC5 ^ (v63 ^ 0x759BFEED) & (v66 ^ 0x5724A528)) << (v56 & 0x1A ^ 0x10) << (v56 & 5))
                         + ((v55 & (v63 ^ 0x759BFEED)) >> v24);
  v70 = ((v68 ^ 0xA7B0B748) - 2 * ((v68 ^ 0xA7B0B748) & 0x59776D9E ^ v68 & 4) - 646484582) ^ v25;
  v71 = v56 & 0x1F ^ 0x10;
  LODWORD(STACK[0x67B0]) = ((v55 & v70) >> STACK[0x66E0])
                         + (((((2 * (v70 & ~v60 ^ 0x24814320)) | 0x50F4FB0) - (v70 & ~v60 ^ 0x24814320) - 42444760) ^ 0x2606E4F8) << (v56 & 0x1F ^ 0x10));
  v72 = v21 ^ (2 * (v21 & STACK[0x66D8]));
  v73 = v56 & 0x1B ^ 0x10;
  LODWORD(STACK[0x6570]) = v73;
  LODWORD(STACK[0x6578]) = v56 & 4;
  LODWORD(STACK[0x63B0]) = ((((v72 & v54 & 0xE84F1CB4 ^ 0xA84B14A0)
                            + (v72 & v54 ^ 0x52A48815)
                            - ((v72 & v54 ^ 0x52A48815) & 0xE84F1CB4)) ^ 0xBAEB94A1) << (v56 & 4) << v73) ^ ((v55 & v72) >> v24);
  v74 = v23 ^ (2 * (STACK[0x66D8] & v23));
  v75 = v67;
  v76 = (2 * ((v67 & v22 & 0x779B46E7 ^ 0x10022) + (v67 & v22 & 0x864B918 ^ 0x860B901)) - 2) ^ v22;
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6730]) ^ ((((1736719684
                                                                               - (v74 & v64 ^ 0x80221582)
                                                                               + ((2 * (v74 & v64 ^ 0x80221582)) | 0x30F78058)
                                                                               + 656) ^ 0x1859D5AE) >> v24) | ((((v74 & v54 ^ 0x4700000) - ((2 * (v74 & v54 ^ 0x4700000)) & 0x5FB64D20) - 1344592240) ^ 0xABAB2690) << v34));
  v77 = v76 ^ 0x10C37244;
  v78 = v66;
  v79 = v76 & 0xD91B0806 ^ 0x48120000 ^ (v66 ^ 0x26E4F7F9) & (v76 ^ 0x10C37244);
  v80 = v20 ^ (2 * (STACK[0x66D8] & v20));
  LODWORD(STACK[0x66C0]) = ((v55 & v77) >> STACK[0x66E0])
                         + (((((2 * v79) | 0x2D3A7C92) - v79 - 379403849) ^ 0x4E8C3E4D) << v34);
  v81 = v55;
  LODWORD(STACK[0x6630]) = v56 & 0x13 ^ 0x10;
  LODWORD(STACK[0x6648]) = v56 & 0xC;
  LODWORD(STACK[0x6A80]) = ((v55 & v80) >> v24) | (((((2 * (v80 & v54 ^ 0x9540114C)) | 0x44F4E7FE)
                                                   - (v80 & v54 ^ 0x9540114C)
                                                   - 578450431) ^ 0xB73A62B3) << (v56 & 0xC) << (v56 & 0x13 ^ 0x10));
  v82 = v19 ^ (2 * (STACK[0x66D8] & v19));
  v83 = ((-1772003335 - (v82 & v64 ^ 0x10082100 | 0x96615FF9) + (v82 & v64 ^ 0x10082100 | 0x699EA006)) ^ 0x79968106) >> STACK[0x66E0];
  v84 = v56 & 0x15 ^ 0x10;
  LODWORD(STACK[0x6590]) = v84;
  LODWORD(STACK[0x6588]) = v56 & 0xA;
  LODWORD(STACK[0x66B8]) = (((((2 * (v82 & ~v60 ^ 0xA6283982)) | 0xC5310252) - (v82 & ~v60 ^ 0xA6283982) + 493321943) ^ 0x44B0B8AB) << v84 << (v56 & 0xA)) ^ v83;
  v86 = v32 ^ v10 ^ 0x1AF2302E;
  if (v13)
    v86 = STACK[0x6740];
  v85 = LODWORD(STACK[0x64A8]) ^ (2 * (STACK[0x64A8] & LODWORD(STACK[0x66D8])));
  LODWORD(STACK[0x6A60]) = (((985167896 - (v85 & v64 ^ 0x83196245 | 0x3AB87818) + (v85 & v64 ^ 0x83196245 | 0xC54787E7)) ^ 0x465EE5A2) >> STACK[0x66E0]) ^ ((v85 & ~v60) << v71);
  LODWORD(STACK[0x66B0]) = ((v55 & (v32 ^ (2 * ((v86 ^ 0x3F81C742) & v32)))) >> STACK[0x66E0]) | (((((2 * ((v32 ^ (2 * ((v86 ^ 0x3F81C742) & v32))) & ~v60 ^ 0x60A85822)) & 0x3DD88948)
                                                                                                  - ((v32 ^ (2 * ((v86 ^ 0x3F81C742) & v32))) & ~v60 ^ 0x60A85822)
                                                                                                  - 518800549) ^ 0x81BBE379) << v69 << (v56 & 5));
  v87 = LODWORD(STACK[0x6A50]) ^ (2 * (STACK[0x6A50] & LODWORD(STACK[0x66D8])));
  v88 = v64;
  LODWORD(STACK[0x6A50]) = (((((2 * (v87 & v64 ^ 0x4000C029)) | 0xAC1C21DA) - (v87 & v64 ^ 0x4000C029) + 703721235) ^ 0x960ED0C4) >> v24) ^ (((((2 * (v87 & v54 ^ 0x42053700)) & 0x426972C2) - (v87 & v54 ^ 0x42053700) + 1590380190) ^ 0x1CCE719E) << v34);
  v89 = LODWORD(STACK[0x6880]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6880])));
  v90 = v56 & 0x17 ^ 0x10;
  LODWORD(STACK[0x63B8]) = v90;
  LODWORD(STACK[0x6A40]) = ((v89 & v64) >> v24) | ((v89 & v54) << v90);
  v91 = LODWORD(STACK[0x66A8]) ^ (2 * (STACK[0x66A8] & LODWORD(STACK[0x66D8])));
  v92 = STACK[0x6690];
  v93 = (v29 ^ 0x50A5EDA3) & STACK[0x6690] ^ v10 & 0x2852AA2A;
  v94 = v56 & 0x12 ^ 0x10;
  LODWORD(STACK[0x6A30]) = ((((v91 & ~v60 & 0x45BDD97B ^ 0x40BD9859)
                            + (v91 & ~v60 ^ 0x170241A2)
                            - ((v91 & ~v60 ^ 0x170241A2) & 0x45BDD97B)) ^ 0x52BF98D9) << (v56 & 0xD) << v94)
                         + ((((v91 & v64 ^ 0x61030704) - ((2 * (v91 & v64 ^ 0x61030704)) & 0xE4B200E0) - 229048208) ^ 0x935A0774) >> STACK[0x66E0]);
  v95 = (v29 & 0xDFD92003 ^ 0x7892000 | 0xADC25CC2) - (v29 & 0xDFD92003 ^ 0x7892000 | 0x523DA33D) + 1379771197;
  v96 = ((((2 * v93) ^ 0x10001004) + 549478690 - 2 * (((2 * v93) ^ 0x10001004) & 0xC06234 ^ (2 * v93) & 0x10) + 259) ^ v29) & 0x2026DFFC ^ 0x2605AC | ((2 * v93) ^ 0x10001004) & 0xDFD92002 ^ 0x6BFB7CCF ^ ((v95 & 0x1B4B044E ^ 0x1961000D) + (v95 & 0xE490F8B1) - 1);
  LODWORD(STACK[0x66A8]) = ((v55 & v96) >> STACK[0x66E0]) ^ ((v96 & ~v60) << v34);
  v97 = (2 * ((v10 ^ 0x5585BEF5) & (v17 ^ 0x3C7A605A) ^ v17 & 0xF09B666)) ^ 0x18104084;
  v98 = (v97 - 1132830630 - ((2 * v97) & 0x78F4C0B4)) ^ v17;
  v99 = (v64 & v98 & 0x19D2654E ^ 0x19D24543) + (v64 & v98 & 0xE62D9AB1);
  v100 = STACK[0x67C0];
  v101 = (STACK[0x66D8] & (v100 ^ 0xBC7A605A) & 0x74C749E5 ^ 0x248748E5)
       + (STACK[0x66D8] & (v100 ^ 0xBC7A605A) & 0xB38B61A ^ 0x281601);
  v102 = STACK[0x64F8];
  v103 = STACK[0x64C8];
  LODWORD(STACK[0x6A20]) = ((((v98 & ~v60 & 0x8C1F2DA1 ^ 0x8C1F2D80)
                            + (v98 & ~v60 ^ 0x805027)
                            - ((v98 & ~v60 ^ 0x805027) & 0x8C1F2DA1)) ^ 0x8C9F7D86) << v102 << v103) ^ (((v99 - 1) ^ 0x19D24542) >> STACK[0x66E0]);
  v104 = (((2 * v101 - 2) ^ 0x495EBDCA)
        - 1132830630
        - 2 * (((2 * v101 - 2) ^ 0x495EBDCA) & 0x3C7A605E ^ (2 * v101 - 2) & 4)) ^ v100;
  v105 = STACK[0x6840];
  v106 = v10 & 0xB6E682CB ^ 0xB0008283 ^ v75 & (LODWORD(STACK[0x6840]) ^ 0xA9CE291);
  LODWORD(STACK[0x64C0]) = v71;
  LODWORD(STACK[0x6A10]) = ((v55 & v104) >> v24) ^ (((612432859
                                                    - (v104 & ~v60 ^ 0x808C0260)
                                                    + ((2 * (v104 & ~v60 ^ 0x808C0260)) | 0xB6FE084A)) ^ 0x5BF30645) << v71);
  v107 = (2 * (((2 * v106) & 0x295D210E) - v106) - 693969168) ^ 0x93ABDAF0;
  v108 = (v107 - 1132830630 - ((2 * v107) & 0x78F4C0B4)) ^ v105;
  v109 = (2 * ((LODWORD(STACK[0x66A0]) ^ 0x3B3B3B3B) & (v10 ^ 0x43404317) ^ STACK[0x66A0] & 0x19CC4B84)) ^ 0x32101600;
  LODWORD(STACK[0x64B8]) = v56 & 0xF;
  LODWORD(STACK[0x6A00]) = ((v55 & v108) >> STACK[0x66E0]) ^ ((((v108 & ~v60 & 0x6C842C2F ^ 0x6C842C2E)
                                                              + (v108 & ~v60 & 0x937BD3D0 ^ 0x12488041)
                                                              - 1) ^ 0x7ECCAC6E) << (v56 & 0xF));
  v110 = (v109 + 1098343320 - ((2 * v109) & 0x82EEC730)) ^ LODWORD(STACK[0x6598]);
  LODWORD(STACK[0x66A0]) = ((v55 & v110) >> STACK[0x66E0]) + ((v110 & v54) << v34);
  v111 = v10 & 0x5289AADE ^ 0x42888296 ^ (LODWORD(STACK[0x63C8]) ^ 0x6A343F6D) & v75;
  v112 = (((2 * ((v111 | 0x1889DEDF) - (v111 | 0x67762120)) - 823377344) ^ 0x1112A9B6)
        - 105180201
        - 2
        * (((2 * ((v111 | 0x1889DEDF) - (v111 | 0x67762120)) - 823377344) ^ 0x1112A9B6) & 0x79BB13DE ^ (2 * ((v111 | 0x1889DEDF) - (v111 | 0x67762120))) & 8)) ^ LODWORD(STACK[0x68D0]);
  LODWORD(STACK[0x69F0]) = (((-1307536558
                            - (v112 & ~v60 ^ 0x806911C2 | 0xB2109352)
                            + (v112 & ~v60 ^ 0x806911C2 | 0x4DEF6CAD)) ^ 0xCD867D6F) << v34) ^ ((v112 & v55) >> v24);
  v113 = STACK[0x69D0] & 0x177EF3F4 ^ 0x171E32C4 ^ (LODWORD(STACK[0x69D0]) ^ 0xD2AFA780) & (v10 ^ 0xCDF2FB67);
  v114 = (2 * ((v113 | 0x17A6ECA) - (v113 | 0x7E859135)) - 49601942) ^ 0x895FF1C;
  v115 = (v114 - ((2 * v114) & 0x14230390) + 168919496) ^ LODWORD(STACK[0x69E0]);
  v116 = STACK[0x68E0] & 0x11 ^ 0x10;
  LODWORD(STACK[0x6580]) = v116;
  LODWORD(STACK[0x6598]) = v56 & 0xE;
  LODWORD(STACK[0x69E0]) = (((((2 * (v115 & ~v60 ^ 0xC128170)) | 0x9C213AA4) - (v115 & ~v60 ^ 0xC128170) + 837771950) ^ 0xC2021C22) << (v56 & 0xE) << v116)
                         + ((v115 & v88) >> v24);
  v117 = LODWORD(STACK[0x65C0]) ^ (2 * (STACK[0x65C0] & LODWORD(STACK[0x66D8])));
  LODWORD(STACK[0x69D0]) = ((((v117 & v88 & 0x5648BC3D ^ 0x50480C39) + (v117 & v88 & 0xA9B743C2 ^ 0x800101) - 1) ^ 0x50C80D39) >> STACK[0x66E0])
                         + (((((2 * (v117 & ~v60 ^ 0x10480100)) & 0x2D3E897A) - (v117 & ~v60 ^ 0x10480100) + 1767947074) ^ 0x7928BA42) << v34);
  v118 = LODWORD(STACK[0x6810]) ^ (2 * (STACK[0x66D8] & (LODWORD(STACK[0x6810]) ^ 0x72018F3A)));
  LODWORD(STACK[0x69C0]) = (((v60 & 0xA795862F | (v118 ^ 0x55940915) & ~v60) ^ 0xA795862F) << v102 << v103) | (((((v118 ^ 0xF2018F3A) & v88 ^ 0xD58101) + 1011303102 - ((2 * ((v118 ^ 0xF2018F3A) & v88 ^ 0xD58101)) & 0x788E8AD2) + 683) ^ 0x3C92C468) >> v24);
  v119 = LODWORD(STACK[0x65A8]) ^ (2 * (STACK[0x65A8] & LODWORD(STACK[0x66D8])));
  v120 = STACK[0x6770];
  LODWORD(STACK[0x69B0]) = (((((2 * (v119 & v54 ^ 0xEC01)) & 0xECB41392) - (v119 & v54 ^ 0xEC01) - 1985612234) ^ 0x89A51A37) << (v56 & 0xF)) | ((v119 & v88) >> STACK[0x66E0]);
  v121 = v120 ^ (2 * ((v10 ^ 0x357B0E47) & (v120 ^ 0x72018F3A) ^ v120 & 0x6FF706D4));
  v122 = (v88 ^ 0x2F2BE788) & (v121 ^ 0x3603831A) ^ v121 & 0x2F2BE788;
  v123 = (v78 & 0xDF9E3F12 | v54 & (v121 ^ 0xE99DBC08)) ^ 0x400C2002;
  LODWORD(STACK[0x69A0]) = ((((v122 & 0x15CD7A91 ^ 0x15C57891) + (v122 & 0xEA32856E ^ 0x2A220409) - 1) ^ 0x19E4FF91) >> v24)
                         + (((((2 * v123) | 0x93A716E6) - v123 + 908883085) ^ 0x56419463) << v34);
  v124 = LODWORD(STACK[0x68F0]) ^ (2 * (STACK[0x66D8] & (LODWORD(STACK[0x68F0]) ^ 0x72018F3A)));
  v125 = (((v60 & 0x488C8018 | (v124 ^ 0x88D0BE2) & ~v60 & 0x4CEFF818) ^ 0xC677809)
        + (v60 & 0xB20004C0 | (v124 ^ 0x88D0BE2) & ~v60 & 0xB31007E7)
        - 1) ^ 0xF6EBFCD0;
  v126 = STACK[0x65E8];
  v127 = STACK[0x65E8] & 0xECDE6A8 ^ 0xC4C088 ^ v55 & (v124 ^ 0xFCCC6992);
  LODWORD(STACK[0x6990]) = (((816182645 - v127 + ((2 * v127) | 0x9EB3FF5E) + 2780) ^ 0xCF9D3FA7) >> v24) + (v125 << v71);
  v128 = (2 * ((LODWORD(STACK[0x6900]) ^ 0x383FDAF5) & (v10 ^ 0x29D3E62F) ^ STACK[0x6900] & 0x735FEEBC)) ^ 0x603F9568;
  v129 = (v128 - 329920397 - ((2 * v128) & 0xD8ABA0E4)) ^ LODWORD(STACK[0x6890]);
  v130 = (2 * (STACK[0x66D8] & (LODWORD(STACK[0x6420]) ^ 0xB28A3B51))
        - 1299563695
        - ((4 * (STACK[0x66D8] & (LODWORD(STACK[0x6420]) ^ 0xB28A3B51))) & 0x651476A0)) ^ LODWORD(STACK[0x6420]);
  LODWORD(STACK[0x6980]) = (((-209953751 - (v129 & v54 ^ 0x446D6A4 | 0xF37C5C29) + (v129 & v54 ^ 0x446D6A4 | 0xC83A3D6)) ^ 0x8C57572) << v102 << v103) ^ ((v129 & v55) >> STACK[0x66E0]);
  v131 = LODWORD(STACK[0x65D0]) ^ (2 * (STACK[0x65D0] & LODWORD(STACK[0x66D8])));
  v132 = STACK[0x6458];
  v133 = (v10 ^ 0xE8B6ABE6) & (v132 ^ 0xB28A3B51) ^ v132 & 0x323AA375;
  LODWORD(STACK[0x6970]) = ((((v131 & ~v60 & 0x93B2953A ^ 0x93B2003B) + (v131 & ~v60 & 0x6C4D6AC5) - 1) ^ 0x93B2003A) << v34) ^ (((((2 * (v131 & v88 ^ 0xA0408009)) | 0xF9147976) - (v131 & v88 ^ 0xA0408009) - 2089434299) ^ 0xDCCABCB2) >> STACK[0x66E0]);
  v134 = (2 * ((v133 ^ 0x4DFFDDDE) + (v133 | 0x3BE2AE61) + (v133 & 0x441D519E)) + 2) ^ 0x77D15E22;
  v135 = (v134 - 1299563695 - ((2 * v134) & 0x651476A0)) ^ v132;
  v136 = STACK[0x65E0];
  LODWORD(STACK[0x68B0]) = (((((2 * (v130 & ~v60 ^ 0x991EAC59)) | 0xE1F6B8A2) - (v130 & ~v60 ^ 0x991EAC59) + 251962287) ^ 0x69E5F008) << v34) ^ ((v130 & v88) >> v24);
  v137 = v56 & 0x19 ^ 0x10;
  LODWORD(STACK[0x68A0]) = ((v81 & v135) >> v24) + ((v54 & v135) << (v56 & 6) << (v56 & 0x19 ^ 0x10));
  v138 = (((2 * ((v136 ^ 0x567EF8C1) & v92 ^ v10 & 0x21A522D8)) ^ 0x1080120)
        + 2010896921
        - 2
        * (((2 * ((v136 ^ 0x567EF8C1) & v92 ^ v10 & 0x21A522D8)) ^ 0x1080120) & 0x77DBDA1A ^ (2
                                                                                            * ((v136 ^ 0x567EF8C1) & v92 ^ v10 & 0x21A522D8)) & 2)) ^ v136;
  v139 = 2
       * ((STACK[0x66D8] & (LODWORD(STACK[0x6460]) ^ 0xB28A3B51) & 0x54E724EF ^ 0x54A7248F)
        + (STACK[0x66D8] & (LODWORD(STACK[0x6460]) ^ 0xB28A3B51) ^ 0xAA508B60)
        - ((STACK[0x66D8] & (LODWORD(STACK[0x6460]) ^ 0xB28A3B51) ^ 0xAA508B60) & 0x54E724EF));
  v140 = ((v139 ^ 0xFD6F5F1E) - 1299563695 - 2 * ((v139 ^ 0xFD6F5F1E) & 0x328A3B70 ^ v139 & 0x20)) ^ LODWORD(STACK[0x6460]);
  LODWORD(STACK[0x64A8]) = v56 & 0xD;
  LODWORD(STACK[0x64A0]) = v94;
  LODWORD(STACK[0x6960]) = ((((v138 & v54 ^ 0x88A4D2) - ((2 * (v138 & v54 ^ 0x88A4D2)) & 0x70E5A21E) - 1200434929) ^ 0xB8FA75DD) << (v56 & 0xD) << v94) | ((v138 & v88) >> STACK[0x66E0]);
  LODWORD(STACK[0x6890]) = ((v81 & v140) >> v24) ^ ((v140 & ~v60) << v34);
  v141 = LODWORD(STACK[0x6860]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6860])));
  v142 = STACK[0x6920];
  v143 = v142 & 0x2CE56C7D ^ 0xC416C01 ^ (v142 ^ 0xE4D1611B) & (v10 ^ 0xF66964EE);
  v144 = (2 * ((v143 | 0x5DF52FFF) - (v143 | 0x220AD000)) + 1142267904) ^ 0xEAEA47CE;
  v145 = STACK[0x63F8];
  v146 = v145 & 0xB5F8B8F1 ^ 0x34202020 ^ (v10 ^ 0x6F74B062) & (v145 ^ 0xB28A3B51);
  LODWORD(STACK[0x6950]) = ((((v141 & ~v60 & 0x8CBDE144 ^ 0x84984004)
                            + (v141 & ~v60 ^ 0x6B25A3C1)
                            - ((v141 & ~v60 ^ 0x6B25A3C1) & 0x8CBDE144)) ^ 0xE7984285) << v34)
                         + (((1744843905
                            - (v141 & v88 ^ 0x14311112)
                            + ((2 * (v141 & v88 ^ 0x14311112)) & 0x2FFF7D92)
                            + 3253) ^ 0x7C315024) >> v24);
  v147 = (2 * (((2 * v146) & 0x2369B870) - v146) + 1553352590) ^ 0x55C6776C;
  v148 = (v147 - 1299563695 - ((2 * v147) & 0x651476A0)) ^ v145;
  v149 = (v144 - 456040165 - ((2 * v144) & 0xC9A2C234)) ^ v142;
  v150 = STACK[0x6468];
  v151 = STACK[0x66D8] & (LODWORD(STACK[0x6468]) ^ 0xEC947B22) ^ 0x4248046;
  v152 = (2 * (v151 + 1215088419 - ((2 * v151) & 0x10D99D62)) + 3868) ^ 0x98909DEE;
  LODWORD(STACK[0x6880]) = ((v81 & v148) >> STACK[0x66E0]) ^ ((v54 & v148) << (v56 & 0xD) << v94);
  v153 = (v152 - 325813470 - ((2 * v152) & 0xD928F644)) ^ v150;
  v154 = v81;
  v155 = v56 & 0x14 ^ 0x10;
  LODWORD(STACK[0x65D0]) = v155;
  LODWORD(STACK[0x65E0]) = v56 & 0xB;
  LODWORD(STACK[0x6940]) = ((v81 & v149) >> v24) + ((v54 & v149) << (v56 & 0xB) << v155);
  v156 = v92;
  v157 = 2 * ((LODWORD(STACK[0x65D8]) ^ 0x3F37CC7A) & v92 ^ v10 & 0x34D51576);
  v158 = ((v157 ^ 0x21080024) + 199416076 - 2 * ((v157 ^ 0x21080024) & 0xBE2D90E ^ v157 & 2)) ^ LODWORD(STACK[0x65D8]);
  LODWORD(STACK[0x6930]) = ((((v158 & v54 ^ 0x81230004) - ((2 * (v158 & v54 ^ 0x81230004)) & 0x3A0B78F4) + 486915194) ^ 0x9C26BC7E) << v34)
                         + ((v158 & v81) >> v24);
  LODWORD(STACK[0x6870]) = ((v153 & ~v60) << v34) ^ (((-448814476
                                                     - (v153 & v88 ^ 0x60C341 | 0xE53FA274)
                                                     + (v153 & v88 ^ 0x60C341 | 0x1AC05D8B)) ^ 0x1AA09ECA) >> STACK[0x66E0]);
  HIDWORD(v159) = STACK[0x66D8] & (LODWORD(STACK[0x6410]) ^ 0xEC947B22);
  LODWORD(v159) = HIDWORD(v159);
  LODWORD(v159) = ((v159 >> 30) - ((2 * (v159 >> 30)) & 0xB870538C) + 1547184582) ^ __ROR4__(STACK[0x6410], 31) ^ 0xAE664F6;
  HIDWORD(v159) = v159;
  v160 = v159 >> 1;
  v161 = v160 & 0x3FF2D5EE ^ 0x17C211CE ^ (v60 ^ 0xC00D2A11) & (v160 ^ 0xC7FB5DBA);
  v162 = (2
        * (((LODWORD(STACK[0x65A0]) ^ 0xC9CB3418) & STACK[0x66D8] & 0x11E1DF ^ 0x815F)
         + ((LODWORD(STACK[0x65A0]) ^ 0xC9CB3418) & STACK[0x66D8] & 0x7FEE1E20 ^ 0x48800021))
        - 2) ^ 0x910102FE;
  v163 = (v162 - 1365389771 - ((2 * v162) & 0x5D3BB3D4) + 2998) ^ LODWORD(STACK[0x65A0]);
  v164 = v160 & 0x1054E724 ^ 0x1000E424 ^ (v160 ^ 0xC7FB5DBA) & (v88 ^ 0x1054E724);
  v165 = ((-97045 - (v164 | 0xFFFE84EB) + (v164 | 0x17B14)) ^ 0x1051DA10) >> STACK[0x66E0];
  LODWORD(STACK[0x65A8]) = v56 & 6;
  LODWORD(STACK[0x6458]) = v137;
  LODWORD(STACK[0x6860]) = (((v161 - 1075586934 - ((2 * v161) & 0x7FC7CEF4) + 3824) ^ 0xAFD3A31E) << (v56 & 6) << v137)
                         + v165;
  v166 = (v60 ^ 0x86D900FB) & (v163 ^ 0x6756EDF3) ^ v163 & 0x7926FF04;
  LODWORD(STACK[0x6920]) = ((v81 & (v163 ^ 0x6756EDF3)) >> STACK[0x66E0])
                         + ((((v166 & 0x95AECED3 ^ 0x95AA88D3) + (v166 ^ 0x20047604) - ((v166 ^ 0x20047604) & 0x95AECED3)) ^ 0xD4AC55D7) << v34);
  v167 = (2 * ((v10 ^ 0xED11C44) & (LODWORD(STACK[0x6428]) ^ 0x6C947B22) ^ STACK[0x6428] & 0x545D14D7)) ^ 0x88282004;
  v168 = (v167 - 325813470 - ((2 * v167) & 0xD928F644)) ^ LODWORD(STACK[0x6428]);
  v169 = (2 * ((LODWORD(STACK[0x6910]) ^ 0x6EDE1EEC) & STACK[0x66D8])
        - 1881639980
        - ((4 * ((LODWORD(STACK[0x6910]) ^ 0x6EDE1EEC) & STACK[0x66D8])) & 0x1FB0E7A8)) ^ LODWORD(STACK[0x6830]);
  LOBYTE(v137) = STACK[0x6570];
  LOBYTE(v92) = STACK[0x6578];
  LODWORD(STACK[0x6850]) = (((((2 * (v88 & v168 ^ 0x4201BD94)) & 0x12F511A4) - (v88 & v168 ^ 0x4201BD94) + 1988458285) ^ 0x3484CAB9) >> v24)
                         + ((((v54 & v168 & 0xB81E69FB ^ 0x880E68B2)
                            + (v54 & v168 ^ 0x37100149)
                            - ((v54 & v168 ^ 0x37100149) & 0xB81E69FB)) ^ 0x8F0E68B2) << v137 << v92);
  v170 = STACK[0x6470];
  LODWORD(STACK[0x6910]) = ((((v169 & v54 & 0xF83F792F ^ 0x983F312F) + (v169 & v54 & 0x7C086D0 ^ 0x4800401) - 1) ^ 0x9CBF352F) << v34) ^ ((v169 & v88) >> STACK[0x66E0]);
  v171 = 2 * (v156 & (v170 ^ 0x4DD858D2) ^ v10 & 0x214C23F0);
  v172 = ((v171 ^ 0x180120) - 325813470 - 2 * ((v171 ^ 0x180120) & 0x6C947B36 ^ v171 & 0x14)) ^ v170;
  v173 = LODWORD(STACK[0x67A0]) ^ (2
                                 * ((v10 ^ 0x4DD365A5) & (LODWORD(STACK[0x67A0]) ^ 0x24647978) ^ STACK[0x67A0] & 0x175F6D36));
  v174 = (v60 & 0xC7C19F43 | (v173 ^ 0x6B2D345B) & ~v60) ^ 0x41810E42;
  v175 = (2 * (STACK[0x66D8] & (LODWORD(STACK[0x6440]) ^ 0x15B509F1))
        + 364186097
        - ((4 * (STACK[0x66D8] & (LODWORD(STACK[0x6440]) ^ 0x15B509F1))) & 0x2B6A13E0)) ^ LODWORD(STACK[0x6440]);
  LODWORD(STACK[0x65E8]) = v56 & 7;
  LODWORD(STACK[0x6840]) = ((v81 & v172) >> v24)
                         + ((((v172 & ~v60 ^ 0xC0404042) - ((2 * (v172 & ~v60 ^ 0xC0404042)) & 0xBC63B0E0) - 567158672) ^ 0x1E719832) << (v56 & 7));
  LODWORD(STACK[0x6900]) = (((((v81 & (v173 ^ 0x528BFA74) ^ v126 & 0xFE67516C) & 0x40C31BD0 ^ 0x800A91)
                            + ((v81 & (v173 ^ 0x528BFA74) ^ v126 & 0xFE67516C) & 0xBF3CE42F)
                            - 1) ^ 0x800A90) >> STACK[0x66E0])
                         + (((((2 * v174) | 0x77889204) - v174 - 1002719490) ^ 0xBD84D803) << LODWORD(STACK[0x6630]) << LODWORD(STACK[0x6648]));
  v176 = LODWORD(STACK[0x65F8]) ^ (2 * (STACK[0x65F8] & LODWORD(STACK[0x66D8])));
  LODWORD(STACK[0x68F0]) = ((((v175 & v88 & 0x1BF5E998 ^ 0x12C4C988)
                            + (v175 & v88 ^ 0x29393430)
                            - ((v175 & v88 ^ 0x29393430) & 0x1BF5E998)) ^ 0x32CCDDA8) >> v24)
                         + ((((v175 & v54 & 0x5782786 ^ 0x5780185) + (v175 & v54 & 0xFA87D879) - 1) ^ 0x5780184) << v34);
  v177 = v10;
  v178 = STACK[0x6500];
  v179 = v10 & 0x99519959 ^ 0x98508109 ^ STACK[0x6500] & (LODWORD(STACK[0x6498]) ^ 0x8CE490A8);
  v180 = (2 * (((2 * v179) | 0x4BE5CA2A) - v179) + 874132950) ^ 0xCB44D81A;
  v181 = (v180 + 364186097 - ((2 * v180) & 0x2B6A13E0)) ^ LODWORD(STACK[0x6498]);
  v182 = STACK[0x6820];
  v183 = v156;
  LODWORD(STACK[0x6830]) = ((v81 & v181) >> v24) ^ (((-1586710165
                                                    - (v54 & v181 ^ 0x41280000)
                                                    + ((2 * (v54 & v181 ^ 0x41280000)) | 0xBD268D2A)) ^ 0x1FBB4695) << (v56 & 6) << (v56 & 0x19 ^ 0x10));
  v184 = v182 ^ (2 * (v156 & (v182 ^ 0x47FFC2DA) ^ v10 & 0x639BBBA2));
  v185 = v88;
  v186 = (1198221735
        - (v88 & (v184 ^ 0x2174687C) ^ 0x1389141 | 0x476B69A7)
        + (v88 & (v184 ^ 0x2174687C) ^ 0x1389141 | 0xB8949658)) ^ 0xB9AC0719;
  LODWORD(STACK[0x68E0]) = ((v176 & ~v60) << v34) + ((v176 & v88) >> STACK[0x66E0]);
  v187 = STACK[0x6650];
  v188 = (STACK[0x6650] & 0xF4CE7DE1 | v54 & (v184 ^ 0xD5BA159D)) ^ 0xF44C64E0;
  LODWORD(STACK[0x68D0]) = (((((2 * v188) & 0x4B7E38EE) - v188 - 633281656) ^ 0xDAC2FA89) << v34) ^ (v186 >> STACK[0x66E0]);
  v189 = (2
        * ((STACK[0x66D8] & (LODWORD(STACK[0x6478]) ^ 0x15B509F1) & 0x11EFDED3 ^ 0x11868E40)
         + (STACK[0x66D8] & (LODWORD(STACK[0x6478]) ^ 0x15B509F1) & 0x6E10212C ^ 0x4E10012D))
        - 2) ^ 0xBF2D1ED8;
  v190 = (v189 + 364186097 - ((2 * v189) & 0x2B6A13E0)) ^ LODWORD(STACK[0x6478]);
  v191 = (2
        * ((STACK[0x65F0] & 0xCABB167E ^ 0xC8AB062A ^ STACK[0x65B0] & (v10 ^ 0x10371EED))
         - ((2 * (STACK[0x65F0] & 0xCABB167E ^ 0xC8AB062A ^ STACK[0x65B0] & (v10 ^ 0x10371EED))) & 0x7D4005B4))
        - 46135884) ^ LODWORD(STACK[0x65B0]);
  v192 = v191 & 0x85D237D8 ^ 0x85C236C0 ^ (v191 ^ 0xFD3005C4) & (v187 ^ 0x7A2DC827);
  v193 = v56 & 0x1D ^ 0x10;
  LODWORD(STACK[0x65F8]) = v193;
  LODWORD(STACK[0x65B0]) = v56 & 2;
  LODWORD(STACK[0x6820]) = ((v81 & v190) >> v24) + ((v190 & ~v60) << v193 << (v56 & 2));
  v194 = v191 & 0x442A679B ^ 0x44200580 ^ (v191 ^ 0xFD3005C4) & (v88 ^ 0x442A679B);
  v195 = STACK[0x66D8] & (LODWORD(STACK[0x6520]) ^ 0x15B509F1) ^ 0x86860007;
  v196 = (((((2 * v192) | 0x6062197C) - v192 + 1338962754) ^ 0xB0E33FBE) << v34) + (v194 >> v24);
  v197 = (2 * (((2 * v195) | 0xF51B600) - v195) - 257013248) ^ 0x25DB60E;
  v198 = (v197 + 364186097 - ((2 * v197) & 0x2B6A13E0)) ^ LODWORD(STACK[0x6520]);
  LOBYTE(v193) = STACK[0x64C0];
  LODWORD(STACK[0x6810]) = ((v81 & v198) >> STACK[0x66E0]) ^ ((v198 & ~v60) << v193);
  v199 = STACK[0x66D8] & (LODWORD(STACK[0x6530]) ^ 0xA5F4EAD1) ^ 0xA8431430;
  v200 = (2 * ((LODWORD(STACK[0x67D0]) ^ 0x4CCD29B0) & v183 ^ v10 & 0x56021846)) ^ 0xA4001004;
  v201 = (v200 - 1697697290 - ((2 * v200) & 0x359E63EC)) ^ LODWORD(STACK[0x67D0]);
  v202 = (2 * (v199 - ((2 * v199) & 0xEDCC716)) + 249349910) ^ 0x5E5AEF76;
  v203 = (v202 - 1510675759 - ((2 * v202) & 0x4BE9D5A0)) ^ LODWORD(STACK[0x6530]);
  v204 = ((v81 & v201) >> v24) ^ (((((2 * (v201 & v54 ^ 0xC0A5781)) & 0x2694B36A) - (v201 & v54 ^ 0xC0A5781) + 1823843914) ^ 0x60BFF1CB) << (v56 & 9) << (v56 & 0x16 ^ 0x10));
  v205 = LODWORD(STACK[0x67F0]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x67F0])));
  v206 = v10 ^ 0x68926A4F;
  v207 = STACK[0x6528];
  LODWORD(STACK[0x67F0]) = ((v203 & ~v60) << v34) + ((v203 & v88) >> STACK[0x66E0]);
  v208 = STACK[0x6538];
  v209 = STACK[0x66D8] & (LODWORD(STACK[0x6538]) ^ 0xA5F4EAD1) ^ 0x100041;
  v210 = (2
        * (((v206 & (v207 ^ 0xA5F4EAD1) ^ v207 & 0xB21E62DC) & 0x21DBF15 ^ 0x21D9D15)
         + ((v206 & (v207 ^ 0xA5F4EAD1) ^ v207 & 0xB21E62DC) & 0x7DE240EA ^ 0x30020009))
        - 2) ^ 0x2417FF9A;
  v211 = (v210 - 1510675759 - ((2 * v210) & 0x4BE9D5A0)) ^ v207;
  v212 = ((v205 & ~v60) << v193) ^ ((((v205 & v88 & 0x5B628042 ^ 0x51200042)
                                    + (v205 & v88 ^ 0xE428028)
                                    - ((v205 & v88 ^ 0xE428028) & 0x5B628042)) ^ 0x5520006A) >> STACK[0x66E0]);
  v213 = (2 * (((2 * (v178 & STACK[0x6780] ^ 0x400A0208)) | 0x41F33C4) - (v178 & STACK[0x6780] ^ 0x400A0208))
        + 2078329916) ^ LODWORD(STACK[0x6780]);
  LODWORD(STACK[0x67D0]) = ((v81 & v211) >> v24) | ((((v54 & v211 ^ 0x30101480)
                                                    - ((2 * (v54 & v211 ^ 0x30101480)) & 0x38E10E14)
                                                    + 477136650) ^ 0x2C60938A) << v34);
  v214 = ((v81 & (v213 ^ 0x40B37D4)) >> v24) ^ (((((2
                                                  * (v213 & 0x7AD440B0 ^ 0x421400A0 ^ (v187 ^ 0x852BBF4F) & (v213 ^ 0x40B37D4))) & 0x956EBB6A)
                                                - (v213 & 0x7AD440B0 ^ 0x421400A0 ^ (v187 ^ 0x852BBF4F) & (v213 ^ 0x40B37D4))
                                                - 1253531062) ^ 0xF75CA27A) << v137 << v92);
  v215 = STACK[0x6408];
  v216 = (((2 * (((2 * v209) & 0x4D25B6BE) - v209) + 853166400) ^ 0x32FA49C2)
        - 1510675759
        - 2
        * (((2 * (((2 * v209) & 0x4D25B6BE) - v209) + 853166400) ^ 0x32FA49C2) & 0x25F4EAD8 ^ (2
                                                                                             * (((2 * v209) & 0x4D25B6BE)
                                                                                              - v209)) & 8)) ^ v208;
  v217 = (2
        * (((LODWORD(STACK[0x6708]) ^ 0x57058761) & STACK[0x66D8] ^ 0x34068000 | 0x4FCE94F9)
         - ((LODWORD(STACK[0x6708]) ^ 0x57058761) & STACK[0x66D8] ^ 0x34068000 | 0x30316B06))
        + 1617090060) ^ 0xF79029F2;
  LODWORD(STACK[0x67A0]) = ((v216 & ~v60) << v34) | (((((2 * (v216 & v185 ^ 0x1000E62)) & 0x27E794E6)
                                                     - (v216 & v185 ^ 0x1000E62)
                                                     + 1812739468) ^ 0x6D0C3BEE) >> STACK[0x66E0]);
  v218 = (v217 - ((2 * v217) & 0x9A55B940) - 852829023) ^ LODWORD(STACK[0x65B8]);
  v219 = (2 * ((v177 ^ 0x6B5F8A8A) & (v215 ^ 0x25F4EAD1) ^ v215 & 0x31D38219)) ^ 0x43A10422;
  v220 = ((v218 & v81) >> STACK[0x66E0]) + ((v218 & ~v60) << v34);
  v221 = (v219 - 1510675759 - ((2 * v219) & 0x4BE9D5A0)) ^ v215;
  v222 = v56 & 0x1E ^ 0x10;
  LODWORD(STACK[0x65D8]) = v222;
  v223 = STACK[0x6400] & 1;
  LODWORD(STACK[0x65C0]) = v223;
  LODWORD(STACK[0x6780]) = ((((v185 & v221 & 0xEC197E44 ^ 0xC4196E45) + (v185 & v221 & 0x13E681BB) - 1) ^ 0xC4196E44) >> v24) | (((((2 * (v54 & v221 ^ 0x68041529)) | 0x38337CC0) - (v54 & v221 ^ 0x68041529) - 471449184) ^ 0x741DAB49) << v223 << v222);
  v224 = STACK[0x63D0];
  v225 = STACK[0x63D8];
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x6AA0]) ^ 0x991EBEB6;
  LODWORD(STACK[0x6760]) = (v225 - 2097628203 - 2 * (v225 & 0x2F8BBDF ^ STACK[0x63E8] & 0xA)) ^ v224 ^ LODWORD(STACK[0x65C8]);
  v226 = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x66C8]);
  LODWORD(STACK[0x67E0]) = v212;
  v227 = v225 ^ v224 ^ LODWORD(STACK[0x6790]);
  v228 = v226 ^ LODWORD(STACK[0x68E0]) ^ v212 ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x67B0]);
  LODWORD(STACK[0x6750]) = LODWORD(STACK[0x67B0]) ^ v225 ^ v224;
  v229 = STACK[0x63B0];
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x63B0]) ^ v225 ^ v224;
  LODWORD(STACK[0x6800]) = v204;
  v230 = LODWORD(STACK[0x6920]) ^ v204;
  LODWORD(STACK[0x67B0]) = v214;
  LODWORD(STACK[0x6790]) = v220;
  LODWORD(STACK[0x6708]) = v227;
  LODWORD(STACK[0x67C0]) = v196;
  LODWORD(STACK[0x6440]) = v228 ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x66B0]) ^ v230 ^ v214 ^ v220 ^ v227 ^ v196 ^ v229 ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6910]);
  v231 = v177 & 0x67C47B8A ^ 0x5C0038A ^ v178 & (LODWORD(STACK[0x6710]) ^ 0x821DF766);
  v232 = LODWORD(STACK[0x6720]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6720])));
  v233 = LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6418]);
  v234 = LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6480]);
  v235 = LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6730]);
  v236 = STACK[0x6700];
  LODWORD(STACK[0x6730]) ^= LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x6710]) = v233 ^ v236;
  LODWORD(STACK[0x6720]) = v234 ^ v236;
  LODWORD(STACK[0x65F0]) = v235 ^ v236 ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x63E0]);
  v237 = v224 ^ LODWORD(STACK[0x6488]);
  LODWORD(STACK[0x6700]) = v224 ^ LODWORD(STACK[0x6438]) ^ v225;
  LODWORD(STACK[0x6AA0]) = v237 ^ v225;
  LODWORD(STACK[0x6438]) = ((v154 & v232) >> v24)
                         + (((1937900460 - (v232 & v54 ^ 0x804E0AB | 0x738203AC) + (v232 & v54 ^ 0x804E0AB | 0x8C7DFC53)) ^ 0x84791CF8) << LODWORD(STACK[0x65D0]) << LODWORD(STACK[0x65E0]));
  v238 = (2 * (((2 * v231) & 0x71CE8580) - v231) - 1909360002) ^ 0xB96C6E;
  v239 = (v238 + 833020972 - ((2 * v238) & 0x634DC858)) ^ LODWORD(STACK[0x6610]);
  v240 = LODWORD(STACK[0x6688]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6688])));
  v241 = v177 & 0x1B721D96 ^ 0xB320C84 ^ v178 & (LODWORD(STACK[0x6668]) ^ 0x89DBE148);
  LODWORD(STACK[0x6430]) = ((((v239 & ~v60 & 0x58D3A95C ^ 0x48C08049) + (v239 & ~v60 & 0xA72C56A3) - 1) ^ 0x48C08048) << v34) ^ ((((v185 & v239 & 0x4971A61 ^ 0x4971A41) + (v185 & v239 & 0xFB68E59E ^ 0xC0000001) - 1) ^ 0xC4971A41) >> STACK[0x66E0]);
  v242 = (2 * (((2 * v241) | 0x42E2B480) - v241) + 1025330048) ^ 0xE086BCAC;
  v243 = (v242 + 1791484991 - ((2 * v242) & 0xD58FC87C)) ^ LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x6498]) = ((v154 & v240) >> v24) ^ ((((v240 & ~v60 ^ 0x231002)
                                                     - 982390222
                                                     - ((2 * (v240 & ~v60 ^ 0x231002)) & 0x8AE3D464)) ^ 0xC552FA30) << LODWORD(STACK[0x6640]) << LODWORD(STACK[0x6638]));
  LODWORD(STACK[0x6688]) = ((((v54 & v243 ^ 0x2AD364) - ((2 * (v54 & v243 ^ 0x2AD364)) & 0x885130A6) - 1003972525) ^ 0xC4024B37) << v34) | ((((v185 & v243 ^ 0x91411670) - ((2 * (v185 & v243 ^ 0x91411670)) & 0xCEC79004) - 412891134) ^ 0x7622DE72) >> STACK[0x66E0]);
  v244 = LODWORD(STACK[0x6680]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6680])));
  LODWORD(STACK[0x6428]) = (((2034399529
                            - (v244 & ~v60 ^ 0x8E0810C | 0x79427929)
                            + (v244 & ~v60 ^ 0x8E0810C | 0x86BD86D6)) ^ 0x8E5D07DA) << LODWORD(STACK[0x6648]) << LODWORD(STACK[0x6630])) ^ ((((v244 & v185 & 0xA946422 ^ 0xA002021) + (v244 & v185 & 0xF56B9BDD) - 1) ^ 0xA002020) >> STACK[0x66E0]);
  v245 = v177 & 0xAD28B3F6 ^ 0x2D0881C0 ^ v178 & (LODWORD(STACK[0x6660]) ^ 0x229B8CE9);
  v246 = (2 * (((2 * v245) | 0x26E5B4D2) - v245) + 1494895406) ^ 0xECE4B676;
  v247 = (v246 - 2117320601 - ((2 * v246) & 0x39880CC)) ^ LODWORD(STACK[0x6558]);
  v248 = STACK[0x6550] & 0x61DE4D70;
  v249 = STACK[0x6618];
  LODWORD(STACK[0x6420]) = ((v154 & v247) >> v24) ^ (((28396755
                                                     - (v54 & v247 ^ 0x2000A50 | 0x1B14CD3)
                                                     + (v54 & v247 ^ 0x2000A50 | 0xFE4EB32C)) ^ 0xFC4EB97C) << v34);
  v250 = LODWORD(STACK[0x6620]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6620])));
  LODWORD(STACK[0x6418]) = ((v154 & v250) >> STACK[0x66E0]) | ((((v250 & ~v60 & 0x25FD53C7 ^ 0x24F543C5)
                                                               + (v250 & ~v60 ^ 0x43089002)
                                                               - ((v250 & ~v60 ^ 0x43089002) & 0x25FD53C7)) ^ 0x66F5C3C5) << LODWORD(STACK[0x65E8]));
  v251 = v249 ^ (2 * ((v177 ^ 0x3B5245E3) & v249 ^ v248));
  v252 = v178;
  v253 = v177 & 0x79CEE938 ^ 0x29026028 ^ v178 & (LODWORD(STACK[0x6518]) ^ 0xF48F7BDE);
  v254 = v251 & 0x8FCE8BB9 ^ 0x48880 ^ (v187 ^ 0x70317446) & (v251 ^ 0x40049880);
  v255 = (v185 ^ 0x45184330) & (v251 ^ 0x40049880) ^ v251 & 0x45184330;
  v256 = (2 * (((2 * v253) & 0x2500B972) - v253) + 1526679180) ^ 0xB9E396FC;
  v257 = (v256 - 1925082394 - ((2 * v256) & 0x1A8325CC)) ^ LODWORD(STACK[0x6518]);
  LODWORD(STACK[0x6680]) = ((((v255 & 0xB30C2C72 ^ 0xB3042C73) + (v255 & 0x4CF3D38D) - 1) ^ 0xF3042C72) >> v24) | (v254 << v34);
  LODWORD(STACK[0x6490]) = ((v154 & v257) >> STACK[0x66E0]) | (((-1535381848
                                                               - (v257 & ~v60 ^ 0x72810BB8 | 0xA47BEEA8)
                                                               + (v257 & ~v60 ^ 0x72810BB8 | 0x5B841157)) ^ 0x29051AEF) << LODWORD(STACK[0x6598]) << LODWORD(STACK[0x6580]));
  v258 = LODWORD(STACK[0x6678]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6678])));
  v259 = 2 * ((v177 ^ 0x5D096614) & (LODWORD(STACK[0x66F0]) ^ 0x5806CDB1) ^ STACK[0x66F0] & 0x7856E87);
  v260 = ((v259 ^ 0x89902) - 197385625 - 2 * ((v259 ^ 0x89902) & 0x743C226E ^ v259 & 8)) ^ LODWORD(STACK[0x6670]);
  LODWORD(STACK[0x6678]) = (((-678070876
                            - (v258 & v54 ^ 0x40A20A8)
                            + ((2 * (v258 & v54 ^ 0x40A20A8)) | 0x50D4FE46)
                            + 2873) ^ 0x2C605F8B) << v34) | (((((2 * (v258 & v185 ^ 0x688)) | 0x1EAD9DE)
                                                             - (v258 & v185 ^ 0x688)
                                                             + 2131399441) ^ 0x80F56A67) >> STACK[0x66E0]);
  v261 = v177;
  v262 = (v177 ^ 0x73AA1722) & (LODWORD(STACK[0x6658]) ^ 0x247ACCCD) ^ STACK[0x6658] & 0x29261FB1;
  LOBYTE(v137) = STACK[0x64C8];
  LODWORD(STACK[0x6488]) = ((v154 & v260) >> v24) | (((534650085
                                                     - (v260 & ~v60 ^ 0x9CA060 | 0x1FDE1CE5)
                                                     + (v260 & ~v60 ^ 0x9CA060 | 0xE021E31A)) ^ 0xE0BD437A) << v137 << LODWORD(STACK[0x64F8]));
  v263 = (((2 * v262) ^ 0x40441902) - 519101794 - 2 * (((2 * v262) ^ 0x40441902) & 0x610F22BE ^ (2 * v262) & 0x20)) ^ LODWORD(STACK[0x6548]);
  v264 = LODWORD(STACK[0x6560]) ^ (2 * (STACK[0x66D8] & LODWORD(STACK[0x6560])));
  LODWORD(STACK[0x6480]) = ((v154 & v263) >> STACK[0x66E0]) + ((v263 & ~v60) << v34);
  LODWORD(STACK[0x6478]) = ((v154 & v264) >> v24) | (((((2 * (v264 & ~v60 ^ 0xE01E0092)) & 0x586EABD4)
                                                     - (v264 & ~v60 ^ 0xE01E0092)
                                                     + 1405659669) ^ 0xB3D6AA87) << v34);
  v265 = (2
        * ((STACK[0x6568] & 0xDB4710E1 ^ 0x3410041 ^ (v261 ^ 0x1CB1872) & STACK[0x6628] | 0x14DE3A99)
         - (STACK[0x6568] & 0xDB4710E1 ^ 0x3410041 ^ (v261 ^ 0x1CB1872) & STACK[0x6628] | 0x6B21C566))
        - 700216628) ^ LODWORD(STACK[0x6628]);
  v266 = (unsigned __int8 *)STACK[0x6AB0];
  v267 = *(unsigned __int8 *)STACK[0x6AB0] ^ 0x64;
  v268 = v265 & 0x8AD0AE4D ^ 0x8250AA0D ^ (v187 ^ 0x752F51B2) & (v265 ^ 0xBF387430);
  v269 = v265 & 0xA1D25520 ^ 0x1020120 ^ (v185 ^ 0xA1D25520) & (v265 ^ 0xBF387430);
  LODWORD(STACK[0x6670]) = (v269 + 588677800 - ((2 * v269) & 0x462D0678) + 148) ^ 0x8304D63C;
  LODWORD(STACK[0x6470]) = ((((2 * v268) & 0xC49ACCAC) - v268 - 1649239639) ^ 0x95F217A4) << LODWORD(STACK[0x65A8]) << LODWORD(STACK[0x6458]);
  v270 = STACK[0x64E8];
  v271 = *(unsigned __int8 *)(STACK[0x64E8] + v267);
  v272 = STACK[0x64E0];
  v273 = STACK[0x64F0];
  v274 = ((*(_BYTE *)(v273 + (v266[6] ^ 0x49)) ^ 0x93 ^ (*(_BYTE *)(v273 + (v266[6] ^ 0x49)) >> 4) & 0xA) << 8) | ((*(_BYTE *)(v272 + v266[5]) ^ 0x7B ^ (*(_BYTE *)(v272 + v266[5]) >> 2) & 0x1E) << 16);
  v275 = *(_BYTE *)(v272 + (v266[3] ^ 0x34)) ^ (*(_BYTE *)(v272 + (v266[3] ^ 0x34)) >> 2) & 0x1E ^ 0x80 | (((v271 + 47) ^ ((v271 + 47) >> 4) ^ ((v271 + 47) >> 3) ^ 0x6C) << 24) | ((*(_BYTE *)(v272 + (v266[1] ^ 0xD8)) ^ 0x23 ^ (*(_BYTE *)(v272 + (v266[1] ^ 0xD8)) >> 2) & 0x1E) << 16);
  LOBYTE(v271) = *(_BYTE *)(STACK[0x64D8] + (v266[14] ^ 0x94)) + 109;
  LOBYTE(v212) = v271 ^ 0x5D ^ (-102 * v271);
  LOBYTE(v271) = *(_BYTE *)(v273 + (v266[15] ^ 0x56)) ^ 0xB5 ^ (*(_BYTE *)(v273 + (v266[15] ^ 0x56)) >> 4) & 0xA;
  LODWORD(v267) = v271 | (v212 << 8);
  LODWORD(v273) = STACK[0x68F0];
  v276 = *(unsigned __int8 *)(STACK[0x64E0] + (v266[8] ^ 0x7DLL));
  v277 = *(_BYTE *)(v272 + (v266[11] ^ 0x77)) ^ 0xA7 ^ (*(_BYTE *)(v272 + (v266[11] ^ 0x77)) >> 2) & 0x1E | ((v276 ^ 0xDA ^ (v276 >> 2) & 0x1E) << 24);
  LOBYTE(v212) = *(_BYTE *)(STACK[0x64E8] + (v266[9] ^ 0xF1)) + 47;
  v278 = (v212 >> 4) ^ (v212 >> 3);
  v279 = v277 & 0xFF00FFFF | (((v278 ^ -(char)v278 ^ ((v212 ^ 0x18) + (v212 ^ v278 ^ 0xE7) + 1))
                                              + (v212 ^ 0x18)) << 16);
  v280 = (*(_BYTE *)(STACK[0x64E8] + (v266[4] ^ 0x6CLL)) + 47);
  v281 = v274 & 0xFFFFFF00 | ((*(_BYTE *)(v270
                                                         + (v266[((v273 % 7) ^ 7)
                                                               + v273 % 7] ^ 0x8ALL))
                                              + 47) ^ ((*(_BYTE *)(v270
                                                                                  + (v266[((v273 % 7) ^ 7)
                                                                                        + v273 % 7] ^ 0x8ALL))
                                                                       + 47) >> 4) ^ ((*(_BYTE *)(v270 + (v266[((v273 % 7) ^ 7) + v273 % 7] ^ 0x8ALL)) + 47) >> 3)) | (((*(unsigned __int8 *)(v270 + (v266[4] ^ 0x6CLL)) + 47) ^ (v280 >> 4) ^ (v280 >> 3) ^ 0x20) << 24);
  v282 = v275 & 0xFFFF00FF | ((((*(_BYTE *)(v270 + (v266[2] ^ 0x7ELL)) + 47) ^ ((*(_BYTE *)(v270 + (v266[2] ^ 0x7ELL)) + 47) >> 4) ^ ((*(_BYTE *)(v270 + (v266[2] ^ 0x7ELL)) + 47) >> 3)) ^ 0x1F) << 8);
  v283 = v279 & 0xFFFF00FF | ((((*(_BYTE *)(v270 + (v266[10] ^ 0xBCLL)) + 47) ^ ((*(_BYTE *)(v270 + (v266[10] ^ 0xBCLL)) + 47) >> 4) ^ ((*(_BYTE *)(v270 + (v266[10] ^ 0xBCLL)) + 47) >> 3)) ^ 0x34) << 8);
  v284 = (*(_BYTE *)(STACK[0x64E8] + (v266[12] ^ 0x25)) + 47);
  v285 = v282 ^ (2 * (v282 & STACK[0x66D8]));
  v286 = (2
        * ((((v281 ^ 0x13315698) & v252 ^ v261 & 0x13315666) & 0x5C85DE58 ^ 0x5C84CA58)
         + ((v281 ^ 0x13315698) & v252 ^ v261 & 0x13315666 ^ 0x2211406)
         - (((v281 ^ 0x13315698) & v252 ^ v261 & 0x13315666 ^ 0x2211406) & 0x5C85DE58))) ^ 0x994994B8;
  v287 = (v286 - 922878719 - ((2 * v286) & 0x91FBFBFC) + 254) ^ v281;
  LODWORD(v267) = (((*(unsigned __int8 *)(v270 + (v266[12] ^ 0x25)) + 47) ^ (v284 >> 4) ^ (v284 >> 3) ^ 0x7A) << 24) | ((((*(_BYTE *)(v270 + (v266[13] ^ 0x23)) + 47) ^ ((*(_BYTE *)(v270 + (v266[13] ^ 0x23)) + 47) >> 4) ^ ((*(_BYTE *)(v270 + (v266[13] ^ 0x23)) + 47) >> 3)) ^ 0x3D) << 16) | v267;
  v288 = v267 + 147315652 - 2 * (v267 & 0x8C7DBC5 ^ v271 & 1);
  LODWORD(v267) = v287 & 0xD8B314BB ^ 0x80920018 ^ (v287 ^ 0xC8FDFD01) & (v187 ^ 0x274CEB44);
  v289 = v283 ^ (2 * (v283 & STACK[0x66D8]));
  LODWORD(v273) = (((v289 & ~v60 ^ 0x131) - 2144807893 - ((2 * (v289 & ~v60 ^ 0x131)) & 0x51A856)) ^ 0x8028D51A) << LODWORD(STACK[0x63B8]);
  LODWORD(STACK[0x6658]) = (((-588839998
                            - (v285 & ~v60 ^ 0x8980000)
                            + ((2 * (v285 & ~v60 ^ 0x8980000)) & 0x4631E4CE)
                            + 2518) ^ 0xD47F0D98) << v34)
                         + ((((v285 & v185 & 0x85DCE37E ^ 0x859CC376)
                            + (v285 & v185 ^ 0x20412008)
                            - ((v285 & v185 ^ 0x20412008) & 0x85DCE37E)) ^ 0xA59DC376) >> STACK[0x66E0]);
  LODWORD(STACK[0x6628]) = (((226664310 - (_DWORD)v267 + ((2 * (_DWORD)v267) | 0xE4FAC034) + 112) ^ 0xBA5E7403) << LODWORD(STACK[0x6588]) << LODWORD(STACK[0x6590])) ^ (((v287 ^ 0xC8FDFD01) & v154) >> v24);
  LODWORD(STACK[0x6620]) = v273 | (((-921453633
                                   - (v289 & v185 ^ 0x65445400 | 0xC913BBBF)
                                   + (v289 & v185 ^ 0x65445400 | 0x36EC4440)) ^ 0x53A81040) >> v24);
  LODWORD(v273) = (v288 & 0x4372FD3 ^ 0x70BC0 ^ (v288 ^ 0x8C7DBC4) & (v177 ^ 0xDEBB2740)) << (STACK[0x66D8] & 1) << !(STACK[0x66D8] & 1);
  v290 = (v273 + 147315652 - ((2 * v273) & 0x118FB788)) ^ v288;
  LODWORD(STACK[0x6660]) = ((((v290 & v54 ^ 0x211004AA) - ((2 * (v290 & v54 ^ 0x211004AA)) & 0xA729E690) - 745213112) ^ 0xF284F7E2) << v34) ^ ((v290 & v154) >> STACK[0x66E0]);
  v291 = v154;
  LOBYTE(v177) = v34;
  LODWORD(STACK[0x6410]) = ((v154 & (STACK[0x63C0] & 0x16D19C ^ 0x8B68CE)) >> v24) | (((STACK[0x63C0] & 0x184 | 0x40010000) ^ 0x400000C4 ^ (LODWORD(STACK[0x6600]) ^ 0x9EF81A) & (STACK[0x63C0] & 0x16D19C ^ 0x8B68CE)) << v34);
  v292 = STACK[0x62F8];
  v293 = STACK[0x62F8] & 0x4E806D60 ^ 0xA74036B0;
  LODWORD(v273) = STACK[0x62F8] & 0xA806560 ^ 0x20CE022 ^ (v60 ^ 0xE4001A90) & v293;
  v294 = STACK[0x62F8] & 0xE802120 ^ 0xBE27F12 ^ v293 & (v185 ^ 0xAE8023B0);
  v295 = STACK[0x6578];
  LOBYTE(v154) = STACK[0x6570];
  LODWORD(STACK[0x6408]) = ((((_DWORD)v273 - ((2 * (_DWORD)v273) & 0x6892FE0) + 325556208) ^ 0x122B53F2) << v295 << v154)
                         + (((((2 * v294) & 0x3C05680) - v294 + 2115916979) ^ 0xD3FC0911) >> STACK[0x66E0]);
  v296 = v292 & 0xA6184C68 ^ 0x530C2634;
  v297 = v185;
  LODWORD(v273) = v292 & 0x2100028 ^ 0x822000C ^ v296 & (v185 ^ 0x5210002C);
  v298 = v292 & 0x80180460 ^ 0x88B024C0 ^ v296 & (v187 ^ 0x66044A08);
  LODWORD(STACK[0x6400]) = (((-319062869 - (v273 | 0xECFB7CAB) + (v273 | 0x13048354)) ^ 0x4926837C) >> v24) | (((1843125456 - v298 + ((2 * v298) & 0x24484458)) ^ 0xF463DC24) << LODWORD(STACK[0x6630]) << LODWORD(STACK[0x6648]));
  v299 = 570556930
       * (((v14 ^ 0xAC97C1E9) + 8082246) ^ ((v14 ^ 0xA2AE3130) + 239248285) ^ ((v14 ^ 0xE39F099) - 1563073994))
       - 1926823898;
  LODWORD(STACK[0x63F8]) = ((v291 & (v299 & 0x1AA0FF14 ^ 0xD507F8A)) >> STACK[0x66E0]) ^ ((v299 & 0x12205614 ^ 0x140568A ^ (v60 ^ 0xC90A900) & (v299 & 0x1AA0FF14 ^ 0xD507F8A)) << v34);
  v300 = v292 & 0x72766CAA ^ 0xB93B3655;
  LODWORD(STACK[0x6668]) = ((((v60 ^ 0xD1474A02) & v300 ^ v292 & 0x223024A8) & 0xF26B3CE4 ^ 0xF24B09C4)
                          + ((v60 ^ 0xD1474A02) & v300 ^ v292 & 0x223024A8 ^ 0x203431)
                          - (((v60 ^ 0xD1474A02) & v300 ^ v292 & 0x223024A8 ^ 0x203431) & 0xF26B3CE4)) ^ 0xDA733D80;
  v301 = -2113797630
       * (((v14 ^ 0x569E9318) - 93191755) ^ ((v14 ^ 0x3567890A) - 1718936665) ^ ((v14 ^ 0x63F91A52) - 820672257))
       - 853082074;
  LODWORD(v270) = v301 & 0x72766CAA ^ 0xB93B3655;
  v302 = v187;
  v303 = v301 & 0x10160002 ^ 0x130102 ^ (v187 ^ 0x6B687EFC) & v270;
  LODWORD(v273) = (v301 & 0x50242820 ^ 0x18202044 ^ (v185 ^ 0x58242864) & v270) >> STACK[0x66E0];
  LOBYTE(v284) = STACK[0x65D0];
  LOBYTE(v185) = STACK[0x65E0];
  LODWORD(STACK[0x63F0]) = (((((2 * v303) | 0xEC25167C) - v303 - 1980926782) ^ 0xE6128A3D) << v284 << v185) + v273;
  LODWORD(STACK[0x6AB0]) = v300;
  LODWORD(STACK[0x63E8]) = ((v292 & 0x62602CAA ^ 0xA1293415 ^ v300 & (v297 ^ 0xE3693CBF)) >> v24) | ((v292 & 0x12542402 ^ 0x98113401 ^ v300 & (v187 ^ 0x612A4AFC)) << v34);
  v304 = v60;
  LODWORD(STACK[0x63E0]) = ((v291 & v270) >> STACK[0x66E0])
                         + ((v301 & 0x305208A8 ^ 0x301A0200 ^ (v60 ^ 0xCB257457) & v270) << v137 << LODWORD(STACK[0x64F8]));
  LODWORD(v273) = v292 & 0x2A67B0C4 ^ 0x1533D862;
  LODWORD(STACK[0x6648]) = v292 & 0x2A458044 ^ 0x4118862 ^ (v60 ^ 0x11227080) & v273;
  v305 = v292 & 0x2A4430C4 ^ 0x280C18E8 ^ v273 & (v297 ^ 0x2A4478E4);
  LODWORD(STACK[0x6630]) = (1104386568 - (v305 | 0x41D39A08) + (v305 | 0xBE2C65F7)) ^ 0x9620257F;
  v306 = 1107427842
       * (((v14 ^ 0x407B4A15) - 325592902) ^ ((v14 ^ 0x34AF4936) - 1740383333) ^ ((v14 ^ 0x74D40363) - 667381296))
       - 1926823898;
  LODWORD(v273) = v306 & 0xA041004 ^ 0xA0C001A;
  v307 = v306 & 0x2A67B0C4 ^ 0x1533D862;
  LODWORD(v273) = (((2 * (v273 ^ (v187 ^ 0x3173E8E0) & v307)) & 0x2A1880C8)
                 - (v273 ^ (v187 ^ 0x3173E8E0) & v307)
                 - 1426866790) ^ 0xA4FFAD82;
  v308 = v291;
  v309 = v291 & v307;
  LODWORD(v273) = (_DWORD)v273 << LODWORD(STACK[0x64B8]);
  LODWORD(STACK[0x6468]) = (v309 >> v24) + v273;
  LODWORD(STACK[0x63D8]) = (v309 >> STACK[0x66E0]) | v273;
  v310 = v292 & 0xA3131AF6 ^ 0xD1898D7B;
  v311 = v292 & 0x1001284 ^ 0x51008408 ^ (v60 ^ 0xA29B0973) & v310;
  LODWORD(STACK[0x6618]) = v310;
  LODWORD(v273) = v292 & 0x811118D2 ^ 0x813018D2 ^ v310 & (v297 ^ 0xC1119DDA);
  LODWORD(STACK[0x6610]) = (((2 * v273) | 0xEC6C705E) - v273 + 164218833) ^ 0xB607ADA7;
  LODWORD(v273) = 33686018
                * (((v14 ^ 0x71F5D906) - 585544789) ^ ((v14 ^ 0xD5EEC4EB) + 2030196296) ^ ((v14 ^ 0xA41B1DAD) + 150441730))
                - 853082074;
  LODWORD(v270) = v273 & 0xA3131AF6 ^ 0xD1898D7B;
  LODWORD(STACK[0x63D0]) = ((v291 & v270) >> v24) | ((((((v187 ^ 0x31129C87) & v270 ^ v273 & 0x82010270) & 0xF20115E7 ^ 0x326015E7)
                                                                   + (((v187 ^ 0x31129C87) & v270 ^ v273 & 0x82010270) & 0x19A8A18 ^ 0x8084219)
                                                                   - 1) ^ 0xFAE15687) << v34);
  v312 = v273 & 0x3101824 ^ 0x1000C21 ^ (v60 ^ 0xF08B83DA) & v270;
  LODWORD(v273) = v273 & 0xA0031894 ^ 0x20228D05 ^ (v297 ^ 0xA0039D95) & v270;
  LOBYTE(v187) = STACK[0x65B0];
  LODWORD(STACK[0x63C8]) = (v312 << LODWORD(STACK[0x65F8]) << v187)
                         + (((((2 * (_DWORD)v273) & 0xE74101C4) - v273 - 2141495523) ^ 0x20785F09) >> v24);
  LODWORD(v273) = v292 & 0x31202B6 ^ 0x2108134 ^ (v292 & 0xA3131AF6 ^ 0xD1898D7B) & (v302 ^ 0xE0811841);
  LODWORD(STACK[0x6600]) = (((2 * v273) | 0x5688D4BE) - v273 - 725903967) ^ 0x385C6E51;
  v313 = v292 & 0xCA4BB35C ^ 0x6525D9AE;
  LODWORD(STACK[0x65C8]) = v313;
  LODWORD(v273) = v292 & 0xC240A340 ^ 0x93008A00 ^ (v60 ^ 0x2C0F509C) & v313;
  LODWORD(STACK[0x65B8]) = (((2 * v273) & 0x3C04A448) - v273 - 511857190) ^ 0x335DAEF8;
  LODWORD(v273) = 33686018
                * (((v14 ^ 0xBC51591A) + 280873911) ^ ((v14 ^ 0xE3665521) + 1334495118) ^ ((v14 ^ 0x5F370C7B) - 203710760))
                - 853082074;
  v314 = v273 & 0xCA4BB35C ^ 0x6525D9AE;
  v315 = ((((v297 ^ 0xA0688244) & v314 ^ v273 & 0x80488244) & 0x642C3B90 ^ 0x642C3991)
        + ((v297 ^ 0xA0688244) & v314 ^ v273 & 0x80488244 ^ 0x900240)
        - (((v297 ^ 0xA0688244) & v314 ^ v273 & 0x80488244 ^ 0x900240) & 0x642C3B90)) ^ 0x449CB9D5;
  LODWORD(STACK[0x63C0]) = v311 << v154 << v295;
  v316 = (((((v302 ^ 0xEC6849A0) & v314 ^ v273 & 0x203B25C) & 0xAF41A322 ^ 0xADC00321 | ((v302 ^ 0xEC6849A0) & v314 ^ v273 & 0x203B25C) & 0x402E58DC)
         - 1) ^ 0xACC5932E) << v154 << v295;
  LODWORD(v273) = v273 & 0xC249B218 ^ 0x248029B ^ (v60 ^ 0x2D220964) & v314;
  LODWORD(v270) = v315 >> STACK[0x66E0];
  LODWORD(STACK[0x63B8]) = v270 | v316;
  LODWORD(STACK[0x63B0]) = (((-1172997725 - (v273 | 0xBA1579A3) + (v273 | 0x45EA865C)) ^ 0x7A7544D) << v34) | v270;
  LODWORD(v273) = 1107427842
                * (((v14 ^ 0x5DCFC1DF) - 249343116) ^ ((v14 ^ 0x3341A39A) - 1616039625) ^ ((v14 ^ 0x6E8E6205)
                                                                                         - 1033703254))
                - 853082074;
  LODWORD(STACK[0x63A8]) = ((v273 & 0x3B34FA6A) - ((2 * v273) & 0x1461A4D4) + 1249433599) ^ v60 ^ 0x57E2AACA;
  LODWORD(v267) = v292 & 0x3B34FA6A ^ 0x1D9A7D35;
  LODWORD(v270) = v292 & 0x3134BA22 ^ 0x4024B231 ^ v267 & (v297 ^ 0x3136BE33);
  LODWORD(STACK[0x65A8]) = (v270 - ((2 * v270) & 0xA7442842) + 1403196449) ^ 0x2959A21;
  LODWORD(v270) = v292 & 0x38202822 ^ 0x70012803 ^ v267 & (v302 ^ 0x79CD75C);
  v317 = (((2 * v270) & 0x9C36A40E) - v270 + 837070200) ^ 0x59E7AD5A;
  LODWORD(STACK[0x6460]) = v273 & 0x3B34FA6A ^ 0x1D9A7D35;
  LODWORD(v273) = (v304 ^ 0x259E5364) & (v273 & 0x3B34FA6A ^ 0x1D9A7D35) ^ v273 & 0x1A20A80A;
  LODWORD(STACK[0x65A0]) = ((v273 & 0x922FD20 ^ 0x428400) + (v273 ^ 0x8BA57BBE) - ((v273 ^ 0x8BA57BBE) & 0x923FDA0)) ^ 0x9AC6AA0F;
  LODWORD(v270) = v292 & 0x34178160 ^ 0x9A0BC0B0;
  LODWORD(STACK[0x63A0]) = ((v308 & v270) >> STACK[0x66E0])
                         + ((v292 & 0x24018160 ^ 0x88018030 ^ (v304 ^ 0x121E4080) & v270) << v34);
  LODWORD(v273) = 1107427842
                * (((v14 ^ 0x72691B9D) - 561673934) ^ ((v14 ^ 0xD236722) - 1580206705) ^ ((v14 ^ 0x7F4A7CFF) - 744034732))
                + 1294401574;
  v318 = v273 & 0x34178160 ^ 0x9A0BC0B0;
  v319 = v273 & 0x14168020 ^ 0x11100082 ^ (v302 ^ 0xA0090150) & v318;
  LODWORD(v267) = v273 & 0x78120 ^ 0x12F1801 ^ (v297 ^ 0x820FC120) & v318;
  LODWORD(v267) = (-2031234317 - v267 + ((2 * v267) & 0x72241200)) ^ 0x5C90AD2;
  LODWORD(STACK[0x65D0]) = (v292 & 0x40011200 ^ 0x45051000 ^ v313 & (v302 ^ 0xAA6AE9FE)) << v284 << v185;
  LODWORD(STACK[0x6398]) = (v267 >> v24)
                         + (((833632129 - v319 + ((2 * v319) | 0x9C9F90FE)) ^ 0xC55D085D) << v284 << v185);
  v320 = v292 & 0x30150000 ^ 0x10B00201 ^ v270 & (v302 ^ 0x8E0AC160);
  LODWORD(STACK[0x6390]) = ((v308 & v270) >> v24) | (((v320 - ((2 * v320) & 0x39348360) - 1646639696) ^ 0x9D6B4721) << LODWORD(STACK[0x6640]) << LODWORD(STACK[0x6638]));
  LODWORD(STACK[0x6388]) = ((((((v304 ^ 0xAE0640E0) & v318 ^ v273 & 0x10118100) & 0x3E054030 ^ 0x6F657428)
                            + ((v304 ^ 0xAE0640E0) & v318 ^ v273 & 0x10118100 ^ 0x10008311)
                            - (((v304 ^ 0xAE0640E0) & v318 ^ v273 & 0x10118100 ^ 0x10008311) & 0x3E054231)) ^ 0x7F6C7538) << v34) | (v267 >> STACK[0x66E0]);
  v321 = v292 & 0x378A0B06 ^ 0x1BC50583;
  v322 = v292 & 0x70A0802 ^ 0x20E0052 ^ (v304 ^ 0x30C10785) & v321;
  LODWORD(STACK[0x6578]) = (((2 * v322) & 0x2881AA8) - v322 + 1051398819) ^ 0x37A112F3;
  LODWORD(STACK[0x65E0]) = v321;
  LODWORD(STACK[0x6570]) = (((v321 & (v297 ^ 0x10A0707) ^ v292 & 0x10A0306) & 0x36480983 ^ 0x7648C882)
                          + (v321 & (v297 ^ 0x10A0707) ^ v292 & 0x10A0306 ^ 0x1121349)
                          - ((v321 & (v297 ^ 0x10A0707) ^ v292 & 0x10A0306 ^ 0x1121349) & 0x365809C3)) ^ 0x764ADF89;
  v323 = 1107427842
       * (((v14 ^ 0x5D2D2148) - 238963739) ^ ((v14 ^ 0x9E085A3) - 1525934320) ^ ((v14 ^ 0x54CDA4AB) - 132041208))
       + 1294401574;
  LODWORD(v272) = v323 & 0x378A0B06 ^ 0x1BC50583;
  v324 = v323 & 0x108A0302 ^ 0x81E030B ^ (v302 ^ 0x27010C84) & v272;
  LODWORD(STACK[0x66F0]) = v324 - ((2 * v324) & 0x5DBA1502) + 1859984097;
  LODWORD(STACK[0x6548]) = v272;
  v325 = v323 & 0x20800A00 ^ 0x60204E10 ^ (v304 ^ 0x1F0E0186) & v272;
  LODWORD(STACK[0x6568]) = (-2066432163 - (v325 | 0x84D4BF5D) + (v325 | 0x7B2B40A2)) ^ 0x1BCA0AB3;
  LODWORD(STACK[0x6558]) = v292 & 0x13820204 ^ 0x13C10080 ^ v321 & (v302 ^ 0x2C0C0D03);
  v326 = STACK[0x66D8] & 0x1FCA5F4C;
  v327 = 2 * v326;
  v328 = (2 * v326) ^ 0x9FCA5F4C;
  v329 = (2 * v326) & 0x3B109898 ^ 0x9180828 ^ (v304 ^ 0x84C42704) & v328;
  v330 = (-1231119215 - (v329 | 0xB69E9C91) + (v329 | 0x4961636E)) ^ 0x5B73330E;
  LODWORD(STACK[0x6560]) = v308 & v328;
  LODWORD(STACK[0x6380]) = ((v308 & v328) >> v24) | (v330 << v34);
  v331 = 1107427842
       * (((v14 ^ 0xFD15489) - 1556232666) ^ ((v14 ^ 0xA143F1F0) + 229598045) ^ ((v14 ^ 0xAE92A539) + 41826198))
       + 220659750;
  LODWORD(v267) = v331 & 0x3F94BE98 ^ 0x9FCA5F4C;
  LODWORD(v273) = v331 & 0x4140810 ^ 0x181F048B ^ (v302 ^ 0xBB82B7C8) & v267;
  v332 = (-717346195 - (v273 | 0xD53E2A6D) + (v273 | 0x2AC1D592)) ^ 0x3696991D;
  v333 = ((v331 & 0x36843488 ^ 0xD7893903 ^ (v297 ^ 0xB68C3588) & v267) - 1) ^ 0x41012C0A;
  LODWORD(STACK[0x6550]) = v333;
  LOBYTE(v313) = STACK[0x6580];
  LOBYTE(v270) = STACK[0x6598];
  LODWORD(STACK[0x6458]) = v317 << v313 << v270;
  LODWORD(STACK[0x6378]) = (v333 >> STACK[0x66E0]) + (v332 << v313 << v270);
  LOBYTE(v268) = STACK[0x65D8];
  LOBYTE(v154) = STACK[0x65C0];
  LODWORD(STACK[0x6370]) = (v330 << v268 << v154) | (((2 * v326) & 0x34803688 ^ 0x94821608 ^ v328 & (v297 ^ 0xB4823688)) >> STACK[0x66E0]);
  v334 = STACK[0x66D8] & 0x1431E70D;
  v335 = 2 * v334;
  v336 = v335 & 0x2840C010 ^ 0x2108E081 ^ (v335 ^ 0x1431E70D) & (v297 ^ 0x2C40E011);
  LODWORD(v273) = v335 & 0x20608A0A ^ 0x22441809 ^ (v304 ^ 0xC136414) & (v335 ^ 0x1431E70D);
  v337 = ((((2 * v336) | 0x725C72) - v336 + 2143736263) ^ 0xA5312EB9) >> STACK[0x66E0];
  LODWORD(v273) = ((-1804302632 - (v273 | 0x947486D8) + (v273 | 0x6B8B7927)) ^ 0x59EFE227) << v34;
  LODWORD(STACK[0x6368]) = v273 + v337 - 2 * (v273 & v337);
  v338 = 1107427842
       * (((v14 ^ 0x50D5C515) - 63350854) ^ ((v14 ^ 0x5BABBC6D) - 146329918) ^ ((v14 ^ 0xB7E7938) - 1483543659))
       + 1294401574;
  v339 = v338 & 0x2863CE1A ^ 0x1431E70D;
  LODWORD(STACK[0x65B0]) = (v339 ^ v302 & v339) << v187 << LODWORD(STACK[0x65F8]);
  LODWORD(v273) = (v338 & 0x2863CE1A ^ -(v338 & 0x2863CE1A) ^ (338814733 - v339)) + 338814733;
  LODWORD(STACK[0x65F8]) = v273;
  LODWORD(STACK[0x6360]) = ((((2 * (v273 & ~v304 ^ 0x3080C608)) & 0xBF2FE382)
                           - (v273 & ~v304 ^ 0x3080C608)
                           - 1603793346) ^ 0x90E8C836) << v154 << v268;
  LODWORD(v273) = (v335 ^ 0x1431E70D) & (v302 ^ 0x10238F1F) ^ v335 & 0x28404000;
  LODWORD(STACK[0x6358]) = ((v308 & ((2 * v334) ^ 0x1431E70D)) >> STACK[0x66E0])
                         + ((((v273 & 0x34424101 ^ 0x344A0141)
                            + (v273 ^ 0xA804080)
                            - ((v273 ^ 0xA804080) & 0x344A41C1)) ^ 0x3ADA6141) << v34);
  v340 = 33686018
       * (((v14 ^ 0x84DE8D34) + 674373529) ^ ((v14 ^ 0x7612C84B) - 620864792) ^ ((v14 ^ 0xF2CC453F) + 1579210644))
       - 853082074;
  LODWORD(v270) = v340 & 0xC0A1BFFC ^ 0x6050DFFE;
  v341 = ((((v304 ^ 0xA0506B06) & v270 ^ v340 & 0x40A194F8) & 0xE0D1CE0C ^ 0xF0D4CA0D)
        + (((v304 ^ 0xA0506B06) & v270 ^ v340 & 0x40A194F8) & 0x2031F2 ^ 0xA201021)
        - 2) ^ 0xBAF44ED4;
  LODWORD(v273) = v292 & 0xC0A1BFFC ^ 0x6050DFFE;
  v342 = v292 & 0x8000B88C ^ 0x2400108A ^ v273 & (v302 ^ 0x40F14770);
  v343 = 1775393534 - v342 + ((2 * v342) & 0x84331D0);
  v344 = v292 & 0xA10B1C ^ 0x2F1020C ^ v273 & (v297 ^ 0xF10B1C);
  LODWORD(STACK[0x6608]) = (-1774550743 - (v344 | 0x963A8129) + (v344 | 0x69C57ED6)) ^ 0x6B6477C6;
  v345 = v340 & 0x80A017D4 ^ 0x5057D6 ^ (v297 ^ 0x80F057D6) & v270;
  v346 = ((((v297 ^ 0x2C60D86) & v272 ^ v323 & 0x2820906) & 0x2CC70283 ^ 0x2CF5D2E3)
        + (((v297 ^ 0x2C60D86) & v272 ^ v323 & 0x2820906) & 0x13080D04 ^ 0x2000805)
        - 1) ^ 0x2C31DF65;
  LODWORD(v159) = __ROR4__(v326, 11) ^ 0x7C9EF6B3;
  HIDWORD(v159) = v159;
  v347 = v159 >> 20;
  v348 = v347 ^ 0x70A16885;
  v349 = v347 & 0x18CE3810 ^ 0x840800 ^ (v304 ^ 0xA710C7C8) & (v347 ^ 0x70A16885);
  v350 = (((2 * v349) | 0x356C4252) - v349 + 1699339991) ^ 0x8AB2012D;
  LOBYTE(v266) = STACK[0x6640];
  LOBYTE(v308) = STACK[0x6638];
  v351 = v341 << v308 << (char)v266;
  LODWORD(v272) = LODWORD(STACK[0x6558]) << (char)v266 << v308;
  LODWORD(STACK[0x6350]) = v350 << (char)v266 << v308;
  v352 = v327 & 0x4848690 ^ 0x48E8552 ^ v328 & (v302 ^ 0xBB503808);
  v353 = (((2 * v352) | 0x9E4121FE) - v352 + 819949313) ^ 0xCF2452E9;
  v354 = v331 & 0x16109A98 ^ 0x4BC7E7E6 ^ (v304 ^ 0x29862400) & v267;
  v355 = STACK[0x66E0];
  v356 = v297;
  LOBYTE(v308) = v177;
  v357 = v332 << v177;
  v358 = STACK[0x6A90];
  v359 = STACK[0x66D0];
  LODWORD(STACK[0x6348]) = ((STACK[0x6A90] & v267) >> LODWORD(STACK[0x66D0])) | v357;
  LODWORD(v267) = LODWORD(STACK[0x6550]) >> v359;
  LODWORD(STACK[0x6340]) = v267 | v357;
  LODWORD(STACK[0x6338]) = (((-1743556093 - v354 + ((2 * v354) | 0xCFD90582) + 2876) ^ 0xBA633E6B) << v177) | v267;
  v360 = v338 & 0x20620408 ^ 0x10302408 ^ (v304 ^ 0xC01CB17) & v339;
  LODWORD(v267) = v338 & 0x8630E18 ^ 0x4210609 ^ (v297 ^ 0xC630E19) & v339;
  LODWORD(v159) = __ROR4__(v334, 20) ^ 0xEBFBC6F;
  HIDWORD(v159) = v159;
  v361 = v159 >> 11;
  v362 = v361 ^ 0x99D030FA;
  v363 = v361 & 0x8619A13 ^ 0xAC7D2760 ^ (v361 ^ 0x99D030FA) & (v302 ^ 0x20026508);
  LODWORD(STACK[0x6330]) = ((v358 & v362) >> v355) | (((((2 * v363) & 0xF761D6A6) - v363 - 2075192148) ^ 0x346223DA) << LODWORD(STACK[0x65E8]));
  v364 = v335 & 0x28030612 ^ 0x26820513 ^ (v335 ^ 0x1431E70D) & (v302 ^ 0x1060E80C);
  LOBYTE(v177) = v359;
  v365 = (v358 & v339) >> v359;
  LODWORD(STACK[0x6328]) = v365 | LODWORD(STACK[0x65B0]);
  v366 = v360 << v308;
  LODWORD(STACK[0x6320]) = v366 | (v267 >> v359);
  LODWORD(STACK[0x6318]) = v365 | v366;
  v367 = (v358 & v270) >> v355;
  LODWORD(STACK[0x6310]) = v367 | v351;
  LODWORD(STACK[0x6308]) = (v341 << v308) + (v345 >> v359);
  LODWORD(STACK[0x6300]) = v367 | (v341 << v308);
  v368 = ((v292 & 0xA1A5B8 ^ 0xF36E33A7 ^ (v304 ^ 0xE0405A44) & v273) - 1) ^ 0xF37EB61C;
  LODWORD(v273) = v358 & v273;
  LODWORD(STACK[0x62F8]) = (v273 >> v359) + (v368 << v308);
  v369 = ((((v302 ^ 0xE0812644) & v270 ^ v340 & 0x2099B8) & 0xD0876A ^ 0x1B9C0768)
        + ((v302 ^ 0xE0812644) & v270 ^ v340 & 0x2099B8 ^ 0x609882)
        - (((v302 ^ 0xE0812644) & v270 ^ v340 & 0x2099B8 ^ 0x609882) & 0xD0876A)) ^ 0x1BECC652;
  LODWORD(v270) = LODWORD(STACK[0x66F0]) ^ 0x7E0718E9;
  LOBYTE(v340) = STACK[0x6590];
  v370 = v369 << v340;
  LOBYTE(v366) = STACK[0x6588];
  v371 = (_DWORD)v270 << v340 << v366;
  LODWORD(STACK[0x62F0]) = (v370 << v366) | (v345 >> v355);
  v372 = ((LODWORD(STACK[0x66F8]) ^ 0x503E8E4B) - 324226865) ^ ((LODWORD(STACK[0x66F8]) ^ 0xD8E1A9A1) + 1685296933) ^ ((LODWORD(STACK[0x66F8]) ^ 0xD5E9DD0A) + 1769726864);
  LODWORD(STACK[0x66F0]) = ~v304;
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x65F0]) ^ 1;
  v373 = LODWORD(STACK[0x6670]) ^ v335 & 0x2803CE0A ^ 0x411C60D ^ (v335 ^ 0x1431E70D) & (v297 ^ 0x2C13CE0F);
  v374 = (LODWORD(STACK[0x6670]) >> v355) ^ LODWORD(STACK[0x6470]);
  v375 = STACK[0x66E8];
  LODWORD(STACK[0x62E8]) = STACK[0x66E8] & 0x9992F540;
  LODWORD(STACK[0x62E0]) = LODWORD(STACK[0x6668]) << v308;
  LODWORD(STACK[0x62D8]) = (v358 & STACK[0x6AB0]) >> v359;
  v376 = LODWORD(STACK[0x6648]) << v308;
  LODWORD(STACK[0x6188]) = v375 & 0x9CA51513;
  LODWORD(STACK[0x6180]) = v375 & 0x616DCA9B;
  LODWORD(STACK[0x62C8]) = v375 ^ 0x9165010D;
  v377 = STACK[0x6630];
  LODWORD(STACK[0x62C0]) = LODWORD(STACK[0x6630]) >> v355;
  LODWORD(STACK[0x62B8]) = LODWORD(STACK[0x6610]) >> v355;
  LODWORD(STACK[0x62D0]) = v376;
  LODWORD(STACK[0x62B0]) = v376 + (v377 >> v177);
  LODWORD(v267) = v358 & STACK[0x6618];
  LODWORD(STACK[0x62A8]) = LODWORD(STACK[0x6600]) << v308;
  LODWORD(STACK[0x62A0]) = v267 >> v355;
  LODWORD(v267) = (v358 & STACK[0x65C8]) >> v177;
  LODWORD(STACK[0x6290]) = LODWORD(STACK[0x65B8]) << v308;
  LODWORD(STACK[0x6298]) = v267;
  LODWORD(STACK[0x6288]) = v267 | LODWORD(STACK[0x65D0]);
  v378 = (v358 & STACK[0x6460]) >> v355;
  v379 = LODWORD(STACK[0x65A8]) >> v177;
  LODWORD(v267) = LODWORD(STACK[0x65A0]) << v308;
  LODWORD(STACK[0x6280]) = v378;
  LODWORD(STACK[0x6270]) = v378 | v267;
  LODWORD(v267) = LODWORD(STACK[0x6570]) >> v177;
  LODWORD(STACK[0x6268]) = v267 + v272;
  v380 = STACK[0x6578];
  v381 = LODWORD(STACK[0x6578]) << LODWORD(STACK[0x64C0]);
  LODWORD(STACK[0x6260]) = v381 + v267;
  LODWORD(v270) = (_DWORD)v270 << v308;
  v382 = (v358 & STACK[0x6548]) >> v355;
  LODWORD(STACK[0x6250]) = (v346 >> v355) | v371;
  LODWORD(STACK[0x6248]) = v270 + (v346 >> v355);
  LODWORD(STACK[0x6258]) = v382;
  LODWORD(STACK[0x6240]) = v382 | v270;
  LODWORD(STACK[0x6238]) = LODWORD(STACK[0x6568]) << v308;
  LODWORD(STACK[0x6230]) = (v356 & STACK[0x65F8]) >> v177;
  LODWORD(v270) = (v343 + 3097) ^ 0x6DD2EF13;
  v383 = LODWORD(STACK[0x6608]) >> v177;
  LODWORD(STACK[0x6228]) = v383 | ((_DWORD)v270 << v308);
  LODWORD(STACK[0x6220]) = v273 >> v355;
  v384 = STACK[0x64A0];
  v385 = STACK[0x64A8];
  LODWORD(v270) = (_DWORD)v270 << LODWORD(STACK[0x64A0]) << LODWORD(STACK[0x64A8]);
  LODWORD(v273) = v358 & STACK[0x65E0];
  LODWORD(STACK[0x6210]) = v380 << v308;
  LODWORD(v273) = v273 >> v177;
  LODWORD(STACK[0x6208]) = v273;
  LODWORD(STACK[0x6200]) = v273 ^ v381;
  LODWORD(STACK[0x61F8]) = (v358 & v348) >> v355;
  LODWORD(STACK[0x61F0]) = v353 << v385 << v384;
  LODWORD(STACK[0x61E8]) = LODWORD(STACK[0x6560]) >> v355;
  LODWORD(STACK[0x61E0]) = ((-790002818 - (v364 | 0xD0E9837E) + (v364 | 0x2F167C81)) ^ 0xD857E93) << LODWORD(STACK[0x64B8]);
  LODWORD(STACK[0x61DC]) = v373 >> v355;
  LODWORD(STACK[0x6218]) = v270;
  LODWORD(STACK[0x61D0]) = v383 + v270;
  LODWORD(STACK[0x6668]) = v372 - 499854124;
  v386 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6278]));
  LODWORD(STACK[0x61C8]) = -LODWORD(STACK[0x6498]);
  LODWORD(STACK[0x61C0]) = -LODWORD(STACK[0x6468]);
  LODWORD(STACK[0x61BC]) = -LODWORD(STACK[0x6480]);
  LODWORD(STACK[0x6278]) = v379;
  LODWORD(STACK[0x61B0]) = v379 | LODWORD(STACK[0x6458]);
  LODWORD(STACK[0x61A8]) = LODWORD(STACK[0x6478]) ^ LODWORD(STACK[0x6488]);
  LODWORD(STACK[0x6670]) = v374;
  LODWORD(STACK[0x61A0]) = -v374;
  LODWORD(STACK[0x6AB0]) = STACK[0x6A70];
  HIDWORD(v159) = STACK[0x6490];
  LODWORD(v159) = STACK[0x6490];
  LODWORD(STACK[0x6198]) = v159 >> 17;
  return v386();
}

uint64_t sub_100A82230(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  char v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  unint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unint64_t v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unint64_t v69;
  int v70;
  unint64_t v71;
  int v72;
  BOOL v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unsigned int v82;
  int v83;
  BOOL v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  BOOL v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  uint64_t v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int *v292;
  int *v293;
  unsigned int v294;
  int *v295;
  unsigned int v296;
  uint64_t v297;
  int *v298;
  int v299;
  int v300;
  int v301;
  int *v302;
  int v303;
  int *v304;
  int v305;
  int *v306;
  uint64_t v307;
  int *v308;
  int v309;
  uint64_t v310;
  int *v311;
  uint64_t v312;
  int *v313;
  int v314;
  unint64_t v315;
  int v316;
  int v317;
  int *v318;
  int v319;
  int *v320;
  int v321;
  uint64_t v322;
  int *v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  _DWORD *v327;
  unint64_t v328;
  unint64_t v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  _DWORD *v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int *v341;
  int v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  unint64_t v346;
  unsigned int v347;
  unint64_t v348;
  int v349;
  int *v350;
  int v351;
  _DWORD *v352;
  _DWORD *v353;
  uint64_t v354;
  _DWORD *v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  _DWORD *v359;
  uint64_t v360;
  unint64_t v361;
  uint64_t v362;
  _DWORD *v363;
  _DWORD *v364;
  unint64_t v365;
  int v366;
  uint64_t v367;
  int *v368;
  uint64_t v369;
  int *v370;
  int v371;
  int v372;
  unint64_t v373;
  unsigned int v374;
  int *v375;
  int v376;
  _DWORD *v377;
  int *v378;
  int v379;
  _DWORD *v380;
  unint64_t v381;
  unint64_t v382;
  _DWORD *v383;
  uint64_t v384;
  _DWORD *v385;
  uint64_t v386;
  _DWORD *v387;
  uint64_t v388;
  _DWORD *v389;
  uint64_t v390;
  _DWORD *v391;
  uint64_t v392;
  _DWORD *v393;
  uint64_t v394;
  _DWORD *v395;
  _DWORD *v396;
  uint64_t v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  int *v406;
  int v407;
  uint64_t v408;
  unint64_t v409;
  uint64_t v410;
  int *v411;
  unint64_t v412;
  int v413;
  int v414;
  uint64_t v415;
  int *v416;
  uint64_t v417;
  int *v418;
  int v419;
  int *v420;
  int v421;
  int *v422;
  int *v423;
  int v424;
  uint64_t v425;
  int *v426;
  uint64_t v427;
  int *v428;
  uint64_t v429;
  int *v430;
  uint64_t v431;
  int *v432;
  uint64_t v433;
  int *v434;
  uint64_t v435;
  int *v436;
  uint64_t v437;
  int *v438;
  uint64_t v439;
  int *v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  int v451;
  int v452;
  unint64_t v453;
  unsigned int v454;
  unint64_t v455;
  int v456;
  _DWORD *v457;
  int *v458;
  int v459;
  _DWORD *v460;
  uint64_t v461;
  unint64_t v462;
  uint64_t v463;
  unint64_t v464;
  unint64_t v465;
  int v466;
  int *v467;
  int v468;
  _DWORD *v469;
  uint64_t v470;
  _DWORD *v471;
  uint64_t v472;
  _DWORD *v473;
  uint64_t v474;
  unint64_t v475;
  uint64_t v476;
  _DWORD *v477;
  uint64_t v478;
  _DWORD *v479;
  uint64_t v480;
  _DWORD *v481;
  int v482;
  int v483;
  unsigned int v484;
  unint64_t v485;
  int *v486;
  int v487;
  unint64_t v488;
  unint64_t v489;
  _DWORD *v490;
  uint64_t v491;
  _DWORD *v492;
  uint64_t v493;
  unint64_t v494;
  unint64_t v495;
  _DWORD *v496;
  _DWORD *v497;
  int v498;
  uint64_t v499;
  unint64_t v500;
  uint64_t v501;
  _DWORD *v502;
  uint64_t v503;
  _DWORD *v504;
  uint64_t v505;
  _DWORD *v506;
  uint64_t v507;
  unint64_t v508;
  int v509;
  unint64_t v510;
  int *v511;
  unint64_t v512;
  int v513;
  unint64_t v514;
  int v515;
  int v516;
  int v517;
  int v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  unint64_t v522;
  uint64_t v523;
  unint64_t v524;
  uint64_t v525;
  unint64_t v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  _DWORD *v530;
  uint64_t v531;
  _DWORD *v532;
  uint64_t v533;
  _DWORD *v534;
  _DWORD *v535;
  _DWORD *v536;
  _DWORD *v537;
  _DWORD *v538;
  _DWORD *v539;
  uint64_t v540;
  _DWORD *v541;
  uint64_t v542;
  _DWORD *v543;
  uint64_t v544;
  _DWORD *v545;
  uint64_t v546;
  _DWORD *v547;
  int v548;
  unint64_t v549;
  _DWORD *v550;
  _DWORD *v551;
  uint64_t v552;
  _DWORD *v553;
  uint64_t v554;
  _DWORD *v555;
  _DWORD *v556;
  unint64_t v557;
  _DWORD *v558;
  _DWORD *v559;
  _DWORD *v560;
  _DWORD *v561;
  unint64_t v562;
  _DWORD *v563;
  _DWORD *v564;
  _DWORD *v565;
  unint64_t v566;
  uint64_t v567;
  int v568;
  _DWORD *v569;
  _DWORD *v570;
  _DWORD *v571;
  _DWORD *v572;
  uint64_t v573;
  unint64_t v574;
  uint64_t v575;
  unint64_t v576;
  unint64_t v577;
  _DWORD *v578;
  uint64_t v579;
  unint64_t v580;
  uint64_t v581;
  _DWORD *v582;
  uint64_t v583;
  unint64_t v584;
  uint64_t v585;
  unint64_t v586;
  unint64_t v587;
  _DWORD *v588;
  uint64_t v589;
  _DWORD *v590;
  uint64_t v591;
  _DWORD *v592;
  unint64_t v593;
  _DWORD *v594;
  _DWORD *v595;
  _DWORD *v596;
  int v597;
  unsigned int v598;
  int v599;
  _DWORD *v600;
  _DWORD *v601;
  int v602;
  int v603;
  _DWORD *v604;
  int *v605;
  _DWORD *v606;
  uint64_t v607;
  _DWORD *v608;
  int v609;
  int v610;
  _DWORD *v611;
  int *v612;
  int v613;
  int v614;
  uint64_t v615;
  _DWORD *v616;
  uint64_t v617;
  int *v618;
  int v619;
  uint64_t v620;
  int v621;
  unint64_t v622;
  int v623;
  _DWORD *v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  unsigned int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  uint64_t v640;
  unint64_t v641;
  unsigned int v642;
  uint64_t v643;
  unint64_t v644;
  uint64_t v645;
  unint64_t v646;
  uint64_t v647;
  _DWORD *v648;
  uint64_t v649;
  _DWORD *v650;
  uint64_t v651;
  _DWORD *v652;
  unint64_t v653;
  int *v654;
  int v655;
  int *v656;
  int v657;
  uint64_t v658;
  unint64_t v659;
  uint64_t v660;
  _DWORD *v661;
  uint64_t v662;
  int *v663;
  uint64_t v664;
  int *v665;
  uint64_t v666;
  int *v667;
  uint64_t v668;
  int *v669;
  uint64_t v670;
  unint64_t v671;
  int v672;
  unsigned int v673;
  int v674;
  unint64_t v675;
  int *v676;
  int v677;
  uint64_t v678;
  _DWORD *v679;
  int v680;
  uint64_t v681;
  int *v682;
  int *v683;
  uint64_t v684;
  int *v685;
  uint64_t v686;
  int *v687;
  int v688;
  int v689;
  int *v690;
  int v691;
  int *v692;
  int v693;
  int *v694;
  int v695;
  int *v696;
  int v697;
  uint64_t v698;
  int *v699;
  uint64_t v700;
  int *v701;
  uint64_t v702;
  int *v703;
  uint64_t v704;
  int *v705;
  uint64_t v706;
  int *v707;
  uint64_t v708;
  int *v709;
  uint64_t v710;
  int *v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  unint64_t v718;
  uint64_t v719;
  uint64_t v720;
  int *v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  int v725;
  int *v726;
  unsigned int v727;
  unsigned int v728;
  int *v729;
  int v730;
  int *v731;
  uint64_t v732;
  unint64_t v733;
  uint64_t v734;
  _DWORD *v735;
  uint64_t v736;
  unint64_t v737;
  _DWORD *v738;
  uint64_t v739;
  unint64_t v740;
  uint64_t v741;
  _DWORD *v742;
  uint64_t v743;
  _DWORD *v744;
  uint64_t v745;
  _DWORD *v746;
  uint64_t v747;
  _DWORD *v748;
  int v749;
  uint64_t v750;
  _DWORD *v751;
  uint64_t v752;
  _DWORD *v753;
  unint64_t v754;
  int *v755;
  int v756;
  int *v757;
  int v758;
  int *v759;
  int v760;
  int *v761;
  int v762;
  unsigned int v763;
  unsigned int v764;
  unsigned int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  _DWORD *v773;
  int v774;
  _DWORD *v775;
  int v776;
  _DWORD *v777;
  int v778;
  unint64_t v779;
  int *v780;
  uint64_t v781;
  _DWORD *v782;
  int v783;
  unint64_t v784;
  uint64_t v785;
  int v786;
  int v787;
  int v788;
  int v789;
  int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  unsigned int v799;
  int v800;
  int v801;
  int v802;
  unsigned int v803;
  int v804;
  int v805;
  int v806;
  unsigned int v807;
  unsigned int v808;
  int v809;
  int v810;
  unsigned int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  int v815;
  int v816;
  int v817;
  unsigned int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  unsigned int v824;
  int v825;
  char *v826;
  unint64_t v827;
  unsigned int v828;
  char *v829;
  unsigned int v830;
  char *v831;
  unsigned int v832;
  int v833;
  char *v834;
  int v835;
  unint64_t v836;
  unint64_t v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  int v844;
  int v845;
  int v846;

  LODWORD(STACK[0x6698]) = v3;
  LODWORD(STACK[0x6650]) = a2 & 0xFFFFFFF6;
  LODWORD(STACK[0x6190]) = v3 ^ 0x5039;
  LODWORD(STACK[0x6520]) = v3 - 1;
  v14 = (((v3 - 1) ^ 0xB706D375)
       - (a2 & 0xFFFFFFF6 ^ 0xD67EBBA4)
       + (((v3 ^ 0x5039) - 1846402557) & (2 * (a2 & 0xFFFFFFF6 ^ 0xD67EBBA4)))) ^ 0xD704D236;
  v15 = *(unsigned __int8 *)(v2 + ((v14 - ((2 * v14) & 0x5705E7C0) - 1417481247) ^ 0xD7EC094CLL)) ^ 0x52;
  LODWORD(STACK[0x6648]) = a2 & 0xFFFFFFF3;
  v16 = (1047896462 - (a2 & 0xFFFFFFF3 ^ 0xFF6465A3 | 0x3E75A18E) + (a2 & 0xFFFFFFF3 ^ 0xFF6465A3 | 0xC18A5E71)) ^ 0x81039C75;
  v17 = STACK[0xDAE0];
  STACK[0x6608] = STACK[0xDAE0];
  v18 = STACK[0x64D8];
  v19 = (*(_BYTE *)(v18 + v15) + 109) ^ 0x19 ^ (-102 * (*(_BYTE *)(v18 + v15) + 109));
  v20 = STACK[0x64F0];
  v21 = *(unsigned __int8 *)(STACK[0x64F0]
                           + (*(unsigned __int8 *)(v17 + ((v16 - ((2 * v16) & 0xE7B1E0E8) - 203886476) ^ 0x86270EDFLL)) ^ 0xA8));
  v22 = v21 ^ (v21 >> 4) & 0xA;
  LODWORD(STACK[0x65E8]) = a2 & 0xFFFFFFFB;
  v23 = *(unsigned __int8 *)(v17 + (a2 & 0xFFFFFFFB ^ 0xCA12590C)) ^ 0x68;
  LODWORD(STACK[0x6640]) = a2 & 0xFFFFFFFD;
  v24 = (((2 * (a2 & 0xFFFFFFFD ^ 0xC10FB3D4)) | 0x767B6FAE) - (a2 & 0xFFFFFFFD ^ 0xC10FB3D4) - 993900503) ^ 0xCF9FA3F7;
  v25 = a2 & 0xFFFFFFF1 ^ 0xCA12590E;
  STACK[0x6628] = v25;
  v26 = STACK[0x64E8];
  LODWORD(v15) = (*(unsigned __int8 *)(v26 + v23) + 47) ^ ((*(_BYTE *)(v26 + v23) + 47) >> 4) ^ ((*(_BYTE *)(v26 + v23) + 47) >> 3) ^ 0x4F;
  LOBYTE(v24) = *(_BYTE *)(STACK[0x64E8]
                         + (*(unsigned __int8 *)(v17 + ((((2 * v24) | 0xA44934E0) - v24 + 769353104) ^ 0x2D9B648ELL)) ^ 0xE8))
              + 47;
  v27 = v24 ^ (v24 >> 4) ^ (v24 >> 3);
  v28 = *(unsigned __int8 *)(v17 + v25) ^ 0x66;
  v29 = ((2 * (a2 & 0xFFFFFFF9 ^ 0x90D92F28)) | 0xF20BA8F8) - (a2 & 0xFFFFFFF9 ^ 0x90D92F28) + 117058436;
  v30 = ((v29 & 0xD8092054 ^ 0x82015) + (v29 & 0x27F6DFAB) - 1) ^ 0xA3C6824ELL;
  STACK[0x65F0] = v30;
  LODWORD(v28) = ((v22 ^ 0x30) << 24) | ((((*(_BYTE *)(v26 + v28) + 47) ^ ((*(_BYTE *)(v26 + v28) + 47) >> 4) ^ ((*(_BYTE *)(v26 + v28) + 47) >> 3)) ^ 0x44) << 8);
  v31 = ((_DWORD)v15 << 24) | ((((*(_BYTE *)(v26 + (*(unsigned __int8 *)(v17 + v30) ^ 0xEDLL)) + 47) ^ ((*(_BYTE *)(v26 + (*(unsigned __int8 *)(v17 + v30) ^ 0xEDLL)) + 47) >> 4) ^ ((*(_BYTE *)(v26 + (*(unsigned __int8 *)(v17 + v30) ^ 0xEDLL)) + 47) >> 3)) ^ 0x35) << 8);
  LODWORD(STACK[0x6630]) = a2 & 0xFFFFFFF8;
  LODWORD(v25) = ((a2 & 0xE9C7BD00 ^ 0x61051001) + (a2 & 0x163842F4 ^ 0x10000005) - 2) ^ 0x65C7BF80;
  v32 = *(unsigned __int8 *)(v17
                           + ((((2 * (a2 & 0xFFFFFFF8 ^ 0x312FC67C)) & 0x8EA99738)
                             - (a2 & 0xFFFFFFF8 ^ 0x312FC67C)
                             + 950744161) ^ 0xC396AB12));
  v33 = a2 ^ 0xCA125908;
  STACK[0x6618] = v33;
  v34 = v32 ^ 0xB0;
  LODWORD(v32) = *(unsigned __int8 *)(v20 + (*(unsigned __int8 *)(v17 + v33) ^ 0xEBLL));
  LODWORD(v32) = ((v27 ^ 0x60) << 8) | ((v32 ^ 0x17 ^ (v32 >> 4) & 0xA) << 24);
  v35 = *(unsigned __int8 *)(v17
                           + ((-2092902952 - (v25 | 0x8340D5D8) + (v25 | 0x7CBF2A27)) ^ 0xA26FDCA8)) ^ 0x46;
  LODWORD(STACK[0x6620]) = a2 & 0xFFFFFFF5;
  LODWORD(v25) = (1781024531 - (a2 & 0xFFFFFFF5 ^ 0xC2425BC5) + ((2 * (a2 & 0xFFFFFFF5 ^ 0xC2425BC5)) | 0x2BAF71DA)) ^ 0x42556CF5;
  v36 = STACK[0x64E0];
  v37 = *(_BYTE *)(v36 + v35) ^ (*(_BYTE *)(v36 + v35) >> 2) & 0x1E ^ 0x10 | (v19 << 16);
  LOBYTE(v35) = *(_BYTE *)(v20 + v34) ^ 0x72 ^ (*(_BYTE *)(v20 + v34) >> 4) & 0xA;
  v39 = *(unsigned __int8 *)(v17 + ((-1189650212 - (_DWORD)v25 + ((2 * (_DWORD)v25) & 0x8DD13E46)) ^ 0x66C5B60BLL)) ^ 0x75;
  LODWORD(v32) = v32 & 0xFF00FFFF | ((((*(_BYTE *)(v26
                                                                  + (*(unsigned __int8 *)(v17
                                                                                        + (((a2 & 0xFFFFFFFE ^ 0x3A3C13BE)
                                                                                          + (a2 & 0xF415182E ^ 0xC4010801)
                                                                                          - ((a2 & 0xFFFFFFFE ^ 0x3A3C13BE) & 0xF415182E)) & 0xFFFFFFFE ^ 0x43B5299)) ^ 0x1DLL))
                                                       + 47) ^ ((*(_BYTE *)(v26
                                                                                           + (*(unsigned __int8 *)(v17 + (((a2 & 0xFFFFFFFE ^ 0x3A3C13BE) + (a2 & 0xF415182E ^ 0xC4010801) - ((a2 & 0xFFFFFFFE ^ 0x3A3C13BE) & 0xF415182E)) & 0xFFFFFFFE ^ 0x43B5299)) ^ 0x1DLL))
                                                                                + 47) >> 4) ^ ((*(_BYTE *)(v26 + (*(unsigned __int8 *)(v17 + (((a2 & 0xFFFFFFFE ^ 0x3A3C13BE) + (a2 & 0xF415182E ^ 0xC4010801) - ((a2 & 0xFFFFFFFE ^ 0x3A3C13BE) & 0xF415182E)) & 0xFFFFFFFE ^ 0x43B5299)) ^ 0x1DLL)) + 47) >> 3)) ^ 0xA2) << 16);
  v40 = ((a2 & 0x6E6E2870 ^ 0x244C2049) + (a2 & 0x9191D787) - 1) ^ 0x7DA0AE7B;
  v41 = (v40 + 677920432 - ((2 * v40) & 0x50D07D60)) ^ 0xBB96E98BLL;
  STACK[0x6610] = v41;
  v42 = ((a2 & 0xFFFFFFF0 ^ 0xF67237D0) + 1000516576 - ((2 * (a2 & 0xFFFFFFF0 ^ 0xF67237D0)) & 0x774566C0) + 1926) ^ 0xFB293262;
  v43 = v37 & 0xFFFF00FF | ((((*(_BYTE *)(v18 + v39) + 109) ^ (-102 * (*(_BYTE *)(v18 + v39) + 109))) ^ 0xFE) << 8);
  LODWORD(v39) = *(unsigned __int8 *)(v36 + (*(unsigned __int8 *)(v17 + v41) ^ 0x62));
  v44 = (584654488 - (v42 | 0x22D91E98) + (v42 | 0xDD26E167)) ^ 0x21CD0EBC;
  STACK[0x6638] = v44;
  v45 = *(unsigned __int8 *)(v17 + v44) ^ 0x37;
  v46 = v43 | ((v39 ^ 0xE5 ^ (v39 >> 2) & 0x1E) << 24);
  v47 = v46 - 1439314696 - ((2 * v46) & 0x546B99F0);
  LODWORD(STACK[0x65D8]) = a2 & 0xFFFFFFF2;
  LODWORD(STACK[0x6600]) = a2;
  v48 = *(unsigned __int8 *)(v17
                           + (((a2 & 0xFFFFFFF2 ^ 0x67D7EC20)
                             + (a2 & 0x25EE91D0 ^ 0x2811D9)
                             - ((a2 & 0xFFFFFFF2 ^ 0x67D7EC20) & 0x25EE91D0)) ^ 0x882B24F4)) ^ 0xE8;
  LODWORD(v28) = v28 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v36 + v45) ^ 0xFFFFFFBC) >> 2) & 0x1E ^ *(_BYTE *)(v36 + v45) ^ 0xBC;
  LODWORD(STACK[0x65E0]) = a2 & 0xFFFFFFFA;
  LODWORD(v45) = (-1213583768 - (a2 & 0xFFFFFFFA ^ 0x8F3413C0 | 0xB7AA2E68) + (a2 & 0xFFFFFFFA ^ 0x8F3413C0 | 0x4855D197)) ^ 0xE88D74B5;
  LODWORD(v28) = (v28 & 0xFF00FFFF | (((*(_BYTE *)(v18 + v48) + 109) ^ 0xC6 ^ (-102 * (*(_BYTE *)(v18 + v48) + 109))) << 16)) ^ 0x39;
  v49 = (((a2 & 0xFFFFFFFC ^ 0x3D892EA6) & 0xA9AB7746) - (a2 & 0xFFFFFFFC ^ 0x3D892EA6 | 0xA9AB7747)) ^ 0xA1CFFF14;
  STACK[0x65F8] = v49;
  LOBYTE(v48) = *(_BYTE *)(v26
                         + (*(unsigned __int8 *)(v17
                                               + ((((2 * (_DWORD)v45) & 0xDE9B13FC) - (_DWORD)v45 + 280131073) ^ 0xF54C99EE)) ^ 6))
              + 47;
  v50 = v31 & 0xFF00FF00 | (((v48 ^ (v48 >> 4) ^ (v48 >> 3)) ^ 0xF2) << 16) | v35;
  v51 = v50 - 618037118 - 2 * (v50 & 0x5B298083 ^ v35 & 1);
  LODWORD(v32) = (v32 & 0xFFFFFF00 | ((-102
                                                      * (*(_BYTE *)(v18 + (*(unsigned __int8 *)(v17 + v49) ^ 0x2BLL))
                                                       + 109)) ^ (*(_BYTE *)(v18
                                                                           + (*(unsigned __int8 *)(v17 + v49) ^ 0x2BLL))
                                                                + 109))) ^ 0xCE;
  LODWORD(v17) = LODWORD(STACK[0x62E8]) ^ 0x9110B400 ^ (v51 ^ 0x42BB75C2) & v7;
  v52 = (((2 * (((2 * v17) | 0x793AB010) - v17) + 113594352) ^ 0xEA1BD810)
       - 618037118
       - 2
       * (((2 * (((2 * v17) | 0x793AB010) - v17) + 113594352) ^ 0xEA1BD810) & 0x5B29808A ^ (2
                                                                                          * (((2 * v17) | 0x793AB010)
                                                                                           - v17)) & 8)) ^ v51;
  v53 = STACK[0x66F0];
  LOBYTE(v48) = STACK[0x6AC0];
  LODWORD(v17) = v47 & 0x4BE9099E ^ 0xA21090E ^ (v47 ^ 0xAA35CCF8) & STACK[0x62C8];
  LODWORD(v17) = (2 * (v17 - ((2 * v17) & 0x7DA7BC68)) + 2108144744) ^ 0x7DA7BF44;
  LODWORD(v17) = (v17 - 1439314696 - ((2 * v17) & 0x546B99F0)) ^ v47;
  LODWORD(v17) = ((((v17 & v53 ^ 0x820D010)
                  - ((2 * (v17 & v53 ^ 0x820D010)) & 0xAE117F80)
                  - 687292480) ^ 0xDF286FD0) << LODWORD(STACK[0x64A8]) << LODWORD(STACK[0x64A0]))
               + ((v17 & STACK[0x6A90]) >> v4);
  LODWORD(v35) = LODWORD(STACK[0x6658]) ^ LODWORD(STACK[0x6410]) ^ ((((((v32 ^ (2
                                                                                            * (v32 & v13))) & STACK[0x68C0] ^ 0x50430043)
                                                                     - ((2
                                                                       * ((v32 ^ (2
                                                                                              * (v32 & v13))) & STACK[0x68C0] ^ 0x50430043)) & 0x27E7DD86)
                                                                     + 334753475) ^ 0x43B0EE80) << LODWORD(STACK[0x64F8]) << LODWORD(STACK[0x64C8]))
                                                                  + (((v32 ^ (2 * (v32 & v13))) & STACK[0x6A90]) >> v4));
  v54 = v10 ^ LODWORD(STACK[0x6408]) ^ (((((v52 & v53 & 0x8502B74F ^ 0x100B74F)
                                         + (v52 & v53 & 0x7AFD48B0 ^ 0x28C40001)
                                         - 1) ^ 0x29C4B74F) << v48)
                                      + (((((2 * (v52 & v6 ^ 0x88500A0)) | 0xADF39CE4)
                                         - (v52 & v6 ^ 0x88500A0)
                                         + 688271758) ^ 0xDE7CCED2) >> v11));
  v55 = v9 ^ LODWORD(STACK[0x6400]) ^ v17;
  LODWORD(v23) = LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x6660]) ^ ((((((2
                                                                       * ((v28 ^ (2
                                                                                              * (v28 & v13))) & v6 ^ 0xC10810E0)) | 0x89EAC1A)
                                                                     - ((v28 ^ (2
                                                                                            * (v28 & v13))) & v6 ^ 0xC10810E0)
                                                                     - 72308237) ^ 0xC54746ED) >> v11) | (((v28 ^ (2 * (v28 & v13))) & STACK[0x68C0]) << v48));
  v56 = STACK[0x6920];
  LODWORD(v32) = STACK[0x66F8];
  LODWORD(v17) = v23 + LODWORD(STACK[0x66F8]) - LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x65D0]) = v23;
  v57 = -289800192 * v17;
  LODWORD(v17) = 1984427869 * v17;
  v58 = __ROR4__((v57 & 0xFFFE0000 | (v17 >> 15)) ^ __ROR4__(v17 ^ LODWORD(STACK[0x67C0]), 15) ^ 0xFEE492D7, 17) ^ 0x496BFF72;
  v59 = 1899885415 * (WORD1(v17) + v17 - ((WORD1(v17) + v17) >> 8) - v55);
  v60 = ((LODWORD(STACK[0x66A8]) - v59) ^ v59) + 2 * ((LODWORD(STACK[0x66A8]) - v59) & v59);
  v61 = STACK[0x6850];
  v62 = 1984427869 * (LODWORD(STACK[0x6AA0]) - LODWORD(STACK[0x6850]) + v23);
  LODWORD(STACK[0x6658]) = v55;
  v63 = 1899885415 * (v62 + HIWORD(v62) - ((v62 + HIWORD(v62)) >> 8) - v55);
  v64 = v63 - HIWORD(v63);
  v65 = v64 + v35 + (v64 >> 8);
  v66 = (v64 >> 8) + v64;
  v67 = (-1695978527 * (v66 + v35)) ^ ((-1695978527 * (v66 + v35)) >> 16);
  v68 = v67 ^ (v67 >> 8);
  LODWORD(v69) = __ROR4__(v68 ^ 0x47DFA8F9, 9) ^ 0x7CA3EFD4;
  HIDWORD(v69) = v69;
  v70 = (v69 >> 23) + LODWORD(STACK[0x6708]) - v68;
  LODWORD(v45) = 92711749 * (v68 - v54) - ((92711749 * (v68 - v54)) >> 16);
  v71 = STACK[0xDAE8];
  v72 = v45 + STACK[0xDAE8] + (v45 >> 8);
  LODWORD(STACK[0x67C0]) = v72;
  LODWORD(v17) = 1899885415
               * ((WORD1(v17) ^ v17)
                + 2 * (WORD1(v17) & v17)
                - (((WORD1(v17) ^ v17) + 2 * (WORD1(v17) & v17)) >> 8)
                - v55);
  LODWORD(v17) = v17 - WORD1(v17) + ((v17 - WORD1(v17)) >> 8);
  LODWORD(v35) = (v17 ^ v35) - v17 + 2 * (v17 & v35);
  LODWORD(STACK[0x65C0]) = v35;
  v73 = LODWORD(STACK[0x6668]) >= 0xC3D9993A;
  LODWORD(v17) = (-1695978527 * (v35 + v66)) ^ ((-1695978527 * (v35 + v66)) >> 16);
  LODWORD(STACK[0x65C8]) = v54;
  v74 = (v17 ^ (v17 >> 8)) - v54;
  v75 = v32 - v74;
  v76 = !v73;
  LODWORD(STACK[0x6660]) = v76;
  if ((v74 & 0x200) != 0)
    v77 = -512;
  else
    v77 = 512;
  v78 = v77 + v74;
  LODWORD(STACK[0x6708]) = (((v78 ^ 0x200) & 0x51B68E2D | v78 ^ 0x51B68C2D) & (v78 ^ 0x200)) + v75;
  v79 = 92711749 * (v78 ^ 0x200) - ((92711749 * (v78 ^ 0x200u)) >> 16);
  v80 = (v79 >> 8) + v79;
  v81 = ((v60 >> 3) | (unint64_t)(v60 << 61)) ^ __ROR8__(v80, 3);
  v82 = 92711749
      * (((-1695978527 * v65) ^ ((-1695978527 * v65) >> 16) ^ (((-1695978527 * v65) ^ ((-1695978527 * v65) >> 16)) >> 8))
       - v54);
  STACK[0x66A8] = v71;
  LODWORD(STACK[0x6A70]) = v71 + v5 + v82 - HIWORD(v82) + ((v82 - HIWORD(v82)) >> 8);
  v83 = ((v81 >> 61) | (8 * v81)) ^ v80;
  LODWORD(STACK[0x66E8]) = v71 + v8 + v80;
  v84 = (v72 & 1) == 0;
  v85 = STACK[0x6750];
  v86 = STACK[0x6740];
  if ((v72 & 1) != 0)
    v87 = STACK[0x6740];
  else
    v87 = STACK[0x6750];
  LODWORD(STACK[0x6578]) = v87;
  if ((v72 & 1) == 0)
    v85 = v70;
  LODWORD(STACK[0x6588]) = v85;
  v88 = STACK[0x66C8];
  if ((v72 & 1) != 0)
    v86 = STACK[0x66C8];
  LODWORD(STACK[0x6570]) = v86;
  if ((v72 & 1) == 0)
    v70 = v88;
  v89 = STACK[0x66C0];
  v90 = STACK[0x6A60];
  if ((v72 & 1) != 0)
    v91 = STACK[0x66C0];
  else
    v91 = STACK[0x6A60];
  LODWORD(STACK[0x6568]) = v91;
  v92 = STACK[0x66B8];
  if ((v72 & 1) == 0)
    v90 = STACK[0x66B8];
  LODWORD(STACK[0x6580]) = v90;
  if ((v72 & 1) != 0)
    v93 = v92;
  else
    v93 = LODWORD(STACK[0x6A80]);
  if ((v72 & 1) != 0)
    v94 = STACK[0x6A80];
  else
    v94 = v89;
  *(_QWORD *)(v12 - 152) = v93;
  v95 = STACK[0x66B0];
  v96 = STACK[0x6A30];
  if ((v72 & 1) != 0)
    v97 = STACK[0x66B0];
  else
    v97 = STACK[0x6A30];
  LODWORD(STACK[0x66C8]) = v97;
  v98 = STACK[0x6A40];
  if ((v72 & 1) != 0)
    v99 = v96;
  else
    v99 = STACK[0x6A40];
  v100 = STACK[0x6A50];
  if ((v72 & 1) == 0)
    v98 = STACK[0x6A50];
  LODWORD(STACK[0x6560]) = v98;
  if ((v72 & 1) != 0)
    v101 = v100;
  else
    v101 = v95;
  v102 = STACK[0x6A10];
  v103 = STACK[0x6A00];
  if ((v72 & 1) != 0)
    v104 = STACK[0x6A00];
  else
    v104 = STACK[0x6A10];
  LODWORD(STACK[0x66C0]) = v104;
  if ((v72 & 1) != 0)
    v103 = v83;
  LODWORD(STACK[0x6540]) = v103;
  v105 = STACK[0x6A20];
  if ((v72 & 1) != 0)
    v106 = v102;
  else
    v106 = STACK[0x6A20];
  if ((v72 & 1) == 0)
    v105 = v83;
  LODWORD(STACK[0x6A10]) = v105;
  v107 = STACK[0x69F0];
  v108 = STACK[0x69E0];
  if ((v72 & 1) != 0)
    v109 = STACK[0x69E0];
  else
    v109 = STACK[0x69F0];
  LODWORD(STACK[0x66B8]) = v109;
  v110 = STACK[0x66A0];
  if ((v72 & 1) != 0)
    v111 = v107;
  else
    v111 = STACK[0x66A0];
  v112 = STACK[0x69D0];
  if ((v72 & 1) == 0)
    v110 = STACK[0x69D0];
  LODWORD(STACK[0x69F0]) = v110;
  if ((v72 & 1) != 0)
    v113 = v112;
  else
    v113 = v108;
  v114 = STACK[0x69A0];
  v115 = STACK[0x6990];
  if ((v72 & 1) != 0)
    v116 = STACK[0x6990];
  else
    v116 = STACK[0x69A0];
  LODWORD(STACK[0x66B0]) = v116;
  v117 = STACK[0x69C0];
  if ((v72 & 1) != 0)
    v118 = STACK[0x69C0];
  else
    v118 = v115;
  v119 = STACK[0x69B0];
  if ((v72 & 1) != 0)
    v117 = STACK[0x69B0];
  LODWORD(STACK[0x69C0]) = v117;
  if ((v72 & 1) != 0)
    v120 = v114;
  else
    v120 = v119;
  v121 = STACK[0x6960];
  v122 = STACK[0x6950];
  if ((v72 & 1) != 0)
    v123 = STACK[0x6950];
  else
    v123 = STACK[0x6960];
  LODWORD(STACK[0x66A0]) = v123;
  v124 = STACK[0x6980];
  if ((v72 & 1) != 0)
    v125 = STACK[0x6980];
  else
    v125 = v122;
  LODWORD(STACK[0x6950]) = v125;
  v126 = STACK[0x6970];
  if ((v72 & 1) != 0)
    v124 = STACK[0x6970];
  LODWORD(STACK[0x6980]) = v124;
  if ((v72 & 1) != 0)
    v127 = v121;
  else
    v127 = v126;
  v128 = STACK[0x68B0];
  v129 = STACK[0x6880];
  if (v84)
    v130 = STACK[0x6880];
  else
    v130 = STACK[0x68B0];
  LODWORD(STACK[0x65B8]) = v130;
  v131 = STACK[0x68A0];
  if (!v84)
    v128 = STACK[0x68A0];
  LODWORD(STACK[0x68B0]) = v128;
  v132 = STACK[0x6890];
  if (v84)
    v133 = v131;
  else
    v133 = STACK[0x6890];
  LODWORD(STACK[0x68A0]) = v133;
  if (v84)
    v134 = v132;
  else
    v134 = v129;
  v135 = STACK[0x6940];
  v136 = STACK[0x6930];
  if (v84)
    v137 = STACK[0x6940];
  else
    v137 = STACK[0x6930];
  LODWORD(STACK[0x6558]) = v137;
  if (v84)
    v138 = v136;
  else
    v138 = v56;
  LODWORD(STACK[0x6930]) = v138;
  if (v84)
    v139 = v56;
  else
    v139 = STACK[0x6910];
  if (v84)
    v140 = STACK[0x6910];
  else
    v140 = v135;
  v141 = STACK[0x6870];
  v142 = STACK[0x6860];
  if (v84)
    v143 = STACK[0x6870];
  else
    v143 = STACK[0x6860];
  LODWORD(STACK[0x65B0]) = v143;
  if (v84)
    v144 = v142;
  else
    v144 = v61;
  if (v84)
    v145 = STACK[0x6840];
  else
    v145 = v141;
  if (v84)
    v146 = v61;
  else
    v146 = STACK[0x6840];
  LODWORD(STACK[0x6870]) = v146;
  v147 = STACK[0x6900];
  if (v84)
    v148 = v58;
  else
    v148 = STACK[0x6900];
  LODWORD(STACK[0x65A8]) = v148;
  v149 = STACK[0x68E0];
  if (!v84)
    v147 = STACK[0x68E0];
  LODWORD(STACK[0x6538]) = v147;
  v150 = STACK[0x68D0];
  if (v84)
    v151 = v149;
  else
    v151 = STACK[0x68D0];
  LODWORD(STACK[0x6550]) = v151;
  if (v84)
    v152 = v150;
  else
    v152 = v58;
  v153 = STACK[0x68F0];
  v154 = STACK[0x6810];
  if (v84)
    v155 = STACK[0x6810];
  else
    v155 = STACK[0x68F0];
  LODWORD(STACK[0x65A0]) = v155;
  v156 = STACK[0x6830];
  if (!v84)
    v153 = STACK[0x6830];
  LODWORD(STACK[0x68F0]) = v153;
  v157 = STACK[0x6820];
  if (v84)
    v158 = v156;
  else
    v158 = STACK[0x6820];
  LODWORD(STACK[0x6548]) = v158;
  if (v84)
    v159 = v157;
  else
    v159 = v154;
  v160 = STACK[0x6800];
  v161 = STACK[0x6790];
  if (v84)
    v162 = STACK[0x6790];
  else
    v162 = STACK[0x6800];
  LODWORD(STACK[0x66F8]) = v162;
  if (v84)
    v163 = v160;
  else
    v163 = STACK[0x67E0];
  v164 = STACK[0x67B0];
  if (v84)
    v165 = STACK[0x67E0];
  else
    v165 = STACK[0x67B0];
  LODWORD(STACK[0x67E0]) = v165;
  if (v84)
    v166 = v164;
  else
    v166 = v161;
  v167 = STACK[0x67D0];
  if (v84)
    v168 = STACK[0x67F0];
  else
    v168 = STACK[0x67D0];
  if (v84)
    v169 = STACK[0x6780];
  else
    v169 = STACK[0x67F0];
  if (v84)
    v170 = STACK[0x67A0];
  else
    v170 = STACK[0x6780];
  if (!v84)
    v167 = STACK[0x67A0];
  v171 = STACK[0x6770];
  v172 = STACK[0x6708];
  if (v84)
    v173 = STACK[0x6770];
  else
    v173 = STACK[0x6708];
  LODWORD(STACK[0x6598]) = v173;
  v174 = STACK[0x6730];
  if (!v84)
    v172 = STACK[0x6730];
  LODWORD(STACK[0x6530]) = v172;
  if (v84)
    v171 = STACK[0x6760];
  else
    v174 = STACK[0x6760];
  LODWORD(STACK[0x6730]) = v174;
  v175 = STACK[0x6710];
  v176 = STACK[0x6700];
  if (v84)
    v177 = STACK[0x6710];
  else
    v177 = STACK[0x6700];
  LODWORD(STACK[0x6590]) = v177;
  v178 = STACK[0x6AA0];
  if (v84)
    v175 = STACK[0x6AA0];
  LODWORD(STACK[0x6710]) = v175;
  v179 = STACK[0x6720];
  if (!v84)
  {
    v176 = STACK[0x6720];
    v179 = v178;
  }
  LODWORD(STACK[0x6528]) = v179;
  v180 = (STACK[0x67C0] & 2) == 0;
  LODWORD(STACK[0x6AB0]) += LODWORD(STACK[0x67C0]);
  v181 = STACK[0x6578];
  if (v180)
    v182 = STACK[0x6578];
  else
    v182 = v70;
  LODWORD(STACK[0x6750]) = v182;
  if (!v180)
    v70 = v181;
  v183 = STACK[0x6588];
  v184 = STACK[0x6570];
  if (v180)
    v185 = STACK[0x6570];
  else
    v185 = STACK[0x6588];
  LODWORD(STACK[0x6740]) = v185;
  v186 = *(_QWORD *)(v12 - 152);
  if (v180)
    v187 = v183;
  else
    v187 = v184;
  LODWORD(STACK[0x6708]) = v187;
  v188 = STACK[0x6568];
  if (v180)
    v189 = v186;
  else
    v189 = STACK[0x6568];
  LODWORD(STACK[0x6A80]) = v189;
  if (v180)
    v190 = v188;
  else
    v190 = v186;
  LODWORD(STACK[0x6A60]) = v190;
  if (v180)
    v191 = v94;
  else
    v191 = STACK[0x6580];
  if (v180)
  {
    v94 = STACK[0x6580];
    v192 = v99;
  }
  else
  {
    v192 = v101;
  }
  LODWORD(STACK[0x6A40]) = v192;
  if (v180)
    v99 = v101;
  v193 = STACK[0x66C8];
  v194 = STACK[0x6560];
  if (v180)
    v195 = STACK[0x66C8];
  else
    v195 = STACK[0x6560];
  LODWORD(STACK[0x6A30]) = v195;
  if (v180)
    v196 = v194;
  else
    v196 = v193;
  LODWORD(STACK[0x6A50]) = v196;
  v197 = STACK[0x6540];
  if (v180)
    v198 = STACK[0x6540];
  else
    v198 = v106;
  LODWORD(STACK[0x6A00]) = v198;
  if (v180)
    v199 = v106;
  else
    v199 = v197;
  LODWORD(STACK[0x6A20]) = v199;
  v200 = STACK[0x66C0];
  if (v180)
    v201 = STACK[0x6A10];
  else
    v201 = STACK[0x66C0];
  if (!v180)
    v200 = STACK[0x6A10];
  LODWORD(STACK[0x6A10]) = v200;
  if (v180)
    v202 = v113;
  else
    v202 = v111;
  LODWORD(STACK[0x69E0]) = v202;
  if (!v180)
    v111 = v113;
  v203 = STACK[0x66B8];
  v204 = STACK[0x69F0];
  if (v180)
    v205 = STACK[0x69F0];
  else
    v205 = STACK[0x66B8];
  LODWORD(STACK[0x69D0]) = v205;
  if (v180)
    v206 = v203;
  else
    v206 = v204;
  LODWORD(STACK[0x69F0]) = v206;
  if (v180)
    v207 = v120;
  else
    v207 = v118;
  LODWORD(STACK[0x69B0]) = v207;
  if (v180)
    v208 = v118;
  else
    v208 = v120;
  LODWORD(STACK[0x6990]) = v208;
  v209 = STACK[0x66B0];
  v210 = STACK[0x69C0];
  if (v180)
    v211 = STACK[0x66B0];
  else
    v211 = STACK[0x69C0];
  LODWORD(STACK[0x69A0]) = v211;
  if (v180)
    v212 = v210;
  else
    v212 = v209;
  LODWORD(STACK[0x69C0]) = v212;
  v213 = STACK[0x6950];
  if (v180)
    v214 = v127;
  else
    v214 = STACK[0x6950];
  LODWORD(STACK[0x6970]) = v214;
  if (v180)
    v215 = v213;
  else
    v215 = v127;
  LODWORD(STACK[0x6950]) = v215;
  v216 = STACK[0x66A0];
  v217 = STACK[0x6980];
  if (v180)
    v218 = STACK[0x66A0];
  else
    v218 = STACK[0x6980];
  LODWORD(STACK[0x6960]) = v218;
  if (v180)
    v219 = v217;
  else
    v219 = v216;
  LODWORD(STACK[0x6980]) = v219;
  v220 = STACK[0x68B0];
  if (v180)
    v221 = v134;
  else
    v221 = STACK[0x68B0];
  LODWORD(STACK[0x6890]) = v221;
  if (v180)
    v222 = v220;
  else
    v222 = v134;
  LODWORD(STACK[0x68B0]) = v222;
  v223 = STACK[0x65B8];
  v224 = STACK[0x68A0];
  if (v180)
    v225 = STACK[0x65B8];
  else
    v225 = STACK[0x68A0];
  LODWORD(STACK[0x6880]) = v225;
  if (v180)
    v226 = v224;
  else
    v226 = v223;
  LODWORD(STACK[0x68A0]) = v226;
  v227 = STACK[0x6558];
  if (v180)
    v228 = v139;
  else
    v228 = STACK[0x6558];
  LODWORD(STACK[0x6920]) = v228;
  if (v180)
    v229 = v227;
  else
    v229 = v139;
  LODWORD(STACK[0x6940]) = v229;
  v230 = STACK[0x6930];
  if (v180)
    v231 = v140;
  else
    v231 = STACK[0x6930];
  LODWORD(STACK[0x6910]) = v231;
  if (v180)
    v232 = v230;
  else
    v232 = v140;
  LODWORD(STACK[0x6930]) = v232;
  if (v180)
    v233 = v145;
  else
    v233 = v144;
  LODWORD(STACK[0x6840]) = v233;
  if (v180)
    v234 = v144;
  else
    v234 = v145;
  LODWORD(STACK[0x6860]) = v234;
  v235 = STACK[0x65B0];
  v236 = STACK[0x6870];
  if (v180)
    v237 = STACK[0x6870];
  else
    v237 = STACK[0x65B0];
  LODWORD(STACK[0x6850]) = v237;
  if (v180)
    v238 = v235;
  else
    v238 = v236;
  LODWORD(STACK[0x6870]) = v238;
  v239 = STACK[0x6538];
  if (v180)
    v240 = STACK[0x6538];
  else
    v240 = v152;
  LODWORD(STACK[0x6900]) = v240;
  if (v180)
    v241 = v152;
  else
    v241 = v239;
  LODWORD(STACK[0x68D0]) = v241;
  v242 = STACK[0x65A8];
  v243 = STACK[0x6550];
  if (v180)
    v244 = STACK[0x6550];
  else
    v244 = STACK[0x65A8];
  LODWORD(STACK[0x68E0]) = v244;
  if (v180)
    v245 = v242;
  else
    v245 = v243;
  LODWORD(STACK[0x67C0]) = v245;
  v246 = STACK[0x68F0];
  if (v180)
    v247 = v159;
  else
    v247 = STACK[0x68F0];
  LODWORD(STACK[0x6820]) = v247;
  if (v180)
    v248 = v246;
  else
    v248 = v159;
  LODWORD(STACK[0x68F0]) = v248;
  v249 = STACK[0x65A0];
  v250 = STACK[0x6548];
  if (v180)
    v251 = STACK[0x6548];
  else
    v251 = STACK[0x65A0];
  LODWORD(STACK[0x6830]) = v251;
  if (v180)
    v252 = v249;
  else
    v252 = v250;
  LODWORD(STACK[0x6810]) = v252;
  if (v180)
    v253 = v166;
  else
    v253 = v163;
  LODWORD(STACK[0x67B0]) = v253;
  if (v180)
    v254 = v163;
  else
    v254 = v166;
  LODWORD(STACK[0x6800]) = v254;
  if (v180)
    v255 = v168;
  else
    v255 = v170;
  LODWORD(STACK[0x67F0]) = v255;
  if (v180)
    v256 = v170;
  else
    v256 = v168;
  LODWORD(STACK[0x67A0]) = v256;
  if (v180)
    v257 = v169;
  else
    v257 = v167;
  LODWORD(STACK[0x6780]) = v257;
  if (v180)
    v258 = v167;
  else
    v258 = v169;
  LODWORD(STACK[0x67D0]) = v258;
  v259 = STACK[0x66F8];
  v260 = STACK[0x67E0];
  if (v180)
    v261 = STACK[0x66F8];
  else
    v261 = STACK[0x67E0];
  LODWORD(STACK[0x6790]) = v261;
  if (v180)
    v262 = v260;
  else
    v262 = v259;
  LODWORD(STACK[0x67E0]) = v262;
  v263 = STACK[0x6530];
  if (v180)
    v264 = STACK[0x6530];
  else
    v264 = v171;
  LODWORD(STACK[0x66F8]) = v264;
  if (v180)
    v265 = v171;
  else
    v265 = v263;
  LODWORD(STACK[0x6760]) = v265;
  v266 = STACK[0x6598];
  v267 = STACK[0x6730];
  if (v180)
    v268 = STACK[0x6598];
  else
    v268 = STACK[0x6730];
  LODWORD(STACK[0x6770]) = v268;
  if (v180)
    v269 = v267;
  else
    v269 = v266;
  LODWORD(STACK[0x6730]) = v269;
  v270 = STACK[0x6710];
  if (v180)
    v271 = STACK[0x6710];
  else
    v271 = v176;
  LODWORD(STACK[0x6AA0]) = v271;
  if (v180)
    v272 = v176;
  else
    v272 = v270;
  LODWORD(STACK[0x6700]) = v272;
  v273 = STACK[0x6590];
  v274 = STACK[0x6528];
  if (v180)
    v275 = STACK[0x6528];
  else
    v275 = STACK[0x6590];
  LODWORD(STACK[0x6720]) = v275;
  if (v180)
    v276 = v273;
  else
    v276 = v274;
  LODWORD(STACK[0x6710]) = v276;
  v277 = STACK[0x6A70];
  v278 = STACK[0x65C8];
  v279 = STACK[0x6658];
  if ((STACK[0x6A70] & 1) != 0)
    v280 = STACK[0x6658];
  else
    v280 = STACK[0x65C8];
  if ((v277 & 1) == 0)
    v278 = STACK[0x65C0];
  v281 = STACK[0x65D0];
  if ((v277 & 1) != 0)
  {
    v279 = STACK[0x65D0];
    v281 = STACK[0x65C0];
  }
  if ((v277 & 2) != 0)
    v282 = v279;
  else
    v282 = v278;
  if ((v277 & 2) != 0)
  {
    v283 = v281;
  }
  else
  {
    v278 = v279;
    v283 = v280;
  }
  if ((v277 & 2) == 0)
    v280 = v281;
  v284 = STACK[0x6678];
  v285 = LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6678]);
  v286 = STACK[0x6498];
  v287 = v285 ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6498]) ^ v278;
  v288 = v285 ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x6498]) ^ v283;
  v289 = v285 ^ LODWORD(STACK[0x63E8]) ^ v280;
  LODWORD(STACK[0x66C8]) = v70;
  v290 = (v286 ^ LODWORD(STACK[0x61C8]) ^ ((v289 ^ v70) - (v289 ^ v70 ^ v286))) + (v289 ^ v70);
  v291 = v285 ^ LODWORD(STACK[0x63E0]) ^ v286 ^ v282 ^ LODWORD(STACK[0x6708]);
  v292 = (int *)(STACK[0x66A8] + 4 * HIBYTE(v291));
  v293 = (int *)(STACK[0x66A8] + 4 * v291);
  v294 = v287 ^ LODWORD(STACK[0x6740]);
  v295 = (int *)(STACK[0x66A8] + 4 * HIBYTE(v294));
  v296 = v288 ^ LODWORD(STACK[0x6750]);
  v297 = 4 * HIBYTE(v296);
  v298 = (int *)(STACK[0x66A8] + v297);
  STACK[0xDAE8] = (unint64_t)v292;
  v299 = *v292;
  STACK[0xDAE8] = (unint64_t)v293;
  v300 = *v293;
  STACK[0xDAE8] = (unint64_t)v295;
  v301 = *v295;
  STACK[0xDAE8] = (unint64_t)v298;
  v302 = &v298[v297 / 0xFFFFFFFFFFFFFFFCLL];
  v303 = *v298;
  v304 = &v302[BYTE2(v294)];
  STACK[0xDAE8] = (unint64_t)v304;
  v305 = *v304;
  v306 = &v302[v294];
  STACK[0xDAE8] = (unint64_t)v306;
  LODWORD(v304) = *v306;
  v307 = 4 * BYTE2(v291);
  v308 = &v302[(unint64_t)v307 / 4];
  STACK[0xDAE8] = (unint64_t)v308;
  v309 = *v308 ^ __ROR4__((_DWORD)v304, 16);
  v310 = 4 * BYTE1(v296);
  v311 = &v308[(unint64_t)v310 / 4 + v307 / 0xFFFFFFFFFFFFFFFCLL];
  v312 = 4 * HIBYTE(v290);
  v313 = &v311[(unint64_t)v312 / 4 + v310 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v311;
  HIDWORD(v315) = *v311;
  LODWORD(v315) = *v311;
  v314 = v315 >> 8;
  v316 = v309 & 1;
  if ((BYTE1(v315) & v309 & 1) != 0)
    v316 = -v316;
  v317 = v316 + v314;
  STACK[0xDAE8] = (unint64_t)v313;
  v318 = &v313[v312 / 0xFFFFFFFFFFFFFFFCLL];
  v319 = *v313;
  v320 = &v318[v290];
  STACK[0xDAE8] = (unint64_t)v320;
  v321 = *v320;
  v322 = 4 * BYTE1(v294);
  v323 = &v318[(unint64_t)v322 / 4];
  v324 = v296;
  v325 = (unint64_t)&v323[v324 + v322 / 0xFFFFFFFFFFFFFFFCLL];
  v326 = 4 * BYTE1(v290);
  v327 = (_DWORD *)(v325 + v326 - v324 * 4);
  STACK[0xDAE8] = (unint64_t)v323;
  LODWORD(v323) = *v323;
  STACK[0xDAE8] = v325;
  HIDWORD(v328) = v301;
  LODWORD(v328) = v301;
  LODWORD(v325) = (v328 >> 29) ^ __ROR4__(*(_DWORD *)v325, 21) ^ 0xBF04B16B;
  v329 = (unint64_t)&v327[BYTE2(v290) + v326 / 0xFFFFFFFFFFFFFFFCLL];
  v330 = BYTE2(v296);
  v331 = (unint64_t)&v327[v326 / 0xFFFFFFFFFFFFFFFCLL + v330];
  STACK[0xDAE8] = (unint64_t)v327;
  LODWORD(v327) = *v327;
  STACK[0xDAE8] = v329;
  LODWORD(v329) = *(_DWORD *)v329;
  STACK[0xDAE8] = v331;
  v332 = v331 - v330 * 4;
  LODWORD(v331) = *(_DWORD *)v331;
  v333 = (_DWORD *)(v332 + 4 * BYTE1(v291));
  STACK[0xDAE8] = (unint64_t)v333;
  LODWORD(v325) = v329 ^ __ROR4__(v325, 27) ^ 0xE0962D77;
  HIDWORD(v328) = *v333;
  LODWORD(v328) = *v333;
  LODWORD(v325) = (v328 >> 8) + v325 - 2 * ((v328 >> 8) & v325);
  v334 = LODWORD(STACK[0x6488]) ^ LODWORD(STACK[0x6428]);
  v335 = v334 ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x62D0]) ^ __ROR4__(v300, 16) ^ __ROR4__(v303, 24) ^ v305 ^ __ROR4__((_DWORD)v327, 8);
  v336 = STACK[0x6AB0];
  LODWORD(STACK[0x66B8]) = v94;
  LODWORD(v325) = (LODWORD(STACK[0x6468]) ^ LODWORD(STACK[0x61C0]) ^ ((v334 ^ v277 ^ v336 ^ v94 ^ v325)
                                                                    - (v334 ^ v277 ^ v336 ^ v94 ^ v325 ^ LODWORD(STACK[0x6468]))))
                + (v334 ^ v277 ^ v336 ^ v94 ^ v325);
  v337 = v334 ^ LODWORD(STACK[0x63D8]) ^ __ROR4__(v299, 24) ^ __ROR4__(v321, 16);
  LODWORD(STACK[0x66C0]) = v191;
  v338 = v337 ^ __ROR4__((_DWORD)v323, 8) ^ v277 ^ v191;
  v339 = STACK[0x66E8];
  LODWORD(v331) = v338 ^ LODWORD(STACK[0x66E8]) ^ v331;
  v340 = v334 ^ LODWORD(STACK[0x62B0]) ^ v309 & 0xFFFFFFFE ^ __ROR4__(v319, 24) ^ LODWORD(STACK[0x6A60]) ^ v317;
  v341 = (int *)(v332 + 4 * BYTE2(v340));
  STACK[0xDAE8] = (unint64_t)v341;
  v342 = *v341;
  STACK[0xDAE8] = v332;
  LODWORD(v341) = *(_DWORD *)(v332 + 4 * HIBYTE(v340));
  v343 = 4 * BYTE2(v331);
  v344 = v332 + v343;
  v345 = 4 * BYTE2(v325);
  v346 = v344 + v345 - v343;
  v347 = v335 ^ LODWORD(STACK[0x6A80]);
  STACK[0xDAE8] = v344;
  LODWORD(v344) = *(_DWORD *)v344;
  STACK[0xDAE8] = v346;
  v348 = v346 - v345;
  LODWORD(v346) = *(_DWORD *)v346;
  STACK[0xDAE8] = v348;
  v349 = *(_DWORD *)(v348 + 4 * BYTE2(v347));
  v350 = (int *)(v348 + 4 * v325);
  STACK[0xDAE8] = (unint64_t)v350;
  v351 = *v350;
  v352 = (_DWORD *)(v348 + 4 * HIBYTE(v347));
  STACK[0xDAE8] = (unint64_t)v352;
  LODWORD(v350) = *v352;
  v353 = (_DWORD *)(v348 + 4 * v347);
  STACK[0xDAE8] = (unint64_t)v353;
  LODWORD(v352) = *v353;
  v354 = 4 * BYTE1(v331);
  v355 = (_DWORD *)(v348 + v354);
  v356 = 4 * BYTE3(v331);
  v357 = &v355[(unint64_t)v356 / 4 + v354 / 0xFFFFFFFFFFFFFFFCLL];
  v358 = 4 * v331;
  v359 = &v357[(unint64_t)v358 / 4 + v356 / 0xFFFFFFFFFFFFFFFCLL];
  v360 = BYTE1(v325);
  v361 = (unint64_t)&v359[v360 + v358 / 0xFFFFFFFFFFFFFFFCLL];
  v362 = 4 * BYTE1(v340);
  v363 = (_DWORD *)(v361 + v362 - v360 * 4);
  STACK[0xDAE8] = (unint64_t)v355;
  LODWORD(v355) = *v355;
  STACK[0xDAE8] = (unint64_t)v357;
  LODWORD(v357) = *v357;
  STACK[0xDAE8] = (unint64_t)v359;
  LODWORD(v359) = *v359;
  STACK[0xDAE8] = v361;
  LODWORD(v361) = *(_DWORD *)v361;
  STACK[0xDAE8] = (unint64_t)v363;
  v364 = &v363[v362 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v363) = *v363;
  v365 = (unint64_t)&v364[BYTE1(v347)];
  STACK[0xDAE8] = v365;
  v366 = *(_DWORD *)v365;
  v367 = 4 * BYTE3(v325);
  v368 = &v364[(unint64_t)v367 / 4];
  v369 = 4 * v340;
  v370 = &v368[(unint64_t)v369 / 4 + v367 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v365) = LODWORD(STACK[0x6420]) ^ v286;
  v371 = v365 ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x63C0]);
  LODWORD(STACK[0x66B0]) = v99;
  LODWORD(v361) = v371 ^ v99 ^ v349 ^ __ROR4__((_DWORD)v357, 24) ^ __ROR4__(v361, 8);
  STACK[0xDAE8] = (unint64_t)v368;
  v372 = *v368;
  STACK[0xDAE8] = (unint64_t)v370;
  v373 = (unint64_t)&v370[v369 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v361) = v361 ^ __ROR4__(*v370, 16);
  LODWORD(v370) = v365 ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x6A40]) ^ v342 ^ __ROR4__((_DWORD)v352, 16) ^ __ROR4__((_DWORD)v355, 8) ^ __ROR4__(v372, 24);
  v374 = v365 ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x6A50]) ^ v346 ^ __ROR4__((_DWORD)v350, 24) ^ __ROR4__((_DWORD)v359, 16) ^ __ROR4__((_DWORD)v363, 8);
  LODWORD(v344) = v365 ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62A0]) ^ __ROR4__((_DWORD)v341, 24) ^ LODWORD(STACK[0x6A30]) ^ v344 ^ __ROR4__(v351, 16) ^ __ROR4__(v366, 8);
  v375 = (int *)(v373 + 4 * BYTE2(v361));
  STACK[0xDAE8] = (unint64_t)v375;
  v376 = *v375;
  STACK[0xDAE8] = v373;
  LODWORD(v375) = *(_DWORD *)(v373 + 4 * v374);
  v377 = (_DWORD *)(v373 + 4 * BYTE2(v370));
  STACK[0xDAE8] = (unint64_t)v377;
  LODWORD(v346) = *v377;
  STACK[0xDAE8] = v373;
  LODWORD(v377) = *(_DWORD *)(v373 + 4 * v361);
  v378 = (int *)(v373 + 4 * BYTE3(v361));
  STACK[0xDAE8] = (unint64_t)v378;
  v379 = *v378;
  v380 = (_DWORD *)(v373 + 4 * (v370 >> 24));
  STACK[0xDAE8] = (unint64_t)v380;
  LODWORD(v378) = *v380;
  v381 = v373 + 4 * HIBYTE(v374);
  STACK[0xDAE8] = v381;
  LODWORD(v380) = *(_DWORD *)v381;
  v382 = v373 + 4 * BYTE1(v374);
  STACK[0xDAE8] = v382;
  LODWORD(v381) = *(_DWORD *)v382;
  v383 = (_DWORD *)(v373 + 4 * BYTE2(v344));
  STACK[0xDAE8] = (unint64_t)v383;
  LODWORD(v382) = *v383;
  v384 = 4 * v370;
  v385 = (_DWORD *)(v373 + v384);
  v386 = 4 * BYTE1(v370);
  v387 = &v385[(unint64_t)v386 / 4 + v384 / 0xFFFFFFFFFFFFFFFCLL];
  v388 = 4 * BYTE1(v344);
  v389 = &v387[v386 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v388 / 4];
  v390 = 4 * BYTE1(v361);
  v391 = &v389[(unint64_t)v390 / 4 + v388 / 0xFFFFFFFFFFFFFFFCLL];
  v392 = 4 * v344;
  v393 = &v391[(unint64_t)v392 / 4 + v390 / 0xFFFFFFFFFFFFFFFCLL];
  v394 = 4 * BYTE3(v344);
  v395 = &v393[(unint64_t)v394 / 4 + v392 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v385;
  LODWORD(v385) = *v385;
  STACK[0xDAE8] = (unint64_t)v387;
  LODWORD(v387) = *v387;
  STACK[0xDAE8] = (unint64_t)v389;
  LODWORD(v365) = *v389;
  STACK[0xDAE8] = (unint64_t)v391;
  LODWORD(v391) = *v391;
  STACK[0xDAE8] = (unint64_t)v393;
  LODWORD(v393) = *v393;
  STACK[0xDAE8] = (unint64_t)v395;
  v396 = &v395[v394 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v389) = *v395;
  v397 = 4 * BYTE2(v374);
  STACK[0xDAE8] = (unint64_t)v396 + v397;
  v398 = STACK[0x6480];
  v399 = STACK[0x6670];
  LODWORD(v385) = LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6A00]) ^ v376 ^ __ROR4__(v381, 8) ^ __ROR4__((_DWORD)v385, 16) ^ __ROR4__((_DWORD)v389, 24);
  v400 = STACK[0x6440];
  v401 = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x6440]);
  v402 = LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6450]);
  LODWORD(STACK[0x66A8]) = v201;
  LODWORD(v393) = v401 ^ v402 ^ v201 ^ __ROR4__(v379, 24) ^ __ROR4__((_DWORD)v387, 8) ^ __ROR4__((_DWORD)v393, 16) ^ *(_DWORD *)((char *)v396 + v397);
  v403 = v399;
  v404 = LODWORD(STACK[0x6A20]) ^ v399 ^ v346 ^ __ROR4__((_DWORD)v377, 16) ^ __ROR4__((_DWORD)v380, 24);
  LODWORD(v328) = __ROR4__(v365, 8);
  LODWORD(v397) = v398 ^ v399 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6A10]) ^ __ROR4__((_DWORD)v375, 16) ^ __ROR4__((_DWORD)v378, 24) ^ v382;
  v405 = ((v398 ^ LODWORD(STACK[0x61BC]) ^ ((v404 ^ v328) - (v404 ^ v328 ^ v398))) + (v404 ^ v328)) ^ LODWORD(STACK[0x63B0]);
  v406 = &v396[HIBYTE(v405)];
  STACK[0xDAE8] = (unint64_t)v406;
  v407 = *v406;
  LODWORD(v397) = v397 ^ __ROR4__((_DWORD)v391, 8);
  v408 = BYTE1(v397);
  v409 = (unint64_t)&v396[v408];
  v410 = 4 * BYTE2(v393);
  v411 = (int *)(v409 + v410 - v408 * 4);
  STACK[0xDAE8] = v409;
  LODWORD(v409) = *(_DWORD *)v409;
  STACK[0xDAE8] = (unint64_t)v411;
  v412 = (unint64_t)&v411[v410 / 0xFFFFFFFFFFFFFFFCLL];
  v413 = *v411;
  STACK[0xDAE8] = v412;
  v414 = *(_DWORD *)(v412 + 4 * BYTE1(v385));
  v415 = 4 * (v385 >> 24);
  v416 = (int *)(v412 + v415);
  v417 = 4 * BYTE1(v405);
  v418 = &v416[(unint64_t)v417 / 4 + v415 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v416;
  v419 = *v416;
  STACK[0xDAE8] = (unint64_t)v418;
  v420 = &v418[v417 / 0xFFFFFFFFFFFFFFFCLL];
  v421 = *v418;
  v422 = &v420[BYTE2(v405)];
  STACK[0xDAE8] = (unint64_t)v422;
  LODWORD(v381) = *v422;
  v423 = &v420[BYTE2(v397)];
  STACK[0xDAE8] = (unint64_t)v423;
  v424 = *v423;
  v425 = 4 * BYTE3(v397);
  v426 = &v420[(unint64_t)v425 / 4];
  v427 = 4 * v405;
  v428 = &v426[(unint64_t)v427 / 4 + v425 / 0xFFFFFFFFFFFFFFFCLL];
  v429 = 4 * v385;
  v430 = &v428[v427 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v429 / 4];
  v431 = 4 * v393;
  v432 = &v430[(unint64_t)v431 / 4 + v429 / 0xFFFFFFFFFFFFFFFCLL];
  v433 = 4 * (v393 >> 24);
  v434 = &v432[(unint64_t)v433 / 4 + v431 / 0xFFFFFFFFFFFFFFFCLL];
  v435 = 4 * v397;
  v436 = &v434[(unint64_t)v435 / 4 + v433 / 0xFFFFFFFFFFFFFFFCLL];
  v437 = 4 * BYTE1(v393);
  v438 = &v436[v435 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v437 / 4];
  v439 = 4 * BYTE2(v385);
  v440 = &v438[(unint64_t)v439 / 4 + v437 / 0xFFFFFFFFFFFFFFFCLL];
  v441 = LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x6478]);
  LODWORD(STACK[0x66A0]) = v111;
  LODWORD(v409) = v441 ^ v111 ^ __ROR4__(v409, 8) ^ v381;
  STACK[0xDAE8] = (unint64_t)v426;
  v442 = *v426;
  STACK[0xDAE8] = (unint64_t)v428;
  v443 = *v428;
  STACK[0xDAE8] = (unint64_t)v430;
  LODWORD(v409) = v409 ^ __ROR4__(*v430, 16);
  STACK[0xDAE8] = (unint64_t)v432;
  v444 = *v432;
  STACK[0xDAE8] = (unint64_t)v434;
  v445 = v409 ^ __ROR4__(*v434, 24);
  v446 = STACK[0x63A8];
  if (!v445)
    v446 = STACK[0x6460];
  v447 = v445 ^ LODWORD(STACK[0x6280]) ^ ((v446 & STACK[0x66F0]) << LODWORD(STACK[0x6AC0]));
  v448 = v441 ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x69F0]) ^ __ROR4__(v407, 24) ^ __ROR4__(v414, 8) ^ v424 ^ __ROR4__(v444, 16);
  v449 = v441 ^ LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x69D0]) ^ v413 ^ __ROR4__(v419, 24) ^ __ROR4__(v421, 8);
  STACK[0xDAE8] = (unint64_t)v436;
  v450 = v449 ^ __ROR4__(*v436, 16);
  v451 = v441 ^ LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x69E0]) ^ __ROR4__(v442, 24) ^ __ROR4__(v443, 16);
  STACK[0xDAE8] = (unint64_t)v438;
  v452 = __ROR4__(*v438, 8);
  STACK[0xDAE8] = (unint64_t)v440;
  v453 = (unint64_t)&v440[v439 / 0xFFFFFFFFFFFFFFFCLL];
  v454 = v451 ^ v452 ^ *v440;
  v455 = v453 + 4 * HIBYTE(v454);
  STACK[0xDAE8] = v455;
  v456 = *(_DWORD *)v455;
  v457 = (_DWORD *)(v453 + 4 * BYTE2(v448));
  STACK[0xDAE8] = (unint64_t)v457;
  LODWORD(v455) = *v457;
  STACK[0xDAE8] = v453;
  LODWORD(v457) = *(_DWORD *)(v453 + 4 * HIBYTE(v447));
  v458 = (int *)(v453 + 4 * BYTE1(v450));
  STACK[0xDAE8] = (unint64_t)v458;
  v459 = *v458;
  v460 = (_DWORD *)(v453 + 4 * v447);
  STACK[0xDAE8] = (unint64_t)v460;
  LODWORD(v458) = *v460;
  v461 = 4 * BYTE1(v454);
  v462 = v453 + v461;
  v463 = 4 * BYTE2(v447);
  v464 = v462 + v463 - v461;
  STACK[0xDAE8] = v462;
  LODWORD(v462) = *(_DWORD *)v462;
  STACK[0xDAE8] = v464;
  v465 = v464 - v463;
  LODWORD(v464) = *(_DWORD *)v464;
  STACK[0xDAE8] = v465;
  v466 = *(_DWORD *)(v465 + 4 * v448);
  v467 = (int *)(v465 + 4 * v454);
  STACK[0xDAE8] = (unint64_t)v467;
  v468 = *v467;
  v469 = (_DWORD *)(v465 + 4 * BYTE1(v448));
  STACK[0xDAE8] = (unint64_t)v469;
  LODWORD(v467) = *v469;
  v470 = 4 * HIBYTE(v450);
  v471 = (_DWORD *)(v465 + v470);
  v472 = 4 * BYTE1(v447);
  v473 = &v471[(unint64_t)v472 / 4 + v470 / 0xFFFFFFFFFFFFFFFCLL];
  v474 = BYTE2(v454);
  v475 = (unint64_t)&v473[v474 + v472 / 0xFFFFFFFFFFFFFFFCLL];
  v476 = 4 * v450;
  v477 = (_DWORD *)(v475 - v474 * 4 + v476);
  v478 = 4 * BYTE2(v450);
  v479 = &v477[(unint64_t)v478 / 4 + v476 / 0xFFFFFFFFFFFFFFFCLL];
  v480 = 4 * HIBYTE(v448);
  v481 = &v479[(unint64_t)v480 / 4 + v478 / 0xFFFFFFFFFFFFFFFCLL];
  v482 = STACK[0x6418];
  LODWORD(v462) = LODWORD(STACK[0x6418]) ^ v284 ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x69C0]) ^ v455 ^ __ROR4__((_DWORD)v457, 24) ^ __ROR4__(v462, 8);
  STACK[0xDAE8] = (unint64_t)v471;
  LODWORD(v455) = *v471;
  STACK[0xDAE8] = (unint64_t)v473;
  LODWORD(v457) = *v473;
  STACK[0xDAE8] = v475;
  LODWORD(v475) = *(_DWORD *)v475;
  STACK[0xDAE8] = (unint64_t)v477;
  LODWORD(v477) = v462 ^ __ROR4__(*v477, 16);
  v483 = v284;
  v484 = LODWORD(STACK[0x6398]) ^ v284 ^ v482 ^ v400 ^ v402 ^ LODWORD(STACK[0x6990]) ^ v464 ^ __ROR4__(v468, 16) ^ __ROR4__((_DWORD)v467, 8) ^ __ROR4__(v455, 24);
  LODWORD(v475) = v482 ^ v284 ^ LODWORD(STACK[0x6390]) ^ LODWORD(STACK[0x69B0]) ^ __ROR4__(v459, 8) ^ __ROR4__((_DWORD)v458, 16) ^ v475;
  STACK[0xDAE8] = (unint64_t)v479;
  LODWORD(v462) = *v479;
  STACK[0xDAE8] = (unint64_t)v481;
  v485 = (unint64_t)&v481[v480 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v475) = v475 ^ __ROR4__(*v481, 24);
  LODWORD(v462) = v482 ^ v284 ^ LODWORD(STACK[0x6388]) ^ LODWORD(STACK[0x69A0]) ^ __ROR4__(v456, 24) ^ __ROR4__(v466, 16) ^ __ROR4__((_DWORD)v457, 8) ^ v462;
  v486 = (int *)(v485 + 4 * v484);
  STACK[0xDAE8] = (unint64_t)v486;
  v487 = *v486;
  v488 = v485 + 4 * v477;
  STACK[0xDAE8] = v488;
  LODWORD(v486) = *(_DWORD *)v488;
  v489 = v485 + 4 * BYTE2(v484);
  STACK[0xDAE8] = v489;
  LODWORD(v488) = *(_DWORD *)v489;
  STACK[0xDAE8] = v485;
  LODWORD(v489) = *(_DWORD *)(v485 + 4 * BYTE1(v475));
  v490 = (_DWORD *)(v485 + 4 * v475);
  STACK[0xDAE8] = (unint64_t)v490;
  LODWORD(v488) = v488 ^ __ROR4__(*v490, 16);
  v491 = 4 * BYTE3(v475);
  v492 = (_DWORD *)(v485 + v491);
  v493 = BYTE2(v475);
  v494 = (unint64_t)&v492[v493 + v491 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v492;
  LODWORD(v492) = *v492;
  STACK[0xDAE8] = v494;
  v495 = v494 - v493 * 4;
  LODWORD(v494) = *(_DWORD *)v494;
  v496 = (_DWORD *)(v495 + 4 * BYTE2(v477));
  STACK[0xDAE8] = (unint64_t)v496;
  LODWORD(v489) = *v496 ^ __ROR4__(v489, 8);
  v497 = (_DWORD *)(v495 + 4 * BYTE3(v462));
  STACK[0xDAE8] = (unint64_t)v497;
  v498 = v494 ^ __ROR4__(v487, 16);
  LODWORD(v488) = v488 ^ __ROR4__(*v497, 24);
  v499 = 4 * BYTE1(v462);
  v500 = v495 + v499;
  v501 = 4 * BYTE1(v477);
  v502 = (_DWORD *)(v500 + v501 - v499);
  STACK[0xDAE8] = v500;
  LODWORD(v500) = v498 ^ __ROR4__(*(_DWORD *)v500, 8);
  v503 = 4 * BYTE1(v484);
  v504 = &v502[(unint64_t)v503 / 4 + v501 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v502;
  LODWORD(v488) = v488 ^ __ROR4__(*v502, 8);
  v505 = 4 * (v477 >> 24);
  v506 = &v504[v503 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v505 / 4];
  v507 = v462;
  v508 = (unint64_t)&v506[v507 + v505 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v504;
  LODWORD(v497) = *v504;
  STACK[0xDAE8] = (unint64_t)v506;
  v509 = v500 ^ __ROR4__(*v506, 24);
  STACK[0xDAE8] = v508;
  v510 = v508 - v507 * 4;
  LODWORD(v508) = *(_DWORD *)v508;
  v511 = (int *)(v510 + 4 * HIBYTE(v484));
  STACK[0xDAE8] = (unint64_t)v511;
  v512 = __PAIR64__(v492, __ROR4__(v508, 16));
  LODWORD(v508) = v489 ^ v512;
  v513 = *v511;
  v514 = v510 + 4 * BYTE2(v462);
  STACK[0xDAE8] = v514;
  LODWORD(v512) = (_DWORD)v492;
  v515 = v508 ^ __ROR4__(v513, 24);
  v516 = (v512 >> 24) ^ __ROR4__((_DWORD)v486, 16) ^ __ROR4__((_DWORD)v497, 8) ^ *(_DWORD *)v514;
  v517 = 2 * v277 - v336 - v339 + v488;
  v518 = STACK[0x61A8];
  LODWORD(v508) = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x6950]) ^ v515;
  v519 = 4 * BYTE3(v508);
  v520 = v510 + v519;
  v521 = 4 * BYTE1(v508);
  v522 = v520 + v521 - v519;
  LODWORD(v514) = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6960]) ^ v517;
  v523 = 4 * BYTE1(v514);
  v524 = v522 + v523 - v521;
  LODWORD(v488) = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x6980]) ^ v509;
  v525 = 4 * BYTE2(v514);
  v526 = v524 - v523 + v525;
  v527 = 4
       * (LODWORD(STACK[0x61A8]) ^ LOBYTE(STACK[0x6238]) ^ LOBYTE(STACK[0x6258]) ^ LOBYTE(STACK[0x6980]) ^ v509);
  v528 = v526 + v527 - v525;
  LODWORD(v471) = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x6970]) ^ v516;
  v529 = 4 * (LODWORD(STACK[0x61A8]) ^ LOBYTE(STACK[0x6268]) ^ LOBYTE(STACK[0x6960]) ^ v517);
  v530 = (_DWORD *)(v528 - v527 + v529);
  v531 = 4 * BYTE1(v471);
  v532 = &v530[(unint64_t)v531 / 4 + v529 / 0xFFFFFFFFFFFFFFFCLL];
  v533 = 4 * (LODWORD(STACK[0x61A8]) ^ LOBYTE(STACK[0x6260]) ^ LOBYTE(STACK[0x6970]) ^ v516);
  v534 = &v532[(unint64_t)v533 / 4 + v531 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = v520;
  LODWORD(v520) = *(_DWORD *)v520;
  STACK[0xDAE8] = v522;
  LODWORD(v522) = *(_DWORD *)v522;
  STACK[0xDAE8] = v524;
  LODWORD(v524) = *(_DWORD *)v524;
  STACK[0xDAE8] = v526;
  LODWORD(v526) = *(_DWORD *)v526;
  STACK[0xDAE8] = v528;
  LODWORD(v528) = *(_DWORD *)v528;
  STACK[0xDAE8] = (unint64_t)v530;
  LODWORD(v530) = *v530;
  STACK[0xDAE8] = (unint64_t)v532;
  LODWORD(v532) = *v532;
  STACK[0xDAE8] = (unint64_t)v534;
  v535 = &v534[v533 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v534) = *v534;
  v536 = &v535[BYTE1(v488)];
  STACK[0xDAE8] = (unint64_t)v536;
  LODWORD(v473) = *v536;
  v537 = &v535[v508];
  STACK[0xDAE8] = (unint64_t)v537;
  LODWORD(v536) = *v537;
  v538 = &v535[BYTE3(v514)];
  STACK[0xDAE8] = (unint64_t)v538;
  LODWORD(v514) = *v538;
  v539 = &v535[BYTE2(v508)];
  STACK[0xDAE8] = (unint64_t)v539;
  LODWORD(v508) = *v539;
  v540 = 4 * BYTE2(v471);
  v541 = &v535[(unint64_t)v540 / 4];
  v542 = 4 * BYTE2(v488);
  v543 = &v541[(unint64_t)v542 / 4 + v540 / 0xFFFFFFFFFFFFFFFCLL];
  v544 = 4 * BYTE3(v488);
  v545 = &v543[(unint64_t)v544 / 4 + v542 / 0xFFFFFFFFFFFFFFFCLL];
  v546 = 4 * (v471 >> 24);
  v547 = &v545[(unint64_t)v546 / 4 + v544 / 0xFFFFFFFFFFFFFFFCLL];
  v548 = LODWORD(STACK[0x6688]) ^ v403;
  LODWORD(v522) = v548 ^ LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x6930]) ^ __ROR4__(v522, 8) ^ v526 ^ __ROR4__(v528, 16);
  STACK[0xDAE8] = (unint64_t)v541;
  LODWORD(v526) = *v541;
  STACK[0xDAE8] = (unint64_t)v543;
  LODWORD(v528) = *v543;
  STACK[0xDAE8] = (unint64_t)v545;
  LODWORD(v541) = *v545;
  STACK[0xDAE8] = (unint64_t)v547;
  v549 = (unint64_t)&v547[v546 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v522) = v522 ^ __ROR4__(*v547, 24);
  LODWORD(v524) = v548 ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x6940]) ^ __ROR4__(v524, 8) ^ __ROR4__((_DWORD)v536, 16) ^ v526 ^ __ROR4__((_DWORD)v541, 24);
  LODWORD(v520) = v548 ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6910]) ^ __ROR4__(v520, 24) ^ __ROR4__((_DWORD)v530, 16) ^ __ROR4__((_DWORD)v532, 8) ^ v528;
  LODWORD(v508) = v548 ^ LODWORD(STACK[0x6370]) ^ LODWORD(STACK[0x6920]) ^ __ROR4__((_DWORD)v534, 16) ^ __ROR4__((_DWORD)v473, 8) ^ __ROR4__(v514, 24) ^ v508;
  v550 = (_DWORD *)(v549 + 4 * BYTE2(v522));
  STACK[0xDAE8] = (unint64_t)v550;
  LODWORD(v514) = *v550;
  STACK[0xDAE8] = v549;
  LODWORD(v547) = *(_DWORD *)(v549 + 4 * BYTE3(v522));
  v551 = (_DWORD *)(v549 + 4 * v508);
  STACK[0xDAE8] = (unint64_t)v551;
  LODWORD(v551) = *v551;
  v552 = 4 * v524;
  v553 = (_DWORD *)(v549 + v552);
  v554 = 4 * BYTE1(v522);
  v555 = &v553[(unint64_t)v554 / 4 + v552 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v553;
  LODWORD(v553) = *v553;
  STACK[0xDAE8] = (unint64_t)v555;
  v556 = &v555[v554 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v532) = *v555;
  v557 = (unint64_t)&v556[BYTE2(v524)];
  STACK[0xDAE8] = v557;
  LODWORD(v557) = *(_DWORD *)v557;
  v558 = &v556[BYTE1(v520)];
  STACK[0xDAE8] = (unint64_t)v558;
  LODWORD(v558) = *v558;
  v559 = &v556[BYTE1(v508)];
  STACK[0xDAE8] = (unint64_t)v559;
  LODWORD(v559) = *v559;
  v560 = &v556[BYTE3(v520)];
  STACK[0xDAE8] = (unint64_t)v560;
  LODWORD(v560) = *v560;
  v561 = &v556[v522];
  STACK[0xDAE8] = (unint64_t)v561;
  LODWORD(v522) = *v561;
  v562 = (unint64_t)&v556[BYTE2(v520)];
  STACK[0xDAE8] = v562;
  LODWORD(v562) = *(_DWORD *)v562;
  v563 = &v556[BYTE3(v524)];
  STACK[0xDAE8] = (unint64_t)v563;
  LODWORD(v563) = *v563;
  v564 = &v556[BYTE1(v524)];
  STACK[0xDAE8] = (unint64_t)v564;
  LODWORD(v524) = *v564;
  v565 = &v556[v520];
  STACK[0xDAE8] = (unint64_t)v565;
  LODWORD(v520) = *v565;
  v566 = (unint64_t)&v556[BYTE2(v508)];
  STACK[0xDAE8] = v566;
  LODWORD(v566) = *(_DWORD *)v566;
  v567 = 4 * BYTE3(v508);
  STACK[0xDAE8] = (unint64_t)v556 + v567;
  v568 = LODWORD(STACK[0x6680]) ^ v403;
  LODWORD(v520) = v568 ^ LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x6900]) ^ v514 ^ __ROR4__((_DWORD)v559, 8) ^ __ROR4__((_DWORD)v563, 24) ^ __ROR4__(v520, 16);
  LODWORD(v567) = v568 ^ LODWORD(STACK[0x6328]) ^ LODWORD(STACK[0x68D0]) ^ __ROR4__(v522, 16) ^ v562 ^ __ROR4__(v524, 8) ^ __ROR4__(*(_DWORD *)((char *)v556 + v567), 24);
  LODWORD(v522) = v568 ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x6360]) ^ LODWORD(STACK[0x67C0]) ^ __ROR4__((_DWORD)v551, 16) ^ __ROR4__((_DWORD)v532, 8) ^ v557 ^ __ROR4__((_DWORD)v560, 24);
  LODWORD(v524) = v568 ^ LODWORD(STACK[0x6358]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__((_DWORD)v547, 24) ^ __ROR4__((_DWORD)v553, 16) ^ __ROR4__((_DWORD)v558, 8) ^ v566;
  v569 = &v556[BYTE3(v567)];
  v570 = &v556[BYTE1(v567)];
  v571 = &v556[BYTE3(v520)];
  v572 = v556;
  v573 = BYTE2(v524);
  v574 = (unint64_t)&v572[v573];
  v575 = 4 * v524;
  v576 = v574 + v575 - v573 * 4;
  STACK[0xDAE8] = (unint64_t)v569;
  LODWORD(v569) = *v569;
  STACK[0xDAE8] = (unint64_t)v570;
  LODWORD(v570) = *v570;
  STACK[0xDAE8] = (unint64_t)v571;
  LODWORD(v571) = *v571;
  STACK[0xDAE8] = v574;
  LODWORD(v574) = *(_DWORD *)v574;
  STACK[0xDAE8] = v576;
  v577 = v576 - v575;
  LODWORD(v576) = *(_DWORD *)v576;
  v578 = (_DWORD *)(v577 + 4 * BYTE3(v522));
  STACK[0xDAE8] = (unint64_t)v578;
  LODWORD(v557) = *v578;
  v579 = 4 * BYTE2(v522);
  v580 = v577 + v579;
  v581 = 4 * v520;
  v582 = (_DWORD *)(v580 + v581 - v579);
  v583 = BYTE2(v567);
  v584 = (unint64_t)&v582[v583 + v581 / 0xFFFFFFFFFFFFFFFCLL];
  v585 = 4 * BYTE2(v520);
  v586 = v584 + v585 - v583 * 4;
  STACK[0xDAE8] = v580;
  LODWORD(v580) = *(_DWORD *)v580;
  STACK[0xDAE8] = (unint64_t)v582;
  LODWORD(v582) = *v582;
  STACK[0xDAE8] = v584;
  LODWORD(v584) = *(_DWORD *)v584;
  STACK[0xDAE8] = v586;
  v587 = v586 - v585;
  LODWORD(v586) = *(_DWORD *)v586;
  v588 = (_DWORD *)(v587 + 4 * BYTE1(v522));
  STACK[0xDAE8] = (unint64_t)v588;
  LODWORD(v563) = *v588;
  v589 = 4 * v522;
  v590 = (_DWORD *)(v587 + v589);
  v591 = 4 * BYTE3(v524);
  v592 = &v590[(unint64_t)v591 / 4 + v589 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v590;
  LODWORD(v590) = *v590;
  STACK[0xDAE8] = (unint64_t)v592;
  v593 = (unint64_t)&v592[v591 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v592) = *v592;
  v594 = (_DWORD *)(v593 + 4 * BYTE1(v520));
  STACK[0xDAE8] = (unint64_t)v594;
  LODWORD(v594) = *v594;
  v595 = (_DWORD *)(v593 + 4 * v567);
  STACK[0xDAE8] = (unint64_t)v595;
  LODWORD(v567) = *v595;
  v596 = (_DWORD *)(v593 + 4 * BYTE1(v524));
  STACK[0xDAE8] = (unint64_t)v596;
  LODWORD(v596) = *v596;
  STACK[0xDAE8] = v593;
  v597 = LODWORD(STACK[0x6490]) ^ v483;
  v598 = v597 ^ LODWORD(STACK[0x6310]) ^ LODWORD(STACK[0x67B0]) ^ __ROR4__((_DWORD)v569, 24) ^ __ROR4__(v576, 16) ^ v580 ^ __ROR4__((_DWORD)v594, 8);
  LODWORD(v592) = v597 ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__((_DWORD)v582, 16) ^ v584 ^ __ROR4__((_DWORD)v563, 8) ^ __ROR4__((_DWORD)v592, 24);
  LODWORD(v567) = v597 ^ LODWORD(STACK[0x6218]) ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x6790]) ^ __ROR4__(v557, 24) ^ v586 ^ __ROR4__(v567, 16) ^ __ROR4__((_DWORD)v596, 8);
  LODWORD(v596) = v597 ^ LODWORD(STACK[0x6308]) ^ LODWORD(STACK[0x6800]) ^ __ROR4__((_DWORD)v570, 8) ^ __ROR4__((_DWORD)v571, 24) ^ v574 ^ __ROR4__((_DWORD)v590, 16);
  v599 = STACK[0x6760];
  v600 = (_DWORD *)(STACK[0xDAF0] + 4 * v592);
  v601 = (_DWORD *)(STACK[0xDAF0] + 4 * v596);
  HIDWORD(v512) = *(_DWORD *)(STACK[0xDAF0] + 4 * (v596 >> 24));
  LODWORD(v512) = HIDWORD(v512);
  v602 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE2(v567));
  v603 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE2(v598));
  LODWORD(v574) = (v512 >> 16) ^ __ROR4__(*(_DWORD *)(STACK[0xDAF0] + 4 * v567), 8);
  v604 = (_DWORD *)(STACK[0xDAF0] + 4 * BYTE1(v596));
  HIDWORD(v512) = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE3(v567));
  LODWORD(v512) = HIDWORD(v512);
  LODWORD(v576) = (v512 >> 16) ^ __ROR4__(*(_DWORD *)(STACK[0xDAF0] + 4 * v598), 8);
  v605 = (int *)(STACK[0xDAF0] + 4 * (v598 >> (v599 & 0x18) >> (v599 & 0x18 ^ 0x18)));
  v606 = (_DWORD *)(STACK[0xDAF0] + 4 * BYTE1(v592));
  v607 = 4 * BYTE2(v592);
  v608 = (_DWORD *)(STACK[0xDAF0] + v607);
  STACK[0xDAF0] = (unint64_t)v605;
  v609 = *v605;
  STACK[0xDAF0] = (unint64_t)v606;
  v610 = v576 ^ *v606;
  STACK[0xDAF0] = (unint64_t)v608;
  v611 = &v608[v607 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v608) = *v608;
  v612 = &v611[BYTE1(v567)];
  STACK[0xDAF0] = (unint64_t)v612;
  v613 = v574 ^ __ROR4__((_DWORD)v608, 24);
  v614 = *v612;
  v615 = 4 * BYTE2(v596);
  v616 = &v611[(unint64_t)v615 / 4];
  v617 = 4 * (v592 >> 24);
  v618 = &v616[(unint64_t)v617 / 4 + v615 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAF0] = (unint64_t)v616;
  HIDWORD(v512) = *v616;
  LODWORD(v512) = *v616;
  v619 = v512 >> 24;
  v620 = (v512 >> 24) & 0x400000;
  if ((v620 & v610) != 0)
    LODWORD(v620) = -(int)v620;
  v621 = v620 + v610;
  STACK[0xDAF0] = (unint64_t)v618;
  v622 = (unint64_t)&v618[v617 / 0xFFFFFFFFFFFFFFFCLL];
  v623 = *v618;
  v624 = (_DWORD *)(v622 + 4 * BYTE1(v598));
  STACK[0xDAF0] = (unint64_t)v624;
  v625 = (v613 ^ *v624) - 1925082394 - ((2 * (v613 ^ *v624)) & 0x1A8325CC);
  STACK[0xDAF0] = v622;
  v626 = STACK[0x64B0];
  LODWORD(v622) = LODWORD(STACK[0x64B0]) ^ __ROR4__(*v600, 8) ^ __ROR4__(v602, 24) ^ *v604 ^ __ROR4__(v609, 16);
  v627 = v599 ^ LODWORD(STACK[0x64B0]) ^ __ROR4__(*v601, 8) ^ __ROR4__(v603, 24) ^ v614;
  v628 = __ROR4__(v623, 16);
  v629 = v622 - 1925082394 - ((2 * v622) & 0x1A8325CC);
  v630 = (v619 & 0xFFBFFFFF ^ LODWORD(STACK[0x66F8]) ^ v621)
       - 1925082394
       - ((2 * (v619 & 0xFFBFFFFF ^ LODWORD(STACK[0x66F8]) ^ v621)) & 0x1A8325CC);
  v631 = STACK[0x6510];
  v632 = STACK[0x6518];
  v633 = LODWORD(STACK[0x6510]) ^ 0x1F813182 ^ LODWORD(STACK[0x6518]);
  LODWORD(STACK[0x65D0]) = v633 ^ ((v627 ^ v628) - 1925082394 - ((2 * (v627 ^ v628)) & 0x1A8325CC));
  LODWORD(STACK[0x65C8]) = v633 ^ LODWORD(STACK[0x6770]) ^ v629;
  LODWORD(STACK[0x6658]) = v631 ^ v626;
  v634 = v631 ^ v626 ^ v632 ^ 0x1F813182;
  v635 = v634 ^ LODWORD(STACK[0x6730]) ^ v625;
  v636 = v515 + (((v509 ^ 0x5ED9A127) - 316861251 + v516) ^ v517) + 1950732750;
  v637 = v518 ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x6890]) ^ v517;
  v638 = v518 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x6880]) ^ v515;
  v639 = (v518 ^ LODWORD(STACK[0x68B0]) ^ v509)
       + LODWORD(STACK[0x6200])
       - 2 * ((v518 ^ LODWORD(STACK[0x68B0]) ^ v509) & STACK[0x6200]);
  v640 = 4 * HIBYTE(v638);
  v641 = STACK[0xDAE8];
  STACK[0xDAE8] += v640;
  v642 = v518 ^ LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x68A0]) ^ v516;
  LODWORD(v640) = *(_DWORD *)(v641 + v640);
  v643 = 4 * BYTE1(v642);
  v644 = v641 + v643;
  v645 = 4 * HIBYTE(v637);
  v646 = v644 + v645 - v643;
  v647 = 4 * HIBYTE(v642);
  v648 = (_DWORD *)(v646 - v645 + v647);
  v649 = 4 * BYTE1(v639);
  v650 = &v648[(unint64_t)v649 / 4 + v647 / 0xFFFFFFFFFFFFFFFCLL];
  v651 = 4 * (v518 ^ LOBYTE(STACK[0x6248]) ^ LOBYTE(STACK[0x68A0]) ^ v516);
  v652 = &v650[(unint64_t)v651 / 4 + v649 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = v644;
  LODWORD(v644) = *(_DWORD *)v644;
  STACK[0xDAE8] = v646;
  LODWORD(v646) = *(_DWORD *)v646;
  STACK[0xDAE8] = (unint64_t)v648;
  LODWORD(v648) = *v648;
  STACK[0xDAE8] = (unint64_t)v650;
  LODWORD(v650) = *v650;
  STACK[0xDAE8] = (unint64_t)v652;
  v653 = (unint64_t)&v652[v651 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v652) = *v652;
  v654 = (int *)(v653 + 4 * BYTE1(v638));
  STACK[0xDAE8] = (unint64_t)v654;
  v655 = *v654;
  v656 = (int *)(v653 + 4 * BYTE2(v642));
  STACK[0xDAE8] = (unint64_t)v656;
  v657 = *v656;
  STACK[0xDAE8] = v653;
  LODWORD(v656) = *(_DWORD *)(v653 + 4 * v637);
  v658 = 4 * BYTE1(v637);
  v659 = v653 + v658;
  v660 = 4 * BYTE2(v639);
  v661 = (_DWORD *)(v659 + v660 - v658);
  v662 = 4 * v639;
  v663 = &v661[v660 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v662 / 4];
  v664 = 4 * BYTE2(v638);
  v665 = &v663[(unint64_t)v664 / 4 + v662 / 0xFFFFFFFFFFFFFFFCLL];
  v666 = 4 * v638;
  v667 = &v665[(unint64_t)v666 / 4 + v664 / 0xFFFFFFFFFFFFFFFCLL];
  v668 = 4 * HIBYTE(v639);
  v669 = &v667[(unint64_t)v668 / 4 + v666 / 0xFFFFFFFFFFFFFFFCLL];
  v670 = BYTE2(v637);
  v671 = (unint64_t)&v669[v670 + v668 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v640) = v548 ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x6840]) ^ __ROR4__(v640, 24) ^ __ROR4__(v644, 8);
  STACK[0xDAE8] = v659;
  LODWORD(v644) = *(_DWORD *)v659;
  STACK[0xDAE8] = (unint64_t)v661;
  LODWORD(v640) = v640 ^ __ROR4__((_DWORD)v656, 16) ^ *v661;
  LODWORD(v644) = v548 ^ LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x61E8]) ^ LODWORD(STACK[0x6870]) ^ v657 ^ __ROR4__(v644, 8);
  STACK[0xDAE8] = (unint64_t)v663;
  v672 = *v663;
  STACK[0xDAE8] = (unint64_t)v665;
  LODWORD(v659) = *v665;
  STACK[0xDAE8] = (unint64_t)v667;
  LODWORD(v644) = v644 ^ __ROR4__(*v667, 16);
  STACK[0xDAE8] = (unint64_t)v669;
  LODWORD(v669) = v644 ^ __ROR4__(*v669, 24);
  v673 = v548 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x61F8]) ^ LODWORD(STACK[0x6850]) ^ __ROR4__(v646, 24) ^ __ROR4__((_DWORD)v650, 8) ^ __ROR4__((_DWORD)v652, 16) ^ v659;
  LODWORD(v646) = LODWORD(STACK[0x6860]) ^ __ROR4__((_DWORD)v648, 24) ^ __ROR4__(v655, 8);
  v674 = __ROR4__(v672, 16);
  STACK[0xDAE8] = v671;
  v675 = v671 - v670 * 4;
  LODWORD(v671) = (LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x61A0]) ^ ((v646 ^ v674 ^ *(_DWORD *)v671)
                                                                    - (v646 ^ v674 ^ *(_DWORD *)v671 ^ LODWORD(STACK[0x6670]))))
                + (v646 ^ v674 ^ *(_DWORD *)v671);
  v676 = (int *)(v675 + 4 * (v669 >> 24));
  STACK[0xDAE8] = (unint64_t)v676;
  v677 = *v676;
  LODWORD(v671) = LODWORD(STACK[0x6338]) ^ LODWORD(STACK[0x6688]) ^ v671;
  v678 = 4 * BYTE2(v671);
  v679 = (_DWORD *)(v675 + v678);
  STACK[0xDAE8] = (unint64_t)v679;
  v680 = *v679 ^ __ROR4__(v677, 24);
  v681 = 4 * BYTE3(v671);
  v682 = &v679[(unint64_t)v681 / 4 + v678 / 0xFFFFFFFFFFFFFFFCLL];
  v683 = &v682[v681 / 0xFFFFFFFFFFFFFFFCLL];
  v684 = 4 * v671;
  v685 = &v683[(unint64_t)v684 / 4];
  v686 = 4 * v669;
  v687 = &v685[(unint64_t)v686 / 4 + v684 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v682;
  v688 = *v682;
  STACK[0xDAE8] = (unint64_t)v685;
  v689 = *v685;
  STACK[0xDAE8] = (unint64_t)v687;
  v690 = &v687[v686 / 0xFFFFFFFFFFFFFFFCLL];
  v691 = *v687;
  v692 = &v690[BYTE2(v640)];
  STACK[0xDAE8] = (unint64_t)v692;
  v693 = *v692;
  v694 = &v690[BYTE1(v669)];
  STACK[0xDAE8] = (unint64_t)v694;
  v695 = *v694;
  v696 = &v690[v640];
  STACK[0xDAE8] = (unint64_t)v696;
  v697 = v680 ^ __ROR4__(*v696, 16);
  v698 = 4 * BYTE1(v640);
  v699 = &v690[(unint64_t)v698 / 4];
  v700 = 4 * BYTE1(v671);
  v701 = &v699[(unint64_t)v700 / 4 + v698 / 0xFFFFFFFFFFFFFFFCLL];
  v702 = 4 * BYTE2(v669);
  v703 = &v701[(unint64_t)v702 / 4 + v700 / 0xFFFFFFFFFFFFFFFCLL];
  v704 = 4 * HIBYTE(v673);
  v705 = &v703[(unint64_t)v704 / 4 + v702 / 0xFFFFFFFFFFFFFFFCLL];
  v706 = 4 * BYTE3(v640);
  v707 = &v705[v704 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v706 / 4];
  v708 = 4 * BYTE1(v673);
  v709 = &v707[(unint64_t)v708 / 4 + v706 / 0xFFFFFFFFFFFFFFFCLL];
  v710 = 4 * BYTE2(v673);
  v711 = &v709[(unint64_t)v710 / 4 + v708 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v699;
  v712 = *v699;
  STACK[0xDAE8] = (unint64_t)v701;
  v713 = *v701;
  STACK[0xDAE8] = (unint64_t)v703;
  v714 = *v703;
  STACK[0xDAE8] = (unint64_t)v705;
  v715 = *v705;
  STACK[0xDAE8] = (unint64_t)v707;
  v716 = *v707;
  STACK[0xDAE8] = (unint64_t)v709;
  HIDWORD(v718) = *v709;
  LODWORD(v718) = *v709;
  v717 = v718 >> 8;
  v719 = (v718 >> 8) & 0x4000;
  if ((v719 & v697) != 0)
    LODWORD(v719) = -(int)v719;
  v720 = 4 * v673;
  v721 = &v711[(unint64_t)v720 / 4 + v710 / 0xFFFFFFFFFFFFFFFCLL];
  v722 = v568 ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6820]) ^ __ROR4__(v689, 16) ^ v693 ^ __ROR4__(v695, 8) ^ __ROR4__(v715, 24);
  v723 = v568 ^ LODWORD(STACK[0x6330]) ^ LODWORD(STACK[0x6830]) ^ __ROR4__(v688, 24) ^ __ROR4__(v691, 16);
  STACK[0xDAE8] = (unint64_t)v711;
  v724 = v723 ^ __ROR4__(v712, 8) ^ *v711;
  v725 = LODWORD(STACK[0x61DC]) ^ LODWORD(STACK[0x6470]) ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x6810]) ^ __ROR4__(v713, 8) ^ v714 ^ __ROR4__(v716, 24);
  STACK[0xDAE8] = (unint64_t)v721;
  v726 = &v721[v720 / 0xFFFFFFFFFFFFFFFCLL];
  v727 = v725 ^ __ROR4__(*v721, 16);
  v728 = v568 ^ LODWORD(STACK[0x6318]) ^ LODWORD(STACK[0x68F0]) ^ v717 & 0xFFFFBFFF ^ (v719 + v697);
  v729 = &v726[HIBYTE(v724)];
  STACK[0xDAE8] = (unint64_t)v729;
  v730 = *v729;
  v731 = &v726[BYTE1(v722)];
  STACK[0xDAE8] = (unint64_t)v731;
  LODWORD(v729) = *v731;
  v732 = v727;
  v733 = (unint64_t)&v726[v732];
  v734 = 4 * v722;
  v735 = (_DWORD *)(v733 + v734 - v732 * 4);
  STACK[0xDAE8] = v733;
  v736 = 4 * BYTE2(v724);
  HIDWORD(v737) = *(_DWORD *)v733;
  LODWORD(v737) = *(_DWORD *)v733;
  LODWORD(v733) = v737 >> 16;
  v738 = &v735[(unint64_t)v736 / 4 + v734 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v737) = __ROR4__((_DWORD)v729, 8);
  v739 = BYTE2(v728);
  v740 = (unint64_t)&v738[v739 + v736 / 0xFFFFFFFFFFFFFFFCLL];
  v741 = 4 * HIBYTE(v727);
  v742 = (_DWORD *)(v740 + v741 - v739 * 4);
  STACK[0xDAE8] = (unint64_t)v735;
  LODWORD(v735) = *v735;
  STACK[0xDAE8] = (unint64_t)v738;
  LODWORD(v733) = v733 ^ v737 ^ *v738;
  v743 = 4 * HIBYTE(v722);
  v744 = &v742[(unint64_t)v743 / 4 + v741 / 0xFFFFFFFFFFFFFFFCLL];
  v745 = 4 * HIBYTE(v728);
  v746 = &v744[v743 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v745 / 4];
  v747 = 4 * BYTE1(v724);
  v748 = &v746[(unint64_t)v747 / 4 + v745 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = v740;
  LODWORD(v740) = *(_DWORD *)v740;
  STACK[0xDAE8] = (unint64_t)v742;
  LODWORD(v742) = *v742;
  STACK[0xDAE8] = (unint64_t)v744;
  LODWORD(v744) = *v744;
  STACK[0xDAE8] = (unint64_t)v746;
  v749 = v733 ^ __ROR4__(*v746, 24);
  v750 = 4 * v724;
  v751 = &v748[(unint64_t)v750 / 4 + v747 / 0xFFFFFFFFFFFFFFFCLL];
  v752 = 4 * BYTE1(v728);
  v753 = &v751[(unint64_t)v752 / 4 + v750 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAE8] = (unint64_t)v748;
  LODWORD(v748) = *v748;
  STACK[0xDAE8] = (unint64_t)v751;
  LODWORD(v751) = *v751;
  STACK[0xDAE8] = (unint64_t)v753;
  v754 = (unint64_t)&v753[v752 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v753) = *v753;
  v755 = (int *)(v754 + 4 * BYTE1(v727));
  STACK[0xDAE8] = (unint64_t)v755;
  v756 = *v755;
  v757 = (int *)(v754 + 4 * BYTE2(v722));
  STACK[0xDAE8] = (unint64_t)v757;
  v758 = *v757;
  v759 = (int *)(v754 + 4 * BYTE2(v727));
  STACK[0xDAE8] = (unint64_t)v759;
  v760 = *v759;
  v761 = (int *)(v754 + 4 * v728);
  STACK[0xDAE8] = (unint64_t)v761;
  v762 = *v761;
  STACK[0xDAE8] = v754;
  v763 = v597 ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x67D0]) ^ __ROR4__(v730, 24) ^ __ROR4__(v756, 8) ^ v758 ^ __ROR4__(v762, 16);
  LODWORD(v753) = LODWORD(STACK[0x67A0]) ^ __ROR4__((_DWORD)v744, 24) ^ __ROR4__((_DWORD)v751, 16) ^ __ROR4__((_DWORD)v753, 8) ^ v760;
  v764 = v597 ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x6780]) ^ __ROR4__((_DWORD)v735, 16) ^ v740 ^ __ROR4__((_DWORD)v742, 24) ^ __ROR4__((_DWORD)v748, 8);
  v765 = LODWORD(STACK[0x6198]) ^ __ROR4__((_DWORD)v753, 17) ^ 0xB1F16F5C;
  v766 = STACK[0x67F0] & 0x200000;
  if ((v749 & v766) != 0)
    v766 = -v766;
  v767 = LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x62F8]) ^ __ROR4__(v765, 15) ^ 0xDEB963E2;
  v768 = v597 ^ LODWORD(STACK[0x62F0]) ^ STACK[0x67F0] & 0xFFDFFFFF ^ (v766 + v749);
  v769 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE1(v763));
  v770 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE2(v768));
  v771 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE1(v767));
  v772 = *(_DWORD *)(STACK[0xDAF0] + 4 * v764);
  v773 = (_DWORD *)(STACK[0xDAF0] + 4 * BYTE2(v764));
  v774 = *(_DWORD *)(STACK[0xDAF0] + 4 * BYTE1(v764)) ^ __ROR4__(*(_DWORD *)(STACK[0xDAF0]+ 4* (v597 ^ LOBYTE(STACK[0x62F0]) ^ LOBYTE(STACK[0x67F0]) ^ (v766 + v749))), 8) ^ __ROR4__(*(_DWORD *)(STACK[0xDAF0] + 4 * BYTE2(v767)), 24);
  v775 = (_DWORD *)(STACK[0xDAF0] + 4 * HIBYTE(v767));
  v776 = __ROR4__(*(_DWORD *)(STACK[0xDAF0] + 4 * HIBYTE(v763)), 16);
  v777 = (_DWORD *)(STACK[0xDAF0] + 4 * HIBYTE(v764));
  v778 = *(_DWORD *)(STACK[0xDAF0] + 4 * v767);
  v779 = STACK[0xDAF0] + 4 * BYTE1(v768);
  v780 = (int *)(STACK[0xDAF0] + 4 * BYTE2(v763));
  v781 = 4 * HIBYTE(v768);
  v782 = (_DWORD *)(STACK[0xDAF0] + v781);
  STACK[0xDAF0] = (unint64_t)v780;
  v783 = *v780;
  STACK[0xDAF0] = (unint64_t)v782;
  v784 = (unint64_t)v782 - v781;
  LODWORD(v781) = *v782;
  v785 = 4 * v763;
  STACK[0xDAF0] = v784 + v785;
  v786 = (v774 ^ v776) - 1925082394 - ((2 * (v774 ^ v776)) & 0x1A8325CC);
  v787 = v636 ^ LODWORD(STACK[0x6710]) ^ v771 ^ __ROR4__(v772, 8) ^ __ROR4__(v783, 24);
  v788 = __ROR4__(v781, 16);
  v789 = (v787 ^ v788) - 1925082394 - ((2 * (v787 ^ v788)) & 0x1A8325CC);
  LODWORD(v779) = v636 ^ v626 ^ LODWORD(STACK[0x6720]) ^ __ROR4__(*v773, 24) ^ __ROR4__(*v775, 16) ^ *(_DWORD *)v779;
  v790 = __ROR4__(*(_DWORD *)(v784 + v785), 8);
  v791 = (v779 ^ v790) - 1925082394 - ((2 * (v779 ^ v790)) & 0x1A8325CC);
  LODWORD(v779) = v636 ^ LODWORD(STACK[0x6AA0]) ^ v769 ^ __ROR4__(v770, 24) ^ __ROR4__(*v777, 16);
  v792 = __ROR4__(v778, 8);
  v793 = (v779 ^ v792) - 1925082394 - ((2 * (v779 ^ v792)) & 0x1A8325CC);
  v794 = v634 ^ v630;
  v795 = STACK[0x6AB0];
  v796 = STACK[0x65D0];
  if ((STACK[0x6AB0] & 1) != 0)
    v797 = v635;
  else
    v797 = STACK[0x65D0];
  if ((v795 & 1) != 0)
  {
    v798 = v794;
  }
  else
  {
    v796 = STACK[0x65C8];
    v798 = v635;
  }
  if ((v795 & 1) != 0)
    v794 = STACK[0x65C8];
  v799 = LODWORD(STACK[0x6658]) ^ v632 ^ 0xDE5B4DB9;
  v800 = v799 ^ LODWORD(STACK[0x6700]) ^ v636 ^ v786;
  v801 = v799 ^ v789;
  v802 = v799 ^ v793;
  v803 = v631 ^ 0xDE5B4DB9 ^ v632 ^ v791;
  if ((v795 & 1) != 0)
    v804 = v801;
  else
    v804 = v800;
  if ((v795 & 1) != 0)
  {
    v801 = v802;
    v802 = v803;
    v803 = v800;
  }
  if ((v795 & 2) != 0)
    v805 = v794;
  else
    v805 = v797;
  if ((v795 & 2) != 0)
  {
    v794 = v797;
    v806 = v798;
  }
  else
  {
    v806 = v796;
  }
  if ((v795 & 2) != 0)
  {
    v807 = v803;
  }
  else
  {
    v796 = v798;
    v807 = v801;
  }
  if ((v795 & 2) != 0)
    v808 = v801;
  else
    v808 = v803;
  if ((v795 & 2) != 0)
    v809 = v802;
  else
    v809 = v804;
  if ((v795 & 2) != 0)
    v802 = v804;
  v810 = v802 ^ v636;
  v811 = (812921331 * (v794 ^ 0xC1DA7C3B)) ^ v805 ^ (812921331 * (v802 ^ v636));
  v812 = v636 ^ 0xC1DA7C3B;
  v813 = v806 + 276001413 * ((v636 ^ 0xC1DA7C3B) - (v811 ^ v809));
  v814 = (226952297 * (v808 ^ 0xC1DA7C3B)) ^ v796 ^ (226952297 * (v813 ^ v636));
  v815 = v811 ^ v636;
  v816 = v807 ^ v636;
  v817 = v807 ^ v636 ^ v794 ^ v814;
  v818 = (947895561 * v815) ^ (947895561 * (v809 ^ 0xC1DA7C3B)) ^ v814;
  v819 = v813 ^ (-1572643941 * (v807 ^ v636)) ^ (-1572643941 * (v818 ^ 0xC1DA7C3B));
  v820 = v815 ^ v808 ^ v819;
  v821 = (v817 ^ 0xC1DA7C3B) + 870701971 * (v820 - (v809 ^ v636));
  v822 = v821 - 736961536 - ((2 * v821) & 0xA825B800);
  v823 = (((v820 ^ v802) - 736961536 - ((2 * (v820 ^ v802)) & 0xA825B800)) ^ v636 ^ v822)
       + 2080675563 * ((v818 ^ 0xC1DA7C3B) - v816);
  v824 = ((v822 >> 9) & 0x80 | (v822 >> 17) & 0x7F) ^ 0x94;
  v825 = STACK[0x6698];
  v826 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6698]) - 4222) - 8;
  v827 = STACK[0x6608];
  *(_BYTE *)(v827
           + ((-268106889
             - (LODWORD(STACK[0x65D8]) ^ 0x55AF9CD8 | 0xF0050377)
             + (LODWORD(STACK[0x65D8]) ^ 0x55AF9CD8 | 0xFFAFC88)) ^ 0x9047395DLL)) = v826[((v824 >> 7) & 0xFFFFFF01 | (2 * (v824 & 0x7F))) ^ 0x7ELL] ^ (((((v824 & 0x80) != 0) | (2 * (v824 & 0x7F))) ^ 0xD9) + 57) ^ 0x4A;
  v828 = (982658930
        - (LODWORD(STACK[0x65E8]) ^ 0xA9689768 | 0x3A922F72)
        + (LODWORD(STACK[0x65E8]) ^ 0xA9689768 | 0xC56DD08D)) ^ 0x4968C19E;
  v829 = (char *)*(&off_1015B46D0 + v825 - 4625) - 8;
  *(_BYTE *)(v827 + ((48249218 - (v828 | 0x2E03982) + (v828 | 0xFD1FC67D)) ^ 0x1260190A)) = (v829[HIBYTE(v823) ^ 0x99]
                                                                                           - 18) ^ 0xCA;
  v830 = ((2 * (LODWORD(STACK[0x6648]) ^ 0xD0AFD950)) & 0x65DD7042) - (LODWORD(STACK[0x6648]) ^ 0xD0AFD950) - 854505506;
  v831 = (char *)*(&off_1015B46D0 + (v825 ^ 0x186A)) - 8;
  *(_BYTE *)(v827 + (((v830 & 0x860C893E ^ 0x20C8829) + (v830 & 0x79F376C1) - 1) ^ 0xD5A04FAALL)) = v831[HIBYTE(v822) ^ 0xAELL] ^ 0xB1;
  *(_BYTE *)(v827 + STACK[0x65F0]) = v826[BYTE1(v823) ^ 0x1ALL] ^ ((BYTE1(v823) ^ 0xBD) + 57) ^ 0x1D;
  *(_BYTE *)(v827 + (LODWORD(STACK[0x65E0]) ^ 0xCA12590D)) = v826[BYTE2(v823) ^ 0x6DLL] ^ ((BYTE2(v823) ^ 0xCA) + 57) ^ 0x45;
  v832 = v819 ^ v810 ^ v817;
  v833 = STACK[0x6600];
  v834 = (char *)*(&off_1015B46D0 + (v825 ^ 0x1DB0)) - 4;
  *(_BYTE *)(v827
           + ((((2 * (((v833 & 0xFFFFFFF4 ^ 0x7535B0ED) - 1) ^ 0xA5581C1D)) | 0xDF34B21E)
             - (((v833 & 0xFFFFFFF4 ^ 0x7535B0ED) - 1) ^ 0xA5581C1D)
             - 1872386319) ^ 0x75E5ACF5)) = (v834[v832 ^ 0xE5] - 107) ^ 0x88;
  v835 = ((LODWORD(STACK[0x6650]) ^ 0x3F267AC0) - ((2 * (LODWORD(STACK[0x6650]) ^ 0x3F267AC0)) & 0x63D46280) + 837431617) ^ 0x3163F145;
  v836 = STACK[0xDAE0];
  v837 = STACK[0xDAE0];
  *(_BYTE *)(v836 + ((v835 - ((2 * v835) & 0xCD9FC160) + 1724899504) ^ 0x9372037DLL)) = v826[BYTE2(v832) ^ 0x43] ^ ((BYTE2(v832) ^ 0xE4) + 57) ^ 0x99;
  v838 = v818
       + 284926459 * (v812 - (v832 ^ v808))
       + 1886386194
       - ((2 * (v818 + 284926459 * (v812 - (v832 ^ v808)))) & 0xE0DFF024);
  *(_BYTE *)(v836 + STACK[0x6618]) = v826[HIBYTE(v838) ^ 5] ^ ((HIBYTE(v838) ^ 0xA2) + 57) ^ 0x14;
  *(_BYTE *)(v836 + STACK[0x6628]) = (v829[BYTE1(v822) ^ 0x11] - 18) ^ 0x93;
  *(_BYTE *)(v836 + (((v833 & 0x1C076408 ^ 0x18032009) + (v833 & 0xE3F89BF6 ^ 0x236012F7) - 2) ^ 0xF1716BF7)) = (v829[BYTE2(v838) ^ 0xEBLL] - 18) ^ 0x85;
  *(_BYTE *)(v836 + STACK[0x6610]) = (v834[HIBYTE(v832) ^ 0x27] - 107) ^ 0x7D;
  LODWORD(v829) = ((LODWORD(STACK[0x6620]) ^ 0xD1E4DAD0)
                 - ((2 * (LODWORD(STACK[0x6620]) ^ 0xD1E4DAD0)) & 0xF6CF6DA8)
                 + 2070394582) ^ 0xBF67A6D1;
  *(_BYTE *)(v836 + (((_DWORD)v829 - 449214798 - ((2 * (_DWORD)v829) & 0xCA732920) + 3550) ^ 0x3ACF074DLL)) = (v834[BYTE1(v832) ^ 0xFLL] - 107) ^ 0x72;
  v839 = ((LODWORD(STACK[0x6630]) ^ 0xD1316889) - ((2 * (LODWORD(STACK[0x6630]) ^ 0xD1316889)) & 0x388E5A62) - 1673056973) ^ 0x3FD7EA4D;
  *(_BYTE *)(v836 + ((-791062193 - v839 + ((2 * v839) | 0x5E4D3FE0) + 1729) ^ 0x97956908)) = v831[v823 ^ 0x82] ^ 0x48;
  *(_BYTE *)(v837 + STACK[0x65F8]) = v831[(((2 * (v838 ^ 0x23200022)) & 0x24001A0)
                                         - (v838 ^ 0x23200022u)
                                         - 1369800145) ^ 0x8D7A8287] ^ 0x88;
  v840 = ((LODWORD(STACK[0x6640]) ^ 0x530C49ED)
        + (v833 & 0xC7D54A2C ^ 0x84D10202)
        - ((LODWORD(STACK[0x6640]) ^ 0x530C49ED) & 0xC7D54A2C)) ^ 0xA175863E;
  *(_BYTE *)(v837 + ((v840 - ((2 * v840) & 0x56E84A62) - 1418451661) ^ 0x54CAF9C4)) = v831[BYTE1(v838) ^ 0xCFLL] ^ 0xE5;
  LODWORD(v831) = (v821 ^ 0xD6) + 1134401999 - ((2 * (v821 ^ 0xD6)) & 0xFFFFFF9F);
  *(_BYTE *)(STACK[0xDAE0] + STACK[0x6638]) = ((v821 ^ 0xA9) + 57) ^ 0xCD ^ v826[((v831 & 0x3181ED9 ^ 0xA0000640)
                                                                                + (v831 ^ 0x433DB89B)
                                                                                - ((v831 ^ 0x433DB89B) & 0xA02ED9)) ^ 0xA3181F55];
  STACK[0xDAF0] = v784;
  LODWORD(v826) = (((v833 ^ 0x8FC8B6C) - 150768492) ^ ((v833 ^ 0xFCE13B1A) + 52348134) ^ ((v833 ^ 0x3E0FE97E)
                                                                                        - 1041230206))
                - 709922975;
  LODWORD(v831) = (v826 ^ 0xE74ACDA7) & (2 * (v826 & 0xF462E9B7)) ^ v826 & 0xF462E9B7;
  v841 = ((2 * (v826 ^ 0x7CB9FEF)) ^ 0xE752ECB0) & (v826 ^ 0x7CB9FEF) ^ (2 * (v826 ^ 0x7CB9FEF)) & 0xF3A97658;
  LODWORD(v831) = (v841 ^ 0xE3006410) & (4 * (_DWORD)v831) ^ v831;
  v842 = ((4 * (v841 ^ 0x10A91248)) ^ 0xCEA5D960) & (v841 ^ 0x10A91248) ^ (4 * (v841 ^ 0x10A91248)) & 0xF3A97658;
  LODWORD(v831) = (v842 ^ 0xC2A15040) & (16 * (_DWORD)v831) ^ v831;
  v843 = ((16 * (v842 ^ 0x31082618)) ^ 0x3A976580) & (v842 ^ 0x31082618) ^ (16 * (v842 ^ 0x31082618)) & 0xF3A97650;
  LODWORD(v831) = v831 ^ 0xF3A97658 ^ (v843 ^ 0x32816400) & ((_DWORD)v831 << 8);
  LODWORD(v826) = v826 ^ (2
                                      * (((_DWORD)v831 << 16) & 0x73A90000 ^ v831 ^ (((_DWORD)v831 << 16) ^ 0x76580000) & (((v843 ^ 0xC1281258) << 8) & 0x73A90000 ^ 0x52890000 ^ (((v843 ^ 0xC1281258) << 8) ^ 0x29760000) & (v843 ^ 0xC1281258))));
  LODWORD(v831) = (((v826 ^ 0x41795D18) - 2085290263) ^ ((v826 ^ 0x39A58B8A) - 77059973) ^ ((v826 ^ 0x8FFCD395) + 1295085670))
                - 1913916862;
  v73 = v831 >= LODWORD(STACK[0x6668]);
  v844 = LODWORD(STACK[0x6660]) ^ (v831 < 0xC3D9993A);
  v845 = !v73;
  if (v844)
    v846 = STACK[0x6660];
  else
    v846 = v845;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v846 << 6) | (v846 << 7)) ^ v825)) - 12))();
}

uint64_t sub_100A87168()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = STACK[0x6520];
  v6 = LODWORD(STACK[0x6188]) ^ 0x8C250002 ^ (v0 ^ 0x48B7C913) & STACK[0x6500];
  v7 = (2 * (v6 - ((LODWORD(STACK[0x6520]) + 960767945) & (2 * v6))) + 960774412) ^ 0x1006412E;
  v8 = (v7 + v3 - (v2 & (2 * v7))) ^ v0;
  v9 = STACK[0x64D0];
  LODWORD(STACK[0x6660]) = (((((2 * (v8 & STACK[0x66F0] ^ 0x40000151)) & 0x74F39E66)
                            - (v8 & STACK[0x66F0] ^ 0x40000151)
                            + 1166422220) ^ 0x586319D) << LODWORD(STACK[0x64C0])) ^ ((v8 & STACK[0x64D0]) >> STACK[0x66E0]);
  v10 = 2 * ((v4 ^ 0x11023289) & STACK[0x6690] ^ LODWORD(STACK[0x6180]));
  v11 = v10 ^ 0x80181126;
  v12 = v10 & 0xB1D8D47C ^ 0x8090D021 ^ (v10 ^ 0x80181126) & (v4 ^ 0xC1B72C6E);
  v13 = (v4 ^ v1) + v11 + ((2 * (((2 * v12) & 0x6030D272) - v12) - 1613812340) ^ 0x61215279) + 1;
  LODWORD(STACK[0x6658]) = ((((v13 & STACK[0x68C0] & 0x24849704 ^ 0x24049304)
                            + (v13 & STACK[0x68C0] ^ 0xC0C80461)
                            - ((v13 & STACK[0x68C0] ^ 0xC0C80461) & 0x24849704)) ^ 0xE44C9365) << LODWORD(STACK[0x6AC0])) | ((v13 & v9) >> LODWORD(STACK[0x66D0]));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v5))();
}

uint64_t sub_100A87434()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6190]))
                            - ((LODWORD(STACK[0x6190]) + 962488834) & 0xC6A16D9D ^ 0x2119)))();
}

uint64_t sub_100A874A4()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = (uint64_t (*)(uint64_t))STACK[0x5A40];
  ((void (*)(unint64_t))STACK[0x5A40])(STACK[0xDAE8]);
  v3 = v2(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 ^ 0x360Cu) + 5893))(v3);
}

uint64_t sub_100A87504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE *v9;
  uint64_t v10;

  STACK[0xD1A8] = v6 - 32;
  v10 = (a6 - 16);
  *v9 = *(_BYTE *)(v7 + v10);
  v9[1] = *(_BYTE *)(v7 + (v10 | 1));
  v9[2] = *(_BYTE *)(v7 + (v10 | 2));
  v9[3] = *(_BYTE *)(v7 + (v10 | 3));
  v9[4] = *(_BYTE *)(v7 + (v10 | 4));
  v9[5] = *(_BYTE *)(v7 + (v10 | 5));
  v9[6] = *(_BYTE *)(v7 + (v10 | 6));
  v9[7] = *(_BYTE *)(v7 + (v10 | 7));
  v9[8] = *(_BYTE *)(v7 + (v10 | 8));
  v9[9] = *(_BYTE *)(v7 + (v10 | 9));
  v9[10] = *(_BYTE *)(v7 + (v10 | 0xA));
  v9[11] = *(_BYTE *)(v7 + (v10 | 0xB));
  v9[12] = *(_BYTE *)(v7 + (v10 | 0xC));
  v9[13] = *(_BYTE *)(v7 + (v10 | 0xD));
  v9[14] = *(_BYTE *)(v7 + (v10 | 0xE));
  v9[15] = *(_BYTE *)(v7 + (v10 | 0xF));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v8))();
}

uint64_t sub_100A87614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;

  v4 = 6 * (STACK[0x6508] ^ 0x18D7);
  v5 = STACK[0x6508] - 1404;
  STACK[0x7CC0] = STACK[0xCD30] + SLODWORD(STACK[0xA884]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v5 ^ 0x1A54)) - v4 + 13246))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A876CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = STACK[0x6508] + 9040;
  v5 = STACK[0x6508] - 1320;
  STACK[0xBE00] = STACK[0xCC90] + SLODWORD(STACK[0x78C4]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v4 + v5 - 11878)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = STACK[0x4D8C];
  v5 = STACK[0x6508] - 1293;
  STACK[0xCB50] = STACK[0x9620] + SLODWORD(STACK[0xBE90]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((v4 ^ 0x25A9) + v5)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = STACK[0x6508] + 9040;
  v5 = STACK[0x6508] - 1304;
  STACK[0x94C8] = STACK[0xAF00] + SLODWORD(STACK[0x6D8C]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v4 ^ v5 ^ 0x2836)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = STACK[0x6508];
  v5 = STACK[0x6508] ^ 0x23B0;
  STACK[0x9990] = STACK[0x86C0] + SLODWORD(STACK[0xAD40]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = v5 - 13266 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1312));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((int)v4 + 56)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A879B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;

  v4 = STACK[0x6508] + 9040;
  v5 = STACK[0x6508] - 1307;
  STACK[0x7420] = STACK[0xCFC0] + SLODWORD(STACK[0x7F6C]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v5 ^ 0x1BF5)) - (v4 ^ 0x33CE)))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  v4 = STACK[0x6508] + 9040;
  v5 = STACK[0x6508] - 1298;
  STACK[0x8208] = STACK[0x99E0] + SLODWORD(STACK[0x8114]);
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v5 ^ 0x1BCA));
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 - (v4 ^ 0x33CE)))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;

  v4 = 4418 * (STACK[0x6508] ^ 0x1075);
  v5 = STACK[0x6508] - 1289;
  STACK[0x6CB8] = STACK[0xAB30] + SLODWORD(STACK[0x7DAC]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v5 ^ 0x1BC3)) - (v4 ^ 0x33CE)))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = STACK[0x6508];
  v5 = (STACK[0x6508] - 2101515383) & 0x7D42B7C6;
  STACK[0x84A8] = STACK[0x7910] + SLODWORD(STACK[0xACAC]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = v5 - 13266 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1296));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((int)v4 + 56)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = STACK[0x6508];
  v5 = 94 * (STACK[0x6508] ^ 0x10FB);
  STACK[0x7790] = STACK[0x9BF0] + SLODWORD(STACK[0x9E88]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1321)) + (v5 ^ 0xFFFFFFFFFFFFCC32);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((int)v4 + 56)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;

  v4 = (STACK[0x6508] + 4362) | 0x1246;
  v5 = STACK[0x6508] - 1306;
  STACK[0xB7F8] = STACK[0x9058] + SLODWORD(STACK[0x87E0]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v5 ^ 0x1BF2)) - v4 + 13246))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0x9DB0] = STACK[0xA0A8] + SLODWORD(STACK[0xC954]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1383)) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v4 - 1383) ^ 0x1BA1)) - ((v4 + 9040) ^ 0x33CELL)))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0x8E28] = STACK[0xB4E0] + SLODWORD(STACK[0x9D68]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = (v4 ^ 0x23B0) - 13258 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1363));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v4 - 1363) ^ 0x1B8D)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A87FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0x6F98] = STACK[0x7B68] + SLODWORD(STACK[0x7D0C]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1288));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * ((int)v4 + 9040 + (int)v4 - 13198)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A8804C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0xAE30] = STACK[0xC7D0] + SLODWORD(STACK[0x73D4]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = (((_DWORD)v4 - 500816039) & 0x1DD9FBF6)
                - 13266
                + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1350));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * ((int)v4 + 56)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A8811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = STACK[0x6508] + 9040;
  v5 = STACK[0x6508] - 1373;
  STACK[0x8818] = STACK[0x77B0] + SLODWORD(STACK[0x8B94]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((v4 ^ 0x3653) + v5)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A881C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = (STACK[0x6508] - 2145244303) & 0x7FDDF7DE;
  v5 = STACK[0x6508] - 1295;
  STACK[0x8808] = STACK[0xB278] + SLODWORD(STACK[0x8258]);
  v6 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((v4 - 6141) ^ v5)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A88290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6508];
  STACK[0xABE0] = STACK[0xB238] + SLODWORD(STACK[0x8A98]);
  v5 = STACK[0x6AD8];
  STACK[0xB630] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 1302));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v4 ^ 0x1538) + v4 - 1302)) - 8))(a1, a2, a3, a4, 135307297, 169127105, 251919500, 412558368);
}

uint64_t sub_100A88350(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  STACK[0x6178] = v2;
  STACK[0x6080] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8
                                                                        * (int)(((*(_DWORD *)(STACK[0x7FB0]
                                                                                            - 0x28623712C9340CDELL) != -1926392733)
                                                                               * (STACK[0x6508] - 4133)) ^ (STACK[0x6508] + 547)))
                                                            - 12))(a1, a2, 3357935631);
}

uint64_t sub_100A883B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;

  v4 = STACK[0x6508] - 4214;
  v5 = *(_DWORD *)STACK[0x4D68];
  v6 = *(_DWORD *)STACK[0x4D60];
  v7 = ((_BYTE)v6 + (_BYTE)v5) & 7;
  v8 = v7 + (*(_DWORD *)(v3 - 0x28623712C9340E9ELL) >> 4) + 2146817916;
  v9 = (v8 & (((STACK[0x6508] + 250972160) & 0xF10A77FF) - 2146822129) | (2
                                                                        * (v8 & (((STACK[0x6508] + 250972160) & 0xF10A77FF)
                                                                               - 2146822129))) & 0x10A | 0x10) ^ (2 * (v8 & (((STACK[0x6508] + 250972160) & 0xF10A77FF) - 2146822129))) & (v8 ^ 0x10E081FF);
  v10 = (2 * (v8 ^ 0x10E081FF)) & 0x90EAA97A ^ 0x902AA90A ^ ((2 * (v8 ^ 0x10E081FF)) ^ 0x21D552F4) & (v8 ^ 0x10E081FF);
  v11 = (4 * v9) & 0x68A078 ^ v9 ^ v10 & 0x79E63C & (4 * v9);
  v12 = (4 * v10) & 0x90EAA978 ^ 0x90400812 ^ ((4 * v10) ^ 0x43AAA5E8) & v10;
  v13 = (16 * v11) & 0x90EAA970 ^ v11 ^ ((16 * v11) ^ 0x500) & v12;
  v14 = (16 * v12) & 0x90EAA970 ^ 0x9040285A ^ ((16 * v12) ^ 0xEAA97A0) & v12;
  v15 = v13 ^ 0x90EAA82A ^ (v13 << 8) & 0x90EAA900 ^ ((v13 << 8) ^ 0x15000) & v14;
  v16 = (32
       * ((v15 << 16) & 0xEA0000 ^ v15 ^ ((v15 << 16) ^ 0x17A0000) & ((v14 << 8) & 0xEA0000 ^ 0x420000 ^ ((v14 << 8) ^ 0x2A90000) & v14))) ^ (16 * v8);
  v17 = (((v16 ^ 0x8D3A4CE9) + 1776159525) ^ ((v16 ^ 0xDBAADD94) + 1062115930) ^ ((v16 ^ 0x4627366D) - 1564249695))
      + 1554375191;
  if ((((_BYTE)v6 + (_BYTE)v5) & 0xF) == 1)
    v18 = 0;
  else
    v18 = ((_BYTE)v6 + (_BYTE)v5) & 0xF;
  v19 = v7 + 1257275595;
  v20 = (v19 ^ 0x49A916F8) & (2 * (v19 & 0x1D)) ^ v19 & 0x1D;
  v21 = ((2 * (v19 ^ 0x49A916D2)) ^ 0x148921E) & (v19 ^ 0x49A916D2) ^ (2 * (v19 ^ 0x49A916D2)) & 0x2E;
  v22 = v21 ^ 0x21;
  v23 = (v21 ^ 0xFFFFFFCF) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x7299A7BC) & v22 ^ (4 * v22) & 0x7CA669EC;
  v25 = (v24 ^ 0xF08021A0) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0xC264843)) ^ 0x4A669EF0) & (v24 ^ 0xC264843) ^ (16 * (v24 ^ 0xC264843)) & 0x7CA669E0;
  v27 = v25 ^ 0xFCA669EF ^ (v26 ^ a3) & (v25 << 8);
  v28 = (32
       * ((v27 << 16) & 0x4A60000 ^ v27 ^ ((v27 << 16) ^ 0x1EF0000) & (((v26 ^ 0x3480610F) << 8) & 0x4A60000 ^ 0x860000 ^ (((v26 ^ 0x3480610F) << 8) ^ 0x6690000) & (v26 ^ 0x3480610F)))) ^ (16 * v19);
  v29 = ((v28 ^ 0x9D775CEA) - 545005393) ^ ((v28 ^ 0xAC0DC6AC) - 285639959) ^ ((v28 ^ 0xE1805476) - 1552619469);
  v30 = ((v6 - v5) & 0xB) + (*(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340EB2) >> 4) + 1695656418;
  v31 = (v30 ^ 0x10EE141F) & (2 * (v30 & 0x1AEE561F)) ^ v30 & 0x1AEE561F;
  v32 = ((2 * (v30 ^ 0xB6981D)) ^ 0x34B19C04) & (v30 ^ 0xB6981D) ^ (2 * (v30 ^ 0xB6981D)) & 0x9A58CE02;
  v33 = v32 ^ 0x8A484202;
  v34 = (v32 ^ 0x10108A02) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0x69633808) & v33 ^ (4 * v33) & 0x9A58CE00;
  v36 = (v35 ^ 0x8400802) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x9218C602)) ^ 0xA58CE020) & (v35 ^ 0x9218C602) ^ (16 * (v35 ^ 0x9218C602)) & 0x9A58CE00;
  v38 = v36 ^ 0x9A58CE02 ^ (v37 ^ 0x8008C002) & (v36 << 8);
  v39 = (32
       * ((v38 << 16) & 0x2580000 ^ v38 ^ ((v38 << 16) ^ 0x6020000) & (((v37 ^ 0x1A500E02) << 8) & 0x9A580000 ^ 0x2100000 ^ (((v37 ^ 0x1A500E02) << 8) ^ 0xCE0000) & (v37 ^ 0x1A500E02)))) ^ (16 * v30);
  v40 = ((v39 ^ 0x6A6BE8CB) - 933489317) ^ ((v39 ^ 0x1930F3EF) - 1157165441) ^ ((v39 ^ 0xD6A7BA94) + 1955612422);
  LODWORD(STACK[0x6180]) = v18;
  LODWORD(STACK[0x6108]) = v29 - 1888287528;
  LODWORD(STACK[0x60F8]) = v40 + 1716568977;
  LODWORD(STACK[0x6110]) = v17;
  v41 = ((((48 * v18 + 48) ^ 0x7C08137) + 1162634547) ^ (((48 * v18 + 48) ^ 0x72512A5C) + 819842650) ^ (((48 * v18 + 48) ^ 0x7591AB6B) + 924667759))
      + v29
      - 1888287528
      + v40
      + 1716568977
      + v17
      - 589577723;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(v4 ^ 0x246E ^ (31615 * (((v41 ^ ~v4) & (v4 - v41) | v4 & ~v41) >> 31)))))();
}

uint64_t sub_100A88A70@<X0>(unint64_t a1@<X0>, unint64_t a2@<X3>, int a3@<W8>)
{
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  STACK[0x6078] = a2;
  v4 = a3 + 21105;
  v5 = (a3 - 1138067969) & 0x43D59A76;
  v6 = (a3 + 4144) | 0x46;
  v7 = (uint64_t (*)(void))STACK[0x5510];
  STACK[0x6188] = v3;
  STACK[0x6080] = a1;
  v8 = v7();
  STACK[0xB2D0] = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((((v5 ^ 0xFFFFFFEF) + v6) * (v8 == 0)) ^ v4)) - 8))();
}

uint64_t sub_100A88B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  STACK[0x6070] = v1 - 0x28623712C9340EAELL;
  STACK[0x64B8] = v2 - 0x28623712C9340ED2;
  STACK[0x6528] = STACK[0xBC80];
  STACK[0x6190] = STACK[0xB0C8];
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 + 8632)) - 8))(a1, &off_1015B46D0, 1772489163, STACK[0x60C0], STACK[0x60B8]);
}

uint64_t sub_100A88B9C(uint64_t a1, uint64_t a2, int a3, _QWORD *a4, _DWORD *a5)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unint64_t v11;

  v10 = ((*(_DWORD *)(*a4 + (*a5 & 0x4564F774)) ^ (v8 + v5)) & 0x7FFFFFFF) * a3;
  v11 = (v10 ^ HIWORD(v10)) * a3;
  *(_BYTE *)(v8 + v5) = *(_BYTE *)((v11 >> 24) + *(_QWORD *)(a2 + 8 * (v9 - 3528)) + 1) ^ *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v9 - 4156)) + (v11 >> 24) - 12) ^ *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v9 ^ 0x11FA)) + (v11 >> 24)) ^ v11 ^ (-59 * BYTE3(v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((21200 * (((v9 + 1892140248) & 0x8F382BFF ^ 0xFFFFFEB1) + v7 == 0)) ^ v6))
                            - 8))();
}

uint64_t sub_100A88C6C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  unint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  BOOL v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  _BOOL4 v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(void);

  v7 = STACK[0x60F8];
  v8 = ((2 * (v7 ^ 0x723E4C0F)) ^ 0xC7BB5884) & (v7 ^ 0x723E4C0F) ^ (2 * (v7 ^ 0x723E4C0F)) & 0xE3DDAC42;
  v9 = ((4 * (v8 ^ 0x2044A442)) ^ 0x8F76B108) & (v8 ^ 0x2044A442) ^ (4 * (v8 ^ 0x2044A442)) & 0xE3DDAC40;
  v10 = 2 * (STACK[0x60F8] & 0x91E3E04D);
  v11 = (v8 ^ 0xE3D92400) & (4 * (v10 & (v7 ^ 0x51FBCC0D) ^ v7 & 0x91E3E04D)) ^ v10 & (v7 ^ 0x51FBCC0D) ^ v7 & 0x91E3E04D;
  v12 = v11 ^ 0xE3DDAC42 ^ (v9 ^ 0x8354A000) & (16 * v11);
  v13 = (16 * (v9 ^ 0x60890C42)) & 0xE3DDAC40 ^ 0xC2052842 ^ ((16 * (v9 ^ 0x60890C42)) ^ 0x3DDAC420) & (v9 ^ 0x60890C42);
  v14 = (v12 << 8) & 0xE3DDAC00 ^ v12 ^ ((v12 << 8) ^ 0xDDAC4200) & v13;
  v15 = LODWORD(STACK[0x60F8]) ^ (2
                                * ((v14 << 16) & 0x63DD0000 ^ v14 ^ ((v14 << 16) ^ 0x2C420000) & ((v13 << 8) & 0xE3DD0000 ^ 0x22510000 ^ ((v13 << 8) ^ 0x5DAC0000) & v13)));
  LODWORD(STACK[0x6068]) = (((v15 ^ 0xA99BC543) - 1180858430) ^ ((v15 ^ 0x41FB9275) + 1375588600) ^ ((v15 ^ 0x7DA0EFFF) + 1839639934))
                         - 409413920;
  LODWORD(STACK[0x6060]) = v15 ^ 0x129AB93F;
  v16 = ((2 * ((v5 + 1034747355) ^ 0x10B5D328)) ^ 0xBA95E4DE) & ((v5 + 1034747355) ^ 0x10B5D328) ^ (2
                                                                                                  * ((v5 + 1034747355) ^ 0x10B5D328)) & 0xDD4AF26E;
  v17 = ((2 * (v7 ^ 0xC5E554C5)) ^ 0xA80D6910) & (v7 ^ 0xC5E554C5) ^ (2 * (v7 ^ 0xC5E554C5)) & 0x5406B488;
  v18 = ((4 * (v17 ^ 0x54029488)) ^ 0x501AD220) & (v17 ^ 0x54029488) ^ (4 * (v17 ^ 0x54029488)) & 0x5406B488;
  v19 = ((4 * (v16 ^ 0x454A1221)) ^ 0x752BC9BC) & (v16 ^ 0x454A1221) ^ (4 * (v16 ^ 0x454A1221)) & 0xDD4AF26C;
  v20 = ((v5 + 1034747355) ^ 0x89FF9126) & (2 * ((v5 + 1034747355) & 0xCDFF2147)) ^ (v5 + 1034747355) & 0xCDFF2147;
  v21 = ((16 * (v19 ^ 0x88403243)) ^ 0xD4AF26F0) & (v19 ^ 0x88403243) ^ (16 * (v19 ^ 0x88403243)) & 0xDD4AF260;
  v22 = (v19 ^ 0x550AC020) & (16 * ((v16 ^ 0x1802900D) & (4 * v20) ^ v20)) ^ (v16 ^ 0x1802900D) & (4 * v20) ^ v20;
  v23 = ((16 * (v18 ^ 0x4042488)) ^ 0x406B4880) & (v18 ^ 0x4042488) ^ (16 * (v18 ^ 0x4042488)) & 0x5406B480;
  LODWORD(STACK[0x6058]) = (v5 + 1034747355) ^ (2
                                              * (((v22 ^ 0xDD4AF26F ^ (v21 ^ 0xD40A2200) & (v22 << 8)) << 16) & 0x5D4A0000 ^ v22 ^ 0xDD4AF26F ^ (v21 ^ 0xD40A2200) & (v22 << 8) ^ (((v22 ^ 0xDD4AF26F ^ (v21 ^ 0xD40A2200) & (v22 << 8)) << 16) ^ 0x726F0000) & (((v21 ^ 0x940D00F) << 8) & 0x5D4A0000 ^ 0x15080000 ^ (((v21 ^ 0x940D00F) << 8) ^ 0x4AF20000) & (v21 ^ 0x940D00F)))) ^ 0x50A4C46F;
  v24 = (v17 ^ 0x10041480) & (4 * (v10 & (v7 ^ 0xC5E3D44D) ^ v7 & 0x91E3E04D)) ^ v10 & (v7 ^ 0xC5E3D44D) ^ v7 & 0x91E3E04D;
  v25 = (v18 ^ 0x50029008) & (16 * v24) ^ v24 ^ 0x5406B488 ^ (v23 ^ 0x40020008) & (((v18 ^ 0x50029008) & (16 * v24) ^ v24) << 8);
  LODWORD(STACK[0x6170]) = (127
                          - (((v7 ^ (2
                                   * ((v25 << 16) & 0x54000000 ^ v25 ^ ((v25 << 16) ^ 0x34800000) & (((v23 ^ 0x1404B408) << 8) & 0x54060000 ^ 0x50000000 ^ (((v23 ^ 0x1404B408) << 8) ^ 0x6B40000) & (v23 ^ 0x1404B408u))))) >> 24) ^ 0x11)) ^ 0x2C;
  v26 = ((2 * (v7 ^ 0xAD0F5A99)) ^ 0x79D975A8) & (v7 ^ 0xAD0F5A99) ^ (2 * (v7 ^ 0xAD0F5A99)) & 0x3CECBAD4;
  v27 = ((2 * (v7 ^ 0xB54CE56C)) ^ 0x495E0A42) & (v7 ^ 0xB54CE56C) ^ (2 * (v7 ^ 0xB54CE56C)) & 0x24AF0520;
  v28 = ((4 * (v26 ^ 0x4248A54)) ^ 0xF3B2EB50) & (v26 ^ 0x4248A54) ^ (4 * (v26 ^ 0x4248A54)) & 0x3CECBAD4;
  v29 = ((4 * (v27 ^ 0x24A10521)) ^ 0x92BC1484) & (v27 ^ 0x24A10521) ^ (4 * (v27 ^ 0x24A10521)) & 0x24AF0520;
  v30 = ((16 * (v28 ^ 0xC4C1084)) ^ 0xCECBAD40) & (v28 ^ 0xC4C1084) ^ (16 * (v28 ^ 0xC4C1084)) & 0x3CECBAD0;
  v31 = (v26 ^ 0x8A80800) & (4 * (v10 & (v7 ^ 0x8DCBDA09) ^ v7 & 0x91E3E04D)) ^ v10 & (v7 ^ 0x8DCBDA09) ^ v7 & 0x91E3E04D;
  v32 = (v28 ^ 0x30A0AA50) & (16 * v31) ^ v31 ^ 0x3CECBAD4 ^ (v30 ^ 0xCC8A800) & (((v28 ^ 0x30A0AA50) & (16 * v31) ^ v31) << 8);
  v33 = (v27 ^ 0x202E0401) & (4 * (v10 & (v7 ^ 0x95CBE56C) ^ v7 & 0x91E3E04D)) ^ v10 & (v7 ^ 0x95CBE56C) ^ v7 & 0x91E3E04D;
  v34 = v7 ^ (2
            * ((v32 << 16) & 0x3CEC0000 ^ v32 ^ ((v32 << 16) ^ 0x3AD40000) & (((v30 ^ 0x30241294) << 8) & 0x3CEC0000 ^ 0x10440000 ^ (((v30 ^ 0x30241294) << 8) ^ 0xECBA0000) & (v30 ^ 0x30241294))));
  v35 = ((v7 ^ (2
              * (((16 * (v29 ^ 0x24030121)) & 0x24AF0520 ^ 0xA00000 ^ ((16 * (v29 ^ 0x24030121)) ^ 0x4AF05200) & (v29 ^ 0x24030121)) & (((v29 ^ 0xAC0401) & (16 * v33) ^ v33) << 8) ^ (v29 ^ 0xAC0401) & (16 * v33) ^ v33))) >> 8) ^ 0xFFFFFFE0;
  LODWORD(STACK[0x6AC0]) = v35 - ((2 * v35) & 0x60);
  LODWORD(STACK[0x616C]) = ((HIWORD(v34) ^ 0xFFFFFFB2) - 2 * ((HIWORD(v34) ^ 0xFFFFFFB2) & 7 ^ HIWORD(v34) & 1) + 6) ^ 0xFFFFFFDD;
  v36 = ((2 * (v7 ^ 0xDBE0DA63)) ^ 0x9406745C) & (v7 ^ 0xDBE0DA63) ^ (2 * (v7 ^ 0xDBE0DA63)) & 0x4A033A2E;
  v37 = (v36 ^ 0x2080E) & (4 * (v10 & (v7 ^ 0xD9E3DA69) ^ v7 & 0x91E3E04D)) ^ v10 & (v7 ^ 0xD9E3DA69) ^ v7 & 0x91E3E04D;
  LODWORD(STACK[0x6AB0]) = ((4 * (v36 ^ 0x4A010A22)) & 0x4A033A2C ^ ((4 * (v36 ^ 0x4A010A22)) ^ 0x280CE8B0) & (v36 ^ 0x4A010A22) ^ 0x20) & (16 * v37) ^ v37;
  v38 = HIBYTE(v6) - ((v6 >> 23) & 0x70);
  LODWORD(STACK[0x6160]) = ((v6 >> 8) - ((v6 >> 7) & 0x1FFFFB2) + 89) ^ 0x3B;
  v39 = STACK[0x6108];
  v40 = ((2 * (v39 ^ 0x1C161A9C)) ^ 0x84D1245E) & (v39 ^ 0x1C161A9C) ^ (2 * (v39 ^ 0x1C161A9C)) & 0xC268922E;
  v41 = ((2 * (v39 ^ 0xBA8C9A3E)) ^ 0xC9E4251A) & (v39 ^ 0xBA8C9A3E) ^ (2 * (v39 ^ 0xBA8C9A3E)) & 0x64F2128C;
  v42 = ((4 * (v40 ^ 0x42289221)) ^ 0x9A248BC) & (v40 ^ 0x42289221) ^ (4 * (v40 ^ 0x42289221)) & 0xC268922C;
  v43 = STACK[0x6108] & 0xDE7E88B3;
  v44 = (v40 ^ 0x8040902D) & (4 * ((2 * v43) & (v39 ^ 0x9C7E0ABA) ^ v43)) ^ (2 * v43) & (v39 ^ 0x9C7E0ABA) ^ v43;
  v45 = (v41 ^ 0x44E01009) & (4 * ((2 * v43) & (v39 ^ 0x9E7C8A3A) ^ v43)) ^ (2 * v43) & (v39 ^ 0x9E7C8A3A) ^ v43;
  v46 = ((4 * (v41 ^ 0x24121285)) ^ 0x93C84A34) & (v41 ^ 0x24121285) ^ (4 * (v41 ^ 0x24121285)) & 0x64F2128C;
  v47 = ((16 * (v42 ^ 0xC2489203)) ^ 0x268922F0) & (v42 ^ 0xC2489203) ^ (16 * (v42 ^ 0xC2489203)) & 0xC2689220;
  v48 = (v42 ^ 0x200023) & (16 * v44) ^ v44 ^ 0xC268922F ^ (v47 ^ 0x208020F) & (((v42 ^ 0x200023) & (16 * v44) ^ v44) << 8);
  v49 = v45 ^ 0x64F2128D ^ (v46 ^ 0xC00209) & (16 * v45);
  v50 = (v48 << 16) & 0x42000000 ^ v48 ^ ((v48 << 16) ^ 0x12000000) & (((v47 ^ 0xC060900F) << 8) & 0xC2680000 ^ (((v47 ^ 0xC060900F) << 8) ^ 0x68920000) & (v47 ^ 0xC060900F) ^ 0x2000000);
  v51 = (((v39 ^ (2 * v50)) >> 24) ^ 0x5E) - ((2 * (((v39 ^ (2 * v50)) >> 24) ^ 0x5E)) & 0x2A);
  v52 = (16 * (v46 ^ 0x64321089)) & 0x64F21280 ^ 0x20D2120D ^ ((16 * (v46 ^ 0x64321089)) ^ 0x4F2128D0) & (v46 ^ 0x64321089);
  v53 = (v49 << 8) & 0x64F21200 ^ v49 ^ ((v49 << 8) ^ 0xF2128D00) & v52;
  v54 = ((2 * (v39 ^ 0x2B4404B9)) ^ 0xEA751814) & (v39 ^ 0x2B4404B9) ^ (2 * (v39 ^ 0x2B4404B9)) & 0xF53A8C0A;
  v55 = (v53 << 16) & 0x64F20000 ^ v53 ^ ((v53 << 16) ^ 0x128D0000) & ((v52 << 8) & 0x64F20000 ^ 0x4E00000 ^ ((v52 << 8) ^ 0x72120000) & v52);
  v56 = ((4 * (v54 ^ 0x150A840A)) ^ 0xD4EA3028) & (v54 ^ 0x150A840A) ^ (4 * (v54 ^ 0x150A840A)) & 0xF53A8C08;
  LODWORD(STACK[0x6158]) = ((((LODWORD(STACK[0x6108]) ^ (2 * v55)) >> 16) ^ 0xFFFFFFBE)
                          - ((2 * (((LODWORD(STACK[0x6108]) ^ (2 * v55)) >> 16) ^ 0xFFFFFFBE)) & 0xFFFFFFDC)
                          + 110) ^ 0xFFFFFFB5;
  v57 = (v54 ^ 0xE4308002) & (4 * ((2 * v43) & (v39 ^ 0x9F7C04BB) ^ v43)) ^ (2 * v43) & (v39 ^ 0x9F7C04BB) ^ v43;
  v58 = ((2 * (v39 ^ 0xC48D0020)) ^ 0x35E71126) & (v39 ^ 0xC48D0020) ^ (2 * (v39 ^ 0xC48D0020)) & 0x1AF38892;
  v59 = v39 ^ (2
             * (((16 * (v56 ^ 0x21108C02)) & 0x753A8C00 ^ 0x51288000 ^ ((16 * (v56 ^ 0x21108C02)) ^ 0x53A8C000) & (v56 ^ 0x21108C02)) & (((v56 ^ 0xD42A0002) & (16 * v57) ^ v57) << 8) ^ (v56 ^ 0xD42A0002) & (16 * v57) ^ v57));
  v60 = (v59 >> 8) ^ 0xFFFFFF88;
  v61 = (v59 >> 7) & 0x1FFFF92;
  v62 = (v58 ^ 0x10E28800) & (4 * ((2 * v43) & (v39 ^ 0xDC7C0022) ^ v43)) ^ (2 * v43) & (v39 ^ 0xDC7C0022) ^ v43;
  v63 = v60 + (v61 ^ 0xFFFFFFEF);
  v64 = (((4 * (v58 ^ 0xA108891)) ^ 0x6BCE2240) & (v58 ^ 0xA108891) ^ (4 * (v58 ^ 0xA108891)) & 0x1AF38890) & (16 * v62) ^ v62;
  LODWORD(STACK[0x6050]) = v6 - v4;
  if (v6)
    v65 = v6 - v4 == -130767906;
  else
    v65 = 1;
  v66 = v65;
  LODWORD(STACK[0x6048]) = v66;
  v67 = STACK[0x6110];
  v68 = ((2 * (v67 ^ 0xBB8CD3E8)) ^ 0x2915CA45 ^ (a1 + 1264426557) & 0xB4A277F7) & (v67 ^ 0xBB8CD3E8) ^ (2 * (v67 ^ 0xBB8CD3E8)) & 0x148AEEE2;
  v69 = ((4 * (v68 ^ 0x148A2221)) ^ 0x522BBB8C) & (v68 ^ 0x148A2221) ^ (4 * (v68 ^ 0x148A2221)) & 0x148AEEE0;
  v70 = v69 ^ 0x100AAA83;
  v71 = v69 ^ 0x4804463;
  v72 = 2 * (STACK[0x6110] & 0xAF063D0B);
  v73 = (v68 ^ 0x82CE41) & (4 * (v72 & (v67 ^ 0xAF84B9EA) ^ v67 & 0xAF063D0B)) ^ v72 & (v67 ^ 0xAF84B9EA) ^ v67 & 0xAF063D0B;
  v74 = ((16 * v71) ^ 0x48AEEE30) & v71 ^ (16 * v71) & 0x148AEEE0;
  v75 = v70 & (16 * v73) ^ v73 ^ 0x148AEEE3 ^ (v74 ^ 0x8AEEC3) & ((v70 & (16 * v73) ^ v73) << 8);
  *(_QWORD *)v3 = 0xB159894418A156B9;
  v76 = ((2 * (v67 ^ 0xF7AAA2E9)) ^ 0xB1593FC4) & (v67 ^ 0xF7AAA2E9) ^ (2 * (v67 ^ 0xF7AAA2E9)) & 0x58AC9FE2;
  v77 = (v75 << 16) & 0x14800000 ^ v75 ^ ((v75 << 16) ^ 0xEEEEEEEE) & (((v74 ^ 0x140000C3) << 8) & 0x148A0000 ^ 0x14000000 ^ (((v74 ^ 0x140000C3) << 8) ^ 0xAEE0000) & (v74 ^ 0x140000C3));
  v78 = ((4 * (v76 ^ 0x48A48022)) ^ 0x62B27F88) & (v76 ^ 0x48A48022) ^ (4 * (v76 ^ 0x48A48022)) & 0x58AC9FE0;
  *(_BYTE *)(v3 + 8) = ((((v67 ^ (2 * v77)) >> 24) ^ 0x8F) - ((2 * (((v67 ^ (2 * v77)) >> 24) ^ 0x8F)) & 0x90) + 72) ^ 0x1B;
  v79 = ((2 * (v67 ^ 0xF0DFF33C)) ^ 0xBFB39C6E) & (v67 ^ 0xF0DFF33C) ^ (2 * (v67 ^ 0xF0DFF33C)) & 0x5FD9CE36;
  v80 = ((16 * (v78 ^ 0x180C8062)) ^ 0x8AC9FE20) & (v78 ^ 0x180C8062) ^ (16 * (v78 ^ 0x180C8062)) & 0x58AC9FE0;
  v81 = (v76 ^ 0x108C1C42) & (4 * (v72 & (v67 ^ 0xAFA6B8EB) ^ v67 & 0xAF063D0B)) ^ v72 & (v67 ^ 0xAFA6B8EB) ^ v67 & 0xAF063D0B;
  v82 = (v78 ^ 0x40A01F82) & (16 * v81) ^ v81 ^ 0x58AC9FE2 ^ (v80 ^ 0x8889EC2) & (((v78 ^ 0x40A01F82) & (16 * v81) ^ v81) << 8);
  v83 = ((4 * (v79 ^ 0x40484211)) ^ 0x7F6738DC) & (v79 ^ 0x40484211) ^ (4 * (v79 ^ 0x40484211)) & 0x5FD9CE34;
  v84 = ((v67 ^ (2
               * ((v82 << 16) & 0x58AC0000 ^ v82 ^ ((v82 << 16) ^ 0x1FE20000) & (((v80 ^ 0x502401C2) << 8) & 0x58AC0000 ^ 0x50200000 ^ (((v80 ^ 0x502401C2) << 8) ^ 0x2C9F0000) & (v80 ^ 0x502401C2))))) >> 16) ^ 0x1F;
  *(_BYTE *)(v3 + 9) = (v84 - ((2 * v84) & 0x33) - 103) ^ 0x42;
  v85 = (v79 ^ 0x1C118C24) & (4 * (v72 & (v67 ^ 0xAED7B92A) ^ v67 & 0xAF063D0B)) ^ v72 & (v67 ^ 0xAED7B92A) ^ v67 & 0xAF063D0B;
  v86 = ((v67 ^ (2
               * (((16 * (v83 ^ 0x98C623)) & 0x5FD9CE30 ^ 0x5D98C200 ^ ((16 * (v83 ^ 0x98C623)) ^ 0x7D9CE300) & (v83 ^ 0x98C623)) & (((v83 ^ 0x5F410810) & (16 * v85) ^ v85) << 8) ^ (v83 ^ 0x5F410810) & (16 * v85) ^ v85))) >> 8) ^ 0x3D;
  LOBYTE(v84) = ((2 * (v67 ^ 0xC4)) ^ 0x9E) & (v67 ^ 0xC4) ^ (2 * (v67 ^ 0xC4)) & 0xCE;
  *(_BYTE *)(v3 + 10) = (v86 - ((2 * v86) & 0xF4) + 122) ^ 0x34;
  STACK[0x60F0] = v1 + 1844546955;
  v87 = STACK[0x6188] - ((2 * STACK[0x6188]) & 0xFFFFFFB6) + 91;
  LOBYTE(v72) = (v84 ^ 0xD) & (4 * (v72 & (v67 ^ 0xC2) ^ v67 & 0xB)) ^ v72 & (v67 ^ 0xC2) ^ v67 & 0xB;
  LODWORD(STACK[0x6150]) = (v51 + 21) ^ 0x46;
  v88 = v67 ^ (2 * ((((4 * (v84 ^ 0x41)) ^ 0x3C) & (v84 ^ 0x41) ^ (4 * (v84 ^ 0x41)) & 0xC0) & (16 * v72) ^ v72));
  v89 = STACK[0x6188];
  LODWORD(STACK[0x6148]) = v87 ^ 0x32;
  *(_BYTE *)(v3 + 11) = v88 ^ 0x46;
  *(_BYTE *)(v3 + 12) = (HIBYTE(v2) - ((v2 >> 23) & 0x94) + 74) ^ 0xC;
  LODWORD(STACK[0x6040]) = v5 + 1035725939;
  LODWORD(STACK[0x6140]) = (LODWORD(STACK[0x6AC0]) - 80) ^ 0xFFFFFFFE;
  LODWORD(STACK[0x6138]) = v7 ^ (2 * LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6130]) = (v38 - 72) ^ 0xFFFFFFFE;
  *(_BYTE *)(v3 + 13) = (BYTE2(v2) - ((v2 >> 15) & 0x9C) + 78) ^ 0x32;
  *(_BYTE *)(v3 + 14) = (BYTE1(v2) - ((v2 >> 7) & 0x7A) + 61) ^ 0x5F;
  LODWORD(STACK[0x6128]) = ((~(v89 >> 15) | 5) + WORD1(v89) - 2) ^ 0xFFFFFF81;
  LODWORD(STACK[0x6120]) = (v63 + 74) ^ 7;
  LODWORD(STACK[0x6118]) = v39 ^ (2 * v64) ^ 0xFFFFFFFE;
  *(_BYTE *)(v3 + 15) = (v2 - ((2 * v2) & 0xC8) + 100) ^ 0xD;
  v90 = STACK[0x6AD8];
  STACK[0x8958] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12;
  STACK[0x60E8] = v4 - 130767906;
  STACK[0x6038] = (v4 - 130767922);
  STACK[0x6030] = (v4 - 130767921);
  STACK[0x6028] = (v4 - 130767920);
  STACK[0x6020] = (v4 - 130767919);
  STACK[0x6018] = (v4 - 130767918);
  STACK[0x6010] = (v4 - 130767917);
  STACK[0x6008] = (v4 - 130767916);
  STACK[0x6000] = (v4 - 130767915);
  STACK[0x5FF8] = (v4 - 130767914);
  STACK[0x5FF0] = (v4 - 130767913);
  STACK[0x5FE8] = (v4 - 130767912);
  STACK[0x5FE0] = (v4 - 130767911);
  STACK[0x5FD8] = (v4 - 130767910);
  STACK[0x5FD0] = (v4 - 130767909);
  STACK[0x5FC8] = (v4 - 130767908);
  STACK[0x5FC0] = (v4 - 130767907);
  v91 = v2 - v5 == 195829538 || v2 == 0;
  LODWORD(STACK[0x5FB8]) = v91;
  STACK[0x5FB0] = v3 + 0x5E39224396782A6FLL;
  v92 = v3 + 16;
  STACK[0x60B0] = v3 + 16 + v5 + 195829538;
  STACK[0x5FA8] = (v5 + 195829522);
  STACK[0x5FA0] = (v5 + 195829523);
  STACK[0x5F98] = (v5 + 195829524);
  STACK[0x5F90] = (v5 + 195829525);
  STACK[0x5F88] = (v5 + 195829526);
  STACK[0x5F80] = (v5 + 195829527);
  STACK[0x5F78] = (v5 + 195829528);
  STACK[0x5F70] = (v5 + 195829529);
  STACK[0x5F68] = (v5 + 195829530);
  STACK[0x5F60] = (v5 + 195829531);
  STACK[0x5F58] = (v5 + 195829532);
  STACK[0x5F50] = (v5 + 195829533);
  STACK[0x5F48] = (v5 + 195829534);
  STACK[0x5F40] = (v5 + 195829535);
  STACK[0x5F38] = (v5 + 195829536);
  STACK[0x5F30] = (v5 + 195829537);
  STACK[0xC108] = STACK[0x6190];
  STACK[0xC8B8] = STACK[0x6528];
  STACK[0xAAD0] = v3 + 0x778E069994F0EBC0;
  v93 = *(_QWORD *)(v90 + 8 * ((int)a1 + 19603));
  STACK[0xB930] = v3;
  v94 = (uint64_t (*)(void))(v93 - 12);
  LODWORD(STACK[0x6198]) = 16 * LODWORD(STACK[0x6180]);
  STACK[0x60C8] = v3 + 16;
  if (v2 - v5 == 195829538)
    v92 = STACK[0x6070];
  STACK[0x5F28] = v92;
  return v94();
}

uint64_t sub_100A8A174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v8 = STACK[0x6508] + 15723;
  v9 = STACK[0x6508] - 3767;
  v10 = STACK[0xC600] + SLODWORD(STACK[0xB794]);
  STACK[0xA540] = v10;
  *(_QWORD *)v10 = 0xDA9DE26520650537;
  *(_BYTE *)(v10 + 8) = STACK[0x6150];
  *(_BYTE *)(v10 + 9) = STACK[0x6158];
  *(_BYTE *)(v10 + 10) = STACK[0x6120];
  *(_BYTE *)(v10 + 11) = STACK[0x6118];
  *(_DWORD *)(v10 + 12) = 425884742;
  STACK[0xB930] = v10;
  STACK[0xAAD0] = v10 + 0x778E069994F0EBC0;
  STACK[0xC8B8] = v7;
  STACK[0xC108] = a7;
  v11 = STACK[0x6AD8];
  STACK[0x8958] = v8 - 19941 + *(_QWORD *)(STACK[0x6AD8] + 8 * v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (v9 ^ 0x44B3)))(a1, a2, a3, a4, a5, 562132829);
}

uint64_t sub_100A8A290()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 13918) ^ 0x178FLL)))();
}

uint64_t sub_100A8A2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7)
{
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  STACK[0xCE90] = v9;
  STACK[0x8530] = a7;
  v10 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a6 != (v7 ^ 0x218160CE)) * ((v7 - 1805) ^ 0x46A0)) ^ v7));
  STACK[0x6528] = v8;
  return v10();
}

uint64_t sub_100A8A2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (((v7
                                                                                             + 1251215360
                                                                                             - a6
                                                                                             + 1750 == (((v6 ^ 0x2EA9) - 843604334) & 0x32483F7F) + 689078349)
                                                                                            * (((v6 ^ 0x2EA9) - 321338155) & 0x13274FF3 ^ 0x4DE5)) ^ v6 ^ 0x2EA9))
                                                                              - 4))(a1, a2, a3, 3027335016, 4244492136);
}

uint64_t sub_100A8A398()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v1 - 10012) ^ (v1 - 15741) ^ 0x355B)
                                          * ((unint64_t)v0 - 17 > 0xFFFFFFFFFFFFFFEFLL)) ^ v1))
                            - 12))();
}

uint64_t sub_100A8A400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  char v9;

  v5 = v4 - STACK[0x4500];
  v6 = v4 - STACK[0x44F8];
  v7 = v6 < 0x10;
  if ((unint64_t)(v4 - v3) < 0x10 || v5 < ((v2 - 5729) ^ 0x1066uLL))
    v7 = 1;
  v9 = (unint64_t)(v4 - a1 + v1) < 0x10 || v7;
  if (v4 - v3 < (((v2 - 4752) | 0x210u) ^ 0x1647uLL))
    v9 = 1;
  if (v5 < 0x10)
    v9 = 1;
  if (v6 < 0x10)
    v9 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7289 * (v9 & 1)) ^ v2)) - 8))();
}

uint64_t sub_100A8A49C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1509)) - 8))();
}

uint64_t sub_100A8A4B4@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(v5 + a2) = *(_BYTE *)(v2 + a2);
  v6 = a2 - 3027324499 + ((v4 + a1) & 0xB7736E75) != v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * v6) | (8 * v6)) ^ (v4 + 1505))) - 8))();
}

uint64_t sub_100A8A504(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_OWORD *)(v8 + v6) = *(_OWORD *)(v4 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v6 + 16 != v5) * ((v7 - 1267648515) ^ (a4 + 1900))) ^ v7))
                            - 8))();
}

uint64_t sub_100A8A544(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ a4)) - 4))();
}

uint64_t sub_100A8A5A0(uint64_t a1, uint64_t a2)
{
  int v2;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                                                                                       - 4))(a1, a2, 1772489163, 2147468896, STACK[0x5A08]);
}

uint64_t sub_100A8A60C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = (((v10 + v6) ^ *(_DWORD *)(v7 + v8)) & (a4 + v5 + 7479 + 1324)) * a3;
  *(_BYTE *)(v9 + v6) = *(_BYTE *)(a5 + (v6 | (16 * (((v11 ^ HIWORD(v11)) * a3) >> 24)))) ^ *(_BYTE *)(v10 + v6) ^ (-53 * (v11 ^ BYTE2(v11)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((237 * (v6 == 15)) ^ v5)) - 4))();
}

uint64_t sub_100A8A684@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0xD1A8] = v2 + 32;
  STACK[0xDAC8] = v5;
  STACK[0xDAB8] = v4;
  STACK[0xDAA8] = a1 - 0x778E069994F0EBC0;
  STACK[0xDAA0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (4 * (v3 != v5)))) - 4))();
}

uint64_t sub_100A8A6F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 2247) ^ 0x4756)))();
}

uint64_t sub_100A8A718()
{
  uint64_t v0;
  int v1;
  char *v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v0;
  *v3 = *v2;
  v3[1] = v2[1];
  v3[2] = v2[2];
  v3[3] = v2[3];
  v3[4] = v2[4];
  v3[5] = v2[5];
  v3[6] = v2[6];
  v3[7] = v2[7];
  v3[8] = v2[8];
  v3[9] = v2[9];
  v3[10] = v2[10];
  v3[11] = v2[11];
  v3[12] = v2[12];
  v3[13] = v2[13];
  v3[14] = v2[14];
  v3[15] = v2[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 + 2247) + 18254))();
}

uint64_t sub_100A8A7C0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (61 * (v0 == 0))))
                            - 13 * (v1 ^ 0x469Du)
                            - ((v1 + 828584093) & 0xCE9CCF7F)
                            + 24298))();
}

uint64_t sub_100A8A818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  _BOOL4 v16;

  v8 = a6 + 1263797981;
  v9 = (v8 ^ 0xDA0001D5) & (2 * (v8 & 0x932A81D6)) ^ v8 & 0x932A81D6;
  v10 = ((v6 - 1829449045) ^ (2 * (v8 ^ 0xDA500259))) & (v8 ^ 0xDA500259) ^ (2 * (v8 ^ 0xDA500259)) & 0x497A838E;
  v11 = ((4 * (v10 ^ 0x490A8081)) ^ 0x25EA0E3C) & (v10 ^ 0x490A8081) ^ (4 * (v10 ^ 0x490A8081)) & 0x497A838C;
  v12 = (v11 ^ 0x16A0203) & (16 * ((v10 ^ 0x708309) & (4 * v9) ^ v9)) ^ (v10 ^ 0x708309) & (4 * v9) ^ v9;
  v13 = ((16 * (v11 ^ 0x48108183)) ^ 0x97A838F0) & (v11 ^ 0x48108183) ^ (16 * (v11 ^ 0x48108183)) & 0x497A8380;
  v14 = v12 ^ 0x497A838F ^ (v13 ^ 0x128000F) & (v12 << 8);
  v16 = (((((a6 - 35) ^ (2 * v14)) & 0xF ^ 0x1FFFFFF3) + 410241584) & 0x1040020F) == 0x1040020B
     && ((a6 + 1263797981) ^ (2
                            * ((v14 << 16) & 0x497A0000 ^ v14 ^ ((v14 << 16) ^ 0x38F0000) & (((v13 ^ 0x4852830F) << 8) & 0x497A0000 ^ 0x1780000 ^ (((v13 ^ 0x4852830F) << 8) ^ 0x7A830000) & (v13 ^ 0x4852830F))))) != ((v7 - 1190053804) & 0x46EE97BF) + 63663941;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3940 * v16) ^ v7)) - 8))();
}

uint64_t sub_100A8A9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7)
{
  int v7;
  unint64_t v8;
  int v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;

  STACK[0x6AB0] = v8;
  LODWORD(STACK[0x6680]) = v7;
  LODWORD(STACK[0x6088]) = a6;
  STACK[0x6190] = a7;
  STACK[0xDAC0] = 0;
  v10 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  v11 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xDAB0] = v11;
  v12 = v10(1028);
  STACK[0xDAC0] = v12;
  if (v11)
    v13 = v12 == 0;
  else
    v13 = 1;
  v14 = !v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((67 * (((v9 - 71) ^ v14) & 1)) ^ v9))
                            - ((v9 - 75573955) & 0xD7EDFBEE)
                            + 3547134934))();
}

uint64_t sub_100A8AACC()
{
  unint64_t v0;
  unsigned __int8 *v1;
  char *v2;
  unsigned __int8 v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  int v24;
  unsigned __int8 *v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  char *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unint64_t v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  unint64_t v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  BOOL v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  BOOL v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned __int8 *v286;
  unsigned int v287;
  uint64_t v288;
  unsigned __int8 v289;
  unsigned int v290;
  unint64_t v291;
  unsigned int v292;
  unsigned int v293;
  unsigned __int8 v294;
  int v295;
  unint64_t v296;
  int v297;
  unint64_t v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unint64_t v305;
  int v306;
  unint64_t v307;
  unsigned int v308;
  int v309;
  int v310;
  unint64_t v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  int v327;
  unint64_t v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  unint64_t v367;
  int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  BOOL v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  int v457;
  int v458;
  unint64_t v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  unsigned int v472;
  int v473;
  int v474;
  int v475;
  unint64_t v476;
  int v477;
  int v478;
  unint64_t v479;
  unint64_t v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  int v485;
  unsigned int v486;
  unint64_t v487;
  _BOOL4 v488;
  uint64_t v489;

  LODWORD(STACK[0x6A50]) = v0 + 747850345;
  v2 = (char *)*(&off_1015B46D0 + (int)(v0 ^ 0xD36CFA14)) - 8;
  v3 = v1[7] ^ 0x2D ^ v2[(v1[7] ^ (v0 + 105)) ^ 0x44];
  v4 = (unint64_t)*(&off_1015B46D0 + (int)(v0 ^ 0xD36CF2DC)) - 4;
  v5 = (*(unsigned __int8 *)(v4 + (v1[2] ^ 0x5CLL)) ^ 0x46) << 8;
  v6 = v0 + 747832629;
  v7 = v0;
  v8 = (unint64_t)*(&off_1015B46D0 + (int)v0 + 747832629) - 8;
  v9 = *(_BYTE *)(v8 + (v1[14] ^ 0xF6));
  v10 = *v1;
  v11 = *(unsigned __int8 *)(v8 + (v1[8] ^ 0x6BLL));
  v12 = v8;
  STACK[0x64F8] = v8;
  v13 = v5 | ((v10 ^ v2[v10 ^ 0xB4] ^ 0x22222222) << 24);
  v14 = v1[13];
  LODWORD(v8) = v3 | ((*(unsigned __int8 *)(v4 + (v1[5] ^ 0x4ELL)) ^ 0xA8) << 16);
  v15 = (char *)*(&off_1015B46D0 + (int)(v7 ^ 0xD36CF89B)) - 4;
  v16 = v1[6];
  v17 = v15[v1[11] ^ 0xB1];
  v18 = v15;
  STACK[0x64F0] = (unint64_t)v15;
  LOBYTE(v14) = *(_BYTE *)(v4 + (v14 ^ 0x5D));
  v19 = v1[3];
  v20 = v1[1];
  LODWORD(v16) = v8 | ((*(unsigned __int8 *)(v4 + (v16 ^ 0xD6)) ^ 0x59) << 8);
  LODWORD(v8) = v2[v19 ^ 0xC2];
  v21 = v2[v20 ^ 0x71];
  v22 = v2;
  STACK[0x6510] = (unint64_t)v2;
  v23 = v1[15];
  LODWORD(v20) = v20 ^ 0xAA ^ v21;
  v24 = v19 ^ v8 ^ 0x20 | v13;
  v25 = (unsigned __int8 *)STACK[0xDAB8];
  STACK[0x6A10] = STACK[0xDAB8];
  v26 = v25[12];
  STACK[0x6920] = v26;
  v27 = v24 | ((_DWORD)v20 << 16);
  LODWORD(STACK[0x68A0]) = v27;
  v28 = *(unsigned __int8 *)(v12 + (v23 ^ 0x16));
  v29 = v25[9];
  STACK[0x6A20] = v29;
  LODWORD(v8) = v22[v26 ^ 0x17] ^ v26;
  v30 = v29 ^ 0xDD;
  v31 = v25[10];
  STACK[0x6900] = v31;
  LODWORD(v30) = v18[v30];
  STACK[0x6500] = v4;
  LOBYTE(v31) = *(_BYTE *)(v4 + (v31 ^ 0x10));
  LODWORD(v22) = ((v9 ^ 0xCD) << 8) | ((v14 ^ 0x4B) << 16) | ((v8 ^ 0xC) << 24) | v28 ^ 0x83;
  LODWORD(STACK[0x6880]) = (_DWORD)v22;
  v32 = v17 | ((v11 ^ 0x58) << 24) | ((v30 ^ 0x4A) << 16);
  v33 = v25[4];
  STACK[0x68E0] = v33;
  LODWORD(v20) = *(unsigned __int8 *)(v4 + (v33 ^ 0x63));
  LODWORD(v4) = (v32 & 0xFFFF00FF | (((v31 ^ -(char)v31 ^ ((v31 ^ 0xBC) + 68)) + 67) << 8)) ^ 0x28;
  LODWORD(STACK[0x69F0]) = v4;
  STACK[0x6A90] = v7;
  v34 = (unint64_t)*(&off_1015B46D0 + (int)(v7 ^ 0xD36CF2B0));
  v35 = *(_DWORD *)(v34 + 4 * (v9 ^ 0x73u));
  LODWORD(v16) = v16 | ((v20 ^ 0x53) << 24);
  LODWORD(STACK[0x6820]) = v16;
  v36 = v16 ^ 0x75;
  v37 = (char *)*(&off_1015B46D0 + v6 + 1675) - 12;
  LODWORD(v16) = __ROR4__(*(_DWORD *)&v37[4 * (v8 ^ 0xB5)], 24) ^ 0x49EA2C4E;
  LODWORD(v8) = *(_DWORD *)(v34 + 4 * (v14 ^ 5u));
  v38 = (unint64_t)*(&off_1015B46D0 + v6 + 1439);
  v39 = *(_DWORD *)(v38 + 4 * (v28 ^ 0x15)) ^ 0x512CDC69;
  v40 = v27 ^ __ROR4__(v35 ^ 0xC800BD52 ^ (16 * v35) & 0x82566A80, 24) ^ __ROR4__(v16, 8) ^ v39 ^ (-1931366532 * v39) ^ __ROR4__(v8 ^ 0xC800BD52 ^ (16 * v8) & 0x82566A80, 16);
  LODWORD(STACK[0x67E0]) = v40 ^ v36;
  LODWORD(STACK[0x6A60]) = v40;
  LODWORD(v14) = v40 ^ v36 ^ v4;
  LODWORD(STACK[0x68F0]) = v14;
  LODWORD(STACK[0x6930]) = v14 ^ 0xF9AEFEE6;
  LODWORD(v16) = v14 ^ 0xF9AEFEE6 ^ v22;
  v41 = (uint64_t)*(&off_1015B46D0 + (int)(v7 ^ 0xD36CF966));
  LODWORD(STACK[0x6850]) = v16;
  v42 = v41 - 8;
  HIDWORD(v43) = *(_DWORD *)(v41 - 8 + 4 * (BYTE3(v16) ^ 0xF)) ^ 0x45D9A488;
  LODWORD(v43) = HIDWORD(v43);
  LODWORD(v41) = (v43 >> 8) ^ __ROR4__(*(_DWORD *)&v37[4 * (v16 ^ 0x93)], 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v37[4 * (((unsigned __int16)(v16 ^ 0xF088) >> 8) ^ 0x60)], 24) ^ 0x49EA2C4E, 24) ^ __ROR4__(*(_DWORD *)(v34 + 4 * (BYTE2(v16) ^ 0x45u)) ^ 0xC800BD52 ^ (16 * *(_DWORD *)(v34 + 4 * (BYTE2(v16) ^ 0x45u))) & 0x82566A80, 16);
  v44 = v41 ^ v36 ^ v14;
  LODWORD(v31) = v41 ^ v36;
  LODWORD(STACK[0x68C0]) = v41 ^ v36;
  LODWORD(v33) = v44 ^ v16 ^ 0x7E00F088;
  LODWORD(STACK[0x6980]) = v33;
  LODWORD(STACK[0x6A70]) = v33 ^ 0x47769302;
  LODWORD(v43) = __ROR4__(*(_DWORD *)&v37[4 * (((v33 ^ 0x47769302) >> 16) ^ 0xC7)], 24) ^ 0x49EA2C4E;
  HIDWORD(v43) = v43;
  LODWORD(v16) = *(_DWORD *)&v37[4 * (BYTE3(v33) ^ 0x80)];
  v45 = (v43 >> 16) ^ __ROR4__(__ROR4__(*(_DWORD *)&v37[4 * (((unsigned __int16)(v33 ^ 0xA7DC) >> 8) ^ 0xF3)], 24) ^ 0x49EA2C4E, 24);
  LODWORD(v8) = *(_DWORD *)&v37[4 * (v33 ^ 0xC5)];
  LODWORD(v41) = v41 ^ v40;
  LODWORD(STACK[0x67D0]) = v41;
  v46 = v45 ^ __ROR4__(v8, 24) ^ __ROR4__(__ROR4__(v16, 24) ^ 0x49EA2C4E, 8) ^ v41;
  LODWORD(v28) = v31 ^ 0xD944D2A8 ^ v46;
  LODWORD(STACK[0x69E0]) = v28;
  v47 = v28 ^ v44 ^ 0xE971890;
  v48 = v28 ^ v44 ^ v33 ^ 0x5A0BA7DC;
  LODWORD(STACK[0x6940]) = v48;
  LODWORD(v28) = v47 ^ v33 ^ 0x5A0BA7DC;
  LODWORD(v12) = v47;
  LODWORD(STACK[0x68B0]) = v47;
  LODWORD(STACK[0x6A00]) = v28;
  v49 = *(_DWORD *)(v34 + 4 * (BYTE2(v28) ^ 0xD9u));
  LODWORD(v41) = *(_DWORD *)(v34 + 4 * (BYTE1(v28) ^ 0x56u));
  v50 = *(_DWORD *)(v38 + 4 * (BYTE3(v28) ^ 0x10));
  v51 = v38;
  LODWORD(v8) = *(_DWORD *)(v38 + 4 * (v28 ^ 0x8Eu)) ^ 0x512CDC69;
  v52 = v8 ^ __ROR4__(v49 ^ 0xC800BD52 ^ (16 * v49) & 0x82566A80, 16) ^ v46 ^ (-1931366532 * v8) ^ __ROR4__(v41 ^ 0xC800BD52 ^ (16 * v41) & 0x82566A80, 24) ^ __ROR4__(v50 ^ 0xF892B552 ^ (-1931366532 * (v50 ^ 0x512CDC69)), 8);
  LODWORD(v41) = v52 ^ v31 ^ 0xD944D2A8 ^ v46;
  v53 = v52;
  LODWORD(STACK[0x69A0]) = v52;
  v54 = v41 ^ v12;
  LODWORD(v12) = v41;
  LODWORD(STACK[0x69B0]) = v41;
  v55 = v54 ^ v48;
  LODWORD(v41) = *(_DWORD *)(v34 + 4 * (((v54 ^ v48) >> 16) ^ 0x86u));
  LODWORD(v43) = __ROR4__(*(_DWORD *)&v37[4 * (((v54 ^ v48) >> 24) ^ 0xE2)], 24) ^ 0x49EA2C4E;
  HIDWORD(v43) = v43;
  LODWORD(v14) = *(_DWORD *)(v38 + 4 * ((v54 ^ v48) ^ 0x27u)) ^ 0x512CDC69;
  v56 = (v43 >> 8) ^ __ROR4__(v41 ^ 0xC800BD52 ^ (16 * v41) & 0x82566A80, 16) ^ v14 ^ __ROR4__(__ROR4__(*(_DWORD *)&v37[4 * (((unsigned __int16)(v54 ^ v48) >> 8) ^ 0x3D)], 24) ^ 0x49EA2C4E, 24) ^ (-1931366532 * v14) ^ v53;
  v57 = v56 ^ 0x2B9CBF4C ^ v12;
  LODWORD(STACK[0x67F0]) = v57;
  v57 ^= 0x3622D677u;
  LODWORD(STACK[0x6950]) = v57 ^ v54 ^ 0x679CBF4C;
  LODWORD(v41) = v54 ^ 0x679CBF4C;
  LODWORD(STACK[0x6970]) = v54 ^ 0x679CBF4C;
  v58 = v57 ^ v54 ^ 0x679CBF4C ^ v55;
  LODWORD(v14) = *(_DWORD *)(v34 + 4 * (BYTE2(v58) ^ 0xD2u));
  LODWORD(v31) = *(_DWORD *)(v34 + 4 * (BYTE1(v58) ^ 0xF1u));
  LODWORD(v7) = *(_DWORD *)(v38 + 4 * ((v57 ^ v54 ^ 0x4C ^ v55) ^ 0x52u)) ^ 0x512CDC69;
  v59 = v7 ^ __ROR4__(__ROR4__(*(_DWORD *)&v37[4 * (HIBYTE(v58) ^ 0xA0)], 24) ^ 0x49EA2C4E, 8) ^ (-1931366532 * v7) ^ __ROR4__(v14 ^ 0xC800BD52 ^ (16 * v14) & 0x82566A80, 16) ^ __ROR4__(v31 ^ 0xC800BD52 ^ (16 * v31) & 0x82566A80, 24) ^ v56 ^ 0x2B9CBF4C;
  v60 = v59 ^ v41;
  LODWORD(v41) = v58 ^ 0x679CBF4C ^ v59 ^ v41;
  LODWORD(v38) = *(_DWORD *)(v38 + 4 * (BYTE1(v41) ^ 0x32u));
  v61 = v51;
  HIDWORD(v43) = v38 ^ 0xF892B552 ^ (-1931366532 * (v38 ^ 0x512CDC69));
  LODWORD(v43) = HIDWORD(v43);
  LODWORD(STACK[0x6960]) = v59;
  LODWORD(STACK[0x6890]) = v41;
  v62 = *(_DWORD *)(v42 + 4 * (v58 ^ 0x4C ^ v60 ^ 0x65u)) ^ 0x8FC3ADC1 ^ __ROR4__(*(_DWORD *)(v42 + 4 * (BYTE2(v41) ^ 0xC1u)) ^ 0x45D9A488, 16) ^ __ROR4__(__ROR4__(*(_DWORD *)&v37[4 * (BYTE3(v41) ^ 0x4B)], 24) ^ 0x49EA2C4E, 8) ^ ((v59 ^ -v59 ^ ((v43 >> 24) - (v59 ^ (v43 >> 24)))) + (v43 >> 24));
  v63 = v59 ^ v57;
  v64 = v59 ^ v57 ^ 0xA9BE693B ^ v62;
  LODWORD(STACK[0x69D0]) = v62;
  v65 = v64 ^ v58 ^ 0x679CBF4C;
  LODWORD(STACK[0x6A40]) = v64;
  v66 = v65 ^ 0xF7A46072;
  v67 = *(_DWORD *)(v34 + 4 * (BYTE1(v65) ^ 0x2Eu));
  LODWORD(v28) = *(_DWORD *)&v37[4 * (((v65 ^ 0x72) - ((2 * (v65 ^ 0xF7A46072)) & 0x1BC) + 222) ^ 0x19)];
  STACK[0x6910] = v42;
  LODWORD(v31) = *(_DWORD *)(v42 + 4 * (BYTE2(v65) ^ 0x8Fu));
  v68 = *(_DWORD *)&v37[4 * (HIBYTE(v65) ^ 0x30)];
  STACK[0x6990] = (unint64_t)v37;
  HIDWORD(v43) = v31 ^ 0x45D9A488;
  LODWORD(v43) = v31 ^ 0x45D9A488;
  v69 = (v43 >> 16) ^ __ROR4__(v28, 24) ^ __ROR4__(v67 ^ 0xC800BD52 ^ (16 * v67) & 0x82566A80, 24) ^ __ROR4__(__ROR4__(__ROR4__(v68, 20) ^ 0xAA1BBDB6, 4) ^ 0x234B9795, 8);
  LOWORD(v28) = v64 ^ v60;
  v70 = v64 ^ v60 ^ 0x7B4E4C3C;
  LODWORD(STACK[0x6A30]) = v70;
  v71 = v28 & 0x8000;
  v72 = v69 ^ v63;
  if ((v71 & (v69 ^ v63)) != 0)
    v71 = -v71;
  v73 = (v71 + (v72 ^ 0x90A46072)) ^ v70 & 0xFFFF7FFF;
  v74 = v66;
  LODWORD(STACK[0x6AC0]) = v66;
  v75 = v73 ^ v66;
  v76 = v73;
  LODWORD(STACK[0x6860]) = v73;
  v77 = *(_DWORD *)(v34 + 4 * (((unsigned __int16)(v73 ^ v66) >> 8) ^ 0x6Bu));
  LODWORD(STACK[0x67C0]) = v44 ^ 0xA4BE693B;
  v78 = *(_DWORD *)(v42 + 4 * (v75 ^ 0x2Cu)) ^ __ROR4__(v77 ^ 0xC800BD52 ^ (16 * v77) & 0x82566A80, 24);
  STACK[0x68D0] = v61;
  v79 = *(_DWORD *)(v61 + 4 * (BYTE2(v75) ^ 0xEEu));
  v80 = v78 ^ __ROR4__(v79 ^ 0xF892B552 ^ (-1931366532 * (v79 ^ 0x512CDC69)), 16);
  v81 = *(_DWORD *)(v34 + 4 * (HIBYTE(v75) ^ 0xE4));
  LODWORD(STACK[0x6AA0]) = v72 ^ 0x5D544575;
  v82 = v62 ^ v69;
  LODWORD(STACK[0x6840]) = v82;
  v83 = v80 ^ __ROR4__(v81 ^ 0xC800BD52 ^ (16 * v81) & 0x82566A80, 8) ^ v82;
  v84 = v83 ^ v72 ^ 0x5D544575;
  v85 = v83;
  LODWORD(STACK[0x69C0]) = v83;
  v86 = v84 ^ 0x267DC4FA;
  v87 = v84;
  LODWORD(STACK[0x6870]) = v84;
  v88 = v84 ^ 0x267DC4FA ^ v74;
  v89 = *(_DWORD *)&v37[4 * (v88 ^ 0x89)];
  STACK[0x6830] = v34;
  v90 = *(_DWORD *)(v34 + 4 * (BYTE2(v88) ^ 0xA4u));
  HIDWORD(v91) = v90 ^ 0xC800BD52 ^ (16 * v90) & 0x82566A80;
  LODWORD(v91) = HIDWORD(v91);
  LODWORD(STACK[0x6A80]) = v88 ^ 0x7BEA2C4E;
  v92 = HIBYTE(v88) ^ 0x35;
  v93 = *(_DWORD *)(v61 + 4 * (BYTE1(v88) ^ 0x32u));
  v94 = (v91 >> 16) ^ __ROR4__(v89, 24) ^ __ROR4__(v93 ^ 0xF892B552 ^ (-1931366532 * (v93 ^ 0x512CDC69)), 24) ^ __ROR4__(*(_DWORD *)(v34 + 4 * v92) ^ 0xC800BD52 ^ (16 * *(_DWORD *)(v34 + 4 * v92)) & 0x82566A80, 8);
  v95 = v76 ^ v86;
  LODWORD(STACK[0x67B0]) = v76 ^ v86;
  v96 = v85 ^ 0x4485E7F2 ^ v94;
  LODWORD(STACK[0x6800]) = v96;
  v97 = (v76 ^ v86 ^ 0x612BCD81) + v96 + 148266540 - 2 * ((v76 ^ v86 ^ 0x612BCD81) + v96);
  LODWORD(STACK[0x66F8]) = v97 - 123607070 - ((2 * v97) & 0xF143CFC4);
  v98 = v55 ^ 0x6F1B0733;
  v99 = v46 ^ 0x44FB7B01;
  v100 = STACK[0x67E0];
  LODWORD(STACK[0x6810]) = (LODWORD(STACK[0x67E0]) ^ 0x3E8DA92E) + (v87 ^ 0x1259D383);
  v101 = v56 ^ 0x2CAAE2BE;
  v102 = v60 ^ 0xFA0AB392;
  v103 = STACK[0x6820];
  v104 = LODWORD(STACK[0x6820]) ^ 0x82CDC16B;
  LODWORD(STACK[0x6650]) = (v102 ^ v104) + 2 * (v102 & v104);
  v105 = v98 - v99 - 1633005923;
  v106 = 515928450 - v98 - (v56 ^ 0x2CAAE2BE);
  v107 = (v106 ^ 0xEFD1279B) & (2 * (v106 & 0xCE153623)) ^ v106 & 0xCE153623;
  v108 = ((2 * (v106 ^ 0xE7F30F9F)) ^ 0x53CC7378) & (v106 ^ 0xE7F30F9F) ^ (2 * (v106 ^ 0xE7F30F9F)) & 0x29E639BC;
  v109 = (v108 ^ 0xC63118) & (4 * v107) ^ v107;
  v110 = ((4 * (v108 ^ 0x28220884)) ^ 0xA798E6F0) & (v108 ^ 0x28220884) ^ (4 * (v108 ^ 0x28220884)) & 0x29E639BC;
  v111 = (v110 ^ 0x218020BC) & (16 * v109) ^ v109;
  v112 = ((16 * (v110 ^ 0x866190C)) ^ 0x9E639BC0) & (v110 ^ 0x866190C) ^ (16 * (v110 ^ 0x866190C)) & 0x29E639B0;
  v113 = v111 ^ 0x29E639BC ^ (v112 ^ 0x8621900) & (v111 << 8);
  LODWORD(STACK[0x6648]) = v106 ^ (2
                                 * ((v113 << 16) & 0x29E60000 ^ v113 ^ ((v113 << 16) ^ 0x39BC0000) & (((v112 ^ 0x2184203C) << 8) & 0x29E60000 ^ 0x9C60000 ^ (((v112 ^ 0x2184203C) << 8) ^ 0x66390000) & (v112 ^ 0x2184203C))));
  v114 = STACK[0x67D0];
  LODWORD(v91) = __ROR4__(LODWORD(STACK[0x67D0]) ^ 0xB7544575, 22);
  v115 = v58 ^ 0x60AAE2BE;
  v116 = STACK[0x6850];
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6850]) ^ 0xE328009C;
  LODWORD(STACK[0x66E8]) = (v116 ^ 0xE328009C) - (v58 ^ 0x60AAE2BE) - 2073662398;
  v117 = (v103 ^ 0x53E628F1 ^ v114) - 1353623642;
  v118 = (v117 ^ 0xDE6D1490) & (2 * (v117 & 0xDF699885)) ^ v117 & 0xDF699885;
  v119 = ((2 * (v117 ^ 0xC0BF0492)) ^ 0x3FAD382E) & (v117 ^ 0xC0BF0492) ^ (2 * (v117 ^ 0xC0BF0492)) & 0x1FD69C16;
  v120 = (v119 ^ 0x1F840004) & (4 * v118) ^ v118;
  v121 = ((4 * (v119 ^ 0x528411)) ^ 0x7F5A705C) & (v119 ^ 0x528411) ^ (4 * (v119 ^ 0x528411)) & 0x1FD69C14;
  v122 = (v121 ^ 0x1F521010) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x848C03)) ^ 0xFD69C170) & (v121 ^ 0x848C03) ^ (16 * (v121 ^ 0x848C03)) & 0x1FD69C10;
  v124 = v122 ^ 0x1FD69C17 ^ (v123 ^ 0x1D408007) & (v122 << 8);
  v125 = v117 ^ (2
               * ((v124 << 16) & 0x1FD60000 ^ v124 ^ ((v124 << 16) ^ 0x1C170000) & (((v123 ^ 0x2961C07) << 8) & 0x1FD60000 ^ 0x9420000 ^ (((v123 ^ 0x2961C07) << 8) ^ 0x569C0000) & (v123 ^ 0x2961C07))));
  LODWORD(v91) = __ROR4__(v91 ^ 0x994CD348, 10);
  LODWORD(STACK[0x6520]) = (v58 ^ 0x60AAE2BE) - (v91 ^ 0xB459FFDB) + 792396503;
  v126 = LODWORD(STACK[0x6880]) ^ 0x51FF703C;
  v127 = v126 + 46717522 + v102 - 509984512 - ((2 * (v126 + 46717522 + v102)) & 0xC3348200);
  v128 = v104 - 509984512 - ((2 * v104) & 0xC3348200);
  LODWORD(STACK[0x68A0]) = (v105 ^ LODWORD(STACK[0x68A0]))
                         - 509984512
                         - ((2 * (v105 ^ LODWORD(STACK[0x68A0]))) & 0xC3348200);
  v129 = (v98 ^ v104) + 689863066;
  v130 = (v129 ^ 0xE8539DDA) & (2 * (v129 & 0x80639D1A)) ^ v129 & 0x80639D1A;
  v131 = ((2 * (v129 ^ 0xE857A5DA)) ^ 0xD0687180) & (v129 ^ 0xE857A5DA) ^ (2 * (v129 ^ 0xE857A5DA)) & 0x683438C0;
  v132 = (v131 ^ 0x28003080) & (4 * v130) ^ v130;
  v133 = ((4 * (v131 ^ 0x28140840)) ^ 0xA0D0E300) & (v131 ^ 0x28140840) ^ (4 * (v131 ^ 0x28140840)) & 0x683438C0;
  v134 = v132 ^ 0x683438C0 ^ (v133 ^ 0x20102000) & (16 * v132);
  v135 = (16 * (v133 ^ 0x482418C0)) & 0x683438C0 ^ 0x683430C0 ^ ((16 * (v133 ^ 0x482418C0)) ^ 0x83438C00) & (v133 ^ 0x482418C0);
  v136 = (v134 << 8) & 0x68343800 ^ v134 ^ ((v134 << 8) ^ 0x3438C000) & v135;
  LODWORD(STACK[0x6640]) = v129 ^ (2
                                 * ((v136 << 16) & 0x68340000 ^ v136 ^ ((v136 << 16) ^ 0x38C00000) & ((v135 << 8) & 0x68340000 ^ 0x48040000 ^ ((v135 << 8) ^ 0x34380000) & v135)));
  v137 = LODWORD(STACK[0x67F0]) ^ 0x31148B85;
  v75 ^= 0x49CF08BAu;
  v138 = v94 ^ LODWORD(STACK[0x6AA0]);
  v139 = v95 ^ 0xC808060F ^ v138;
  v140 = v139 ^ LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6880]) = v140;
  LODWORD(STACK[0x6678]) = v139 + 1764393852 + v140 - 1672531981 - ((2 * (v139 + 1764393852 + v140)) & 0x389E5FE6);
  LODWORD(STACK[0x6750]) = LODWORD(STACK[0x6930]) - 1284076637 - 2 * (STACK[0x6930] & 0x33768BBB ^ STACK[0x68F0] & 0x18);
  LODWORD(STACK[0x66E0]) = v105;
  v141 = v105 ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6518]) = v127;
  LODWORD(STACK[0x6638]) = v127 ^ 0xE19A4100;
  LODWORD(STACK[0x6930]) = v141 ^ -v141 ^ ((v127 ^ 0xE19A4100) - (v127 ^ (v141 - 509984512 - ((2 * v141) & 0xC3348200))));
  LODWORD(STACK[0x69F0]) = v100 ^ 0x316FB352;
  LODWORD(STACK[0x68F0]) = v105 ^ 0x5953F524 ^ (v126 - 509984512 - ((2 * v126) & 0xC3348200));
  LODWORD(STACK[0x67F0]) = v105 ^ 0x5953F524 ^ v128;
  v142 = LODWORD(STACK[0x67C0]) + 479240099 - ((2 * LODWORD(STACK[0x67C0])) & 0x39213F46);
  v143 = (LODWORD(STACK[0x68C0]) ^ 0xF9AEFEE6) + 479240099 - ((2 * (LODWORD(STACK[0x68C0]) ^ 0xF9AEFEE6)) & 0x39213F46);
  LODWORD(STACK[0x65A8]) = v125;
  v144 = v125 ^ 0xC4783F08;
  LODWORD(STACK[0x67A0]) = (v125 ^ 0xC4783F08 ^ v142) + 1708065422 - ((2 * (v125 ^ 0xC4783F08 ^ v142)) & 0xCB9E051C);
  v145 = v125 ^ 0xC4783F08 ^ ((v91 ^ 0xB459FFDB) + 479240099 - ((2 * (v91 ^ 0xB459FFDB)) & 0x39213F46));
  LODWORD(STACK[0x67E0]) = v145 + 1708065422 - ((2 * v145) & 0xCB9E051C);
  v146 = STACK[0x6A70];
  v147 = v146 + 479240099 - 2 * (v146 & 0x1C909FAF ^ STACK[0x6980] & 0xC);
  LODWORD(STACK[0x67C0]) = v99 - 1148063373 - ((2 * v99) & 0x7723E2E6);
  LODWORD(STACK[0x68C0]) = v138 ^ 0x19120F46;
  v148 = (v138 ^ 0x19120F46) - v102;
  LODWORD(STACK[0x65A0]) = v148;
  v149 = v148 ^ 0x7687422A ^ LODWORD(STACK[0x68B0]);
  LODWORD(STACK[0x6670]) = v148 ^ 0x7687422A;
  LODWORD(STACK[0x6780]) = v149 - 1148063373 - ((2 * v149) & 0x7723E2E6);
  LODWORD(STACK[0x6A00]) = LODWORD(STACK[0x6940]) - 1148063373 - 2 * (STACK[0x6A00] & 8 ^ STACK[0x6940] & 0x3B91F17B);
  v150 = 482253431 - v137;
  v151 = v137 - 123607070 - ((2 * v137) & 0xF143CFC4);
  LODWORD(STACK[0x6980]) = v116 ^ 0xAD3D92E6;
  LODWORD(STACK[0x6628]) = v144;
  LODWORD(STACK[0x6850]) = (v144 ^ v147) + 1708065422 - ((2 * (v144 ^ v147)) & 0xCB9E051C);
  LODWORD(STACK[0x6940]) = LODWORD(STACK[0x6970]) + 781507133 - ((2 * LODWORD(STACK[0x6970])) & 0x5D29B47A);
  v152 = STACK[0x66F8];
  LODWORD(STACK[0x68B0]) = (LODWORD(STACK[0x66F8]) ^ v151)
                         - 1672531981
                         - ((2 * (LODWORD(STACK[0x66F8]) ^ v151)) & 0x389E5FE6);
  v153 = v101 - 123607070 - ((2 * v101) & 0xF143CFC4);
  v154 = LODWORD(STACK[0x6890]) + 781507133 - ((2 * LODWORD(STACK[0x6890])) & 0x5D29B47A);
  LODWORD(STACK[0x6770]) = (v148 ^ 0x7687422A ^ LODWORD(STACK[0x69E0]))
                         - 1148063373
                         - ((2 * (v148 ^ 0x7687422A ^ LODWORD(STACK[0x69E0]))) & 0x7723E2E6);
  v155 = LODWORD(STACK[0x6960]) + 1708065422 - ((2 * LODWORD(STACK[0x6960])) & 0xCB9E051C);
  v156 = LODWORD(STACK[0x6650]) ^ 0xE96E6E9E;
  LODWORD(STACK[0x6960]) = (v156 ^ v98) + 781507133 - ((2 * (v156 ^ v98)) & 0x5D29B47A);
  LODWORD(STACK[0x6710]) = (v156 ^ LODWORD(STACK[0x69A0]))
                         + 781507133
                         - ((2 * (v156 ^ LODWORD(STACK[0x69A0]))) & 0x5D29B47A);
  v157 = v63 + 1708065422 - ((2 * v63) & 0xCB9E051C);
  v158 = v102 + 781507133 - ((2 * v102) & 0x5D29B47A);
  v159 = v115 - 1672531981 - ((2 * v115) & 0x389E5FE6);
  LODWORD(STACK[0x69E0]) = (v156 ^ LODWORD(STACK[0x69B0]))
                         + 781507133
                         - ((2 * (v156 ^ LODWORD(STACK[0x69B0]))) & 0x5D29B47A);
  v160 = LODWORD(STACK[0x6950]) ^ v146;
  v161 = LODWORD(STACK[0x6950]) - 1672531981 - ((2 * LODWORD(STACK[0x6950])) & 0x389E5FE6);
  v162 = v152;
  LODWORD(STACK[0x69A0]) = (v152 ^ v153) - 1672531981 - ((2 * (v152 ^ v153)) & 0x389E5FE6);
  v163 = STACK[0x6860];
  v164 = LODWORD(STACK[0x6860]) ^ v138 ^ 0x72440E74;
  v165 = LODWORD(STACK[0x6860]) ^ v138;
  LODWORD(STACK[0x6660]) = v165;
  v166 = (v164 ^ v157) + 781507133 - ((2 * (v164 ^ v157)) & 0x5D29B47A);
  v167 = STACK[0x6678];
  LODWORD(STACK[0x6890]) = (LODWORD(STACK[0x6678]) ^ v159)
                         - 123607070
                         - ((2 * (LODWORD(STACK[0x6678]) ^ v159)) & 0xF143CFC4);
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6840]) - 509984512 - ((2 * LODWORD(STACK[0x6840])) & 0xC3348200);
  LODWORD(STACK[0x6840]) = LODWORD(STACK[0x6AA0]) - 509984512 - ((2 * LODWORD(STACK[0x6AA0])) & 0xC3348200);
  LODWORD(STACK[0x6760]) = (v164 ^ v155) + 781507133 - ((2 * (v164 ^ v155)) & 0x5D29B47A);
  v168 = LODWORD(STACK[0x6AC0]) ^ LODWORD(STACK[0x6790]);
  v169 = v168 ^ 0xA193316F;
  LODWORD(STACK[0x6720]) = (v168 ^ 0xA193316F ^ v158) + 1708065422 - ((2 * (v168 ^ 0xA193316F ^ v158)) & 0xCB9E051C);
  LODWORD(STACK[0x6740]) = (v168 ^ 0xA193316F ^ v154) + 1708065422 - ((2 * (v168 ^ 0xA193316F ^ v154)) & 0xCB9E051C);
  v170 = v150 - v75;
  LODWORD(STACK[0x6668]) = v150 - v75;
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x6800]) - 509984512 - ((2 * LODWORD(STACK[0x6800])) & 0xC3348200);
  v171 = STACK[0x66E8];
  v172 = STACK[0x6518];
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6518]);
  LODWORD(STACK[0x6A70]) = v171 ^ v172 ^ 0xE172BAFC ^ (v75 - 509984512 - ((2 * v75) & 0xC3348200));
  LODWORD(STACK[0x6730]) = v139 - 509984512 - ((2 * v139) & 0xC3348200);
  v173 = STACK[0x66E0];
  v174 = LODWORD(STACK[0x66E0]) ^ v170;
  LODWORD(STACK[0x6870]) ^= v174 ^ 0x9920AD4F;
  v175 = LODWORD(STACK[0x6810]) + 1;
  LODWORD(STACK[0x67D0]) = v175;
  LODWORD(STACK[0x64B0]) = v175 ^ 0x78418C71;
  v176 = v175 ^ 0x78418C71 ^ LODWORD(STACK[0x6520]);
  LODWORD(STACK[0x6860]) = (LODWORD(STACK[0x6880]) ^ v176)
                         - 509984512
                         - ((2 * (LODWORD(STACK[0x6880]) ^ v176)) & 0xC3348200);
  LODWORD(STACK[0x6700]) = (v176 ^ LODWORD(STACK[0x68C0]))
                         - 509984512
                         - ((2 * (v176 ^ LODWORD(STACK[0x68C0]))) & 0xC3348200);
  LODWORD(STACK[0x6630]) = v168;
  v177 = v168 ^ 0x19CDC788 ^ v166;
  LODWORD(STACK[0x6880]) = v177;
  v178 = ((v144 ^ v143) + 1708065422 - ((2 * (v144 ^ v143)) & 0xCB9E051C)) ^ 0xA36FE7EE ^ v165;
  LODWORD(STACK[0x6820]) = v178;
  v179 = *(&off_1015B46D0 + (int)(STACK[0x6A90] ^ 0xD36CF3E7)) - 8;
  LODWORD(STACK[0x68C0]) = v179;
  v180 = v177 + v178 - v179 - 1540612120 - 2 * (v177 + v178 - v179);
  v181 = LODWORD(STACK[0x69D0]) ^ 0xC651F78B;
  LODWORD(STACK[0x6810]) = v162 ^ 0x45621887 ^ ((v167 ^ v161) - 123607070 - ((2 * (v167 ^ v161)) & 0xF143CFC4));
  if ((v180 & 0x40000) != 0)
    v182 = -262144;
  else
    v182 = 0x40000;
  v183 = (((v182 + v180) ^ 0x52AABD88) + 913888594) ^ (((v182 + v180) ^ 0x85B8F4CE) - 513106920) ^ (((v182 + v180) ^ 0xD7164946)
                                                                                                  - 1278991968);
  LODWORD(STACK[0x6588]) = v160 ^ 0x41F78806;
  v184 = v171 ^ v160 ^ 0x41F78806;
  v185 = v184 ^ LODWORD(STACK[0x6980]);
  v186 = LODWORD(STACK[0x6670]) ^ v173;
  v187 = (v181 ^ v186) + v180 - v183 + 1691773146;
  v188 = LODWORD(STACK[0x67B0]) ^ v174;
  v189 = v188 ^ 0x15AD4CB2;
  v190 = (((v188 ^ 0x4AC6F3B5) - 1600896775) ^ ((v188 ^ 0x31397A70) - 613693122) ^ ((v188 ^ 0x1AD44444) - 259590390))
       + 263198809
       + v183;
  v191 = (v184 ^ LODWORD(STACK[0x6750]) ^ 0x9D28F014) + v180 - v183 - 518288065;
  v192 = (v191 ^ 0xDB38DB5A) & (2 * (v191 & 0x83BADB9B)) ^ v191 & 0x83BADB9B;
  v193 = ((2 * (v191 ^ 0xDC7D7F5E)) ^ 0xBF8F498A) & (v191 ^ 0xDC7D7F5E) ^ (2 * (v191 ^ 0xDC7D7F5E)) & 0x5FC7A4C4;
  v194 = (v193 ^ 0x5F870081) & (4 * v192) ^ v192;
  v195 = ((4 * (v193 ^ 0x4040A445)) ^ 0x7F1E9314) & (v193 ^ 0x4040A445) ^ (4 * (v193 ^ 0x4040A445)) & 0x5FC7A4C4;
  v196 = (v195 ^ 0x5F068000) & (16 * v194) ^ v194;
  v197 = ((16 * (v195 ^ 0xC124C1)) ^ 0xFC7A4C50) & (v195 ^ 0xC124C1) ^ (16 * (v195 ^ 0xC124C1)) & 0x5FC7A4C0;
  v198 = v196 ^ 0x5FC7A4C5 ^ (v197 ^ 0x5C420485) & (v196 << 8);
  v199 = v191 ^ (2
               * ((v198 << 16) & 0x5FC70000 ^ v198 ^ ((v198 << 16) ^ 0x24C50000) & (((v197 ^ 0x385A085) << 8) & 0x5FC70000 ^ 0x18430000 ^ (((v197 ^ 0x385A085) << 8) ^ 0x47A40000) & (v197 ^ 0x385A085)))) ^ 0xC8DC8BC8;
  v200 = v172 ^ 0xA8BDB246 ^ ((v163 ^ v171) - 509984512 - ((2 * (v163 ^ v171)) & 0xC3348200));
  v201 = (-1125853944 - ((v190 ^ 0x3E321C5) & 0x431020B3 | 0xBCE4D508) + ((v190 ^ 0x3E321C5) & 0x3CE0D500 | 0x431B2AF7)) ^ (v190 ^ 0x3E321C5) & 0x7FF0F5B1;
  v202 = (v201 & 0xA9F0E923 ^ 0xA900E001) + (v201 ^ 0x40FB0B76) - ((v201 ^ 0x40FB0B76) & 0xA9F0E923);
  v203 = STACK[0x6640];
  v204 = (LODWORD(STACK[0x6930]) + LODWORD(STACK[0x6638])) ^ LODWORD(STACK[0x6640]) ^ 0x2CA7D24C;
  LODWORD(STACK[0x6590]) = v160;
  v205 = LODWORD(STACK[0x69F0]) ^ v171 ^ v160;
  v206 = LODWORD(STACK[0x6A60]) ^ 0x9C5DF2F8 ^ v171 ^ v160;
  LODWORD(STACK[0x6790]) = v190;
  v207 = (v190 & 1) == 0;
  if ((v190 & 1) != 0)
    v208 = v185;
  else
    v208 = v199;
  if ((v190 & 1) == 0)
    v199 = v205;
  LODWORD(STACK[0x6980]) = v199;
  if ((v190 & 1) != 0)
    v209 = v206;
  else
    v209 = v185;
  LODWORD(STACK[0x6970]) = v209;
  if ((v190 & 1) != 0)
    v210 = v205;
  else
    v210 = v206;
  v211 = LODWORD(STACK[0x67A0]) ^ 0x5DDA2909;
  v212 = LODWORD(STACK[0x6648]) ^ 0x7500B428;
  v213 = LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6648]) ^ 0x458D5C2B;
  v214 = LODWORD(STACK[0x6648]) ^ 0x56677065;
  v215 = v214 ^ LODWORD(STACK[0x6770]);
  v216 = v214 ^ LODWORD(STACK[0x6A00]);
  v217 = v168 ^ 0xDD621A12 ^ LODWORD(STACK[0x69E0]);
  v218 = v168 ^ 0xDD621A12 ^ LODWORD(STACK[0x6710]);
  v219 = LODWORD(STACK[0x6940]) ^ v156 ^ 0x887B87F;
  v220 = v169 ^ LODWORD(STACK[0x6960]);
  LODWORD(STACK[0x6598]) = v169;
  v221 = v219 ^ v169;
  if (v207)
    v222 = v220;
  else
    v222 = v218;
  LODWORD(STACK[0x69E0]) = v222;
  if (v207)
    v223 = v221;
  else
    v223 = v220;
  LODWORD(STACK[0x6960]) = v223;
  if (v207)
    v224 = v218;
  else
    v224 = v217;
  LODWORD(STACK[0x6950]) = v224;
  if (v207)
    v225 = v217;
  else
    v225 = v221;
  LODWORD(STACK[0x69D0]) = v225;
  v226 = v168 ^ 0x19CDC788 ^ LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x6750]) = v186;
  v227 = v186 ^ 0x56F597F9 ^ LODWORD(STACK[0x6A30]);
  v228 = v186 ^ 0x56F597F9 ^ LODWORD(STACK[0x6AC0]);
  v229 = v174 ^ 0xC4B745FB ^ LODWORD(STACK[0x6A80]);
  v230 = LODWORD(STACK[0x6A40]) ^ 0xA151F78B ^ v186;
  if (v207)
    v231 = v186 ^ 0x56F597F9 ^ LODWORD(STACK[0x6A30]);
  else
    v231 = v186 ^ 0x56F597F9 ^ LODWORD(STACK[0x6AC0]);
  LODWORD(STACK[0x6800]) = v231;
  if (v207)
    v232 = v228;
  else
    v232 = v187;
  LODWORD(STACK[0x6A00]) = v232;
  if (v207)
    v233 = v187;
  else
    v233 = v230;
  LODWORD(STACK[0x67B0]) = v233;
  if (v207)
    v234 = v230;
  else
    v234 = v227;
  LODWORD(STACK[0x69F0]) = v234;
  v235 = LODWORD(STACK[0x6AA0]) ^ 0x654D9741 ^ LODWORD(STACK[0x6840]);
  v236 = LODWORD(STACK[0x6AA0]) ^ 0x6603DB7D ^ LODWORD(STACK[0x6708]);
  v237 = v173 ^ 0xFE20AD4F ^ LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x69C0]);
  v238 = STACK[0x6870];
  if (v207)
    v239 = STACK[0x6870];
  else
    v239 = v189;
  if (!v207)
    v189 = v229;
  LODWORD(STACK[0x6770]) = v189;
  if (v207)
    v240 = v237;
  else
    v240 = v238;
  LODWORD(STACK[0x6760]) = v240;
  if (v207)
    v241 = v229;
  else
    v241 = v237;
  LODWORD(STACK[0x6A80]) = v176 ^ v172;
  v242 = v176 ^ v172 ^ LODWORD(STACK[0x69B0]);
  v243 = v176 ^ v172 ^ LODWORD(STACK[0x6730]);
  v244 = LODWORD(STACK[0x6860]) ^ v172;
  v245 = LODWORD(STACK[0x6700]) ^ v172;
  if (v207)
    v246 = v176 ^ v172 ^ LODWORD(STACK[0x69B0]);
  else
    v246 = LODWORD(STACK[0x6700]) ^ v172;
  LODWORD(STACK[0x6940]) = v246;
  if (v207)
    v247 = v245;
  else
    v247 = v243;
  LODWORD(STACK[0x69C0]) = v247;
  if (v207)
    v248 = v244;
  else
    v248 = v242;
  LODWORD(STACK[0x69B0]) = v248;
  if (v207)
    v249 = v243;
  else
    v249 = v244;
  LODWORD(STACK[0x6930]) = v249;
  v250 = LODWORD(STACK[0x68F0]) ^ v203 ^ v172;
  v251 = v203;
  v252 = LODWORD(STACK[0x67F0]) ^ v203 ^ v172;
  v253 = v164 ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x6580]) = v212;
  v254 = STACK[0x6670];
  v255 = LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x67C0]) ^ v212;
  v256 = LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6678]);
  v257 = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6678]);
  v258 = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x66F8]);
  v259 = v164 ^ LODWORD(STACK[0x6720]);
  LODWORD(STACK[0x6620]) = v164;
  v260 = LODWORD(STACK[0x68A0]) ^ 0x868EA3E7 ^ v251 ^ v172;
  LODWORD(STACK[0x65F0]) = v260;
  if (v207)
    v261 = v260;
  else
    v261 = v252;
  LODWORD(STACK[0x68F0]) = v261;
  if (!v207)
    v252 = v204;
  LODWORD(STACK[0x6A60]) = v252;
  LODWORD(STACK[0x66F0]) = v250;
  if (v207)
    v262 = v204;
  else
    v262 = v250;
  LODWORD(STACK[0x68B0]) = v262;
  v263 = LODWORD(STACK[0x6850]) ^ 0xE41974EC ^ LODWORD(STACK[0x6660]);
  v264 = v211 ^ LODWORD(STACK[0x6660]);
  v265 = v216 ^ v254;
  LODWORD(STACK[0x6780]) = v213;
  if (v207)
    v266 = v215;
  else
    v266 = v213;
  LODWORD(STACK[0x6A40]) = v266;
  if (v207)
    v267 = v255;
  else
    v267 = v215;
  LODWORD(STACK[0x6860]) = v267;
  LODWORD(STACK[0x65D8]) = v265;
  if (v207)
    v268 = v265;
  else
    v268 = v255;
  LODWORD(STACK[0x69A0]) = v268;
  v269 = LODWORD(STACK[0x6740]) ^ 0xFA0AB392 ^ v164;
  LODWORD(STACK[0x6600]) = v259;
  if (v207)
    v270 = v259;
  else
    v270 = v269;
  LODWORD(STACK[0x67E0]) = v270;
  if (!v207)
    v269 = v226;
  LODWORD(STACK[0x68A0]) = v269;
  v271 = STACK[0x6880];
  if (v207)
    v271 = v226;
  LODWORD(STACK[0x67A0]) = v271;
  if (v207)
    v272 = v235;
  else
    v272 = v200;
  LODWORD(STACK[0x6870]) = v272;
  if (v207)
    v273 = v200;
  else
    v273 = STACK[0x6A70];
  LODWORD(STACK[0x6720]) = v236;
  if (v207)
    v274 = v236;
  else
    v274 = v235;
  LODWORD(STACK[0x65D0]) = v264;
  if (v207)
    v275 = STACK[0x6820];
  else
    v275 = v264;
  LODWORD(STACK[0x66B0]) = v253;
  LODWORD(STACK[0x65E8]) = v263;
  if (v207)
    v276 = v263;
  else
    v276 = v253;
  LODWORD(STACK[0x6610]) = v256;
  LODWORD(STACK[0x6608]) = v257;
  if (v207)
    v277 = v257;
  else
    v277 = v256;
  LODWORD(STACK[0x65F8]) = v258;
  v278 = STACK[0x6810];
  if (!v207)
    v278 = v258;
  LODWORD(STACK[0x6A30]) = v202;
  v279 = v202 == -1441740638;
  if (v202 == -1441740638)
    v280 = v210;
  else
    v280 = v208;
  LODWORD(STACK[0x67C0]) = v280;
  if (v202 == -1441740638)
    v281 = v208;
  else
    v281 = v210;
  LODWORD(STACK[0x6840]) = v281;
  if (v202 == -1441740638)
    v282 = v278;
  else
    v282 = v277;
  LODWORD(STACK[0x6850]) = v282;
  if (v202 == -1441740638)
    v283 = v277;
  else
    v283 = v278;
  LODWORD(STACK[0x64D0]) = v283;
  if (v202 == -1441740638)
    v284 = v241;
  else
    v284 = v239;
  LODWORD(STACK[0x6698]) = v284;
  if (v202 == -1441740638)
    v285 = v239;
  else
    v285 = v241;
  LODWORD(STACK[0x6708]) = v285;
  v286 = (unsigned __int8 *)STACK[0x6A10];
  v287 = *(unsigned __int8 *)(STACK[0x6510] + (STACK[0x6920] ^ 0xE4)) ^ STACK[0x6920];
  v288 = *(unsigned __int8 *)(STACK[0x6A10] + 6);
  v289 = ((v288 ^ 0x15 ^ -(v288 ^ 0x15) ^ (*(_BYTE *)(STACK[0x6510] + (v288 ^ 0x37))
                                         + (v288 ^ 0xEA ^ *(_BYTE *)(STACK[0x6510] + (v288 ^ 0x37)))
                                         + 1))
        + *(_BYTE *)(STACK[0x6510] + (v288 ^ 0x37))) ^ 0x5E;
  LOBYTE(v288) = *(_BYTE *)(STACK[0x6510] + (v286[13] ^ 0xEELL)) ^ v286[13];
  v290 = ((*(unsigned __int8 *)(STACK[0x6500] + (STACK[0x68E0] ^ 0xE2)) ^ 0xFFFFFFE3) << 24) | (v289 << 8);
  v291 = STACK[0x6A10];
  v292 = *(unsigned __int8 *)(STACK[0x6500] + (*(unsigned __int8 *)(STACK[0x6A10] + 11) ^ 0x38)) ^ 0xDC | ((STACK[0x6900] ^ 0x2A ^ *(unsigned __int8 *)(STACK[0x6510] + (STACK[0x6900] ^ 0x29))) << 8) | ((*(unsigned __int8 *)(STACK[0x6500] + (*(unsigned __int8 *)(STACK[0x6A10] + 8) ^ 0x62)) ^ 0x5E) << 24) | ((STACK[0x6A20] ^ 0xC3 ^ *(unsigned __int8 *)(STACK[0x6510] + (STACK[0x6A20] ^ 0xE9))) << 16);
  v293 = ((*(unsigned __int8 *)(v291 + 15) >> 6) | (4 * *(unsigned __int8 *)(v291 + 15))) ^ 0xFFFFFFAA ^ ((*(unsigned __int8 *)(STACK[0x6510] + (*(unsigned __int8 *)(v291 + 15) ^ 0x2ALL)) >> 6) | (4 * *(unsigned __int8 *)(STACK[0x6510] + (*(unsigned __int8 *)(v291 + 15) ^ 0x2ALL))));
  LOBYTE(v293) = (v293 >> 2) | ((_BYTE)v293 << 6);
  v294 = *(_BYTE *)(STACK[0x64F8] + (*(unsigned __int8 *)(STACK[0x6A10] + 14) ^ 0x93));
  v295 = v293 ^ 0xD4 | ((v294 ^ 0x5A) << 8) | ((v287 ^ 0x52) << 24) | ((v288 ^ 0xFA) << 16);
  v296 = STACK[0x6830];
  v297 = *(_DWORD *)(STACK[0x6830] + 4 * (v294 ^ 0xE4u));
  v298 = STACK[0x68D0];
  v299 = *(_DWORD *)(STACK[0x68D0] + 4 * (v287 ^ 0x32u));
  LODWORD(v288) = *(_DWORD *)(STACK[0x68D0] + 4 * (v288 ^ 0xE4u));
  v300 = *(_DWORD *)(STACK[0x6830] + 4 * (v293 ^ 0x12u)) ^ 0xC2D759FB;
  LODWORD(v288) = (*(unsigned __int8 *)(STACK[0x64F0] + (v286[3] ^ 0x25)) ^ 0x48 | ((*(unsigned __int8 *)(STACK[0x64F8] + (v286[2] ^ 0x9ALL)) ^ 0xAF) << 8) | ((*(unsigned __int8 *)(STACK[0x6500] + (v286[1] ^ 0xCFLL)) ^ 0x18) << 16) | ((*(unsigned __int8 *)(STACK[0x64F8] + (*v286 ^ 0xDBLL)) ^ 0x36) << 24)) ^ 0x8A08AD2E ^ v300 ^ __ROR4__(v297 ^ 0xC800BD52 ^ (16 * v297) & 0x82566A80, 24) ^ __ROR4__(v299 ^ 0xF892B552 ^ (-1931366532 * (v299 ^ 0x512CDC69)), 8) ^ ((16 * v300) | 0x7DA99570) ^ __ROR4__(v288 ^ 0xF892B552 ^ (-1931366532 * (v288 ^ 0x512CDC69)), 16);
  v301 = v288 ^ (*(unsigned __int8 *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6A10] + 7) ^ 1)) | v290 | ((*(unsigned __int8 *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6A10] + 5) ^ 0x93)) ^ 0x15) << 16));
  v302 = v295 ^ v292 ^ v301;
  v303 = v302 ^ 0xD332B164;
  v304 = *(_DWORD *)(STACK[0x6830] + 4 * (((unsigned __int16)(v302 ^ 0xB164) >> 8) ^ 0xE9u));
  HIDWORD(v305) = v304 & 0x82566A8 ^ 0x7DFD9FF;
  LODWORD(v305) = HIDWORD(v305);
  v307 = __PAIR64__(v288, __ROR4__((v305 >> 21) & 0xFFFFF87F ^ __ROR4__(v304 ^ 0xB5FD22A2, 25) ^ 0x73EA4796, 7));
  v306 = v307 ^ 0x2CE7D48F;
  LODWORD(v307) = v288;
  LODWORD(v288) = v307 >> 2;
  LODWORD(v307) = __ROR4__(v306, 26);
  v308 = v302 ^ 0x893916B8;
  v309 = *(_DWORD *)(STACK[0x6830] + 4 * (HIBYTE(v302) ^ 0xC7));
  v310 = *(_DWORD *)(STACK[0x68D0] + 4 * (v308 ^ 0x1Eu));
  v311 = STACK[0x6910];
  v312 = v310 ^ (-1931366532 * (v310 ^ 0x512CDC69)) ^ __ROR4__(*(_DWORD *)(STACK[0x6910] + 4 * (BYTE2(v303) ^ 0x20u)) ^ 0x45D9A488, 16) ^ __ROR4__(v309 ^ 0xC800BD52 ^ (16 * v309) & 0x82566A80, 8) ^ __ROR4__(v288 ^ v307 ^ 0x908E163F, 30) ^ 0x13148497;
  LODWORD(v288) = v312 ^ v292;
  v313 = v312 ^ v292 ^ v308;
  v314 = *(_DWORD *)(STACK[0x6830] + 4 * (BYTE1(v313) ^ 0x80u));
  v315 = *(_DWORD *)(STACK[0x68D0] + 4 * (HIBYTE(v313) ^ 0xB7));
  v316 = *(_DWORD *)(STACK[0x68D0] + 4 * (v313 ^ 0xF9u)) ^ 0x512CDC69;
  v317 = (-1931366532 * v316) ^ v316 ^ __ROR4__(*(_DWORD *)(STACK[0x6910] + 4 * (BYTE2(v313) ^ 0x9Eu)) ^ 0x45D9A488, 16) ^ __ROR4__(v314 ^ 0xC800BD52 ^ (16 * v314) & 0x82566A80, 24) ^ __ROR4__(v315 ^ 0xF892B552 ^ (-1931366532 * (v315 ^ 0x112CDC69)), 8);
  v318 = v317 ^ v301;
  v319 = v317 ^ v301 ^ 0x9E3241EC;
  LODWORD(v288) = v288 ^ v319;
  v320 = v319 ^ v303;
  v321 = v320 ^ 0xA9B5CEE7;
  v322 = *(_DWORD *)(STACK[0x68D0] + 4 * (((v320 ^ 0xA9B5CEE7) >> 16) ^ 0x1Eu));
  LODWORD(v307) = __ROR4__(*(_DWORD *)(STACK[0x6990] + 4 * (HIBYTE(v320) ^ 0x6E)), 24) ^ 0x49EA2C4E;
  HIDWORD(v307) = v307;
  v323 = *(_DWORD *)(STACK[0x68D0] + 4 * (v320 ^ 0xF9u)) ^ 0x512CDC69;
  v324 = (v307 >> 8) ^ __ROR4__(*(_DWORD *)(STACK[0x6910]+ 4 * (((unsigned __int16)(v320 ^ 0xCEE7) >> 8) ^ 0x2Bu)) ^ 0x45D9A488, 24) ^ v323 ^ (-1931366532 * v323) ^ v317 ^ __ROR4__(v322 ^ 0xF892B552 ^ (-1931366532* (v322 ^ 0x512CDC69)), 16) ^ v312;
  v325 = v324 ^ v318;
  LODWORD(v288) = v288 ^ v325;
  v326 = (((v288 ^ v321 ^ 0x5539E630) >> 12) & 0xF0 | ((v288 ^ v321 ^ 0x5539E630) >> 20) & 0xF) ^ 0x66;
  v327 = *(_DWORD *)(STACK[0x6830] + 4 * (((v326 >> 4) & 0xFFFFFF0F | (16 * (v326 & 0xF))) ^ 0x28));
  v328 = STACK[0x6990];
  v329 = *(_DWORD *)(STACK[0x6910] + 4 * ((v288 ^ v321) ^ 0x1Bu)) ^ 0x8FC3ADC1 ^ __ROR4__(__ROR4__(*(_DWORD *)(STACK[0x6990] + 4 * (((v288 ^ v321) >> 24) ^ 0x92)), 24) ^ 0x49EA2C4E, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)(STACK[0x6990] + 4 * (((unsigned __int16)(v288 ^ v321 ^ 0x8F0B) >> 8) ^ 0xAEu)), 24) ^ 0x49EA2C4E, 24) ^ v324 ^ __ROR4__(v327 ^ 0xC800BD52 ^ (16 * v327) & 0x82566A80, 16);
  v330 = v325 ^ 0xC43241EC ^ v329;
  v331 = v330 ^ v320 ^ 0xA9B5CEE7;
  v332 = *(_DWORD *)(STACK[0x68D0] + 4 * (BYTE1(v331) ^ 0x7Eu));
  HIDWORD(v307) = v332 ^ 0xF892B552 ^ (-1931366532 * (v332 ^ 0x512CDC69));
  LODWORD(v307) = HIDWORD(v307);
  v333 = *(_DWORD *)(STACK[0x68D0] + 4 * (BYTE2(v331) ^ 0xBAu));
  v334 = *(_DWORD *)(STACK[0x68D0] + 4 * (HIBYTE(v331) ^ 0xC9));
  v335 = (v307 >> 24) ^ __ROR4__(*(_DWORD *)(STACK[0x6990] + 4 * ((v330 ^ v320 ^ 0xE7) ^ 0xB5u)), 24) ^ __ROR4__(v333 ^ 0xF892B552 ^ (-1931366532 * (v333 ^ 0x512CDC69)), 16) ^ v329 ^ __ROR4__(v334 ^ 0xF892B552 ^ (-1931366532 * (v334 ^ 0x512CDC69)), 8);
  v336 = v335 ^ v330;
  v337 = v335 ^ v330 ^ 0xB51A0949;
  v338 = v288 ^ v330 ^ 0x829D8642 ^ v337;
  v339 = v338 ^ v331;
  v340 = v338 ^ v331 ^ 0xD7A46072;
  v341 = *(_DWORD *)(STACK[0x6830] + 4 * (BYTE1(v340) ^ 0x6Bu));
  HIDWORD(v307) = v341 ^ 0xC800BD52 ^ (16 * v341) & 0x82566A80;
  LODWORD(v307) = HIDWORD(v307);
  v342 = v307 >> 24;
  v343 = (v342 ^ 0xFFFF7FFF) + (v342 | 0x8000);
  v344 = v335 ^ 0x9ABE693B;
  v345 = STACK[0x68F0];
  if (v279)
    v345 = STACK[0x68B0];
  LODWORD(STACK[0x6710]) = v345;
  v346 = STACK[0x6980];
  if (v279)
    v346 = STACK[0x6970];
  LODWORD(STACK[0x66A0]) = v346;
  LODWORD(STACK[0x66C8]) = v275;
  LODWORD(STACK[0x6688]) = v276;
  if (v279)
    v347 = v275;
  else
    v347 = v276;
  LODWORD(STACK[0x64E0]) = v347;
  v348 = STACK[0x69A0];
  if (v279)
    v348 = STACK[0x6A40];
  LODWORD(STACK[0x6690]) = v348;
  v349 = STACK[0x6950];
  if (v279)
    v349 = STACK[0x6960];
  LODWORD(STACK[0x65E0]) = v349;
  v350 = STACK[0x69E0];
  if (v279)
    v350 = STACK[0x69D0];
  LODWORD(STACK[0x6890]) = v350;
  v351 = STACK[0x67E0];
  if (!v279)
    v351 = STACK[0x67A0];
  LODWORD(STACK[0x68E0]) = v351;
  v352 = STACK[0x6800];
  if (!v279)
    v352 = STACK[0x67B0];
  LODWORD(STACK[0x67F0]) = v352;
  v353 = STACK[0x69F0];
  if (!v279)
    v353 = STACK[0x6A00];
  LODWORD(STACK[0x6700]) = v353;
  LODWORD(STACK[0x6740]) = v273;
  LODWORD(STACK[0x6730]) = v274;
  if (v279)
    v354 = v273;
  else
    v354 = v274;
  LODWORD(STACK[0x66C0]) = v354;
  v355 = STACK[0x6940];
  if (!v279)
    v355 = STACK[0x6930];
  LODWORD(STACK[0x66D8]) = v355;
  v356 = STACK[0x69C0];
  if (v279)
    v356 = STACK[0x69B0];
  LODWORD(STACK[0x66B8]) = v356;
  if (((v343 + 1) & v344) != 0)
    v357 = ~v343;
  else
    v357 = v343 + 1;
  v358 = v339 ^ 0x87544575;
  v359 = *(_DWORD *)(v296 + 4 * (BYTE2(v340) ^ 0xBEu));
  v360 = *(_DWORD *)(v296 + 4 * (v339 ^ 0x3Bu)) ^ 0xC2D759FB;
  v361 = v360 ^ __ROR4__(*(_DWORD *)(v311 + 4 * (HIBYTE(v339) ^ 0xAC)) ^ 0x45D9A488, 8) ^ ((16 * v360) | 0x7DA99570) ^ v342 & 0xFFFF7FFF;
  v362 = __ROR4__(v359 ^ 0xC800BD52 ^ (16 * v359) & 0x82566A80, 16);
  v363 = v361 ^ v362 ^ (v357 + v344);
  v364 = v336 ^ 0x1DEA2C4E ^ v363;
  v365 = v364 ^ v338 ^ v358;
  LODWORD(STACK[0x6A20]) = v364 ^ v338;
  v366 = *(_DWORD *)(v328
                   + 4
                   * (v336 ^ 0x4E ^ (v361 ^ v362 ^ (v357 + v344)) ^ v338 ^ v358 ^ 0x9Eu));
  HIDWORD(v367) = (*(_DWORD *)(v311 + 4 * (HIBYTE(v365) ^ 0xC8)) - 0x4000000) ^ 0x41D9A488;
  LODWORD(v367) = HIDWORD(v367);
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6A50]) | 0x900;
  v368 = *(_DWORD *)(v298 + 4 * (BYTE1(v365) ^ 0x65u));
  v369 = (v367 >> 8) ^ __ROR4__(v366, 24) ^ __ROR4__(*(_DWORD *)(v311 + 4 * (BYTE2(v365) ^ 1u)) ^ 0x45D9A488, 16) ^ __ROR4__(v368 ^ 0xF892B552 ^ (-1931366532 * (v368 ^ 0x512CDC69)), 24) ^ v363;
  v370 = v364 ^ v369 ^ 0x65307210;
  v371 = *(_DWORD *)(v298 + 4 * (((unsigned __int16)(v370 ^ v358) >> 8) ^ 0x40u));
  v372 = *(_DWORD *)(v296 + 4 * ((v370 ^ v358) ^ 0x10u)) ^ 0xC2D759FB;
  v373 = v364 ^ v369 ^ 0xF4EA2C4E;
  v374 = v369 ^ 0xE32A7B59;
  v375 = v370 ^ v364 ^ v338;
  v376 = v370 ^ v358 ^ 0x69DA5E5E;
  v377 = v372 ^ __ROR4__(*(_DWORD *)(v311 + 4 * (((v370 ^ v358) >> 24) ^ 0x42)) ^ 0x45D9A488, 8) ^ ((16 * v372) | 0x7DA99570) ^ __ROR4__(*(_DWORD *)(v311 + 4 * (((v370 ^ v358) >> 16) ^ 0xF1u)) ^ 0x45D9A488, 16) ^ __ROR4__(v371 ^ 0xF892B552 ^ (-1931366532 * (v371 ^ 0x512CDC69)), 24) ^ v369 ^ 0xE32A7B59;
  v378 = v377 ^ v373 ^ v375;
  v379 = v378 ^ 0xA41A0949;
  v380 = v378 ^ 0xA41A0949 ^ v376 ^ 0xE6DA5E5E;
  v381 = *(_DWORD *)(v298
                   + 4 * (((unsigned __int16)(v378 ^ 0x949 ^ v370 ^ v358 ^ 0x5E5E) >> 8) ^ 0x40u)) ^ 0x512CDC69;
  v382 = *(_DWORD *)(v311 + 4 * (v378 ^ 0x49 ^ v376 ^ 0x75u)) ^ __ROR4__(*(_DWORD *)(v311 + 4 * (((v379 ^ v376) >> 24) ^ 0xCD)) ^ 0x45D9A488, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)(v328 + 4 * (((v379 ^ v376) >> 16) ^ 0x1Du)), 24) ^ 0x49EA2C4E, 16) ^ v377 ^ __ROR4__((v381 - 1447139013 - ((2 * v381) & 0x537CD276)) ^ (-1931366532 * v381), 24);
  v383 = v377 ^ v373 ^ 0x30307210;
  LODWORD(STACK[0x6A50]) = v383;
  v384 = v382 ^ 0x2EEA2C4E ^ v383;
  v385 = v378 ^ 0x42C05717 ^ v384 ^ 0x7B29818F;
  LODWORD(STACK[0x6990]) = v385 ^ -v385 ^ (v380 - (v384 ^ 0x7B29818F ^ v376));
  v386 = ((v312 ^ v301) + 479240099 - ((2 * (v312 ^ v301)) & 0x39213F46)) ^ LODWORD(STACK[0x6628]);
  v387 = v386 + 1708065422 - ((2 * v386) & 0xCB9E051C);
  v388 = v337 + 1708065422 - 2 * (v337 & 0x65CF029E ^ v336 & 0x10);
  v389 = (v358 + 1708065422 - ((2 * v358) & 0xCB9E051C)) ^ LODWORD(STACK[0x6620]);
  v390 = v389 + 781507133 - ((2 * v389) & 0x5D29B47A);
  v391 = (v344 + 1708065422 - ((2 * v344) & 0xCB9E051C)) ^ LODWORD(STACK[0x6620]);
  v392 = v391 + 781507133 - ((2 * v391) & 0x5D29B47A);
  v393 = (v388 ^ LODWORD(STACK[0x6620])) + 781507133 - ((2 * (v388 ^ LODWORD(STACK[0x6620]))) & 0x5D29B47A);
  v394 = STACK[0x6630];
  v395 = (((2 * (STACK[0x6630] & 0x40 ^ 0xA2028C9)) & 0x4005092) - (STACK[0x6630] & 0x40 ^ 0xA2028C9) + 2029540502) ^ 0x72D87C1F;
  v396 = (v338 + 1708065422 - ((2 * v338) & 0xCB9E051C)) ^ LODWORD(STACK[0x6620]);
  if ((v396 & v395) != 0)
    v395 = -v395;
  v397 = v395 + (v396 ^ 0x50F02507);
  v398 = (411776102 - (v394 & 0xFFFFFFBF ^ 0x555AA689 | 0x188B3466) + (v394 & 0xFFFFFFBF ^ 0x555AA689 | 0xE774CB99)) ^ 0x6771CF91;
  v399 = v398 - ((2 * v398) & 0x6B2B624E) + 899002663;
  v400 = v374 - 509984512 - ((2 * v374) & 0xC3348200);
  v401 = (v376 ^ LODWORD(STACK[0x66E8])) - 509984512 - ((2 * (v376 ^ LODWORD(STACK[0x66E8]))) & 0xC3348200);
  v402 = (v375 ^ 0xE32A7B59) - 509984512 - ((2 * (v375 ^ 0xE32A7B59)) & 0xC3348200);
  v403 = v373 - 509984512 - ((2 * v373) & 0xC3348200);
  v404 = STACK[0x64B0];
  v405 = v404 - 509984512 - 2 * (v404 & 0x619A4108 ^ STACK[0x67D0] & 8);
  v406 = (v382 ^ 0x2EEA2C4E) - 509984512 - 2 * ((v382 ^ 0x2EEA2C4E) & 0x619A4120 ^ v382 & 0x20);
  v407 = v385 - 509984512 - ((2 * v385) & 0xC3348200);
  v408 = v394 ^ 0x87838BB4 ^ v393;
  v409 = STACK[0x6520];
  v410 = (v384 ^ v409) - 509984512 - ((2 * (v384 ^ v409)) & 0xC3348200);
  v411 = LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x66E0]);
  v412 = v411 ^ 0x56EB9A96 ^ v379;
  v413 = v394 ^ 0xD773AEB3 ^ v390;
  v414 = v399 ^ 0x192D6768 ^ v397;
  v415 = v394 ^ 0x7F838BB4 ^ v392;
  v416 = LODWORD(STACK[0x6750]) ^ v363 ^ 0x1D2FC9A7;
  v417 = LODWORD(STACK[0x6750]) ^ v364 ^ 0xE52FC9A7;
  v418 = LODWORD(STACK[0x6750]) ^ 0xB5DFECA0 ^ LODWORD(STACK[0x6A20]);
  v419 = LODWORD(STACK[0x6750]) ^ 0xB5DFECA0 ^ v365;
  v420 = LODWORD(STACK[0x68C0]) - 1540612120 - (LODWORD(STACK[0x6660]) ^ v387 ^ 0xBA955C3B) - v408;
  v421 = v412 + v420;
  if (((v412 + v420) & 1) != 0)
    v422 = LODWORD(STACK[0x6750]) ^ 0xB5DFECA0 ^ LODWORD(STACK[0x6A20]);
  else
    v422 = v417;
  LODWORD(STACK[0x6A20]) = v422;
  if ((v421 & 1) != 0)
    v423 = v417;
  else
    v423 = v416;
  if ((v421 & 1) != 0)
    v424 = v419;
  else
    v424 = v418;
  if ((v421 & 1) != 0)
    v425 = v416;
  else
    v425 = v419;
  LODWORD(STACK[0x6A10]) = v425;
  v426 = LODWORD(STACK[0x6AA0]) ^ 0x1B3F2DBD ^ v403;
  v427 = STACK[0x6518];
  v428 = LODWORD(STACK[0x6518]) ^ 0xE33F2DBD ^ v401;
  v429 = LODWORD(STACK[0x6AA0]) ^ 0x8AE573E3 ^ v402;
  v430 = LODWORD(STACK[0x6AA0]) ^ 0xBF2524F4 ^ v400;
  v431 = v411 ^ 0x4831C4C8 ^ LODWORD(STACK[0x6A50]);
  v432 = v411 ^ 0x8001B6D8 ^ v377;
  v433 = LODWORD(STACK[0x6990]) + v380;
  v434 = v411 ^ 0xB031C4C8 ^ v380;
  v435 = STACK[0x6A80];
  v436 = LODWORD(STACK[0x6A80]) ^ 0x6CFBD9DE ^ v406;
  LODWORD(STACK[0x6488]) = v405 ^ LODWORD(STACK[0x6518]);
  v437 = v435 ^ 0xEFD25851 ^ v407;
  LODWORD(STACK[0x66A8]) = v409 ^ 0xEFD25851 ^ v405 ^ v427 ^ v433;
  if ((v421 & 1) != 0)
    v438 = v436;
  else
    v438 = v409 ^ 0xEFD25851 ^ v405 ^ v427 ^ v433;
  if ((v421 & 1) != 0)
    v439 = v427 ^ v404 ^ 0x94FBD9DE ^ v410;
  else
    v439 = v436;
  LODWORD(STACK[0x6990]) = v439;
  LODWORD(STACK[0x6658]) = v437;
  if ((v421 & 1) != 0)
    v440 = v437;
  else
    v440 = v427 ^ v404 ^ 0x94FBD9DE ^ v410;
  LODWORD(STACK[0x65C8]) = v408;
  LODWORD(STACK[0x6540]) = v414;
  if ((v421 & 1) != 0)
    v441 = v414;
  else
    v441 = v408;
  LODWORD(STACK[0x6548]) = v413;
  LODWORD(STACK[0x6538]) = v415;
  if ((v421 & 1) != 0)
    v442 = v415;
  else
    v442 = v413;
  LODWORD(STACK[0x6750]) = v426;
  LODWORD(STACK[0x64C0]) = v429;
  if ((v421 & 1) == 0)
    v429 = v426;
  LODWORD(STACK[0x66D0]) = v430;
  LODWORD(STACK[0x64C8]) = v428;
  if ((v421 & 1) != 0)
    v443 = v430;
  else
    v443 = v428;
  LODWORD(STACK[0x64A0]) = v432;
  LODWORD(STACK[0x6498]) = v434;
  if ((v421 & 1) != 0)
    v444 = v432;
  else
    v444 = v434;
  LODWORD(STACK[0x64A8]) = v431;
  if ((v421 & 1) != 0)
    v431 = v412;
  LODWORD(STACK[0x6A50]) = v421;
  v445 = (v421 & 2) == 0;
  if ((v421 & 2) != 0)
    v446 = v441;
  else
    v446 = v442;
  LODWORD(STACK[0x6570]) = v446;
  if ((v421 & 2) != 0)
    v441 = v442;
  LODWORD(STACK[0x6568]) = v441;
  v447 = (((LODWORD(STACK[0x6708]) ^ 0xC0DEFE35) + 1059127755) ^ ((LODWORD(STACK[0x6708]) ^ 0x13CF849D) - 332367005) ^ ((LODWORD(STACK[0x6708]) ^ 0xA797FB9B) + 1483211877))
       - 277571762;
  v448 = (v447 ^ 0x4A26C) & (2 * (v447 & 0x9126330E)) ^ v447 & 0x9126330E;
  v449 = ((2 * (v447 ^ 0x2204C27C)) ^ 0x6645E2E4) & (v447 ^ 0x2204C27C) ^ (2 * (v447 ^ 0x2204C27C)) & 0xB322F172;
  v450 = (v449 ^ 0x1002C162) & (4 * v448) ^ v448;
  v451 = ((4 * (v449 ^ 0x91221112)) ^ 0xCC8BC5C8) & (v449 ^ 0x91221112) ^ (4 * (v449 ^ 0x91221112)) & 0xB322F170;
  v452 = (v451 ^ 0x8002C152) & (16 * v450) ^ v450;
  v453 = ((16 * (v451 ^ 0x33203032)) ^ 0x322F1720) & (v451 ^ 0x33203032) ^ (16 * (v451 ^ 0x33203032)) & 0xB322F170;
  v454 = v452 ^ 0xB322F172 ^ (v453 ^ 0x32221100) & (v452 << 8);
  v455 = (v454 << 16) & 0x33220000 ^ v454 ^ ((v454 << 16) ^ 0x71720000) & (((v453 ^ 0x8100E052) << 8) & 0x33220000 ^ 0x11020000 ^ (((v453 ^ 0x8100E052) << 8) ^ 0x22F10000) & (v453 ^ 0x8100E052));
  v456 = LODWORD(STACK[0x68E0])
       - 1837067025
       + LODWORD(STACK[0x6890])
       + (((LODWORD(STACK[0x6710]) ^ 0xA369F76E) + 1553336466) ^ ((LODWORD(STACK[0x6710]) ^ 0x84CC38D8) + 2066990888) ^ ((LODWORD(STACK[0x6710]) ^ 0x3E9DD608) - 1050531336));
  v457 = LODWORD(STACK[0x6700]) + 5651116 + ((LODWORD(STACK[0x66B8]) + 406065205) ^ LODWORD(STACK[0x6700]));
  v458 = LODWORD(STACK[0x6680]) >> 3;
  LODWORD(STACK[0x6920]) = v458;
  v459 = v458 ^ 0x7970D9u;
  v460 = (((2 * v457 + 7052) ^ 0x82D7BD2D) + 1860815533) ^ (((2 * v457 + 7052) ^ 0x1C07F447) - 264666169) ^ (((2 * v457 + 7052) ^ 0x9ED0496A) + 1928216300);
  v456 += 2648;
  v461 = (v456 ^ 0xC7421F4A) & (2 * (v456 & 0xD792986B)) ^ v456 & 0xD792986B;
  v462 = ((2 * (v456 ^ 0xED463F1A)) ^ 0x75A94EE2) & (v456 ^ 0xED463F1A) ^ (2 * (v456 ^ 0xED463F1A)) & 0x3AD4A770;
  v463 = (v462 ^ 0x30800261) & (4 * v461) ^ v461;
  v464 = ((4 * (v462 ^ 0xA54A111)) ^ 0xEB529DC4) & (v462 ^ 0xA54A111) ^ (4 * (v462 ^ 0xA54A111)) & 0x3AD4A770;
  v465 = (v464 ^ 0x2A508540) & (16 * v463) ^ v463;
  v466 = ((16 * (v464 ^ 0x10842231)) ^ 0xAD4A7710) & (v464 ^ 0x10842231) ^ (16 * (v464 ^ 0x10842231)) & 0x3AD4A770;
  v467 = v465 ^ 0x3AD4A771 ^ (v466 ^ 0x28402700) & (v465 << 8);
  v468 = (v467 << 16) & 0x3AD40000 ^ v467 ^ ((v467 << 16) ^ 0x27710000) & (((v466 ^ 0x12948061) << 8) & 0x3AD40000 ^ 0x2A500000 ^ (((v466 ^ 0x12948061) << 8) ^ 0x14A70000) & (v466 ^ 0x12948061));
  v460 -= 515590730;
  v469 = (v460 ^ 0x426D4D03) & (2 * (v460 & 0x634E6C0A)) ^ v460 & 0x634E6C0A;
  v470 = ((2 * (v460 ^ 0x446D8513)) ^ 0x4E47D232) & (v460 ^ 0x446D8513) ^ (2 * (v460 ^ 0x446D8513)) & 0x2723E918;
  v471 = (v470 ^ 0x2603C911) & (4 * v469) ^ v469;
  v472 = ((4 * (v470 ^ 0x21202909)) ^ 0x9C8FA464) & (v470 ^ 0x21202909) ^ (4 * (v470 ^ 0x21202909)) & 0x2723E918;
  v473 = (v472 ^ 0x403A000) & (16 * v471) ^ v471;
  v474 = ((16 * (v472 ^ 0x23204919)) ^ 0x723E9190) & (v472 ^ 0x23204919) ^ (16 * (v472 ^ 0x23204919)) & 0x2723E910;
  v475 = v473 ^ 0x2723E919 ^ (v474 ^ 0x22228109) & (v473 << 8);
  v476 = STACK[0xDAA8];
  v477 = (4 * v468) ^ (2 * v456);
  v478 = v460 ^ (2
               * ((v475 << 16) & 0x27230000 ^ v475 ^ ((v475 << 16) ^ 0x69190000) & (((v474 ^ 0x5016809) << 8) & 0x27230000 ^ 0x4020000 ^ (((v474 ^ 0x5016809) << 8) ^ 0x23E90000) & (v474 ^ 0x5016809))));
  v479 = (*(_QWORD *)(STACK[0xDAA8]
                    + 8
                    * ((*(_QWORD *)(v476
                                  + 8
                                  * ((*(_QWORD *)(v476 + 8 * (0x49FCE725 % v459)) + 1623025694) % v459))
                      + 755927823)
                     % v459))
        + 2437720038)
       % v459;
  STACK[0x6AA0] = STACK[0xDAA8];
  v480 = *(_QWORD *)(v476 + 8 * v479) + 1379015166;
  v481 = v447 ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x67C0]) ^ (2 * v455);
  STACK[0x68D0] = v459;
  v482 = v480 % v459 - ((2 * (v480 % v459)) & 0x244EEFA0) - 769165360;
  LODWORD(STACK[0x6A80]) = (((v482 ^ 0xE461D5C) + 994601546) ^ ((v482 ^ 0xC40D6E6F) - 251455109) ^ ((v482 ^ 0x186C04E3)
                                                                                                  + 761426935))
                         - 1287069661;
  LODWORD(STACK[0x6530]) = v423;
  LODWORD(STACK[0x64E8]) = v424;
  if (v445)
    v483 = v423;
  else
    v483 = v424;
  LODWORD(STACK[0x6550]) = v483;
  LODWORD(STACK[0x6470]) = v429;
  LODWORD(STACK[0x6460]) = v443;
  if (v445)
    v484 = v429;
  else
    v484 = v443;
  LODWORD(STACK[0x6558]) = v484;
  LODWORD(STACK[0x6468]) = v444;
  LODWORD(STACK[0x6458]) = v431;
  if (v445)
    v485 = v431;
  else
    v485 = v444;
  LODWORD(STACK[0x6560]) = v485;
  LODWORD(STACK[0x6480]) = v438;
  LODWORD(STACK[0x6478]) = v440;
  if (v445)
    v486 = v438;
  else
    v486 = v440;
  LODWORD(STACK[0x6578]) = v486;
  v487 = STACK[0x6A90];
  v488 = STACK[0x6A90] < 0x3981BAFC;
  LODWORD(STACK[0x6910]) = v477;
  LODWORD(STACK[0x6900]) = v478;
  v489 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v487 ^ 0xD36CB4BD ^ (53633 * v488)));
  LODWORD(STACK[0x68C0]) = v481 >> 1;
  LODWORD(STACK[0x67D0]) = (v481 >> 1) ^ 0x7DFB08EE;
  LODWORD(STACK[0x65B0]) = v412;
  LODWORD(STACK[0x64D8]) = v420;
  LODWORD(STACK[0x6618]) = v412 ^ v420;
  STACK[0x6A90] = STACK[0xDAA0];
  return ((uint64_t (*)(void))(v489 - 8))();
}

uint64_t sub_100A8E9E4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  _BOOL4 v9;
  int v10;
  unint64_t v11;

  v7 = v5;
  v8 = STACK[0x6A80];
  v9 = LODWORD(STACK[0x6A80]) < a3;
  v10 = STACK[0x6AC0];
  v11 = 8 * ((v7 | ((unint64_t)(v7 < a5) << 32)) + 0x184D4AC0FEEFEEEFLL) + 0x3D95A9F56F09BA40;
  *(_QWORD *)(STACK[0x6A90] + v11) = *(_QWORD *)(STACK[0x6AA0] + v11) ^ v6;
  if (v9 == v7 + 1195575073 < 0x9A71E0E9)
    v9 = v7 + 1195575073 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4 * v9) | (16 * v9) | v10)) - 8))();
}

uint64_t sub_100A91678()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  BOOL v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  int v37;
  int v38;

  if ((STACK[0x6790] & 1) != 0)
    v1 = STACK[0x65F0];
  else
    v1 = STACK[0x66F0];
  if ((STACK[0x6790] & 1) != 0)
    v2 = STACK[0x65E8];
  else
    v2 = STACK[0x65D0];
  if ((STACK[0x6790] & 1) != 0)
    v3 = STACK[0x6820];
  else
    v3 = STACK[0x66B0];
  if ((STACK[0x6790] & 1) != 0)
    v4 = STACK[0x65D8];
  else
    v4 = STACK[0x6780];
  if ((STACK[0x6790] & 1) != 0)
    v5 = STACK[0x6608];
  else
    v5 = STACK[0x65F8];
  if ((STACK[0x6790] & 1) != 0)
    v6 = STACK[0x6810];
  else
    v6 = STACK[0x6610];
  if ((STACK[0x6790] & 1) != 0)
    v7 = STACK[0x6600];
  else
    v7 = STACK[0x6880];
  if ((STACK[0x6790] & 1) != 0)
    v8 = STACK[0x6720];
  else
    v8 = STACK[0x6A70];
  v9 = LODWORD(STACK[0x6A30]) == -1441740638;
  v10 = STACK[0x66C8];
  if (LODWORD(STACK[0x6A30]) == -1441740638)
    v10 = STACK[0x6688];
  LODWORD(STACK[0x6688]) = v10;
  v11 = STACK[0x6800];
  if (v9)
    v11 = STACK[0x67B0];
  LODWORD(STACK[0x6810]) = v11;
  v12 = STACK[0x6770];
  v13 = STACK[0x6760];
  if (v9)
    v14 = STACK[0x6770];
  else
    v14 = STACK[0x6760];
  LODWORD(STACK[0x6880]) = v14;
  if (v9)
    v15 = v13;
  else
    v15 = v12;
  LODWORD(STACK[0x6800]) = v15;
  v16 = STACK[0x6A60];
  LODWORD(STACK[0x6600]) = v1;
  if (!v9)
    v16 = v1;
  LODWORD(STACK[0x65B8]) = v16;
  LODWORD(STACK[0x66C8]) = v2;
  LODWORD(STACK[0x66B0]) = v3;
  if (v9)
    v17 = v2;
  else
    v17 = v3;
  LODWORD(STACK[0x65E8]) = v17;
  v18 = STACK[0x6860];
  LODWORD(STACK[0x6780]) = v4;
  if (!v9)
    v18 = v4;
  LODWORD(STACK[0x67B0]) = v18;
  LODWORD(STACK[0x6610]) = v5;
  LODWORD(STACK[0x6608]) = v6;
  if (v9)
    v19 = v5;
  else
    v19 = v6;
  LODWORD(STACK[0x6820]) = v19;
  v20 = STACK[0x68A0];
  LODWORD(STACK[0x6450]) = v7;
  if (v9)
    v20 = v7;
  LODWORD(STACK[0x65F0]) = v20;
  v21 = STACK[0x6870];
  LODWORD(STACK[0x65D8]) = v8;
  if (!v9)
    v21 = v8;
  LODWORD(STACK[0x65C0]) = v21;
  v22 = STACK[0x6A50];
  if ((STACK[0x6A50] & 1) != 0)
    v23 = STACK[0x6548];
  else
    v23 = STACK[0x6540];
  if ((v22 & 1) != 0)
    v24 = STACK[0x65C8];
  else
    v24 = STACK[0x6538];
  v25 = STACK[0x64C8];
  if ((v22 & 1) == 0)
    v25 = STACK[0x64C0];
  LODWORD(STACK[0x6790]) = v25;
  if ((v22 & 1) != 0)
    v26 = STACK[0x64A8];
  else
    v26 = STACK[0x64A0];
  v27 = STACK[0x65B0] & LODWORD(STACK[0x64D8]);
  if ((v22 & 1) != 0)
    v28 = STACK[0x6498];
  else
    v28 = STACK[0x65B0];
  v29 = (v22 & 2) == 0;
  v30 = STACK[0x6530];
  if (v29)
    v30 = STACK[0x64E8];
  LODWORD(STACK[0x6490]) = v30;
  v31 = STACK[0x6470];
  if (v29)
    v31 = STACK[0x6460];
  LODWORD(STACK[0x6530]) = v31;
  v32 = STACK[0x6468];
  if (!v29)
    v32 = STACK[0x6458];
  LODWORD(STACK[0x6540]) = v32;
  v33 = STACK[0x6480];
  if (v29)
    v33 = STACK[0x6478];
  LODWORD(STACK[0x6548]) = v33;
  v34 = STACK[0x6920];
  LODWORD(STACK[0x6AC0]) = v0 - 37;
  LODWORD(STACK[0x6AA0]) = (((v34 ^ 0xB2E2EC2F) + 499083422) ^ ((v34 ^ 0x4D56B139) - 502581876) ^ ((v34 ^ 0xFFCD60B7 ^ (v0 - 37))
                                                                                                 + 1351657854))
                         + 1270920541;
  LODWORD(STACK[0x65C8]) = 2 * v27;
  v35 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6900]) ^ 0x3D9F61D2;
  v36 = (uint64_t (*)(void))(v35 - 12);
  STACK[0x6A90] = STACK[0xDAA8];
  LODWORD(STACK[0x65D0]) = v23;
  LODWORD(STACK[0x64C8]) = v24;
  if (v29)
    v37 = v23;
  else
    v37 = v24;
  LODWORD(STACK[0x6470]) = v37;
  STACK[0x6A70] = STACK[0xDAA0];
  LODWORD(STACK[0x6720]) = v26;
  LODWORD(STACK[0x66F0]) = v28;
  if (v29)
    v38 = v28;
  else
    v38 = v26;
  LODWORD(STACK[0x6538]) = v38;
  return v36();
}

uint64_t sub_100A91BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL4 v9;
  int v10;
  unint64_t v11;
  uint64_t v12;

  v8 = STACK[0x6AA0];
  v9 = LODWORD(STACK[0x6AA0]) < v6;
  v10 = STACK[0x6AC0];
  v11 = 8 * ((v5 | ((unint64_t)(v5 < a5) << 32)) + 0x516D4980C97C31ELL) - 0x28B6A4C2FE34E738;
  v12 = *(_QWORD *)(STACK[0x6A90] + v11);
  STACK[0x6A80] = (LODWORD(STACK[0x6AC0]) - 184978842) & 0xB0670E7;
  *(_QWORD *)(STACK[0x6A70] + v11) = v12 ^ v7;
  if (v9 == v5 - 1481191423 < 0xFAE5A9C9)
    v9 = v8 > v5 - 1481191423;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((229 * v9) ^ v10)) - 12))();
}

uint64_t sub_100A94890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t);

  v7 = LODWORD(STACK[0x6A30]) == -1441740638;
  v8 = STACK[0x68F0];
  if (LODWORD(STACK[0x6A30]) != -1441740638)
    v8 = STACK[0x68B0];
  LODWORD(STACK[0x64E8]) = v8;
  v9 = STACK[0x6980];
  if (!v7)
    v9 = STACK[0x6970];
  LODWORD(STACK[0x65B0]) = v9;
  v10 = STACK[0x6860];
  if (v7)
    v10 = STACK[0x6780];
  LODWORD(STACK[0x65F8]) = v10;
  v11 = STACK[0x6960];
  if (v7)
    v11 = STACK[0x6950];
  LODWORD(STACK[0x6760]) = v11;
  v12 = STACK[0x67E0];
  if (v7)
    v12 = STACK[0x67A0];
  LODWORD(STACK[0x6780]) = v12;
  v13 = STACK[0x68A0];
  if (!v7)
    v13 = STACK[0x6450];
  LODWORD(STACK[0x67A0]) = v13;
  v14 = STACK[0x6870];
  if (v7)
    v14 = STACK[0x65D8];
  LODWORD(STACK[0x65D8]) = v14;
  v15 = STACK[0x6940];
  if (v7)
    v15 = STACK[0x6930];
  LODWORD(STACK[0x6430]) = v15;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x65C8]) + LODWORD(STACK[0x6618]);
  if ((STACK[0x6A50] & 1) != 0)
    v16 = STACK[0x6750];
  else
    v16 = STACK[0x66D0];
  if ((STACK[0x6A50] & 1) != 0)
    v17 = STACK[0x66A8];
  else
    v17 = STACK[0x6658];
  v18 = (STACK[0x6A50] & 2) == 0;
  v19 = STACK[0x6A20];
  if ((STACK[0x6A50] & 2) == 0)
    v19 = STACK[0x6A10];
  LODWORD(STACK[0x6468]) = v19;
  v20 = (a4 ^ 0xBA731138AA101C9BLL)
      - ((a4 ^ 0xBA731138AA101C9BLL) >> 31)
      + (((a4 ^ 0xBA731138AA101C9BLL) - ((a4 ^ 0xBA731138AA101C9BLL) >> 31)) >> 9);
  v21 = v20 - (v20 >> 3);
  v22 = v21
      - 0x5776CA19A1C9D3C6
      + ((v21 - 0x5776CA19A1C9D3C6) >> 28)
      + ((v21 - 0x5776CA19A1C9D3C6 + ((v21 - 0x5776CA19A1C9D3C6) >> 28)) >> 8);
  v23 = v22 - (v22 >> 2);
  v24 = (v23 ^ 0x2496F735BA8F0655) + ((v23 ^ 0x2496F735BA8F0655) >> 31) + 0x6696ABA7D594BFE0;
  v25 = (v24 ^ 0x9D60005429636D29) & (2 * (v24 & 0x996954582A6B4020)) ^ v24 & 0x996954582A6B4020;
  v26 = ((2 * (v24 ^ 0xBD60A0543DA1ED69)) ^ 0x4813E8182F955A92) & (v24 ^ 0xBD60A0543DA1ED69) ^ (2 * (v24 ^ 0xBD60A0543DA1ED69)) & 0x2409F40C17CAAD48;
  v27 = v26 ^ 0x24081404104AA549;
  v28 = (v26 ^ 0x1E00003800000) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ 0x9027D0305F2AB524) & v27 ^ (4 * v27) & 0x2409F40C17CAAD48;
  v30 = (v29 ^ 0x1D000170AA500) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ 0x2408240C00C00849)) ^ 0x409F40C17CAAD490) & (v29 ^ 0x2408240C00C00849) ^ (16 * (v29 ^ 0x2408240C00C00849)) & 0x2409F40C17CAAD40;
  v32 = (v31 ^ 0x94000148A8400) & (v30 << 8) ^ v30;
  v33 = (((v31 ^ 0x2400B40C03402949) << 8) ^ 0x9F40C17CAAD4900) & (v31 ^ 0x2400B40C03402949) ^ ((v31 ^ 0x2400B40C03402949) << 8) & 0x2409F40C17CAAD00;
  v34 = v32 ^ 0x2409F40C17CAAD49 ^ (v33 ^ 0x40402880000) & (v32 << 16);
  v35 = (v24 ^ (2
              * ((v34 << 32) & 0x2409F40C00000000 ^ v34 ^ ((v34 << 32) ^ 0x17CAAD4900000000) & (((v33 ^ 0x2409F0081542A449) << 16) & 0x2409F40C00000000 ^ 0x1E00400000000 ^ (((v33 ^ 0x2409F0081542A449) << 16) ^ 0x740C17CA00000000) & (v33 ^ 0x2409F0081542A449))))) >> 8;
  v36 = (v23 ^ 0x2496F735BA8F0655)
      + ((v23 ^ 0x2496F735BA8F0655) >> 31)
      + 0x2B92F848B0B99099
      + (((v35 ^ 0x805F5B6E5BEA77B5) - 0x1C503577D317748BLL) ^ ((v35 ^ 0xEB62F63FD6F2F7F6) - 0x776D98265E0FF4C8) ^ ((v35 ^ 0x6BE4C6A5DD1D7E59) + 0x8145743AA1F8299));
  v37 = (v36 ^ 0x7C73A9B4A63F484ALL) & (2 * (v36 & 0x71430DA5283F6C8BLL)) ^ v36 & 0x71430DA5283F6C8BLL;
  v38 = ((2 * (v36 ^ 0xBEF5A1B6F61B405ELL)) ^ 0x9F6D5827BC4859AALL) & (v36 ^ 0xBEF5A1B6F61B405ELL) ^ (2 * (v36 ^ 0xBEF5A1B6F61B405ELL)) & 0xCFB6AC13DE242CD4;
  v39 = v38 ^ 0x4092A41042242455;
  v40 = (v38 ^ 0x8F04080180000000) & (4 * v37) ^ v37;
  v41 = ((4 * v39) ^ 0x3EDAB04F7890B354) & v39 ^ (4 * v39) & 0xCFB6AC13DE242CD4;
  v42 = (v41 ^ 0xE92A00358002050) & (16 * v40) ^ v40;
  v43 = ((16 * (v41 ^ 0xC1240C1086240C81)) ^ 0xFB6AC13DE242CD50) & (v41 ^ 0xC1240C1086240C81) ^ (16 * (v41 ^ 0xC1240C1086240C81)) & 0xCFB6AC13DE242CD0;
  v44 = (v43 ^ 0xCB228011C2000C00) & (v42 << 8) ^ v42;
  v45 = (((v43 ^ 0x4942C021C242085) << 8) ^ 0xB6AC13DE242CD500) & (v43 ^ 0x4942C021C242085) ^ ((v43 ^ 0x4942C021C242085) << 8) & 0xCFB6AC13DE242C00;
  v46 = v44 ^ 0xCFB6AC13DE242CD5 ^ (v45 ^ 0x86A4001204240000) & (v44 << 16);
  v47 = (v36 ^ (2
              * ((v46 << 32) & 0x4FB6AC1300000000 ^ v46 ^ ((v46 << 32) ^ 0x5E242CD500000000) & (((v45 ^ 0x4912AC01DA0028D5) << 16) & 0x4FB6AC1300000000 ^ 0x43A4201300000000 ^ (((v45 ^ 0x4912AC01DA0028D5) << 16) ^ 0x2C13DE2400000000) & (v45 ^ 0x4912AC01DA0028D5))))) >> 1;
  v48 = v36
      - (((v47 ^ 0xBE31AE1AC0E6B0F2) - 0x3924269EC5BC2669) ^ ((v47 ^ 0xE77B7BC17328607ELL) - 0x606EF3457672F6E5) ^ ((v47 ^ 0x6079D30BF9F54A1CLL) + 0x1893A47003502379))
      - 0x2CE57FB87D1F11B4;
  v49 = (v48 ^ 0xE661FF0155FD7AA0) & (2 * (v48 & 0xE001FF0955FD7234)) ^ v48 & 0xE001FF0955FD7234;
  v50 = ((2 * (v48 ^ 0x6662A5135C871EA0)) ^ 0xCC6B43412F4D928) & (v48 ^ 0x6662A5135C871EA0) ^ (2 * (v48 ^ 0x6662A5135C871EA0)) & 0x86635A1A097A6C94;
  v51 = v50 ^ 0x82214A0A090A2494;
  v52 = (v50 ^ 0x2100000704800) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0x198D686825E9B250) & v51 ^ (4 * v51) & 0x86635A1A097A6C94;
  v54 = (v53 ^ 0x1480801682000) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x8662121208124C84)) ^ 0x6635A1A097A6C940) & (v53 ^ 0x8662121208124C84) ^ (16 * (v53 ^ 0x8662121208124C84)) & 0x86635A1A097A6C90;
  v56 = (v55 ^ 0x621000001224800) & (v54 << 8) ^ v54;
  v57 = (((v55 ^ 0x80425A1A08582494) << 8) ^ 0x635A1A097A6C9400) & (v55 ^ 0x80425A1A08582494) ^ ((v55 ^ 0x80425A1A08582494) << 8) & 0x86635A1A097A6C00;
  v58 = v56 ^ 0x86635A1A097A6C94 ^ (v57 ^ 0x2421A0808680000) & (v56 << 16);
  v59 = v48 ^ (2
             * ((v58 << 32) & 0x6635A1A00000000 ^ v58 ^ ((v58 << 32) ^ 0x97A6C9400000000) & (((v57 ^ 0x8421401201126894) << 16) & 0x6635A1A00000000 ^ 0x461520000000000 ^ (((v57 ^ 0x8421401201126894) << 16) ^ 0x5A1A097A00000000) & (v57 ^ 0x8421401201126894))));
  v60 = ((v59 ^ 0x5FF741709D6A52C9) + 0x27463C80EA762BCDLL) ^ ((v59 ^ 0x8ABE1CF4351406CALL) - 0xDF09EFBBDF78030) ^ ((v59 ^ 0x394A8699EF77FF1FLL) + 0x41FBFB69986B861BLL);
  v61 = ((v60 - 0x6D506F4DF4CD6797) ^ 0x14E5399D4D65ACD2) & (2
                                                               * ((v60 - 0x6D506F4DF4CD6797) & 0xA6C5B9DE6E69AE92)) ^ (v60 - 0x6D506F4DF4CD6797) & 0xA6C5B9DE6E69AE92;
  v62 = ((2 * ((v60 - 0x6D506F4DF4CD6797) ^ 0x5CED1A21C5A7FCF2)) ^ 0xF45147FF579CA4C0) & ((v60
                                                                                               - 0x6D506F4DF4CD6797) ^ 0x5CED1A21C5A7FCF2) ^ (2 * ((v60 - 0x6D506F4DF4CD6797) ^ 0x5CED1A21C5A7FCF2)) & 0xFA28A3FFABCE5260;
  v63 = v62 ^ 0xA28A000A8425220;
  v64 = (v62 ^ 0xB00003FB038C0040) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0xE8A28FFEAF394980) & v63 ^ (4 * v63) & 0xFA28A3FFABCE5260;
  v66 = (v65 ^ 0xE82083FEAB084000) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x1208200100C61260)) ^ 0xA28A3FFABCE52600) & (v65 ^ 0x1208200100C61260) ^ (16 * (v65 ^ 0x1208200100C61260)) & 0xFA28A3FFABCE5260;
  v68 = (v67 ^ 0xA20823FAA8C40200) & (v66 << 8) ^ v66;
  v69 = (((v67 ^ 0x58208005030A5060) << 8) ^ 0x28A3FFABCE526000) & (v67 ^ 0x58208005030A5060) ^ ((v67 ^ 0x58208005030A5060) << 8) & 0xFA28A3FFABCE5200;
  v70 = v68 ^ 0xFA28A3FFABCE5260 ^ (v69 ^ 0x2820A3AB8A420000) & (v68 << 16);
  v71 = ((v70 << 32) ^ 0x2BCE526000000000) & (((v69 ^ 0xD2080054218C1260) << 16) & 0x7A28A3FF00000000 ^ 0x5800003100000000 ^ (((v69 ^ 0xD2080054218C1260) << 16) ^ 0x23FFABCE00000000) & (v69 ^ 0xD2080054218C1260));
  v72 = STACK[0x6790];
  LODWORD(STACK[0x6980]) = v16;
  if (!v18)
    v72 = v16;
  LODWORD(STACK[0x6458]) = v72;
  v73 = ((v60 - 0x6D506F4DF4CD6797) ^ (2 * ((v70 << 32) & 0x7A28A3FF00000000 ^ v70 ^ v71))) >> 30;
  v74 = v60
      - 0x3FFE6B9D00305F0ELL
      + (((v73 ^ 0x2D2E1F5EA2796A54) + 0x2D9A417D8FD5A586) ^ ((v73 ^ 0xFA4AB4AC01E01F7) + 0xF10F569EDB2CE27) ^ ((v73 ^ 0x228AB41478748027) + 0x223EEA3755D84FF7));
  v75 = (v74 ^ 0x743F14A010C95D2BLL) & (2 * (v74 & 0x78BF580A420D81B3)) ^ v74 & 0x78BF580A420D81B3;
  v76 = ((2 * (v74 ^ 0xD45D14A014C05C29)) ^ 0x59C49954AD9BBB34) & (v74 ^ 0xD45D14A014C05C29) ^ (2 * (v74 ^ 0xD45D14A014C05C29)) & 0xACE24CAA56CDDD9ALL;
  v77 = v76 ^ 0xA42244AA5244448ALL;
  v78 = (v76 ^ 0xC0048042084910) & (4 * v75) ^ v75;
  v79 = ((4 * v77) ^ 0xB38932A95B377668) & v77 ^ (4 * v77) & 0xACE24CAA56CDDD98;
  v80 = (v79 ^ 0xA08000A852055400) & (16 * v78) ^ v78;
  v81 = ((16 * (v79 ^ 0xC624C0204C88992)) ^ 0xCE24CAA56CDDD9A0) & (v79 ^ 0xC624C0204C88992) ^ (16 * (v79 ^ 0xC624C0204C88992)) & 0xACE24CAA56CDDD90;
  v82 = (v81 ^ 0x8C2048A044CDD900) & (v80 << 8) ^ v80;
  v83 = (((v81 ^ 0x20C2040A1200041ALL) << 8) ^ 0xE24CAA56CDDD9A00) & (v81 ^ 0x20C2040A1200041ALL) ^ ((v81 ^ 0x20C2040A1200041ALL) << 8) & 0xACE24CAA56CDDD00;
  v84 = v82 ^ 0xACE24CAA56CDDD9ALL ^ (v83 ^ 0xA040080244CD0000) & (v82 << 16);
  v85 = v74
      + 0x78BF580A420D81B3
      + (((v74 ^ (2
                * ((v84 << 32) & 0x2CE24CAA00000000 ^ v84 ^ ((v84 << 32) ^ 0x56CDDD9A00000000) & (((v83 ^ 0xCA244A81200459ALL) << 16) & 0x2CE24CAA00000000 ^ 0x2040082200000000 ^ (((v83 ^ 0xCA244A81200459ALL) << 16) ^ 0x4CAA56CD00000000) & (v83 ^ 0xCA244A81200459ALL))))) >> 15) ^ 0xFFFFAE094F6A20D3)
      + 1;
  v86 = v85 + (v85 >> 8);
  v87 = v86 ^ v21;
  v88 = v86
      - 0x20CFE6B9A106C3FLL
      + ((v86 - 0x20CFE6B9A106C3FLL) >> 31)
      + ((v86 - 0x20CFE6B9A106C3FLL + ((v86 - 0x20CFE6B9A106C3FLL) >> 31)) >> 13);
  v89 = ((v88 + (v88 >> 3)) ^ 0xCB6EF430C0C8BC89)
      - (((v88 + (v88 >> 3)) ^ 0xCB6EF430C0C8BC89) >> 25)
      - ((((v88 + (v88 >> 3)) ^ 0xCB6EF430C0C8BC89) - (((v88 + (v88 >> 3)) ^ 0xCB6EF430C0C8BC89) >> 25)) >> 13);
  v90 = ((2 * v89) & 0xFFF79FEE6FD7DEF4) + (v89 ^ 0x7FFBCFF737EBEF7ALL);
  v91 = ((v90 - 0x4888043000A0218) ^ 0xB008AB23E85C125DLL) & (2 * ((v90 - 0x4888043000A0218) & 0x848CB04BC81E129ELL)) ^ (v90 - 0x4888043000A0218) & 0x848CB04BC81E129ELL;
  v92 = ((2 * ((v90 - 0x4888043000A0218) ^ 0xB109AB37687C1661)) ^ 0x6B0A36F940C409FELL) & ((v90 - 0x4888043000A0218) ^ 0xB109AB37687C1661) ^ (2 * ((v90 - 0x4888043000A0218) ^ 0xB109AB37687C1661)) & 0x35851B7CA06204FELL;
  v93 = v92 ^ 0x14850904A0220401;
  v94 = (v92 ^ 0x20000278004000F8) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0xD6146DF2818813FCLL) & v93 ^ (4 * v93) & 0x35851B7CA06204FCLL;
  v96 = (v95 ^ 0x14040970800000E0) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x2181120C20620403)) ^ 0x5851B7CA06204FF0) & (v95 ^ 0x2181120C20620403) ^ (16 * (v95 ^ 0x2181120C20620403)) & 0x35851B7CA06204F0;
  v98 = (v97 ^ 0x1001134800200400) & (v96 << 8) ^ v96;
  v99 = (((v97 ^ 0x25840834A042000FLL) << 8) ^ 0x851B7CA06204FF00) & (v97 ^ 0x25840834A042000FLL) ^ ((v97 ^ 0x25840834A042000FLL) << 8) & 0x35851B7CA0620400;
  v100 = v98 ^ 0x35851B7CA06204FFLL ^ (v99 ^ 0x501182020000000) & (v98 << 16);
  v101 = ((v100 << 32) ^ 0x206204FF00000000) & (((v99 ^ 0x3084035C806200FFLL) << 16) & 0x35851B7C00000000 ^ 0x24811B1C00000000 ^ (((v99 ^ 0x3084035C806200FFLL) << 16) ^ 0x1B7CA06200000000) & (v99 ^ 0x3084035C806200FFLL));
  v102 = STACK[0x6990];
  LODWORD(STACK[0x6970]) = v17;
  if (!v18)
    v102 = v17;
  LODWORD(STACK[0x6460]) = v102;
  v103 = ((v90 - 0x4888043000A0218) ^ (2 * ((v100 << 32) & 0x35851B7C00000000 ^ v100 ^ v101))) >> 1;
  v104 = v90
       - (((v103 ^ 0x6DE4AC9B386A287ELL) + 0x22FAEB13F85522EDLL) ^ ((v103 ^ 0xCF52984CB0E6C44DLL) - 0x7FB3203B8F263120) ^ ((v103 ^ 0xF57577F2CCE1E183) - 0x4594CF85F32114EELL))
       - 0x420178B8962C0835;
  v105 = (v104 ^ 0x9AEA286EE8CB9F9CLL) & (2 * (v104 & 0xDAE2AD6EE2921FDELL)) ^ v104 & 0xDAE2AD6EE2921FDELL;
  v106 = ((2 * (v104 ^ 0xBF6A28EFECCF9E38)) ^ 0xCB110B021CBB03CCLL) & (v104 ^ 0xBF6A28EFECCF9E38) ^ (2 * (v104 ^ 0xBF6A28EFECCF9E38)) & 0x658885810E5D81E6;
  v107 = v106 ^ 0x2488848102448022;
  v108 = (v106 ^ 0x410001000C1801C0) & (4 * v105) ^ v105;
  v109 = ((4 * v107) ^ 0x9622160439760798) & v107 ^ (4 * v107) & 0x658885810E5D81E4;
  v110 = (v109 ^ 0x400040008540180) & (16 * v108) ^ v108;
  v111 = ((16 * (v109 ^ 0x6188818106098066)) ^ 0x58885810E5D81E60) & (v109 ^ 0x6188818106098066) ^ (16 * (v109 ^ 0x6188818106098066)) & 0x658885810E5D81E0;
  v112 = (v111 ^ 0x4088000004580000) & (v110 << 8) ^ v110;
  v113 = (((v111 ^ 0x250085810A058186) << 8) ^ 0x8885810E5D81E600) & (v111 ^ 0x250085810A058186) ^ ((v111 ^ 0x250085810A058186) << 8) & 0x658885810E5D8100;
  v114 = v112 ^ 0x658885810E5D81E6 ^ (v113 ^ 0x8081000C010000) & (v112 << 16);
  v115 = v104 ^ (2
               * ((v114 << 32) & 0x6588858100000000 ^ v114 ^ ((v114 << 32) ^ 0xE5D81E600000000) & (((v113 ^ 0x65080481025C01E6) << 16) & 0x6588858100000000 ^ 0x6008818000000000 ^ (((v113 ^ 0x65080481025C01E6) << 16) ^ 0x5810E5D00000000) & (v113 ^ 0x65080481025C01E6))));
  v116 = ((v115 >> 24) ^ 0x990743A42DLL)
       + (v115 ^ 0x990743A42D98F783)
       + ((((v115 >> 24) ^ 0x990743A42DLL) + (v115 ^ 0x990743A42D98F783)) >> 13);
  LODWORD(STACK[0x6AC0]) = a7 ^ v87 ^ 0xA19C83EF ^ (v116
                                                  + (v116 >> 6)
                                                  - ((2 * (v116 + (v116 >> 6))) & 0x3FEAA0FC)
                                                  + 536170622);
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)STACK[0x6AB0] + 9) & 0xF)) + 14) & 0xF))
                    + 9) & 0xF))
       + 1) & 0xE) != 0)
    v117 = (*(_BYTE *)(STACK[0x6AB0]
                     + ((*(_BYTE *)(STACK[0x6AB0]
                                  + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)STACK[0x6AB0] + 9) & 0xF)) + 14) & 0xF))
                       + 9) & 0xF))
          + 1) & 0xF;
  else
    v117 = 1;
  v118 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x6A80]) - 4);
  STACK[0x6A70] = v117 - 1;
  return v118(4288584512);
}

uint64_t sub_100A961E0(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;

  v7 = STACK[0x6A80];
  v8 = 436863021
     - 379763385 * ((*(unsigned __int8 *)(a5 + v6) ^ 0xDF37EFFF) + 2 * *(unsigned __int8 *)(a5 + v6) + 2069405701);
  LODWORD(STACK[0x6A90]) = STACK[0x6A80] - 4918;
  v9 = (v8 ^ 0xD3D8F026) & (2 * (v8 & 0xDB98FAB7)) ^ v8 & 0xDB98FAB7;
  v10 = ((2 * ((v7 - 4918) ^ 0xD7D8DCFA ^ v8)) ^ 0x188077BA) & ((v7 - 4918) ^ 0xD7D8DCFA ^ v8) ^ (2
                                                                                                * ((v7 - 4918) ^ 0xD7D8DCFA ^ v8)) & v5;
  v11 = v10 ^ 0x4400845;
  v12 = (v10 ^ 0x8003399) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x3100EF74) & v11 ^ (4 * v11) & v5;
  v14 = (v13 ^ 0x2B50) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0xC401089)) ^ 0xC403BDD0) & (v13 ^ 0xC401089) ^ (16 * (v13 ^ 0xC401089)) & (v5 - 12);
  v16 = v8 ^ (2
            * (((v14 ^ (v5 + 1) ^ (v15 ^ 0x400390D) & (v14 << 8)) << 16) & 0xC400000 ^ v14 ^ (v5 + 1) ^ (v15 ^ 0x400390D) & (v14 << 8) ^ (((v14 ^ (v5 + 1) ^ (v15 ^ 0x400390D) & (v14 << 8)) << 16) ^ 0x3BDD0000) & (((v15 ^ 0x840020D) << 8) & 0xC400000 ^ 0xC400000 ^ (((v15 ^ 0x840020D) << 8) ^ 0x403B0000) & (v15 ^ 0x840020D))));
  v17 = v6 + (a4 ^ 0xD3988D0D ^ v16) - (((a4 ^ 0xD3988D0D ^ v16) + v6) >> 16);
  v18 = (v17 ^ 0x16FFFBDF) - 45623942 + ((2 * v17) & 0x2DFFF7BE);
  v19 = ((2 * (v18 ^ 0x68DCE3C)) ^ 0xDA6BC136) & (v18 ^ 0x68DCE3C) ^ (2 * (v18 ^ 0x68DCE3C)) & 0xED35E09A;
  v20 = (v18 ^ 0xC3BD8E36) & (2 * (v18 & 0xEBB82EA7)) ^ v18 & 0xEBB82EA7;
  v21 = v19 ^ 0x25142089;
  v22 = (v19 ^ 0xC835C011) & (4 * v20) ^ v20;
  v23 = ((4 * v21) ^ 0xB4D7826C) & v21 ^ (4 * v21) & 0xED35E098;
  v24 = (v23 ^ 0xA4158000) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x49206093)) ^ 0xD35E09B0) & (v23 ^ 0x49206093) ^ (16 * (v23 ^ 0x49206093)) & 0xED35E090;
  v26 = v24 ^ 0xED35E09B ^ (v25 ^ 0xC1140000) & (v24 << 8);
  v27 = (v18 ^ (2
              * ((v26 << 16) & 0x6D350000 ^ v26 ^ ((v26 << 16) ^ 0x609B0000) & (((v25 ^ 0x2C21E00B) << 8) & 0x6D350000 ^ 0x48150000 ^ (((v25 ^ 0x2C21E00B) << 8) ^ 0x35E00000) & (v25 ^ 0x2C21E00B))))) >> 8;
  v28 = v18 + (((v27 ^ 0x5D8D1EE8) - 1596439078) ^ ((v27 ^ 0x672D0220) - 1703388910) ^ ((v27 ^ 0x3A51ED27) - 955992553));
  v29 = v28 + 2079882937;
  v30 = ((v28 + 2079882937) ^ 0x615B100E) & (2 * ((v28 + 2079882937) & 0x721B050F)) ^ (v28 + 2079882937) & 0x721B050F;
  v31 = ((2 * ((v28 + 2079882937) ^ 0x456D1204)) ^ 0x6EEC2E16) & ((v28 + 2079882937) ^ 0x456D1204) ^ (2 * ((v28 + 2079882937) ^ 0x456D1204)) & 0x3776170A;
  v32 = v31 ^ 0x11121109;
  v33 = (v31 ^ 0x640400) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xDDD85C2C) & v32 ^ (4 * v32) & 0x37761708;
  v35 = ((16 * (v34 ^ 0x22260303)) ^ 0x776170B0) & (v34 ^ 0x22260303) ^ (16 * (v34 ^ 0x22260303)) & 0x37761700;
  v36 = v35 ^ 0x16070B;
  v37 = (v34 ^ 0x15501403) & (16 * v33) ^ v33 ^ 0x3776170B ^ (v35 ^ 0x37601000) & (((v34 ^ 0x15501403) & (16 * v33) ^ v33) << 8);
  v28 -= 958921162;
  v38 = (v28 ^ 0xF6376ADE) & (2 * (v28 & 0xE4360A1E)) ^ v28 & 0xE4360A1E;
  v39 = ((2 * (v28 ^ 0x365F7EF6)) ^ 0xA4D2E9D0) & (v28 ^ 0x365F7EF6) ^ (2 * (v28 ^ 0x365F7EF6)) & 0xD26974E8;
  v40 = (v36 << 8) & 0x37760000 ^ 0x1600000 ^ ((v36 << 8) ^ 0x76170000) & v36;
  v41 = ((4 * (v39 ^ 0x52291428)) ^ 0x49A5D3A0) & (v39 ^ 0x52291428) ^ (4 * (v39 ^ 0x52291428)) & 0xD26974E8;
  v42 = (v41 ^ 0x402150A8) & (16 * ((v39 ^ 0xC24164C0) & (4 * v38) ^ v38)) ^ (v39 ^ 0xC24164C0) & (4 * v38) ^ v38;
  v43 = ((16 * (v41 ^ 0x92482448)) ^ 0x26974E80) & (v41 ^ 0x92482448) ^ (16 * (v41 ^ 0x92482448)) & 0xD26974E0;
  v44 = v42 ^ 0xD26974E8 ^ (v43 ^ 0x2014468) & (v42 << 8);
  v45 = v28 ^ (2
             * ((v44 << 16) & 0x52690000 ^ v44 ^ ((v44 << 16) ^ 0x74E80000) & (((v43 ^ 0xD0683068) << 8) & 0xD2690000 ^ 0x12090000 ^ (((v43 ^ 0xD0683068) << 8) ^ 0x69740000) & (v43 ^ 0xD0683068)))) ^ 0x11377414;
  v46 = ((v45 ^ v16 ^ 0xDECCA9E) + 1096579826) ^ ((v45 ^ v16 ^ 0xC02E2ED0) - 1935761728) ^ ((v45 ^ v16 ^ 0xEF59FE99)
                                                                                          - 1544990985);
  v47 = v6 - 62675243 + v46;
  v48 = ((v37 << 16) ^ 0x170B0000) & v40;
  v49 = (v47 ^ 0x85562E69) & (2 * (v47 & 0x9590AE72)) ^ v47 & 0x9590AE72;
  v50 = ((2 * (v47 ^ 0xA757224D)) ^ 0x658F187E) & (v47 ^ 0xA757224D) ^ (2 * (v47 ^ 0xA757224D)) & 0x32C78C3E;
  v51 = v50 ^ 0x12408401;
  v52 = (v50 ^ 0x20870C18) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xCB1E30FC) & v51 ^ (4 * v51) & 0x32C78C3C;
  v54 = ((16 * (v53 ^ 0x30C18C03)) ^ 0x2C78C3F0) & (v53 ^ 0x30C18C03) ^ (16 * (v53 ^ 0x30C18C03)) & 0x32C78C30;
  v55 = (v53 ^ 0x2060023) & (16 * v52) ^ v52 ^ 0x32C78C3F ^ (v54 ^ 0x2040800F) & (((v53 ^ 0x2060023) & (16 * v52) ^ v52) << 8);
  v56 = (v37 << 16) & 0x37760000 ^ v37;
  v57 = (v47 ^ (2
              * ((v55 << 16) & 0x32C70000 ^ v55 ^ ((v55 << 16) ^ 0xC3F0000) & (((v54 ^ 0x12870C0F) << 8) & 0x32C70000 ^ 0x30430000 ^ (((v54 ^ 0x12870C0F) << 8) ^ 0x478C0000) & (v54 ^ 0x12870C0Fu))))) >> 16;
  v58 = ((v57 ^ 0xEED0D95D) - 2095420235) ^ ((v57 ^ 0xAF376219) - 1023551503) ^ ((v57 ^ 0x41E74B55) + 741211837);
  v59 = v46 + ((v46 + a1 - v58) >> 8) - v58;
  v60 = v6 - 911186434 + v59 - ((2 * (v6 + v59) - 12765568) & 0x9423957C);
  v61 = (((v60 ^ 0xBB46F4C1) + 1152977727) ^ ((v60 ^ 0x97427523) + 1757252317) ^ ((v60 ^ 0xE6154B5C) + 434812068))
      - 1121662159;
  v62 = ((2 * (v61 ^ 0x3818F489)) ^ 0xA6E562B4) & (v61 ^ 0x3818F489) ^ (2 * (v61 ^ 0x3818F489)) & 0xD372B15A;
  v63 = (v61 ^ 0xEA48758B) & (2 * (v61 & 0xEB6A45D3)) ^ v61 & 0xEB6A45D3;
  v64 = ((4 * (v62 ^ 0x5112914A)) ^ 0x4DCAC568) & (v62 ^ 0x5112914A) ^ (4 * (v62 ^ 0x5112914A)) & 0xD372B158;
  v65 = (v64 ^ 0x41428142) & (16 * ((v62 ^ 0x8260A012) & (4 * v63) ^ v63)) ^ (v62 ^ 0x8260A012) & (4 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x92303012)) ^ 0x372B15A0) & (v64 ^ 0x92303012) ^ (16 * (v64 ^ 0x92303012)) & 0xD372B150;
  v67 = v65 ^ 0xD372B15A ^ (v66 ^ 0x13221100) & (v65 << 8);
  v68 = v61 ^ (2
             * ((v67 << 16) & 0x53720000 ^ v67 ^ ((v67 << 16) ^ 0x315A0000) & (((v66 ^ 0xC050A05A) << 8) & 0x53720000 ^ 0x1420000 ^ (((v66 ^ 0xC050A05A) << 8) ^ 0x72B10000) & (v66 ^ 0xC050A05A))));
  v69 = v56 ^ v48;
  v70 = (((v68 ^ 0xBDAE4E92) - 658964291) ^ ((v68 ^ 0x681ABA24) + 219018251) ^ ((v68 ^ 0x64E29597) + 32889786))
      + 1002599152
      + ((((2 * v68) & 0xBCFA8C8C ^ 0x7CBEEB98) - 198876051) ^ (((2 * v68) & 0xBCFA8C8C ^ 0x3463EC97) - 1124572316) ^ (((2 * v68) & 0xBCFA8C8C ^ 0xD48F0B83) + 1544848504));
  v71 = (v70 ^ 0x92A2D286) & (2 * (v70 & 0xDB32DA87)) ^ v70 & 0xDB32DA87;
  v72 = ((2 * (v70 ^ 0x3687F38A)) ^ 0xDB6A521A) & (v70 ^ 0x3687F38A) ^ (2 * (v70 ^ 0x3687F38A)) & 0xEDB5290C;
  v73 = v72 ^ 0x24952905;
  v74 = (v72 ^ 0xC9000109) & (4 * v71) ^ v71;
  v75 = ((4 * v73) ^ 0xB6D4A434) & v73 ^ (4 * v73) & 0xEDB5290C;
  v76 = (v75 ^ 0xA4942009) & (16 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x49210909)) ^ 0xDB5290D0) & (v75 ^ 0x49210909) ^ (16 * (v75 ^ 0x49210909)) & 0xEDB52900;
  v78 = v70 ^ (2
             * (((v76 ^ 0xEDB5290D ^ (v77 ^ 0xC9100000) & (v76 << 8)) << 16) & 0x6DB50000 ^ v76 ^ 0xEDB5290D ^ (v77 ^ 0xC9100000) & (v76 << 8) ^ (((v76 ^ 0xEDB5290D ^ (v77 ^ 0xC9100000) & (v76 << 8)) << 16) ^ 0x290D0000) & (((v77 ^ 0x24A5290D) << 8) & 0xEDB50000 ^ 0x48940000 ^ (((v77 ^ 0x24A5290D) << 8) ^ 0x35290000) & (v77 ^ 0x24A5290D)))) ^ 0xCB4C0B53;
  v79 = v6 + (v16 ^ 0x4A860EC3 ^ v78) - (((v16 ^ 0x4A860EC3 ^ v78) + v6) >> 16);
  v80 = (v79 ^ 0xDFFF7FD5) + 1056947583 + ((2 * v79) & 0xBFFEFFAA);
  v81 = (v80 ^ 0xC0CEF88D) & (2 * (v80 & 0xE100C2AC)) ^ v80 & 0xE100C2AC;
  v82 = ((2 * (v80 ^ 0x42CFF995)) ^ 0x479E7672) & (v80 ^ 0x42CFF995) ^ (2 * (v80 ^ 0x42CFF995)) & 0xA3CF3B38;
  v83 = v82 ^ 0xA0410909;
  v84 = (v82 ^ 0x20461239) & (4 * v81) ^ v81;
  v85 = ((4 * v83) ^ 0x8F3CECE4) & v83 ^ (4 * v83) & 0xA3CF3B38;
  v86 = (v85 ^ 0x830C2820) & (16 * v84) ^ v84;
  v87 = ((16 * (v85 ^ 0x20C31319)) ^ 0x3CF3B390) & (v85 ^ 0x20C31319) ^ (16 * (v85 ^ 0x20C31319)) & 0xA3CF3B30;
  v88 = v86 ^ 0xA3CF3B39 ^ (v87 ^ 0x20C33300) & (v86 << 8);
  v89 = v80 ^ (2
             * ((v88 << 16) & 0x23CF0000 ^ v88 ^ ((v88 << 16) ^ 0x3B390000) & (((v87 ^ 0x830C0829) << 8) & 0x23CF0000 ^ 0x20C40000 ^ (((v87 ^ 0x830C0829) << 8) ^ 0x4F3B0000) & (v87 ^ 0x830C0829))));
  v90 = v80
      + 1175390571
      + ((((v89 >> 8) ^ 0xDF92CA3C) + 955821027) ^ (((v89 >> 8) ^ 0x84105927) + 1668954362) ^ (((v89 >> 8) ^ 0x5B621FAF)
                                                                                             - 1140294030));
  v91 = ((v90 + 3427) ^ 0x2356BC6B) & (2 * ((v90 + 3427) & 0xB366BE73)) ^ (v90 + 3427) & 0xB366BE73;
  v92 = ((2 * ((v90 + 3427) ^ 0x353E0AD)) ^ 0x606ABDBC) & ((v90 + 3427) ^ 0x353E0AD) ^ (2 * ((v90 + 3427) ^ 0x353E0AD)) & 0xB0355EDE;
  v93 = v92 ^ 0x90154242;
  v94 = (v92 ^ 0x20189E) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0xC0D57B78) & v93 ^ (4 * v93) & 0xB0355EDC;
  v96 = (v95 ^ 0x80155A50) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x30200486)) ^ 0x355EDE0) & (v95 ^ 0x30200486) ^ (16 * (v95 ^ 0x30200486)) & 0xB0355ED0;
  v98 = v96 ^ 0xB0355EDE ^ (v97 ^ 0x154C1E) & (v96 << 8);
  LODWORD(STACK[0x6AC0]) ^= v29 ^ (2 * v69) ^ v60 ^ (v90 + 3427) ^ (2
                                                                  * ((v98 << 16) & 0x30350000 ^ v98 ^ ((v98 << 16) ^ 0x5EDE0000) & (((v97 ^ 0xB020121E) << 8) & 0x30350000 ^ 0x210000 ^ (((v97 ^ 0xB020121E) << 8) ^ 0x355E0000) & (v97 ^ 0xB020121E)))) ^ 0xBC6E268;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * ((1412 * (STACK[0x6A70] == v6)) ^ v7))
                                         - 4))((a1 + 1));
}

uint64_t sub_100A97448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;

  v7 = LODWORD(STACK[0x6A30]) == -1441740638;
  v8 = STACK[0x6A60];
  if (LODWORD(STACK[0x6A30]) == -1441740638)
    v8 = STACK[0x6600];
  LODWORD(STACK[0x64D8]) = v8;
  v9 = STACK[0x6A40];
  if (v7)
    v9 = STACK[0x69A0];
  LODWORD(STACK[0x64C0]) = v9;
  v10 = STACK[0x6610];
  if (v7)
    v10 = STACK[0x6608];
  LODWORD(STACK[0x6750]) = v10;
  v11 = STACK[0x6740];
  if (v7)
    v11 = STACK[0x6730];
  LODWORD(STACK[0x65C8]) = v11;
  v12 = (STACK[0x6A50] & 2) == 0;
  v13 = STACK[0x65D0];
  if ((STACK[0x6A50] & 2) == 0)
    v13 = STACK[0x64C8];
  LODWORD(STACK[0x64C8]) = v13;
  v14 = STACK[0x6790];
  if (v12)
    v14 = STACK[0x6980];
  LODWORD(STACK[0x6448]) = v14;
  v15 = STACK[0x6990];
  if (v12)
    v15 = STACK[0x6970];
  LODWORD(STACK[0x6450]) = v15;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A90])) - 4))(107693545, 1266188342, 1563602872, a4, a5, a5, v6, v5);
}

uint64_t sub_100A975DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;

  LODWORD(STACK[0x6A70]) = v9;
  LODWORD(STACK[0x6A80]) = a8;
  v12 = 1369 * (LODWORD(STACK[0x6A90]) ^ 0x1D9D);
  v13 = (*(unsigned __int8 *)(a6 + v10) ^ 0xE99F93FC) + 81391444 + ((2 * *(unsigned __int8 *)(a6 + v10)) & 0x1F8) + 3209;
  LODWORD(STACK[0x6A40]) = v12;
  v14 = v13 * (v12 ^ 0xE95D00C2) + 139946000;
  v15 = (v14 ^ 0x2816B1D1) & (2 * (v14 & 0x4D5735C1)) ^ v14 & 0x4D5735C1;
  v16 = ((2 * (v14 ^ 0x28BAD351)) ^ 0xCBDBCD20) & (v14 ^ 0x28BAD351) ^ (2 * (v14 ^ 0x28BAD351)) & 0x65EDE690;
  v17 = v16 ^ 0x24242290;
  v18 = (v16 ^ 0x41C9C400) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x97B79A40) & v17 ^ (4 * v17) & 0x65EDE690;
  v20 = (v19 ^ 0x5A58200) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x60486490)) ^ 0x5EDE6900) & (v19 ^ 0x60486490) ^ (16 * (v19 ^ 0x60486490)) & 0x65EDE690;
  v22 = v20 ^ 0x65EDE690 ^ (v21 ^ 0x44CC6000) & (v20 << 8);
  v23 = v14 ^ (2
             * ((v22 << 16) & 0x65ED0000 ^ v22 ^ ((v22 << 16) ^ 0x66900000) & (((v21 ^ 0x21218690) << 8) & 0x65ED0000 ^ 0x90000 ^ (((v21 ^ 0x21218690) << 8) ^ 0x6DE60000) & (v21 ^ 0x21218690))));
  v24 = v10 + v11 + (a4 ^ 0x4F8CF8E1 ^ v23) - (((a4 ^ 0x4F8CF8E1 ^ v23) + a7) >> 16);
  v25 = (v24 ^ 0xFDDF3F67) + 1044370096 + ((2 * v24) & 0xFBBE7ECE) + 3882;
  v26 = ((2 * (v25 ^ 0x456474A0)) ^ 0xD09543E) & (v25 ^ 0x456474A0) ^ (2 * (v25 ^ 0x456474A0)) & 0x8684AA1E;
  v27 = (v25 ^ 0xC3E4DCBE) & (2 * (v25 & 0xC3E0DEBF)) ^ v25 & 0xC3E0DEBF;
  v28 = ((4 * (v26 ^ 0x8284AA01)) ^ 0x1A12A87C) & (v26 ^ 0x8284AA01) ^ (4 * (v26 ^ 0x8284AA01)) & 0x8684AA1C;
  v29 = (v26 ^ 0x8400001D) & (4 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x84840203)) ^ 0x684AA1F0) & (v28 ^ 0x84840203) ^ (16 * (v28 ^ 0x84840203)) & 0x8684AA10;
  v31 = v30 ^ 0x86840A0F;
  v32 = (v28 ^ 0x200A813) & (16 * v29) ^ v29 ^ 0x8684AA1F ^ (v30 ^ 0xA000) & (((v28 ^ 0x200A813) & (16 * v29) ^ v29) << 8);
  v33 = (v25 ^ (2
              * ((v32 << 16) & 0x6840000 ^ v32 ^ ((v32 << 16) ^ 0x2A1F0000) & ((v31 << 8) & 0x86840000 ^ 0x2040000 ^ ((v31 << 8) ^ 0x4AA0000) & v31)))) >> 8;
  v34 = v25
      - 2110243832
      + (((v33 ^ 0x24AD84D1) - 156355088) ^ ((v33 ^ 0x4487524A) - 1769675915) ^ ((v33 ^ 0x60E03711) - 1293711824));
  v35 = v34 + 1864;
  v36 = ((v34 + 1864) ^ 0x4CDF4A3B) & (2 * ((v34 + 1864) & 0x6EDF4ABA)) ^ (v34 + 1864) & 0x6EDF4ABA;
  v37 = ((2 * ((v34 + 1864) ^ 0x55555F7B)) ^ 0x77142B82) & ((v34 + 1864) ^ 0x55555F7B) ^ (2 * ((v34 + 1864) ^ 0x55555F7B)) & 0x3B8A15C0;
  v38 = v37 ^ 0x88A1441;
  v39 = (v37 ^ 0x33000180) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0xEE285704) & v38 ^ (4 * v38) & 0x3B8A15C0;
  v41 = ((16 * (v40 ^ 0x118200C1)) ^ 0xB8A15C10) & (v40 ^ 0x118200C1) ^ (16 * (v40 ^ 0x118200C1)) & 0x3B8A15C0;
  v42 = ((v34 + 1872626388) ^ 0x9DBC4173) & (2 * ((v34 + 1872626388) & 0xDDBE9574)) ^ (v34 + 1872626388) & 0xDDBE9574;
  v43 = ((2 * ((v34 + 1872626388) ^ 0x3CF16993)) ^ 0xC29FF9CE) & ((v34 + 1872626388) ^ 0x3CF16993) ^ (2 * ((v34 + 1872626388) ^ 0x3CF16993)) & 0xE14FFCE6;
  v44 = (v43 ^ 0xC00EF8C1) & (4 * v42) ^ v42;
  v45 = ((4 * (v43 ^ 0x21400421)) ^ 0x853FF39C) & (v43 ^ 0x21400421) ^ (4 * (v43 ^ 0x21400421)) & 0xE14FFCE4;
  v46 = (v45 ^ 0x810FF083) & (16 * v44) ^ v44;
  v47 = (v40 ^ 0x2A081501) & (16 * v39) ^ v39 ^ 0x3B8A15C1 ^ (v41 ^ 0x38801400) & (((v40 ^ 0x2A081501) & (16 * v39) ^ v39) << 8);
  v48 = ((16 * (v45 ^ 0x60400C63)) ^ 0x14FFCE70) & (v45 ^ 0x60400C63) ^ (16 * (v45 ^ 0x60400C63)) & 0xE14FFCE0;
  v49 = v46 ^ 0xE14FFCE7 ^ (v48 ^ 0x4FCC87) & (v46 << 8);
  v34 += 1310411034;
  v50 = (v34 ^ 0xDD3C1472) & (2 * (v34 & 0xDDBE9574)) ^ v34 & 0xDDBE9574;
  v51 = ((v41 ^ 0x30A01C1) << 8) & 0x3B8A0000 ^ 0x318A0000 ^ (((v41 ^ 0x30A01C1) << 8) ^ 0xA150000) & (v41 ^ 0x30A01C1);
  v52 = ((2 * (v34 ^ 0x471D3C9A)) ^ 0x354753DC) & (v34 ^ 0x471D3C9A) ^ (2 * (v34 ^ 0x471D3C9A)) & 0x9AA3A9EE;
  v53 = (v52 ^ 0x100201C2) & (4 * v50) ^ v50;
  v54 = ((4 * (v52 ^ 0x8AA0A822)) ^ 0x6A8EA7B8) & (v52 ^ 0x8AA0A822) ^ (4 * (v52 ^ 0x8AA0A822)) & 0x9AA3A9EC;
  v55 = (v54 ^ 0xA82A1A0) & (16 * v53) ^ v53;
  v56 = ((16 * (v54 ^ 0x90210846)) ^ 0xAA3A9EE0) & (v54 ^ 0x90210846) ^ (16 * (v54 ^ 0x90210846)) & 0x9AA3A9E0;
  v57 = v56 ^ 0x1081210E;
  v58 = v55 ^ 0x9AA3A9EE ^ (v56 ^ 0x8A228800) & (v55 << 8);
  v59 = (v56 ^ 0x1081210E) << 8;
  v60 = ((v47 << 16) ^ 0x15C10000) & v51;
  v61 = v34 ^ (2
             * ((v58 << 16) & 0x1AA30000 ^ v58 ^ ((v58 << 16) ^ 0x29EE0000) & (v59 & 0x1AA30000 ^ 0x18020000 ^ (v59 ^ 0x23A90000) & v57))) ^ 0xDE11E740;
  v62 = ((v49 << 16) ^ 0x7CE70000) & (((v48 ^ 0xE1003087) << 8) & 0x614F0000 ^ 0x20030000 ^ (((v48 ^ 0xE1003087) << 8) ^ 0x4FFC0000) & (v48 ^ 0xE1003087));
  v63 = ((v61 ^ v23 ^ 0xF0249C28) + 1687314537) ^ ((v61 ^ v23 ^ 0xFD708D6F) + 1774612784) ^ ((v61 ^ v23 ^ 0x6574C84E)
                                                                                           - 238930929);
  v64 = v10 + a3 + v63;
  v65 = (v49 << 16) & 0x614F0000 ^ v49;
  v66 = (v64 ^ 0x27B6A8FC) & (2 * (v64 & 0xA6372AFE)) ^ v64 & 0xA6372AFE;
  v67 = ((2 * (v64 ^ 0x6BD2BC74)) ^ 0x9BCB2D14) & (v64 ^ 0x6BD2BC74) ^ (2 * (v64 ^ 0x6BD2BC74)) & 0xCDE5968A;
  v68 = v67 ^ 0x4424928A;
  v69 = (v67 ^ 0x89C10400) & (4 * v66) ^ v66;
  v70 = ((4 * v68) ^ 0x37965A28) & v68 ^ (4 * v68) & 0xCDE59688;
  v71 = (v70 ^ 0x5841202) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0xC8618482)) ^ 0xDE5968A0) & (v70 ^ 0xC8618482) ^ (16 * (v70 ^ 0xC8618482)) & 0xCDE59680;
  v73 = (v47 << 16) & 0x3B8A0000 ^ v47 ^ v60;
  v74 = v71 ^ 0xCDE5968A ^ (v72 ^ 0xCC41000A) & (v71 << 8);
  LODWORD(STACK[0x6A60]) = v65 ^ v62;
  v75 = (v64 ^ (2
              * ((v74 << 16) & 0x4DE50000 ^ v74 ^ ((v74 << 16) ^ 0x168A0000) & (((v72 ^ 0x1A4960A) << 8) & 0x4DE50000 ^ 0x8610000 ^ (((v72 ^ 0x1A4960A) << 8) ^ 0x65960000) & (v72 ^ 0x1A4960A))))) >> 16;
  v76 = ((v75 ^ 0x86B12315) - 521158012) ^ ((v75 ^ 0xC0FE15FC) - 1499401109) ^ ((v75 ^ 0x464F0215) + 538043268);
  v77 = v10 + a2 + v63 - v76;
  v78 = (v77 ^ 0xDD048FE3) & (2 * (v77 & 0x1E502FEB)) ^ v77 & 0x1E502FEB;
  v79 = ((2 * (v77 ^ 0xF5249561)) ^ 0xD6E97514) & (v77 ^ 0xF5249561) ^ (2 * (v77 ^ 0xF5249561)) & 0xEB74BA8A;
  v80 = v79 ^ 0x29148A8A;
  v81 = (v79 ^ 0xC2543000) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0xADD2EA28) & v80 ^ (4 * v80) & 0xEB74BA88;
  v83 = (v82 ^ 0xA950AA02) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x42241082)) ^ 0xB74BA8A0) & (v82 ^ 0x42241082) ^ (16 * (v82 ^ 0x42241082)) & 0xEB74BA80;
  v85 = v83 ^ 0xEB74BA8A ^ (v84 ^ 0xA340A800) & (v83 << 8);
  v86 = (v77 ^ (2
              * ((v85 << 16) & 0x6B740000 ^ v85 ^ ((v85 << 16) ^ 0x3A8A0000) & (((v84 ^ 0x4834120A) << 8) & 0xEB740000 ^ 0xB440000 ^ (((v84 ^ 0x4834120A) << 8) ^ 0x74BA0000) & (v84 ^ 0x4834120A))))) >> 8;
  v87 = v63
      + (((v86 ^ 0x969D32BB) - 2063143169) ^ ((v86 ^ 0x91406B9B) - 2099529761) ^ ((v86 ^ 0x741E07A) + 349846592))
      - v76;
  v88 = v10 + v8 + v87;
  v89 = (v88 ^ 0x748E6A80) & (2 * (v88 & 0x6A848D2)) ^ v88 & 0x6A848D2;
  v90 = ((2 * (v88 ^ 0x719EFA04)) ^ 0xEE6D65AC) & (v88 ^ 0x719EFA04) ^ (2 * (v88 ^ 0x719EFA04)) & 0x7736B2D6;
  v91 = v90 ^ 0x11129252;
  v92 = (v90 ^ 0x26202080) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0xDCDACB58) & v91 ^ (4 * v91) & 0x7736B2D4;
  v94 = (v93 ^ 0x54128246) & (16 * v92) ^ v92;
  v95 = v10 + a1 + v87;
  v96 = (v95 ^ 0x4D1E4D26) & (2 * (v95 & 0xD5091A4)) ^ v95 & 0xD5091A4;
  v97 = ((16 * (v93 ^ 0x23243086)) ^ 0x736B2D60) & (v93 ^ 0x23243086) ^ (16 * (v93 ^ 0x23243086)) & 0x7736B2D0;
  v98 = ((2 * (v95 ^ 0x5D1E4E2E)) ^ 0xA09DBF14) & (v95 ^ 0x5D1E4E2E) ^ (2 * (v95 ^ 0x5D1E4E2E)) & 0x504EDF8A;
  v99 = v94 ^ 0x7736B2D6;
  v100 = v97 ^ 0x4149296;
  v101 = ((4 * (v98 ^ 0x5042408A)) ^ 0x413B7E28) & (v98 ^ 0x5042408A) ^ (4 * (v98 ^ 0x5042408A)) & 0x504EDF88;
  v102 = (v97 ^ 0x73222096) & (v94 << 8);
  v103 = (v101 ^ 0x400A5E00) & (16 * ((v98 ^ 0x48F0A) & (4 * v96) ^ v96)) ^ (v98 ^ 0x48F0A) & (4 * v96) ^ v96;
  v104 = ((16 * (v101 ^ 0x10448182)) ^ 0x4EDF8A0) & (v101 ^ 0x10448182) ^ (16 * (v101 ^ 0x10448182)) & 0x504EDF80;
  v105 = v103 ^ 0x504EDF8A ^ (v104 ^ 0x4CD800) & (v103 << 8);
  v106 = v95 ^ 0x43FB05C3 ^ (2
                           * ((v105 << 16) & 0x504E0000 ^ v105 ^ ((v105 << 16) ^ 0x5F8A0000) & (((v104 ^ 0x5002070A) << 8) & 0x504E0000 ^ (((v104 ^ 0x5002070A) << 8) ^ 0x4EDF0000) & (v104 ^ 0x5002070A) ^ 0x10000000)));
  v107 = v10 + v11 + (v23 ^ 0x1AED392 ^ v106) - (((v23 ^ 0x1AED392 ^ v106) + a7) >> 16);
  v108 = (v107 ^ 0xFE6EBFBF) + 2144597995 + ((2 * v107) & 0xFCDD7F7E);
  v109 = ((v99 ^ v102) << 16) & 0x77360000 ^ v99 ^ v102 ^ (((v99 ^ v102) << 16) ^ 0x32D60000) & ((v100 << 8) & 0x77360000 ^ 0x41040000 ^ ((v100 << 8) ^ 0x36B20000) & v100);
  v110 = ((2 * (v108 ^ 0x496AA8D2)) ^ 0x91AFC108) & (v108 ^ 0x496AA8D2) ^ (2 * (v108 ^ 0x496AA8D2)) & 0xC8D7E084;
  v111 = (v108 ^ 0x49382856) & (2 * (v108 & 0x81BD4856)) ^ v108 & 0x81BD4856;
  v112 = ((4 * (v110 ^ 0x48502084)) ^ 0x235F8210) & (v110 ^ 0x48502084) ^ (4 * (v110 ^ 0x48502084)) & 0xC8D7E084;
  v113 = (v112 ^ 0x578004) & (16 * ((v110 ^ 0x40874004) & (4 * v111) ^ v111)) ^ (v110 ^ 0x40874004) & (4 * v111) ^ v111;
  v114 = ((16 * (v112 ^ 0xC8806084)) ^ 0x8D7E0840) & (v112 ^ 0xC8806084) ^ (16 * (v112 ^ 0xC8806084)) & 0xC8D7E080;
  v115 = v113 ^ 0xC8D7E084 ^ (v114 ^ 0x88560000) & (v113 << 8);
  v116 = (v108 ^ (2
                * ((v115 << 16) & 0x48D70000 ^ v115 ^ ((v115 << 16) ^ 0x60840000) & (((v114 ^ 0x4081E084) << 8) & 0x48D70000 ^ 0x8170000 ^ (((v114 ^ 0x4081E084) << 8) ^ 0x57E00000) & (v114 ^ 0x4081E084))))) >> 8;
  v117 = v108
       + (((v116 ^ 0x3963EAED) - 141221340) ^ ((v116 ^ 0x73006C3C) - 1107909389) ^ ((v116 ^ 0x4AF29C58) - 2080090985));
  v118 = ((v117 + 1012172600) ^ 0x7712EEC4) & (2 * ((v117 + 1012172600) & 0x7700EED6)) ^ (v117 + 1012172600) & 0x7700EED6;
  v119 = ((2 * ((v117 + 1012172600) ^ 0xFB127248)) ^ 0x1825393C) & ((v117 + 1012172600) ^ 0xFB127248) ^ (2 * ((v117 + 1012172600) ^ 0xFB127248)) & 0x8C129C9E;
  v120 = v119 ^ 0x84128482;
  v121 = (v119 ^ 0x810181A) & (4 * v118) ^ v118;
  v122 = ((4 * v120) ^ 0x304A7278) & v120 ^ (4 * v120) & 0x8C129C9C;
  v123 = (v122 ^ 0x21006) & (16 * v121) ^ v121;
  v124 = ((16 * (v122 ^ 0x8C108C86)) ^ 0xC129C9E0) & (v122 ^ 0x8C108C86) ^ (16 * (v122 ^ 0x8C108C86)) & 0x8C129C90;
  v125 = v123 ^ 0x8C129C9E ^ (v124 ^ 0x8000881E) & (v123 << 8);
  LODWORD(STACK[0x6AC0]) ^= 0xC1239BAC ^ v35 ^ (2 * v73) ^ v88 ^ (2 * v109) ^ (v117 + 1012172600) ^ (2 * ((v125 << 16) & 0xC120000 ^ v125 ^ ((v125 << 16) ^ 0x1C9E0000) & (((v124 ^ 0xC12141E) << 8) & 0xC120000 ^ 0xC020000 ^ (((v124 ^ 0xC12141E) << 8) ^ 0x129C0000) & (v124 ^ 0xC12141E))));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8
                                                                        * ((23423 * (v10 + v11 == 15)) ^ LODWORD(STACK[0x6A90])))
                                                            - 4))(a1 + 1, a2 + 1, a3 + 1);
}

uint64_t sub_100A98968(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  char v171;
  int v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;

  v9 = STACK[0x6A40];
  v10 = (LODWORD(STACK[0x6A40]) - 935427463) & 0x37C17D65;
  v11 = LODWORD(STACK[0x6A30]) == -1441740638;
  v12 = STACK[0x69E0];
  if (LODWORD(STACK[0x6A30]) != -1441740638)
    v12 = STACK[0x69D0];
  LODWORD(STACK[0x64A0]) = v12;
  v13 = STACK[0x69C0];
  if (!v11)
    v13 = STACK[0x69B0];
  LODWORD(STACK[0x6440]) = v13;
  v14 = STACK[0x6720];
  if ((STACK[0x6A50] & 2) != 0)
    v14 = STACK[0x66F0];
  LODWORD(STACK[0x6438]) = v14;
  v15 = (a4 ^ 0xD0F1D255) + ((a4 ^ 0xD0F1D255) >> 10);
  LODWORD(STACK[0x6A90]) = v10;
  v16 = (v10 ^ 0x1E1BFE6B) + v15;
  v17 = (v16 ^ 0xF5C000E4) & (2 * (v16 & 0xE1E444F1)) ^ v16 & 0xE1E444F1;
  v18 = ((2 * (v16 ^ 0x75C009C4)) ^ 0x28489A6A) & (v16 ^ 0x75C009C4) ^ (2 * (v16 ^ 0x75C009C4)) & 0x94244D34;
  v19 = v18 ^ 0x94244515;
  v20 = (v18 ^ 0x10044011) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x509134D4) & v19 ^ (4 * v19) & 0x94244D34;
  v22 = (v21 ^ 0x10000411) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x84244921)) ^ 0x4244D350) & (v21 ^ 0x84244921) ^ (16 * (v21 ^ 0x84244921)) & 0x94244D30;
  v24 = v22 ^ 0x94244D35 ^ (v23 ^ 0x44125) & (v22 << 8);
  v25 = (v16 ^ (2
              * ((v24 << 16) & 0x14240000 ^ v24 ^ ((v24 << 16) ^ 0x4D350000) & (((v23 ^ 0x94200C25) << 8) & 0x94240000 ^ 0x10200000 ^ (((v23 ^ 0x94200C25) << 8) ^ 0x244D0000) & (v23 ^ 0x94200C25))))) >> 4;
  v26 = v15
      - (((v25 ^ 0x4DCC14E2) + 625610468) ^ ((v25 ^ 0xC1CB7BC5) - 1454546491) ^ ((v25 ^ 0x801922CE) - 392218416))
      - 1076138048;
  v27 = (v26 ^ 0x9438C529) & (2 * (v26 & 0xA4BCE829)) ^ v26 & 0xA4BCE829;
  v28 = ((2 * (v26 ^ 0xDC41C569)) ^ 0xF1FA5A80) & (v26 ^ 0xDC41C569) ^ (2 * (v26 ^ 0xDC41C569)) & 0x78FD2D40;
  v29 = v28 ^ 0x8052540;
  v30 = (v28 ^ 0x30F00000) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0xE3F4B500) & v29 ^ (4 * v29) & 0x78FD2D40;
  v32 = v30 ^ 0x78FD2D40 ^ (v31 ^ 0x60F42500) & (16 * v30);
  v33 = (16 * (v31 ^ 0x18090840)) & 0x78FD2D40 ^ 0x702D2940 ^ ((16 * (v31 ^ 0x18090840)) ^ 0x8FD2D400) & (v31 ^ 0x18090840);
  v34 = (v32 << 8) & 0x78FD2D00 ^ v32 ^ ((v32 << 8) ^ 0xFD2D4000) & v33;
  v35 = v26 ^ (2
             * ((v34 << 16) & 0x78FD0000 ^ v34 ^ ((v34 << 16) ^ 0x2D400000) & ((v33 << 8) & 0x78FD0000 ^ 0xD00000 ^ ((v33 << 8) ^ 0xFD2D0000) & v33)));
  v36 = ((v35 ^ 0x5D07EBBF) - 31940896) ^ ((v35 ^ 0x1467C0F8) - 1216825959) ^ ((v35 ^ 0xBCFC99EE) + 535030927);
  v37 = ((v36 - 1010441542) ^ 0xA1263904) & (2 * ((v36 - 1010441542) & 0x89B70251)) ^ (v36 - 1010441542) & 0x89B70251;
  v38 = ((2 * ((v36 - 1010441542) ^ 0xA2443986)) ^ 0x57E677AE) & ((v36 - 1010441542) ^ 0xA2443986) ^ (2 * ((v36 - 1010441542) ^ 0xA2443986)) & 0x2BF33BD6;
  v39 = v38 ^ 0x28110851;
  v40 = (v38 ^ 0x3E11394) & (4 * v37) ^ v37;
  v41 = ((4 * v39) ^ 0xAFCCEF5C) & v39 ^ (4 * v39) & 0x2BF33BD4;
  v42 = (v41 ^ 0x2BC02B50) & (16 * v40) ^ v40;
  v43 = ((16 * (v41 ^ 0x331083)) ^ 0xBF33BD70) & (v41 ^ 0x331083) ^ (16 * (v41 ^ 0x331083)) & 0x2BF33BD0;
  v44 = v42 ^ 0x2BF33BD7 ^ (v43 ^ 0x2B333987) & (v42 << 8);
  v45 = v36
      + 1300030731
      + ((((v36 - 1010441542) ^ (2
                               * ((v44 << 16) & 0x2BF30000 ^ v44 ^ ((v44 << 16) ^ 0x3BD70000) & (((v43 ^ 0xC00287) << 8) & 0x2BF30000 ^ 0x8C00000 ^ (((v43 ^ 0xC00287) << 8) ^ 0x733B0000) & (v43 ^ 0xC00287))))) >> 12) ^ 0x89F77);
  v46 = v45 + (v45 >> 2) - ((2 * (v45 + (v45 >> 2))) & 0x71085DD6) + 948186859;
  v47 = ((v46 ^ 0xD7AB9677) + 676620681) ^ ((v46 ^ 0xCA7BD385) + 897854587) ^ ((v46 ^ 0x25546B19) - 626289433);
  v48 = v47
      - (((((v47 - 1796461751) >> 13) ^ 0x57B41539) - 455729494) ^ ((((v47 - 1796461751) >> 13) ^ 0x75C639BF) - 962317776) ^ ((((v47 - 1796461751) >> 13) ^ 0x22722C86) - 1861212393));
  v49 = ((v48 - 1923287346) ^ 0xB2EC218C) & (2 * ((v48 - 1923287346) & 0xBAF1400C)) ^ (v48 - 1923287346) & 0xBAF1400C;
  v50 = ((2 * ((v48 - 1923287346) ^ 0xA30CA194)) ^ 0x33FBC330) & ((v48 - 1923287346) ^ 0xA30CA194) ^ (2 * ((v48 - 1923287346) ^ 0xA30CA194)) & 0x19FDE198;
  v51 = v50 ^ 0x8042088;
  v52 = (v50 ^ 0x11C90010) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0x67F78660) & v51 ^ (4 * v51) & 0x19FDE198;
  v54 = (v53 ^ 0x1F58000) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x18086198)) ^ 0x9FDE1980) & (v53 ^ 0x18086198) ^ (16 * (v53 ^ 0x18086198)) & 0x19FDE190;
  v56 = v54 ^ 0x19FDE198 ^ (v55 ^ 0x19DC0100) & (v54 << 8);
  v57 = ((v48 - 1923287346) ^ (2
                             * ((v56 << 16) & 0x19FD0000 ^ v56 ^ ((v56 << 16) ^ 0x61980000) & (((v55 ^ 0x21E018) << 8) & 0x19FD0000 ^ (((v55 ^ 0x21E018) << 8) ^ 0xFDE10000) & (v55 ^ 0x21E018) ^ 0x1C0000)))) >> 4;
  v58 = v48
      - 165482533
      + (((v57 ^ 0xF6F14F6D) - 160069002) ^ ((v57 ^ 0x55AC47FC) + 1428718309) ^ ((v57 ^ 0xABFEA0A2) - 1418041925));
  v59 = (v58 ^ 0x6AC3999B) & (2 * (v58 & 0x4A03D9D3)) ^ v58 & 0x4A03D9D3;
  v60 = ((2 * (v58 ^ 0x6AC43ABD)) ^ 0x418FC6DC) & (v58 ^ 0x6AC43ABD) ^ (2 * (v58 ^ 0x6AC43ABD)) & 0x20C7E36E;
  v61 = v60 ^ 0x20402122;
  v62 = (v60 ^ 0x47C26E) & (4 * v59) ^ v59;
  v63 = ((4 * v61) ^ 0x831F8DB8) & v61 ^ (4 * v61) & 0x20C7E36C;
  v64 = (v63 ^ 0x78126) & (16 * v62) ^ v62;
  v65 = ((16 * (v63 ^ 0x20C06246)) ^ 0xC7E36E0) & (v63 ^ 0x20C06246) ^ (16 * (v63 ^ 0x20C06246)) & 0x20C7E360;
  v66 = v64 ^ 0x20C7E36E ^ (v65 ^ 0x46220E) & (v64 << 8);
  v67 = v58 ^ (2
             * ((v66 << 16) & 0x20C70000 ^ v66 ^ ((v66 << 16) ^ 0x636E0000) & (((v65 ^ 0x2081C10E) << 8) & 0x20C70000 ^ 0x20040000 ^ (((v65 ^ 0x2081C10E) << 8) ^ 0xC7E30000) & (v65 ^ 0x2081C10E))));
  v68 = ((v67 ^ 0x1E5FF780) + 556178153) ^ ((v67 ^ 0xE40B835A) - 613224909) ^ ((v67 ^ 0xB1546BD5) - 1909651778);
  v69 = ((v68 - 1081705652) ^ 0xBE4508E3) & (2 * ((v68 - 1081705652) & 0xBC9602F0)) ^ (v68 - 1081705652) & 0xBC9602F0;
  v70 = ((2 * ((v68 - 1081705652) ^ 0xAE610843)) ^ 0x25EE1566) & ((v68 - 1081705652) ^ 0xAE610843) ^ (2 * ((v68 - 1081705652) ^ 0xAE610843)) & 0x12F70AB2;
  v71 = v70 ^ 0x12110A91;
  v72 = (v70 ^ 0xE10011) & (4 * v69) ^ v69;
  v73 = ((4 * v71) ^ 0x4BDC2ACC) & v71 ^ (4 * v71) & 0x12F70AB0;
  v74 = (v73 ^ 0x2D40A93) & (16 * v72) ^ v72;
  v75 = ((16 * (v73 ^ 0x10230033)) ^ 0x2F70AB30) & (v73 ^ 0x10230033) ^ (16 * (v73 ^ 0x10230033)) & 0x12F70AB0;
  v76 = v74 ^ 0x12F70AB3 ^ (v75 ^ 0x2700A83) & (v74 << 8);
  v77 = ((v68 - 1081705652) ^ (2
                             * ((v76 << 16) & 0x12F70000 ^ v76 ^ ((v76 << 16) ^ 0xAB30000) & (((v75 ^ 0x10870083) << 8) & 0x12F70000 ^ 0xF50000 ^ (((v75 ^ 0x10870083) << 8) ^ 0x770A0000) & (v75 ^ 0x10870083))))) >> 14;
  v78 = v68
      - (((v77 ^ 0xDFDE6239) - 927970169) ^ ((v77 ^ 0xCA16DA17) - 579275607) ^ ((v77 ^ 0x15CAC856) + 44361450))
      - 1819747068;
  v79 = v78 - (v78 >> 3) - ((2 * (v78 - (v78 >> 3))) & 0xCD3BA68C) + 1721619270;
  v80 = (((v79 ^ 0xD8275A3A) + 668509638) ^ ((v79 ^ 0xCA8EB658) + 896616872) ^ ((v79 ^ 0x74343F24) - 1949581092))
      - 1044344699;
  v81 = v80 - (v80 >> 12) - ((v80 - (v80 >> 12)) >> 8);
  v82 = ((v81 - 1439904196) ^ 0xC0D44FEA) & (2 * ((v81 - 1439904196) & 0xCA960FEB)) ^ (v81 - 1439904196) & 0xCA960FEB;
  v83 = ((2 * ((v81 - 1439904196) ^ 0x41D4596C)) ^ 0x1684AD0E) & ((v81 - 1439904196) ^ 0x41D4596C) ^ (2 * ((v81 - 1439904196) ^ 0x41D4596C)) & 0x8B425686;
  v84 = v83 ^ 0x89425281;
  v85 = (v83 ^ 0x83020405) & (4 * v82) ^ v82;
  v86 = ((4 * v84) ^ 0x2D095A1C) & v84 ^ (4 * v84) & 0x8B425684;
  v87 = (v86 ^ 0x9005203) & (16 * v85) ^ v85;
  v88 = ((16 * (v86 ^ 0x82420483)) ^ 0xB4256870) & (v86 ^ 0x82420483) ^ (16 * (v86 ^ 0x82420483)) & 0x8B425680;
  v89 = v87 ^ 0x8B425687 ^ (v88 ^ 0x80004087) & (v87 << 8);
  v90 = ((v81 - 1439904196) ^ (2
                             * ((v89 << 16) & 0xB420000 ^ v89 ^ ((v89 << 16) ^ 0x56870000) & (((v88 ^ 0xB421687) << 8) & 0xB420000 ^ 0x9000000 ^ (((v88 ^ 0xB421687) << 8) ^ 0x42560000) & (v88 ^ 0xB421687))))) >> 9;
  v91 = v81
      + 1566505324
      + (((v90 ^ 0x582F05B1) - 1827131213) ^ ((v90 ^ 0xE3DE480D) + 686390543) ^ ((v90 ^ 0xBB9D46ED) + 1890218991));
  v92 = (v91 ^ 0x6CEA3765) & (2 * (v91 & 0x4C08A668)) ^ v91 & 0x4C08A668;
  v93 = ((2 * (v91 ^ 0x74FA3765)) ^ 0x71E5221A) & (v91 ^ 0x74FA3765) ^ (2 * (v91 ^ 0x74FA3765)) & 0x38F2910C;
  v94 = v93 ^ 0x8129105;
  v95 = (v93 ^ 0x38700005) & (4 * v92) ^ v92;
  v96 = ((4 * v94) ^ 0xE3CA4434) & v94 ^ (4 * v94) & 0x38F2910C;
  v97 = (v96 ^ 0x20C20009) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x18309109)) ^ 0x8F2910D0) & (v96 ^ 0x18309109) ^ (16 * (v96 ^ 0x18309109)) & 0x38F29100;
  v99 = v97 ^ 0x38F2910D ^ (v98 ^ 0x820100D) & (v97 << 8);
  v100 = (v91 ^ (2
               * ((v99 << 16) & 0x38F20000 ^ v99 ^ ((v99 << 16) ^ 0x110D0000) & (((v98 ^ 0x30D2810D) << 8) & 0x38F20000 ^ 0x8620000 ^ (((v98 ^ 0x30D2810D) << 8) ^ 0x72910000) & (v98 ^ 0x30D2810D))))) >> 7;
  v101 = v91
       - (((v100 ^ 0xBE130260) + 206565197) ^ ((v100 ^ 0xE5389900) + 1466201133) ^ ((v100 ^ 0x5B104068) - 380850875))
       + 1991232541;
  v102 = (v101 ^ 0xE7CDDC75) & (2 * (v101 & 0x87C01070)) ^ v101 & 0x87C01070;
  v103 = ((2 * (v101 ^ 0xE8CDFCB5)) ^ 0xDE1BD98A) & (v101 ^ 0xE8CDFCB5) ^ (2 * (v101 ^ 0xE8CDFCB5)) & 0x6F0DECC4;
  v104 = v103 ^ 0x21042445;
  v105 = (v103 ^ 0xE04E485) & (4 * v102) ^ v102;
  v106 = ((4 * v104) ^ 0xBC37B314) & v104 ^ (4 * v104) & 0x6F0DECC4;
  v107 = (v106 ^ 0x2C05A000) & (16 * v105) ^ v105;
  v108 = ((16 * (v106 ^ 0x43084CC1)) ^ 0xF0DECC50) & (v106 ^ 0x43084CC1) ^ (16 * (v106 ^ 0x43084CC1)) & 0x6F0DECC0;
  v109 = v107 ^ 0x6F0DECC5 ^ (v108 ^ 0x600CCC85) & (v107 << 8);
  v110 = v101 ^ (2
               * ((v109 << 16) & 0x6F0D0000 ^ v109 ^ ((v109 << 16) ^ 0x6CC50000) & (((v108 ^ 0xF012085) << 8) & 0x6F0D0000 ^ 0x62010000 ^ (((v108 ^ 0xF012085) << 8) ^ 0xDEC0000) & (v108 ^ 0xF012085))));
  v111 = ((v110 ^ 0x670E4CDE) - 1185712098) ^ ((v110 ^ 0x5AC71482) - 2070273982) ^ ((v110 ^ 0xBC1891A6) + 1648731494);
  v112 = ((v111 + 262678749) ^ 0x9A84E8A3) & (2 * ((v111 + 262678749) & 0xDAA0C203)) ^ (v111 + 262678749) & 0xDAA0C203;
  v113 = ((2 * ((v111 + 262678749) ^ 0x3F8568A3)) ^ 0xCA4B5540) & ((v111 + 262678749) ^ 0x3F8568A3) ^ (2 * ((v111 + 262678749) ^ 0x3F8568A3)) & 0xE525AAA0;
  v114 = v113 ^ 0x2524AAA0;
  v115 = (v113 ^ 0xC001C001) & (4 * v112) ^ v112;
  v116 = ((4 * v114) ^ 0x9496AA80) & v114 ^ (4 * v114) & 0xE525AAA0;
  v117 = (v116 ^ 0x8404AA80) & (16 * v115) ^ v115;
  v118 = ((16 * (v116 ^ 0x61210020)) ^ 0x525AAA00) & (v116 ^ 0x61210020) ^ (16 * (v116 ^ 0x61210020)) & 0xE525AAA0;
  v119 = v117 ^ 0xE525AAA0 ^ (v118 ^ 0x4000AAA0) & (v117 << 8);
  v120 = ((v111 + 262678749) ^ (2
                              * (((v119 << 16) ^ 0x2AA00000) & (((v118 ^ 0xA52500A0) << 8) & 0xE5250000 ^ 0x40050000 ^ (((v118 ^ 0xA52500A0) << 8) ^ 0x25AA0000) & (v118 ^ 0xA52500A0)) ^ v119 ^ ((v119 << 16) & 0x65250000 | 0xA000)))) >> 12;
  v121 = v111
       - (((v120 ^ 0x9D6BA648) + 2065723420) ^ ((v120 ^ 0x486914D) - 489863393) ^ ((v120 ^ 0x99E83DA8) + 2141449212));
  v122 = ((v121 - 1984842090) ^ 0x54E4C50D) & (2 * ((v121 - 1984842090) & 0x46E61149)) ^ (v121 - 1984842090) & 0x46E61149;
  v123 = ((2 * ((v121 - 1984842090) ^ 0x50ACE59D)) ^ 0x2C95E9A8) & ((v121 - 1984842090) ^ 0x50ACE59D) ^ (2 * ((v121 - 1984842090) ^ 0x50ACE59D)) & 0x164AF4D4;
  v124 = v123 ^ 0x124A1454;
  v125 = (v123 ^ 0x400C000) & (4 * v122) ^ v122;
  v126 = ((4 * v124) ^ 0x592BD350) & v124 ^ (4 * v124) & 0x164AF4D4;
  v127 = (v126 ^ 0x100AD054) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x6402484)) ^ 0x64AF4D40) & (v126 ^ 0x6402484) ^ (16 * (v126 ^ 0x6402484)) & 0x164AF4D0;
  v129 = v127 ^ 0x164AF4D4 ^ (v128 ^ 0x40A4494) & (v127 << 8);
  v130 = v121
       - 795360959
       + ((((v121 - 1984842090) ^ (2
                                 * ((v129 << 16) & 0x164A0000 ^ v129 ^ ((v129 << 16) ^ 0x74D40000) & (((v128 ^ 0x1240B094) << 8) & 0x164A0000 ^ 0x140A0000 ^ (((v128 ^ 0x1240B094) << 8) ^ 0x4AF40000) & (v128 ^ 0x1240B094))))) >> 8) ^ 0x42F3F8);
  v131 = v130 + 1694;
  v132 = v130 + 1293654179 + ((v130 + 1293654179) >> 9) - ((v130 + 1293654179 + ((v130 + 1293654179) >> 9)) >> 8);
  v133 = v35 ^ LODWORD(STACK[0x6AC0]) ^ v79 ^ (v131 - ((2 * v131) & 0x3DF005CC) - 1627913498);
  v134 = v133 ^ 0x5CE08A9F;
  v135 = v46 ^ v8 ^ (v81 - ((2 * v81) & 0xD8AFD08) - 2033877372) ^ v132;
  v136 = (((v132 ^ 0xEBEB48) + 114676905) ^ ((v132 ^ 0x4F40F680) + 1233045857) ^ ((v132 ^ 0xAB598B8C) - 1385712531))
       - 1469768478
       + ((((v132 >> 15) ^ 0x5B515456) - 762887557) ^ (((v132 >> 15) ^ 0xC59678C3) + 1279291120) ^ (((v132 >> 15) ^ 0x9EC6E570)
                                                                                                  + 386986845))
       + 1767;
  v137 = (v136 ^ 0xE0F550E7) & (2 * (v136 & 0xEAF652C8)) ^ v136 & 0xEAF652C8;
  v138 = ((2 * (v136 ^ 0x60B1F4F7)) ^ 0x148F4C7E) & (v136 ^ 0x60B1F4F7) ^ (2 * (v136 ^ 0x60B1F4F7)) & 0x8A47A63E;
  v139 = v138 ^ 0x8A40A201;
  v140 = (v138 ^ 0x32421) & (4 * v137) ^ v137;
  v141 = ((4 * v139) ^ 0x291E98FC) & v139 ^ (4 * v139) & 0x8A47A63C;
  v142 = (v141 ^ 0x8068023) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x82412603)) ^ 0xA47A63F0) & (v141 ^ 0x82412603) ^ (16 * (v141 ^ 0x82412603)) & 0x8A47A630;
  v144 = v142 ^ 0x8A47A63F ^ (v143 ^ 0x80422200) & (v142 << 8);
  v145 = (v136 ^ (2
                * ((v144 << 16) & 0xA470000 ^ v144 ^ ((v144 << 16) ^ 0x263F0000) & (((v143 ^ 0xA05840F) << 8) & 0xA470000 ^ 0x8410000 ^ (((v143 ^ 0xA05840F) << 8) ^ 0x47A60000) & (v143 ^ 0xA05840F))))) >> 7;
  v146 = v136
       + 355660055
       + (((v145 ^ 0x5A86EF0A) + 1728002684) ^ ((v145 ^ 0x132449A3) + 794664147) ^ ((v145 ^ 0x48564894) + 1949277670));
  v147 = (v146 ^ 0xDBA63672) & (2 * (v146 & 0x98362664)) ^ v146 & 0x98362664;
  v148 = ((2 * (v146 ^ 0xFB863E32)) ^ 0xC76030AC) & (v146 ^ 0xFB863E32) ^ (2 * (v146 ^ 0xFB863E32)) & 0x63B01856;
  v149 = v148 ^ 0x20900852;
  v150 = (v148 ^ 0x41201042) & (4 * v147) ^ v147;
  v151 = ((4 * v149) ^ 0x8EC06158) & v149 ^ (4 * v149) & 0x63B01854;
  v152 = (v151 ^ 0x2800046) & (16 * v150) ^ v150;
  v153 = ((16 * (v151 ^ 0x61301806)) ^ 0x3B018560) & (v151 ^ 0x61301806) ^ (16 * (v151 ^ 0x61301806)) & 0x63B01850;
  v154 = v152 ^ 0x63B01856 ^ (v153 ^ 0x23000016) & (v152 << 8);
  v155 = v67 ^ a8 ^ v110 ^ v146 ^ (2
                                 * ((v154 << 16) & 0x63B00000 ^ v154 ^ ((v154 << 16) ^ 0x18560000) & (((v153 ^ 0x40B01816) << 8) & 0x63B00000 ^ 0x43A00000 ^ (((v153 ^ 0x40B01816) << 8) ^ 0xB0180000) & (v153 ^ 0x40B01816))));
  v156 = (v133 ^ 0x5CE08A9F) & 0x7F ^ 0x16;
  LODWORD(STACK[0x6618]) = v156;
  v157 = 16843009 * v156 - 967782883;
  LODWORD(STACK[0x6A70]) = v157;
  v158 = (v157 ^ 0xB90F25DB) & (2 * (v157 & 0x39AF31E3)) ^ v157 & 0x39AF31E3;
  v159 = ((2 * (v157 ^ 0x8B0767DF)) ^ 0x6550AC78) & (v157 ^ 0x8B0767DF) ^ (2 * (v157 ^ 0x8B0767DF)) & 0xB2A8563C;
  v160 = v159 ^ 0x92A85204;
  v161 = (v159 ^ 0x30001418) & (4 * v158) ^ v158;
  v162 = ((4 * v160) ^ 0xCAA158F0) & v160 ^ (4 * v160) & 0xB2A8563C;
  v163 = (v162 ^ 0x82A0503C) & (16 * v161) ^ v161;
  v164 = ((16 * (v162 ^ 0x3008060C)) ^ 0x2A8563C0) & (v162 ^ 0x3008060C) ^ (16 * (v162 ^ 0x3008060C)) & 0xB2A85630;
  v165 = v163 ^ 0xB2A8563C ^ (v164 ^ 0x22804200) & (v163 << 8);
  LODWORD(STACK[0x69B0]) = 2
                         * ((v165 << 16) & 0x32A80000 ^ v165 ^ ((v165 << 16) ^ 0x563C0000) & (((v164 ^ 0x9028143C) << 8) & 0x32A80000 ^ 0x12A80000 ^ (((v164 ^ 0x9028143C) << 8) ^ 0x28560000) & (v164 ^ 0x9028143C)));
  v166 = ((2 * (v155 & 7)) ^ 0xFFFFFFFB)
       + (((v155 & 1) + (v155 & 7 ^ 0xC0C1) - ((v155 & 7 ^ 0xC0C1) & 1) + 10040) & 0x3FFF ^ 0x27F2)
       + 1;
  v167 = v155 ^ 0x50C308C2;
  LODWORD(STACK[0x66A8]) = v155;
  LODWORD(STACK[0x64A8]) = v133 ^ 0xB78CEB1F;
  if (v133 == 0xB78CEB1F)
    v167 = 1357096937;
  LODWORD(STACK[0x69C0]) = ((v167 ^ 0xAF1C5811) & (v155 ^ 0xE12D9C87) ^ v167 & 0x1EF2CC53 | 0x27D8176)
                         - ((v167 ^ 0xAF1C5811) & (v155 ^ 0xE12D9C87) ^ v167 & 0x1EF2CC53 | 0xFD827E89);
  LODWORD(STACK[0x6860]) = v166;
  if (((2 * (v155 & 7)) ^ 0xFFFFFFFB)
     + (((v155 & 1) + (v155 & 7 ^ 0xC0C1) - ((v155 & 7 ^ 0xC0C1) & 1) + 10040) & 0x3FFF ^ 0x27F2) == 7)
    v168 = 0;
  else
    v168 = 255;
  STACK[0x6A60] = v166 & 7;
  v169 = v168 << (v166 & 7);
  v170 = 16843009 * v169;
  LODWORD(STACK[0x69E0]) = v170;
  LODWORD(STACK[0x67E0]) = (-1828716544 * v169) & v135 ^ v170;
  if (((2 * (v155 & 7)) ^ 0xFFFFFFFB)
     + (((v155 & 1) + (v155 & 7 ^ 0xC0C1) - ((v155 & 7 ^ 0xC0C1) & 1) + 10040) & 0x3FFF ^ 0x27F2) == 7)
    v171 = 0;
  else
    v171 = ~(_BYTE)v169;
  LODWORD(STACK[0x68B0]) = v134;
  LODWORD(STACK[0x69D0]) = (v134 & v171);
  if ((v135 & 0x100000) != 0)
    v172 = -1048576;
  else
    v172 = 0x100000;
  LODWORD(STACK[0x68F0]) = v135;
  LODWORD(STACK[0x6740]) = v133;
  LODWORD(STACK[0x69A0]) = 16843009
                         * (v133 ^ 0xA8 ^ ((v133 ^ 0xF6A02CA8) >> 16) ^ ((unsigned __int16)(v133 ^ 0x2CA8) >> 8) ^ HIBYTE(v133) ^ 0xB2);
  LODWORD(STACK[0x6498]) = v172 + v135;
  v173 = STACK[0x68D0];
  v174 = STACK[0xDAA0];
  v175 = *(_QWORD *)(STACK[0xDAA0] + 8 * (0xE21A44E % STACK[0x68D0]));
  v176 = *(_QWORD *)(STACK[0xDAA0]
                   + 8
                   * (((((v175 ^ 0x3681F34570B677F8) - 0x4EE6AE93EB1122BCLL) ^ ((v175 ^ 0x15D14C5B81582802)
                                                                                - 0x6DB6118D1AFF7D46) ^ ((v175 ^ 0x5023CC6D829D2C89uLL) - 0x284491BB193A79CDLL))
                     + 0xB142EA6A19C3C72)
                    % STACK[0x68D0]));
  LODWORD(STACK[0x6990]) = (v172 + v135) ^ 0xA0 ^ ((unsigned __int16)((v172 + v135) ^ 0x7BA0) >> 8) ^ (((v172 + v135) ^ 0xA1417BA0) >> 16) ^ ((v172 + v135) >> 24) ^ 0xAB;
  v177 = *(_QWORD *)(v174
                   + 8
                   * (((((v176 ^ 0x2CA055B0FEA11859) + 0xF3CFFA0963E41FELL) ^ ((v176 ^ 0x5A40003C61B28BF3)
                                                                               + 0x79DCAA2C092DD258) ^ ((v176 ^ 0x59326FFEC60E0D9uLL) + 0x260F8CEF84FFB97ELL))
                     - 0x50EFD962BF2135E8)
                    % v173));
  STACK[0x6AC0] = v174;
  v178 = *(_QWORD *)(v174
                   + 8
                   * (((((v177 ^ 0x3AE3A7ECC90653EALL) - 0x52306A8320DA29BLL) ^ ((v177 ^ 0x79F3259D7A87B758)
                                                                               - 0x463384D9818C4629) ^ ((v177 ^ 0x3063F102C0F297C1uLL) - 0xFA350463BF966B0))
                     + 0x4CB3D237C728054ALL)
                    % v173));
  LODWORD(v178) = ((((v178 ^ 0x1AB9AA6C709B9C65) + 0x41B64A12C34A14A1) ^ ((v178 ^ 0x38427F9A45FB73CFLL)
                                                                            + 0x634D9FE4F62AFB0BLL) ^ ((v178 ^ 0x5188A68546139CD9uLL) + 0xA8746FBF5C2141DLL))
                 - 0x287C930D362AF8FALL)
                % v173;
  LODWORD(STACK[0x6A80]) = ((((v178 - ((2 * v178) & 0xD884778) + 113517500) ^ 0xA674CFAF) + 1097181264) ^ (((v178 - ((2 * v178) & 0xD884778) + 113517500) ^ 0x605FBEFF) - 2024875744) ^ (((v178 - ((2 * v178) & 0xD884778) + 113517500) ^ 0xC0EF52EC) + 670971149))
                         - 1412196780;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v9))();
}

uint64_t sub_100A9A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _BOOL4 v7;

  if (LODWORD(STACK[0x6A80]) < 0x8DA8DAB1 != (a7 + 328101104) < 0x8DA8DAB1)
    v7 = LODWORD(STACK[0x6A80]) < 0x8DA8DAB1;
  else
    v7 = (a7 + 328101104) < LODWORD(STACK[0x6A80]);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((225 * v7) ^ LODWORD(STACK[0x6A90]))))();
}

uint64_t sub_100A9D638(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;

  v3 = (a3 + 1237140907) | 0x4800;
  v4 = STACK[0x6A00];
  if (LODWORD(STACK[0x6A30]) != -1441740638)
    v4 = STACK[0x69F0];
  LODWORD(STACK[0x65D0]) = v4;
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6910]) ^ 0xC926B55F;
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x6730]) = 8 - LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x6AC0]) = v3;
  LODWORD(STACK[0x66D0]) = (v3 - 18571) ^ LODWORD(STACK[0x67E0]);
  v5 = 16843009 * LODWORD(STACK[0x6990]);
  v6 = STACK[0x69A0];
  LODWORD(STACK[0x6720]) = v5;
  LODWORD(STACK[0x6870]) = v6 ^ 0x4E4E4E4E ^ v5;
  LODWORD(STACK[0x66F0]) = v6 ^ 0x44444444;
  STACK[0x6A80] = STACK[0xDAA0];
  LODWORD(STACK[0x6A70]) = (((LODWORD(STACK[0x6920]) ^ 0x39F1FF0) - 1396532413) ^ ((LODWORD(STACK[0x6920]) ^ 0x8EE69CBD)
                                                                                 + 565909520) ^ ((LODWORD(STACK[0x6920]) ^ 0x8D00F394)
                                                                                               + 576550695))
                         - 2138458660;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((55708 * (a3 > 0xF5EB1D34)) ^ (a3 + 1237159339)))
                            - 12))();
}

uint64_t sub_100A9D860(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;

  v5 = STACK[0x6A70];
  v6 = STACK[0x6AC0];
  LODWORD(STACK[0x6A90]) = (LODWORD(STACK[0x6AC0]) - 801529051) & 0x2FC655DB;
  v7 = v5 > v4 - 1248576377;
  if (v5 < a4 != (v4 - 1248576377) < 0x2FAEAA48)
    v7 = v5 < a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * !v7) ^ v6)) - 12))();
}

uint64_t sub_100AA05C0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = STACK[0x66C8];
  if (LODWORD(STACK[0x6A30]) == -1441740638)
    v0 = STACK[0x66B0];
  LODWORD(STACK[0x6480]) = v0;
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x66A8]) ^ 0x1879E621;
  LODWORD(STACK[0x6478]) = LODWORD(STACK[0x69C0]) - 41779575;
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x6720]) ^ 0xA0A0A0A;
  v1 = STACK[0x6AB0];
  if (((*(_BYTE *)(v1
                  + ((*(_BYTE *)(v1
                               + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 10) + 5) & 0xF)) + 5) & 0xF))
                    + 3) & 0xF))
       + 13) & 0xE) != 0)
    v2 = (*(_BYTE *)(v1
                   + ((*(_BYTE *)(v1
                                + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 10) + 5) & 0xF)) + 5) & 0xF))
                     + 3) & 0xF))
        + 13) & 0xF;
  else
    v2 = 1;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x6A90])) - 4);
  STACK[0x6A80] = v2 - 1;
  return v3();
}

uint64_t sub_100AA2488()
{
  uint64_t v0;
  unsigned int v1;

  v1 = STACK[0x6A90];
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6A90]) + 5119;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5000 * (STACK[0x6A80] == v0)) ^ v1)) - 4))();
}

uint64_t sub_100AA3FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = STACK[0x6A20];
  if ((STACK[0x6A50] & 2) != 0)
    v6 = STACK[0x6A10];
  LODWORD(STACK[0x6428]) = v6;
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x69E0]);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x6AC0]))
                                                                                             - 8);
  STACK[0x6A90] = -1294252225;
  STACK[0x6A70] = -1930539620;
  return v7(15, v5, a3, a4, a5, 502140002, 824604051);
}

uint64_t sub_100AA40FC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W3>, unint64_t a4@<X5>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;

  LODWORD(STACK[0x6960]) = a6;
  LODWORD(STACK[0x69B0]) = v12;
  LODWORD(STACK[0x69C0]) = a3;
  STACK[0x69D0] = a2;
  STACK[0x69E0] = a1;
  STACK[0x69F0] = a4;
  STACK[0x6A00] = v13;
  STACK[0x6A10] = v11;
  STACK[0x6A20] = v10;
  STACK[0x6A30] = v9;
  STACK[0x6A40] = v8;
  v15 = (LODWORD(STACK[0x6AC0]) - 21337) | 0x2400;
  v16 = (*(unsigned __int8 *)(a2 + v7) ^ 0x7DD4BFFF) + 2 * *(unsigned __int8 *)(a2 + v7) - 462559737;
  LODWORD(STACK[0x6A80]) = v15;
  v17 = v16 * (v15 - 379773162) - 88751678;
  v18 = ((2 * (v17 ^ 0x24D75F40)) ^ 0x466F97A8) & (v17 ^ 0x24D75F40) ^ (2 * (v17 ^ 0x24D75F40)) & 0x2337CBD4;
  v19 = (v17 ^ 0x27D65640) & (2 * (v17 & 0x7E09494)) ^ v17 & 0x7E09494;
  v20 = ((4 * (v18 ^ 0x21104854)) ^ 0x8CDF2F50) & (v18 ^ 0x21104854) ^ (4 * (v18 ^ 0x21104854)) & 0x2337CBD4;
  v21 = (v20 ^ 0x170B44) & (16 * ((v18 ^ 0x2068280) & (4 * v19) ^ v19)) ^ (v18 ^ 0x2068280) & (4 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x2320C084)) ^ 0x337CBD40) & (v20 ^ 0x2320C084) ^ (16 * (v20 ^ 0x2320C084)) & 0x2337CBD0;
  v23 = v21 ^ 0x2337CBD4 ^ (v22 ^ 0x23348994) & (v21 << 8);
  v24 = v17 ^ (2
             * ((v23 << 16) & 0x23370000 ^ v23 ^ ((v23 << 16) ^ 0x4BD40000) & (((v22 ^ 0x34294) << 8) & 0x23370000 ^ 0x340000 ^ (((v22 ^ 0x34294) << 8) ^ 0x37CB0000) & (v22 ^ 0x34294))));
  v25 = ((v24 ^ a7 ^ 0x9B570813) - 1302578968) ^ ((v24 ^ a7 ^ 0x32329E10) + 456765157) ^ ((v24 ^ a7 ^ 0xEEC2953F)
                                                                                        - 943086132);
  v26 = v7 + v10 + v25;
  v27 = ((2 * (v26 ^ 0x70DC146A)) ^ 0x23F09E12) & (v26 ^ 0x70DC146A) ^ (2 * (v26 ^ 0x70DC146A)) & 0x91F84F08;
  v28 = v27 ^ 0x90084109;
  v29 = (v26 ^ 0xF094126A) & (2 * (v26 & 0xE1245B63)) ^ v26 & 0xE1245B63;
  v30 = (v27 ^ 0x1B00E00) & (4 * v29) ^ v29;
  v31 = ((4 * v28) ^ 0x47E13C24) & v28 ^ (4 * v28) & 0x91F84F08;
  v32 = (v31 ^ 0x1E00C09) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x90184309)) ^ 0x1F84F090) & (v31 ^ 0x90184309) ^ (16 * (v31 ^ 0x90184309)) & 0x91F84F00;
  v34 = v32 ^ 0x91F84F09 ^ (v33 ^ 0x11804009) & (v32 << 8);
  v35 = (v26 ^ (2
              * ((v34 << 16) & 0x11F80000 ^ v34 ^ ((v34 << 16) ^ 0x4F090000) & (((v33 ^ 0x80780F09) << 8) & 0x11F80000 ^ 0x1B00000 ^ (((v33 ^ 0x80780F09) << 8) ^ 0x784F0000) & (v33 ^ 0x80780F09))))) >> 16;
  v36 = ((v35 ^ 0x956FB12C) + 485538268) ^ ((v35 ^ 0xEB406FED) + 1658808091) ^ ((v35 ^ 0x7E2F1E05) - 139454733);
  v37 = v7 + a5 + v25 - v36;
  v38 = ((2 * (v37 ^ 0xB8210B8F)) ^ 0xA3D82AAE) & (v37 ^ 0xB8210B8F) ^ (2 * (v37 ^ 0xB8210B8F)) & 0x51EC1556;
  v39 = (v37 ^ 0xE9A91E9F) & (2 * (v37 & 0xE9CD1ED8)) ^ v37 & 0xE9CD1ED8;
  v40 = ((4 * (v38 ^ 0x50241551)) ^ 0x47B0555C) & (v38 ^ 0x50241551) ^ (4 * (v38 ^ 0x50241551)) & 0x51EC1554;
  v41 = (v40 ^ 0x41A01543) & (16 * ((v38 ^ 0x11480011) & (4 * v39) ^ v39)) ^ (v38 ^ 0x11480011) & (4 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x104C0003)) ^ 0x1EC15570) & (v40 ^ 0x104C0003) ^ (16 * (v40 ^ 0x104C0003)) & 0x51EC1550;
  v43 = v41 ^ 0x51EC1557 ^ (v42 ^ 0x10C01507) & (v41 << 8);
  v44 = v37 ^ (2
             * ((v43 << 16) & 0x51EC0000 ^ v43 ^ ((v43 << 16) ^ 0x15570000) & (((v42 ^ 0x412C0007) << 8) & 0x51EC0000 ^ 0x11E80000 ^ (((v42 ^ 0x412C0007) << 8) ^ 0x6C150000) & (v42 ^ 0x412C0007))));
  LODWORD(STACK[0x6930]) = v24 ^ 0x2A121543;
  v45 = v25
      + ((((v44 >> 8) ^ 0x6D1CC6AC) - 51687545) ^ (((v44 >> 8) ^ 0x603E07F7) - 238448930) ^ (((v44 >> 8) ^ 0xD4A5C6F)
                                                                                           - 1665280698))
      - v36;
  v46 = v7 + v11 + v45;
  v47 = (v46 ^ 0x22E9DD18) & (2 * (v46 & 0xA4F1DD18)) ^ v46 & 0xA4F1DD18;
  v48 = ((2 * (v46 ^ 0x6ACBF728)) ^ 0x9C745460) & (v46 ^ 0x6ACBF728) ^ (2 * (v46 ^ 0x6ACBF728)) & 0xCE3A2A30;
  v49 = v48 ^ 0x420A2A10;
  v50 = (v48 ^ 0xC4000230) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0x38E8A8C0) & v49 ^ (4 * v49) & 0xCE3A2A30;
  v52 = v51 ^ 0xC6120230;
  v53 = (v51 ^ 0x8282810) & (16 * v50) ^ v50;
  v54 = v7 + a4 + v45;
  LODWORD(STACK[0x69A0]) = v54;
  v55 = ((16 * v52) ^ 0xE3A2A300) & v52 ^ (16 * v52) & 0xCE3A2A30;
  v56 = (v54 ^ 0x69F33329) & (2 * (v54 & 0x49E3BA30)) ^ v54 & 0x49E3BA30;
  v57 = v53 ^ 0xCE3A2A30;
  v58 = ((2 * (v54 ^ 0x78726769)) ^ 0x6323BAB2) & (v54 ^ 0x78726769) ^ (2 * (v54 ^ 0x78726769)) & 0x3191DD58;
  v59 = v55 ^ 0xC180830;
  v60 = (v58 ^ 0x31019C08) & (4 * v56) ^ v56;
  v61 = (v55 ^ 0xC2222230) & (v53 << 8);
  v62 = ((4 * (v58 ^ 0x10904549)) ^ 0xC6477564) & (v58 ^ 0x10904549) ^ (4 * (v58 ^ 0x10904549)) & 0x3191DD58;
  v63 = v62 ^ 0x31908819;
  v64 = (v62 ^ 0x15559) & (16 * v60) ^ v60;
  v65 = ((16 * v63) ^ 0x191DD590) & v63 ^ (16 * v63) & 0x3191DD50;
  v66 = v7 + v14 + v45;
  v67 = v64 ^ 0x3191DD59 ^ (v65 ^ 0x1111D500) & (v64 << 8);
  LODWORD(STACK[0x6990]) = v67;
  v68 = (v66 ^ 0x41F3B236) & (2 * (v66 & 0x49E3BA30)) ^ v66 & 0x49E3BA30;
  v69 = ((2 * (v66 ^ 0x5371D636)) ^ 0x3524D80C) & (v66 ^ 0x5371D636) ^ (2 * (v66 ^ 0x5371D636)) & 0x1A926C06;
  v70 = ((4 * (v69 ^ 0xA922402)) ^ 0x6A49B018) & (v69 ^ 0xA922402) ^ (4 * (v69 ^ 0xA922402)) & 0x1A926C04;
  v71 = (v70 ^ 0xA002006) & (16 * ((v69 ^ 0x4C00) & (4 * v68) ^ v68)) ^ (v69 ^ 0x4C00) & (4 * v68) ^ v68;
  v72 = ((16 * (v70 ^ 0x10924C06)) ^ 0xA926C060) & (v70 ^ 0x10924C06) ^ (16 * (v70 ^ 0x10924C06)) & 0x1A926C00;
  v73 = v71 ^ 0x1A926C06 ^ (v72 ^ 0x8024006) & (v71 << 8);
  LODWORD(STACK[0x6970]) = (v67 << 16) & 0x31910000;
  LODWORD(STACK[0x6980]) = v66 ^ (2
                                * ((v73 << 16) & 0x1A920000 ^ v73 ^ ((v73 << 16) ^ 0x6C060000) & (((v72 ^ 0x12902C06) << 8) & 0x1A920000 ^ 0x8920000 ^ (((v72 ^ 0x12902C06) << 8) ^ 0x126C0000) & (v72 ^ 0x12902C06)))) ^ 0xC006B60;
  LODWORD(STACK[0x6950]) = ((v67 << 16) ^ 0x5D590000) & (((v65 ^ 0x20800849) << 8) & 0x31910000 ^ (((v65 ^ 0x20800849) << 8) ^ 0x91DD0000) & (v65 ^ 0x20800849) ^ 0x20000000);
  LODWORD(STACK[0x6940]) = ((v57 ^ v61) << 16) & 0x4E3A0000 ^ v57 ^ v61 ^ (((v57 ^ v61) << 16) ^ 0x2A300000) & ((v59 << 8) & 0xCE3A0000 ^ 0x44100000 ^ ((v59 << 8) ^ 0x3A2A0000) & v59);
  v74 = STACK[0x6A70];
  v75 = STACK[0x69D0];
  v76 = STACK[0x69E0];
  v77 = *(_QWORD *)(STACK[0x6AD8]
                  + 8
                  * ((4 * (v7 == STACK[0x69E0])) | (32 * (v7 == STACK[0x69E0])) | LODWORD(STACK[0x6AC0])));
  ++STACK[0x6A90];
  STACK[0x6A70] = v74 + 1;
  return ((uint64_t (*)(unint64_t, unint64_t))(v77 - 8))(v76 - 1, v75 + 1);
}

uint64_t sub_100AA5A7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unint64_t v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  unint64_t v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  int v258;
  int v259;
  char *v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  int v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  int v286;
  unint64_t v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  unint64_t v304;
  uint64_t v305;
  unint64_t v306;
  int v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t (*v311)(uint64_t);
  uint64_t v312;

  v12 = v8 + v9 - v10;
  v13 = ((((v12 >> 10) ^ 0xF3FB1F8F) + 503490102) ^ (((v12 >> 10) ^ 0xD84E80AC) + 901200151) ^ (((v12 >> 10) ^ 0x2B81A357)
                                                                                              - 965207314))
      + (((v12 ^ 0xF4900B2A) + 73872062) ^ ((v12 ^ 0x69ACA5A8) - 1722049472) ^ ((v12 ^ 0x4DCD7CD7) - 1120254655));
  v14 = ((v13 + 87571553) ^ 0xEEFB588D) & (2 * ((v13 + 87571553) & 0xECF3520D)) ^ (v13 + 87571553) & 0xECF3520D;
  v15 = ((2 * ((v13 + 87571553) ^ 0xFF795885)) ^ 0x27141510) & ((v13 + 87571553) ^ 0xFF795885) ^ (2
                                                                                                * ((v13 + 87571553) ^ 0xFF795885)) & 0x138A0A88;
  v16 = v15 ^ 0x108A0A88;
  v17 = (v15 ^ 0x3000280) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0x4E282A20) & v16 ^ (4 * v16) & 0x138A0A88;
  v19 = (v18 ^ 0x2080A08) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x11820088)) ^ 0x38A0A880) & (v18 ^ 0x11820088) ^ (16 * (v18 ^ 0x11820088)) & 0x138A0A80;
  v21 = v19 ^ 0x138A0A88 ^ (v20 ^ 0x10800808) & (v19 << 8);
  v22 = ((v13 + 87571553) ^ (2
                           * ((v21 << 16) & 0x138A0000 ^ v21 ^ ((v21 << 16) ^ 0xA880000) & (((v20 ^ 0x30A0208) << 8) & 0x138A0000 ^ 0x11800000 ^ (((v20 ^ 0x30A0208) << 8) ^ 0x8A0A0000) & (v20 ^ 0x30A0208))))) >> 4;
  v23 = v13
      - (((v22 ^ 0x687C0091) + 2110789611) ^ ((v22 ^ 0xBFFFDABB) - 1437348415) ^ ((v22 ^ 0xDB6CAE5B) - 826230495))
      + 270983904;
  v24 = (2 * (v23 & 0xFB480E99)) & (v23 ^ 0xEF4EFFF3) ^ v23 & 0xFB480E99 ^ ((2 * (v23 & 0xFB480E99)) & 0x14001122 | 0xE000);
  v25 = (2 * (v23 ^ 0xEF4EFFF3)) & 0x1406F16A ^ 0x1402112A ^ ((2 * (v23 ^ 0xEF4EFFF3)) ^ 0x280DE2D4) & (v23 ^ 0xEF4EFFF3);
  v26 = (4 * v24) & 0x1406F168 ^ v24 ^ ((4 * v24) ^ 0x38000) & v25;
  v27 = (4 * v25) & 0x1406F168 ^ 0x4043042 ^ ((4 * v25) ^ 0x501BC5A8) & v25;
  v28 = (16 * v26) & 0x1406F160 ^ v26 ^ ((16 * v26) ^ 0x260000) & v27;
  v29 = (16 * v27) & 0x1406F160 ^ 0x1400E14A ^ ((16 * v27) ^ 0x406F16A0) & v27;
  v30 = v28 ^ 0x1002916A ^ (v28 << 8) & 0x1406F100 ^ ((v28 << 8) ^ 0x4600000) & v29;
  v31 = v23 ^ (2
             * ((v30 << 16) & 0x14060000 ^ v30 ^ ((v30 << 16) ^ 0x716A0000) & ((v29 << 8) & 0x14060000 ^ 0x10060000 ^ ((v29 << 8) ^ 0x6F10000) & v29)));
  v32 = v31 ^ a8;
  v33 = ((v31 ^ 0x4552145) - 355104912) ^ ((v31 ^ 0x19A97DBB) - 148251758) ^ ((v31 ^ 0xEEBDB0B3) + 4003482);
  v34 = ((v33 - 1176223739) ^ 0x8B531163) & (2 * ((v33 - 1176223739) & 0xCC5B2268)) ^ (v33 - 1176223739) & 0xCC5B2268;
  v35 = ((2 * ((v33 - 1176223739) ^ 0x8B7155F3)) ^ 0x8E54EF36) & ((v33 - 1176223739) ^ 0x8B7155F3) ^ (2 * ((v33 - 1176223739) ^ 0x8B7155F3)) & 0x472A779A;
  v36 = v35 ^ 0x412A1089;
  v37 = (v35 ^ 0x2020309) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x1CA9DE6C) & v36 ^ (4 * v36) & 0x472A7798;
  v39 = (v38 ^ 0x4285613) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x43022193)) ^ 0x72A779B0) & (v38 ^ 0x43022193) ^ (16 * (v38 ^ 0x43022193)) & 0x472A7790;
  v41 = v39 ^ 0x472A779B ^ (v40 ^ 0x42227100) & (v39 << 8);
  v42 = ((v33 - 1176223739) ^ (2
                             * ((v41 << 16) & 0x472A0000 ^ v41 ^ ((v41 << 16) ^ 0x779B0000) & (((v40 ^ 0x508060B) << 8) & 0x472A0000 ^ 0x45080000 ^ (((v40 ^ 0x508060B) << 8) ^ 0x2A770000) & (v40 ^ 0x508060B))))) >> 12;
  v43 = v33
      + 1252883202
      + (((v42 ^ 0x97878436) - 311676711) ^ ((v42 ^ 0xED484706) - 1750862871) ^ ((v42 ^ 0x7AC3028C) + 2668131));
  v44 = (v43 ^ 0xF88A60DD) & (2 * (v43 & 0xC0AA7218)) ^ v43 & 0xC0AA7218;
  v45 = ((2 * (v43 ^ 0xF9CE24CD)) ^ 0x72C8ADAA) & (v43 ^ 0xF9CE24CD) ^ (2 * (v43 ^ 0xF9CE24CD)) & 0x396456D4;
  v46 = v45 ^ 0x9245255;
  v47 = (v45 ^ 0x8440295) & (4 * v44) ^ v44;
  v48 = ((4 * v46) ^ 0xE5915B54) & v46 ^ (4 * v46) & 0x396456D4;
  v49 = (v48 ^ 0x21005241) & (16 * v47) ^ v47;
  v50 = ((16 * (v48 ^ 0x18640481)) ^ 0x96456D50) & (v48 ^ 0x18640481) ^ (16 * (v48 ^ 0x18640481)) & 0x396456D0;
  v51 = v49 ^ 0x396456D5 ^ (v50 ^ 0x10444485) & (v49 << 8);
  v52 = (v43 ^ (2
              * ((v51 << 16) & 0x39640000 ^ v51 ^ ((v51 << 16) ^ 0x56D50000) & (((v50 ^ 0x29201285) << 8) & 0x39640000 ^ 0x19200000 ^ (((v50 ^ 0x29201285) << 8) ^ 0x64560000) & (v50 ^ 0x29201285))))) >> 2;
  v53 = v43
      - 61465191
      + (((v52 ^ 0x9871B51F) - 124461690) ^ ((v52 ^ 0x477E5020) + 664484027) ^ ((v52 ^ 0xFBB552D3) - 1689241014));
  v54 = (v53 ^ 0x7FF17425) & (2 * (v53 & 0x7FF47508)) ^ v53 & 0x7FF47508;
  v55 = ((2 * (v53 ^ 0x90B9D435)) ^ 0xDE9B427A) & (v53 ^ 0x90B9D435) ^ (2 * (v53 ^ 0x90B9D435)) & 0xEF4DA13C;
  v56 = v55 ^ 0x2144A105;
  v57 = (v55 ^ 0xCE050125) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0xBD3684F4) & v56 ^ (4 * v56) & 0xEF4DA13C;
  v59 = (v58 ^ 0xAD048020) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x42492109)) ^ 0xF4DA13D0) & (v58 ^ 0x42492109) ^ (16 * (v58 ^ 0x42492109)) & 0xEF4DA130;
  v61 = v59 ^ 0xEF4DA13D ^ (v60 ^ 0xE448012D) & (v59 << 8);
  v62 = v53 ^ (2
             * ((v61 << 16) & 0x6F4D0000 ^ v61 ^ ((v61 << 16) ^ 0x213D0000) & (((v60 ^ 0xB05A02D) << 8) & 0xEF4D0000 ^ 0x224C0000 ^ (((v60 ^ 0xB05A02D) << 8) ^ 0x4DA10000) & (v60 ^ 0xB05A02D))));
  v63 = ((v62 ^ 0x43AE438D) - 179459110) ^ ((v62 ^ 0xC6275529) + 1891941758) ^ ((v62 ^ 0x66FC21D6) - 803223165);
  v64 = ((v63 + 460370865) ^ 0xEB684D26) & (2 * ((v63 + 460370865) & 0xEB606986)) ^ (v63 + 460370865) & 0xEB606986;
  v65 = ((2 * ((v63 + 460370865) ^ 0xFBE88D26)) ^ 0x2111C940) & ((v63 + 460370865) ^ 0xFBE88D26) ^ (2
                                                                                                  * ((v63 + 460370865) ^ 0xFBE88D26)) & 0x1088E4A0;
  v66 = v65 ^ 0x108824A0;
  v67 = (v65 ^ 0x8C080) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0x42239280) & v66 ^ (4 * v66) & 0x1088E4A0;
  v69 = (v68 ^ 0x8080) & (16 * v67) ^ v67;
  v70 = ((16 * (v68 ^ 0x10886420)) ^ 0x88E4A00) & (v68 ^ 0x10886420) ^ (16 * (v68 ^ 0x10886420)) & 0x1088E4A0;
  v71 = v69 ^ 0x1088E4A0 ^ (v70 ^ 0x8840A0) & (v69 << 8);
  v72 = ((v63 + 460370865) ^ (2
                            * ((v71 << 16) & 0x10880000 ^ v71 ^ ((v71 << 16) ^ 0x64A00000) & (((v70 ^ 0x1000A4A0) << 8) & 0x10880000 ^ 0x10080000 ^ (((v70 ^ 0x1000A4A0) << 8) ^ 0x88E40000) & (v70 ^ 0x1000A4A0))))) >> 13;
  v73 = v63 - (((v72 ^ 0x6F87656A) + 1099994390) ^ ((v72 ^ 0x5ABE0FD7) + 1957298089) ^ ((v72 ^ 0x353F3130) + 455655760));
  v74 = ((v73 + 526282366) ^ 0x45E0500E) & (2 * ((v73 + 526282366) & 0x15845AAC)) ^ (v73 + 526282366) & 0x15845AAC;
  v75 = ((2 * ((v73 + 526282366) ^ 0x6EE8401E)) ^ 0xF6D83564) & ((v73 + 526282366) ^ 0x6EE8401E) ^ (2
                                                                                                  * ((v73 + 526282366) ^ 0x6EE8401E)) & 0x7B6C1AB2;
  v76 = v75 ^ 0x9240A92;
  v77 = (v75 ^ 0x72001020) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0xEDB06AC8) & v76 ^ (4 * v76) & 0x7B6C1AB0;
  v79 = (v78 ^ 0x69200A80) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x124C1032)) ^ 0xB6C1AB20) & (v78 ^ 0x124C1032) ^ (16 * (v78 ^ 0x124C1032)) & 0x7B6C1AB0;
  v81 = v79 ^ 0x7B6C1AB2 ^ (v80 ^ 0x32400A92) & (v79 << 8);
  v82 = ((v73 + 526282366) ^ (2
                            * ((v81 << 16) & 0x7B6C0000 ^ v81 ^ ((v81 << 16) ^ 0x1AB20000) & (((v80 ^ 0x492C1092) << 8) & 0x7B6C0000 ^ 0x13640000 ^ (((v80 ^ 0x492C1092) << 8) ^ 0x6C1A0000) & (v80 ^ 0x492C1092))))) >> 4;
  v83 = v73
      - 413496672
      + (((v82 ^ 0x16415DE7) + 642222835) ^ ((v82 ^ 0x92BC20BC) - 1564805206) ^ ((v82 ^ 0x898CBBA7) - 1182110541));
  v84 = (v83 ^ 0x905D8F80) & (2 * (v83 & 0x10112CA0)) ^ (v83 & 0x10112CA0 | 0x400100) ^ (((((v83 & 0x10112CA0) >> 7) & 1) << 8) | 0x800CA220);
  v85 = (2 * (v83 ^ 0x905D8F80)) & 0x804CA320 ^ 0x8044A120 ^ ((2 * (v83 ^ 0x905D8F80)) ^ 0x994640) & (v83 ^ 0x905D8F80);
  v86 = (4 * v84) & 0x804CA300 ^ v84 & 0xB07F7FE0 ^ ((4 * v84) ^ 0x1328C80) & v85;
  v87 = (4 * v85) & 0x804CA320 ^ 0x804C2320 ^ ((4 * v85) ^ 0x1328C80) & v85;
  v88 = (16 * v86) & 0x804CA300 ^ v86 ^ ((16 * v86) ^ 0x4CA3200) & v87;
  v89 = (16 * v87) & 0x804CA320 ^ 0x80048120 ^ ((16 * v87) ^ 0x4CA3200) & v87;
  v90 = v88 ^ 0x480200 ^ (v88 << 8) & 0x804CA300 ^ ((v88 << 8) ^ 0x4812000) & v89;
  v91 = v83 ^ (2
             * ((v90 << 16) & 0x4C0000 ^ v90 ^ ((v90 << 16) ^ 0x23200000) & ((v89 << 8) & 0x804C0000 ^ 0x4C0000 ^ ((v89 << 8) ^ 0x4CA30000) & v89)));
  v92 = ((v91 ^ 0x9288E552) - 1944730746) ^ ((v91 ^ 0xE4E0EC8E) - 92419494) ^ ((v91 ^ 0x66E0633C) + 2021475820);
  v93 = ((v92 - 395960741) ^ 0xFB9A9605) & (2 * ((v92 - 395960741) & 0xFA1A8611)) ^ (v92 - 395960741) & 0xFA1A8611;
  v94 = ((2 * ((v92 - 395960741) ^ 0x7FAB9A25)) ^ 0xB623868) & ((v92 - 395960741) ^ 0x7FAB9A25) ^ (2
                                                                                                 * ((v92 - 395960741) ^ 0x7FAB9A25)) & 0x85B11C34;
  v95 = (v94 ^ 0x4211C10) & (4 * v93) ^ v93;
  v96 = ((4 * (v94 ^ 0x84910414)) ^ 0x16C470D0) & (v94 ^ 0x84910414) ^ (4 * (v94 ^ 0x84910414)) & 0x85B11C34;
  v97 = (v96 ^ 0x4801014) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x81310C24)) ^ 0x5B11C340) & (v96 ^ 0x81310C24) ^ (16 * (v96 ^ 0x81310C24)) & 0x85B11C30;
  v99 = v97 ^ 0x85B11C34 ^ (v98 ^ 0x1110034) & (v97 << 8);
  v100 = ((v92 - 395960741) ^ (2
                             * ((v99 << 16) & 0x5B10000 ^ v99 ^ ((v99 << 16) ^ 0x1C340000) & (((v98 ^ 0x84A01C34) << 8) & 0x85B10000 ^ 0x4A10000 ^ (((v98 ^ 0x84A01C34) << 8) ^ 0x311C0000) & (v98 ^ 0x84A01C34))))) >> 14;
  v101 = v92
       - (((v100 ^ 0x83D24056) - 902453222) ^ ((v100 ^ 0x421FE0E5) + 200804523) ^ ((v100 ^ 0xC1CE44D1) - 2010534753));
  v102 = ((v101 + 11221676) ^ 0x2B3C75EF) & (2 * ((v101 + 11221676) & 0x2BB975EE)) ^ (v101 + 11221676) & 0x2BB975EE;
  v103 = ((2 * ((v101 + 11221676) ^ 0x683EBDF7)) ^ 0x870F9032) & ((v101 + 11221676) ^ 0x683EBDF7) ^ (2 * ((v101 + 11221676) ^ 0x683EBDF7)) & 0x4387C818;
  v104 = (v103 ^ 0x3078010) & (4 * v102) ^ v102;
  v105 = ((4 * (v103 ^ 0x40804809)) ^ 0xE1F2064) & (v103 ^ 0x40804809) ^ (4 * (v103 ^ 0x40804809)) & 0x4387C818;
  v106 = (v105 ^ 0x2070019) & (16 * v104) ^ v104;
  v107 = ((16 * (v105 ^ 0x4180C819)) ^ 0x387C8190) & (v105 ^ 0x4180C819) ^ (16 * (v105 ^ 0x4180C819)) & 0x4387C810;
  v108 = v106 ^ 0x4387C819 ^ (v107 ^ 0x48009) & (v106 << 8);
  v109 = ((v101 + 11221676) ^ (2
                             * ((v108 << 16) & 0x43870000 ^ v108 ^ ((v108 << 16) ^ 0x48190000) & (((v107 ^ 0x43834809) << 8) & 0x43870000 ^ 0x40070000 ^ (((v107 ^ 0x43834809) << 8) ^ 0x87C80000) & (v107 ^ 0x43834809))))) >> 3;
  v110 = v101
       - (((v109 ^ 0x565E693F) + 2021564606) ^ ((v109 ^ 0x50E0E572) + 2126523633) ^ ((v109 ^ 0x32810F6) + 755554677))
       - 1444752578;
  v111 = (2 * (v110 & 0xAE383296)) & (v110 ^ 0xAD9077B4) ^ v110 & 0xAE383296 ^ ((2 * (v110 & 0xAE383296)) & 0x204520 | 0x1800000);
  v112 = (2 * (v110 ^ 0xAD9077B4)) & 0x3A84522 ^ 0xA84522 ^ ((2 * (v110 ^ 0xAD9077B4)) ^ 0x7508A44) & (v110 ^ 0xAD9077B4);
  v113 = (4 * v111) & 0x3A84520 ^ v111 ^ ((4 * v111) ^ 0x6000000) & v112;
  v114 = (4 * v112) & 0x3A84520 ^ 0x1084122 ^ ((4 * v112) ^ 0xEA11488) & v112;
  v115 = v113 ^ 0x284522 ^ (16 * v113) & 0x3A84520 ^ ((16 * v113) ^ 0x38000000) & v114;
  v116 = (16 * v114) & 0x3A84520 ^ 0x1280502 ^ ((16 * v114) ^ 0x3A845220) & v114;
  v117 = (v115 << 8) & 0x3A84500 ^ v115 ^ ((v115 << 8) ^ 0xA8452200) & v116;
  v118 = v110 ^ (2
               * ((v117 << 16) & 0x3A80000 ^ v117 ^ ((v117 << 16) ^ 0x45220000) & ((v116 << 8) & 0x3A80000 ^ 0x3A80000 ^ ((v116 << 8) ^ 0x28450000) & v116)));
  v119 = ((v118 ^ 0x7E7AE40D) - 1509782216) ^ ((v118 ^ 0xDBCEB07D) + 62314824) ^ ((v118 ^ 0xE9CECA2) - 689666663);
  v120 = ((v119 + 974973846) ^ 0xA934FFF6) & (2 * ((v119 + 974973846) & 0xADB4FFC0)) ^ (v119 + 974973846) & 0xADB4FFC0;
  v121 = ((2 * ((v119 + 974973846) ^ 0xA91DE0F6)) ^ 0x9523E6C) & ((v119 + 974973846) ^ 0xA91DE0F6) ^ (2 * ((v119 + 974973846) ^ 0xA91DE0F6)) & 0x4A91F36;
  v122 = (v121 ^ 0x81E12) & (4 * v120) ^ v120;
  v123 = ((4 * (v121 ^ 0x4A90112)) ^ 0x12A47CD8) & (v121 ^ 0x4A90112) ^ (4 * (v121 ^ 0x4A90112)) & 0x4A91F34;
  v124 = (v123 ^ 0xA01C06) & (16 * v122) ^ v122;
  v125 = ((16 * (v123 ^ 0x4090326)) ^ 0x4A91F360) & (v123 ^ 0x4090326) ^ (16 * (v123 ^ 0x4090326)) & 0x4A91F30;
  v126 = v124 ^ 0x4A91F36 ^ (v125 ^ 0x811316) & (v124 << 8);
  v127 = v119
       - 405673129
       + ((((v119 + 974973846) ^ (2
                                * ((v126 << 16) & 0x4A90000 ^ v126 ^ ((v126 << 16) ^ 0x1F360000) & (((v125 ^ 0x4280C16) << 8) & 0x4A90000 ^ 0x4A00000 ^ (((v125 ^ 0x4280C16) << 8) ^ 0xA91F0000) & (v125 ^ 0x4280C16))))) >> 12) ^ 0xFFF53593);
  v128 = v127 - (v127 >> 8) - ((2 * (v127 - (v127 >> 8))) & 0x9D6ABF5E) - 826974289;
  v129 = ((v128 ^ 0x545DAFB) - 88464123) ^ ((v128 ^ 0xDF9D75DB) + 543328805) ^ ((v128 ^ 0x146DF08F) - 342749327);
  v130 = v32 ^ v118;
  v131 = ((v129 + 1147679213) ^ 0xFF1AABC1) & (2 * ((v129 + 1147679213) & 0xFF100BE9)) ^ (v129 + 1147679213) & 0xFF100BE9;
  v132 = ((2 * ((v129 + 1147679213) ^ 0xBD3ABD03)) ^ 0x84556DD4) & ((v129 + 1147679213) ^ 0xBD3ABD03) ^ (2 * ((v129 + 1147679213) ^ 0xBD3ABD03)) & 0x422AB6EA;
  v133 = (v132 ^ 0x24C0) & (4 * v131) ^ v131;
  v134 = ((4 * (v132 ^ 0x422A922A)) ^ 0x8AADBA8) & (v132 ^ 0x422A922A) ^ (4 * (v132 ^ 0x422A922A)) & 0x422AB6E8;
  v135 = (v134 ^ 0x2A92A2) & (16 * v133) ^ v133;
  v136 = ((16 * (v134 ^ 0x42002442)) ^ 0x22AB6EA0) & (v134 ^ 0x42002442) ^ (16 * (v134 ^ 0x42002442)) & 0x422AB6E0;
  v137 = v135 ^ 0x422AB6EA ^ (v136 ^ 0x22A264A) & (v135 << 8);
  v138 = ((v129 + 1147679213) ^ (2
                               * ((v137 << 16) & 0x422A0000 ^ v137 ^ ((v137 << 16) ^ 0x36EA0000) & (((v136 ^ 0x4000904A) << 8) & 0x422A0000 ^ 0x40080000 ^ (((v136 ^ 0x4000904A) << 8) ^ 0x2AB60000) & (v136 ^ 0x4000904A))))) >> 9;
  v139 = v129
       - 631332252
       + (((v138 ^ 0x75B441E0) - 1304754927) ^ ((v138 ^ 0x7B641D7C) - 1125426803) ^ ((v138 ^ 0xEEFD42F) - 916418336));
  v140 = (v139 ^ 0xAC6EEE8C) & (2 * (v139 & 0xA168CF2E)) ^ v139 & 0xA168CF2E;
  v141 = ((2 * (v139 ^ 0xECFF6084)) ^ 0x9B2F5F54) & (v139 ^ 0xECFF6084) ^ (2 * (v139 ^ 0xECFF6084)) & 0x4D97AFAA;
  v142 = (v141 ^ 0x49178D00) & (4 * v140) ^ v140;
  v143 = ((4 * (v141 ^ 0x4490A0AA)) ^ 0x365EBEA8) & (v141 ^ 0x4490A0AA) ^ (4 * (v141 ^ 0x4490A0AA)) & 0x4D97AFA8;
  v144 = (v143 ^ 0x416AEA0) & (16 * v142) ^ v142;
  v145 = ((16 * (v143 ^ 0x49810102)) ^ 0xD97AFAA0) & (v143 ^ 0x49810102) ^ (16 * (v143 ^ 0x49810102)) & 0x4D97AFA0;
  v146 = v144 ^ 0x4D97AFAA ^ (v145 ^ 0x4912AA0A) & (v144 << 8);
  v147 = (v139 ^ (2
                * ((v146 << 16) & 0x4D970000 ^ v146 ^ ((v146 << 16) ^ 0x2FAA0000) & (((v145 ^ 0x485050A) << 8) & 0x4D970000 ^ 0x48100000 ^ (((v145 ^ 0x485050A) << 8) ^ 0x97AF0000) & (v145 ^ 0x485050A))))) >> 7;
  v148 = v139
       - (((v147 ^ 0x76BEE67D) + 1394965664) ^ ((v147 ^ 0x94986045) - 1325139288) ^ ((v147 ^ 0xE2640118) - 939549701))
       - 872445514;
  v149 = (v148 ^ 0xF3237BB3) & (2 * (v148 & 0xFB42633B)) ^ v148 & 0xFB42633B;
  v150 = ((2 * (v148 ^ 0x77233DA1)) ^ 0x18C2BD34) & (v148 ^ 0x77233DA1) ^ (2 * (v148 ^ 0x77233DA1)) & 0x8C615E9A;
  v151 = (v150 ^ 0x8205E12) & (4 * v149) ^ v149;
  v152 = ((4 * (v150 ^ 0x8421428A)) ^ 0x31857A68) & (v150 ^ 0x8421428A) ^ (4 * (v150 ^ 0x8421428A)) & 0x8C615E98;
  v153 = (v152 ^ 0x15A02) & (16 * v151) ^ v151;
  v154 = ((16 * (v152 ^ 0x8C600492)) ^ 0xC615E9A0) & (v152 ^ 0x8C600492) ^ (16 * (v152 ^ 0x8C600492)) & 0x8C615E90;
  v155 = v153 ^ 0x8C615E9A ^ (v154 ^ 0x84014800) & (v153 << 8);
  v156 = v148 ^ (2
               * ((v155 << 16) & 0xC610000 ^ v155 ^ ((v155 << 16) ^ 0x5E9A0000) & (((v154 ^ 0x860161A) << 8) & 0x8C610000 ^ 0xC210000 ^ (((v154 ^ 0x860161A) << 8) ^ 0x615E0000) & (v154 ^ 0x860161A))));
  v157 = ((v156 ^ 0x9E817A66) + 160242573) ^ ((v156 ^ 0x40AE686B) - 677246590) ^ ((v156 ^ 0x25AFCC02) - 1297895959);
  v158 = ((v157 - 188655615) ^ 0xCC17C03B) & (2 * ((v157 - 188655615) & 0xE887D033)) ^ (v157 - 188655615) & 0xE887D033;
  v159 = ((2 * ((v157 - 188655615) ^ 0x9C1A607B)) ^ 0xE93B6090) & ((v157 - 188655615) ^ 0x9C1A607B) ^ (2 * ((v157 - 188655615) ^ 0x9C1A607B)) & 0x749DB048;
  v160 = (v159 ^ 0x60190000) & (4 * v158) ^ v158;
  v161 = ((4 * (v159 ^ 0x14849048)) ^ 0xD276C120) & (v159 ^ 0x14849048) ^ (4 * (v159 ^ 0x14849048)) & 0x749DB048;
  v162 = v160 ^ 0x749DB048 ^ (v161 ^ 0x50148000) & (16 * v160);
  v163 = (16 * (v161 ^ 0x24893048)) & 0x749DB040 ^ 0x3404B048 ^ ((16 * (v161 ^ 0x24893048)) ^ 0x49DB0480) & (v161 ^ 0x24893048);
  v164 = (v162 << 8) & 0x749DB000 ^ v162 ^ ((v162 << 8) ^ 0x9DB04800) & v163;
  v165 = ((v157 - 188655615) ^ (2
                              * ((v164 << 16) & 0x749D0000 ^ v164 ^ ((v164 << 16) ^ 0x30480000) & ((v163 << 8) & 0x749D0000 ^ 0x600D0000 ^ ((v163 << 8) ^ 0x1DB00000) & v163)))) >> 12;
  v166 = v157
       - (((v165 ^ 0xCB2AEE17) + 938946066) ^ ((v165 ^ 0x9FD42BF1) + 1661594616) ^ ((v165 ^ 0x54FA4D2D) - 1473802964))
       - 509708904;
  v167 = (v166 ^ 0xF663FA4B) & (2 * (v166 & 0xF883FB6A)) ^ v166 & 0xF883FB6A;
  v168 = ((2 * (v166 ^ 0xE7653E0B)) ^ 0x3FCD8AC2) & (v166 ^ 0xE7653E0B) ^ (2 * (v166 ^ 0xE7653E0B)) & 0x1FE6C560;
  v169 = (v168 ^ 0x6248040) & (4 * v167) ^ v167;
  v170 = ((4 * (v168 ^ 0x224521)) ^ 0x7F9B1584) & (v168 ^ 0x224521) ^ (4 * (v168 ^ 0x224521)) & 0x1FE6C560;
  v171 = (v170 ^ 0x1F820500) & (16 * v169) ^ v169;
  v172 = ((16 * (v170 ^ 0x64C061)) ^ 0xFE6C5610) & (v170 ^ 0x64C061) ^ (16 * (v170 ^ 0x64C061)) & 0x1FE6C560;
  v173 = v171 ^ 0x1FE6C561 ^ (v172 ^ 0x1E644400) & (v171 << 8);
  v174 = (((v166 ^ (2
                  * ((v173 << 16) & 0x1FE60000 ^ v173 ^ ((v173 << 16) ^ 0x45610000) & (((v172 ^ 0x1828161) << 8) & 0x1FE60000 ^ 0x19220000 ^ (((v172 ^ 0x1828161) << 8) ^ 0x66C50000) & (v172 ^ 0x1828161))))) >> 8) ^ 0xCD8E71)
       + v166;
  v175 = (v174 ^ 0xF26BFB6B) & (2 * (v174 & 0xF883FB6A)) ^ v174 & 0xF883FB6A;
  v176 = ((2 * (v174 ^ 0x53680BBB)) ^ 0x57D7E1A2) & (v174 ^ 0x53680BBB) ^ (2 * (v174 ^ 0x53680BBB)) & 0xABEBF0D0;
  v177 = (v176 ^ 0xA23E080) & (4 * v175) ^ v175;
  v178 = ((4 * (v176 ^ 0xA8281051)) ^ 0xAFAFC344) & (v176 ^ 0xA8281051) ^ (4 * (v176 ^ 0xA8281051)) & 0xABEBF0D0;
  v179 = (v178 ^ 0xABABC051) & (16 * v177) ^ v177;
  v180 = ((16 * (v178 ^ 0x403091)) ^ 0xBEBF0D10) & (v178 ^ 0x403091) ^ (16 * (v178 ^ 0x403091)) & 0xABEBF0D0;
  v181 = v179 ^ 0xABEBF0D1 ^ (v180 ^ 0xAAAB00C1) & (v179 << 8);
  v182 = v174 ^ (2
               * ((v181 << 16) & 0x2BEB0000 ^ v181 ^ ((v181 << 16) ^ 0x70D10000) & (((v180 ^ 0x140F0C1) << 8) & 0x2BEB0000 ^ 0xB0000 ^ (((v180 ^ 0x140F0C1) << 8) ^ 0xEBF00000) & (v180 ^ 0x140F0C1))));
  v183 = v130 ^ v182;
  v184 = (((v182 ^ 0x77F32D17) + 1929312316) ^ ((v182 ^ 0xD08F04BA) - 712846953) ^ ((v182 ^ 0x49AA3365) + 1286071882))
       + 1631568416;
  v185 = v184 + (v184 >> 9) - ((v184 + (v184 >> 9)) >> 8);
  v186 = (((v185 ^ 0x29137E7C) + 1676967860) ^ ((v185 ^ 0x5E4E41C7) + 346636297) ^ ((v185 ^ 0x93AFA9FF) - 649549775))
       - 1853049335
       + ((((v185 >> 15) ^ 0x7C8B77B2) + 1489749622) ^ (((v185 >> 15) ^ 0xBFF9A820) - 1682368024) ^ (((v185 >> 15) ^ 0xC3731677) - 416045135));
  v187 = (v186 ^ 0x5ADF3B42) & (2 * (v186 & 0x9C1C3A48)) ^ v186 & 0x9C1C3A48;
  v188 = ((2 * (v186 ^ 0x62E74F52)) ^ 0xFDF6EA34) & (v186 ^ 0x62E74F52) ^ (2 * (v186 ^ 0x62E74F52)) & 0xFEFB751A;
  v189 = (v188 ^ 0xF2F86408) & (4 * v187) ^ v187;
  v190 = ((4 * (v188 ^ 0x209150A)) ^ 0xFBEDD468) & (v188 ^ 0x209150A) ^ (4 * (v188 ^ 0x209150A)) & 0xFEFB7518;
  v191 = (v190 ^ 0xFAE95410) & (16 * v189) ^ v189;
  v192 = ((16 * (v190 ^ 0x4122112)) ^ 0xEFB751A0) & (v190 ^ 0x4122112) ^ (16 * (v190 ^ 0x4122112)) & 0xFEFB7510;
  v193 = v191 ^ 0xFEFB751A ^ (v192 ^ 0xEEB35100) & (v191 << 8);
  v194 = (v186 ^ (2
                * ((v193 << 16) & 0x7EFB0000 ^ v193 ^ ((v193 << 16) ^ 0x751A0000) & (((v192 ^ 0x1048241A) << 8) & 0x7EFB0000 ^ 0x48A0000 ^ (((v192 ^ 0x1048241A) << 8) ^ 0x7B750000) & (v192 ^ 0x1048241A))))) >> 7;
  v195 = v186
       - 1445276930
       + (((v194 ^ 0xE7E79041) + 766021698) ^ ((v194 ^ 0x9B7A8AD) - 1007114066) ^ ((v194 ^ 0xEF43854C) + 621577549))
       + 461;
  v196 = (v195 ^ 0xB6D617DC) & (2 * (v195 & 0x26E4A7DC)) ^ v195 & 0x26E4A7DC;
  v197 = ((2 * (v195 ^ 0xBA97166C)) ^ 0x38E76360) & (v195 ^ 0xBA97166C) ^ (2 * (v195 ^ 0xBA97166C)) & 0x9C73B1B0;
  v198 = (v197 ^ 0x18232120) & (4 * v196) ^ v196;
  v199 = ((4 * (v197 ^ 0x84109090)) ^ 0x71CEC6C0) & (v197 ^ 0x84109090) ^ (4 * (v197 ^ 0x84109090)) & 0x9C73B1B0;
  v200 = (v199 ^ 0x10428090) & (16 * v198) ^ v198;
  v201 = ((16 * (v199 ^ 0x8C313130)) ^ 0xC73B1B00) & (v199 ^ 0x8C313130) ^ (16 * (v199 ^ 0x8C313130)) & 0x9C73B1B0;
  v202 = v200 ^ 0x9C73B1B0 ^ (v201 ^ 0x843311B0) & (v200 << 8);
  v203 = (v202 << 16) & 0x1C730000 ^ v202 ^ ((v202 << 16) ^ 0x31B00000) & (((v201 ^ 0x1840A0B0) << 8) & 0x1C730000 ^ 0xC420000 ^ (((v201 ^ 0x1840A0B0) << 8) ^ 0x73B10000) & (v201 ^ 0x1840A0B0));
  v204 = v183 & 0x7F ^ 0x1B;
  v205 = v91 ^ a4 ^ v156 ^ v195 ^ (2 * v203);
  v206 = ((2 * (v205 & 7 | 0x1005280)) & 0x210C) - (v205 & 7 | 0x1005280) + 1666966041;
  v207 = (((LODWORD(STACK[0x6698]) ^ 0x2E2B5A9A) - 774593178) ^ ((LODWORD(STACK[0x6698]) ^ 0xF0E5459E) + 253409890) ^ ((LODWORD(STACK[0x6698]) ^ 0xAA489E37) + 1438081481))
       + LODWORD(STACK[0x6860])
       + 1954971947
       + (v206 ^ 0x625BB098);
  v208 = STACK[0x6618];
  LODWORD(STACK[0x6600]) = v204;
  LODWORD(STACK[0x6A70]) = v207 + 1188683101 * (v204 - v208);
  v209 = (1160216542 - (v183 & 0xFFFFFF80 ^ 0x8D876D17) + ((2 * (v183 & 0xFFFFFF80 ^ 0x8D876D17)) | 0x75B10044)) ^ 0x68DBC4F0;
  v210 = (((2 * v209) | 0xDE384ED2) - v209 + 283367575) ^ 0xFE6AFBAC;
  v211 = 16843009 * v204 - 531759756;
  v212 = (v211 ^ 0x9F313028) & (2 * (v211 & 0x1FB2028C)) ^ v211 & 0x1FB2028C;
  v213 = ((2 * (v211 ^ 0x9C113430)) ^ 0x7466D78) & (v211 ^ 0x9C113430) ^ (2 * (v211 ^ 0x9C113430)) & 0x83A336BC;
  v214 = (v213 ^ 0x32104B4) & (4 * v212) ^ v212;
  v215 = ((4 * (v213 ^ 0x80A11284)) ^ 0xE8CDAF0) & (v213 ^ 0x80A11284) ^ (4 * (v213 ^ 0x80A11284)) & 0x83A336BC;
  v216 = (v215 ^ 0x28012AC) & (16 * v214) ^ v214;
  v217 = ((16 * (v215 ^ 0x8123240C)) ^ 0x3A336BC0) & (v215 ^ 0x8123240C) ^ (16 * (v215 ^ 0x8123240C)) & 0x83A336B0;
  v218 = v216 ^ 0x83A336BC ^ (v217 ^ 0x2232200) & (v216 << 8);
  v219 = v211 ^ (2
               * ((v218 << 16) & 0x3A30000 ^ v218 ^ ((v218 << 16) ^ 0x36BC0000) & (((v217 ^ 0x8180143C) << 8) & 0x3A30000 ^ 0x810000 ^ (((v217 ^ 0x8180143C) << 8) ^ 0x23360000) & (v217 ^ 0x8180143C))));
  v220 = ((v204 + 116) ^ (2 * v218)) ^ 0xC404AC54;
  v221 = (1242109158 - v220 + ((2 * v220) | 0x6BEDC774) + 1888) ^ 0x71F24F1A;
  LODWORD(STACK[0x69E0]) = v183 ^ 0x4EF2F51B;
  LODWORD(STACK[0x6AC0]) = v221 + v210;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6890]) + 168415803 * ((v183 ^ 0x4EF2F51B) - (v221 + v210));
  v222 = STACK[0x6610];
  v223 = STACK[0x64A8] & 0xFFFFFF80;
  v224 = (((STACK[0x6610] & 0xF8 ^ 0x745B499) + 0x7FFFFFF) & 0x70194F8 | STACK[0x6610] & 7) ^ 0x7019403;
  v225 = LODWORD(STACK[0x65D8]) ^ 0xE172BAFC;
  v226 = LODWORD(STACK[0x6740]) ^ 0xB78CEB09;
  LODWORD(STACK[0x6A30]) = v224 | v223;
  LODWORD(STACK[0x69F0]) = v225 + 139926283 * (v226 - (v224 | v223));
  v227 = v62 ^ v11 ^ v128 ^ (v185 - ((2 * v185) & 0x38BB46C2) + 475898721);
  v228 = v227 ^ 0x491C17AB;
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x66D8]) + 1140273585 * (v227 ^ 0x491C17AB ^ LODWORD(STACK[0x68F0]));
  LODWORD(STACK[0x69A0]) = v205;
  v229 = (((2 * (v205 & 0xFFFFFFF8 ^ 0xE61A17B0)) | 0x33574C0) - (v205 & 0xFFFFFFF8 ^ 0xE61A17B0) - 26917472) ^ 0x74039E12;
  v230 = v229 - ((2 * v229) & 0xC3716CF8) - 507988356;
  v231 = (((((v205 ^ (v205 + 4) ^ ((v205 ^ 2) + 2)) ^ 4) + 3) & 7 ^ 0xFFFFFFFE) - 1977492152) ^ 0xEA308D67;
  v232 = (v231 - ((2 * v231) & 0xC0002002) - 125651047) ^ 0x9893E7B8;
  LODWORD(STACK[0x6378]) = v206 ^ 0x975F538;
  if ((v206 ^ 0x975F538) == 0x6B2E45A0)
    v233 = 0;
  else
    v233 = 255;
  v234 = v233 << v232;
  v235 = v234 ^ 0xC2C60264;
  if ((v206 ^ 0x975F538) == 0x6B2E45A0)
    v235 = 1027210651;
  LODWORD(STACK[0x66B0]) = v183;
  v236 = -1090519040 * v234;
  v237 = 16843009 * v234;
  LODWORD(STACK[0x6418]) = v228;
  LODWORD(STACK[0x6970]) = v236 & v228 ^ v237;
  LODWORD(STACK[0x6890]) = v235 & 0x94 ^ (v235 ^ 0x9B) & (v183 ^ 0x16) ^ v237;
  v238 = 16843009
       * (v183 ^ 0xB5 ^ ((v183 ^ 0xF544E5B5) >> 16) ^ ((unsigned __int16)(v183 ^ 0xE5B5) >> 8) ^ HIBYTE(v183) ^ 0xB3);
  v239 = 16843009
       * (((v227 ^ 0xE84D6C0B) >> 16) ^ HIBYTE(v227) ^ v227 ^ 0xB ^ ((unsigned __int16)(v227 ^ 0x6C0B) >> 8) ^ 0xB4);
  LODWORD(STACK[0x6A00]) = v239;
  LODWORD(STACK[0x69D0]) = v238;
  v240 = (v239 ^ v238) + 437918234 - ((2 * (v239 ^ v238)) & 0x34343434);
  v241 = ((2 * (v205 & 7 | 0x1005280)) & 0x210C) - (v205 & 7 | 0x1005280) + 1666966041;
  v242 = STACK[0x6730];
  LODWORD(STACK[0x6940]) = (-367310649 * LODWORD(STACK[0x6730])) ^ LODWORD(STACK[0x6480]) ^ (-328392864
                                                                                           - 367310649
                                                                                           * (((v206 ^ 0x8A1F19C8)
                                                                                             + 2090144528) ^ ((v206 ^ 0x763DC6BC) - 2135438212) ^ ((v206 ^ 0x9E796FEC) + 1760781612)));
  v243 = STACK[0x6A60];
  v244 = -59847630 - 1253002553 * STACK[0x6A60];
  v245 = v244 & 0x39133CE ^ 0xE9220606 ^ (v244 ^ 0xEB9133CC) & (2 * (v244 & 0x39133CE));
  v246 = (2 * (v244 ^ 0xEAB335C8)) & 0xE9220606 ^ 0x29220202 ^ ((2 * (v244 ^ 0xEAB335C8)) ^ 0xD2440C0C) & (v244 ^ 0xEAB335C8);
  v247 = (4 * v245) & 0xE9220600 ^ v245 ^ ((4 * v245) ^ 0xA4881818) & v246;
  v248 = (4 * v246) & 0xE9220604 ^ 0x49220606 ^ ((4 * v246) ^ 0xA4881818) & v246;
  v249 = (16 * v247) & 0xE9220600 ^ v247 ^ ((16 * v247) ^ 0x92206060) & v248;
  v250 = (16 * v248) & 0xE9220600 ^ 0x69020606 ^ ((16 * v248) ^ 0x92206060) & v248;
  v251 = v249 ^ 0x20220600 ^ (v249 << 8) & 0xE9220600 ^ ((v249 << 8) ^ 0x2060600) & v250;
  v252 = v244 ^ LODWORD(STACK[0x65F8]) ^ (2
                                        * ((v251 << 16) & 0x69220000 ^ v251 ^ ((v251 << 16) ^ 0x6060000) & ((v250 << 8) & 0xE9220000 ^ 0x49200000 ^ ((v250 << 8) ^ 0x22060000) & v250)));
  v253 = STACK[0x6A80];
  v254 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6A80]) - 7364);
  LODWORD(STACK[0x6950]) = v252 ^ (-1253002553 * v232);
  v255 = v254 + 4 * (v206 ^ 0x625BB098u);
  v256 = (uint64_t)*(&off_1015B46D0 + v253 - 8861);
  LODWORD(STACK[0x64A8]) = v222 ^ 0x78AF9D9B;
  v257 = v256 - 4;
  v258 = *(_DWORD *)(v256 - 4 + 4 * ((v222 ^ 0x78AF9D9Bu) % 0x101));
  v259 = STACK[0x6708];
  LODWORD(STACK[0x6480]) = v219 ^ 0x1DB46FF4;
  v260 = (char *)*(&off_1015B46D0 + v253 - 8305) - 8;
  v261 = *(_DWORD *)&v260[4 * ((v219 ^ 0x1DB46FF4) % 0x101)];
  v262 = (((v259 ^ 0x86048E51) + 2046521775) ^ ((v259 ^ 0xC6315858) + 969844648) ^ ((v259 ^ 0x34B3573A) - 884168506))
       + 422802956
       + (((v258 ^ 0x63EEA132) + 740371671) ^ ((v258 ^ 0xA84A4031) - 410661418) ^ ((v258 ^ 0x4F8D6E52) + 4383671))
       + (v261 ^ 0x866E9F65 ^ (v261 >> 1) & 0x4E299547);
  LODWORD(v256) = (v262 ^ 0x6F68607A) & (2 * (v262 & 0x8F6D0872)) ^ v262 & 0x8F6D0872;
  v263 = ((2 * (v262 ^ 0x6D3A60FE)) ^ 0xC4AED118) & (v262 ^ 0x6D3A60FE) ^ (2 * (v262 ^ 0x6D3A60FE)) & 0xE257688C;
  LODWORD(v256) = (v263 ^ 0x4005480C) & (4 * v256) ^ v256;
  v264 = ((4 * (v263 ^ 0x22512884)) ^ 0x895DA230) & (v263 ^ 0x22512884) ^ (4 * (v263 ^ 0x22512884)) & 0xE257688C;
  LODWORD(v256) = (v264 ^ 0x8055200C) & (16 * v256) ^ v256;
  v265 = ((16 * (v264 ^ 0x6202488C)) ^ 0x257688C0) & (v264 ^ 0x6202488C) ^ (16 * (v264 ^ 0x6202488C)) & 0xE2576880;
  LODWORD(v256) = v256 ^ 0xE257688C ^ (v265 ^ 0x20560800) & ((_DWORD)v256 << 8);
  v266 = (uint64_t)*(&off_1015B46D0 + (v253 ^ 0x2C81));
  v267 = *(_DWORD *)(v266 + 4 * (v242 % 0x101));
  LODWORD(STACK[0x6990]) = ((_DWORD)v256 << 16) & 0x62570000 ^ v256 ^ (((_DWORD)v256 << 16) ^ 0x688C0000) & (((v265 ^ 0xC201600C) << 8) & 0x62570000 ^ 0x20170000 ^ (((v265 ^ 0xC201600C) << 8) ^ 0x57680000) & (v265 ^ 0xC201600C));
  LODWORD(v256) = LODWORD(STACK[0x66B8]) ^ v267 ^ v241 ^ 0x489EA85E ^ *(_DWORD *)(v255 - 12);
  v268 = 4 * v243;
  LODWORD(v255) = *(_DWORD *)(v266 + v268) ^ LODWORD(STACK[0x67C0]);
  v269 = (269488144 * LODWORD(STACK[0x6600])) ^ (269488144 * v208);
  v270 = LODWORD(STACK[0x6870]) + (LODWORD(STACK[0x66C0]) ^ 0xE172BAFC);
  v271 = STACK[0x6870];
  LODWORD(STACK[0x6A10]) = v240;
  LODWORD(STACK[0x65F8]) = v219;
  LODWORD(STACK[0x6698]) = ((v269 ^ (v270 - v240)) - ((2 * (v269 ^ (v270 - v240))) & 0xBD7F6674) - 557862086) ^ v222 ^ v219;
  STACK[0x66D8] = v232;
  v272 = *(_DWORD *)(v266 + 4 * v232);
  LODWORD(STACK[0x6930]) = v255 ^ v272;
  v273 = v272 ^ 0x4D371ED2;
  v274 = STACK[0x66A8];
  v275 = -672488251
       - 1391435151
       * (((v274 ^ 0x942481B2) - 666498912) ^ ((v274 ^ 0x1E11FEBD) + 1383298961) ^ ((v274 ^ 0x75EA2FDD) + 965256945));
  LODWORD(v255) = (v275 ^ 0x5BD2AD32) & (2 * (v275 & 0x83D4213B)) ^ v275 & 0x83D4213B;
  v276 = ((2 * (v275 ^ 0x5D52AF66)) ^ 0xBD0D1CBA) & (v275 ^ 0x5D52AF66) ^ (2 * (v275 ^ 0x5D52AF66)) & 0xDE868E5C;
  LODWORD(v243) = ((4 * (v276 ^ 0x42828245)) ^ 0x7A1A3974) & (v276 ^ 0x42828245) ^ (4 * (v276 ^ 0x42828245)) & 0xDE868E5C;
  v277 = (v243 ^ 0x5A020850) & (16 * ((v276 ^ 0x1C000C18) & (4 * v255) ^ v255)) ^ (v276 ^ 0x1C000C18) & (4 * v255) ^ v255;
  LODWORD(v243) = ((16 * (v243 ^ 0x84848609)) ^ 0xE868E5D0) & (v243 ^ 0x84848609) ^ (16 * (v243 ^ 0x84848609)) & 0xDE868E50;
  v278 = v277 ^ 0xDE868E5D ^ (v243 ^ 0xC800840D) & (v277 << 8);
  LODWORD(STACK[0x6960]) = (v278 << 16) & 0x5E860000 ^ v278 ^ ((v278 << 16) ^ 0xE5D0000) & (((v243 ^ 0x16860A0D) << 8) & 0xDE860000 ^ 0x58000000 ^ (((v243 ^ 0x16860A0D) << 8) ^ 0x68E0000) & (v243 ^ 0x16860A0D));
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6A70]) ^ (2110239921 * v271) ^ (2110239921 * v240);
  LODWORD(STACK[0x6A20]) = (-832726329 * v226) ^ LODWORD(STACK[0x65E8]);
  v279 = STACK[0x6478];
  LODWORD(v243) = (LODWORD(STACK[0x6478]) ^ 0xC6DC967) + v242;
  LODWORD(STACK[0x6A70]) = v275 ^ LODWORD(STACK[0x6700]) ^ (-1391435151 * v243
                                                          - 1834643784
                                                          - ((438355170 * v243) & 0x254B1FC8)
                                                          + 300);
  v280 = STACK[0x69E0];
  v281 = (v221 ^ v210) + LODWORD(STACK[0x6690]) - LODWORD(STACK[0x69E0]);
  LODWORD(STACK[0x6700]) = (v230 ^ 0x5CBA5E7D) & (v241 ^ 0x9DA44F67);
  v282 = v241 & 0x42482065 ^ 0x5000005 ^ (v230 ^ 0x295DCD0C) & (v241 ^ 0x9DA44F67);
  v283 = STACK[0x69A0];
  LODWORD(STACK[0x69C0]) = ((LODWORD(STACK[0x69A0]) ^ 0x86260F0) - 1733521435) ^ ((LODWORD(STACK[0x69A0]) ^ 0x1D58D01E)
                                                                                - 1919533301) ^ ((LODWORD(STACK[0x69A0]) ^ 0xE67925C7)
                                                                                               + 1991756500);
  v284 = ((2 * v282) & 0xD890E032) - v282 - 1816686618;
  LODWORD(STACK[0x6980]) = ((v284 ^ 0xB4CF05B6) + 1249901135) ^ ((v284 ^ 0xCC0E31B6) + 851365455) ^ ((v284 ^ 0x41B4679) - 89409150);
  LODWORD(STACK[0x69B0]) = ((LODWORD(STACK[0x66A0]) ^ 0xDF266DFE) + 551129602) ^ ((LODWORD(STACK[0x66A0]) ^ 0x890A9BF8)
                                                                                + 1995793416) ^ ((LODWORD(STACK[0x66A0]) ^ 0xAB4FEFDF)
                                                                                               + 1420824609);
  v285 = v279 ^ 0x1897D847 ^ (351932712 - LODWORD(STACK[0x6860]) - ((2 * v242) & 0x29F42240));
  v286 = v274 ^ LODWORD(STACK[0x65F0]) ^ (v274 >> 3);
  HIDWORD(v287) = v286 ^ 0x24BAC8;
  LODWORD(v287) = v286 ^ 0xE0000000;
  v288 = v224 + v223;
  v289 = (v287 >> 24) ^ 0x70BAD37;
  v290 = *(_DWORD *)(v266 + 4 * (v226 % 0x101));
  LODWORD(STACK[0x67C0]) = v285;
  HIDWORD(v287) = v285;
  LODWORD(v287) = v285;
  v291 = *(_DWORD *)&v260[4 * (v288 % 0x101)];
  v292 = *(_DWORD *)&v260[4 * ((v274 ^ 0xFFDF50D2) % 0x101)];
  LODWORD(STACK[0x66A0]) = *(_DWORD *)(v257 + v268);
  LODWORD(v266) = v292 ^ 0xA4E531B0;
  v293 = *(_DWORD *)(v257 + 4 * (v243 % 0x101));
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x6A40]) - 1420922974 + v273;
  v294 = STACK[0x68D0];
  LODWORD(STACK[0x6420]) = LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x68B0]) ^ (v281
                                                                            - 1827756479
                                                                            - ((2 * v281) & 0x261D4C82));
  LODWORD(STACK[0x65E8]) = (((v283 ^ 0x7B0EF7AD) - 339732294) ^ ((v283 ^ 0x14EE5860) - 2078230667) ^ ((v283 ^ 0x9CA33AE4) + 208524785))
                         - (((v284 ^ 0xBE96E59E) + 1076238951) ^ ((v284 ^ 0xBD171FEC) + 1135075349) ^ ((v284 ^ 0x7F5B880B) - 2115274764));
  v295 = 2119057818
       - 335059603
       * (((v283 ^ 0x78B1F1FB) - 2014361086) ^ ((v283 ^ 0x20FFF83E) - 543079483) ^ ((v283 ^ 0x4061FD7A) - 1086372223));
  v296 = (v295 ^ 0x6E4B5F13) & (2 * (v295 & 0x8F425F98)) ^ v295 & 0x8F425F98;
  LODWORD(v243) = ((2 * (v295 ^ 0x684F5103)) ^ 0xCE1A1D36) & (v295 ^ 0x684F5103) ^ (2 * (v295 ^ 0x684F5103)) & 0xE70D0E9A;
  v297 = (v243 ^ 0x460C0C09) & (4 * v296) ^ v296;
  LODWORD(v243) = ((4 * (v243 ^ 0x21050289)) ^ 0x9C343A6C) & (v243 ^ 0x21050289) ^ (4 * (v243 ^ 0x21050289)) & 0xE70D0E98;
  v298 = (v243 ^ 0x84040A13) & (16 * v297) ^ v297;
  LODWORD(v243) = ((16 * (v243 ^ 0x63090493)) ^ 0x70D0E9B0) & (v243 ^ 0x63090493) ^ (16 * (v243 ^ 0x63090493)) & 0xE70D0E90;
  v299 = v298 ^ 0xE70D0E9B ^ (v243 ^ 0x6000080B) & (v298 << 8);
  LODWORD(v257) = (v299 << 16) & 0x670D0000 ^ v299 ^ ((v299 << 16) ^ 0xE9B0000) & (((v243 ^ 0x870D060B) << 8) & 0xE70D0000 ^ 0x62010000 ^ (((v243 ^ 0x870D060B) << 8) ^ 0xD0E0000) & (v243 ^ 0x870D060B));
  v300 = -335059603
       * (((v274 ^ 0xD4E2BFC4) + 862234139) ^ ((v274 ^ 0x484B0FD9) - 1345513976) ^ ((v274 ^ 0x881A8159) + 1872533640))
       - 117049502;
  LODWORD(v243) = (v300 ^ 0x86C5475E) & (2 * (v300 & 0x8015979F)) ^ v300 & 0x8015979F;
  v301 = ((2 * (v300 ^ 0x86E44E70)) ^ 0xDE3B3DE) & (v300 ^ 0x86E44E70) ^ (2 * (v300 ^ 0x86E44E70)) & 0x6F1D9EE;
  LODWORD(v243) = (v301 ^ 0x2E090CD) & (4 * v243) ^ v243;
  v302 = ((4 * (v301 ^ 0x2104821)) ^ 0x1BC767BC) & (v301 ^ 0x2104821) ^ (4 * (v301 ^ 0x2104821)) & 0x6F1D9EC;
  LODWORD(v243) = (v302 ^ 0x2C141A3) & (16 * v243) ^ v243;
  v303 = ((16 * (v302 ^ 0x4309843)) ^ 0x6F1D9EF0) & (v302 ^ 0x4309843) ^ (16 * (v302 ^ 0x4309843)) & 0x6F1D9E0;
  LODWORD(v243) = v243 ^ 0x6F1D9EF ^ (v303 ^ 0x6119800) & ((_DWORD)v243 << 8);
  v304 = STACK[0xDAA0];
  STACK[0x6A40] = STACK[0xDAA0];
  v305 = *(_QWORD *)(v304 + 8 * (0xC0C426A1 % v294));
  v306 = (((v305 ^ 0xB78A3AC263103763) + 0x6E4B7B0764097511) ^ ((v305 ^ 0xA97D9AC1C6293A07) + 0x70BCDB04C1307875) ^ ((v305 ^ 0x6D84D370D64A7E17) - 0x4BBA6D4A2EACC39BLL))
       + 0x554DCD4A12F4D968;
  v307 = v300 ^ LODWORD(STACK[0x6710]) ^ (2
                                        * (((_DWORD)v243 << 16) & 0x6F10000 ^ v243 ^ (((_DWORD)v243 << 16) ^ 0x59EF0000) & (((v303 ^ 0xE0410F) << 8) & 0x6F10000 ^ 0x6200000 ^ (((v303 ^ 0xE0410F) << 8) ^ 0x71D90000) & (v303 ^ 0xE0410F)))) ^ v283;
  LODWORD(STACK[0x6658]) = v241;
  v308 = v307 ^ v241 & 0x9B014 ^ v295 ^ LODWORD(STACK[0x6700]);
  v309 = *(_QWORD *)(v304
                   + 8
                   * (((((*(_QWORD *)(v304 + 8 * (v306 % v294)) ^ 0xE1F5893D1EC619BELL) - 0x1952C48362A5E36FLL) ^ ((*(_QWORD *)(v304 + 8 * (v306 % v294)) ^ 0xEAD573EB6888F38BLL) - 0x12723E5514EB095ALL) ^ ((*(_QWORD *)(v304 + 8 * (v306 % v294)) ^ 0x785389A5053D9946) + 0x7F0B3BE486A19C69))
                     - 0x742BC132CB173EF7)
                    % v294));
  LODWORD(STACK[0x6710]) = v262 ^ (2 * LODWORD(STACK[0x6990]));
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x6A70]) ^ (2 * LODWORD(STACK[0x6960]));
  LODWORD(STACK[0x66A8]) = v280 ^ LODWORD(STACK[0x6688]) ^ (4 * v280) ^ LODWORD(STACK[0x6AC0]) ^ (4
                                                                                                * LODWORD(STACK[0x6AC0]));
  LODWORD(STACK[0x66C0]) = v308 ^ (2 * v257);
  v310 = *(_QWORD *)(v304
                   + 8
                   * (((((v309 ^ 0xFD98F9FD9962AA64) + 0x5542BC745BD0F76CLL) ^ ((v309 ^ 0x3142202D3801E0CFLL)
                                                                                - 0x66679A5B054C423FLL) ^ ((v309 ^ 0xBFA9AAA3D21039D8) + 0x1773EF2A10A264D8))
                     + 0x2456C905EA610B84)
                    % v294));
  LODWORD(v310) = ((((v310 ^ 0x8ACD6F922357667ELL) + 0x5AF47FD328041433) ^ ((v310 ^ 0xEAD183F97F12524ALL)
                                                                            + 0x3AE893B874412007) ^ ((v310 ^ 0x136F9F182F364747) - 0x3CA970A6DB9ACAF4))
                 + 0x5CB59CCDB49E96EBLL)
                % v294;
  LODWORD(v309) = LODWORD(STACK[0x6A00]) ^ 0x5C5C5C5C;
  LODWORD(STACK[0x6A70]) = ((((v310 - ((2 * v310) & 0x18180124) - 1408499566) ^ 0xF5DD396) + 1184235778) ^ (((v310 - ((2 * v310) & 0x18180124) - 1408499566) ^ 0x1B01EE7D) + 1388985579) ^ (((v310 - ((2 * v310) & 0x18180124) - 1408499566) ^ 0xB8503D79) - 241438737))
                         - 772441824;
  LODWORD(v304) = STACK[0x69F0];
  LODWORD(STACK[0x6A00]) = (2 * LODWORD(STACK[0x69F0])) & 0x5EE9A1E8;
  LODWORD(STACK[0x69F0]) = v304 - 1351298828;
  LODWORD(STACK[0x69A0]) = v256 + (v290 ^ 0xB2C8E12D) + 1;
  LODWORD(STACK[0x6860]) = v309 ^ LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x68C0]) ^ 0x4C48C2C9;
  HIDWORD(v287) = v289 ^ (v287 >> 27) & 0xFFFFFF1F;
  LODWORD(v287) = HIDWORD(v287);
  LODWORD(STACK[0x6690]) = v287 >> 8;
  LODWORD(v304) = STACK[0x6A90];
  LODWORD(STACK[0x6400]) = LODWORD(STACK[0x6A90]) - 2013054815;
  LODWORD(STACK[0x63F8]) = (2 * v304) & 0x10067142;
  LODWORD(STACK[0x65D8]) = v293 - 512574724;
  LODWORD(STACK[0x6478]) = (2 * v293) & 0xC2E575F8;
  v311 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v253) - 4);
  LODWORD(STACK[0x69E0]) = LODWORD(STACK[0x6870]) >> 1;
  LODWORD(STACK[0x66B8]) = v291;
  LODWORD(STACK[0x6408]) = v291 >> 1;
  v312 = LODWORD(STACK[0x6900]) ^ 0x2C43AE18u;
  LODWORD(STACK[0x63D8]) = v266;
  LODWORD(STACK[0x63D0]) = (v266 >> 1) & 0x4E299547;
  return v311(v312);
}

uint64_t sub_100AA9A0C(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  int v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  int v119;
  unint64_t v120;
  unint64_t v121;
  int v122;
  int v123;
  int v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  int v168;
  int v169;
  int v170;
  _BOOL4 v171;
  int v172;
  unsigned int v173;

  v10 = STACK[0x6A70];
  v11 = STACK[0x6A80];
  v12 = LODWORD(STACK[0x6A70]) < a3;
  v13 = (v4 | ((unint64_t)(v4 < v7) << 32)) + 0x2E647BAAA724A5E7;
  v14 = *(_QWORD *)(STACK[0x6A40] + 8 * v13 - 0x7323DD5592834340);
  v15 = (LODWORD(STACK[0x6A80]) + 545) | 0x2Du;
  STACK[0x6A90] = v15;
  v16 = (((v14 ^ 0x43CBD6EF0327048DLL) + 0x31266B5A036F1936) ^ ((v14 ^ 0xCD355BD3B3AC8283) - 0x402719994C1B60C4) ^ ((v14 ^ (v15 - 0x27201B03C073302)) - 0x709FBC053C4F173ALL))
      * v5
      - 0x7582FC8CB5BDAE75;
  v17 = (v16 ^ 0x5931BCE0A50995E8) & (2 * (v16 & 0x9125C0E0350815E9)) ^ v16 & 0x9125C0E0350815E9;
  v18 = ((2 * (v16 ^ 0x5B703D60AD1994E8)) ^ 0x94ABFB0130230202) & (v16 ^ 0x5B703D60AD1994E8) ^ (2 * (v16 ^ 0x5B703D60AD1994E8)) & 0xCA55FD8098118100;
  v19 = v18 ^ 0x4A54048088108101;
  v20 = (v18 ^ 0x8001010010000000) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x2957F60260460404) & v19 ^ (4 * v19) & 0xCA55FD8098118100;
  v22 = (v21 ^ 0x855F40000000000) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0xC200098098118101)) ^ 0xA55FD80981181010) & (v21 ^ 0xC200098098118101) ^ (16 * (v21 ^ 0xC200098098118101)) & 0xCA55FD8098118100;
  v24 = (v23 ^ 0x8055D80080100000) & (v22 << 8) ^ v22;
  v25 = (((v23 ^ 0x4A00258018018101) << 8) ^ 0x55FD809811810100) & (v23 ^ 0x4A00258018018101) ^ ((v23 ^ 0x4A00258018018101) << 8) & 0xCA55FD8098118100;
  v26 = v24 ^ 0xCA55FD8098118101 ^ (v25 ^ 0x4055808010010000) & (v24 << 16);
  v27 = v16 ^ (2
             * ((v26 << 32) & 0x4A55FD8000000000 ^ v26 ^ ((v26 << 32) ^ 0x1811810100000000) & (((v25 ^ 0x8A007D0088108001) << 16) & 0x4A55FD8000000000 ^ 0x255658000000000 ^ (((v25 ^ 0x8A007D0088108001) << 16) ^ 0x7D80981100000000) & (v25 ^ 0x8A007D0088108001))));
  v28 = v13
      + 0x7038D7D4BA0DE549
      + (((v27 ^ v6 ^ 0x5EE86AB0F78403B2) + 0x373AD2F60091052FLL) ^ ((v27 ^ v6 ^ 0x448FB38452ADE165)
                                                                     + 0x2D5D0BC2A5B8E7FALL) ^ ((v27 ^ v6 ^ 0xFCAE0D5A002F53CLL)
                                                                                              + 0x661858935717F3A1));
  v29 = ((2 * (v28 ^ 0x4AC4D58ACAE0107FLL)) ^ 0x5C4FFEA4D7076150) & (v28 ^ 0x4AC4D58ACAE0107FLL) ^ (2 * (v28 ^ 0x4AC4D58ACAE0107FLL)) & 0xAE27FF526B83B0A8;
  v30 = (v28 ^ 0xC2C2809A886310D7) & (2 * (v28 & 0xE4E32AD8A163A0D7)) ^ v28 & 0xE4E32AD8A163A0D7;
  v31 = ((4 * (v29 ^ 0xA2200152288090A8)) ^ 0xB89FFD49AE0EC2A0) & (v29 ^ 0xA2200152288090A8) ^ (4 * (v29 ^ 0xA2200152288090A8)) & 0xAE27FF526B83B0A8;
  v32 = (v29 ^ 0x405FE0003030000) & (4 * v30) ^ v30;
  v33 = (v31 ^ 0xA807FD402A0280A0) & (16 * v32);
  v34 = ((16 * (v31 ^ 0x620021241813008)) ^ 0xE27FF526B83B0A80) & (v31 ^ 0x620021241813008) ^ (16 * (v31 ^ 0x620021241813008)) & 0xAE27FF526B83B0A0;
  v35 = (v34 ^ 0xA227F50228030000) & ((v33 ^ v32) << 8) ^ v33 ^ v32;
  v36 = (((v34 ^ 0xC000A504380B028) << 8) ^ 0x27FF526B83B0A800) & (v34 ^ 0xC000A504380B028) ^ ((v34 ^ 0xC000A504380B028) << 8) & 0xAE27FF526B83B000;
  v37 = v35 ^ 0xAE27FF526B83B0A8 ^ (v36 ^ 0x2627524203800000) & (v35 << 16);
  v38 = (v28 ^ (2
              * ((v37 << 32) & 0x2E27FF5200000000 ^ v37 ^ ((v37 << 32) ^ 0x6B83B0A800000000) & (((v36 ^ 0x8800AD10680310A8) << 16) & 0x2E27FF5200000000 ^ 0x25945000000000 ^ (((v36 ^ 0x8800AD10680310A8) << 16) ^ 0x7F526B8300000000) & (v36 ^ 0x8800AD10680310A8))))) >> 32;
  v39 = v28
      + 0x19FCC8746D3558DLL
      + (((v38 ^ 0xFE31B604B4E6581ALL) - 0x3C609A4010F626DBLL) ^ ((v38 ^ 0xCD311A9978FE34ADLL) - 0xF6036DDDCEE4A6CLL) ^ ((v38 ^ 0x3300AC9D20B3D8CBLL) + 0xEAE7F267B5C59F6));
  v40 = ((2 * (v39 ^ 0x19B08A3440F92D6CLL)) ^ 0x78480143C76A76D6) & (v39 ^ 0x19B08A3440F92D6CLL) ^ (2 * (v39 ^ 0x19B08A3440F92D6CLL)) & 0xBC2400A1E3B53B6ALL;
  v41 = (v39 ^ 0x11908A1502690566) & (2 * (v39 & 0xA5948A95A34C1607)) ^ v39 & 0xA5948A95A34C1607;
  v42 = ((4 * (v40 ^ 0x842400A020950929)) ^ 0xF09002878ED4EDACLL) & (v40 ^ 0x842400A020950929) ^ (4 * (v40 ^ 0x842400A020950929)) & 0xBC2400A1E3B53B68;
  v43 = (v40 ^ 0x3800000183203000) & (4 * v41) ^ v41;
  v44 = (v42 ^ 0xB000008182942920) & (16 * v43);
  v45 = ((16 * (v42 ^ 0xC24002061211243)) ^ 0xC2400A1E3B53B6B0) & (v42 ^ 0xC24002061211243) ^ (16 * (v42 ^ 0xC24002061211243)) & 0xBC2400A1E3B53B60;
  v46 = (v45 ^ 0x8000000023113200) & ((v44 ^ v43) << 8) ^ v44 ^ v43;
  v47 = (((v45 ^ 0x3C2400A1C0A4094BLL) << 8) ^ 0x2400A1E3B53B6B00) & (v45 ^ 0x3C2400A1C0A4094BLL) ^ ((v45 ^ 0x3C2400A1C0A4094BLL) << 8) & 0xBC2400A1E3B53B00;
  v48 = v46 ^ 0xBC2400A1E3B53B6BLL ^ (v47 ^ 0x240000A1A1310000) & (v46 << 16);
  v49 = v27 ^ 0x984809E569D706E3;
  v50 = (v39 ^ (2
              * ((v48 << 32) & 0x3C2400A100000000 ^ v48 ^ ((v48 << 32) ^ 0x63B53B6B00000000) & (((v47 ^ 0x982400004284106BLL) << 16) & 0x3C2400A100000000 ^ 0x3C04000000000000 ^ (((v47 ^ 0x982400004284106BLL) << 16) ^ 0xA1E3B500000000) & (v47 ^ 0x982400004284106BLL))))) >> 16;
  v51 = v39
      - 0x1CD1B4553C4DEBC2
      + (((v50 ^ 0x43694DE95735CEBFLL) + 0x120BF1B3467BDE42) ^ ((v50 ^ 0xA58D59899960DE0CLL) - 0xB101A2C77D1310DLL) ^ ((v50 ^ 0xE6E489F445C17495) - 0x4879CA51AB709B94));
  v52 = ((2 * (v51 ^ 0x397DFFE0F973387CLL)) ^ 0x90F3C5F97B996918) & (v51 ^ 0x397DFFE0F973387CLL) ^ (2 * (v51 ^ 0x397DFFE0F973387CLL)) & v3;
  v53 = (v51 ^ 0x7975DDD8703F28FCLL) & (2 * (v51 & 0x71041D1C44BF8CF0)) ^ v51 & 0x71041D1C44BF8CF0;
  v54 = ((4 * (v52 ^ 0x4808220484449484)) ^ 0x21E78BF2F732D230) & (v52 ^ 0x4808220484449484) ^ (4 * (v52 ^ 0x4808220484449484)) & v3;
  v55 = (v52 ^ 0x30C0F031882000) & (4 * v53) ^ v53;
  v56 = (v54 ^ 0x6182F0B5009000) & (16 * v55);
  v57 = ((16 * (v54 ^ 0x4818600C08CC248CLL)) ^ 0x879E2FCBDCCB48C0) & (v54 ^ 0x4818600C08CC248CLL) ^ (16 * (v54 ^ 0x4818600C08CC248CLL)) & (v3 - 12);
  v58 = (v57 ^ 0x1822C89CC80000) & ((v56 ^ v55) << 8) ^ v56 ^ v55;
  v59 = (((v57 ^ 0x4861C0342104B40CLL) << 8) ^ 0x79E2FCBDCCB48C00) & (v57 ^ 0x4861C0342104B40CLL) ^ ((v57 ^ 0x4861C0342104B40CLL) << 8) & (v3 - 140);
  v60 = v58 ^ v3 ^ (v59 ^ 0x4860E0BC8C840000) & (v58 << 16);
  v61 = (v51 ^ (2
              * ((v60 << 32) & 0x4879E2FC00000000 ^ v60 ^ ((v60 << 32) ^ 0x3DCCB48C00000000) & (((v59 ^ 0x1902403148308CLL) << 16) & 0x4879E2FC00000000 ^ 0x801423000000000 ^ (((v59 ^ 0x1902403148308CLL) << 16) ^ 0x62FCBDCC00000000) & (v59 ^ 0x1902403148308CLL))))) >> 8;
  v62 = v51
      + (((v61 ^ 0xA90644831A8D9F73) - 0x7BA313ED3D702B7ALL) ^ ((v61 ^ 0xB51F3C1F8706D6E8) - 0x67BA6B71A0FB62E1) ^ ((v61 ^ 0x1CE81E0560B46F7ELL) + 0x31B2B694B8B62489));
  v63 = ((v62 - 928349271) ^ 0x1C83697) & (2 * ((v62 - 928349271) & 0x9592A6A4)) ^ (v62 - 928349271) & 0x9592A6A4;
  LODWORD(v15) = ((2 * ((v62 - 928349271) ^ 0x20CC7AD7)) ^ 0x6ABDB8E6) & ((v62 - 928349271) ^ 0x20CC7AD7) ^ (2 * ((v62 - 928349271) ^ 0x20CC7AD7)) & 0xB55EDC72;
  v64 = v15 ^ 0x95424411;
  LODWORD(v15) = (v15 ^ 0x211CD820) & (4 * v63) ^ v63;
  v65 = ((4 * v64) ^ 0xD57B71CC) & v64 ^ (4 * v64) & 0xB55EDC70;
  v66 = ((16 * (v65 ^ 0x20048C33)) ^ 0x55EDC730) & (v65 ^ 0x20048C33) ^ (16 * (v65 ^ 0x20048C33)) & 0xB55EDC70;
  LODWORD(v15) = (v66 ^ 0x154CC400) & (((v65 ^ 0x955A5050) & (16 * (_DWORD)v15) ^ v15) << 8) ^ (v65 ^ 0x955A5050) & (16 * v15) ^ v15;
  v67 = v62 + 0x48A6223F07658E1ALL;
  v68 = (v67 ^ 0x1F0B3E0D51181617) & (2 * (v67 & 0x1F4BBF4D9592A6A4)) ^ v67 & 0x1F4BBF4D9592A6A4;
  LODWORD(v15) = v15 ^ ((((v66 ^ 0xA0121843) << 8) ^ 0x5EDC0000) & (v66 ^ 0xA0121843) ^ ((v66 ^ 0xA0121843) << 8) & 0xB55EDC00 ^ 0x145C0000) & ((_DWORD)v15 << 16);
  v69 = ((2 * ((v62 + 0x48A6223F07658E1ALL) ^ 0xB8B369E78191B5FLL)) ^ 0x298113A7DB177BF6) & ((v62
                                                                                              + 0x48A6223F07658E1ALL) ^ 0xB8B369E78191B5FLL) ^ (2 * ((v62 + 0x48A6223F07658E1ALL) ^ 0xB8B369E78191B5FLL)) & 0x14C089D3ED8BBDFALL;
  v70 = v69 ^ 0x1440885024888409;
  v71 = (v69 ^ 0x102C80339B8) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0x5302274FB62EF7ECLL) & v70 ^ (4 * v70) & 0x14C089D3ED8BBDF8;
  LODWORD(v70) = (v51
                + (((v61 ^ 0x1A8D9F73) - 1030761338) ^ ((v61 ^ 0x8706D6E8) + 1594137887) ^ ((v61 ^ 0x60B46F7E)
                                                                                          - 1196022647))
                - 928349271) ^ (2 * v15) ^ 0x1A7E804D;
  v73 = ((16 * (v72 ^ 0x4C0889049810813)) ^ 0x4C089D3ED8BBDFB0) & (v72 ^ 0x4C0889049810813) ^ (16 * (v72 ^ 0x4C0889049810813)) & 0x14C089D3ED8BBDF0;
  v74 = (v73 ^ 0x4008912C88B9D00) & (((v72 ^ 0x10000143A40AB5F0) & (16 * v71) ^ v71) << 8) ^ (v72 ^ 0x10000143A40AB5F0) & (16 * v71) ^ v71;
  v75 = (((v73 ^ 0x10C000C12500204BLL) << 8) ^ 0xC089D3ED8BBDFB00) & (v73 ^ 0x10C000C12500204BLL) ^ ((v73 ^ 0x10C000C12500204BLL) << 8) & 0x14C089D3ED8BBD00;
  v76 = v75 ^ 0x14400812640204FBLL;
  v77 = (v75 ^ 0x8081C189890000) & (v74 << 16);
  LODWORD(v75) = (v8 & (4 * v70) ^ 0x4C81181C) - ((2 * (v8 & (4 * v70) ^ 0x4C81181C)) & 0x1DCA5410) - 1091720407;
  v78 = v75 ^ 0x9CECAB21;
  v79 = v67 ^ (2
             * (((v74 ^ 0x14C089D3ED8BBDFBLL ^ v77) << 32) & 0x14C089D300000000 ^ v74 ^ 0x14C089D3ED8BBDFBLL ^ v77 ^ (((v74 ^ 0x14C089D3ED8BBDFBLL ^ v77) << 32) ^ 0x6D8BBDFB00000000) & ((v76 << 16) & 0x14C089D300000000 ^ 0x1400005000000000 ^ ((v76 << 16) ^ 0x9D3ED8B00000000) & v76))) ^ 0x60B7BF46375081A4;
  v80 = v8 & (4 * (v67 ^ (2 * (v74 ^ 0xED8BBDFB ^ v77)) ^ 0x375081A4)) ^ 0xC6A7200C;
  LODWORD(v67) = v75 & 0x63586791 ^ 0x63104492;
  v81 = (v75 ^ 0x9CECAB21) & 0x63586790;
  v82 = v13
      + 0x1062DC2C11C2A8EBLL
      + (((v79 ^ v49 ^ 0x45C7289C23DD84CCLL) - 0x45C7289C23DD84CCLL) ^ ((v79 ^ v49 ^ 0xE93FD6EB59522696)
                                                                      + 0x16C02914A6ADD96ALL) ^ ((v79 ^ v49 ^ 0x7E61CE796FA6EFA4)
                                                                                               - 0x7E61CE796FA6EFA4));
  v83 = ((2 * (v82 ^ 0xA1340484B92AB84DLL)) ^ 0x65CBB967D07909CCLL) & (v82 ^ 0xA1340484B92AB84DLL) ^ (2 * (v82 ^ 0xA1340484B92AB84DLL)) & 0x32E5DCB3E83C84E6;
  v84 = (v82 ^ 0x839594A61906B80BLL) & (2 * (v82 & 0x93D1D83751163CABLL)) ^ v82 & 0x93D1D83751163CABLL;
  v85 = ((4 * (v83 ^ 0x1224449028048422)) ^ 0xCB9772CFA0F21398) & (v83 ^ 0x1224449028048422) ^ (4 * (v83 ^ 0x1224449028048422)) & 0x32E5DCB3E83C84E4;
  v86 = (v83 ^ 0xC18023C03800C4) & (4 * v84) ^ v84;
  v87 = (v85 ^ 0x2855083A0300080) & (16 * v86);
  v88 = ((16 * (v85 ^ 0x30608C30480C8466)) ^ 0x2E5DCB3E83C84E60) & (v85 ^ 0x30608C30480C8466) ^ (16 * (v85 ^ 0x30608C30480C8466)) & 0x32E5DCB3E83C84E0;
  v89 = (v88 ^ 0x2245C83280080400) & ((v87 ^ v86) << 8) ^ v87 ^ v86;
  v90 = (((v88 ^ 0x10A0148168348086) << 8) ^ 0xE5DCB3E83C84E600) & (v88 ^ 0x10A0148168348086) ^ ((v88 ^ 0x10A0148168348086) << 8) & 0x32E5DCB3E83C8400;
  v91 = v89 ^ 0x32E5DCB3E83C84E6 ^ (v90 ^ 0x20C490A028040000) & (v89 << 16);
  v92 = v82 ^ (2
             * ((v91 << 32) & 0x32E5DCB300000000 ^ v91 ^ ((v91 << 32) ^ 0x683C84E600000000) & (((v90 ^ 0x12214C13C03800E6) << 16) & 0x32E5DCB300000000 ^ 0x2244148300000000 ^ (((v90 ^ 0x12214C13C03800E6) << 16) ^ 0x5CB3E83C00000000) & (v90 ^ 0x12214C13C03800E6))));
  v93 = v67 + v78;
  v94 = v92 & 0xE92E47A04D6716B5 ^ 0xC00E472045270495 ^ (HIDWORD(v92) ^ 0xE92E47A0FB347EA1) & (v92 ^ 0xB083F857816F3567);
  v95 = 2 * ((v94 | 0x26B2E0B8D460C17BLL) - (v94 | 0x594D1F472B9F3E84)) - 0x4D65C171A8C182F8;
  v96 = (((HIDWORD(v92) ^ v92 ^ 0x81D8582C8589A8CCLL) + 0x4CE85BD08663272BLL) ^ ((HIDWORD(v92) ^ v92 ^ 0xE3C715C59613CEA5)
                                                                               + 0x2EF7163995F94144) ^ ((HIDWORD(v92) ^ v92 ^ 0xD44C25FD24A63B1ALL) + 0x197C2601274CB4FDLL))
      - 0x5C32FE0DAABDEA14
      + (((v95 ^ 0x25859DA1F6E09141) - 0x7D313178B226902) ^ ((v95 ^ 0x360FE17A4E600DEDLL) - 0x14596FCC33A2F5AELL) ^ ((v95 ^ 0x9EF7B3EA98C13F3ALL) + 0x435EC2A31AFC3887));
  v97 = ((2 * (v96 ^ 0xC1FAFD9102E7A77CLL)) ^ 0x9C005C7BA31BA85ELL) & (v96 ^ 0xC1FAFD9102E7A77CLL) ^ (2 * (v96 ^ 0xC1FAFD9102E7A77CLL)) & (v9 + 46);
  v98 = (v96 ^ 0xCFFADB888263635ALL) & (2 * (v96 & 0x8FFAD3ACD36A7353)) ^ v96 & 0x8FFAD3ACD36A7353;
  v99 = v97 ^ 0x4200220450845421;
  v100 = (v97 ^ 0xC000C318109800CLL) & (4 * v98) ^ v98;
  v101 = ((4 * v99) ^ 0x3800B8F7463750BCLL) & v99 ^ (4 * v99) & (v9 + 44);
  v102 = (v101 ^ 0x800283540055020) & (16 * v100) ^ v100;
  v103 = ((16 * (v101 ^ 0x4600060891888403)) ^ 0xE002E3DD18DD42F0) & (v101 ^ 0x4600060891888403) ^ (16 * (v101 ^ 0x4600060891888403)) & (v9 + 32);
  v104 = (v103 ^ 0x4000221D108D4000) & (v102 << 8) ^ v102;
  v105 = (((v103 ^ 0xE000C20C100940FLL) << 8) ^ 0x2E3DD18DD42F00) & (v103 ^ 0xE000C20C100940FLL) ^ ((v103 ^ 0xE000C20C100940FLL) << 8) & v9;
  v106 = v104 ^ (v9 + 47) ^ (v105 ^ 0x2C1181840000) & (v104 << 16);
  v107 = v93 - v81;
  v108 = (v96 ^ (2
               * ((v106 << 32) & 0x4E002E3D00000000 ^ v106 ^ ((v106 << 32) ^ 0x518DD42F00000000) & (((v105 ^ 0x4E00022C5009D02FLL) << 16) & 0x4E002E3D00000000 ^ 0x40002E3000000000 ^ (((v105 ^ 0x4E00022C5009D02FLL) << 16) ^ 0x2E3DD18D00000000) & (v105 ^ 0x4E00022C5009D02FLL))))) >> 16;
  v109 = v96
       - 0x3BF5D705ABCA84E1
       + (((v108 ^ 0x472049FF01DFFE61) - 0x3259C355DC5D6DC7) ^ ((v108 ^ 0x411E59919590FB6) - 0x71686F33C4DB9C10) ^ ((v108 ^ 0x43313F9C9F0B81A6) - 0x3648B53642891200));
  v110 = ((2 * (v109 ^ 0x70C43A04EEBDBF5DLL)) ^ 0x635BFC0C6FF2C6ACLL) & (v109 ^ 0x70C43A04EEBDBF5DLL) ^ (2 * (v109 ^ 0x70C43A04EEBDBF5DLL)) & 0x31ADFE0637F96356;
  v111 = (v109 ^ 0x7045B200DC349F4BLL) & (2 * (v109 & 0x4169C402D944DC0BLL)) ^ v109 & 0x4169C402D944DC0BLL;
  v112 = v110 ^ 0x10A4020210092152;
  v113 = (v110 ^ 0x109300427304004) & (4 * v111) ^ v111;
  v114 = ((4 * v112) ^ 0xC6B7F818DFE58D58) & v112 ^ (4 * v112) & 0x31ADFE0637F96354;
  v115 = (v114 ^ 0xA5F80017E10150) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x3108060620186206)) ^ 0x1ADFE0637F963560) & (v114 ^ 0x3108060620186206) ^ (16 * (v114 ^ 0x3108060620186206)) & 0x31ADFE0637F96350;
  v117 = (v116 ^ 0x108DE00237902100) & (v115 << 8) ^ v115;
  v118 = (((v116 ^ 0x21201E0400694216) << 8) ^ 0xADFE0637F9635600) & (v116 ^ 0x21201E0400694216) ^ ((v116 ^ 0x21201E0400694216) << 8) & 0x31ADFE0637F96300;
  v119 = v107 ^ v70;
  v120 = (v109 ^ (2
                * (((v117 ^ 0x31ADFE0637F96356 ^ (v118 ^ 0x21AC060631610000) & (v117 << 16)) << 32) & 0x31ADFE0600000000 ^ v117 ^ 0x31ADFE0637F96356 ^ (v118 ^ 0x21AC060631610000) & (v117 << 16) ^ (((v117 ^ 0x31ADFE0637F96356 ^ (v118 ^ 0x21AC060631610000) & (v117 << 16)) << 32) ^ 0x37F9635600000000) & (((v118 ^ 0x1001F80006982156) << 16) & 0x31ADFE0600000000 ^ 0x1A9C80600000000 ^ (((v118 ^ 0x1001F80006982156) << 16) ^ 0x7E0637F900000000) & (v118 ^ 0x1001F80006982156))))) >> 8;
  v121 = v109
       + (((v120 ^ 0xD6FACC571A00852) - 0x607F3B24DD38EA82) ^ ((v120 ^ 0x99B523EDDFD04B8ALL) + 0xB5A4BF38CB756A6) ^ ((v120 ^ 0x949BEFD4ACC6F5C2) + 0x67487CAFFA1E8EELL));
  v122 = ((v121 + 1615426720) ^ 0x51E2A487) & (2 * ((v121 + 1615426720) & 0x65E4C6A6)) ^ (v121 + 1615426720) & 0x65E4C6A6;
  LODWORD(v76) = ((2 * ((v121 + 1615426720) ^ 0x13E225C7)) ^ 0xEC0DC6C2) & ((v121 + 1615426720) ^ 0x13E225C7) ^ (2 * ((v121 + 1615426720) ^ 0x13E225C7)) & 0x7606E360;
  LODWORD(v109) = v76 ^ 0x12022121;
  LODWORD(v76) = (v76 ^ 0x24040200) & (4 * v122) ^ v122;
  v123 = ((4 * v109) ^ 0xD81B8D84) & v109 ^ (4 * v109) & 0x7606E360;
  LODWORD(v76) = (v123 ^ 0x50028100) & (16 * v76) ^ v76;
  v124 = ((16 * (v123 ^ 0x26046261)) ^ 0x606E3610) & (v123 ^ 0x26046261) ^ (16 * (v123 ^ 0x26046261)) & 0x7606E360;
  LODWORD(v118) = (v124 ^ 0x60062200) & ((_DWORD)v76 << 8) ^ v76 ^ ((((v124 ^ 0x1600C161) << 8) ^ 0x6E30000) & (v124 ^ 0x1600C161) ^ ((v124 ^ 0x1600C161) << 8) & 0x7606E300 ^ 0x6020000) & (((v124 ^ 0x60062200) & ((_DWORD)v76 << 8) ^ v76) << 16);
  v125 = v121 + 0x480304659F047F11;
  v126 = ((v121 + 0x480304659F047F11) ^ 0x8312643A71C0E406) & (2
                                                                 * ((v121 + 0x480304659F047F11) & 0x8B52493365E4C6A6)) ^ (v121 + 0x480304659F047F11) & 0x8B52493365E4C6A6;
  v127 = ((2 * ((v121 + 0x480304659F047F11) ^ 0x9312767E3948E506)) ^ 0x30807E9AB9584740) & ((v121
                                                                                                 + 0x480304659F047F11) ^ 0x9312767E3948E506) ^ (2 * ((v121 + 0x480304659F047F11) ^ 0x9312767E3948E506)) & 0x18403F4D5CAC23A0;
  v128 = (v127 ^ 0x10002C0858000300) & (4 * v126) ^ v126;
  v129 = ((4 * (v127 ^ 0x840014544A420A0)) ^ 0x6100FD3572B08E80) & (v127 ^ 0x840014544A420A0) ^ (4 * (v127 ^ 0x840014544A420A0)) & 0x18403F4D5CAC23A0;
  v130 = (v129 ^ 0x3D0550A00280) & (16 * v128) ^ v128;
  v131 = ((16 * (v129 ^ 0x184002480C0C2120)) ^ 0x8403F4D5CAC23A00) & (v129 ^ 0x184002480C0C2120) ^ (16 * (v129 ^ 0x184002480C0C2120)) & 0x18403F4D5CAC23A0;
  v132 = v8 & (4 * ((v121 + 1615426720) ^ (2 * v118) ^ 0x9D9C6511)) ^ (v121 + 1615426720) ^ (2 * v118) ^ 0x9D9C6511;
  v133 = (((v131 ^ 0x18400B08142C01A0) << 8) ^ 0x403F4D5CAC23A000) & (v131 ^ 0x18400B08142C01A0) ^ ((v131 ^ 0x18400B08142C01A0) << 8) & 0x18403F4D5CAC2300;
  v134 = (v131 ^ 0x344548802200) & (v130 << 8) ^ v130 ^ 0x18403F4D5CAC23A0 ^ (v133 ^ 0xD4C0C200000) & (((v131 ^ 0x344548802200) & (v130 << 8) ^ v130) << 16);
  v135 = v125 ^ (2
               * ((v134 << 32) & 0x18403F4D00000000 ^ v134 ^ ((v134 << 32) ^ 0x5CAC23A000000000) & (((v133 ^ 0x18403201508C03A0) << 16) & 0x18403F4D00000000 ^ 0x234100000000 ^ (((v133 ^ 0x18403201508C03A0) << 16) ^ 0x3F4D5CAC00000000) & (v133 ^ 0x18403201508C03A0)))) ^ 0xAE4B427A94B142E3;
  LODWORD(v134) = v8 & (4 * (v125 ^ (2 * v134) ^ 0x94B142E3)) ^ 0x86C70E1C;
  v136 = ((2 * v134) | 0x14B6A9F8) - v134;
  v137 = v13
       - 0x24B9693E3D1D38F1
       + (((v135 ^ v49 ^ 0x92E00027BD2C9372) + 0x6D1FFFD842D36C8ELL) ^ ((v135 ^ v49 ^ 0x14C8E3DDB59A7CC1)
                                                                        - 0x14C8E3DDB59A7CC1) ^ ((v135 ^ v49 ^ 0x2E54E02D2C473DBELL)
                                                                                                 - 0x2E54E02D2C473DBELL));
  v138 = ((2 * (v137 ^ 0x2ED16B4A953BCF35)) ^ 0x60033440750ADB46) & (v137 ^ 0x2ED16B4A953BCF35) ^ (2 * (v137 ^ 0x2ED16B4A953BCF35)) & 0xB0019A203A856DA2;
  v139 = (v137 ^ 0x1ED0E94A8F3E8A15) & (2 * (v137 & 0x9ED0F16AAFBEA296)) ^ v137 & 0x9ED0F16AAFBEA296;
  v140 = ((4 * (v138 ^ 0x90008A200A8524A1)) ^ 0xC0066880EA15B68CLL) & (v138 ^ 0x90008A200A8524A1) ^ (4 * (v138 ^ 0x90008A200A8524A1)) & 0xB0019A203A856DA0;
  v141 = (v138 ^ 0x2001000030000800) & (4 * v139) ^ v139;
  v142 = (v140 ^ 0x800008002A052480) & (16 * v141);
  v143 = ((16 * (v140 ^ 0x3001922010804923)) ^ 0x19A203A856DA30) & (v140 ^ 0x3001922010804923) ^ (16 * (v140 ^ 0x3001922010804923)) & 0xB0019A203A856DA0;
  v144 = (v143 ^ 0x1820028044800) & ((v142 ^ v141) << 8) ^ v142 ^ v141;
  v145 = (((v143 ^ 0xB000182012812583) << 8) ^ 0x19A203A856DA300) & (v143 ^ 0xB000182012812583) ^ ((v143 ^ 0xB000182012812583) << 8) & 0xB0019A203A856D00;
  v146 = v144 ^ 0xB0019A203A856DA3 ^ (v145 ^ 0x2000050000) & (v144 << 16);
  v147 = (v137 ^ (2
                * ((v146 << 32) & 0x30019A2000000000 ^ v146 ^ ((v146 << 32) ^ 0x3A856DA300000000) & (((v145 ^ 0xB0019A003A804CA3) << 16) & 0x30019A2000000000 ^ 0x2001802000000000 ^ (((v145 ^ 0xB0019A003A804CA3) << 16) ^ 0x1A203A8500000000) & (v145 ^ 0xB0019A003A804CA3))))) >> 32;
  v148 = v137
       + 0x7AB48B78F9358A0ELL
       + (((v147 ^ 0xFA34EF1814BF63DCLL) + 0x7D13B9D34536F752) ^ ((v147 ^ 0xFD197E51543E62D4) + 0x7A3E289A05B7F65ALL) ^ ((v147 ^ 0x72D9149DE50D462) - 0x7FF5387D7026BF10));
  v149 = (v148 ^ 0x1CE52FA5C634949DLL) & (2 * (v148 & 0x9CF50F25E730D6A0)) ^ v148 & 0x9CF50F25E730D6A0;
  v150 = ((2 * (v148 ^ 0x154F37A506749D9DLL)) ^ 0x13747101C288967ALL) & (v148 ^ 0x154F37A506749D9DLL) ^ (2 * (v148 ^ 0x154F37A506749D9DLL)) & 0x89BA3880E1444B3CLL;
  v151 = v150 ^ 0x888A088021444905;
  v152 = (v150 ^ 0x130300080000200) & (4 * v149) ^ v149;
  v153 = ((4 * v151) ^ 0x26E8E20385112CF4) & v151 ^ (4 * v151) & 0x89BA3880E1444B3CLL;
  v154 = ((16 * (v153 ^ 0x8912188060444309)) ^ 0x9BA3880E1444B3D0) & (v153 ^ 0x8912188060444309) ^ (16 * (v153 ^ 0x8912188060444309)) & 0x89BA3880E1444B30;
  v155 = (v154 ^ 0x89A2080000440300) & (((v153 ^ 0xA8200081000820) & (16 * v152) ^ v152) << 8) ^ (v153 ^ 0xA8200081000820) & (16 * v152) ^ v152;
  v156 = (((v154 ^ 0x183080E100482DLL) << 8) ^ 0xBA3880E1444B3D00) & (v154 ^ 0x183080E100482DLL) ^ ((v154 ^ 0x183080E100482DLL) << 8) & 0x89BA3880E1444B00;
  v157 = v155 ^ 0x89BA3880E1444B3DLL ^ (v156 ^ 0x8838008040400000) & (v155 << 16);
  v158 = (v148 ^ (2
                * ((v157 << 32) & 0x9BA388000000000 ^ v157 ^ ((v157 << 32) ^ 0x61444B3D00000000) & (((v156 ^ 0x1823800A104423DLL) << 16) & 0x9BA388000000000 ^ 0x13A188000000000 ^ (((v156 ^ 0x1823800A104423DLL) << 16) ^ 0x3880E14400000000) & (v156 ^ 0x1823800A104423DLL))))) >> 16;
  v159 = v148
       + 0x69E9D0525EC0A0F4
       + (((v158 ^ 0x471D58E357A81749) - 0x539E73E4CAA9A9D6) ^ ((v158 ^ 0x25ED887724733B45) - 0x316EA370B97285DALL) ^ ((v158 ^ 0x62F05D151DFF09B4) - 0x7673761280FEB72BLL));
  v160 = ((2 * (v159 ^ 0x76579F87EE2C7837)) ^ 0x63B2F5BB2B7351C8) & (v159 ^ 0x76579F87EE2C7837) ^ (2 * (v159 ^ 0x76579F87EE2C7837)) & 0x31D97ADD95B9A8E4;
  v161 = (v159 ^ 0x774ED5137B05D893) & (2 * (v159 & 0x478EE55A7B95D0D3)) ^ v159 & 0x478EE55A7B95D0D3;
  v162 = ((4 * (v160 ^ 0x10490A449488A824)) ^ 0xC765EB7656E6A390) & (v160 ^ 0x10490A449488A824) ^ (4 * (v160 ^ 0x10490A449488A824)) & 0x31D97ADD95B9A8E4;
  v163 = (v162 ^ 0x1416A5414A0A080) & (16 * ((v160 ^ 0x20103099003100C0) & (4 * v161) ^ v161)) ^ (v160 ^ 0x20103099003100C0) & (4 * v161) ^ v161;
  v164 = ((16 * (v162 ^ 0x3098108981190864)) ^ 0x1D97ADD95B9A8E40) & (v162 ^ 0x3098108981190864) ^ (16 * (v162 ^ 0x3098108981190864)) & 0x31D97ADD95B9A8E0;
  v165 = (v164 ^ 0x119128D911988800) & (v163 << 8) ^ v163;
  v166 = (((v164 ^ 0x20485204842120A4) << 8) ^ 0xD97ADD95B9A8E400) & (v164 ^ 0x20485204842120A4) ^ ((v164 ^ 0x20485204842120A4) << 8) & 0x31D97ADD95B9A800;
  v167 = (v159 ^ (2
                * (((v165 ^ 0x31D97ADD95B9A8E4 ^ (v166 ^ 0x1158589591A80000) & (v165 << 16)) << 32) & 0x31D97ADD00000000 ^ v165 ^ 0x31D97ADD95B9A8E4 ^ (v166 ^ 0x1158589591A80000) & (v165 << 16) ^ (((v165 ^ 0x31D97ADD95B9A8E4 ^ (v166 ^ 0x1158589591A80000) & (v165 << 16)) << 32) ^ 0x15B9A8E400000000) & (((v166 ^ 0x20812248041108E4) << 16) & 0x31D97ADD00000000 ^ 0x1006A4400000000 ^ (((v166 ^ 0x20812248041108E4) << 16) ^ 0x7ADD95B900000000) & (v166 ^ 0x20812248041108E4))))) >> 8;
  LODWORD(v125) = v159
                + 1282398893
                + (((v167 ^ 0x8B964641) + 1811238116) ^ ((v167 ^ 0x20F84189) - 1063564500) ^ ((v167 ^ 0xC23EE149)
                                                                                            + 576580588));
  LODWORD(v167) = ((2 * (v125 ^ 0x4CA10964)) ^ 0xD2A606CC) & (v125 ^ 0x4CA10964) ^ (2 * (v125 ^ 0x4CA10964)) & 0xE9530366;
  LODWORD(v166) = (v125 ^ 0x5E10960) & (2 * (v125 & 0xA5F20A02)) ^ v125 & 0xA5F20A02;
  LODWORD(v162) = v167 ^ 0x29510122;
  LODWORD(v167) = (v167 ^ 0x80000000) & (4 * v166) ^ v166;
  LODWORD(v166) = ((4 * v162) ^ 0xA54C0D98) & v162 ^ (4 * v162) & 0xE9530364;
  LODWORD(v167) = (v166 ^ 0xA1400100) & (16 * v167) ^ v167;
  LODWORD(v166) = ((16 * (v166 ^ 0x48130266)) ^ 0x95303660) & (v166 ^ 0x48130266) ^ (16 * (v166 ^ 0x48130266)) & 0xE9530360;
  v168 = (((v136 - 173757692) ^ 0xEABD775) - ((2 * ((v136 - 173757692) ^ 0xEABD775)) & 0xF76908D4) + 2075427946) ^ v135;
  v169 = v125 ^ (2
               * ((v166 ^ 0x81100200) & ((_DWORD)v167 << 8) ^ v167 ^ 0xE9530366 ^ ((((v166 ^ 0x68430106) << 8) ^ 0x53036600) & (v166 ^ 0x68430106) ^ ((v166 ^ 0x68430106) << 8) & 0xE9530300 ^ 0x41030000) & (((v166 ^ 0x81100200) & ((_DWORD)v167 << 8) ^ v167) << 16)));
  LODWORD(v125) = (((v169 ^ 0x7662DBCB) + 270507428) ^ ((v169 ^ 0x91604C24) - 149091763) ^ ((v169 ^ 0x90569B21)
                                                                                          - 164897462))
                + 1503472428;
  LODWORD(v131) = (v125 ^ 0x8BE2161F) & (2 * (v125 & 0xD3F4949E)) ^ v125 & 0xD3F4949E;
  LODWORD(v166) = ((2 * (v125 ^ 0x98A3F3B)) ^ 0xB4FD574A) & (v125 ^ 0x98A3F3B) ^ (2 * (v125 ^ 0x98A3F3B)) & 0xDA7EABA4;
  LODWORD(v162) = ((4 * (v166 ^ 0x4A02A8A5)) ^ 0x69FAAE94) & (v166 ^ 0x4A02A8A5) ^ (4 * (v166 ^ 0x4A02A8A5)) & 0xDA7EABA4;
  LODWORD(v166) = (v162 ^ 0x487AAA80) & (16 * ((v166 ^ 0x90740200) & (4 * v131) ^ v131)) ^ (v166 ^ 0x90740200) & (4 * v131) ^ v131;
  LODWORD(v162) = ((16 * (v162 ^ 0x92040121)) ^ 0xA7EABA50) & (v162 ^ 0x92040121) ^ (16 * (v162 ^ 0x92040121)) & 0xDA7EABA0;
  v170 = v125 ^ (2
               * ((v162 ^ 0x826AAA00) & ((_DWORD)v166 << 8) ^ v166 ^ ((((v162 ^ 0x581401A5) << 8) ^ 0x7EAB0000) & (v162 ^ 0x581401A5) ^ ((v162 ^ 0x581401A5) << 8) & 0xDA7EAB00 ^ 0x5A2A0000) & (((v162 ^ 0x826AAA00) & ((_DWORD)v166 << 8) ^ v166) << 16)));
  v171 = v4 - 1399748442 < v10;
  if (v12 != v4 - 1399748442 < 0xB7BD4B26)
    v171 = v12;
  v172 = (((v169 ^ 0x48EAB4D7) + 781710016) ^ ((v169 ^ 0x1F4DF9E6) + 2033237903) ^ ((v169 ^ 0x20F341FF) + 1183713176))
       + 1816971835;
  v173 = (((2 * (v8 & (4 * v172) ^ 0x82A10408)) | 0xF3B452C2) - (v8 & (4 * v172) ^ 0x82A10408) - 2044340577) ^ 0x5BFB2C41;
  LODWORD(STACK[0x6AC0]) ^= v79 ^ (((2 * v80) | 0xFF37D78C) - v80 + 6558778) ^ v168 ^ 0xD282D1C2 ^ (((2 * v173) & 0x75F09938)
                                                                                                  - v173
                                                                                                  + 1158132576) ^ v172;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31226 * !v171) ^ v11)) - 4))(a1 ^ 0x381CF88B ^ v119 ^ v132 ^ ((v8 & (4 * (v170 ^ 0xCBE34100)) ^ 0x9267064B) - ((2 * (v8 & (4 * (v170 ^ 0xCBE34100)) ^ 0x9267064B)) & 0x8C4A240E) + 1176884103) ^ v170 ^ 0xCBE34100);
}

uint64_t sub_100AAC968()
{
  unsigned int v0;

  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6890]) ^ 0x90;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x6950]) ^ 0x627F781C;
  LODWORD(STACK[0x6990]) = LODWORD(STACK[0x6A10]) >> 1;
  v0 = LODWORD(STACK[0x66A0]) ^ 0x84298F51;
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x6A20]) ^ (-832726329 * LODWORD(STACK[0x6A30]));
  LODWORD(STACK[0x66A0]) = -LODWORD(STACK[0x6980]);
  LODWORD(STACK[0x6690]) ^= LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x67C0]) = LODWORD(STACK[0x66B8]) ^ 0x866E9F65 ^ STACK[0x6408] & 0x4E299547;
  LODWORD(STACK[0x63C8]) = LODWORD(STACK[0x65D8]) - LODWORD(STACK[0x6478]);
  LODWORD(STACK[0x65F0]) += v0;
  LODWORD(STACK[0x6980]) = 267252361 * LODWORD(STACK[0x65E8]);
  LODWORD(STACK[0x6408]) = LODWORD(STACK[0x66C0]) ^ 0xF6CE1483;
  STACK[0x6A20] = STACK[0xDAA0];
  LODWORD(STACK[0x6A70]) = (((LODWORD(STACK[0x6920]) ^ 0xBDB8E300) + 317024179) ^ ((LODWORD(STACK[0x6920]) ^ 0xB1E589AC)
                                                                                 + 515378463) ^ ((LODWORD(STACK[0x6920]) ^ 0xC241A75)
                                                                                               - 1552310584))
                         + 1208287890;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A90]) - 8))();
}

uint64_t sub_100AACBD4(int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  int v158;
  int v159;
  int v160;
  int v161;
  uint64_t (*v162)(_QWORD);

  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6A70]) < v1;
  v7 = v5 < v4;
  v8 = STACK[0x6A90] + 4608;
  v9 = *(_QWORD *)(STACK[0x6A20] + 8 * ((v5 | (unint64_t)(v7 << 32)) + 0x20C5C039F0439B8FLL) - 0x62E01CFDB7AF080);
  STACK[0x6A80] = v8;
  v10 = (((v9 ^ 0xD153F4F00EF5E0D6) - 0x39B49D8DFDCFDD48) ^ ((v9 ^ 0xC2A137B727E01FE1)
                                                               + (v8 ^ 0xD5B9A1352B25E7FELL)) ^ ((v9 ^ 0x6081B0345A668C44)
                                                                                               + 0x779926B656A34E26))
      * v2
      + 0x62B51ED241E4C204;
  v11 = (v10 ^ 0xE93A2144FC18E17CLL) & (2 * (v10 & 0xED42A184FD5A8479)) ^ v10 & 0xED42A184FD5A8479;
  v12 = ((2 * (v10 ^ 0xE13A224456ADE91ELL)) ^ 0x18F1078157EEDACELL) & (v10 ^ 0xE13A224456ADE91ELL) ^ (2 * (v10 ^ 0xE13A224456ADE91ELL)) & 0xC7883C0ABF76D66;
  v13 = v12 ^ 0x4088040A8112521;
  v14 = (v12 ^ 0x810020003E60044) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x31E20F02AFDDB59CLL) & v13 ^ (4 * v13) & 0xC7883C0ABF76D64;
  v16 = (v15 ^ 0x600300ABD52500) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0xC1880C000224863)) ^ 0xC7883C0ABF76D670) & (v15 ^ 0xC1880C000224863) ^ (16 * (v15 ^ 0xC1880C000224863)) & 0xC7883C0ABF76D60;
  v18 = (v17 ^ 0x4080000AB764400) & (v16 << 8) ^ v16;
  v19 = (((v17 ^ 0x87083C000812907) << 8) ^ 0x7883C0ABF76D6700) & (v17 ^ 0x87083C000812907) ^ ((v17 ^ 0x87083C000812907) << 8) & 0xC7883C0ABF76D00;
  v20 = v10 ^ (2
             * (((v18 ^ 0xC7883C0ABF76D67 ^ (v19 ^ 0x8008080A3650000) & (v18 << 16)) << 32) & 0xC7883C000000000 ^ v18 ^ 0xC7883C0ABF76D67 ^ (v19 ^ 0x8008080A3650000) & (v18 << 16) ^ (((v18 ^ 0xC7883C0ABF76D67 ^ (v19 ^ 0x8008080A3650000) & (v18 << 16)) << 32) ^ 0x2BF76D6700000000) & (((v19 ^ 0x478034008920867) << 16) & 0xC7883C000000000 ^ 0xC38000000000000 ^ (((v19 ^ 0x478034008920867) << 16) ^ 0x3C0ABF700000000) & (v19 ^ 0x478034008920867))));
  v21 = (v5 | (unint64_t)(v7 << 32))
      + 0x37F8B833E51A8C37
      + (((v20 ^ v3 ^ 0xB69C6FC8B797F35CLL) + 0x51DB41A61F1066F9) ^ ((v20 ^ v3 ^ 0x2591893679B042DELL)
                                                                     - 0x3D2958A72EC82885) ^ ((v20 ^ v3 ^ 0x765E427B6493EF35)
                                                                                              - 0x6EE693EA33EB856ELL));
  v22 = ((2 * (v21 ^ 0xC268254E267ED99BLL)) ^ 0xF35335E57F67F5ELL) & (v21 ^ 0xC268254E267ED99BLL) ^ (2 * (v21 ^ 0xC268254E267ED99BLL)) & 0x79A99AF2BFB3FAELL;
  v23 = (v21 ^ 0xC1E83CCC2D75D5B3) & (2 * (v21 & 0xC5F2BCE10D85E634)) ^ v21 & 0xC5F2BCE10D85E634;
  v24 = v22 ^ 0x8A88A1280900A1;
  v25 = (v22 ^ 0x710110C02323900) & (4 * v23) ^ v23;
  v26 = ((4 * v24) ^ 0x1E6A66BCAFECFEBCLL) & v24 ^ (4 * v24) & 0x79A99AF2BFB3FACLL;
  v27 = (v26 ^ 0x60A00AC2BE83EA0) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x190990300130103)) ^ 0x79A99AF2BFB3FAF0) & (v26 ^ 0x190990300130103) ^ (16 * (v26 ^ 0x190990300130103)) & 0x79A99AF2BFB3FA0;
  v29 = (v28 ^ 0x18898A22BB33A00) & (v27 << 8) ^ v27;
  v30 = (((v28 ^ 0x612010D0048050FLL) << 8) ^ 0x9A99AF2BFB3FAF00) & (v28 ^ 0x612010D0048050FLL) ^ ((v28 ^ 0x612010D0048050FLL) << 8) & 0x79A99AF2BFB3F00;
  v31 = v29 ^ 0x79A99AF2BFB3FAFLL ^ (v30 ^ 0x298892B2B3B0000) & (v29 << 16);
  v32 = (v21 ^ (2
              * ((v31 << 32) & 0x79A99AF00000000 ^ v31 ^ ((v31 << 32) ^ 0x2BFB3FAF00000000) & (((v30 ^ 0x502108400C010AFLL) << 16) & 0x79A99AF00000000 ^ 0x610900400000000 ^ (((v30 ^ 0x502108400C010AFLL) << 16) ^ 0x19AF2BFB00000000) & (v30 ^ 0x502108400C010AFLL))))) >> 32;
  v33 = v21
      - 0x564BD4A8EA626802
      + (((v32 ^ 0x2EDA74CD093D0132) - 0x76791C188C98634) ^ ((v32 ^ 0x54A4C7F37E5F09A9) - 0x7D1922FFFFAB8EAFLL) ^ ((v32 ^ 0x7A7EB33EBA91B47ALL) - 0x53C356323B65337CLL));
  v34 = ((2 * (v33 ^ 0xFCE0A8C50CF63EA9)) ^ 0x7239BCA69E336968) & (v33 ^ 0xFCE0A8C50CF63EA9) ^ (2 * (v33 ^ 0xFCE0A8C50CF63EA9)) & 0xB91CDE534F19B4B4;
  v35 = (v33 ^ 0x75F864C50BEF2A99) & (2 * (v33 & 0x45FC769643EF8A1DLL)) ^ v33 & 0x45FC769643EF8A1DLL;
  v36 = ((4 * (v34 ^ 0x8904425141089494)) ^ 0xE473794D3C66D2D0) & (v34 ^ 0x8904425141089494) ^ (4 * (v34 ^ 0x8904425141089494)) & 0xB91CDE534F19B4B4;
  v37 = (v34 ^ 0x30109C020E102020) & (4 * v35) ^ v35;
  v38 = (v36 ^ 0xA01058410C009090) & (16 * v37);
  v39 = ((16 * (v36 ^ 0x190C861243192424)) ^ 0x91CDE534F19B4B40) & (v36 ^ 0x190C861243192424) ^ (16 * (v36 ^ 0x190C861243192424)) & 0xB91CDE534F19B4B0;
  v40 = (v39 ^ 0x910CC41041190000) & ((v38 ^ v37) << 8) ^ v38 ^ v37;
  v41 = (((v39 ^ 0x28101A430E00B4B4) << 8) ^ 0x1CDE534F19B4B400) & (v39 ^ 0x28101A430E00B4B4) ^ ((v39 ^ 0x28101A430E00B4B4) << 8) & 0xB91CDE534F19B400;
  v42 = v40 ^ 0xB91CDE534F19B4B4 ^ (v41 ^ 0x181C524309100000) & (v40 << 16);
  v43 = v33 ^ (2
             * ((v42 << 32) & 0x391CDE5300000000 ^ v42 ^ ((v42 << 32) ^ 0x4F19B4B400000000) & (((v41 ^ 0xA1008C10460900B4) << 16) & 0x391CDE5300000000 ^ 0x210C904200000000 ^ (((v41 ^ 0xA1008C10460900B4) << 16) ^ 0x5E534F1900000000) & (v41 ^ 0xA1008C10460900B4))));
  v44 = v33
      + 0x9840FBB878D89DFLL
      + ((((v43 >> 16) ^ 0x9EE33E97831353AFLL) - 0x3397E95D98B75975) ^ (((v43 >> 16) ^ 0xD074D3EEC6612838)
                                                                        - 0x7D000424DDC522E2) ^ (((v43 >> 16) ^ 0x4E97C88DA762A64BLL)
                                                                                                 + 0x1C1CE0B84339536FLL));
  v45 = (v44 ^ 0xC1CD109D37469601) & (2 * (v44 & 0xE9ED5919B616D744)) ^ v44 & 0xE9ED5919B616D744;
  v46 = ((2 * (v44 ^ 0x509F20BE77633A81)) ^ 0x72E4F34F82EBDB8ALL) & (v44 ^ 0x509F20BE77633A81) ^ (2 * (v44 ^ 0x509F20BE77633A81)) & 0xB97279A7C175EDC4;
  v47 = v46 ^ 0x891208A041142445;
  v48 = (v46 ^ 0x206060078061C900) & (4 * v45) ^ v45;
  v49 = ((4 * v47) ^ 0xE5C9E69F05D7B714) & v47 ^ (4 * v47) & 0xB97279A7C175EDC4;
  v50 = ((16 * (v49 ^ 0x18321920C02048C1)) ^ 0x97279A7C175EDC50) & (v49 ^ 0x18321920C02048C1) ^ (16 * (v49 ^ 0x18321920C02048C1)) & 0xB97279A7C175EDC0;
  v51 = (v50 ^ 0x912218240154CC00) & (((v49 ^ 0xA14060870155A500) & (16 * v48) ^ v48) << 8) ^ (v49 ^ 0xA14060870155A500) & (16 * v48) ^ v48;
  v52 = (((v50 ^ 0x28506183C0212185) << 8) ^ 0x7279A7C175EDC500) & (v50 ^ 0x28506183C0212185) ^ ((v50 ^ 0x28506183C0212185) << 8) & 0xB97279A7C175ED00;
  v53 = v51 ^ 0xB97279A7C175EDC5 ^ (v52 ^ 0x3070218141650000) & (v51 << 16);
  v54 = v20 ^ 0x54C685D05E80D427;
  v55 = (v44 ^ (2
              * ((v53 << 32) & 0x397279A700000000 ^ v53 ^ ((v53 << 32) ^ 0x4175EDC500000000) & (((v52 ^ 0x89025826801028C5) << 16) & 0x397279A700000000 ^ 0x50388200000000 ^ (((v52 ^ 0x89025826801028C5) << 16) ^ 0x79A7C17500000000) & (v52 ^ 0x89025826801028C5))))) >> 8;
  v56 = v44
      + (((v55 ^ 0x36725232FEDAABD0) - 0x47774FBD3826A261) ^ ((v55 ^ 0x5CA9416AE685B10BLL) - 0x2DAC5CE52079B8BALL) ^ ((v55 ^ 0x6A42FA21446BE7D7) - 0x1B47E7AE8297EE66));
  v57 = ((v56 + 1648797022) ^ 0x957B490) & (2 * ((v56 + 1648797022) & 0x2D543114)) ^ (v56 + 1648797022) & 0x2D543114;
  v58 = ((2 * ((v56 + 1648797022) ^ 0x53F7F4B8)) ^ 0xFD478B58) & ((v56 + 1648797022) ^ 0x53F7F4B8) ^ (2 * ((v56 + 1648797022) ^ 0x53F7F4B8)) & 0x7EA3C5AC;
  v59 = ((4 * (v58 ^ 0x2A044A4)) ^ 0xFA8F16B0) & (v58 ^ 0x2A044A4) ^ (4 * (v58 ^ 0x2A044A4)) & 0x7EA3C5AC;
  v60 = (v59 ^ 0x7A8304A0) & (16 * ((v58 ^ 0x7C018004) & (4 * v57) ^ v57)) ^ (v58 ^ 0x7C018004) & (4 * v57) ^ v57;
  LODWORD(v44) = ((16 * (v59 ^ 0x420C10C)) ^ 0xEA3C5AC0) & (v59 ^ 0x420C10C) ^ (16 * (v59 ^ 0x420C10C)) & 0x7EA3C5A0;
  LODWORD(v55) = (v56 + 1648797022) ^ (2
                                     * ((v44 ^ 0x6A204000) & (v60 << 8) ^ v60 ^ ((((v44 ^ 0x1483852C) << 8) ^ 0xA3C50000) & (v44 ^ 0x1483852C) ^ ((v44 ^ 0x1483852C) << 8) & 0x7EA3C500 ^ 0x22810000) & (((v44 ^ 0x6A204000) & (v60 << 8) ^ v60) << 16))) ^ 0x7025E231;
  v56 += 0x1FD2130A101AFCFLL;
  v61 = (v56 ^ 0x7EA6BE538D523406) & (2 * (v56 & 0x7E26BF582D543114)) ^ v56 & 0x7E26BF582D543114;
  v62 = ((2 * (v56 ^ 0x9AA2D4C3C7527606)) ^ 0xC908D737D40C8E24) & (v56 ^ 0x9AA2D4C3C7527606) ^ (2 * (v56 ^ 0x9AA2D4C3C7527606)) & 0xE4846B9BEA064712;
  v63 = ((4 * (v62 ^ 0x248428882A024112)) ^ 0x9211AE6FA8191C48) & (v62 ^ 0x248428882A024112) ^ (4 * (v62 ^ 0x248428882A024112)) & 0xE4846B9BEA064710;
  v64 = v63 ^ 0x6484419042064312;
  v65 = (v63 ^ 0x80002A0BA8000410) & (16 * ((v62 ^ 0xC4004309C0020500) & (4 * v61) ^ v61)) ^ (v62 ^ 0xC4004309C0020500) & (4 * v61) ^ v61;
  v66 = ((16 * v64) ^ 0x4846B9BEA0647120) & v64 ^ (16 * v64) & 0xE4846B9BEA064710;
  v67 = (v66 ^ 0x4004299AA0044100) & (v65 << 8) ^ v65;
  v68 = (((v66 ^ 0xA48042014A020612) << 8) ^ 0x846B9BEA06471200) & (v66 ^ 0xA48042014A020612) ^ ((v66 ^ 0xA48042014A020612) << 8) & 0xE4846B9BEA064700;
  v69 = v67 ^ 0xE4846B9BEA064712 ^ (v68 ^ 0x84000B8A02060000) & (v67 << 16);
  v70 = v56 ^ (2
             * ((v69 << 32) & 0x64846B9B00000000 ^ v69 ^ ((v69 << 32) ^ 0x6A06471200000000) & (((v68 ^ 0x60846011E8004512) << 16) & 0x64846B9B00000000 ^ 0x404019900000000 ^ (((v68 ^ 0x60846011E8004512) << 16) ^ 0x6B9BEA0600000000) & (v68 ^ 0x60846011E8004512)))) ^ 0xED53AFB57E3312B3;
  v71 = ((v6 & (4 * v70) ^ 0xF8BF80BB) - 1) ^ 0xE539B690;
  LODWORD(v50) = v71 | 0xBADA0A0;
  v72 = (v5 | (unint64_t)(v7 << 32))
      + 0x5754EAB04E3CFDC5
      + (((v70 ^ v54 ^ 0xED34D270350D784DLL) + 0x12CB2D8FCAF287B3) ^ ((v70 ^ v54 ^ 0xB997025D3D8C006CLL)
                                                                      + 0x4668FDA2C273FF94) ^ ((v70 ^ v54 ^ 0x7F43B0867BDE5F32)
                                                                                               - 0x7F43B0867BDE5F32));
  v73 = ((2 * (v72 ^ 0x46F102CE4FEA332FLL)) ^ 0x24F4EE6AAC38ABC4) & (v72 ^ 0x46F102CE4FEA332FLL) ^ (2 * (v72 ^ 0x46F102CE4FEA332FLL)) & 0x927A7735561C55E2;
  v74 = (v72 ^ 0xC6E361FA5DE676ADLL) & (2 * (v72 & 0xD48B75FB19F666CDLL)) ^ v72 & 0xD48B75FB19F666CDLL;
  v75 = ((4 * (v73 ^ 0x920A111552045422)) ^ 0x49E9DCD558715788) & (v73 ^ 0x920A111552045422) ^ (4 * (v73 ^ 0x920A111552045422)) & 0x927A7735561C55E0;
  v76 = (v73 ^ 0x70662004180140) & (4 * v74) ^ v74;
  v77 = v75 ^ 0x68541550105580;
  v78 = ((16 * (v75 ^ 0x92122320060C0062)) ^ 0x27A7735561C55E20) & (v75 ^ 0x92122320060C0062) ^ (16 * (v75 ^ 0x92122320060C0062)) & 0x927A7735561C55E0;
  v79 = (v78 ^ 0x222731540045400) & ((v77 & (16 * v76) ^ v76) << 8) ^ v77 & (16 * v76) ^ v76;
  v80 = (((v78 ^ 0x90580420161801C2) << 8) ^ 0x7A7735561C55E200) & (v78 ^ 0x90580420161801C2) ^ ((v78 ^ 0x90580420161801C2) << 8) & 0x927A7735561C5500;
  v81 = v79 ^ 0x927A7735561C55E2 ^ (v80 ^ 0x1272351414140000) & (v79 << 16);
  v82 = v72 ^ (2
             * ((v81 << 32) & 0x127A773500000000 ^ v81 ^ ((v81 << 32) ^ 0x561C55E200000000) & (((v80 ^ 0x80084221420815E2) << 16) & 0x127A773500000000 ^ 0x4A212100000000 ^ (((v80 ^ 0x80084221420815E2) << 16) ^ 0x7735561C00000000) & (v80 ^ 0x80084221420815E2))));
  v83 = HIDWORD(v82) & 0xBC4CC1DB ^ 0x2000C90830084092 ^ (HIDWORD(v82) ^ 0xD44F31D1) & (v82 ^ 0x9820CD2);
  v84 = 2 * ((v83 | 0x3A98C24EAB0B99FELL) - (v83 | 0x45673DB154F46601)) - 0x7531849D561733FELL;
  v85 = (((HIDWORD(v82) ^ v82 ^ 0xC8C73F228B037EDBLL) - 0x3CEB352AB3A231B5) ^ ((HIDWORD(v82) ^ v82 ^ 0x2609DF543E6C1532)
                                                                               + 0x2DDA2AA3F932A5A4) ^ ((HIDWORD(v82) ^ v82 ^ 0x3A81D1A7D4EE9731) + 0x3152245013B027A1))
      - 0x1521527231A9745ALL
      + (((v84 ^ 0xC224CA6D3A7E18C1) - 0x5699BDF8BA9F9BBBLL) ^ ((v84 ^ 0xC06926F8C308EF31) - 0x54D4516D43E96C4BLL) ^ ((v84 ^ 0x377DFA19E7E9468ALL) + 0x5C3F727398F73A10));
  v86 = ((2 * (v85 ^ 0x33B27D3C19D78630)) ^ 0xC94724B2613FB840) & (v85 ^ 0x33B27D3C19D78630) ^ (2 * (v85 ^ 0x33B27D3C19D78630)) & 0xE4A39259309FDC20;
  v87 = (v85 ^ 0x9791EF7409471210) & (2 * (v85 & 0xD711EF6529485A10)) ^ v85 & 0xD711EF6529485A10;
  v88 = ((4 * (v86 ^ 0x24A0924910804420)) ^ 0x928E4964C27F7080) & (v86 ^ 0x24A0924910804420) ^ (4 * (v86 ^ 0x24A0924910804420)) & 0xE4A39259309FDC20;
  v89 = (v86 ^ 0xC003001020039800) & (4 * v87) ^ v87;
  v90 = v88 ^ 0x80820040001F5000;
  v91 = ((16 * (v88 ^ 0x6421921930808C20)) ^ 0x4A39259309FDC200) & (v88 ^ 0x6421921930808C20) ^ (16 * (v88 ^ 0x6421921930808C20)) & 0xE4A39259309FDC20;
  v92 = (v91 ^ 0x40210011009DC000) & ((v90 & (16 * v89) ^ v89) << 8) ^ v90 & (16 * v89) ^ v89;
  v93 = (((v91 ^ 0xA482924830021C20) << 8) ^ 0xA39259309FDC2000) & (v91 ^ 0xA482924830021C20) ^ ((v91 ^ 0xA482924830021C20) << 8) & 0xE4A39259309FDC00;
  v94 = v92 ^ 0xE4A39259309FDC20 ^ (v93 ^ 0xA0821010109C0000) & (v92 << 16);
  v95 = v85 ^ (2
             * ((v94 << 32) & 0x64A3925900000000 ^ v94 ^ ((v94 << 32) ^ 0x309FDC2000000000) & (((v93 ^ 0x442182492003DC20) << 16) & 0x64A3925900000000 ^ 0x64A2824000000000 ^ (((v93 ^ 0x442182492003DC20) << 16) ^ 0x1259309F00000000) & (v93 ^ 0x442182492003DC20))));
  LODWORD(v93) = -195928225 - (v71 | 0xF4525F5F);
  v96 = v85
      - 0x59A1565A6DD94868
      + ((((v95 >> 16) ^ 0x97F7D2D0709BE628) - 0x1734705EB2E0B95DLL) ^ (((v95 >> 16) ^ 0x15456A4EC729EFBALL)
                                                                        + 0x6A79373FFAAD4F31) ^ (((v95 >> 16) ^ 0x82B2E7CF5C6541E5)
                                                                                                 - 0x27145419E1E1E90));
  v97 = ((2 * (v96 ^ 0x76B5771005CD66E5)) ^ 0x8F84691D8A01BF3ELL) & (v96 ^ 0x76B5771005CD66E5) ^ (2 * (v96 ^ 0x76B5771005CD66E5)) & 0xC7C2348EC500DF9ELL;
  v98 = (v96 ^ 0x3477731C84CD3471) & (2 * (v96 & 0xB177439EC0CDB97ALL)) ^ v96 & 0xB177439EC0CDB97ALL;
  v99 = ((4 * (v97 ^ 0x4042148245004081)) ^ 0x1F08D23B14037E7CLL) & (v97 ^ 0x4042148245004081) ^ (4 * (v97 ^ 0x4042148245004081)) & 0xC7C2348EC500DF9CLL;
  v100 = (v97 ^ 0x8780000C00008F18) & (4 * v98) ^ v98;
  v101 = (v99 ^ 0x700100A04005E00) & (16 * v100);
  v102 = ((16 * (v99 ^ 0xC0C22484C1008183)) ^ 0x7C2348EC500DF9F0) & (v99 ^ 0xC0C22484C1008183) ^ (16 * (v99 ^ 0xC0C22484C1008183)) & 0xC7C2348EC500DF90;
  v103 = (v102 ^ 0x4402008C4000D900) & ((v101 ^ v100) << 8) ^ v101 ^ v100;
  v104 = (((v102 ^ 0x83C034028500060FLL) << 8) ^ 0xC2348EC500DF9F00) & (v102 ^ 0x83C034028500060FLL) ^ ((v102 ^ 0x83C034028500060FLL) << 8) & 0xC7C2348EC500DF00;
  v105 = v103 ^ 0xC7C2348EC500DF9FLL ^ (v104 ^ 0xC200048400000000) & (v103 << 16);
  LODWORD(STACK[0x6A30]) = v93 + v50;
  v106 = (v96 ^ (2
               * ((v105 << 32) & 0x47C2348E00000000 ^ v105 ^ ((v105 << 32) ^ 0x4500DF9F00000000) & (((v104 ^ 0x5C2300AC500409FLL) << 16) & 0x47C2348E00000000 ^ 0x4340308E00000000 ^ (((v104 ^ 0x5C2300AC500409FLL) << 16) ^ 0x348EC50000000000) & (v104 ^ 0x5C2300AC500409FLL))))) >> 8;
  v107 = v96
       + (((v106 ^ 0x4FBD9C2602969EA3) - 0x35474BB9E28CFC92) ^ ((v106 ^ 0x9AF4D22121980AADLL) + 0x1FF1FA413E7D9764) ^ ((v106 ^ 0xD5FDBD04BC445808) + 0x50F89564A3A1C5C7));
  LODWORD(v93) = v107 + 1093582376;
  v108 = ((v107 + 1093582376) ^ 0xB9803BFA) & (2 * ((v107 + 1093582376) & 0x3DAAB3FA)) ^ (v107 + 1093582376) & 0x3DAAB3FA;
  v109 = ((2 * ((v107 + 1093582376) ^ 0xB0943EEE)) ^ 0x1A7D1A28) & ((v107 + 1093582376) ^ 0xB0943EEE) ^ (2 * ((v107 + 1093582376) ^ 0xB0943EEE)) & 0x8D3E8D14;
  v110 = (v109 ^ 0x83C0804) & (4 * v108) ^ v108;
  v111 = ((4 * (v109 ^ 0x85028514)) ^ 0x34FA3450) & (v109 ^ 0x85028514) ^ (4 * (v109 ^ 0x85028514)) & 0x8D3E8D14;
  v112 = (v111 ^ 0x43A0400) & (16 * v110) ^ v110;
  LODWORD(v106) = ((16 * (v111 ^ 0x89048904)) ^ 0xD3E8D140) & (v111 ^ 0x89048904) ^ (16 * (v111 ^ 0x89048904)) & 0x8D3E8D10;
  v113 = v106 ^ 0xC160C14;
  LODWORD(v106) = (v106 ^ 0x81288100) & (v112 << 8) ^ v112;
  v107 += 0x2EAC01987FE9C899;
  v114 = (v107 ^ 0x89A8FC1BBDA82BFBLL) & (2 * (v107 & 0x21B2F91B3DAAB3FALL)) ^ v107 & 0x21B2F91B3DAAB3FALL;
  v115 = ((2 * (v107 ^ 0x89CD6E2FD6F94EDBLL)) ^ 0x50FF2E69D6A7FA42) & (v107 ^ 0x89CD6E2FD6F94EDBLL) ^ (2 * (v107 ^ 0x89CD6E2FD6F94EDBLL)) & 0xA87F9734EB53FD20;
  v116 = v115 ^ 0xA800911429500521;
  v117 = (v115 ^ 0x205F1520C203D800) & (4 * v114) ^ v114;
  v118 = ((4 * v116) ^ 0xA1FE5CD3AD4FF484) & v116 ^ (4 * v116) & 0xA87F9734EB53FD20;
  v119 = ((16 * (v118 ^ 0x801832442100921)) ^ 0x87F9734EB53FD210) & (v118 ^ 0x801832442100921) ^ (16 * (v118 ^ 0x801832442100921)) & 0xA87F9734EB53FD20;
  v120 = (v119 ^ 0x80791304A113D000) & (((v118 ^ 0xA07E1410A943F400) & (16 * v117) ^ v117) << 8) ^ (v118 ^ 0xA07E1410A943F400) & (16 * v117) ^ v117;
  v121 = (((v119 ^ 0x280684304A402D21) << 8) ^ 0x7F9734EB53FD2100) & (v119 ^ 0x280684304A402D21) ^ ((v119 ^ 0x280684304A402D21) << 8) & 0xA87F9734EB53FD00;
  LODWORD(v106) = v93 ^ (2
                       * (v106 ^ (((v113 << 8) ^ 0x3E8D0000) & v113 ^ (v113 << 8) & 0x8D3E8D00 ^ 0xC0C0C0C) & ((_DWORD)v106 << 16)));
  v122 = v120 ^ 0xA87F9734EB53FD21 ^ (v121 ^ 0x2817142043510000) & (v120 << 16);
  LODWORD(v50) = (4 * (v106 ^ 0xDB938F38)) & 0xCEE73E5C ^ v106 ^ 0xDB938F38;
  v123 = v107 ^ (2
               * ((v122 << 32) & 0x287F973400000000 ^ v122 ^ ((v122 << 32) ^ 0x6B53FD2100000000) & (((v121 ^ 0x80688314A802DC21) << 16) & 0x287F973400000000 ^ 0x284B142400000000 ^ (((v121 ^ 0x80688314A802DC21) << 16) ^ 0x1734EB5300000000) & (v121 ^ 0x80688314A802DC21)))) ^ 0xB243FA32C99B0657;
  LODWORD(v122) = 4 * (v107 ^ (2 * v122) ^ 0xC99B0657);
  LODWORD(v104) = v122 & 0xCEE20448;
  LODWORD(v121) = v122 & 0x53A14 ^ 0x10D6817;
  v124 = (v5 | (unint64_t)(v7 << 32))
       - 0x6859FA030F1AB6A4
       + (((v123 ^ v54 ^ 0xC5ECFF9A931E95B1) + 0x3A1300656CE16A4FLL) ^ ((v123 ^ v54 ^ 0xB2C2F1F70B23921FLL)
                                                                        + 0x4D3D0E08F4DC6DE1) ^ ((v123 ^ v54 ^ 0x551228384E9FC2D1)
                                                                                                 - 0x551228384E9FC2D1));
  v125 = (v124 ^ 0xE007861A9A9D353ALL) & (2 * (v124 & 0x8A962058DA91B9A2)) ^ v124 & 0x8A962058DA91B9A2;
  v126 = ((2 * (v124 ^ 0xE52386BB9EBD763ALL)) ^ 0xDF6B4DC688599F30) & (v124 ^ 0xE52386BB9EBD763ALL) ^ (2 * (v124 ^ 0xE52386BB9EBD763ALL)) & 0x6FB5A6E3442CCF98;
  v127 = v126 ^ 0x2094A22144244088;
  v128 = (v126 ^ 0x4E2100C200088F10) & (4 * v125) ^ v125;
  v129 = ((4 * v127) ^ 0xBED69B8D10B33E60) & v127 ^ (4 * v127) & 0x6FB5A6E3442CCF98;
  v130 = (v129 ^ 0x2E94828100200E00) & (16 * v128) ^ v128;
  v131 = ((16 * (v129 ^ 0x41212462440CC198)) ^ 0xFB5A6E3442CCF980) & (v129 ^ 0x41212462440CC198) ^ (16 * (v129 ^ 0x41212462440CC198)) & 0x6FB5A6E3442CCF90;
  v132 = (v131 ^ 0x6B102620400CC900) & (v130 << 8) ^ v130;
  v133 = (((v131 ^ 0x4A580C304200618) << 8) ^ 0xB5A6E3442CCF9800) & (v131 ^ 0x4A580C304200618) ^ ((v131 ^ 0x4A580C304200618) << 8) & 0x6FB5A6E3442CCF00;
  v134 = v132 ^ 0x6FB5A6E3442CCF98 ^ (v133 ^ 0x25A4A240040C0000) & (v132 << 16);
  v135 = (v124 ^ (2
                * ((v134 << 32) & 0x6FB5A6E300000000 ^ v134 ^ ((v134 << 32) ^ 0x442CCF9800000000) & (((v133 ^ 0x4A1104A340204798) << 16) & 0x6FB5A6E300000000 ^ 0x4914A2C300000000 ^ (((v133 ^ 0x4A1104A340204798) << 16) ^ 0x26E3442C00000000) & (v133 ^ 0x4A1104A340204798))))) >> 32;
  v136 = v124
       + 0x436D5DD9751EDCD3
       + (((v135 ^ 0x5D40FCFDCE9651CCLL) + 0x42BB2680A3E9CF39) ^ ((v135 ^ 0x9E4C7D263AE3D3BLL) + 0x161F1DAF0ED1A3D0) ^ ((v135 ^ 0x54A43B2F708C0C69) + 0x4B5FE1521DF3929ELL));
  LODWORD(v133) = v121 | v104;
  v137 = (v136 ^ 0xB70CC245B0B4DD65) & (2 * (v136 & 0x272CE801B4A6DE64)) ^ v136 & 0x272CE801B4A6DE64;
  v138 = ((2 * (v136 ^ 0xBD5C9246D9F94DEDLL)) ^ 0x34E0F48EDABF2712) & (v136 ^ 0xBD5C9246D9F94DEDLL) ^ (2 * (v136 ^ 0xBD5C9246D9F94DEDLL)) & 0x9A707A476D5F9388;
  v139 = v138 ^ 0x8A100A4125409089;
  v140 = (v138 ^ 0x10606006401F0300) & (4 * v137) ^ v137;
  v141 = ((4 * v139) ^ 0x69C1E91DB57E4E24) & v139 ^ (4 * v139) & 0x9A707A476D5F9388;
  v142 = (v141 ^ 0x8406805255E0200) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x9230124248019189)) ^ 0xA707A476D5F93890) & (v141 ^ 0x9230124248019189) ^ (16 * (v141 ^ 0x9230124248019189)) & 0x9A707A476D5F9380;
  v144 = (v143 ^ 0x8200204645591000) & (v142 << 8) ^ v142;
  v145 = (((v143 ^ 0x18705A0128068309) << 8) ^ 0x707A476D5F938900) & (v143 ^ 0x18705A0128068309) ^ ((v143 ^ 0x18705A0128068309) << 8) & 0x9A707A476D5F9300;
  v146 = (v136 ^ (2
                * (((v144 ^ 0x9A707A476D5F9389 ^ (v145 ^ 0x107042454D130000) & (v144 << 16)) << 32) & 0x1A707A4700000000 ^ v144 ^ 0x9A707A476D5F9389 ^ (v145 ^ 0x107042454D130000) & (v144 << 16) ^ (((v144 ^ 0x9A707A476D5F9389 ^ (v145 ^ 0x107042454D130000) & (v144 << 16)) << 32) ^ 0x6D5F938900000000) & (((v145 ^ 0x8A003802204C1289) << 16) & 0x1A707A4700000000 ^ 0x30120000000000 ^ (((v145 ^ 0x8A003802204C1289) << 16) ^ 0x7A476D5F00000000) & (v145 ^ 0x8A003802204C1289))))) >> 16;
  v147 = v136
       + 0x5D6E747C5E1150E5
       + (((v146 ^ 0xD45390CF2229DD0FLL) + 0x390D15554CB10677) ^ ((v146 ^ 0x922AD45148A8212FLL) + 0x7F7451CB2630FA57) ^ ((v146 ^ 0x467947F2520C9239) - 0x54D83D97C36BB6BFLL));
  v148 = (v147 ^ 0x9D5FC88F9E7FD79CLL) & (2 * (v147 & 0xDC5FEC8F007FD81ELL)) ^ v147 & 0xDC5FEC8F007FD81ELL;
  v149 = ((2 * (v147 ^ 0xA56491839EB24780)) ^ 0xF276FA193D9B3F3CLL) & (v147 ^ 0xA56491839EB24780) ^ (2 * (v147 ^ 0xA56491839EB24780)) & 0x793B7D0C9ECD9F9ELL;
  v150 = ((4 * (v149 ^ 0x909050482448082)) ^ 0xE4EDF4327B367E78) & (v149 ^ 0x909050482448082) ^ (4 * (v149 ^ 0x909050482448082)) & 0x793B7D0C9ECD9F9CLL;
  v151 = (v149 ^ 0x7032700800890018) & (4 * v148) ^ v148;
  v152 = v150 ^ 0x602974001A041E00;
  v153 = ((16 * (v150 ^ 0x1912090C84C98186)) ^ 0x93B7D0C9ECD9F9E0) & (v150 ^ 0x1912090C84C98186) ^ (16 * (v150 ^ 0x1912090C84C98186)) & 0x793B7D0C9ECD9F90;
  v154 = (v153 ^ 0x113350088CC99900) & ((v152 & (16 * v151) ^ v151) << 8) ^ v152 & (16 * v151) ^ v151;
  v155 = (((v153 ^ 0x68082D041204061ELL) << 8) ^ 0x3B7D0C9ECD9F9E00) & (v153 ^ 0x68082D041204061ELL) ^ ((v153 ^ 0x68082D041204061ELL) << 8) & 0x793B7D0C9ECD9F00;
  v156 = v154 ^ 0x793B7D0C9ECD9F9ELL ^ (v155 ^ 0x39390C0C8C8D0000) & (v154 << 16);
  LODWORD(v153) = ((v133 - 1) ^ 0x5B2D760E) - ((2 * ((v133 - 1) ^ 0x5B2D760E)) & 0x9D0C2828);
  v157 = (v147 ^ (2
                * ((v156 << 32) & 0x793B7D0C00000000 ^ v156 ^ ((v156 << 32) ^ 0x1ECD9F9E00000000) & (((v155 ^ 0x400271001240019ELL) << 16) & 0x793B7D0C00000000 ^ 0x33610000000000 ^ (((v155 ^ 0x400271001240019ELL) << 16) ^ 0x7D0C9ECD00000000) & (v155 ^ 0x400271001240019ELL))))) >> 8;
  LODWORD(v133) = v147
                - 543431423
                + (((v157 ^ 0x1A59180) - 1333073952) ^ ((v157 ^ 0x129062F4) - 1547758420) ^ ((v157 ^ 0x9D081793)
                                                                                           + 740778445));
  LODWORD(v147) = v153 + 1317934517;
  LODWORD(v157) = ((2 * (v133 ^ 0xC666028D)) ^ 0x4F6EC5D2) & (v133 ^ 0xC666028D) ^ (2 * (v133 ^ 0xC666028D)) & 0x27B762E8;
  LODWORD(v155) = (v133 ^ 0xC5C44245) & (2 * (v133 & 0xE1D16064)) ^ v133 & 0xE1D16064;
  LODWORD(v153) = ((4 * (v157 ^ 0x20912229)) ^ 0x9EDD8BA4) & (v157 ^ 0x20912229) ^ (4 * (v157 ^ 0x20912229)) & 0x27B762E8;
  LODWORD(v157) = (v153 ^ 0x69502A0) & (16 * ((v157 ^ 0x7060080) & (4 * v155) ^ v155)) ^ (v157 ^ 0x7060080) & (4 * v155) ^ v155;
  LODWORD(v155) = ((16 * (v153 ^ 0x21226049)) ^ 0x7B762E90) & (v153 ^ 0x21226049) ^ (16 * (v153 ^ 0x21226049)) & 0x27B762E0;
  LODWORD(v147) = v147 ^ v123;
  LODWORD(v133) = v133 ^ (2
                        * ((v155 ^ 0x23362200) & ((_DWORD)v157 << 8) ^ v157 ^ 0x27B762E9 ^ ((((v155 ^ 0x4814069) << 8) ^ 0xB762E900) & (v155 ^ 0x4814069) ^ ((v155 ^ 0x4814069) << 8) & 0x27B76200 ^ 0x27220000) & (((v155 ^ 0x23362200) & ((_DWORD)v157 << 8) ^ v157) << 16)));
  LODWORD(v107) = (((v133 ^ 0x53247FDB) + 1411369918) ^ ((v133 ^ 0x7D7ADFB6) + 2051107793) ^ ((v133 ^ 0x80E105DB)
                                                                                            - 2015710786))
                + 1322772029;
  LODWORD(v155) = (v107 ^ 0x541E5B52) & (2 * (v107 & 0x465F1263)) ^ v107 & 0x465F1263;
  LODWORD(v52) = ((2 * (v107 ^ 0x5CA47F92)) ^ 0x35F6DBE2) & (v107 ^ 0x5CA47F92) ^ (2 * (v107 ^ 0x5CA47F92)) & 0x1AFB6DF0;
  LODWORD(v157) = ((4 * (v52 ^ 0xA092411)) ^ 0x6BEDB7C4) & (v52 ^ 0xA092411) ^ (4 * (v52 ^ 0xA092411)) & 0x1AFB6DF0;
  LODWORD(v123) = v157 ^ 0x10124831;
  LODWORD(v157) = (v157 ^ 0xAE925C0) & (16 * ((v52 ^ 0x10F04980) & (4 * v155) ^ v155)) ^ (v52 ^ 0x10F04980) & (4 * v155) ^ v155;
  LODWORD(v52) = ((16 * v123) ^ 0xAFB6DF10) & v123 ^ (16 * v123) & 0x1AFB6DF0;
  v158 = v107 ^ (2
               * ((v52 ^ 0xAB24D00) & ((_DWORD)v157 << 8) ^ v157 ^ ((((v52 ^ 0x104920E1) << 8) ^ 0xFB6D0000) & (v52 ^ 0x104920E1) ^ ((v52 ^ 0x104920E1) << 8) & 0x1AFB6D00 ^ 0x1A690000) & (((v52 ^ 0xAB24D00) & ((_DWORD)v157 << 8) ^ v157) << 16))) ^ 0x5CAFDF1C;
  v159 = a1 ^ v55 ^ (((((4 * v55) & v6 ^ 0x4C071C5C)
                     + ((4 * v55) & 0x84610818 ^ 0x80608083)
                     - (((4 * v55) & v6 ^ 0x4C071C5C) & 0x84610818)) ^ 0x87BFB3E)
                   - 1) ^ v50 ^ 0x61754520;
  LODWORD(v107) = (((v133 ^ 0x4A68927) + 60636482) ^ ((v133 ^ 0xA5A754DA) - 1566777155) ^ ((v133 ^ 0xFBE784B) + 142986286))
                - 739114223;
  v160 = LODWORD(STACK[0x6A30]) ^ v70 ^ LODWORD(STACK[0x6AC0]) ^ v147 ^ (((((2 * ((4 * v107) & 0xCEE73E5C ^ 0x44411800)) & 0x9C0A4038)
                                                                         - ((4 * v107) & 0xCEE73E5C ^ 0x44411800)
                                                                         - 1845862686) ^ 0xEE16C5F9)
                                                                       - 1) ^ v107;
  v161 = v5 - 335661954 < LODWORD(STACK[0x6A70]);
  if (LODWORD(STACK[0x6A40]) != v5 - 335661954 < 0xF729F6FE)
    v161 = STACK[0x6A40];
  v162 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((29148 * (v161 ^ 1)) ^ STACK[0x6A90]))
                                        - 8);
  LODWORD(STACK[0x6AC0]) = v160 ^ 0x1A32F441;
  return v162(v159 ^ (((4 * v158) & 0x8EE02A10 ^ 0x86300201 | (4 * v158) & 0x4007144C) - 1) ^ v158);
}

uint64_t sub_100AAFC1C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0x63E8]) = LODWORD(STACK[0x69B0])
                         - 187617587
                         + 229819565 * (LODWORD(STACK[0x66A0]) + LODWORD(STACK[0x69C0]));
  LODWORD(STACK[0x63F0]) = LODWORD(STACK[0x69A0]) + LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x66B8]) = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6A10]) ^ 0x46464646;
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6940]) ^ 0x96239FBB;
  LODWORD(STACK[0x63E0]) = LODWORD(STACK[0x6930]) ^ 0x99EDA2BB;
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x66A8]) ^ 0x9FC76F1B;
  v0 = STACK[0x6AB0];
  if (((*(_BYTE *)(v0
                  + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 6) + 12) & 0xF)) + 12) & 0xF)) + 14) & 0xF))
       + 4) & 0xE) != 0)
    v1 = (*(_BYTE *)(v0
                   + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 6) + 12) & 0xF)) + 12) & 0xF)) + 14) & 0xF))
        + 4) & 0xF;
  else
    v1 = 1;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A80]) - 12);
  STACK[0x6AC0] = v1;
  STACK[0x6A90] = v1 - 1;
  return v2();
}

uint64_t sub_100AB0028()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((28823 * (STACK[0x6A90] == v0)) ^ STACK[0x6A80]))
                            - 12))();
}

uint64_t sub_100AB1044(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x6478]) = ~LODWORD(STACK[0x6970]);
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6990]);
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x69F0]) - LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x67C0]) = LODWORD(STACK[0x65D0]) + LODWORD(STACK[0x6980]) + 1383700324;
  LODWORD(STACK[0x6A40]) = v2 - 1879279130;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                                + 8
                                                                                                * ((4948
                                                                                                  * (v2 != ((v2 - 1879279130) ^ 0xDB876F9B))) ^ (v2 - 1879283054)))
                                                                                    - 4);
  STACK[0x6A30] = -405484405;
  STACK[0x6A20] = 718946303;
  return v3(a1, 405484406, 1216287012, v1, 697097378, 269764048);
}

uint64_t sub_100AB11D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unint64_t v68;
  uint64_t v69;

  LODWORD(STACK[0x6A80]) = v12;
  LODWORD(STACK[0x6A90]) = v13;
  STACK[0x69E0] = a4;
  STACK[0x69F0] = a5;
  STACK[0x6A00] = a2;
  LODWORD(STACK[0x6A10]) = v7;
  v14 = LODWORD(STACK[0x6A40]) + 5171;
  v15 = *(unsigned __int8 *)(a4 + STACK[0x6AC0]);
  LODWORD(STACK[0x6A70]) = v14 | 0x30;
  v16 = (((2 * v15) & 0xF2) + (v15 ^ 0xF5D3E779)) * ((v14 | 0x30) - 379782385) + 1769727828;
  v17 = ((2 * (v16 ^ 0x9C902FE2)) ^ 0x1FECCDFE) & (v16 ^ 0x9C902FE2) ^ (2 * (v16 ^ 0x9C902FE2)) & 0x8FF666FE;
  v18 = (v16 ^ 0x9A542DD8) & (2 * (v16 & 0x1366491D)) ^ v16 & 0x1366491D;
  v19 = v17 ^ 0x80122201;
  v20 = (v17 ^ 0xFA044FC) & (4 * v18) ^ v18;
  v21 = ((4 * v19) ^ 0x3FD99BFC) & v19 ^ (4 * v19) & 0x8FF666FC;
  v22 = (v21 ^ 0xFD002F3) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x80266403)) ^ 0xFF666FF0) & (v21 ^ 0x80266403) ^ (16 * (v21 ^ 0x80266403)) & 0x8FF666F0;
  v24 = v22 ^ 0x8FF666FF ^ (v23 ^ 0x8F66660F) & (v22 << 8);
  v25 = v16 ^ (2
             * ((v24 << 16) & 0xFF60000 ^ v24 ^ ((v24 << 16) ^ 0x66FF0000) & (((v23 ^ 0x90000F) << 8) & 0xFF60000 ^ 0x9900000 ^ (((v23 ^ 0x90000F) << 8) ^ 0x76660000) & (v23 ^ 0x90000F))));
  v26 = v9 ^ 0x16684E3 ^ v25;
  v27 = (v26 + v11) >> 16;
  v28 = (unint64_t)(v26 + v11 - v27) >> 8;
  v29 = STACK[0x6AC0] + a5 + v26 - v27 + v28;
  v30 = 2 * (v29 & 0xD673235E);
  LODWORD(STACK[0x69D0]) = v30;
  v31 = ((2 * (v29 ^ 0xF0A7E191)) ^ 0x4DA9859E) & (v29 ^ 0xF0A7E191) ^ (2 * (v29 ^ 0xF0A7E191)) & 0x26D4C2CE;
  v32 = v31 ^ 0x22544241;
  v33 = (v31 ^ 0x80C089) & (4 * (v30 & (v29 ^ 0xD463A31D) ^ v29 & 0xD673235E)) ^ v30 & (v29 ^ 0xD463A31D) ^ v29 & 0xD673235E;
  v34 = ((4 * v32) ^ 0x9B530B3C) & v32 ^ (4 * v32) & 0x26D4C2CC;
  v35 = (v34 ^ 0x2500203) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x2484C0C3)) ^ 0x6D4C2CF0) & (v34 ^ 0x2484C0C3) ^ (16 * (v34 ^ 0x2484C0C3)) & 0x26D4C2C0;
  v37 = v35 ^ 0x26D4C2CF ^ (v36 ^ 0x2444000F) & (v35 << 8);
  v38 = STACK[0x6AC0] + v10 + v26 - v27 + v28;
  LODWORD(STACK[0x69C0]) = (v38 ^ 0xC463068) + (v38 | 0x33B9CF97);
  v39 = STACK[0x6AC0] + a6 + v26 - v27 + v28;
  LODWORD(v28) = (v37 << 16) & 0xD40000 ^ v37 ^ ((v37 << 16) ^ 0x2CF0000) & (((v36 ^ 0x290C20F) << 8) & 0x6D40000 ^ 0x2140000 ^ (((v36 ^ 0x290C20F) << 8) ^ 0xD4C20000) & (v36 ^ 0x290C20F));
  v40 = (v39 ^ 0xAEF6143A) & (2 * (v39 & 0xACE646BC)) ^ v39 & 0xACE646BC;
  v41 = ((2 * (v39 ^ 0xF6FE1012)) ^ 0xB430AD5C) & (v39 ^ 0xF6FE1012) ^ (2 * (v39 ^ 0xF6FE1012)) & 0x5A1856AE;
  v42 = v41 ^ 0x4A0852A2;
  v43 = (v41 ^ 0x18104402) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0x68615AB8) & v42 ^ (4 * v42) & 0x5A1856AC;
  v45 = ((16 * (v44 ^ 0x12180406)) ^ 0xA1856AE0) & (v44 ^ 0x12180406) ^ (16 * (v44 ^ 0x12180406)) & 0x5A1856A0;
  LODWORD(v28) = (((8 * v28) ^ (4 * v29)) & v6 ^ 0x84463E58)
               + (((8 * v28) ^ (4 * v29)) & 0xCEA72844 ^ 0x6BB90084)
               - ((((8 * v28) ^ (4 * v29)) & v6 ^ 0x84463E58) & 0xCEA72844);
  v46 = (v44 ^ 0x480052A0) & (16 * v43) ^ v43 ^ 0x5A1856AE ^ (v45 ^ 0x4200) & (((v44 ^ 0x480052A0) & (16 * v43) ^ v43) << 8);
  v47 = v39 ^ (2
             * ((v46 << 16) & 0x5A180000 ^ v46 ^ ((v46 << 16) ^ 0x56AE0000) & (((v45 ^ 0x5A18140E) << 8) & 0x5A180000 ^ 0x42080000 ^ (((v45 ^ 0x5A18140E) << 8) ^ 0x18560000) & (v45 ^ 0x5A18140E)))) ^ 0x67EEDBBC;
  v48 = (v28 ^ 0xA3B3A9AC) & 0x9EE41294;
  v49 = (v28 & 0x9EE41294 ^ 0x1C441210) + (v28 ^ 0xA3B3A9AC);
  v50 = STACK[0x6AC0] + v8;
  STACK[0x69B0] = v50;
  LODWORD(v28) = v50 + (v25 ^ 0xDA4EB4BF ^ v47) - (((v25 ^ 0xDA4EB4BF ^ v47) + v11) >> 16);
  LODWORD(v28) = (v28 ^ 0x6F7DFD78) - 1157730304 + ((2 * v28) & 0xDEFBFAF0);
  LODWORD(STACK[0x69A0]) = v49 - v48;
  v51 = (v28 ^ 0x81DB0AAD) & (2 * (v28 & 0xD5839288)) ^ v28 & 0xD5839288;
  v52 = ((2 * (v28 ^ 0x8BD90BAD)) ^ 0xBCB5324A) & (v28 ^ 0x8BD90BAD) ^ (2 * (v28 ^ 0x8BD90BAD)) & 0x5E5A9924;
  v53 = v52 ^ 0x424A8925;
  v54 = (v52 ^ 0x1C101000) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0x796A6494) & v53 ^ (4 * v53) & 0x5E5A9924;
  v56 = (v55 ^ 0x584A0000) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x6109921)) ^ 0xE5A99250) & (v55 ^ 0x6109921) ^ (16 * (v55 ^ 0x6109921)) & 0x5E5A9920;
  v58 = v56 ^ 0x5E5A9925 ^ (v57 ^ 0x44089025) & (v56 << 8);
  v59 = v28 ^ (2
             * ((v58 << 16) & 0x5E5A0000 ^ v58 ^ ((v58 << 16) ^ 0x19250000) & (((v57 ^ 0x1A520925) << 8) & 0x5E5A0000 ^ 0x4420000 ^ (((v57 ^ 0x1A520925) << 8) ^ 0x5A990000) & (v57 ^ 0x1A520925))));
  LODWORD(v28) = v28
               - 1902795870
               + ((((v59 >> 8) ^ 0x2E9974EC) - 1100708015) ^ (((v59 >> 8) ^ 0xFD95B388) + 1835548725) ^ (((v59 >> 8) ^ 0xD355F1C4) + 1135084153));
  LODWORD(STACK[0x6990]) = (((2 * (v6 & (4 * v47) ^ 0x6213440)) | 0x50814B12) - (v6 & (4 * v47) ^ 0x6213440) + 1472158327) ^ 0xC6D28D10;
  v60 = (v28 ^ 0xA40D0D89) & (2 * (v28 & 0xB64929C9)) ^ v28 & 0xB64929C9;
  v61 = ((2 * (v28 ^ 0xC89D0C8B)) ^ 0xFDA84A84) & (v28 ^ 0xC89D0C8B) ^ (2 * (v28 ^ 0xC89D0C8B)) & 0x7ED42542;
  v62 = (v61 ^ 0x78000000) & (4 * v60) ^ v60;
  v63 = ((4 * (v61 ^ 0x2542542)) ^ 0xFB509508) & (v61 ^ 0x2542542) ^ (4 * (v61 ^ 0x2542542)) & 0x7ED42540;
  v64 = v62 ^ 0x7ED42542 ^ (v63 ^ 0x7A500500) & (16 * v62);
  v65 = (16 * (v63 ^ 0x4842042)) & 0x7ED42540 ^ 0x12942142 ^ ((16 * (v63 ^ 0x4842042)) ^ 0xED425420) & (v63 ^ 0x4842042);
  v66 = (v64 << 8) & 0x7ED42500 ^ v64 ^ ((v64 << 8) ^ 0xD4254200) & v65;
  v67 = v28 ^ (2
             * ((v66 << 16) & 0x7ED40000 ^ v66 ^ ((v66 << 16) ^ 0x25420000) & ((v65 << 8) & 0x7ED40000 ^ 0x2AD00000 ^ ((v65 << 8) ^ 0x54250000) & v65))) ^ 0x534E8444;
  LODWORD(STACK[0x6980]) = (((2 * (v6 & (4 * v67) ^ 0xC2223058)) & 0x89845C30)
                          - (v6 & (4 * v67) ^ 0xC2223058)
                          - 1690480185) ^ 0x4B680F86;
  v68 = STACK[0x6A30];
  v69 = *(_QWORD *)(STACK[0x6AD8]
                  + 8 * (((STACK[0x69B0] == 15) | (2 * (STACK[0x69B0] == 15))) ^ LODWORD(STACK[0x6A40])));
  ++STACK[0x6A20];
  STACK[0x6A30] = v68 + 1;
  return ((uint64_t (*)(void))(v69 - 4))();
}

uint64_t sub_100AB2528(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unint64_t v68;
  unint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;

  LODWORD(STACK[0x6A90]) = v7;
  LODWORD(STACK[0x6A10]) = v5;
  LODWORD(STACK[0x6A80]) = v6;
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x6710]) ^ 0x98975AED;
  LODWORD(STACK[0x65C8]) ^= LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x63C8]);
  v8 = (v2 + v4 + ((v4 + v3) >> 8) - a2) ^ 0xD0F1D255;
  v9 = v8 + (v8 >> 10) - ((v8 + (v8 >> 10)) >> 4);
  v10 = v9 - 407570142 - ((2 * v9) & 0xCF69F244);
  v11 = (((v10 ^ 0xFF28DD5C) + 14099108) ^ ((v10 ^ 0xCAD32332) + 892132558) ^ ((v10 ^ 0xD24F074C) + 766572724))
      - 1951029769;
  v12 = v11 + (v11 >> 12) + ((v11 + (v11 >> 12)) >> 2);
  v13 = ((v12 + 1550318686 - ((v12 + 1550318686) >> 13)) ^ 0xF3FFEFFF)
      + 2147180211
      + ((2 * (v12 + 1550318686 - ((v12 + 1550318686) >> 13))) & 0xE7FFDFFE);
  v14 = (v13 ^ 0x4A26384F) & (2 * (v13 & 0x8C04B14E)) ^ v13 & 0x8C04B14E;
  v15 = ((2 * (v13 ^ 0x5A2F3A53)) ^ 0xAC57163A) & (v13 ^ 0x5A2F3A53) ^ (2 * (v13 ^ 0x5A2F3A53)) & 0xD62B8B1C;
  v16 = v15 ^ 0x52288905;
  v17 = (v15 ^ 0x20B021D) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0x58AE2C74) & v16 ^ (4 * v16) & 0xD62B8B1C;
  v19 = (v18 ^ 0x502A0809) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x86018309)) ^ 0x62B8B1D0) & (v18 ^ 0x86018309) ^ (16 * (v18 ^ 0x86018309)) & 0xD62B8B10;
  v21 = v19 ^ 0xD62B8B1D ^ (v20 ^ 0x4228810D) & (v19 << 8);
  v22 = (v13 ^ (2
              * ((v21 << 16) & 0x562B0000 ^ v21 ^ ((v21 << 16) ^ 0xB1D0000) & (((v20 ^ 0x94030A0D) << 8) & 0xD62B0000 ^ 0x54200000 ^ (((v20 ^ 0x94030A0D) << 8) ^ 0x2B8B0000) & (v20 ^ 0x94030A0D))))) >> 4;
  v23 = v13
      + 1890743089
      + (((v22 ^ 0x26B6C936) - 1914763616) ^ ((v22 ^ 0x9A9F2893) + 838264635) ^ ((v22 ^ 0xBE6DFBD2) + 352597116));
  v24 = (v23 ^ 0x7B1545BF) & (2 * (v23 & 0x7224683E)) ^ v23 & 0x7224683E;
  v25 = ((2 * (v23 ^ 0x9B5D85AB)) ^ 0xD2F3DB2A) & (v23 ^ 0x9B5D85AB) ^ (2 * (v23 ^ 0x9B5D85AB)) & 0xE979ED94;
  v26 = v25 ^ 0x29082495;
  v27 = (v25 ^ 0xC031C100) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0xA5E7B654) & v26 ^ (4 * v26) & 0xE979ED94;
  v29 = (v28 ^ 0xA161A400) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x48184981)) ^ 0x979ED950) & (v28 ^ 0x48184981) ^ (16 * (v28 ^ 0x48184981)) & 0xE979ED90;
  v31 = v29 ^ 0xE979ED95 ^ (v30 ^ 0x8118C900) & (v29 << 8);
  v32 = v23 ^ (2
             * ((v31 << 16) & 0x69790000 ^ v31 ^ ((v31 << 16) ^ 0x6D950000) & (((v30 ^ 0x68612485) << 8) & 0x69790000 ^ (((v30 ^ 0x68612485) << 8) ^ 0x79ED0000) & (v30 ^ 0x68612485) ^ 0x100000)));
  v33 = v32 ^ 0x1B89BA9F;
  v34 = ((v32 ^ 0x7EADD62) - 476276733) ^ ((v32 ^ 0x9FB34736) + 2076508759) ^ ((v32 ^ 0xEAAC2940) + 249195553);
  v35 = ((v34 + 1764882398) ^ 0xFCCF8154) & (2 * ((v34 + 1764882398) & 0xF0E00251)) ^ (v34 + 1764882398) & 0xF0E00251;
  v36 = ((2 * ((v34 + 1764882398) ^ 0x3C0F85F6)) ^ 0x99DF0F4E) & ((v34 + 1764882398) ^ 0x3C0F85F6) ^ (2 * ((v34 + 1764882398) ^ 0x3C0F85F6)) & 0xCCEF87A6;
  v37 = v36 ^ 0x442080A1;
  v38 = (v36 ^ 0x80A08325) & (4 * v35) ^ v35;
  v39 = ((4 * v37) ^ 0x33BE1E9C) & v37 ^ (4 * v37) & 0xCCEF87A4;
  v40 = (v39 ^ 0xAE0683) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0xCC418123)) ^ 0xCEF87A70) & (v39 ^ 0xCC418123) ^ (16 * (v39 ^ 0xCC418123)) & 0xCCEF87A0;
  v42 = v40 ^ 0xCCEF87A7 ^ (v41 ^ 0xCCE80200) & (v40 << 8);
  v43 = v34
      + 1511127600
      + ((((v34 + 1764882398) ^ (2
                               * ((v42 << 16) & 0x4CEF0000 ^ v42 ^ ((v42 << 16) ^ 0x7A70000) & (((v41 ^ 0x78587) << 8) & 0x4CEF0000 ^ 0x680000 ^ (((v41 ^ 0x78587) << 8) ^ 0xEF870000) & (v41 ^ 0x78587))))) >> 14) ^ 0xFFFE7E3B);
  v44 = v43 - (v43 >> 3);
  LODWORD(STACK[0x63D8]) = v10;
  v45 = (v44 - 407570142 - ((2 * v44) & 0xCF69F244)) ^ v10;
  LODWORD(STACK[0x63D0]) = v44;
  v46 = v44 + 1529003327 - ((v44 + 1529003327) >> 12) - ((v44 + 1529003327 - ((v44 + 1529003327) >> 12)) >> 8);
  LODWORD(STACK[0x69D0]) = v12;
  LODWORD(STACK[0x69C0]) = v46;
  v47 = v46 + 1958927911 + ((v46 + 1958927911) >> 9) - ((v46 + 1958927911 + ((v46 + 1958927911) >> 9)) >> 7);
  v48 = v47 - 1678084874 - ((2 * v47) & 0x37F4E9EC);
  v49 = (((v48 ^ 0xEA6BDDD9) + 362029607) ^ ((v48 ^ 0xC8007CC4) + 939492156) ^ ((v48 ^ 0xB991D5EB) + 1181624853))
      - 439329520;
  v50 = v49 - (v49 >> 12) + ((v49 - (v49 >> 12)) >> 8);
  v51 = v50 + 922220068 - ((2 * v50) & 0x6DEFEC48);
  v52 = (((v51 ^ 0x19455F4E) - 423976782) ^ ((v51 ^ 0xB156A33) - 185952819) ^ ((v51 ^ 0x24A7C359) - 614974297))
      - 2079094743;
  v53 = v52 + (v52 >> 9) - ((v52 + (v52 >> 9)) >> 8);
  LODWORD(STACK[0x63C8]) = v51;
  v54 = (4 * (v51 ^ (v45 + 922220068 + (~(2 * v45) | 0x121013B7) + 1))) & 0xCEE73E5C;
  LODWORD(STACK[0x69A0]) = 4 * (v46 ^ v12 ^ v53);
  LODWORD(STACK[0x69B0]) = v53;
  v55 = (v53 ^ 0xE4F29644) + ((v53 ^ 0xE4F29644) >> 15) + (((v53 ^ 0xE4F29644) + ((v53 ^ 0xE4F29644) >> 15)) >> 7);
  v56 = STACK[0x6430];
  v57 = v54 ^ LODWORD(STACK[0x6430]);
  v58 = STACK[0x6800];
  v59 = LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x68B0]) ^ 0xBD019570;
  LODWORD(STACK[0x63B8]) = v55;
  LODWORD(STACK[0x6A00]) = v33;
  LODWORD(STACK[0x6870]) = v48;
  LODWORD(STACK[0x63B0]) = 4 * (v48 ^ v33 ^ (v55 - ((2 * v55) & 0x250CFAFA) + 847674749));
  v60 = STACK[0x67C0];
  v61 = LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x63C0]) = v59;
  v62 = (4 * v59) & 0xCEE73E5C ^ 0x8A22C650;
  LODWORD(STACK[0x69F0]) = v57 & 0x191ACD9B ^ v56 & 1;
  v63 = (((2 * ((4 * v58) & 0xCEE73E5C ^ 0x4052214)) | 0x8E4108FA) - ((4 * v58) & 0xCEE73E5C ^ 0x4052214) + 954170243) ^ 0x61250237;
  v64 = (4 * v60) & 0xCEE73E5C ^ LODWORD(STACK[0x64D0]);
  v65 = LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x67D0]);
  v66 = STACK[0x6960];
  LODWORD(STACK[0x6990]) = v64 - 2 * (v64 & 0x316BF3C7 ^ STACK[0x64D0] & 2) - 1318325307;
  v67 = (4 * (v65 ^ v66)) & 0xCEE73E5C ^ 0xD0628C45;
  v68 = STACK[0x68D0];
  v69 = STACK[0xDAA0];
  v70 = (918333780
       - ((4 * v66) & 0xCEE73E5C ^ 0xC044081C | 0x36BCA954)
       + ((4 * v66) & 0xCEE73E5C ^ 0xC044081C | 0xC94356AB)) ^ 0xDD8250A9;
  v71 = *(_QWORD *)(STACK[0xDAA0] + 8 * (0x4F71B1F8 % STACK[0x68D0]));
  v72 = *(_QWORD *)(STACK[0xDAA0]
                  + 8
                  * (((((v71 ^ 0xC2869EABCF498084) + 0x1F1D864AE9DF859FLL) ^ ((v71 ^ 0x1896BC6C603D69EDLL)
                                                                              - 0x3AF25B72B9549308) ^ ((v71 ^ 0xA96351B4DC079A1ALL) + 0x74F84955FA919F01))
                    + 0x5117946E0DDE881FLL)
                   % STACK[0x68D0]));
  v73 = *(_QWORD *)(STACK[0xDAA0]
                  + 8
                  * (((((v72 ^ 0x120BFB12377E6C0ELL) + 0x52F64BF54C258963) ^ ((v72 ^ 0x29514505A7235298)
                                                                              + 0x69ACF5E2DC78B7F5) ^ ((v72 ^ 0x4829CD64E32E4DE5uLL) + 0x8D47D839875A88ALL))
                    - 0x338EC39338F8F1BELL)
                   % STACK[0x68D0]));
  LODWORD(STACK[0x63A8]) = ((2 * v70) | 0x10A8B668) - v70 - 139746100;
  STACK[0x6A20] = v69;
  v74 = *(_QWORD *)(v69
                  + 8
                  * (((((v73 ^ 0xDE46C83B77A76B43) - 0x598FE538DC56F9F3) ^ ((v73 ^ 0x1CD5C420E92DEDA1)
                                                                              + 0x64E316DCBD2380EFLL) ^ ((v73 ^ 0xB1E07F68EDF9F591) - 0x3629526B46086721))
                    - 0xB45A18E66D95B32)
                   % v68));
  LODWORD(STACK[0x64D0]) = v62;
  LODWORD(STACK[0x6980]) = (2 * v62) & 0x88493CB8;
  LODWORD(STACK[0x69E0]) = v57 + 421186970;
  v75 = ((((v74 ^ 0x2A820AE22ABEF5A7) - 0x37F3B72E181BA8D9) ^ ((v74 ^ 0x4C03A93C60ED7B55) - 0x517214F05248262BLL) ^ ((v74 ^ 0x15F2D0AD3920FD81uLL) - 0x8836D610B85A0FFLL))
       + 0x6E02CEBFDD65062FLL)
      % v68;
  LODWORD(STACK[0x6430]) = v63;
  LODWORD(STACK[0x6398]) = 2 * v63;
  LODWORD(STACK[0x68D0]) = (4 * v61) & 0xCEE73E5C;
  LODWORD(STACK[0x63A0]) = (v67 - 1) & 0xCEE73E5C;
  LODWORD(STACK[0x6A40]) = ((((v75 - ((2 * v75) & 0x13646A1A) + 699544845) ^ 0xFFC83370) - 1484744839) ^ (((v75 - ((2 * v75) & 0x13646A1A) + 699544845) ^ 0xCAB02217) - 1829206496) ^ (((v75 - ((2 * v75) & 0x13646A1A) + 699544845) ^ 0x1CCA246A) + 1149403235))
                         - 602013665;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 12))();
}

uint64_t sub_100AB33BC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  int v4;
  int v5;

  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6A40]) < a3;
  v4 = STACK[0x6A70];
  STACK[0x6AC0] = (LODWORD(STACK[0x6A70]) - 3239);
  v5 = (v3 + 141129613) < LODWORD(STACK[0x6A40]);
  if (LODWORD(STACK[0x6A30]) != (v3 + 141129613) < 0x4E189125)
    v5 = STACK[0x6A30];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((108 * (v5 ^ 1)) ^ v4)) - 12))();
}

uint64_t sub_100AB6598()
{
  unsigned int v0;

  LODWORD(STACK[0x68C0]) = LODWORD(STACK[0x65C8]) ^ 0x2EB6EFE6;
  v0 = STACK[0x63B0] & 0xCEE73E5C;
  LODWORD(STACK[0x6A20]) = LODWORD(STACK[0x64D0]) - 734748802;
  LODWORD(STACK[0x6430]) = -2026224054 - LODWORD(STACK[0x6430]) + (LODWORD(STACK[0x6398]) | 0xF18B736C);
  LODWORD(STACK[0x6A00]) ^= LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x64E0]) ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x63A8]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x63B8]) ^ v0;
  STACK[0x6A70] = STACK[0xDAA0];
  LODWORD(STACK[0x6A40]) = (((LODWORD(STACK[0x6920]) ^ 0xF0EF05C1) + 1605534068) ^ ((LODWORD(STACK[0x6920]) ^ 0x53EB4BCA)
                                                                                  - 55128199) ^ ((LODWORD(STACK[0x6920]) ^ 0xA37D3ED2)
                                                                                               + 203471457))
                         + 1853453935;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]))();
}

uint64_t sub_100AB6764(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  _BOOL4 v63;

  v7 = STACK[0x6A40];
  v8 = LODWORD(STACK[0x6A40]) < v6;
  v9 = (STACK[0x6AC0] + 197881622) & 0xF43477FF;
  v10 = (a1 | ((unint64_t)(a1 < v4) << 32)) + 0x2D70A8080F8A8D1;
  STACK[0x6A30] = v9;
  v11 = (((*(_QWORD *)(STACK[0x6A70] + 8 * (v9 + v10) - 0x16B85406353F3888) ^ 0x190B8B9F59D676B2)
        - 0x293BC3FC24634082) ^ ((*(_QWORD *)(STACK[0x6A70] + 8 * (v9 + v10) - 0x16B85406353F3888) ^ 0xF3F8CB9E3D1E962CLL)
                                 + 0x3C377C02BF545FE4) ^ ((*(_QWORD *)(STACK[0x6A70]
                                                                       + 8 * (v9 + v10)
                                                                       - 0x16B85406353F3888) ^ 0x9980337217BB93EDLL)
                                                          + 0x564F84EE95F15A23))
      * a4
      - 0x7A8E0BBD543E36B4;
  v12 = (v11 ^ 0xC012C19599DA7A57) & (2 * (v11 & 0xE414E5C401D27B67)) ^ v11 & 0xE414E5C401D27B67;
  v13 = ((2 * (v11 ^ 0xC01A0B1D9B5E8CDFLL)) ^ 0x481DDDB33519EF70) & (v11 ^ 0xC01A0B1D9B5E8CDFLL) ^ (2 * (v11 ^ 0xC01A0B1D9B5E8CDFLL)) & 0x240EEED99A8CF7B8;
  v14 = v13 ^ 0x240222488A841088;
  v15 = (v13 ^ 0x48C100008E730) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x903BBB666A33DEE0) & v14 ^ (4 * v14) & 0x240EEED99A8CF7B8;
  v17 = (v16 ^ 0xAAA400A00D6A0) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x24044499908C2118)) ^ 0x40EEED99A8CF7B80) & (v16 ^ 0x24044499908C2118) ^ (16 * (v16 ^ 0x24044499908C2118)) & 0x240EEED99A8CF7B0;
  v19 = (v18 ^ 0xEEC99888C7300) & (v17 << 8) ^ v17;
  v20 = (((v18 ^ 0x2400024012008438) << 8) ^ 0xEEED99A8CF7B800) & (v18 ^ 0x2400024012008438) ^ ((v18 ^ 0x2400024012008438) << 8) & 0x240EEED99A8CF700;
  v21 = v19 ^ 0x240EEED99A8CF7B8 ^ (v20 ^ 0x40EC89888840000) & (v19 << 16);
  v22 = v11 ^ (2
             * ((v21 << 32) & 0x240EEED900000000 ^ v21 ^ ((v21 << 32) ^ 0x1A8CF7B800000000) & (((v20 ^ 0x20002641120847B8) << 16) & 0x240EEED900000000 ^ 0x6645100000000 ^ (((v20 ^ 0x20002641120847B8) << 16) ^ 0x6ED99A8C00000000) & (v20 ^ 0x20002641120847B8))));
  v23 = v10
      - 0x9636E6AFD3A55BALL
      + (((v22 ^ v5 ^ 0xA42E98ABD7062831) + 0x6C8E99309121823DLL) ^ ((v22 ^ v5 ^ 0x167512E4A4EF12ACLL)
                                                                     - 0x212AEC801D37475ELL) ^ ((v22 ^ v5 ^ 0x1E4B7F084722AE8ALL)
                                                                                              - 0x2914816CFEFAFB78));
  v24 = ((2 * (v23 ^ 0x65D10E7145378D8CLL)) ^ 0x8814C2F90D23B172) & (v23 ^ 0x65D10E7145378D8CLL) ^ (2 * (v23 ^ 0x65D10E7145378D8CLL)) & 0xC40A617C8691D8B8;
  v25 = (v23 ^ 0x25D34E69C33705A4) & (2 * (v23 & 0xA1DB6F0DC3A65535)) ^ v23 & 0xA1DB6F0DC3A65535;
  v26 = ((4 * (v24 ^ 0x440A210482904889)) ^ 0x102985F21A4762E4) & (v24 ^ 0x440A210482904889) ^ (4 * (v24 ^ 0x440A210482904889)) & 0xC40A617C8691D8B8;
  v27 = (v24 ^ 0x8000407804019030) & (4 * v25) ^ v25;
  v28 = (v26 ^ 0x80170020140A0) & (16 * v27);
  v29 = ((16 * (v26 ^ 0xC402600C84909819)) ^ 0x40A617C8691D8B90) & (v26 ^ 0xC402600C84909819) ^ (16 * (v26 ^ 0xC402600C84909819)) & 0xC40A617C8691D8B0;
  v30 = (v29 ^ 0x4002014800118800) & ((v28 ^ v27) << 8) ^ v28 ^ v27;
  v31 = (((v29 ^ 0x8408603486805029) << 8) ^ 0xA617C8691D8B900) & (v29 ^ 0x8408603486805029) ^ ((v29 ^ 0x8408603486805029) << 8) & 0xC40A617C8691D800;
  v32 = v30 ^ 0xC40A617C8691D8B9 ^ (v31 ^ 0x600480900000) & (v30 << 16);
  v33 = (v23 ^ (2
              * ((v32 << 32) & 0x440A617C00000000 ^ v32 ^ ((v32 << 32) ^ 0x691D8B900000000) & (((v31 ^ 0xC40A0178060140B9) << 16) & 0x440A617C00000000 ^ 0x402616C00000000 ^ (((v31 ^ 0xC40A0178060140B9) << 16) ^ 0x617C869100000000) & (v31 ^ 0xC40A0178060140B9))))) >> 32;
  v34 = v23
      - 0x48236DF60BA1722FLL
      + (((v33 ^ 0xB58E916657F958BFLL) - 0x268CB59DF0F64B3BLL) ^ ((v33 ^ 0x5F90725EA7013358) + 0x336DA95AFFF1DF24) ^ ((v33 ^ 0xEA1EE338D1374663) - 0x791CC7C3763855E7));
  v35 = ((2 * (v34 ^ 0x4D272C730C5BE3B9)) ^ 0x604C5B18B4A7CDBALL) & (v34 ^ 0x4D272C730C5BE3B9) ^ (2 * (v34 ^ 0x4D272C730C5BE3B9)) & 0x30262D8C5A53E6DCLL;
  v36 = (v34 ^ 0x7D252DFF044BE171) & (2 * (v34 & 0x7D0101FF56080564)) ^ v34 & 0x7D0101FF56080564;
  v37 = ((4 * (v35 ^ 0x102224844A502245)) ^ 0xC098B631694F9B74) & (v35 ^ 0x102224844A502245) ^ (4 * (v35 ^ 0x102224844A502245)) & 0x30262D8C5A53E6DCLL;
  v38 = (v35 ^ 0x2004090810000490) & (4 * v36) ^ v36;
  v39 = (v37 ^ 0x240048438240) & (16 * v38);
  v40 = ((16 * (v37 ^ 0x3026098C12106489)) ^ 0x262D8C5A53E6DD0) & (v37 ^ 0x3026098C12106489) ^ (16 * (v37 ^ 0x3026098C12106489)) & 0x30262D8C5A53E6D0;
  v41 = (v40 ^ 0x22088400126400) & ((v39 ^ v38) << 8) ^ v39 ^ v38;
  v42 = (((v40 ^ 0x300425085A41820DLL) << 8) ^ 0x262D8C5A53E6DD00) & (v40 ^ 0x300425085A41820DLL) ^ ((v40 ^ 0x300425085A41820DLL) << 8) & 0x30262D8C5A53E600;
  v43 = v41 ^ 0x30262D8C5A53E6DDLL ^ (v42 ^ 0x20240C0852420000) & (v41 << 16);
  v44 = v34 ^ (2
             * ((v43 << 32) & 0x30262D8C00000000 ^ v43 ^ ((v43 << 32) ^ 0x5A53E6DD00000000) & (((v42 ^ 0x10022184081122DDLL) << 16) & 0x30262D8C00000000 ^ 0x1022258C00000000 ^ (((v42 ^ 0x10022184081122DDLL) << 16) ^ 0x2D8C5A5300000000) & (v42 ^ 0x10022184081122DDLL))));
  v45 = v34
      + 0x545BC60C0827835BLL
      + ((((v44 >> 16) ^ 0xDC99A8642A8C5371) + 0x6674A24B12DEA7EDLL) ^ (((v44 >> 16) ^ 0x44912C15D814EA53)
                                                                        - 0x183D9C51FB9E131) ^ (((v44 >> 16) ^ 0x9808B938E1675B8DLL)
                                                                                                + 0x22E5B317D935AF11));
  v46 = (v45 ^ 0x6DB802688AA263D6) & (2 * (v45 & 0x6DB8048D22336BD6)) ^ v45 & 0x6DB8048D22336BD6;
  v47 = ((2 * (v45 ^ 0x7D880B6ACAA4A372)) ^ 0x20601FCFD12F9148) & (v45 ^ 0x7D880B6ACAA4A372) ^ (2 * (v45 ^ 0x7D880B6ACAA4A372)) & 0x10300FE7E897C8A4;
  v48 = v47 ^ 0x10100020289048A4;
  v49 = (v47 ^ 0x20064580078000) & (4 * v46) ^ v46;
  v50 = ((4 * v48) ^ 0x40C03F9FA25F2290) & v48 ^ (4 * v48) & 0x10300FE7E897C8A4;
  v51 = ((16 * (v50 ^ 0x103000604880C824)) ^ 0x300FE7E897C8A40) & (v50 ^ 0x103000604880C824) ^ (16 * (v50 ^ 0x103000604880C824)) & 0x10300FE7E897C8A0;
  v52 = (v51 ^ 0xE6688148800) & (((v50 ^ 0xF87A0170080) & (16 * v49) ^ v49) << 8) ^ (v50 ^ 0xF87A0170080) & (16 * v49) ^ v49;
  v53 = (((v51 ^ 0x10300181608340A4) << 8) ^ 0x300FE7E897C8A400) & (v51 ^ 0x10300181608340A4) ^ ((v51 ^ 0x10300181608340A4) << 8) & 0x10300FE7E897C800;
  v54 = v52 ^ 0x10300FE7E897C8A4 ^ (v53 ^ 0x100007E080800000) & (v52 << 16);
  v55 = (v45 ^ (2
              * ((v54 << 32) & 0x10300FE700000000 ^ v54 ^ ((v54 << 32) ^ 0x6897C8A400000000) & (((v53 ^ 0x300807681748A4) << 16) & 0x10300FE700000000 ^ 0x1010076000000000 ^ (((v53 ^ 0x300807681748A4) << 16) ^ 0xFE7E89700000000) & (v53 ^ 0x300807681748A4))))) >> 8;
  LODWORD(v43) = v45
               + (((v55 ^ 0x54A81E4) - 291061357) ^ ((v55 ^ 0x4679C943) - 1382708938) ^ ((v55 ^ 0x49C0545D) - 1574169556));
  v56 = (2 * ((v43 - 1296013203) & 0x8E53A6DC)) & ((v43 - 1296013203) ^ 0x8C1304DE) ^ (v43 - 1296013203) & 0x8E53A6DC;
  v57 = ((2 * ((v43 - 1296013203) ^ 0x94364D46)) ^ 0x34CBD734) & ((v43 - 1296013203) ^ 0x94364D46) ^ (2 * ((v43 - 1296013203) ^ 0x94364D46)) & 0x1A65EB9A;
  v58 = (v57 ^ 0x10618318) & (4 * v56) ^ v56;
  v59 = ((4 * (v57 ^ 0xA24288A)) ^ 0x6997AE68) & (v57 ^ 0xA24288A) ^ (4 * (v57 ^ 0xA24288A)) & 0x1A65EB98;
  v60 = (v59 ^ 0x805AA10) & (16 * v58) ^ v58;
  v61 = ((16 * (v59 ^ 0x12604192)) ^ 0xA65EB9A0) & (v59 ^ 0x12604192) ^ (16 * (v59 ^ 0x12604192)) & 0x1A65EB90;
  LODWORD(STACK[0x6A90]) = (v43 - 1296013203) ^ (2
                                               * ((v61 ^ 0x244A900) & (v60 << 8) ^ v60 ^ ((((v61 ^ 0x1821421A) << 8) ^ 0x65EB0000) & (v61 ^ 0x1821421A) ^ ((v61 ^ 0x1821421A) << 8) & 0x1A65EB00 ^ 0x610000) & (((v61 ^ 0x244A900) & (v60 << 8) ^ v60) << 16)));
  v62 = a1 - 672181949;
  if (v8 != v62 < 0x1D9E6ADB)
    v63 = v8;
  else
    v63 = v7 > v62;
  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * (int)(((2 * !v63) | (4 * !v63)) ^ STACK[0x6AC0])))(v62 + 672181950);
}

uint64_t sub_100AB9820()
{
  unint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  v0 = STACK[0x6A30];
  v1 = STACK[0x69A0] & 0xCEE73E5C;
  LODWORD(STACK[0x63B8]) = LODWORD(STACK[0x6A20]) - LODWORD(STACK[0x6980]);
  LODWORD(STACK[0x6920]) = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69B0]) ^ v1;
  STACK[0x6A70] = ((_DWORD)v0 - 9374) | 0x2484u;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0]
                                            + ((*(unsigned __int8 *)(STACK[0x6AB0] + 12) + 2) & 0xFLL))
                                 + 5) & 0xF))
                    + 13) & 0xF))
       + 3) & 0xE) != 0)
    v2 = (*(_BYTE *)(STACK[0x6AB0]
                   + ((*(_BYTE *)(STACK[0x6AB0]
                                + ((*(_BYTE *)(STACK[0x6AB0]
                                             + ((*(unsigned __int8 *)(STACK[0x6AB0] + 12) + 2) & 0xFLL))
                                  + 5) & 0xF))
                     + 13) & 0xF))
        + 3) & 0xF;
  else
    v2 = 1;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0) - 4);
  STACK[0x6AC0] = v2;
  STACK[0x6A30] = v2 - 1;
  return v3();
}

uint64_t sub_100ABA5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;

  v10 = (*(unsigned __int8 *)(a5 + v7) * v6) ^ v5;
  LODWORD(STACK[0x6A90]) = STACK[0x6A70] ^ 0x7440;
  v11 = v7
      - 1124430708
      + v10
      - ((v10 + v7) >> 16)
      + ((v10 + (_DWORD)v7 - ((v10 + v7) >> 16)) >> 8);
  LODWORD(STACK[0x6A40]) = ((v11 >> 2) & v8) + v9 - ((2 * (v11 >> 2)) & 0x440C6812);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((42 * (STACK[0x6A30] != v7)) ^ STACK[0x6A70]))
                            - 4))();
}

uint64_t sub_100ABB194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x63B0]) = LODWORD(STACK[0x69E0]) - 2 * LODWORD(STACK[0x69F0]);
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A90])) - 8))(0, STACK[0x6AC0] - 1, 931560745, a5, a5, -562215354, -1124430708, STACK[0x6AC0]);
}

uint64_t sub_100ABB20C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  LODWORD(STACK[0x6A10]) = v7;
  LODWORD(STACK[0x6A70]) = v6;
  LODWORD(STACK[0x6A30]) = v4;
  LODWORD(STACK[0x6A20]) = *(unsigned __int8 *)(a4 + v8) * v5;
  LODWORD(STACK[0x6A40]) = (LODWORD(STACK[0x6A90]) - 3524) | 0x412;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                + 8
                                                                                * ((13583 * (v8 + a1 == 15)) ^ LODWORD(STACK[0x6A90])))
                                                                    - 8))(a1 + 1, (a2 + 1), a3 + 1, a4 + 1);
}

uint64_t sub_100ABBDBC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t (*v74)(_QWORD);

  LODWORD(STACK[0x6A70]) = v4;
  v9 = (v8 + v2 + ((v2 + a2 - ((v2 + a2) >> 16)) >> 8) - ((v2 + a2) >> 16) - v5) ^ 0xD0F1D255;
  v10 = v9 + (v9 >> 10) - ((v9 + (v9 >> 10)) >> 4);
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6400]) - LODWORD(STACK[0x63F8]);
  v11 = v10 + 1969867322 - ((2 * v10) & 0xEAD39474);
  v12 = (((v11 ^ 0xF1E86681) + 236427647) ^ ((v11 ^ 0x91907BEC) + 1852802068) ^ ((v11 ^ 0x1511D757) - 353490775))
      + 426407695;
  v13 = v12 + (v12 >> 12) + ((v12 + (v12 >> 12)) >> 2);
  v14 = v6 & (v13 >> 2) ^ v13 ^ v3;
  v15 = ((v14 ^ 0xFB94909D) & 0xF1040001 ^ 0xEBAD4900) + ((v14 ^ 0xFB94909D) & 0x4094BC ^ 0x8011) - 1;
  v16 = v13 + 1550318686 - ((v13 + 1550318686) >> 13) + ((v13 + 1550318686 - ((v13 + 1550318686) >> 13)) >> 4);
  v17 = ((v15 & 0x200D929C ^ 0x2400A20C) + (v15 ^ 0xCB9D1991) - ((v15 ^ 0xCB9D1991) & 0x2024D29C)) ^ 0x24193294 | (((v14 ^ 0xFB94909D) & 0xEB96B42 ^ 0xC090802) + ((v14 ^ 0xFB94909D) & 0xA110900 ^ 0x2254158D) - (((v14 ^ 0xFB94909D) & 0xEB96B42 ^ 0xC090802) & 0xA110900)) & 0x3FFFFF42 ^ 0x224D3C40;
  v18 = v16 - 258608988 - ((v16 - 258608988) >> 14) - ((v16 - 258608988 - ((v16 - 258608988) >> 14)) >> 3);
  v20 = v18 + 1529003327 - ((v18 + 1529003327) >> 12) - ((v18 + 1529003327 - ((v18 + 1529003327) >> 12)) >> 8);
  v21 = (v20 >> 2) & 0x3EBFB60D ^ v20;
  v22 = (-996003751 - (v14 & 0x20000)) ^ 0xC4A23059;
  v23 = v20 + 1958927911 + ((v20 + 1958927911) >> 9) - ((v20 + 1958927911 + ((v20 + 1958927911) >> 9)) >> 7);
  if ((v22 & v21) != 0)
    v24 = -v22;
  else
    v24 = (-996003751 - (v14 & 0x20000)) ^ 0xC4A23059;
  v25 = v24 + v21;
  v26 = v23 + 1238755354 - ((v23 + 1238755354) >> 12) + ((v23 + 1238755354 - ((v23 + 1238755354) >> 12)) >> 8);
  v27 = v26 + 1066876757 - ((2 * v26) & 0x7F2E7EAA);
  v19 = (v18 + 1969867322 - ((2 * v18) & 0xEAD39474)) ^ v11;
  v28 = ((v27 ^ (v19 + 1066876757 - ((2 * v19) & 0x7F2E7EAA))) >> 2) ^ 0x99BA6E34;
  v29 = ((v28 & 0xBF43DC4A) - (v28 & 0x1C008800) + (v28 & 0x1C008800 ^ 0x1C148834)) ^ v28 & 0x81FC6A47;
  v30 = (v29 & 0xC39C80D ^ 0x8290989) + (v29 ^ 0x8516C434) - ((v29 ^ 0x8516C434) & 0xC39C80D);
  v31 = (((v27 ^ 0x46437014) - 1178824724) ^ ((v27 ^ 0x8982F6D1) + 1987905839) ^ ((v27 ^ 0xF056B990) + 262751856))
      - 1934438054;
  v32 = STACK[0x6880];
  v34 = (((2 * ((v32 >> 2) & 0x3EBFB60D ^ 0x2EAA0204)) | 0x17980D12)
       - ((v32 >> 2) & 0x3EBFB60D ^ 0x2EAA0204)
       + 1949563255) ^ 0xB90E24EB;
  v35 = (((2 * v34) & 0x7D8A7BDE) - v34 + 1094369808) ^ 0x4173427A;
  v36 = (((-1578671299 - (STACK[0x6880] & 0x80 | 0x4C460)) ^ 0x269CDD9C) + 1593531380) ^ (((-1578671299
                                                                                          - (STACK[0x6880] & 0x80 | 0x4C460)) ^ 0x4C72A786)
                                                                                        + 873800170) ^ (((-1578671299 - (STACK[0x6880] & 0x80 | 0x4C460)) ^ 0xCB0CE4C7) - 1284808023);
  v37 = v36 - 1505983416;
  v38 = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x64C0]) ^ v7 ^ v11 ^ v18 ^ v27 ^ v30;
  v39 = (v37 ^ 0xD4BE4AF1) & (2 * (v37 & 0x803E6305)) ^ v37 & 0x803E6305;
  v40 = ((2 * (v37 ^ 0xD4AECEFB)) ^ 0xA9215BFC) & (v37 ^ 0xD4AECEFB) ^ (2 * (v37 ^ 0xD4AECEFB)) & 0x5490ADFE;
  v41 = v40 ^ 0x5490A402;
  v42 = (v40 ^ 0x5400283E) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0x5242B7F8) & v41 ^ (4 * v41) & 0x5490ADFC;
  v44 = (v43 ^ 0x5000A5F6) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0x4900806)) ^ 0x490ADFE0) & (v43 ^ 0x4900806) ^ (16 * (v43 ^ 0x4900806)) & 0x5490ADF0;
  v46 = v44 ^ 0x5490ADFE ^ (v45 ^ 0x40008D1E) & (v44 << 8);
  v47 = (v36 - 1505983416) ^ (2
                            * ((v46 << 16) & 0x54900000 ^ v46 ^ ((v46 << 16) ^ 0x2DFE0000) & (((v45 ^ 0x1490201E) << 8) & 0x54900000 ^ 0x44100000 ^ (((v45 ^ 0x1490201E) << 8) ^ 0x90AD0000) & (v45 ^ 0x1490201E))));
  v48 = v47 & 0x306DF263 ^ 0x43062 ^ (v38 ^ 0xCD92C345) & (v47 ^ 0x203F38F9);
  v49 = v35 - ((2 * v35) & 0x9432074A) + 1243153317;
  if (v48 - ((2 * v48) & 0x80963D98) == 538378243)
    v50 = v36 - 1505983416;
  else
    v50 = 1497806254 - v36;
  v51 = (((v38 ^ 0x151F6297) + 329617388) ^ ((v38 ^ 0x3AC4B68A) + 1014914039) ^ ((v38 ^ 0xD224E53B) - 727840696))
      - 1641722601
      + v50;
  v52 = (v51 ^ 0xE48A315A) & (2 * (v51 & 0xE6D33993)) ^ v51 & 0xE6D33993;
  v53 = ((2 * (v51 ^ 0x2DAC427A)) ^ 0x96FEF7D2) & (v51 ^ 0x2DAC427A) ^ (2 * (v51 ^ 0x2DAC427A)) & 0xCB7F7BE8;
  v54 = v53 ^ 0x49010829;
  v55 = (v53 ^ 0x825C62C0) & (4 * v52) ^ v52;
  v56 = ((4 * v54) ^ 0x2DFDEFA4) & v54 ^ (4 * v54) & 0xCB7F7BE8;
  v57 = (v56 ^ 0x97D6BA0) & (16 * v55) ^ v55;
  v58 = ((16 * (v56 ^ 0xC2021049)) ^ 0xB7F7BE90) & (v56 ^ 0xC2021049) ^ (16 * (v56 ^ 0xC2021049)) & 0xCB7F7BE0;
  v59 = v57 ^ 0xCB7F7BE9 ^ (v58 ^ 0x83773A69) & (v57 << 8);
  v60 = (v59 << 16) & 0x4B7F0000 ^ v59 ^ ((v59 << 16) ^ 0x7BE90000) & (((v58 ^ 0x48084169) << 8) & 0x4B7F0000 ^ (((v58 ^ 0x48084169) << 8) ^ 0x7F7B0000) & (v58 ^ 0x48084169) ^ 0x40000);
  v61 = STACK[0x68F0];
  v62 = STACK[0x65F0];
  v33 = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x68B0]);
  v63 = (((2 * (v32 & 0xFFFFFF7F ^ 0x34700112)) & 0xAC0F7C62) - (v32 & 0xFFFFFF7F ^ 0x34700112) - 1443348146) ^ v33 ^ (((v33 >> 2) & 0x3EBFB60D ^ 0x16A20001) - ((2 * ((v33 >> 2) & 0x3EBFB60D ^ 0x16A20001)) & 0x478040A) + 1115425525) ^ 0xBAE2ECB9 ^ v49;
  v64 = (((LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6770])) ^ LODWORD(STACK[0x65F0])) >> 2) & 0x3EBFB60D ^ 0x14A53608;
  v65 = v51 ^ (v63 + 1904389471 - ((2 * v63) & 0xE3055ABE));
  v66 = STACK[0x68A0];
  v67 = ((LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6840])) ^ LODWORD(STACK[0x68A0])) >> 2;
  v68 = ((v67 & 0x3EBFB60D ^ 0x2C231000)
       + (v67 & 0x12200000 ^ 0xD2004170)
       - ((v67 & 0x3EBFB60D ^ 0x2C231000) & 0x12200000)) ^ 0xD3364170;
  v69 = (218373328 - (v68 | 0xD041CD0) + (v68 | 0xF2FBE32F)) ^ 0xF5DAE12F;
  v70 = (((LODWORD(STACK[0x6840]) >> 2) & 0x18A6A200 ^ 0x182668D3) + ((LODWORD(STACK[0x6840]) >> 2) & 0x2619140D) - 1) ^ 0x2200000D;
  LODWORD(STACK[0x6A10]) = v23;
  v71 = v31 + (v31 >> 9) - ((v31 + (v31 >> 9)) >> 8);
  v72 = (v71 ^ 0xE4F29644) + ((v71 ^ 0xE4F29644) >> 15) + (((v71 ^ 0xE4F29644) + ((v71 ^ 0xE4F29644) >> 15)) >> 7);
  LODWORD(STACK[0x6A90]) = v61 ^ LODWORD(STACK[0x64A0]) ^ (v62 >> 2) & 0x3EBFB60D ^ (v64
                                                                                   - ((2 * v64) & 0x79424C1A)
                                                                                   + 1021404767) ^ v25 ^ v17 ^ v71 ^ (v71 >> 2) & 0x3EBFB60D;
  v73 = ((v70 & 0x23F3051 ^ 0x2191801) + (v70 & 0x3C80860E ^ 0xD808203) - 1) ^ LODWORD(STACK[0x65C0]) ^ v66 ^ (v69 - 512574724 - ((2 * v69) & 0xC2E575F8)) ^ v16 ^ ((v23 ^ v16 ^ v72) >> 2) & 0x3EBFB60D ^ (v72 + 830846670 - ((2 * v72) & 0x630B6D9C));
  LODWORD(STACK[0x6A20]) = (v73 ^ 0x36E85DF3) & 0x23067C7F ^ v73 & 4;
  LODWORD(STACK[0x6A30]) = (v73 ^ 0x36E85DF3) + 587627643;
  STACK[0x6870] = LODWORD(STACK[0x6730]);
  v74 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A40])) - 12);
  LODWORD(STACK[0x69B0]) = v65 ^ (2 * v60);
  return v74(LODWORD(STACK[0x66B0]));
}

uint64_t sub_100ABCA30@<X0>(int a1@<W0>, int a2@<W3>, char a3@<W4>, uint64_t a4@<X6>, int a5@<W7>, char a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  char v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  int v29;

  v23 = STACK[0x6A40];
  v24 = *(_DWORD *)(*(_QWORD *)(a4 + 8 * (LODWORD(STACK[0x6A40]) - 18138)) + 4 * (a2 ^ 0x90u) - 12);
  v25 = ((v24 ^ 0xA707FE42) << ((LODWORD(STACK[0x6A40]) - 37) ^ 0xF3)) ^ v24 ^ (8 * (v24 ^ 0xA707FE42));
  v26 = v25 & 0x3FE1BB68 ^ 0x29C11200 ^ (v25 ^ a5) & v8;
  v27 = v25 ^ 0xC4B41807 ^ (v12 + 2 * (((2 * v26) & 0x253B8662) - v26) - 590);
  v28 = 4
      * (((((a2 ^ (2 * (a2 & v19))) & v22) >> v21) | ((a2 ^ (2 * (a2 & v19))) << a6)) ^ v11);
  *(_DWORD *)(STACK[0xDAC0] + v28) = v18 ^ v20 ^ 0x620B1696 ^ (((unint64_t)(v27 & v16) << STACK[0x6870]) | ((v27 & v17) >> a3));
  v29 = *(_DWORD *)(v10 + 4 * (a2 ^ 0x4Eu)) ^ v15;
  *(_DWORD *)(v7 + v28) = a1 ^ v6 ^ 0x38CCC7FC ^ (((v14 | (16 * v29)) ^ v29)
                                                + v9
                                                - (v13 & (2 * ((v14 | (16 * v29)) ^ v29))));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((119 * (a2 == 255)) ^ v23)) - 12))();
}

uint64_t sub_100ABCB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  char v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  char v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  char v149;
  int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  char v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  char v191;
  char v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  char v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  char v239;
  char v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  unsigned __int8 *v247;
  unint64_t v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  char v260;
  char v261;
  int v262;
  int v263;
  int v264;
  int v265;
  char v266;
  char v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  uint64_t v271;
  unsigned int v272;
  uint64_t v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  char v287;
  char v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unint64_t v301;
  unsigned int v302;
  unint64_t v303;
  int v304;
  unsigned int v305;
  unint64_t v306;
  unint64_t v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  unint64_t v311;
  unsigned int v312;
  int v313;
  uint64_t v314;
  unsigned int v315;
  uint64_t (*v316)(unint64_t);
  unint64_t v317;
  unint64_t v318;

  v8 = LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x66B8]);
  v9 = STACK[0x6800];
  v10 = STACK[0x6610];
  v11 = 2 * (v6 & (LODWORD(STACK[0x6800]) ^ 0x5CFC4982) ^ STACK[0x6610] & 0x287AC8B1);
  LODWORD(STACK[0x68A0]) = v11;
  v12 = ((v11 & 0x2000 ^ 0xE90E70CD) - 2105790978) ^ (v11 & 0x2000 | 0x74825DC9) ^ ((v11 & 0x2000 ^ 0xA6D660B1)
                                                                                  - 844874366);
  LODWORD(STACK[0x6740]) = v12;
  v13 = v12 - 1416134260;
  v14 = ((v12 - 1416134260) ^ 0xC4F79573) & (2 * ((v12 - 1416134260) & 0xE8F62143)) ^ (v12 - 1416134260) & 0xE8F62143;
  LODWORD(STACK[0x68B0]) = v12 - 1416134260;
  v15 = ((2 * ((v12 - 1416134260) ^ 0x85579571)) ^ 0xDB436864) & ((v12 - 1416134260) ^ 0x85579571) ^ (2 * ((v12 - 1416134260) ^ 0x85579571)) & 0x6DA1B432;
  v16 = (v15 ^ 0x41010000) & (4 * v14) ^ v14;
  v17 = ((4 * (v15 ^ 0x24A09412)) ^ 0xB686D0C8) & (v15 ^ 0x24A09412) ^ (4 * (v15 ^ 0x24A09412)) & 0x6DA1B430;
  v18 = (v17 ^ 0x24809002) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x49212432)) ^ 0xDA1B4320) & (v17 ^ 0x49212432) ^ (16 * (v17 ^ 0x49212432)) & 0x6DA1B430;
  v20 = v18 ^ 0x6DA1B432 ^ (v19 ^ 0x48010000) & (v18 << 8);
  v21 = v13 ^ (2
             * ((v20 << 16) & 0x6DA10000 ^ v20 ^ ((v20 << 16) ^ 0x34320000) & (((v19 ^ 0x25A0B412) << 8) & 0x6DA10000 ^ 0x4C010000 ^ (((v19 ^ 0x25A0B412) << 8) ^ 0x21B40000) & (v19 ^ 0x25A0B412))));
  v22 = ((v21 ^ 0x7BF54927) & (v9 ^ 0x989E1BF4) ^ v21 & 0xEC189AC7) == 1745881095;
  LODWORD(STACK[0x6860]) = (v5 - 9971) | 0x4210;
  v23 = v8 ^ (LODWORD(STACK[0x6A30]) - (LODWORD(STACK[0x6A20]) << (((v5 + 13) | 0x10) ^ 0x12)));
  LODWORD(STACK[0x6730]) = v23;
  v24 = STACK[0x63E8];
  v25 = STACK[0x6410];
  v26 = STACK[0x6408];
  v27 = STACK[0x64D8];
  v28 = STACK[0x64E8];
  v29 = STACK[0x65B8];
  v30 = STACK[0x6840];
  v31 = STACK[0x63E0];
  v32 = LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x64D8]) ^ LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x64E8]) ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x6840]) ^ (v25 - ((2 * v25) & 0xB6599AAC) + 1529662806) ^ LODWORD(STACK[0x6698]) ^ (v26 + 1940495277 - ((2 * v26) & 0xE753375A)) ^ LODWORD(STACK[0x63E0]);
  v33 = LODWORD(STACK[0x65E8]) ^ v9 ^ LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x65D0]) ^ ((v32 ^ 0x13F4ACAB)
                                                                                       + 324830087
                                                                                       + ((2
                                                                                         * ((v32 ^ 0x13F4ACAB) & 0x135C839F ^ v32 & 0x18)) ^ 0xFFFFFFEF)
                                                                                       + 1);
  v34 = LODWORD(STACK[0x6820]) ^ 0x4805CFB8 ^ LODWORD(STACK[0x68C0]) ^ ((v33 ^ 0xEB41EE28)
                                                                      + 902537693
                                                                      - 2 * ((v33 ^ 0xEB41EE28) & 0x35CBA1DF ^ v33 & 2));
  v35 = STACK[0x6420];
  v36 = LODWORD(STACK[0x6AC0]) ^ 0x369032CC ^ LODWORD(STACK[0x6420]) ^ ((v34 ^ LODWORD(STACK[0x69B0]))
                                                                      - 2013054815
                                                                      - ((2 * (v34 ^ LODWORD(STACK[0x69B0]))) & 0x10067142));
  v37 = LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x65D8]) ^ (LODWORD(STACK[0x6708]) - ((2 * LODWORD(STACK[0x6708])) & 0x6A3B8D70) - 1256339784) ^ LODWORD(STACK[0x66A0]) ^ ((v24 ^ LODWORD(STACK[0x67B0])) - 1776050245 - ((2 * (v24 ^ LODWORD(STACK[0x67B0]))) & 0x2C473F76)) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6A90]);
  v38 = v10;
  v39 = 2
      * ((((v37 ^ 0xD6EDB05A) & v6 ^ v10 & 0x51297F85) & 0x240C581B ^ 0x800)
       + (((v37 ^ 0xD6EDB05A) & v6 ^ v10 & 0x51297F85) & 0x5BF3A7E4 ^ 0xAF38361))
      - 2;
  v40 = v37 ^ 0x232F5905 ^ ((v39 ^ 0xB5B52DC2) - 1528064689 - 2 * ((v39 ^ 0xB5B52DC2) & 0x24EB96DE ^ v39 & 4) + 395);
  v41 = LODWORD(STACK[0x67F0]) - ((2 * LODWORD(STACK[0x67F0])) & 0xD7E1411E) - 336551793;
  v42 = STACK[0x65B0];
  v43 = LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6960]);
  v44 = STACK[0x6A00];
  LODWORD(STACK[0x63F8]) = v23 ^ 0xCBE53D64;
  v45 = v41 ^ v43 ^ v44 ^ v23 ^ 0xCBE53D64 ^ (v36 + 345870786 - ((2 * v36) & 0x293B2384));
  v46 = v6;
  v47 = STACK[0x6870];
  LODWORD(STACK[0x64A0]) = ((unint64_t)(v40 & STACK[0x66D0]) << STACK[0x6870]) + ((v40 & STACK[0x66C8]) >> a5);
  v48 = STACK[0x65F8];
  v49 = v45 ^ (2 * ((v45 ^ 0x488649F1) & (LODWORD(STACK[0x65F8]) ^ 0x14D7A851) ^ v45 & 0x963C7A5)) ^ 0xD882CAB3;
  v50 = v28 & 0xF0A6302 ^ 0x9006002 ^ (v38 ^ 0x77A5FE99) & (v28 ^ 0x193819BE);
  v51 = (2 * (((2 * v50) & 0x5447946C) - v50) + 733506450) ^ v28;
  v52 = STACK[0x66C8] & (v51 ^ 0x3290B02C) ^ 0xD28012F;
  v53 = STACK[0x6478];
  v54 = STACK[0x6970] & 0xB2EED1D0 | STACK[0x6478] & (v51 ^ 0x807E61FC);
  v55 = v49 & STACK[0x6478];
  v56 = (v49 & v7) >> STACK[0x66D8];
  v57 = STACK[0x6378];
  LODWORD(STACK[0x6368]) = STACK[0x6378] & 0x13;
  v58 = v7;
  LODWORD(STACK[0x6328]) = v57 & 0xC;
  LODWORD(STACK[0x6498]) = (v55 << (v57 & 0x13) << (v57 & 0xC)) | v56;
  v59 = ((-733753735 - v52 + ((2 * v52) & 0x5778630C)) ^ 0xD96BCF56) >> STACK[0x66D8];
  LODWORD(STACK[0x65C0]) = v57 & 0xD;
  LODWORD(STACK[0x6418]) = ((((v54 & 0xB5F0A245 ^ 0x25F02205) + (v54 ^ 0x9004C0C0) - ((v54 ^ 0x9004C0C0) & 0xB5F0A245)) ^ 0x971AB355) << (v57 & 0x12) << (v57 & 0xD))
                         + v59;
  v60 = v38;
  v61 = v29 ^ (2 * (v46 & (v29 ^ 0xFEBA227) ^ v38 & 0x16D3BB99));
  v62 = STACK[0x66D0] & (v61 ^ 0x6CE8037C);
  v63 = STACK[0x67E0];
  v64 = STACK[0x6890];
  v65 = STACK[0x6890] & 0x48E80CF4 ^ 0x40E80030 ^ v7 & (v61 ^ 0x70D72678);
  LODWORD(STACK[0x6400]) = (((1730285857 - (v65 | 0x67221121) + (v65 | 0x98DDEEDE)) ^ 0xD835EE7E) >> STACK[0x66D8]) | (((((v62 & 0xA402655E | STACK[0x67E0] & 0x4022150) ^ 0xA002451E) + ((v62 | STACK[0x67E0] & 0x54D729F0) ^ 0x145028E0) - (((v62 | STACK[0x67E0] & 0x54D729F0) ^ 0x145028E0) & 0xA402655E)) ^ 0xE485644E) << (v57 & 0x13) << (v57 & 0xC));
  v66 = LODWORD(STACK[0x66C0]) ^ 0xEFEC261 ^ (2
                                            * (((v26 & (v48 ^ 0x7832EE06) ^ STACK[0x66C0] & 0x658681F2) & 0x1818EB71 ^ 0x18186B71)
                                             + ((v26 & (v48 ^ 0x7832EE06) ^ STACK[0x66C0] & 0x658681F2) & 0x67E7148E ^ 0x860083))
                                            - 2);
  v67 = STACK[0x6480];
  v68 = (v66 & v53) << (v57 & 0xB) << (v57 & 0x14);
  v69 = (v66 & v7) >> STACK[0x66D8];
  v70 = LODWORD(STACK[0x6608]) ^ LODWORD(STACK[0x66F0]);
  LODWORD(STACK[0x6770]) = v70;
  LODWORD(STACK[0x66C0]) = v70 ^ v69 ^ v68;
  v71 = v27 ^ (2 * (v67 & (v27 ^ 0x368B14B6) ^ v48 & 0x2FB30D08));
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6A70]) ^ ((((((v71 ^ 0xA7842023) & STACK[0x66D0] & 0xF8CA00F1 | v63 & 0xA0C80091) ^ 0xD8CA0071)
                                                     + (((v71 ^ 0xA7842023) & STACK[0x66D0] & 0x735FF0E | v63 & 0x514230C) ^ 0x102001)
                                                     - 1) ^ 0x7D0603EC) << v57) ^ (((((v7 & (v71 ^ 0x4DF6742D) ^ v64 & 0x4FAE7793) & 0x746A5ACA ^ 0x344A48CA)
                                                                                   + (v7 & (v71 ^ 0x4DF6742D) ^ v64 & 0x4FAE7793 ^ 0x43A41711)
                                                                                   - ((v7 & (v71 ^ 0x4DF6742D) ^ v64 & 0x4FAE7793 ^ 0x43A41711) & 0x746A5ACA)) ^ 0x37CE4D4B) >> STACK[0x6A60]);
  v72 = STACK[0x6930] & 0x9BCD17C2 ^ 0x8A810040 ^ (LODWORD(STACK[0x6930]) ^ 0xFD6319D9) & (v48 ^ 0x86797836);
  v73 = (2 * (((2 * v72) | 0x4A93B570) - v72) + 896289424) ^ 0xED139670;
  v74 = (v73 + 1687072442 - ((2 * v73) & 0xC91D76C4) + 3240) ^ v31;
  v75 = (v60 ^ 0x356E5F96) & (v42 ^ 0xFD6319D9) ^ v42 & 0x4DC1C20D;
  v76 = v42 ^ (2 * ((v75 & 0x414C1DD ^ 0x1441D5) + (v75 ^ 0xC018208) - ((v75 ^ 0xC018208) & 0x414C1DD)));
  LODWORD(STACK[0x6A30]) = ((unint64_t)(v74 & v53) << v47) ^ ((v74 & STACK[0x66C8]) >> STACK[0x66D8]);
  v77 = (STACK[0x66D0] & (v76 ^ 0x231154DE) | v63 & 0x54DACABF) ^ 0x48A408F;
  v78 = STACK[0x66C8] & (v76 ^ 0x77CB9E61) ^ 0xC1600182;
  v79 = STACK[0x6658] & 5;
  v80 = STACK[0x6658];
  LODWORD(STACK[0x6320]) = v79;
  LODWORD(STACK[0x6318]) = v57 & 0x1A;
  LODWORD(STACK[0x6A20]) = (((((2 * v78) & 0xE03C6CFA) - v78 + 266455426) ^ 0xCE81C800) >> STACK[0x66D8]) ^ (((-1588755134 - (v77 | 0xA14D8542) + (v77 | 0x5EB27ABD)) ^ 0xEE2F08D) << (v57 & 0x1A) << v79);
  v81 = v30 & 0x8A6622AE ^ 0x66022A ^ (v48 ^ 0x97D24D5A) & (v30 ^ 0xFD6319D9);
  v82 = (2 * (v81 - ((2 * v81) & 0x78B479A0)) - 122390112) ^ v30;
  v83 = (v82 ^ 0xB5688E5D) & STACK[0x66D0] | v63 & 0xA0B7EB60;
  v84 = (v82 ^ 0x15DF653D) & STACK[0x66C8] ^ 0x41205502;
  LODWORD(STACK[0x65B0]) = v57 & 0xE;
  LODWORD(STACK[0x65B8]) = v57 & 0x11;
  LODWORD(STACK[0x66B8]) = ((v83 ^ 0xA0B7EB60) << (v57 & 0xE) << (v57 & 0x11))
                         + (((-1503025755 - (v84 | 0xA669A5A5) + (v84 | 0x59965A5A)) ^ 0x18B60F58) >> STACK[0x6A60]);
  v85 = v24 ^ (2
             * ((v24 & v67 & 0x37D22ABA ^ 0x33D0029A) + (v24 & v67 ^ 0x40B6820) - ((v24 & v67 ^ 0x40B6820) & 0x37D22ABA))) ^ 0x67B28534;
  v86 = v60 & 0xF75B5AF9 ^ 0x66085088 ^ (LODWORD(STACK[0x6940]) ^ 0xF75B5AF9) & v46;
  LODWORD(STACK[0x66B0]) = ((v85 & STACK[0x66D0]) << v57) ^ ((v85 & v58) >> STACK[0x6A60]);
  v87 = (2 * (((2 * v86) | 0x22FD4296) - v86) - 587022998) ^ 0xEFBD2B4;
  v88 = (v87 - 1776050245 - ((2 * v87) & 0x2C473F74)) ^ LODWORD(STACK[0x66A0]);
  v89 = v44 & 0x89BE3307 ^ 0x892E3105 ^ (v44 ^ 0xDB092F1B) & (v48 ^ 0x940A5CF3);
  v90 = v44 ^ 0xA2499AAB ^ (2 * (v89 - ((2 * v89) & 0x790C91BC)) + 2030866876);
  LODWORD(STACK[0x6A10]) = ((unint64_t)(v88 & v53) << v47) ^ ((v88 & v58) >> STACK[0x6A60]);
  LODWORD(STACK[0x6A00]) = ((unint64_t)(v90 & v53) << v47) ^ ((v90 & v58) >> STACK[0x6A60]);
  v91 = v25 ^ (2 * (v67 & v25));
  v92 = ((2 * (STACK[0x66A8] & v46 ^ 0xAC880A00)) & 0x3EF7971E) - (STACK[0x66A8] & v46 ^ 0xAC880A00);
  v93 = v91 & STACK[0x66D0];
  v94 = STACK[0x65C0];
  LODWORD(STACK[0x6358]) = v57 & 0x12;
  LODWORD(STACK[0x69F0]) = ((v91 & STACK[0x66C8]) >> STACK[0x66D8]) ^ (v93 << v94 << (v57 & 0x12));
  v95 = (((2 * v92 + 1091070176) ^ 0x18187CE0)
       - 1614319845
       - 2 * (((2 * v92 + 1091070176) ^ 0x18187CE0) & 0x1FC76F1E ^ (2 * v92) & 4)) ^ LODWORD(STACK[0x65E8]);
  v96 = (v58 & v95) >> STACK[0x66D8];
  LODWORD(STACK[0x64E8]) = v57 & 0x1D;
  LODWORD(STACK[0x64E0]) = v80 & 2;
  LODWORD(STACK[0x69E0]) = v96 + ((v53 & v95) << (v57 & 0x1D) << (v80 & 2));
  v97 = LODWORD(STACK[0x67B0]) ^ 0xF1F6C922 ^ (2
                                             * ((v67 & STACK[0x67B0] ^ 0x18223100 | 0x60D95591)
                                              - (v67 & STACK[0x67B0] ^ 0x18223100 | 0x1F26AA6E))
                                             + 1045255388);
  LODWORD(STACK[0x69D0]) = ((v58 & v97) >> STACK[0x6A60]) | ((unint64_t)(v53 & v97) << v47);
  v98 = v35 ^ (2 * ((v35 ^ 0x369032CC) & (v48 ^ 0x76A0D18F) ^ v35 & 0x6B14BE7B)) ^ 0x72B0565C;
  LODWORD(STACK[0x69C0]) = ((v53 & v98) << (v57 & 0x14) << (v57 & 0xB))
                         + ((v98 & STACK[0x66C8]) >> STACK[0x66D8]);
  v99 = LODWORD(STACK[0x6960]) ^ (2 * ((LODWORD(STACK[0x6950]) ^ 0x5A4A563A) & v67 ^ v48 & 0xB9B69F8));
  v100 = STACK[0x69B0] & 0xF65A386A ^ 0x250104A ^ (LODWORD(STACK[0x69B0]) ^ 0x4805CFB8) & (v48 ^ 0xEBEE579E);
  v101 = ((v99 ^ 0x6F0C74A4) & v53 | STACK[0x6970] & 0xCF82E09A) ^ 0x6A4A6688;
  v102 = LODWORD(STACK[0x69B0]) ^ (2 * (((2 * v100) | 0x62935930) - v100) + 493659856) ^ 0x2E36A64C;
  v103 = ((v99 ^ 0x95D3EE39) & v58 ^ STACK[0x6890] & 0x355D7A07) >> STACK[0x6A60];
  LODWORD(STACK[0x64D0]) = v57 & 0x16;
  LODWORD(STACK[0x64D8]) = v57 & 9;
  LODWORD(STACK[0x69B0]) = (((-633242543 - (v101 | 0xDA417C51) + (v101 | 0x25BE83AE)) ^ 0x807605BC) << (v57 & 0x16) << (v57 & 9)) | v103;
  LODWORD(STACK[0x66A8]) = ((unint64_t)(v102 & v53) << v47) | ((v102 & v58) >> STACK[0x6A60]);
  v104 = LODWORD(STACK[0x6760]) ^ (2
                                 * ((v46 & STACK[0x6760] & 0x608F1057 ^ 0x208F1057)
                                  + (v46 & STACK[0x6760] ^ 0x47000480)
                                  - ((v46 & STACK[0x6760] ^ 0x47000480) & 0x608F1057))) ^ 0x4F1E29AE;
  LODWORD(STACK[0x69A0]) = ((v53 & v104) << (v80 & 4) << (v57 & 0x1B)) + ((STACK[0x66C8] & v104) >> STACK[0x66D8]);
  v105 = v60;
  v106 = STACK[0x6AC0] & 0xC2748BB ^ 0x42400B3 ^ (LODWORD(STACK[0x6AC0]) ^ 0x880338A1) & (v60 ^ 0x7488D520);
  v107 = (2 * (v106 - ((2 * v106) & 0x66904358)) - 426753192) ^ 0xFEDE537C;
  v108 = (v107 - 2013054815 - ((2 * v107) & 0x10067140)) ^ LODWORD(STACK[0x6AC0]);
  LODWORD(STACK[0x6990]) = ((v58 & v108) >> STACK[0x6A60]) + ((v53 & v108) << (v57 & 0x11) << (v57 & 0xE));
  v109 = LODWORD(STACK[0x65D8]) ^ (2 * (v67 & STACK[0x65D8]));
  v110 = STACK[0x6A90];
  v111 = v110 & 0x16841FEB ^ 0x6041EAA ^ (v110 ^ 0xE399CAF9) & (v48 ^ 0xB30701F);
  LODWORD(STACK[0x6980]) = ((v58 & v109) >> STACK[0x6A60]) ^ ((unint64_t)(v53 & v109) << v47);
  v112 = STACK[0x6920];
  v113 = v112 & 0x93FB3EBE ^ 0x13C30C26 ^ (v112 ^ 0x3B73B3F3) & (v48 ^ 0x8E4F514A);
  v114 = v110 ^ 0x5A750C7F ^ (2 * ((v111 | 0x58727700) - (v111 | 0x278D88FF)) + 1327174142);
  LODWORD(STACK[0x6970]) = ((unint64_t)(v114 & v53) << v47) | ((v114 & v58) >> STACK[0x66D8]);
  v115 = v112 ^ 0x46145F19 ^ (2 * (v113 - ((2 * v113) & 0x7C0791C2)) + 2080870850);
  LODWORD(STACK[0x6950]) = ((v115 & v53) << (v57 & 0x16) << (v57 & 9)) + ((v115 & v58) >> STACK[0x6A60]);
  v116 = LODWORD(STACK[0x6750]) ^ 0xF6637C44 ^ (2
                                              * (((2 * (v67 & STACK[0x6750] ^ 0x9C801006)) | 0x4F635C48)
                                               - (v67 & STACK[0x6750] ^ 0x9C801006))
                                              + 815571896);
  v117 = STACK[0x6850];
  LODWORD(STACK[0x66A0]) = ((v116 & STACK[0x66C8]) >> STACK[0x66D8]) + ((unint64_t)(v116 & STACK[0x66D0]) << v47);
  v118 = v117 ^ 0xDDAA15E6 ^ (2 * ((v67 & v117 ^ 0x90A88C0E | 0x7E7D86FD) - (v67 & v117 ^ 0x90A88C0E | 0x1827902))
                            + 50655748);
  LODWORD(STACK[0x6960]) = ((v58 & v118) >> STACK[0x6A60]) | ((unint64_t)(v53 & v118) << v47);
  v119 = LODWORD(STACK[0x6820]) ^ (2 * (v46 & STACK[0x6820]));
  LODWORD(STACK[0x68D0]) = ((v58 & v119) >> STACK[0x66D8]) + ((v53 & v119) << (v57 & 0xB) << (v57 & 0x14));
  v120 = v46;
  v121 = STACK[0x64C8];
  v122 = LODWORD(STACK[0x6780]) ^ 0xCB15FAD0 ^ (2
                                              * (((2 * (v46 & STACK[0x6780] ^ 0xE4403012)) & 0x7C6A650A)
                                               - (v46 & STACK[0x6780] ^ 0xE4403012))
                                              + 60136180);
  v123 = LODWORD(STACK[0x6690]) ^ (2
                                 * ((v48 ^ 0xBC5A7A9) & (LODWORD(STACK[0x6690]) ^ 0x37070BAD) ^ STACK[0x6690] & 0x1671C85D)) ^ 0x1B051BB7;
  LODWORD(STACK[0x6940]) = ((STACK[0x66D0] & v122) << (v57 & 0xB) << (v57 & 0x14)) | ((STACK[0x66C8] & v122) >> STACK[0x6A60]);
  v124 = v121 ^ 0x6AA97602 ^ (2 * (((2 * (v67 & v121 ^ 0x2202A3B1)) | 0x2EAC3160) - (v67 & v121 ^ 0x2202A3B1))
                            - 783036768);
  v125 = STACK[0x6568];
  v126 = (v46 & v125 ^ 0xC250013) - ((2 * (v46 & v125 ^ 0xC250013)) & 0x1393EB0E);
  LODWORD(STACK[0x6850]) = ((v58 & v124) >> STACK[0x66D8]) + ((unint64_t)(v53 & v124) << v47);
  LODWORD(STACK[0x64C8]) = v57 & 0x19;
  v127 = v123 & STACK[0x66D0];
  LOBYTE(v46) = v80;
  LODWORD(STACK[0x64C0]) = v80 & 6;
  LODWORD(STACK[0x6930]) = (v127 << (v80 & 6) << (v57 & 0x19)) | ((v123 & STACK[0x66C8]) >> STACK[0x6A60]);
  v128 = STACK[0x68E0];
  LODWORD(STACK[0x6840]) = ((v58 & (v125 ^ 0xBD9EB28 ^ (2 * v126 + 328461070))) >> STACK[0x66D8])
                         + ((unint64_t)(v53 & (v125 ^ 0xBD9EB28 ^ (2 * v126 + 328461070))) << v47);
  v129 = v128 ^ 0x937034C8 ^ (2 * ((v67 & v128 ^ 0x1CC40190) - ((2 * (v67 & v128 ^ 0x1CC40190)) & 0x2AF837E8))
                            - 1426573336);
  v130 = LODWORD(STACK[0x6470]) ^ 0x981859CA ^ (2
                                              * ((v120 & STACK[0x6470] ^ 0x82541B | 0x4C8E78FE)
                                               - (v120 & STACK[0x6470] ^ 0x82541B | 0x33718701))
                                              + 1726156290);
  LODWORD(STACK[0x6830]) = ((v58 & v130) >> STACK[0x6A60]) | ((unint64_t)(v53 & v130) << v47);
  v131 = STACK[0x6810];
  v132 = LODWORD(STACK[0x67A0]) ^ (2 * (v120 & STACK[0x67A0]));
  LODWORD(STACK[0x6920]) = ((v129 & STACK[0x66C8]) >> STACK[0x66D8]) | ((v129 & STACK[0x66D0]) << v57);
  v133 = STACK[0x66D0] & v132;
  LODWORD(STACK[0x6568]) = v57 & 0x18;
  LOBYTE(v31) = v80 & 7;
  LODWORD(STACK[0x63A8]) = v80 & 7;
  LODWORD(STACK[0x6910]) = ((v58 & v132) >> STACK[0x66D8]) ^ (v133 << (v57 & 0x18) << (v80 & 7));
  v134 = LODWORD(STACK[0x6570]) ^ (2 * (v67 & STACK[0x6570]));
  v135 = STACK[0x6550];
  LODWORD(STACK[0x6820]) = ((unint64_t)(v53 & v134) << v47) ^ ((v134 & STACK[0x66C8]) >> STACK[0x6A60]);
  v136 = v131 ^ 0x852326E6 ^ (2 * ((v120 & v131 ^ 0x2012C | 0x4293925F) - (v120 & v131 ^ 0x2012C | 0x3D6C6DA0))
                            + 2061032256);
  v137 = (2 * ((v67 & v135 ^ 0x69A300) + 1481348260 - ((2 * (v67 & v135 ^ 0x69A300)) & 0x30972948))) ^ 0xB0446F48;
  v138 = (v135 ^ -v135 ^ (v137 - (v137 ^ v135))) + v137;
  v139 = STACK[0x6700];
  v140 = STACK[0x6428];
  LODWORD(STACK[0x65D8]) = v57 & 0xF;
  LODWORD(STACK[0x65E8]) = v57 & 0x10;
  LODWORD(STACK[0x6900]) = ((v58 & v136) >> STACK[0x6A60]) ^ ((v53 & v136) << (v57 & 0xF) << (v57 & 0x10));
  v141 = v139 ^ (2 * ((v48 ^ 0x392E3DBB) & (v139 ^ 0x3074B265) ^ v139 & 0x249A524F)) ^ 0xF05496EF;
  LODWORD(STACK[0x6810]) = ((v138 & STACK[0x66C8]) >> STACK[0x66D8]) | ((unint64_t)(v138 & STACK[0x66D0]) << v47);
  v142 = v47;
  v143 = ((v141 & STACK[0x66C8]) >> STACK[0x66D8]) | ((unint64_t)(v141 & STACK[0x66D0]) << v47);
  v144 = v140 ^ (2 * ((v120 & v140 ^ 0x42338814) - (v120 & v140 & 0x390815A9) + (v120 & v140 & 0x390815A9 ^ 0x390815A9))) ^ 0xF6773B7A;
  v145 = STACK[0x6490];
  v146 = LODWORD(STACK[0x67F0]) ^ (2 * (v67 & STACK[0x67F0]));
  LODWORD(STACK[0x67F0]) = ((v58 & v144) >> STACK[0x6A60]) + ((v53 & v144) << v31 << (v57 & 0x18));
  v147 = v145 ^ 0x672DEA86 ^ (2 * ((v120 & v145 ^ 0x94163420 | 0x2780C163) - (v120 & v145 ^ 0x94163420 | 0x587F3E9C))
                            - 1325499080);
  v148 = v146 & STACK[0x66C8];
  LODWORD(STACK[0x6570]) = v57 & 0x17;
  v149 = v57 & 8;
  v150 = ((v53 & v146) << (v57 & 0x17) << (v57 & 8)) + (v148 >> STACK[0x6A60]);
  LODWORD(STACK[0x67D0]) = ((v58 & v147) >> STACK[0x66D8]) + ((unint64_t)(STACK[0x66D0] & v147) << v47);
  v151 = LODWORD(STACK[0x67C0]) ^ 0x5FEF5174 ^ (2
                                              * ((STACK[0x67C0] & v120 ^ 0x8C00702 | 0x2737AFB8)
                                               - (STACK[0x67C0] & v120 ^ 0x8C00702 | 0x58C85047))
                                              - 1315921778);
  LODWORD(STACK[0x68F0]) = ((v151 & v53) << (v57 & 0xB) << (v57 & 0x14)) | ((v151 & v58) >> STACK[0x6A60]);
  v152 = LODWORD(STACK[0x6468]) ^ (2 * (v67 & STACK[0x6468]));
  v153 = v60 & 0x201951CE ^ 0x2001118A ^ (LODWORD(STACK[0x65C8]) ^ 0x3B641FF5) & v120;
  v154 = (((2 * (((2 * v153) & 0x4572E48A) - v153) - 1165157516) ^ 0xBA9D1B74)
        + 902537693
        - 2
        * (((2 * (((2 * v153) & 0x4572E48A) - v153) - 1165157516) ^ 0xBA9D1B74) & 0x35CBA1DE ^ (2
                                                                                              * (((2 * v153) & 0x4572E48A)
                                                                                               - v153)) & 2)) ^ LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x67C0]) = ((v152 & STACK[0x66C8]) >> STACK[0x66D8])
                         + ((unint64_t)(v152 & STACK[0x66D0]) << v47);
  v155 = STACK[0x6448];
  LODWORD(STACK[0x68E0]) = ((v154 & v53) << (v57 & 0x1E) << (v46 & 1)) ^ ((v154 & STACK[0x66C8]) >> STACK[0x6A60]);
  v156 = v155 ^ 0x51037978 ^ (2 * ((v67 & v155 & 0x67455CD ^ 0x148C) + (v67 & v155 & 0x798BAA32 ^ 0x2881A831)) - 2);
  v157 = v60 & 0xF508EA75 ^ 0xB4086854 ^ (LODWORD(STACK[0x6730]) ^ 0x2A7046D3) & v120;
  v158 = (((2 * (((2 * v157) & 0x792AF9E) - v157) + 2020429920) ^ 0xF06C90EA)
        + 345870786
        - 2
        * (((2 * (((2 * v157) & 0x792AF9E) - v157) + 2020429920) ^ 0xF06C90EA) & 0x149D91D6 ^ (2
                                                                                             * (((2 * v157) & 0x792AF9E)
                                                                                              - v157)) & 0x14)) ^ LODWORD(STACK[0x63F8]);
  LODWORD(STACK[0x68C0]) = ((v158 & STACK[0x66D0]) << v94 << (v57 & 0x12)) + ((v158 & STACK[0x66C8]) >> STACK[0x6A60]);
  LODWORD(STACK[0x67B0]) = ((v58 & v156) >> STACK[0x66D8]) ^ ((unint64_t)(v156 & STACK[0x66D0]) << v47);
  v159 = LODWORD(STACK[0x6558]) ^ (2 * (v67 & STACK[0x6558]));
  v160 = STACK[0x6698];
  v161 = v120;
  v162 = STACK[0x6458];
  v163 = (2 * ((LODWORD(STACK[0x6698]) ^ 0x6E500642) & v120 ^ v105 & 0x55F44717)) ^ 0xA1480A26;
  LODWORD(STACK[0x67A0]) = ((v58 & v159) >> STACK[0x66D8]) ^ ((unint64_t)(v53 & v159) << v47);
  v164 = v160 ^ 0x459CE3DA ^ (v163 - 29842800 + (~(2 * v163) | 0x38EBAE3));
  v165 = v162 ^ (2
               * ((v67 & v162 & 0x18B8C330 ^ 0x1030C230)
                + (v67 & v162 ^ 0xAC8D0500)
                - ((v67 & v162 ^ 0xAC8D0500) & 0x18B8C330))) ^ 0x686B8C60;
  v166 = ((v58 & v164) >> STACK[0x66D8]) | ((unint64_t)(v53 & v164) << v47);
  v167 = 2 * ((LODWORD(STACK[0x65E0]) ^ 0xA852A7D) & v120 ^ v105 & 0x25F1FA89);
  v168 = ((v167 ^ 0x41433112) - 1351298828 - 2 * ((v167 ^ 0x41433112) & 0x2F74D0FC ^ v167 & 8)) ^ LODWORD(STACK[0x65E0]);
  v169 = STACK[0x65B8];
  v170 = STACK[0x65B0];
  LODWORD(STACK[0x6780]) = ((v165 & STACK[0x66D0]) << LODWORD(STACK[0x65B8]) << LODWORD(STACK[0x65B0])) ^ ((v165 & STACK[0x66C8]) >> STACK[0x6A60]);
  LODWORD(STACK[0x6470]) = v57 & 0x15;
  LODWORD(STACK[0x6468]) = v57 & 0xA;
  v171 = ((v58 & v168) >> STACK[0x66D8]) | ((v53 & v168) << (v57 & 0xA) << (v57 & 0x15));
  v172 = LODWORD(STACK[0x6530]) ^ (2 * (v67 & STACK[0x6530]));
  v173 = STACK[0x6438];
  v175 = -2105787410 - LODWORD(STACK[0x6740]);
  if (v22)
    v175 = STACK[0x68B0];
  v176 = STACK[0x6800];
  v177 = (((v176 ^ 0x640DAC4C) - 1678617676) ^ ((v176 ^ 0x3A0BBD48) - 973847880) ^ ((v176 ^ 0x2A809037) - 713068599))
       - 1468853123
       + v175;
  v178 = (v177 ^ 0xA0A1C9F1) & (2 * (v177 & 0xB5098DF9)) ^ v177 & 0xB5098DF9;
  v179 = ((2 * (v177 ^ 0xEAB1C2F1)) ^ 0xBF709E10) & (v177 ^ 0xEAB1C2F1) ^ (2 * (v177 ^ 0xEAB1C2F1)) & 0x5FB84F08;
  v180 = (v179 ^ 0x1C200E00) & (4 * v178) ^ v178;
  v181 = ((4 * (v179 ^ 0x40884108)) ^ 0x7EE13C20) & (v179 ^ 0x40884108) ^ (4 * (v179 ^ 0x40884108)) & 0x5FB84F08;
  v182 = (v181 ^ 0x5EA00C00) & (16 * v180) ^ v180;
  v183 = ((16 * (v181 ^ 0x1184308)) ^ 0xFB84F080) & (v181 ^ 0x1184308) ^ (16 * (v181 ^ 0x1184308)) & 0x5FB84F00;
  v184 = v182 ^ 0x5FB84F08 ^ (v183 ^ 0x5B804000) & (v182 << 8);
  v185 = ((STACK[0x68A0] & 0xFFFFDFFF ^ 0x50551122)
        - ((2 * (STACK[0x68A0] & 0xFFFFDFFF ^ 0x50551122)) & 0x45C79C50)
        + 585362984) ^ v177 ^ (2
                             * ((v184 << 16) & 0x5FB80000 ^ v184 ^ ((v184 << 16) ^ 0x4F080000) & (((v183 ^ 0x4380F08) << 8) & 0x5FB80000 ^ 0x47B00000 ^ (((v183 ^ 0x4380F08) << 8) ^ 0x384F0000) & (v183 ^ 0x4380F08)))) ^ 0xB68AFDC1;
  LOBYTE(v183) = STACK[0x64C8];
  v186 = STACK[0x64C0];
  LODWORD(STACK[0x68B0]) = ((v58 & v185) >> STACK[0x6A60]) + ((v53 & v185) << v183 << v186);
  LODWORD(STACK[0x6760]) = ((unint64_t)(v172 & STACK[0x66D0]) << v47) | ((v172 & STACK[0x66C8]) >> STACK[0x6A60]);
  v187 = (LODWORD(STACK[0x6710]) ^ 0xE2578CC1) & v120 ^ v105 & 0x699C55AB;
  v188 = (2 * ((v187 & 0x235ECE37 ^ 0x1084022) + (v187 & 0x5CA131C8 ^ 0x5CA120C9)) - 2) ^ 0x6A4AEAC2;
  v189 = (v188 + 324830087 - ((2 * v188) & 0x26B9070C)) ^ LODWORD(STACK[0x65D0]);
  v174 = (v67 & v173 ^ 0x3209A000 | 0x5697A3FB) - (v67 & v173 ^ 0x3209A000 | 0x29685C04);
  LODWORD(STACK[0x6750]) = (((v173 ^ 0xC93C07F6 ^ (2 * v174 + 1389410312)) & STACK[0x66C8]) >> STACK[0x66D8])
                         + ((unint64_t)((v173 ^ 0xC93C07F6 ^ (2 * v174 + 1389410312)) & STACK[0x66D0]) << v47);
  v190 = LODWORD(STACK[0x6560]) ^ (2 * (v67 & STACK[0x6560]));
  LODWORD(STACK[0x68A0]) = ((unint64_t)(v189 & v53) << v47) ^ ((v189 & STACK[0x66C8]) >> STACK[0x6A60]);
  v191 = v186;
  v192 = v183;
  LODWORD(STACK[0x6740]) = ((v58 & v190) >> STACK[0x66D8]) | ((v190 & STACK[0x66D0]) << v186 << v183);
  v193 = LODWORD(STACK[0x6880]) ^ (2
                                 * ((v105 ^ 0x2D8CDCEB) & (LODWORD(STACK[0x6880]) ^ 0x74868133) ^ STACK[0x6880] & 0x55234170));
  v194 = LODWORD(STACK[0x6708]) ^ 0x72FD1AE6 ^ (2
                                              * ((v67 & STACK[0x6708] & 0x39F88D5B ^ 0x39788D53)
                                               + (v67 & STACK[0x6708] & 0x460772A4 ^ 0x60021))
                                              - 2);
  LODWORD(STACK[0x6890]) = ((STACK[0x6890] & 0x2752CB0 ^ 0x90 ^ v58 & (v193 ^ 0xDEF7AFE3)) >> STACK[0x6A60]) ^ ((unint64_t)((STACK[0x66D0] & (v193 ^ 0x12322932) | STACK[0x67E0] & 0xCEB0AA61) ^ 0xCEB0AA61) << v47);
  v195 = LODWORD(STACK[0x6538]) ^ (2 * (v67 & STACK[0x6538]));
  LODWORD(STACK[0x6AC0]) = ((v53 & v195) << v169 << v170) + ((v195 & STACK[0x66C8]) >> STACK[0x66D8]);
  LODWORD(STACK[0x6880]) = ((v58 & v194) >> STACK[0x6A60])
                         + ((unint64_t)(v194 & STACK[0x66D0]) << v47);
  v196 = LODWORD(STACK[0x6540]) ^ (2 * (v161 & STACK[0x6540]));
  LODWORD(STACK[0x6730]) = ((v53 & v196) << v169 << v170) ^ ((STACK[0x66C8] & v196) >> STACK[0x66D8]);
  v197 = STACK[0x6608];
  v198 = v176 ^ LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6790]);
  v199 = STACK[0x66F0];
  LODWORD(STACK[0x6720]) = v198 ^ LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x66F0]) ^ (LODWORD(STACK[0x6608]) + 233815267 - 2 * (STACK[0x6608] & 0xDEFBCF7 ^ STACK[0x6720] & 0x14)) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x63B0]) ^ 0xA80C1B2B;
  v200 = STACK[0x66F8];
  v201 = v200 & 0x6332F477 ^ 0x224021 ^ (v105 ^ 0x1B9D69EC) & (v200 ^ 0xF8A1E7E2);
  v202 = STACK[0x6770];
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x6400]);
  LODWORD(STACK[0x6710]) = v202 ^ LODWORD(STACK[0x65F0]);
  v203 = (2 * ((v201 | 0x11CF6316) - (v201 | 0x6E309CE9)) - 597607982) ^ 0xE39B8EAA;
  v204 = LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6A20]);
  v205 = LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x6800]) = v143;
  v206 = v205 ^ v143 ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x67E0]) = v150;
  v207 = v204 ^ v206 ^ v150 ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6960]);
  v208 = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6900]);
  LODWORD(STACK[0x6790]) = v166;
  LODWORD(STACK[0x6770]) = v171;
  LODWORD(STACK[0x65F0]) = v207 ^ v208 ^ v166 ^ v171;
  v209 = STACK[0x6A70];
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6418]);
  LODWORD(STACK[0x6708]) = v209 ^ LODWORD(STACK[0x63F0]);
  LODWORD(STACK[0x6A90]) = v209 ^ LODWORD(STACK[0x6548]);
  LODWORD(STACK[0x6700]) = v209 ^ LODWORD(STACK[0x6450]);
  LODWORD(STACK[0x6A80]) = v209 ^ LODWORD(STACK[0x6440]);
  v210 = (v48 ^ 0x46476FA3) & (LODWORD(STACK[0x6590]) ^ 0xF28103A5) ^ STACK[0x6590] & 0x5BF30057;
  v211 = (2 * ((v210 & 0x104DB22E ^ 0x104CB22A) + (v210 ^ 0xA10015) - ((v210 ^ 0xA10015) & 0x104DB22E))) ^ 0x84DB647C;
  v212 = (v203 - 123607070 - ((2 * v203) & 0xF143CFC4)) ^ v200;
  v213 = v199 ^ LODWORD(STACK[0x6578]);
  LODWORD(STACK[0x66F8]) = v199 ^ LODWORD(STACK[0x6460]) ^ v197;
  LODWORD(STACK[0x66F0]) = v213 ^ v197;
  v214 = (v211 - 1284076637 - ((2 * v211) & 0x66ED1744)) ^ LODWORD(STACK[0x6588]);
  v215 = (2 * ((v105 ^ 0x5F0283FB) & (LODWORD(STACK[0x6660]) ^ 0x178B0CFA) ^ STACK[0x6660] & 0x27AD1E60)) ^ 0xF1218C0;
  v216 = STACK[0x66E0];
  LODWORD(STACK[0x6460]) = ((STACK[0x66D0] & v212) << LODWORD(STACK[0x64E0]) << LODWORD(STACK[0x64E8])) ^ ((STACK[0x66C8] & v212) >> STACK[0x6A60]);
  v217 = (v215 + 1708065422 - ((2 * v215) & 0xCB9E051C)) ^ LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x6458]) = ((v58 & v214) >> STACK[0x66D8]) ^ ((unint64_t)(v53 & v214) << v142);
  v218 = v216 ^ 0x464DC07C ^ (2 * ((v67 & v216 ^ 0x168F131 | 0x224E110F) - (v67 & v216 ^ 0x168F131 | 0x5DB1EEF0))
                            - 1151083040);
  v219 = v105 & 0xB12B7EFD ^ 0x2A4881 ^ v161 & (LODWORD(STACK[0x65A8]) ^ 0x69C3DE56);
  LODWORD(STACK[0x6450]) = ((v58 & v217) >> STACK[0x6A60]) ^ ((unint64_t)(STACK[0x66D0] & v217) << v142);
  v220 = STACK[0x6570];
  LODWORD(STACK[0x6448]) = ((v58 & v218) >> STACK[0x6A60]) + ((v53 & v218) << v220 << v149);
  v221 = (2 * (((2 * v219) | 0x7D21458A) - v219) + 48151158) ^ 0x9D23EDBA;
  v222 = (v221 + 479240099 - ((2 * v221) & 0x39213F44)) ^ LODWORD(STACK[0x6628]);
  v223 = LODWORD(STACK[0x6650]) ^ (2
                                 * ((v48 ^ 0x6FE30D07) & (LODWORD(STACK[0x6650]) ^ 0x696E6E9E) ^ STACK[0x6650] & 0x725762F3)) ^ 0x29E2ABBA;
  LODWORD(STACK[0x6440]) = ((STACK[0x66C8] & v222) >> STACK[0x66D8]) | ((STACK[0x66D0] & v222) << v142);
  v224 = v161 & (LODWORD(STACK[0x6648]) ^ 0x85B1B9FE) ^ v105 & 0x4B20FCA5;
  v225 = (2 * ((v224 & 0x73ADC5FB ^ 0x338D815B) + (v224 ^ 0x482074A0) - ((v224 ^ 0x482074A0) & 0x73ADC5FB))) ^ 0xE75A5BB4;
  v226 = (v225 - 1148063373 - ((2 * v225) & 0x7723E2E4)) ^ LODWORD(STACK[0x6580]);
  v227 = STACK[0x6518];
  v228 = STACK[0x6518] & 0xE6C860E8 ^ 0xC00000A0 ^ (v105 ^ 0x9E67FD73) & STACK[0x6638];
  LODWORD(STACK[0x6438]) = ((v58 & v223) >> STACK[0x66D8]) + ((unint64_t)(v53 & v223) << v142);
  v229 = 2 * ((v228 | 0x76BB5922) - (v228 | 0x944A6DD)) + 310988218;
  v230 = LODWORD(STACK[0x66E8]) ^ (2 * (v67 & STACK[0x66E8]));
  v231 = STACK[0x6678];
  LODWORD(STACK[0x6430]) = ((STACK[0x66D0] & v226) << v57) | ((STACK[0x66C8] & v226) >> STACK[0x6A60]);
  LODWORD(STACK[0x66E8]) = ((v230 & STACK[0x66C8]) >> STACK[0x66D8])
                         + ((unint64_t)(v230 & STACK[0x66D0]) << v142);
  v232 = ((v229 ^ 0xAC663304) - 509984512 - ((2 * (v229 ^ 0xAC663304)) & 0xC3348200)) ^ v227;
  LODWORD(STACK[0x66E0]) = ((v58 & v232) >> STACK[0x6A60]) ^ ((v53 & v232) << v192 << v191);
  v233 = (2 * (v161 & (v231 ^ 0x64D38E4) ^ v105 & 0x1A021717)) ^ 0x30042A26;
  v234 = (v233 - 1672531981 - ((2 * v233) & 0x389E5FE4)) ^ v231;
  v235 = (v48 ^ 0xDB335FF) & STACK[0x6670] ^ STACK[0x65A0] & 0x10075A0B;
  v236 = LODWORD(STACK[0x65A0]) ^ 0xDA12EC0A ^ (2
                                              * ((v235 & 0x5649C710 ^ 0x46498510)
                                               + (v235 ^ 0x1004520A)
                                               - ((v235 ^ 0x1004520A) & 0x5649C710)));
  LODWORD(STACK[0x6428]) = ((v53 & v234) << (STACK[0x6658] & 3) << (v57 & 0x1C)) ^ ((STACK[0x66C8] & v234) >> STACK[0x66D8]);
  v237 = v105;
  v238 = STACK[0x6630] & 0xF2E54438 ^ 0xB2214418 ^ (v105 ^ 0x8A4AD9A3) & (LODWORD(STACK[0x6630]) ^ 0x8F07EB52);
  v239 = STACK[0x64D8];
  v240 = STACK[0x64D0];
  LODWORD(STACK[0x6420]) = ((v58 & v236) >> STACK[0x6A60]) ^ ((v236 & STACK[0x66D0]) << v239 << v240);
  v241 = (2 * (((2 * v238) | 0x14F107D2) - v238) + 1796143150) ^ 0xF4B90FC2;
  v242 = (v241 + 781507133 - ((2 * v241) & 0x5D29B478)) ^ LODWORD(STACK[0x6598]);
  v243 = v105 & 0x41D9BDD0 ^ 0x41C9A110 ^ v161 & (LODWORD(STACK[0x6640]) ^ 0x1B2514A);
  v244 = (2 * ((v243 | 0x7DFD7458) - (v243 | 0x2028BA7)) + 67442510) ^ 0xF97A91B0;
  v245 = LODWORD(STACK[0x6640]) ^ 0xA6DF2870 ^ (v244 - ((2 * v244) & 0xCD6989D4) - 424360726);
  LODWORD(STACK[0x6418]) = ((unint64_t)(v53 & v242) << v142) + ((STACK[0x66C8] & v242) >> STACK[0x66D8]);
  LODWORD(STACK[0x6410]) = ((STACK[0x66C8] & v245) >> STACK[0x66D8]) ^ ((STACK[0x66D0] & v245) << v240 << v239);
  v246 = LODWORD(STACK[0x6668]) ^ (2 * (v67 & STACK[0x6668]));
  LODWORD(STACK[0x6408]) = ((v58 & v246) >> STACK[0x6A60]) + ((unint64_t)(v53 & v246) << v142);
  v247 = (unsigned __int8 *)STACK[0x6AB0];
  v248 = STACK[0x64F8];
  v249 = *(unsigned __int8 *)(STACK[0x64F0] + (v247[11] ^ 0x11)) ^ 0xF2 | ((*(unsigned __int8 *)(STACK[0x6500]
                                                                                                 + (v247[8] ^ 0xF5)) ^ 0x69) << 24) | ((*(unsigned __int8 *)(v248 + (v247[9] ^ 0xA9)) ^ 0x2B) << 16) | ((*(unsigned __int8 *)(v248 + (v247[10] ^ 0x69)) ^ 2) << 8);
  v250 = *(unsigned __int8 *)(STACK[0x64F8] + (v247[7] ^ 0x38)) ^ 0x2F | ((*(unsigned __int8 *)(STACK[0x64F0]
                                                                                                + (v247[5] ^ 0x72)) ^ 0x56) << 16) | ((*(unsigned __int8 *)(STACK[0x6500] + (v247[4] ^ 0x47)) ^ 0x5D) << 24) | ((*(unsigned __int8 *)(STACK[0x6500] + (v247[6] ^ 0xBLL)) ^ 0x58) << 8);
  v251 = ((*(unsigned __int8 *)(STACK[0x6500] + (v247[2] ^ 0x82)) ^ 0x10) << 8) | ((*(unsigned __int8 *)(STACK[0x64F0] + (*v247 ^ 0xA9)) ^ 0x64) << 24) | *(unsigned __int8 *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6AB0] + 3) ^ 0x10)) ^ 0xFF | ((v247[1] ^ 0xCF ^ *(unsigned __int8 *)(STACK[0x6510] + (v247[1] ^ 0xF3))) << 16);
  v252 = v251
       + 585515403
       - 2
       * (v251 & 0x22E6419F ^ ~*(_BYTE *)(STACK[0x64F0] + (*(unsigned __int8 *)(STACK[0x6AB0] + 3) ^ 0x10)) & 0x14);
  v253 = ((*(unsigned __int8 *)(v248 + (v247[12] ^ 0x33)) ^ 0x80) << 24) | ((*(unsigned __int8 *)(v248
                                                                                                  + (v247[13] ^ 0x67)) ^ 0xC9) << 16) | v247[15] ^ 0xB5 ^ *(unsigned __int8 *)(STACK[0x6510] + (v247[15] ^ 0x48)) | ((*(unsigned __int8 *)(v248 + (v247[14] ^ 0x7ELL)) ^ 0x88) << 8);
  v254 = v253 + 95098274 - ((2 * v253) & 0xB562B44);
  v255 = v252 & 0xB4579657 ^ 0x80059006 ^ (v252 ^ 0x22E6418B) & (v105 ^ 0xCCF80BCC);
  v256 = (2 * (((2 * v255) & 0x6AD39C12) - v255) + 355230700) ^ 0x55AB43E6;
  v257 = (v256 + 585515403 - ((2 * v256) & 0x45CC8314)) ^ v252;
  LODWORD(STACK[0x6678]) = ((v257 & v53) << v240 << v239) + ((v257 & v58) >> STACK[0x6A60]);
  v258 = v250 ^ 0xB6B92F2A ^ (2 * ((v250 & v67 ^ 0x11584180 | 0x4A04D615) - (v250 & v67 ^ 0x11584180 | 0x35FB29EA))
                            + 1811305428);
  v259 = v249 ^ 0x1032BC5E ^ (2 * (((2 * (v249 & v67 ^ 0x9000A018)) | 0x3033FC6E) - (v249 & v67 ^ 0x9000A018))
                            - 808713326);
  LODWORD(STACK[0x6A70]) = ((unint64_t)(v258 & STACK[0x66D0]) << v142) ^ ((v258 & STACK[0x66C8]) >> STACK[0x66D8]);
  v260 = STACK[0x65B0];
  v261 = STACK[0x65B8];
  LODWORD(STACK[0x6638]) = ((v259 & v53) << v260 << v261) | ((v259 & v58) >> STACK[0x6A60]);
  v262 = 2 * ((v254 ^ 0x2C7AB8D0) & v161 ^ v105 & 0x29D1AD72);
  v263 = ((v262 ^ 0x51031A24) + 95098274 - 2 * ((v262 ^ 0x51031A24) & 0x5AB15B2 ^ v262 & 0x10)) ^ v254;
  LODWORD(STACK[0x6670]) = ((unint64_t)(v263 & STACK[0x66D0]) << v142)
                         + ((v263 & STACK[0x66C8]) >> STACK[0x66D8]);
  v264 = 33686018 * LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6400]) = ((unint64_t)(v53 & (v264 & 0x44E447E2 ^ 0xA27223F1)) << v142) | (((v264 & 0x44E447E2 ^ 0xA27223F1) & STACK[0x66C8]) >> STACK[0x6A60]);
  v265 = STACK[0x6618];
  v266 = STACK[0x6470];
  v267 = STACK[0x6468];
  LODWORD(STACK[0x63F8]) = ((v58 & ((33686018 * LODWORD(STACK[0x6618])) & 0x7E99CDC0 ^ 0x3F4CE6E0)) >> STACK[0x66D8]) | ((STACK[0x66D0] & ((33686018 * LODWORD(STACK[0x6618])) & 0x7E99CDC0 ^ 0x3F4CE6E0)) << v266 << v267);
  LODWORD(STACK[0x63F0]) = ((v58 & (v264 & 0xEE64BE10 ^ 0x77325F08)) >> STACK[0x66D8])
                         + ((unint64_t)(v53 & (v264 & 0xEE64BE10 ^ 0x77325F08)) << v142);
  LODWORD(STACK[0x63E8]) = ((STACK[0x66D0] & ((33686018 * v265) & 0x4FAD520C ^ 0xA7D6A906)) << v220 << v149) | ((STACK[0x66C8] & ((33686018 * v265) & 0x4FAD520C ^ 0xA7D6A906)) >> STACK[0x6A60]);
  LODWORD(STACK[0x63E0]) = ((v58 & ((33686018 * v265) & 0x5FFF0168 ^ 0x2FFF80B4)) >> STACK[0x6A60])
                         + ((STACK[0x66D0] & ((33686018 * v265) & 0x5FFF0168 ^ 0x2FFF80B4)) << v57);
  v268 = (v105 & 0xD0007F4B ^ 0xB0192210) - ((2 * (v105 & 0xD0007F4B ^ 0xB0192210)) & 0xA0304886) + 1440654403;
  v269 = 2
       * ((((v268 ^ 0x32437A62) + 924973680) ^ ((v268 ^ 0x636FBD29) + 1712143653) ^ ((v268 ^ 0x4B14DCA7) + 1316379819))
        + (v105 ^ 0x28AFE2D0))
       - 1052063682;
  v270 = (33686018 * v265) & 0x8E46AF90 ^ 0xC72357C8;
  v271 = v53 & v270;
  LODWORD(STACK[0x63D8]) = ((v58 & v270) >> STACK[0x6A60]) + (v271 << v142);
  v272 = v264 & 0x8E46AF90 ^ 0xC72357C8;
  v273 = v272 & STACK[0x66D0];
  LODWORD(STACK[0x63D0]) = ((v272 & STACK[0x66C8]) >> STACK[0x66D8])
                         + ((_DWORD)v273 << LODWORD(STACK[0x63A8]) << LODWORD(STACK[0x6568]));
  LODWORD(STACK[0x63C8]) = ((_DWORD)v271 << v266 << v267) + ((STACK[0x66C8] & v270) >> STACK[0x6A60]);
  LODWORD(STACK[0x63C0]) = ((v58 & v272) >> STACK[0x66D8]) + (v273 << v142);
  v274 = (33686018 * v265) & 0x2CBAF530 ^ 0x965D7A98;
  LODWORD(STACK[0x63B8]) = ((v53 & v274) << v240 << v239) + ((STACK[0x66C8] & v274) >> STACK[0x66D8]);
  v275 = v264 & 0x2CBAF530 ^ 0x965D7A98;
  LODWORD(STACK[0x63B0]) = ((v58 & v275) >> STACK[0x6A60]) + ((unint64_t)(v275 & STACK[0x66D0]) << v142);
  LODWORD(STACK[0x63A8]) = ((v58 & v274) >> STACK[0x6A60]) | ((unint64_t)(STACK[0x66D0] & v274) << v142);
  v276 = (33686018 * v265) & 0x46CF889A ^ 0x2367C44D;
  LODWORD(STACK[0x63A0]) = ((v58 & v276) >> STACK[0x66D8]) | ((v53 & v276) << v266 << v267);
  LODWORD(v273) = (33686018 * v265) & 0x95A7FA14;
  LODWORD(STACK[0x6398]) = ((STACK[0x66D0] & (v273 ^ 0x4AD3FD0A)) << v240 << v239)
                         + ((STACK[0x66C8] & (v273 ^ 0x4AD3FD0A)) >> STACK[0x6A60]);
  LODWORD(v271) = v264 & 0x95A7FA14 ^ 0x4AD3FD0A;
  LODWORD(STACK[0x6390]) = ((v271 & STACK[0x66D0]) << LODWORD(STACK[0x64E8]) << LODWORD(STACK[0x64E0])) | ((v271 & STACK[0x66C8]) >> STACK[0x6A60]);
  LODWORD(STACK[0x6388]) = ((v58 & ((_DWORD)v273 + 1255406858 - ((263172 * v265) & 0x107F000))) >> STACK[0x66D8]) ^ ((unint64_t)(v53 & ((_DWORD)v273 + 1255406858 - ((263172 * v265) & 0x107F000))) << v142);
  LODWORD(STACK[0x6380]) = ((unint64_t)(v53 & ((33686018 * v265) & 0xE6CBBE4 ^ 0x7365DF2)) << v142) ^ ((STACK[0x66C8] & ((33686018 * v265) & 0xE6CBBE4 ^ 0x7365DF2)) >> STACK[0x66D8]);
  LODWORD(STACK[0x6378]) = ((v58 & (v264 & 0xE6CBBE4 ^ 0x7365DF2)) >> STACK[0x6A60])
                         + (((v264 & 0xE6CBBE4 ^ 0x7365DF2) & STACK[0x66D0]) << v57);
  LODWORD(v273) = 2 * (((2 * (v237 & 0x76E09FDC ^ 0x22C08F90)) | 0x599AF7C2) - (v237 & 0x76E09FDC ^ 0x22C08F90))
                + 644155454;
  v277 = v273 ^ 0x7D5AD3D2;
  LODWORD(v248) = v273 ^ 0xBBA4C0E;
  LODWORD(STACK[0x6370]) = ((unint64_t)(STACK[0x66D0] & (v273 ^ 0xBBA4C0E)) << v142) | ((STACK[0x66C8] & (v273 ^ 0xBBA4C0E)) >> STACK[0x6A60]);
  v278 = v264 & 0xEDC13FB8 ^ 0x76E09FDC;
  LODWORD(STACK[0x6360]) = ((v58 & v278) >> STACK[0x66D8]) | ((v53 & v278) << v261 << v260);
  LODWORD(v273) = v264 & 0xADEB2FF2 ^ 0x56F597F9;
  LODWORD(STACK[0x6490]) = (v273 & STACK[0x66D0]) << LODWORD(STACK[0x6358]) << LODWORD(STACK[0x65C0]);
  v279 = (33686018 * v265) & 0xADEB2FF2 ^ 0x56F597F9;
  LODWORD(STACK[0x6358]) = ((v58 & v279) >> STACK[0x6A60]) + ((unint64_t)(v53 & v279) << v142);
  v280 = v264 & 0xC67E5B7A ^ 0xE33F2DBD;
  v281 = (((v264 & 0xC67E5B7A) - v280) ^ 0xFFFFFFFE) + (v264 & 0xC67E5B7A);
  LODWORD(STACK[0x6350]) = ((v58 & v281) >> STACK[0x6A60]) + ((unint64_t)(v281 & STACK[0x66D0]) << v142);
  v282 = v269 ^ 0x2FFF80B4;
  v283 = (STACK[0x66D0] & (v269 ^ 0x2FFF80B4)) << v149;
  LODWORD(STACK[0x6348]) = (v53 & v275) << v220 << v149;
  v284 = (33686018 * v265) & 0xC67E5B7A ^ 0xE33F2DBD;
  LODWORD(STACK[0x6340]) = v283 << v220;
  LODWORD(STACK[0x6AB0]) = (v53 & v284) << v149 << v220;
  v285 = (33686018 * v265) & 0x60638990 ^ 0xB031C4C8;
  v286 = STACK[0x66C8] & v285;
  LODWORD(STACK[0x6338]) = (v286 >> STACK[0x66D8]) + ((unint64_t)(STACK[0x66D0] & v285) << v142);
  v287 = STACK[0x65D8];
  v288 = STACK[0x65E8];
  v289 = (v53 & v273) << v287 << v288;
  v290 = v264 & 0x60638990 ^ 0xB031C4C8;
  v291 = (v290 & STACK[0x66D0]) << v288 << v287;
  v292 = (v53 & v290) << v288 << LODWORD(STACK[0x65D8]);
  v293 = v277 - ((67372036 * v265) & 0xC9803F30);
  LODWORD(STACK[0x6330]) = v264 & 0xEDC13FB8 ^ v58 ^ 0x891F6023;
  v294 = v278 & STACK[0x66D0];
  LODWORD(v247) = (_DWORD)v294 << LODWORD(STACK[0x6320]) << LODWORD(STACK[0x6318]);
  v295 = v53 & v248;
  LODWORD(v248) = (v58 & v248) >> STACK[0x6A60];
  LODWORD(STACK[0x6320]) = v248 + ((_DWORD)v295 << LODWORD(STACK[0x64D8]) << LODWORD(STACK[0x64D0]));
  LODWORD(STACK[0x6318]) = v248 + (v295 << v142);
  LODWORD(STACK[0x6310]) = ((v58 & v273) >> STACK[0x6A60]) | v289;
  LODWORD(STACK[0x6308]) = ((v58 & v273) >> STACK[0x66D8]) | v289;
  v296 = v53 & v280;
  v297 = (_DWORD)v296 << LODWORD(STACK[0x6328]) << LODWORD(STACK[0x6368]);
  LODWORD(v248) = v280 & STACK[0x66C8];
  v298 = v248 >> STACK[0x66D8];
  LODWORD(STACK[0x6300]) = v298 | ((unint64_t)(v280 & STACK[0x66D0]) << v142);
  LODWORD(STACK[0x62F8]) = v297 | v298;
  v299 = (v58 & v290) >> STACK[0x6A60];
  LODWORD(STACK[0x62F0]) = v299 | v292;
  LODWORD(STACK[0x62E8]) = v299 + v292;
  v300 = v286 >> STACK[0x6A60];
  v301 = (unint64_t)(v53 & v285) << v142;
  LODWORD(STACK[0x62E0]) = v301 + v300;
  LODWORD(STACK[0x62D8]) = ((v58 & v285) >> STACK[0x6A60]) | v301;
  LODWORD(STACK[0x62D0]) = ((v58 & v290) >> STACK[0x66D8]) + v291;
  LODWORD(STACK[0x62C8]) = ((v290 & STACK[0x66C8]) >> STACK[0x66D8]) | v291;
  v302 = STACK[0x66D0];
  LODWORD(STACK[0x6680]) = (((LODWORD(STACK[0x6680]) ^ 0x1079B76B) - 1203860947) ^ ((LODWORD(STACK[0x6680]) ^ 0x6C7735CA)
                                                                                  - 1003485042) ^ ((LODWORD(STACK[0x6680]) ^ 0x7FC50469)
                                                                                                 - 679331537))
                         - 806002267;
  LODWORD(v301) = LODWORD(STACK[0x65F0]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x68B0]);
  LODWORD(STACK[0x62B8]) = v237 ^ 0xC9747708;
  LODWORD(STACK[0x61A0]) = v237 ^ 0xF45F9F6E;
  LODWORD(STACK[0x62B0]) = v237 & 0x289E3E23;
  v303 = STACK[0x6A60];
  v304 = v264 & 0x5FFF0168 ^ 0x2FFF80B4;
  v305 = (v304 & STACK[0x66C8]) >> STACK[0x66D8];
  v306 = (unint64_t)(v53 & v304) << v142;
  STACK[0x62A8] = v306;
  LODWORD(STACK[0x62A0]) = v306 + v305;
  LODWORD(STACK[0x6298]) = (v58 & v304) >> v303;
  LODWORD(STACK[0x6290]) = (STACK[0x66C8] & v282) >> STACK[0x66D8];
  LODWORD(STACK[0x6288]) = (v275 & STACK[0x66C8]) >> STACK[0x66D8];
  LODWORD(STACK[0x6280]) = (STACK[0x66C8] & v276) >> v303;
  v307 = STACK[0x66D8];
  LODWORD(STACK[0x6278]) = (v302 & v276) << LODWORD(STACK[0x64C8]) << LODWORD(STACK[0x64C0]);
  v308 = v264 & 0x46CF889A ^ 0x2367C44D;
  v309 = STACK[0x66C8];
  LODWORD(STACK[0x6270]) = (v58 & v308) >> v307;
  STACK[0x6268] = (unint64_t)(v53 & v308) << v142;
  STACK[0x6260] = (unint64_t)(v308 & v302) << v142;
  LODWORD(STACK[0x6258]) = (v308 & v309) >> v303;
  LODWORD(STACK[0x6250]) = (v58 & v271) >> v307;
  STACK[0x6248] = (unint64_t)(v53 & v271) << v142;
  LODWORD(STACK[0x62C0]) = v301;
  LODWORD(STACK[0x6240]) = 985615619 * (v301 ^ LODWORD(STACK[0x6498]));
  LODWORD(STACK[0x6368]) = v278;
  v310 = (v278 & v309) >> v307;
  v311 = (unint64_t)(v302 & v279) << v142;
  LODWORD(v273) = (v273 & v309) >> v307;
  LODWORD(STACK[0x6228]) = v310 | (v294 << v142);
  v312 = v309 & v279;
  STACK[0x6220] = v296 << v142;
  LODWORD(STACK[0x6218]) = v248 >> v303;
  v313 = STACK[0x6AB0];
  LODWORD(STACK[0x6210]) = LODWORD(STACK[0x6AB0]) + ((v309 & v284) >> v307);
  v314 = v302 & v284;
  LODWORD(STACK[0x6208]) = (_DWORD)v314 << LODWORD(STACK[0x64E8]) << LODWORD(STACK[0x64E0]);
  v293 += 1994432476;
  STACK[0x6200] = (unint64_t)(v53 & v293) << v142;
  LODWORD(STACK[0x61F8]) = (v309 & v293) >> v307;
  LODWORD(STACK[0x6328]) = (_DWORD)v247;
  LODWORD(STACK[0x61F0]) = v310 | v247;
  LODWORD(STACK[0x61E8]) = v312 >> v307;
  STACK[0x6238] = v311;
  LODWORD(STACK[0x61E0]) = v311 | (v312 >> v303);
  LODWORD(STACK[0x61DC]) = (v58 & v284) >> v307;
  v315 = (v58 & v284) >> v303;
  LODWORD(STACK[0x61D0]) = v315;
  LODWORD(STACK[0x61C8]) = v315 | v313;
  STACK[0x61C0] = v314 << v142;
  v316 = *(uint64_t (**)(unint64_t))(STACK[0x6AD8] + 8 * v5);
  LODWORD(STACK[0x61BC]) = 985615619 * LODWORD(STACK[0x64A0]);
  v317 = STACK[0xDAC8];
  LODWORD(STACK[0x6230]) = v273;
  LODWORD(STACK[0x61B0]) = v273 + LODWORD(STACK[0x6490]);
  LODWORD(STACK[0x6AB0]) = STACK[0x6A50];
  HIDWORD(v318) = STACK[0x6520];
  LODWORD(v318) = STACK[0x6520];
  LODWORD(STACK[0x61A8]) = v318 >> 13;
  return v316(v317);
}

uint64_t sub_100AC18B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  int v10;
  int v11;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  BOOL v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unint64_t v189;
  BOOL v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  int *v304;
  int v305;
  uint64_t v306;
  unint64_t v307;
  uint64_t v308;
  _DWORD *v309;
  unint64_t v310;
  unint64_t v311;
  int v312;
  _DWORD *v313;
  unsigned int v314;
  int v315;
  uint64_t v316;
  _DWORD *v317;
  unint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  _DWORD *v322;
  int v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  _DWORD *v327;
  uint64_t v328;
  _DWORD *v329;
  _DWORD *v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  unint64_t v334;
  unint64_t v335;
  _DWORD *v336;
  int v337;
  int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unint64_t v343;
  int v344;
  _DWORD *v345;
  uint64_t v346;
  _DWORD *v347;
  uint64_t v348;
  unint64_t v349;
  unint64_t v350;
  _DWORD *v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  _DWORD *v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  _DWORD *v361;
  _DWORD *v362;
  int *v363;
  int v364;
  unint64_t v365;
  uint64_t v366;
  _DWORD *v367;
  uint64_t v368;
  unint64_t v369;
  uint64_t v370;
  _DWORD *v371;
  uint64_t v372;
  _DWORD *v373;
  int v374;
  _DWORD *v375;
  unsigned int v376;
  uint64_t v377;
  _DWORD *v378;
  uint64_t v379;
  _DWORD *v380;
  uint64_t v381;
  _DWORD *v382;
  uint64_t v383;
  unint64_t v384;
  uint64_t v385;
  _DWORD *v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  _DWORD *v390;
  uint64_t v391;
  _DWORD *v392;
  uint64_t v393;
  _DWORD *v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;
  unint64_t v400;
  uint64_t v401;
  _DWORD *v402;
  uint64_t v403;
  unint64_t v404;
  uint64_t v405;
  _DWORD *v406;
  unint64_t v407;
  uint64_t v408;
  int v409;
  int v410;
  unint64_t v411;
  _DWORD *v412;
  _DWORD *v413;
  unint64_t v414;
  _DWORD *v415;
  _DWORD *v416;
  _DWORD *v417;
  _DWORD *v418;
  unint64_t v419;
  _DWORD *v420;
  unint64_t v421;
  _DWORD *v422;
  _DWORD *v423;
  _DWORD *v424;
  uint64_t v425;
  _DWORD *v426;
  uint64_t v427;
  _DWORD *v428;
  int v429;
  uint64_t v430;
  _DWORD *v431;
  uint64_t v432;
  _DWORD *v433;
  unint64_t v434;
  _DWORD *v435;
  unint64_t v436;
  _DWORD *v437;
  unint64_t v438;
  unint64_t v439;
  _DWORD *v440;
  uint64_t v441;
  unint64_t v442;
  uint64_t v443;
  unint64_t v444;
  unint64_t v445;
  _DWORD *v446;
  uint64_t v447;
  _DWORD *v448;
  uint64_t v449;
  _DWORD *v450;
  uint64_t v451;
  _DWORD *v452;
  uint64_t v453;
  _DWORD *v454;
  int v455;
  _DWORD *v456;
  _DWORD *v457;
  _DWORD *v458;
  uint64_t v459;
  unint64_t v460;
  uint64_t v461;
  _DWORD *v462;
  _DWORD *v463;
  uint64_t v464;
  unint64_t v465;
  uint64_t v466;
  unint64_t v467;
  unint64_t v468;
  uint64_t v469;
  _DWORD *v470;
  uint64_t v471;
  _DWORD *v472;
  _DWORD *v473;
  _DWORD *v474;
  uint64_t v475;
  _DWORD *v476;
  uint64_t v477;
  _DWORD *v478;
  _DWORD *v479;
  uint64_t v480;
  _DWORD *v481;
  uint64_t v482;
  unint64_t v483;
  uint64_t v484;
  _DWORD *v485;
  uint64_t v486;
  _DWORD *v487;
  uint64_t v488;
  _DWORD *v489;
  int v490;
  unint64_t v491;
  int v492;
  int v493;
  uint64_t v494;
  uint64_t v495;
  _DWORD *v496;
  uint64_t v497;
  uint64_t v498;
  unint64_t v499;
  uint64_t v500;
  _DWORD *v501;
  _DWORD *v502;
  _DWORD *v503;
  _DWORD *v504;
  _DWORD *v505;
  _DWORD *v506;
  uint64_t v507;
  int *v508;
  uint64_t v509;
  int *v510;
  int v511;
  int *v512;
  int *v513;
  int *v514;
  uint64_t v515;
  int *v516;
  int v517;
  int v518;
  int *v519;
  int *v520;
  int *v521;
  uint64_t v522;
  unint64_t v523;
  uint64_t v524;
  _DWORD *v525;
  uint64_t v526;
  unint64_t v527;
  uint64_t v528;
  _DWORD *v529;
  uint64_t v530;
  _DWORD *v531;
  _DWORD *v532;
  _DWORD *v533;
  uint64_t v534;
  _DWORD *v535;
  uint64_t v536;
  _DWORD *v537;
  _DWORD *v538;
  _DWORD *v539;
  _DWORD *v540;
  _DWORD *v541;
  _DWORD *v542;
  unint64_t v543;
  uint64_t v544;
  unint64_t v545;
  int v546;
  unint64_t v547;
  _DWORD *v548;
  uint64_t v549;
  _DWORD *v550;
  uint64_t v551;
  unint64_t v552;
  uint64_t v553;
  unint64_t v554;
  unint64_t v555;
  _DWORD *v556;
  uint64_t v557;
  _DWORD *v558;
  uint64_t v559;
  unint64_t v560;
  unint64_t v561;
  _DWORD *v562;
  uint64_t v563;
  unint64_t v564;
  uint64_t v565;
  _DWORD *v566;
  _DWORD *v567;
  _DWORD *v568;
  uint64_t v569;
  int *v570;
  uint64_t v571;
  unint64_t v572;
  uint64_t v573;
  _DWORD *v574;
  uint64_t v575;
  unint64_t v576;
  int v577;
  unint64_t v578;
  int v579;
  _DWORD *v580;
  _DWORD *v581;
  _DWORD *v582;
  _DWORD *v583;
  _DWORD *v584;
  _DWORD *v585;
  _DWORD *v586;
  _DWORD *v587;
  _DWORD *v588;
  int *v589;
  _DWORD *v590;
  unint64_t v591;
  uint64_t v592;
  _DWORD *v593;
  int v594;
  unint64_t v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unint64_t v605;
  unint64_t v606;
  int v607;
  int *v608;
  int v609;
  _DWORD *v610;
  unint64_t v611;
  _DWORD *v612;
  int *v613;
  int v614;
  uint64_t v615;
  _DWORD *v616;
  uint64_t v617;
  _DWORD *v618;
  uint64_t v619;
  unint64_t v620;
  uint64_t v621;
  _DWORD *v622;
  uint64_t v623;
  _DWORD *v624;
  uint64_t v625;
  _DWORD *v626;
  uint64_t v627;
  _DWORD *v628;
  uint64_t v629;
  _DWORD *v630;
  int v631;
  unsigned int v632;
  unint64_t v633;
  unint64_t v634;
  int v635;
  uint64_t v636;
  unint64_t v637;
  uint64_t v638;
  _DWORD *v639;
  _DWORD *v640;
  unint64_t v641;
  uint64_t v642;
  unint64_t v643;
  uint64_t v644;
  unint64_t v645;
  unint64_t v646;
  int v647;
  _DWORD *v648;
  _DWORD *v649;
  uint64_t v650;
  _DWORD *v651;
  _DWORD *v652;
  uint64_t v653;
  _DWORD *v654;
  uint64_t v655;
  _DWORD *v656;
  uint64_t v657;
  unint64_t v658;
  uint64_t v659;
  _DWORD *v660;
  unint64_t v661;
  unsigned int v662;
  unint64_t v663;
  unint64_t v664;
  unint64_t v665;
  unsigned int v666;
  int v667;
  uint64_t v668;
  _DWORD *v669;
  uint64_t v670;
  _DWORD *v671;
  uint64_t v672;
  _DWORD *v673;
  uint64_t v674;
  _DWORD *v675;
  uint64_t v676;
  _DWORD *v677;
  unint64_t v678;
  int *v679;
  int v680;
  _DWORD *v681;
  _DWORD *v682;
  _DWORD *v683;
  int *v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  _DWORD *v690;
  _DWORD *v691;
  int v692;
  _DWORD *v693;
  int v694;
  int v695;
  unint64_t v696;
  unsigned int v697;
  int *v698;
  _DWORD *v699;
  int *v700;
  int *v701;
  unint64_t v702;
  int *v703;
  _DWORD *v704;
  _DWORD *v705;
  uint64_t v706;
  _DWORD *v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  unsigned int v714;
  int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  unsigned int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  unsigned int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  int v737;
  unsigned int v738;
  int v739;
  int v740;
  int v741;
  int v742;
  unsigned int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  char *v753;
  unint64_t v754;
  unsigned int v755;
  char *v756;
  unsigned int v757;
  uint64_t v758;
  unsigned int v759;
  unsigned int v760;
  char *v761;
  unint64_t v762;
  unint64_t v763;
  unsigned int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  unsigned int v770;
  int v771;
  int v772;
  int v773;

  v15 = (2 * LODWORD(STACK[0x6860])) ^ 0x96D0;
  LODWORD(STACK[0x6530]) = v15;
  LODWORD(STACK[0x6678]) = v5 & 0xFFFFFFF3;
  v16 = (((2 * (v5 & 0xFFFFFFF3 ^ (v15 - 834805301))) & 0xA48D1200) - (v5 & 0xFFFFFFF3 ^ (v15 - 834805301)) - 1380354309) ^ 0xDD157DF;
  v17 = *(unsigned __int8 *)(a1 + ((1280065124 - v16 + ((2 * v16) | 0x67678338)) ^ 0x5C4A3E27));
  LODWORD(STACK[0x6670]) = v5 & 0xFFFFFFF7;
  v18 = (-1567966550 - (v5 & 0xFFFFFFFE ^ 0x7A087DBA | 0xA28ABAAA) + (v5 & 0xFFFFFFFE ^ 0x7A087DBA | 0x5D754555)) ^ 0x5D6D0552;
  v19 = (-1679438460 - v18 + ((2 * v18) | 0xC83464F8)) ^ 0x9FA5CD92;
  STACK[0x6668] = v19;
  v20 = STACK[0xDAC8];
  STACK[0x6628] = STACK[0xDAC8];
  v21 = *(unsigned __int8 *)(v20 + v19);
  v22 = v5;
  v23 = (-1044137219 - (v5 & 0xFFFFFFF5 ^ 0x32A37460) + ((2 * (v5 & 0xFFFFFFF5 ^ 0x32A37460)) & 0x7C788A00)) & 0xFFFFFFF5 ^ 0x72CF0CCFLL;
  STACK[0x6620] = v23;
  v24 = (1381229058 - (v5 & 0xFFFFFFFC ^ 0x9BFB5248) + ((2 * (v5 & 0xFFFFFFFC ^ 0x9BFB5248)) & 0x5B583BF8)) & 0xFFFFFFFC ^ 0x4807721B;
  STACK[0x6600] = v24;
  LODWORD(v19) = *(unsigned __int8 *)(v20
                                    + ((-336332379
                                      - (v5 & 0xFFFFFFF7 ^ 0x672AEA14 | 0xEBF3F9A5)
                                      + (v5 & 0xFFFFFFF7 ^ 0x672AEA14 | 0x140C065A)) ^ 0xF2892E14));
  v25 = (((_DWORD)v19 << 26) | (unint64_t)(v19 >> 6)) ^ 0x27D4EFD0;
  v26 = (v25 << 6) & 0xF53BF4C0 | (v25 >> 26);
  LODWORD(v25) = (v5 & 0x83EDD844 ^ 0x2A5C047) + (v5 & 0x7C1227B9) - 1;
  v27 = ((v25 & 0xB3AA7A6 ^ 0x20A04A4)
       + (v25 ^ 0xF9F5FB4B)
       - ((v25 ^ 0xF9F5FB4B) & 0xB3AA7A4)) ^ 0x71C55EF9;
  STACK[0x6660] = v27;
  v28 = STACK[0x6510];
  v29 = STACK[0x6500];
  LODWORD(v21) = *(unsigned __int8 *)(v20 + v24) ^ *(unsigned __int8 *)(v28 + (*(unsigned __int8 *)(v20 + v24) ^ 0x58)) ^ 1 | ((*(unsigned __int8 *)(STACK[0x6500] + (v21 ^ 0x98)) ^ 0x16) << 16) | ((*(unsigned __int8 *)(v20 + v27) ^ 0xE8 ^ *(unsigned __int8 *)(v28 + (*(unsigned __int8 *)(v20 + v27) ^ 0x83))) << 8);
  v30 = v22 ^ 0x81AFC252;
  STACK[0x6610] = v30;
  LODWORD(v21) = v21 | ((*(unsigned __int8 *)(v29 + (*(unsigned __int8 *)(v20 + v30) ^ 0x5ELL)) ^ 0xC) << 24);
  LODWORD(STACK[0x6650]) = v22 & 0xFFFFFFF2;
  v31 = v22;
  LODWORD(v30) = (v22 & 0xFFFFFFF2 ^ 0xEB03BE50)
               + (v22 & 0x36212470 ^ 0x1420002D)
               - ((v22 & 0xFFFFFFF2 ^ 0xEB03BE50) & 0x36212470);
  v32 = *(unsigned __int8 *)(v20
                           + (((v30 & 0xEE191861 ^ 0xCC081840)
                             + (v30 ^ 0x2231A52D)
                             - ((v30 ^ 0x2231A52D) & 0xEE191860)) ^ 0x90A5E53E)) ^ 0xA2;
  LODWORD(STACK[0x6608]) = v22 & 0xFFFFFFF1;
  v33 = (v22 & 0xFFFFFFF1 ^ 0xF6C93840 | 0x493BA7D5) - (v22 & 0xFFFFFFF1 ^ 0xF6C93840 | 0xB6C4582A) - 1228646358;
  v34 = STACK[0x64F0];
  v35 = *(unsigned __int8 *)(v20
                           + (((v33 & 0xDEF97C94 ^ 0x1ED85C80) + (v33 ^ 0xC123A355) - ((v33 ^ 0xC123A355) & 0xDEF97C94)) ^ 0x2187820ALL)) ^ 0x67;
  v36 = STACK[0x64F8];
  LODWORD(v32) = ((*(unsigned __int8 *)(v34 + (v17 ^ 0xD8)) ^ 0x3E) << 24) | ((*(unsigned __int8 *)(v34 + v32) ^ 0xDB) << 16) | ((*(unsigned __int8 *)(STACK[0x64F8] + v35 - ((2 * v35) & 0xD8u) + 108) ^ 0xBB) << 8);
  LODWORD(STACK[0x6658]) = v22 & 0xFFFFFFF0;
  LODWORD(v32) = *(unsigned __int8 *)(v36
                                    + (*(unsigned __int8 *)(v20
                                                          + ((502328643
                                                            - (v22 & 0xFFFFFFF0 ^ 0xAD9D0D50)
                                                            + ((2 * (v22 & 0xFFFFFFF0 ^ 0xAD9D0D50)) & 0xC41E2320)
                                                            + 297) ^ 0x31C22163)) ^ 0x81)) | v32;
  v37 = (2
       * ((((v32 ^ 0x289E3E87) & v6 ^ LODWORD(STACK[0x62B0])) & 0x28D44A0A ^ 0xD4420A)
        + ((v32 ^ 0x289E3E87) & v6 ^ LODWORD(STACK[0x62B0]) ^ 0x280A3801)
        - (((v32 ^ 0x289E3E87) & v6 ^ LODWORD(STACK[0x62B0]) ^ 0x280A3801) & 0x28D44A0A))) ^ 0x50A0DC10;
  LODWORD(v32) = v32 ^ 0x1482E1E5 ^ (v37 + 344121665 - ((2 * v37) & 0x2905C280));
  v38 = a5 ^ LODWORD(STACK[0x6400]) ^ (((v21 ^ (2 * (v21 & v11))) & v14) >> v12) ^ (((v21 ^ (2 * (v21 & v11))) & v8) << LODWORD(STACK[0x64D0]) << LODWORD(STACK[0x64D8]));
  v39 = STACK[0x6870];
  LODWORD(v32) = a4 ^ LODWORD(STACK[0x63E8]) ^ ((v32 & v7) >> v9) ^ ((unint64_t)(v32 & v8) << STACK[0x6870]);
  v40 = *(unsigned __int8 *)(v36 + (v26 ^ 0xF53BF49ELL));
  v41 = LODWORD(STACK[0x6A90]) + LODWORD(STACK[0x6AC0]);
  LODWORD(v26) = -690494397 * (v38 ^ v41) - ((-690494397 * (v38 ^ v41)) >> 16);
  LODWORD(v26) = v32 ^ (v26 + (v26 >> 8));
  v42 = v32;
  v43 = -597241477 * v26;
  v44 = *(unsigned __int8 *)(v20 + v23);
  LODWORD(v23) = v11;
  v45 = v26 + LODWORD(STACK[0x68D0]) - 597241477 * v26 + 597241476 * v26;
  v46 = v44 ^ *(unsigned __int8 *)(v28 + (v44 ^ 0x17));
  LODWORD(STACK[0x6648]) = v31 & 0xFFFFFFF9;
  LODWORD(v44) = (2019277985
                - (v31 & 0xFFFFFFF9 ^ 0x5C16F4D8 | 0x785BBCA1)
                + (v31 & 0xFFFFFFF9 ^ 0x5C16F4D8 | 0x87A4435E)) ^ 0xA5A6C31A;
  v47 = ((v40 ^ 0x23) << 24) | ((v46 ^ 0x1C) << 8);
  v48 = *(unsigned __int8 *)(v20
                           + ((799068876 - (v44 | 0x2FA0D2CC) + (v44 | 0xD05F2D33)) ^ 0x2FE49BF9)) ^ 0x29;
  LODWORD(v44) = (1312515952
                - (v31 & 0xFFFFFFFB ^ 0x2788C053 | 0x4E3B6770)
                + (v31 & 0xFFFFFFFB ^ 0x2788C053 | 0xB1C4988F)) ^ 0xB09404ED;
  v49 = (((2 * (_DWORD)v44) | 0x5FF42AE2) - v44 - 804918641) ^ 0x888D8B16;
  STACK[0x6640] = v49;
  v50 = ((((v31 & 0xFFFFFFFA ^ 0xC6304881) - 1) ^ 0x98A37530)
       - ((2 * (((v31 & 0xFFFFFFFA ^ 0xC6304881) - 1) ^ 0x98A37530)) & 0x954E9200)
       - 895006464) ^ 0x159BB6E7;
  STACK[0x65F0] = v50;
  v51 = ((*(unsigned __int8 *)(v36 + v48) ^ 0x86) << 8) | ((*(unsigned __int8 *)(v34
                                                                                 + (*(unsigned __int8 *)(v20 + v49) ^ 0xC4)) ^ 0x1BLL) << 24);
  v52 = *(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v20 + v50) ^ 0xDELL)) ^ 0xDLL;
  v53 = (((2 * (v31 & 0xFFFFFFF6 ^ 0x5368C492)) & 0x1F110240) - (v31 & 0xFFFFFFF6 ^ 0x5368C492) + 1886879447) ^ 0x746F7EFD;
  v54 = (((2 * v53) & 0xA6C7ED58) - v53 + 748423506) ^ 0xFA430FB1;
  STACK[0x6630] = v54;
  v55 = v51 | (v52 << 16);
  v56 = v47 | ((*(unsigned __int8 *)(v29 + (*(unsigned __int8 *)(v20 + v54) ^ 0xF8)) ^ 0xE5) << 16);
  LODWORD(STACK[0x6618]) = v31;
  LODWORD(v52) = (-1126588812
                - (v31 & 0xFFFFFFF8 ^ 0x2B113928 | 0xBCD99E74)
                + (v31 & 0xFFFFFFF8 ^ 0x2B113928 | 0x4326618B)) ^ 0x42276108;
  v57 = ((_DWORD)v52 - 2004413584 - ((2 * (_DWORD)v52) & 0x110E26E0u)) ^ 0x2338E88CLL;
  STACK[0x65F8] = v57;
  v58 = v31 & 0xFFFFFFF4 ^ 0x81AFC25B;
  STACK[0x65E8] = v58;
  v59 = *(unsigned __int8 *)(v20 + v57) ^ 0x53;
  LODWORD(v20) = *(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v20 + v58) ^ 0x21)) ^ 0x31 | v56;
  v60 = (((*(unsigned __int8 *)(v36 + v59) | v55) << 13) | (v55 >> 19)) ^ 0xBA62D12A;
  LODWORD(v60) = (v60 >> 13) ^ ((_DWORD)v60 << 19);
  LODWORD(v55) = v60 & 0xB1DBEA93 ^ 0x11414A02 ^ (v60 ^ 0x8955D375) & LODWORD(STACK[0x62B8]);
  LODWORD(v55) = (2 * (v55 - ((2 * v55) & 0x4F063070)) + 1325805680) ^ 0x6F272056;
  LODWORD(v60) = v60 ^ 0xCF7E51DF ^ (v55 - ((2 * v55) & 0x8C570554) + 1177256618);
  LODWORD(v20) = v20 ^ 0x37811242 ^ (2 * (((2 * (v20 & v23 ^ 0x10861950)) & 0x6972DF1C) - (v20 & v23 ^ 0x10861950))
                                   + 378347746);
  v61 = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x63F8]) ^ (((unint64_t)(v60 & v10) << v39)
                                                         + ((v60 & v7) >> v9));
  v62 = LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x63F0]) ^ ((v20 & v14) >> v12) ^ ((v20 & v10) << LODWORD(STACK[0x64C8]) << LODWORD(STACK[0x64C0]));
  v63 = LODWORD(STACK[0x6680]) >= 0x7B821D35;
  v64 = STACK[0x6890];
  v65 = LODWORD(STACK[0x6890]) + LODWORD(STACK[0x6A80]);
  LODWORD(v20) = -690494397 * (v38 ^ v65) - ((-690494397 * (v38 ^ v65)) >> 16);
  v66 = v42;
  LODWORD(STACK[0x65D8]) = v42;
  LODWORD(v20) = -597241477 * (v42 ^ (v20 + (v20 >> 8)))
               + ((-597241477 * (v42 ^ (v20 + (v20 >> 8)))) >> 16);
  v67 = 131421201 * ((v20 ^ (v20 >> 8)) - v62)
      + ((131421201 * ((v20 ^ (v20 >> 8)) - v62)) >> 16);
  v68 = !v63;
  LODWORD(STACK[0x6638]) = v68;
  v69 = v67 & 0x1000000;
  if ((v67 & 0x1000000 & v61) != 0)
    v69 = -v69;
  v70 = v67 ^ (v67 >> 8);
  v71 = (v69 + v61) ^ v70 & 0xFEFFFFFF;
  v72 = v71 ^ v70;
  v73 = ((v43 + HIWORD(v43)) ^ ((v43 + HIWORD(v43)) >> 8)) - v62;
  LODWORD(STACK[0x65E0]) = v62;
  if (((((v43 + BYTE2(v43)) ^ ((unsigned __int16)(v43 + HIWORD(v43)) >> 8))
       - (_BYTE)v62) & 0x40) != 0)
    v74 = -64;
  else
    v74 = 64;
  v75 = STACK[0xDAC0];
  v76 = ((649459591 * v71 + ((649459591 * v71) >> 16)) ^ ((649459591 * v71 + ((649459591 * v71) >> 16)) >> 8))
      - (unint64_t)STACK[0xDAC0];
  v77 = v76 + 0x58F2334487694C35;
  if (v76 >= 0xA70DCCBB7896B3CBLL)
  {
    v78 = 2023142347;
  }
  else
  {
    v77 = v76;
    v78 = 0;
  }
  if (v77)
    v79 = v76;
  else
    v79 = v78;
  v80 = v79 + LODWORD(STACK[0x6950]) - v76;
  v81 = (v38 + v65 - 2 * (v38 & v65)) ^ v65;
  LODWORD(STACK[0x65C8]) = v81;
  v82 = -690494397 * (v81 ^ v41) - ((-690494397 * (v81 ^ v41)) >> 16);
  v83 = (v74 + v73) ^ 0x40;
  v84 = v73 ^ LODWORD(STACK[0x6690]) ^ v83;
  v85 = 649459591
      * ((131421201 * v83 + ((131421201 * v83) >> 16)) ^ ((131421201 * v83
                                                                       + ((131421201 * v83) >> 16)) >> 8) ^ v72);
  LODWORD(STACK[0x6A50]) += ((v85 + HIWORD(v85)) ^ ((v85 + HIWORD(v85)) >> 8)) - v75;
  v86 = -597241477 * (v66 ^ ((v82 >> (v82 & 8) >> (v82 & 8 ^ 8)) + v82));
  v87 = (v86 + HIWORD(v86)) ^ ((v86 + HIWORD(v86)) >> 8);
  LODWORD(STACK[0x6A70]) = v87;
  v88 = 131421201 * (v87 - v62) + ((131421201 * (v87 - v62)) >> 16);
  LODWORD(STACK[0x65D0]) = v72;
  v89 = 649459591 * (v88 ^ (v88 >> 8) ^ v72) + ((649459591 * (v88 ^ (v88 >> 8) ^ v72)) >> 16);
  LODWORD(STACK[0x6AA0]) += (v89 ^ (v89 >> 8)) - v75;
  v90 = 649459591
      * ((131421201 * v73 + ((131421201 * v73) >> 16)) ^ ((131421201 * v73 + ((131421201 * v73) >> 16)) >> 8) ^ v72);
  v91 = ((v90 + HIWORD(v90)) ^ ((v90 + HIWORD(v90)) >> 8)) - v75;
  *(_QWORD *)(v13 - 152) = v75;
  v92 = STACK[0x66C0];
  v93 = STACK[0x6A40];
  if ((v91 & 1) != 0)
    v94 = STACK[0x6A40];
  else
    v94 = STACK[0x66C0];
  LODWORD(STACK[0x68D0]) = v94;
  if ((v91 & 1) != 0)
    v95 = v92;
  else
    v95 = v84;
  if ((v91 & 1) != 0)
  {
    v96 = STACK[0x6698];
  }
  else
  {
    v84 = STACK[0x6698];
    v96 = v93;
  }
  v97 = STACK[0x66B8];
  v98 = STACK[0x66B0];
  if ((v91 & 1) != 0)
    v99 = STACK[0x66B0];
  else
    v99 = STACK[0x66B8];
  LODWORD(STACK[0x6598]) = v99;
  v100 = STACK[0x6A20];
  if ((v91 & 1) == 0)
    v97 = STACK[0x6A20];
  LODWORD(STACK[0x65B8]) = v97;
  if ((v91 & 1) != 0)
    v101 = v100;
  else
    v101 = STACK[0x6A30];
  if ((v91 & 1) != 0)
    v102 = STACK[0x6A30];
  else
    v102 = v98;
  v103 = STACK[0x6A10];
  v104 = STACK[0x6A00];
  if ((v91 & 1) != 0)
    v105 = STACK[0x6A00];
  else
    v105 = STACK[0x6A10];
  LODWORD(STACK[0x6590]) = v105;
  v106 = STACK[0x69F0];
  if ((v91 & 1) != 0)
    v104 = STACK[0x69F0];
  LODWORD(STACK[0x6A00]) = v104;
  if ((v91 & 1) != 0)
    v107 = STACK[0x69E0];
  else
    v107 = v106;
  if ((v91 & 1) != 0)
    v108 = v103;
  else
    v108 = STACK[0x69E0];
  v109 = STACK[0x69B0];
  v110 = STACK[0x66A8];
  if ((v91 & 1) != 0)
    v111 = STACK[0x66A8];
  else
    v111 = STACK[0x69B0];
  LODWORD(STACK[0x6950]) = v111;
  v112 = STACK[0x69D0];
  if ((v91 & 1) != 0)
    v113 = STACK[0x69D0];
  else
    v113 = v110;
  v114 = STACK[0x69C0];
  if ((v91 & 1) != 0)
    v112 = STACK[0x69C0];
  LODWORD(STACK[0x69D0]) = v112;
  if ((v91 & 1) != 0)
    v115 = v109;
  else
    v115 = v114;
  v116 = STACK[0x69A0];
  v117 = STACK[0x6970];
  if ((v91 & 1) != 0)
    v118 = STACK[0x69A0];
  else
    v118 = STACK[0x6970];
  LODWORD(STACK[0x6588]) = v118;
  v119 = STACK[0x6980];
  if ((v91 & 1) != 0)
    v120 = v117;
  else
    v120 = STACK[0x6980];
  LODWORD(STACK[0x65B0]) = v120;
  v121 = STACK[0x6990];
  if ((v91 & 1) != 0)
    v122 = STACK[0x6990];
  else
    v122 = v116;
  LODWORD(STACK[0x6580]) = v122;
  if ((v91 & 1) != 0)
    v123 = v119;
  else
    v123 = v121;
  v124 = STACK[0x66A0];
  v125 = STACK[0x6960];
  if ((v91 & 1) != 0)
    v126 = STACK[0x6960];
  else
    v126 = STACK[0x66A0];
  LODWORD(STACK[0x66C0]) = v126;
  if ((v91 & 1) != 0)
    v127 = v45;
  else
    v127 = v125;
  LODWORD(STACK[0x6960]) = v127;
  if ((v91 & 1) != 0)
    v128 = v80;
  else
    v128 = v45;
  LODWORD(STACK[0x6578]) = v128;
  if ((v91 & 1) != 0)
    v80 = v124;
  v129 = STACK[0x6940];
  v130 = STACK[0x6910];
  if ((v91 & 1) != 0)
    v131 = STACK[0x6940];
  else
    v131 = STACK[0x6910];
  LODWORD(STACK[0x66B8]) = v131;
  if ((v91 & 1) != 0)
    v132 = v130;
  else
    v132 = STACK[0x6920];
  if ((v91 & 1) != 0)
    v133 = STACK[0x6930];
  else
    v133 = v129;
  if ((v91 & 1) != 0)
    v134 = STACK[0x6920];
  else
    v134 = STACK[0x6930];
  LODWORD(STACK[0x6910]) = v134;
  v135 = STACK[0x6850];
  v136 = STACK[0x6840];
  if ((v91 & 1) != 0)
    v137 = STACK[0x6840];
  else
    v137 = STACK[0x6850];
  LODWORD(STACK[0x66B0]) = v137;
  if ((v91 & 1) != 0)
    v138 = STACK[0x6830];
  else
    v138 = v136;
  if ((v91 & 1) != 0)
    v139 = v135;
  else
    v139 = STACK[0x6820];
  if ((v91 & 1) != 0)
    v140 = STACK[0x6820];
  else
    v140 = STACK[0x6830];
  LODWORD(STACK[0x6830]) = v140;
  v141 = STACK[0x6900];
  v142 = STACK[0x6800];
  if ((v91 & 1) != 0)
    v143 = STACK[0x6800];
  else
    v143 = STACK[0x6900];
  LODWORD(STACK[0x66A8]) = v143;
  v144 = STACK[0x67E0];
  if ((v91 & 1) != 0)
    v145 = STACK[0x67E0];
  else
    v145 = v142;
  LODWORD(STACK[0x6800]) = v145;
  v146 = STACK[0x68F0];
  if ((v91 & 1) != 0)
    v147 = STACK[0x68F0];
  else
    v147 = v144;
  LODWORD(STACK[0x6570]) = v147;
  if ((v91 & 1) == 0)
    v141 = v146;
  v148 = STACK[0x67D0];
  v149 = STACK[0x67C0];
  if ((v91 & 1) != 0)
    v150 = STACK[0x67C0];
  else
    v150 = STACK[0x67D0];
  LODWORD(STACK[0x66A0]) = v150;
  v151 = STACK[0x6810];
  if ((v91 & 1) != 0)
    v152 = STACK[0x6810];
  else
    v152 = v149;
  LODWORD(STACK[0x6550]) = v152;
  if ((v91 & 1) != 0)
  {
    v153 = STACK[0x67F0];
  }
  else
  {
    v148 = STACK[0x67F0];
    v153 = v151;
  }
  LODWORD(STACK[0x6810]) = v153;
  v154 = STACK[0x68E0];
  v155 = STACK[0x68C0];
  if ((v91 & 1) != 0)
    v156 = STACK[0x68C0];
  else
    v156 = STACK[0x68E0];
  LODWORD(STACK[0x6568]) = v156;
  v157 = STACK[0x6770];
  if ((v91 & 1) != 0)
    v158 = v154;
  else
    v158 = STACK[0x6770];
  LODWORD(STACK[0x65A8]) = v158;
  if ((v91 & 1) != 0)
  {
    v159 = STACK[0x6790];
  }
  else
  {
    v157 = STACK[0x6790];
    v159 = v155;
  }
  v160 = STACK[0x6780];
  v161 = STACK[0x6760];
  if ((v91 & 1) != 0)
    v162 = STACK[0x6760];
  else
    v162 = STACK[0x6780];
  LODWORD(STACK[0x6560]) = v162;
  v163 = STACK[0x67A0];
  if ((v91 & 1) != 0)
    v164 = v160;
  else
    v164 = STACK[0x67A0];
  LODWORD(STACK[0x65A0]) = v164;
  if ((v91 & 1) != 0)
  {
    v165 = STACK[0x67B0];
  }
  else
  {
    v163 = STACK[0x67B0];
    v165 = v161;
  }
  v166 = STACK[0x68B0];
  v167 = STACK[0x68A0];
  if ((v91 & 1) != 0)
    v168 = STACK[0x68A0];
  else
    v168 = STACK[0x68B0];
  LODWORD(STACK[0x6558]) = v168;
  if ((v91 & 1) != 0)
    v169 = v64;
  else
    v169 = v167;
  LODWORD(STACK[0x68A0]) = v169;
  v170 = STACK[0x6880];
  if ((v91 & 1) != 0)
    v171 = STACK[0x6880];
  else
    v171 = v64;
  if ((v91 & 1) != 0)
    v170 = v166;
  LODWORD(STACK[0x6548]) = v170;
  v172 = STACK[0x6730];
  v173 = STACK[0x6AC0];
  if ((v91 & 1) != 0)
    v174 = STACK[0x6730];
  else
    v174 = STACK[0x6AC0];
  LODWORD(STACK[0x6698]) = v174;
  v175 = STACK[0x6750];
  if ((v91 & 1) != 0)
    v172 = STACK[0x6750];
  LODWORD(STACK[0x6730]) = v172;
  if ((v91 & 1) != 0)
    v176 = v173;
  else
    v176 = STACK[0x6740];
  if ((v91 & 1) != 0)
    v177 = STACK[0x6740];
  else
    v177 = v175;
  LODWORD(STACK[0x6750]) = v177;
  v178 = STACK[0x6720];
  v179 = STACK[0x6A80];
  if ((v91 & 1) != 0)
    v180 = STACK[0x6720];
  else
    v180 = STACK[0x6A80];
  LODWORD(STACK[0x6690]) = v180;
  v181 = STACK[0x6708];
  if ((v91 & 1) != 0)
    v178 = STACK[0x6708];
  LODWORD(STACK[0x6540]) = v178;
  v182 = STACK[0x6710];
  if ((v91 & 1) != 0)
    v183 = v179;
  else
    v183 = STACK[0x6710];
  if ((v91 & 1) == 0)
    v182 = v181;
  LODWORD(STACK[0x6708]) = v182;
  v184 = STACK[0x66F8];
  v185 = STACK[0x6A90];
  if ((v91 & 1) != 0)
    v186 = STACK[0x6A90];
  else
    v186 = STACK[0x66F8];
  LODWORD(STACK[0x65C0]) = v186;
  v187 = STACK[0x6700];
  if ((v91 & 1) != 0)
    v185 = STACK[0x6700];
  LODWORD(STACK[0x6538]) = v185;
  v188 = STACK[0x66F0];
  if ((v91 & 1) != 0)
    v187 = STACK[0x66F0];
  LODWORD(STACK[0x6700]) = v187;
  v189 = *(_QWORD *)(v13 - 152);
  if ((v91 & 1) == 0)
    v184 = v188;
  v190 = (v91 & 2) == 0;
  if ((v91 & 2) != 0)
    v191 = v95;
  else
    v191 = v96;
  LODWORD(STACK[0x6A40]) = v191;
  if ((v91 & 2) != 0)
  {
    v192 = v84;
  }
  else
  {
    v96 = v95;
    v192 = STACK[0x68D0];
  }
  if ((v91 & 2) != 0)
    v84 = STACK[0x68D0];
  LODWORD(STACK[0x6AB0]) += v91;
  v193 = STACK[0x6598];
  if ((v91 & 2) != 0)
    v194 = STACK[0x6598];
  else
    v194 = v101;
  LODWORD(STACK[0x6A30]) = v194;
  if ((v91 & 2) == 0)
    v101 = v193;
  v195 = STACK[0x65B8];
  if ((v91 & 2) != 0)
    v196 = v102;
  else
    v196 = STACK[0x65B8];
  LODWORD(STACK[0x6A20]) = v196;
  if ((v91 & 2) != 0)
    v102 = v195;
  v197 = STACK[0x6590];
  if ((v91 & 2) != 0)
    v198 = v107;
  else
    v198 = STACK[0x6590];
  LODWORD(STACK[0x6A10]) = v198;
  if ((v91 & 2) != 0)
    v199 = v197;
  else
    v199 = v107;
  LODWORD(STACK[0x69F0]) = v199;
  v200 = STACK[0x6A00];
  if ((v91 & 2) != 0)
    v201 = STACK[0x6A00];
  else
    v201 = v108;
  LODWORD(STACK[0x69E0]) = v201;
  if ((v91 & 2) != 0)
    v202 = v108;
  else
    v202 = v200;
  LODWORD(STACK[0x6A00]) = v202;
  if ((v91 & 2) != 0)
    v203 = v113;
  else
    v203 = v115;
  LODWORD(STACK[0x69C0]) = v203;
  if ((v91 & 2) != 0)
    v113 = v115;
  v204 = STACK[0x6950];
  v205 = STACK[0x69D0];
  if (v190)
    v206 = STACK[0x6950];
  else
    v206 = STACK[0x69D0];
  LODWORD(STACK[0x69B0]) = v206;
  if (v190)
    v207 = v205;
  else
    v207 = v204;
  LODWORD(STACK[0x69D0]) = v207;
  v208 = STACK[0x6588];
  if (v190)
    v209 = v123;
  else
    v209 = STACK[0x6588];
  LODWORD(STACK[0x6990]) = v209;
  if (v190)
    v210 = v208;
  else
    v210 = v123;
  LODWORD(STACK[0x6970]) = v210;
  v211 = STACK[0x65B0];
  v212 = STACK[0x6580];
  if (v190)
    v213 = STACK[0x6580];
  else
    v213 = STACK[0x65B0];
  LODWORD(STACK[0x69A0]) = v213;
  if (v190)
    v214 = v211;
  else
    v214 = v212;
  LODWORD(STACK[0x6980]) = v214;
  v215 = STACK[0x6960];
  if (v190)
    v216 = v80;
  else
    v216 = STACK[0x6960];
  LODWORD(STACK[0x6950]) = v216;
  if (v190)
    v217 = v215;
  else
    v217 = v80;
  LODWORD(STACK[0x6960]) = v217;
  v218 = STACK[0x66C0];
  v219 = STACK[0x6578];
  if (v190)
    v220 = STACK[0x6578];
  else
    v220 = STACK[0x66C0];
  LODWORD(STACK[0x68D0]) = v220;
  if (v190)
    v221 = v218;
  else
    v221 = v219;
  if (v190)
    v222 = v132;
  else
    v222 = v133;
  LODWORD(STACK[0x6920]) = v222;
  if (v190)
    v223 = v133;
  else
    v223 = v132;
  LODWORD(STACK[0x6940]) = v223;
  v224 = STACK[0x66B8];
  v225 = STACK[0x6910];
  if (v190)
    v226 = STACK[0x6910];
  else
    v226 = STACK[0x66B8];
  LODWORD(STACK[0x6930]) = v226;
  if (v190)
    v227 = v224;
  else
    v227 = v225;
  LODWORD(STACK[0x6910]) = v227;
  if (v190)
    v228 = v139;
  else
    v228 = v138;
  LODWORD(STACK[0x6820]) = v228;
  if (v190)
    v229 = v138;
  else
    v229 = v139;
  LODWORD(STACK[0x6840]) = v229;
  v230 = STACK[0x66B0];
  v231 = STACK[0x6830];
  if (v190)
    v232 = STACK[0x66B0];
  else
    v232 = STACK[0x6830];
  LODWORD(STACK[0x6850]) = v232;
  if (v190)
    v233 = v231;
  else
    v233 = v230;
  LODWORD(STACK[0x6830]) = v233;
  v234 = STACK[0x6800];
  if (v190)
    v235 = v141;
  else
    v235 = STACK[0x6800];
  LODWORD(STACK[0x68F0]) = v235;
  if (v190)
    v236 = v234;
  else
    v236 = v141;
  LODWORD(STACK[0x6800]) = v236;
  v237 = STACK[0x66A8];
  v238 = STACK[0x6570];
  if (v190)
    v239 = STACK[0x6570];
  else
    v239 = STACK[0x66A8];
  LODWORD(STACK[0x67E0]) = v239;
  if (v190)
    v240 = v237;
  else
    v240 = v238;
  LODWORD(STACK[0x6900]) = v240;
  v241 = STACK[0x6550];
  if (v190)
    v242 = STACK[0x6550];
  else
    v242 = v148;
  LODWORD(STACK[0x67C0]) = v242;
  if (v190)
    v243 = v148;
  else
    v243 = v241;
  LODWORD(STACK[0x67F0]) = v243;
  v244 = STACK[0x66A0];
  v245 = STACK[0x6810];
  if (v190)
    v246 = STACK[0x66A0];
  else
    v246 = STACK[0x6810];
  LODWORD(STACK[0x67D0]) = v246;
  if (v190)
    v247 = v245;
  else
    v247 = v244;
  LODWORD(STACK[0x6810]) = v247;
  v248 = STACK[0x6568];
  if (v190)
    v249 = STACK[0x6568];
  else
    v249 = v157;
  LODWORD(STACK[0x68E0]) = v249;
  if (v190)
    v250 = v157;
  else
    v250 = v248;
  LODWORD(STACK[0x6790]) = v250;
  v251 = STACK[0x65A8];
  if (v190)
    v252 = STACK[0x65A8];
  else
    v252 = v159;
  LODWORD(STACK[0x6770]) = v252;
  if (v190)
    v253 = v159;
  else
    v253 = v251;
  LODWORD(STACK[0x68C0]) = v253;
  v254 = STACK[0x6560];
  if (v190)
    v255 = STACK[0x6560];
  else
    v255 = v163;
  LODWORD(STACK[0x6780]) = v255;
  if (v190)
    v256 = v163;
  else
    v256 = v254;
  LODWORD(STACK[0x67B0]) = v256;
  v257 = STACK[0x65A0];
  if (v190)
    v258 = STACK[0x65A0];
  else
    v258 = v165;
  LODWORD(STACK[0x67A0]) = v258;
  if (v190)
    v259 = v165;
  else
    v259 = v257;
  LODWORD(STACK[0x6760]) = v259;
  v260 = STACK[0x6558];
  if (v190)
    v261 = STACK[0x6558];
  else
    v261 = v171;
  LODWORD(STACK[0x68B0]) = v261;
  if (v190)
    v262 = v171;
  else
    v262 = v260;
  LODWORD(STACK[0x6890]) = v262;
  v263 = STACK[0x68A0];
  v264 = STACK[0x6548];
  if (v190)
    v265 = STACK[0x6548];
  else
    v265 = STACK[0x68A0];
  LODWORD(STACK[0x6880]) = v265;
  if (v190)
    v266 = v263;
  else
    v266 = v264;
  LODWORD(STACK[0x68A0]) = v266;
  v267 = STACK[0x6730];
  if (v190)
    v268 = v176;
  else
    v268 = STACK[0x6730];
  LODWORD(STACK[0x6740]) = v268;
  if (v190)
    v269 = v267;
  else
    v269 = v176;
  LODWORD(STACK[0x6730]) = v269;
  v270 = STACK[0x6698];
  v271 = STACK[0x6750];
  if (v190)
    v272 = STACK[0x6698];
  else
    v272 = STACK[0x6750];
  LODWORD(STACK[0x6AC0]) = v272;
  if (v190)
    v273 = v271;
  else
    v273 = v270;
  LODWORD(STACK[0x6750]) = v273;
  v274 = STACK[0x6540];
  if (v190)
    v275 = STACK[0x6540];
  else
    v275 = v183;
  LODWORD(STACK[0x6720]) = v275;
  if (v190)
    v276 = v183;
  else
    v276 = v274;
  LODWORD(STACK[0x6710]) = v276;
  v277 = STACK[0x6690];
  v278 = STACK[0x6708];
  if (v190)
    v279 = STACK[0x6690];
  else
    v279 = STACK[0x6708];
  LODWORD(STACK[0x6A80]) = v279;
  if (v190)
    v280 = v278;
  else
    v280 = v277;
  LODWORD(STACK[0x6708]) = v280;
  v281 = STACK[0x6538];
  if (v190)
    v282 = STACK[0x6538];
  else
    v282 = v184;
  LODWORD(STACK[0x6A90]) = v282;
  if (v190)
    v283 = v184;
  else
    v283 = v281;
  LODWORD(STACK[0x66F0]) = v283;
  v284 = STACK[0x65C0];
  v285 = STACK[0x6700];
  if (v190)
    v286 = STACK[0x65C0];
  else
    v286 = STACK[0x6700];
  LODWORD(STACK[0x66F8]) = v286;
  if (v190)
    v287 = v285;
  else
    v287 = v284;
  LODWORD(STACK[0x6700]) = v287;
  v288 = STACK[0x6A50];
  v289 = STACK[0x65D8];
  v290 = STACK[0x65E0];
  if ((STACK[0x6A50] & 1) != 0)
    v291 = STACK[0x65D8];
  else
    v291 = STACK[0x65E0];
  v292 = STACK[0x65D0];
  if ((v288 & 1) != 0)
  {
    v289 = STACK[0x65C8];
  }
  else
  {
    v290 = STACK[0x65D0];
    v292 = STACK[0x65C8];
  }
  if ((v288 & 2) != 0)
    v293 = v291;
  else
    v293 = v292;
  if ((v288 & 2) != 0)
  {
    v291 = v292;
    v294 = v289;
  }
  else
  {
    v294 = v290;
  }
  if ((v288 & 2) == 0)
    v290 = v289;
  v295 = STACK[0x6448];
  v296 = STACK[0x6410];
  v297 = STACK[0x66E0];
  v298 = LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x63E0]) ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6A40]) ^ v290;
  v299 = LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x66C0]) = v192;
  v300 = v299 ^ v192 ^ v291;
  v301 = v297 ^ v296 ^ STACK[0x62A8] ^ LODWORD(STACK[0x6298]);
  v302 = v295 ^ v296 ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x6290]) ^ v297;
  LODWORD(STACK[0x6698]) = v84;
  v303 = v302 ^ v84 ^ v293;
  v304 = (int *)(v189 + 4 * BYTE2(v303));
  STACK[0xDAC0] = (unint64_t)v304;
  v305 = *v304;
  STACK[0xDAC0] = v189;
  LODWORD(v304) = *(_DWORD *)(v189 + 4 * HIBYTE(v298));
  v306 = 4 * BYTE1(v303);
  v307 = v189 + v306;
  v308 = 4 * HIBYTE(v303);
  v309 = (_DWORD *)(v307 + v308 - v306);
  STACK[0xDAC0] = v307;
  LODWORD(v307) = *(_DWORD *)v307;
  STACK[0xDAC0] = (unint64_t)v309;
  v310 = (unint64_t)&v309[v308 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v309) = *v309;
  v311 = v310 + 4 * BYTE2(v300);
  STACK[0xDAC0] = v311;
  v312 = *(_DWORD *)v311;
  STACK[0xDAC0] = v310;
  LODWORD(v311) = *(_DWORD *)(v310 + 4 * BYTE1(v300));
  v313 = (_DWORD *)(v310 + 4 * v303);
  STACK[0xDAC0] = (unint64_t)v313;
  LODWORD(STACK[0x6690]) = v96;
  v314 = v301 ^ v295 ^ v96 ^ v294;
  v315 = v312 ^ __ROR4__(*v313, 16);
  v316 = 4 * HIBYTE(v300);
  v317 = (_DWORD *)(v310 + v316);
  STACK[0xDAC0] = (unint64_t)v317;
  HIDWORD(v318) = *v317;
  LODWORD(v318) = *v317;
  v319 = v300;
  v320 = (unint64_t)&v317[v319 + v316 / 0xFFFFFFFFFFFFFFFCLL];
  v321 = 4 * BYTE1(v298);
  v322 = (_DWORD *)(v320 + v321 - v319 * 4);
  STACK[0xDAC0] = v320;
  LODWORD(v320) = *(_DWORD *)v320;
  STACK[0xDAC0] = (unint64_t)v322;
  v323 = v315 ^ __ROR4__(*v322, 8);
  v324 = v298;
  v325 = (unint64_t)&v322[v324 + v321 / 0xFFFFFFFFFFFFFFFCLL];
  v326 = 4 * BYTE1(v314);
  v327 = (_DWORD *)(v325 + v326 - v324 * 4);
  v328 = 4 * BYTE2(v298);
  v329 = &v327[(unint64_t)v328 / 4 + v326 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = v325;
  LODWORD(v325) = *(_DWORD *)v325;
  STACK[0xDAC0] = (unint64_t)v327;
  LODWORD(v327) = *v327;
  STACK[0xDAC0] = (unint64_t)v329;
  LODWORD(v307) = (v318 >> 24) ^ __ROR4__(v307, 8) ^ *v329;
  v330 = &v329[v328 / 0xFFFFFFFFFFFFFFFCLL];
  v331 = v314;
  v332 = (unint64_t)&v330[v331];
  v333 = 4 * BYTE2(v314);
  v334 = v332 + v333 - v331 * 4;
  STACK[0xDAC0] = v332;
  LODWORD(v332) = v307 ^ __ROR4__(*(_DWORD *)v332, 16);
  STACK[0xDAC0] = v334;
  v335 = v334 - v333;
  LODWORD(v334) = *(_DWORD *)v334;
  v336 = (_DWORD *)(v335 + 4 * HIBYTE(v314));
  STACK[0xDAC0] = (unint64_t)v336;
  v337 = v323 ^ __ROR4__(*v336, 24);
  v338 = LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x66E8]);
  v339 = v338 ^ LODWORD(STACK[0x63D8]) ^ v305 ^ __ROR4__((_DWORD)v304, 24) ^ __ROR4__(v320, 16) ^ __ROR4__((_DWORD)v327, 8);
  LODWORD(v325) = v338 ^ LODWORD(STACK[0x63D0]) ^ __ROR4__((_DWORD)v309, 24) ^ __ROR4__(v311, 8) ^ __ROR4__(v325, 16) ^ LODWORD(STACK[0x6A30]) ^ v334;
  LODWORD(v332) = v288 + v332 - LODWORD(STACK[0x6AA0]);
  LODWORD(v320) = v338 ^ LODWORD(STACK[0x63C8]);
  LODWORD(STACK[0x66B8]) = v101;
  LODWORD(v332) = v320 ^ v101 ^ v332;
  v340 = STACK[0x6AB0];
  v341 = v338 ^ LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x6A20]) ^ (LODWORD(STACK[0x6AB0]) + v337 - v288);
  LODWORD(STACK[0x66B0]) = v102;
  v342 = v339 ^ v102;
  v343 = v335 + 4 * (v339 ^ v102);
  STACK[0xDAC0] = v343;
  v344 = *(_DWORD *)v343;
  v345 = (_DWORD *)(v335 + 4 * v341);
  STACK[0xDAC0] = (unint64_t)v345;
  LODWORD(v343) = *v345;
  v346 = 4 * BYTE1(v341);
  v347 = (_DWORD *)(v335 + v346);
  v348 = BYTE2(v325);
  v349 = (unint64_t)&v347[v348 + v346 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v347;
  LODWORD(v347) = *v347;
  STACK[0xDAC0] = v349;
  v350 = v349 - v348 * 4;
  LODWORD(v349) = *(_DWORD *)v349;
  v351 = (_DWORD *)(v350 + 4 * v325);
  STACK[0xDAC0] = (unint64_t)v351;
  LODWORD(v334) = *v351;
  LODWORD(v351) = HIBYTE(v341);
  v352 = 4 * BYTE2(v341);
  v353 = v350 + v352;
  v354 = 4 * v351;
  v355 = (_DWORD *)(v353 + v354 - v352);
  LODWORD(v311) = v334 >> (STACK[0x6A70] & 0x10) >> (STACK[0x6A70] & 0x10 ^ 0x10);
  v356 = 4 * BYTE3(v332);
  v357 = &v355[(unint64_t)v356 / 4 + v354 / 0xFFFFFFFFFFFFFFFCLL];
  v358 = BYTE2(v342);
  v359 = (unint64_t)&v357[v358 + v356 / 0xFFFFFFFFFFFFFFFCLL];
  v360 = 4 * HIBYTE(v342);
  v361 = (_DWORD *)(v359 + v360 - v358 * 4);
  STACK[0xDAC0] = v353;
  LODWORD(v353) = *(_DWORD *)v353;
  STACK[0xDAC0] = (unint64_t)v355;
  LODWORD(v355) = *v355;
  STACK[0xDAC0] = (unint64_t)v357;
  LODWORD(v357) = *v357;
  STACK[0xDAC0] = v359;
  LODWORD(v359) = *(_DWORD *)v359;
  STACK[0xDAC0] = (unint64_t)v361;
  v362 = &v361[v360 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v361) = *v361;
  v363 = &v362[BYTE1(v332)];
  STACK[0xDAC0] = (unint64_t)v363;
  v364 = *v363;
  v365 = (unint64_t)&v362[BYTE3(v325)];
  STACK[0xDAC0] = v365;
  LODWORD(v363) = *(_DWORD *)v365;
  LODWORD(v334) = v311 | ((_DWORD)v334 << 16);
  v366 = 4 * v332;
  v367 = &v362[(unint64_t)v366 / 4];
  v368 = BYTE2(v332);
  v369 = (unint64_t)&v367[v368 + v366 / 0xFFFFFFFFFFFFFFFCLL];
  v370 = 4 * BYTE1(v342);
  v371 = (_DWORD *)(v369 - v368 * 4 + v370);
  v372 = 4 * BYTE1(v325);
  v373 = &v371[(unint64_t)v372 / 4 + v370 / 0xFFFFFFFFFFFFFFFCLL];
  v374 = STACK[0x6450];
  LODWORD(v365) = LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6440]);
  LODWORD(v343) = v365 ^ LODWORD(STACK[0x63B8]) ^ __ROR4__(v343, 16) ^ LODWORD(STACK[0x69F0]) ^ __ROR4__((_DWORD)v357, 24) ^ v359;
  STACK[0xDAC0] = (unint64_t)v367;
  LODWORD(v357) = *v367;
  STACK[0xDAC0] = v369;
  LODWORD(v369) = *(_DWORD *)v369;
  STACK[0xDAC0] = (unint64_t)v371;
  LODWORD(v371) = *v371;
  STACK[0xDAC0] = (unint64_t)v373;
  v375 = &v373[v372 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v373) = v343 ^ __ROR4__(*v373, 8);
  v376 = v365 ^ LODWORD(STACK[0x63B0]) ^ __ROR4__(v344, 16) ^ LODWORD(STACK[0x6A10]) ^ v353 ^ __ROR4__(v364, 8) ^ __ROR4__((_DWORD)v363, 24);
  LODWORD(v347) = v365 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6348]) ^ __ROR4__((_DWORD)v347, 8) ^ v349 ^ LODWORD(STACK[0x69E0]) ^ __ROR4__((_DWORD)v361, 24) ^ __ROR4__((_DWORD)v357, 16);
  LODWORD(v371) = v365 ^ LODWORD(STACK[0x63A8]) ^ LODWORD(STACK[0x6A00]) ^ v334 ^ __ROR4__((_DWORD)v355, 24) ^ v369 ^ __ROR4__((_DWORD)v371, 8);
  v377 = 4 * BYTE1(v347);
  v378 = &v375[(unint64_t)v377 / 4];
  v379 = 4 * (v347 >> 24);
  v380 = &v378[(unint64_t)v379 / 4 + v377 / 0xFFFFFFFFFFFFFFFCLL];
  v381 = 4 * BYTE1(v373);
  v382 = &v380[(unint64_t)v381 / 4 + v379 / 0xFFFFFFFFFFFFFFFCLL];
  v383 = BYTE2(v373);
  v384 = (unint64_t)&v382[v383 + v381 / 0xFFFFFFFFFFFFFFFCLL];
  v385 = 4 * v371;
  v386 = (_DWORD *)(v384 - v383 * 4 + v385);
  v387 = BYTE2(v376);
  v388 = (unint64_t)&v386[v387 + v385 / 0xFFFFFFFFFFFFFFFCLL];
  v389 = 4 * v347;
  v390 = (_DWORD *)(v388 - v387 * 4 + v389);
  v391 = 4 * HIBYTE(v376);
  v392 = &v390[(unint64_t)v391 / 4 + v389 / 0xFFFFFFFFFFFFFFFCLL];
  v393 = 4 * BYTE1(v376);
  v394 = &v392[(unint64_t)v393 / 4 + v391 / 0xFFFFFFFFFFFFFFFCLL];
  v395 = BYTE2(v347);
  v396 = (unint64_t)&v394[v393 / 0xFFFFFFFFFFFFFFFCLL + v395];
  v397 = 4 * v376;
  v398 = v396 + v397 - v395 * 4;
  v399 = 4 * BYTE1(v371);
  v400 = v398 - v397 + v399;
  v401 = 4 * (v371 >> 24);
  v402 = (_DWORD *)(v400 + v401 - v399);
  v403 = BYTE2(v371);
  v404 = (unint64_t)&v402[v401 / 0xFFFFFFFFFFFFFFFCLL + v403];
  v405 = 4 * v373;
  v406 = (_DWORD *)(v404 + v405 - v403 * 4);
  STACK[0xDAC0] = (unint64_t)v378;
  LODWORD(v378) = *v378;
  STACK[0xDAC0] = (unint64_t)v380;
  LODWORD(v380) = *v380;
  STACK[0xDAC0] = (unint64_t)v382;
  LODWORD(v382) = *v382;
  STACK[0xDAC0] = v384;
  LODWORD(v384) = *(_DWORD *)v384;
  STACK[0xDAC0] = (unint64_t)v386;
  LODWORD(v386) = *v386;
  STACK[0xDAC0] = v388;
  LODWORD(v388) = *(_DWORD *)v388;
  STACK[0xDAC0] = (unint64_t)v390;
  LODWORD(v390) = *v390;
  STACK[0xDAC0] = (unint64_t)v392;
  LODWORD(v392) = *v392;
  STACK[0xDAC0] = (unint64_t)v394;
  LODWORD(v394) = *v394;
  STACK[0xDAC0] = v396;
  LODWORD(v396) = *(_DWORD *)v396;
  STACK[0xDAC0] = v398;
  LODWORD(v398) = *(_DWORD *)v398;
  STACK[0xDAC0] = v400;
  LODWORD(v400) = *(_DWORD *)v400;
  STACK[0xDAC0] = (unint64_t)v402;
  LODWORD(v402) = *v402;
  STACK[0xDAC0] = v404;
  LODWORD(v404) = *(_DWORD *)v404;
  STACK[0xDAC0] = (unint64_t)v406;
  v407 = (unint64_t)&v406[v405 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v406) = *v406;
  v408 = 4 * (v373 >> 24);
  STACK[0xDAC0] = v407 + v408;
  v409 = STACK[0x6430];
  v410 = STACK[0x6420];
  LODWORD(v378) = LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x69C0]) ^ __ROR4__((_DWORD)v378, 8) ^ v384 ^ __ROR4__(v398, 16) ^ __ROR4__((_DWORD)v402, 24);
  LODWORD(v398) = LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6430]) ^ STACK[0x6268] ^ LODWORD(STACK[0x6270]);
  LODWORD(STACK[0x66A8]) = v113;
  LODWORD(v406) = v398 ^ v113 ^ __ROR4__((_DWORD)v380, 24) ^ v388 ^ __ROR4__(v400, 8) ^ __ROR4__((_DWORD)v406, 16);
  LODWORD(v380) = v410 ^ v409 ^ LODWORD(STACK[0x6258]) ^ STACK[0x6260] ^ LODWORD(STACK[0x69D0]) ^ __ROR4__((_DWORD)v382, 8) ^ __ROR4__((_DWORD)v390, 16) ^ __ROR4__((_DWORD)v392, 24) ^ v404;
  LODWORD(v400) = LODWORD(STACK[0x63A0]) ^ v409 ^ v410 ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x69B0]) ^ __ROR4__((_DWORD)v386, 16) ^ __ROR4__((_DWORD)v394, 8) ^ v396;
  LODWORD(v318) = __ROR4__(*(_DWORD *)(v407 + v408), 24);
  LODWORD(v408) = v400 ^ v318;
  v411 = v407 + 4 * ((unsigned __int16)(v400 ^ v318) >> 8);
  STACK[0xDAC0] = v411;
  LODWORD(v400) = *(_DWORD *)v411;
  v412 = (_DWORD *)(v407 + 4 * BYTE1(v378));
  STACK[0xDAC0] = (unint64_t)v412;
  LODWORD(v411) = *v412;
  v413 = (_DWORD *)(v407 + 4 * v408);
  v414 = v407 + 4 * BYTE2(v406);
  STACK[0xDAC0] = (unint64_t)v413;
  LODWORD(v413) = *v413;
  STACK[0xDAC0] = v414;
  LODWORD(v414) = *(_DWORD *)v414;
  STACK[0xDAC0] = v407;
  LODWORD(v388) = *(_DWORD *)(v407 + 4 * BYTE2(v380));
  v415 = (_DWORD *)(v407 + 4 * (v378 >> 24));
  v416 = (_DWORD *)(v407 + 4 * BYTE1(v380));
  STACK[0xDAC0] = (unint64_t)v415;
  LODWORD(v415) = *v415;
  STACK[0xDAC0] = (unint64_t)v416;
  LODWORD(v416) = *v416;
  v417 = (_DWORD *)(v407 + 4 * BYTE1(v406));
  STACK[0xDAC0] = (unint64_t)v417;
  LODWORD(v394) = *v417;
  v418 = (_DWORD *)(v407 + 4 * v406);
  STACK[0xDAC0] = (unint64_t)v418;
  LODWORD(v417) = __ROR4__(*v418, 27) ^ 0x5B1C9E61;
  v419 = v407 + 4 * BYTE2(v378);
  v420 = (_DWORD *)(v407 + 4 * v378);
  STACK[0xDAC0] = v419;
  LODWORD(v419) = *(_DWORD *)v419;
  STACK[0xDAC0] = (unint64_t)v420;
  v421 = v407;
  LODWORD(v420) = *v420;
  v422 = (_DWORD *)(v407 + 4 * BYTE3(v408));
  STACK[0xDAC0] = (unint64_t)v422;
  LODWORD(v404) = *v422;
  v423 = (_DWORD *)(v421 + 4 * (v406 >> 24));
  STACK[0xDAC0] = (unint64_t)v423;
  LODWORD(v406) = *v423;
  v424 = (_DWORD *)(v421 + 4 * BYTE2(v408));
  STACK[0xDAC0] = (unint64_t)v424;
  LODWORD(v408) = *v424;
  v425 = 4 * (v380 >> 24);
  v426 = (_DWORD *)(v421 + v425);
  v427 = 4 * v380;
  v428 = &v426[(unint64_t)v427 / 4 + v425 / 0xFFFFFFFFFFFFFFFCLL];
  v429 = STACK[0x6418];
  LODWORD(v365) = LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x6418]);
  LODWORD(v406) = v365 ^ LODWORD(STACK[0x6398]) ^ LODWORD(STACK[0x6970]) ^ __ROR4__(v411, 8) ^ __ROR4__((_DWORD)v413, 16) ^ v388 ^ __ROR4__((_DWORD)v406, 24);
  LODWORD(v408) = v365 ^ STACK[0x6248] ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x6990]) ^ __ROR4__((_DWORD)v415, 24) ^ __ROR4__((_DWORD)v394, 8) ^ v408;
  STACK[0xDAC0] = (unint64_t)v426;
  LODWORD(v426) = *v426;
  STACK[0xDAC0] = (unint64_t)v428;
  LODWORD(v408) = v408 ^ __ROR4__(*v428, 16);
  LODWORD(v411) = v365 ^ LODWORD(STACK[0x6980]) ^ v414 ^ __ROR4__((_DWORD)v416, 8) ^ __ROR4__((_DWORD)v420, 16) ^ __ROR4__(v404, 24);
  LODWORD(v426) = v365 ^ 0xE4F30AD8 ^ LODWORD(STACK[0x6390]) ^ LODWORD(STACK[0x69A0]) ^ __ROR4__(v400, 8) ^ v419 ^ __ROR4__((_DWORD)v417, 21) ^ __ROR4__((_DWORD)v426, 24);
  LODWORD(v400) = v411 + LODWORD(STACK[0x6388]) - 2 * (v411 & LODWORD(STACK[0x6388]));
  v430 = 4 * v406;
  v431 = &v428[v427 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v430 / 4];
  v432 = 4 * (v426 >> 24);
  v433 = &v431[(unint64_t)v432 / 4 + v430 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v431;
  LODWORD(v431) = *v431;
  STACK[0xDAC0] = (unint64_t)v433;
  v434 = (unint64_t)&v433[v432 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v433) = *v433;
  v435 = (_DWORD *)(v434 + 4 * v408);
  STACK[0xDAC0] = (unint64_t)v435;
  LODWORD(v413) = *v435;
  v436 = v434 + 4 * BYTE3(v400);
  STACK[0xDAC0] = v436;
  LODWORD(v435) = *(_DWORD *)v436;
  v437 = (_DWORD *)(v434 + 4 * BYTE2(v426));
  STACK[0xDAC0] = (unint64_t)v437;
  LODWORD(v436) = *v437;
  STACK[0xDAC0] = v434;
  LODWORD(v437) = *(_DWORD *)(v434 + 4 * BYTE1(v400));
  v438 = v434 + 4 * BYTE1(v408);
  STACK[0xDAC0] = v438;
  LODWORD(v419) = *(_DWORD *)v438;
  v439 = v434 + 4 * BYTE1(v406);
  STACK[0xDAC0] = v439;
  LODWORD(v438) = *(_DWORD *)v439;
  v440 = (_DWORD *)(v434 + 4 * BYTE2(v408));
  STACK[0xDAC0] = (unint64_t)v440;
  LODWORD(v439) = *v440;
  v441 = 4 * BYTE3(v408);
  v442 = v434 + v441;
  v443 = 4 * (v406 >> 24);
  v444 = v442 + v443 - v441;
  STACK[0xDAC0] = v442;
  LODWORD(v442) = *(_DWORD *)v442;
  STACK[0xDAC0] = v444;
  v445 = v444 - v443;
  LODWORD(v444) = *(_DWORD *)v444;
  v446 = (_DWORD *)(v445 + 4 * v400);
  STACK[0xDAC0] = (unint64_t)v446;
  LODWORD(v404) = *v446;
  v447 = 4 * BYTE1(v426);
  v448 = (_DWORD *)(v445 + v447);
  v449 = 4 * BYTE2(v400);
  v450 = &v448[(unint64_t)v449 / 4 + v447 / 0xFFFFFFFFFFFFFFFCLL];
  v451 = 4 * v426;
  v452 = &v450[(unint64_t)v451 / 4 + v449 / 0xFFFFFFFFFFFFFFFCLL];
  v453 = 4 * BYTE2(v406);
  v454 = &v452[(unint64_t)v453 / 4 + v451 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v365) = LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6460]);
  v455 = v365 ^ LODWORD(STACK[0x6380]);
  LODWORD(STACK[0x66A0]) = v221;
  LODWORD(v442) = v455 ^ v221 ^ __ROR4__(v438, 8) ^ __ROR4__(v442, 24);
  STACK[0xDAC0] = (unint64_t)v448;
  LODWORD(v438) = *v448;
  STACK[0xDAC0] = (unint64_t)v450;
  LODWORD(v442) = v442 ^ *v450;
  STACK[0xDAC0] = (unint64_t)v452;
  LODWORD(v452) = v442 ^ __ROR4__(*v452, 16);
  LODWORD(v442) = v365 ^ LODWORD(STACK[0x6378]);
  LODWORD(v431) = v442 ^ LODWORD(STACK[0x6950]) ^ __ROR4__((_DWORD)v431, 16) ^ __ROR4__((_DWORD)v433, 24) ^ __ROR4__((_DWORD)v437, 8) ^ v439;
  LODWORD(v433) = v442 ^ LODWORD(STACK[0x68D0]) ^ v436 ^ __ROR4__(v419, 8) ^ __ROR4__(v444, 24) ^ __ROR4__(v404, 16);
  LODWORD(v444) = v455 ^ LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x6960]) ^ __ROR4__((_DWORD)v413, 16) ^ __ROR4__((_DWORD)v435, 24);
  STACK[0xDAC0] = (unint64_t)v454;
  v456 = &v454[v453 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v454) = v444 ^ __ROR4__(v438, 8) ^ *v454;
  v457 = &v456[BYTE1(v433)];
  STACK[0xDAC0] = (unint64_t)v457;
  LODWORD(v444) = *v457;
  v458 = &v456[BYTE1(v454)];
  STACK[0xDAC0] = (unint64_t)v458;
  LODWORD(v457) = *v458;
  v459 = BYTE2(v452);
  v460 = (unint64_t)&v456[v459];
  v461 = 4 * BYTE2(v454);
  v462 = (_DWORD *)(v460 + v461 - v459 * 4);
  STACK[0xDAC0] = v460;
  LODWORD(v460) = *(_DWORD *)v460 ^ __ROR4__((_DWORD)v457, 8);
  STACK[0xDAC0] = (unint64_t)v462;
  v463 = &v462[v461 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v444) = *v462 ^ __ROR4__(v444, 8);
  v464 = v452;
  v465 = (unint64_t)&v463[v464];
  v466 = 4 * (v433 >> 24);
  v467 = v465 + v466 - v464 * 4;
  STACK[0xDAC0] = v465;
  LODWORD(v465) = *(_DWORD *)v465;
  STACK[0xDAC0] = v467;
  v468 = v467 - v466;
  LODWORD(v467) = *(_DWORD *)v467;
  v469 = 4 * BYTE1(v452);
  v470 = (_DWORD *)(v468 + v469);
  STACK[0xDAC0] = (unint64_t)v470;
  v471 = 4 * v431;
  HIDWORD(v318) = v467;
  LODWORD(v318) = v467;
  LODWORD(v467) = v318 >> 24;
  HIDWORD(v318) = *v470;
  LODWORD(v318) = *v470;
  v472 = &v470[(unint64_t)v471 / 4 + v469 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v467) = (v467 ^ -(int)v467 ^ ((v318 >> 8) - ((v318 >> 8) ^ v467))) + (v318 >> 8);
  STACK[0xDAC0] = (unint64_t)v472;
  v473 = &v472[v471 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v472) = *v472;
  v474 = &v473[BYTE1(v431)];
  STACK[0xDAC0] = (unint64_t)v474;
  HIDWORD(v318) = *v474;
  LODWORD(v318) = *v474;
  LODWORD(v444) = v444 ^ __ROR4__((_DWORD)v472, 16);
  LODWORD(v465) = (v318 >> 8) ^ __ROR4__(v465, 16);
  v475 = 4 * (v452 >> 24);
  v476 = &v473[(unint64_t)v475 / 4];
  v477 = 4 * v433;
  v478 = &v476[(unint64_t)v477 / 4 + v475 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v476;
  LODWORD(v438) = v444 ^ __ROR4__(*v476, 24);
  LODWORD(STACK[0x65C0]) = v438;
  STACK[0xDAC0] = (unint64_t)v478;
  v479 = &v478[v477 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v460) = v460 ^ __ROR4__(*v478, 16);
  v480 = BYTE2(v431);
  v481 = &v479[v480];
  STACK[0xDAC0] = (unint64_t)v481;
  LODWORD(v467) = *v481 ^ v467;
  v482 = 4 * v454;
  v483 = (unint64_t)v481 + v482 - v480 * 4;
  v484 = 4 * (v431 >> 24);
  v485 = (_DWORD *)(v483 + v484 - v482);
  STACK[0xDAC0] = v483;
  LODWORD(v483) = v467 ^ __ROR4__(*(_DWORD *)v483, 16);
  STACK[0xDAC0] = (unint64_t)v485;
  LODWORD(v460) = v460 ^ __ROR4__(*v485, 24);
  v486 = v454 >> 24;
  v487 = &v485[v484 / 0xFFFFFFFFFFFFFFFCLL + v486];
  v488 = 4 * BYTE2(v433);
  v489 = (_DWORD *)((char *)v487 + v488 - v486 * 4);
  STACK[0xDAC0] = (unint64_t)v487;
  LODWORD(v318) = __ROR4__(*v487, 24);
  STACK[0xDAC0] = (unint64_t)v489;
  v490 = v465 ^ v318 ^ *v489;
  v491 = (unint64_t)v489 - v488;
  v492 = v460 - v288 + v340;
  v493 = v374 ^ v429;
  LODWORD(v460) = v374 ^ v429 ^ LODWORD(STACK[0x6360]) ^ LODWORD(STACK[0x6940]) ^ v492;
  v494 = 4 * BYTE1(v460);
  STACK[0xDAC0] = v491 + v494;
  LODWORD(v465) = v374 ^ v429 ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6920]) ^ v490;
  LODWORD(v494) = *(_DWORD *)(v491 + v494);
  v495 = 4 * BYTE3(v465);
  STACK[0xDAC0] = v491 + v495;
  LODWORD(v488) = v483 - LODWORD(STACK[0x6AA0]) + v288;
  LODWORD(v483) = v374 ^ v429 ^ LODWORD(STACK[0x6370]) ^ LODWORD(STACK[0x6910]) ^ v488;
  LODWORD(v495) = *(_DWORD *)(v491 + v495);
  v496 = (_DWORD *)(v491 + 4 * BYTE2(v483));
  STACK[0xDAC0] = (unint64_t)v496;
  LODWORD(v482) = *v496;
  v497 = 4 * BYTE2(v460);
  STACK[0xDAC0] = v491 + v497;
  LODWORD(v474) = v374 ^ v429 ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x6930]) ^ v438;
  LODWORD(v497) = *(_DWORD *)(v491 + v497);
  STACK[0xDAC0] = v491;
  LODWORD(v438) = *(_DWORD *)(v491 + 4 * BYTE2(v474));
  v498 = 4 * (v474 >> 24);
  v499 = v491 + v498;
  v500 = 4 * v474;
  v501 = (_DWORD *)(v499 + v500 - v498);
  STACK[0xDAC0] = v499;
  LODWORD(v499) = *(_DWORD *)v499;
  STACK[0xDAC0] = (unint64_t)v501;
  v502 = &v501[v500 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v501) = *v501;
  v503 = &v502[BYTE3(v460)];
  STACK[0xDAC0] = (unint64_t)v503;
  LODWORD(v404) = *v503;
  v504 = &v502[BYTE1(v483)];
  STACK[0xDAC0] = (unint64_t)v504;
  LODWORD(v503) = *v504;
  v505 = &v502[v483];
  STACK[0xDAC0] = (unint64_t)v505;
  LODWORD(v504) = *v505;
  v506 = &v502[BYTE1(v474)];
  STACK[0xDAC0] = (unint64_t)v506;
  LODWORD(v474) = *v506;
  v507 = 4 * v460;
  v508 = &v502[(unint64_t)v507 / 4];
  v509 = 4 * BYTE1(v465);
  v510 = &v508[(unint64_t)v509 / 4 + v507 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v508;
  v511 = *v508;
  STACK[0xDAC0] = (unint64_t)v510;
  v512 = &v510[v509 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v510) = *v510;
  v513 = &v512[BYTE3(v483)];
  STACK[0xDAC0] = (unint64_t)v513;
  LODWORD(v483) = *v513;
  v514 = &v512[BYTE2(v465)];
  v515 = 4 * v465;
  v516 = &v512[(unint64_t)v515 / 4];
  v517 = v410 ^ v295;
  LODWORD(v510) = v410 ^ v295 ^ STACK[0x6238] ^ LODWORD(STACK[0x61E8]) ^ LODWORD(STACK[0x6900]) ^ v438 ^ __ROR4__(v404, 24) ^ __ROR4__((_DWORD)v504, 16) ^ __ROR4__((_DWORD)v510, 8);
  LODWORD(v499) = v410 ^ v295 ^ LODWORD(STACK[0x6310]) ^ LODWORD(STACK[0x6800]) ^ __ROR4__(v499, 24) ^ __ROR4__((_DWORD)v503, 8);
  STACK[0xDAC0] = (unint64_t)v514;
  LODWORD(v499) = v499 ^ __ROR4__(v511, 16) ^ *v514;
  LODWORD(v494) = v410 ^ v295 ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__(v494, 8) ^ __ROR4__(v495, 24) ^ v482 ^ __ROR4__((_DWORD)v501, 16);
  v518 = v410 ^ v295 ^ LODWORD(STACK[0x6358]);
  LODWORD(v495) = v518 ^ LODWORD(STACK[0x68F0]) ^ v497 ^ __ROR4__((_DWORD)v474, 8);
  STACK[0xDAC0] = (unint64_t)v516;
  v519 = &v516[v515 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v483) = v495 ^ __ROR4__(v483, 24) ^ HIWORD(*v516);
  LODWORD(v495) = v483 ^ (*v516 << 16);
  v520 = &v519[BYTE1(v483)];
  STACK[0xDAC0] = (unint64_t)v520;
  LODWORD(v483) = *v520;
  v521 = &v519[BYTE3(v495)];
  STACK[0xDAC0] = (unint64_t)v521;
  LODWORD(v520) = *v521;
  v522 = v510 >> 24;
  v523 = (unint64_t)&v519[v522];
  v524 = 4 * v499;
  v525 = (_DWORD *)(v523 + v524 - v522 * 4);
  v526 = BYTE2(v510);
  v527 = (unint64_t)&v525[v526 + v524 / 0xFFFFFFFFFFFFFFFCLL];
  v528 = 4 * BYTE1(v499);
  v529 = (_DWORD *)(v527 + v528 - v526 * 4);
  v530 = 4 * BYTE1(v510);
  v531 = &v529[(unint64_t)v530 / 4 + v528 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = v523;
  LODWORD(v523) = *(_DWORD *)v523;
  STACK[0xDAC0] = (unint64_t)v525;
  LODWORD(v525) = *v525;
  STACK[0xDAC0] = v527;
  LODWORD(v527) = *(_DWORD *)v527;
  STACK[0xDAC0] = (unint64_t)v529;
  LODWORD(v529) = *v529;
  STACK[0xDAC0] = (unint64_t)v531;
  v532 = &v531[v530 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v531) = *v531;
  v533 = &v532[BYTE1(v494)];
  STACK[0xDAC0] = (unint64_t)v533;
  LODWORD(v533) = *v533;
  v534 = 4 * v510;
  v535 = &v532[(unint64_t)v534 / 4];
  v536 = 4 * BYTE3(v499);
  v537 = &v535[(unint64_t)v536 / 4 + v534 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v535;
  LODWORD(v535) = *v535;
  STACK[0xDAC0] = (unint64_t)v537;
  v538 = &v537[v536 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v537) = *v537;
  v539 = &v538[v494];
  STACK[0xDAC0] = (unint64_t)v539;
  LODWORD(v516) = *v539;
  v540 = &v538[BYTE3(v494)];
  STACK[0xDAC0] = (unint64_t)v540;
  LODWORD(v539) = *v540;
  v541 = &v538[v495];
  STACK[0xDAC0] = (unint64_t)v541;
  LODWORD(v540) = *v541;
  v542 = &v538[BYTE2(v499)];
  v543 = (unint64_t)&v538[BYTE2(v495)];
  v544 = BYTE2(v494);
  v545 = (unint64_t)&v538[v544];
  v546 = LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x66E8]);
  LODWORD(v523) = v546 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__(v523, 24) ^ __ROR4__((_DWORD)v533, 8);
  STACK[0xDAC0] = (unint64_t)v542;
  LODWORD(v523) = v523 ^ __ROR4__((_DWORD)v540, 16) ^ *v542;
  LODWORD(v483) = v546 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x68C0]) ^ __ROR4__(v483, 8) ^ __ROR4__((_DWORD)v535, 16);
  STACK[0xDAC0] = v543;
  LODWORD(v543) = *(_DWORD *)v543;
  STACK[0xDAC0] = v545;
  v547 = v545 - v544 * 4;
  LODWORD(v537) = v483 ^ __ROR4__((_DWORD)v537, 24) ^ *(_DWORD *)v545;
  LODWORD(v543) = v546 ^ LODWORD(STACK[0x6218]) ^ STACK[0x6220] ^ LODWORD(STACK[0x6790]) ^ __ROR4__((_DWORD)v525, 16) ^ __ROR4__((_DWORD)v531, 8) ^ __ROR4__((_DWORD)v539, 24) ^ v543;
  LODWORD(v483) = v546 ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x61DC]) ^ LODWORD(STACK[0x6770]) ^ __ROR4__((_DWORD)v520, 24) ^ v527 ^ __ROR4__((_DWORD)v529, 8);
  v548 = (_DWORD *)(v547 + 4 * BYTE2(v537));
  STACK[0xDAC0] = (unint64_t)v548;
  LODWORD(v545) = *v548;
  LODWORD(v483) = v483 ^ __ROR4__((_DWORD)v516, 16);
  STACK[0xDAC0] = v547;
  LODWORD(v548) = *(_DWORD *)(v547 + 4 * BYTE3(v483));
  v549 = 4 * v537;
  v550 = (_DWORD *)(v547 + v549);
  v551 = BYTE3(v543);
  v552 = (unint64_t)&v550[v551 + v549 / 0xFFFFFFFFFFFFFFFCLL];
  v553 = 4 * BYTE1(v537);
  v554 = v552 + v553 - v551 * 4;
  STACK[0xDAC0] = (unint64_t)v550;
  LODWORD(v550) = *v550;
  STACK[0xDAC0] = v552;
  LODWORD(v552) = *(_DWORD *)v552;
  STACK[0xDAC0] = v554;
  v555 = v554 - v553;
  LODWORD(v554) = *(_DWORD *)v554;
  v556 = (_DWORD *)(v555 + 4 * BYTE1(v523));
  STACK[0xDAC0] = (unint64_t)v556;
  LODWORD(v531) = *v556;
  v557 = 4 * BYTE3(v523);
  v558 = (_DWORD *)(v555 + v557);
  v559 = v543;
  v560 = (unint64_t)&v558[v559 + v557 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v558;
  LODWORD(v558) = *v558;
  STACK[0xDAC0] = v560;
  v561 = v560 - v559 * 4;
  LODWORD(v560) = *(_DWORD *)v560;
  v562 = (_DWORD *)(v561 + 4 * BYTE1(v543));
  STACK[0xDAC0] = (unint64_t)v562;
  LODWORD(v516) = *v562;
  v563 = 4 * BYTE2(v483);
  v564 = v561 + v563;
  v565 = 4 * (v537 >> 24);
  v566 = (_DWORD *)(v564 + v565 - v563);
  STACK[0xDAC0] = v564;
  LODWORD(v564) = *(_DWORD *)v564;
  STACK[0xDAC0] = (unint64_t)v566;
  v567 = &v566[v565 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v566) = *v566;
  v568 = &v567[v483];
  STACK[0xDAC0] = (unint64_t)v568;
  LODWORD(v540) = *v568;
  v569 = 4 * v523;
  v570 = &v567[(unint64_t)v569 / 4];
  v571 = BYTE2(v543);
  v572 = (unint64_t)&v570[v571 + v569 / 0xFFFFFFFFFFFFFFFCLL];
  v573 = 4 * BYTE1(v483);
  v574 = (_DWORD *)(v572 - v571 * 4 + v573);
  v575 = 4 * BYTE2(v523);
  v576 = (unint64_t)v574 + v575 - v573;
  STACK[0xDAC0] = (unint64_t)v570;
  v577 = *v570;
  STACK[0xDAC0] = v572;
  LODWORD(v572) = *(_DWORD *)v572;
  STACK[0xDAC0] = (unint64_t)v574;
  LODWORD(v574) = *v574;
  STACK[0xDAC0] = v576;
  v578 = v576 - v575;
  LODWORD(v576) = *(_DWORD *)v576;
  STACK[0xDAC0] = v578;
  v579 = LODWORD(STACK[0x6408]) ^ v295;
  LODWORD(v444) = STACK[0x6890];
  LODWORD(v550) = v579 ^ LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6890]) ^ __ROR4__((_DWORD)v550, 16) ^ __ROR4__(v552, 24) ^ __ROR4__((_DWORD)v531, 8) ^ v564;
  LODWORD(v574) = v579 ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x68A0]) ^ __ROR4__((_DWORD)v566, 24) ^ __ROR4__(v577, 16) ^ v572 ^ __ROR4__((_DWORD)v574, 8);
  LODWORD(v552) = v579 ^ LODWORD(STACK[0x6338]);
  LODWORD(STACK[0x65B8]) = v552;
  LODWORD(v575) = v552 ^ LODWORD(STACK[0x68B0]) ^ v545 ^ __ROR4__((_DWORD)v558, 24) ^ __ROR4__((_DWORD)v516, 8);
  LODWORD(v576) = v579 ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x6880]) ^ __ROR4__((_DWORD)v548, 24) ^ __ROR4__(v554, 8) ^ __ROR4__(v560, 16) ^ v576;
  v580 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v576));
  v581 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v576));
  LODWORD(v554) = *(_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v550));
  LODWORD(v575) = v575 ^ __ROR4__((_DWORD)v540, 16);
  v582 = (_DWORD *)(STACK[0xDAB0] + 4 * (v574 >> 24));
  v583 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE3(v575));
  LODWORD(v560) = *(_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v574));
  LODWORD(v564) = *(_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v574));
  v584 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v575));
  v585 = (_DWORD *)(STACK[0xDAB0] + 4 * (v550 >> 24));
  v586 = (_DWORD *)(STACK[0xDAB0] + 4 * v575);
  v587 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v575));
  v588 = (_DWORD *)(STACK[0xDAB0] + 4 * v550);
  v589 = (int *)(STACK[0xDAB0] + 4 * BYTE3(v576));
  v590 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v550));
  v591 = STACK[0xDAB0] + 4 * v574;
  v592 = 4 * v576;
  v593 = (_DWORD *)(STACK[0xDAB0] + v592);
  STACK[0xDAB0] = (unint64_t)v586;
  LODWORD(v586) = *v586;
  STACK[0xDAB0] = (unint64_t)v587;
  LODWORD(v587) = *v587;
  STACK[0xDAB0] = (unint64_t)v588;
  LODWORD(v588) = *v588;
  STACK[0xDAB0] = (unint64_t)v589;
  v594 = *v589;
  STACK[0xDAB0] = (unint64_t)v590;
  LODWORD(v589) = *v590;
  STACK[0xDAB0] = v591;
  LODWORD(v591) = (*(_DWORD *)v591 >> (STACK[0x6A70] & 8) >> (STACK[0x6A70] & 8 ^ 8)) | (*(_DWORD *)v591 << 24);
  STACK[0xDAB0] = (unint64_t)v593;
  v595 = (unint64_t)&v593[v592 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v593) = *v593;
  STACK[0xDAB0] = v595;
  v596 = STACK[0x64B0];
  LODWORD(v595) = LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x64B0]) ^ *v581 ^ __ROR4__(*v582, 16) ^ __ROR4__((_DWORD)v586, 8);
  LODWORD(v318) = __ROR4__((_DWORD)v589, 24);
  LODWORD(STACK[0x65D0]) = (v595 ^ v318) - 509984512 - ((2 * (v595 ^ v318)) & 0xC3348200);
  LODWORD(v595) = LODWORD(STACK[0x6708]) ^ v596 ^ v560 ^ __ROR4__((_DWORD)v587, 24) ^ __ROR4__((_DWORD)v588, 8);
  LODWORD(v318) = __ROR4__(v594, 16);
  LODWORD(STACK[0x65C8]) = (v595 ^ v318) - 509984512 - ((2 * (v595 ^ v318)) & 0xC3348200);
  LODWORD(v595) = *v580;
  v597 = STACK[0x6520];
  LODWORD(STACK[0x65D8]) = v596 ^ LODWORD(STACK[0x6520]);
  LODWORD(v595) = v596 ^ v597 ^ LODWORD(STACK[0x6720]) ^ __ROR4__(v595, 24) ^ *v584;
  LODWORD(v318) = __ROR4__(*v585, 16);
  LODWORD(STACK[0x65E0]) = (v595 ^ v318 ^ v591) - 509984512 - ((2 * (v595 ^ v318 ^ v591)) & 0xC3348200);
  LODWORD(v591) = v596 ^ v597 ^ LODWORD(STACK[0x6710]) ^ v554 ^ __ROR4__(*v583, 16) ^ __ROR4__(v564, 24);
  LODWORD(v318) = __ROR4__((_DWORD)v593, 8);
  v598 = (v591 ^ v318) - 509984512 - ((2 * (v591 ^ v318)) & 0xC3348200);
  v599 = (v490 ^ 0x940E3306 ^ (v492 - LODWORD(STACK[0x65C0]) - 256800218)) - v488;
  v600 = v493 ^ LODWORD(STACK[0x61F8]) ^ STACK[0x6200] ^ LODWORD(STACK[0x6820]) ^ v488;
  v601 = STACK[0x6368];
  if ((_DWORD)v444)
    v601 = STACK[0x6330];
  v602 = v493 ^ LODWORD(STACK[0x6840]) ^ (((v601 & STACK[0x6688]) >> STACK[0x6A60]) | LODWORD(STACK[0x6328])) ^ LODWORD(STACK[0x65C0]);
  v603 = v493 ^ LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x6850]) ^ v492;
  v604 = v493 ^ LODWORD(STACK[0x6318]) ^ LODWORD(STACK[0x6830]) ^ v490;
  v605 = STACK[0xDAC0];
  v606 = STACK[0xDAC0] + 4 * BYTE2(v604);
  STACK[0xDAC0] = v606;
  v607 = *(_DWORD *)v606;
  STACK[0xDAC0] = v605;
  LODWORD(v606) = *(_DWORD *)(v605 + 4 * BYTE1(v604));
  v608 = (int *)(v605 + 4 * BYTE2(v602));
  STACK[0xDAC0] = (unint64_t)v608;
  v609 = *v608;
  v610 = (_DWORD *)(v605 + 4 * BYTE1(v600));
  STACK[0xDAC0] = (unint64_t)v610;
  LODWORD(v608) = *v610;
  v611 = v605 + 4 * v603;
  STACK[0xDAC0] = v611;
  LODWORD(v610) = *(_DWORD *)v611;
  v612 = (_DWORD *)(v605 + 4 * BYTE2(v603));
  STACK[0xDAC0] = (unint64_t)v612;
  LODWORD(v611) = *v612;
  STACK[0xDAC0] = v605;
  LODWORD(v612) = *(_DWORD *)(v605 + 4 * v604);
  v613 = (int *)(v605 + 4 * HIBYTE(v604));
  STACK[0xDAC0] = (unint64_t)v613;
  v614 = *v613;
  v615 = 4 * BYTE1(v603);
  v616 = (_DWORD *)(v605 + v615);
  v617 = 4 * BYTE1(v602);
  v618 = &v616[(unint64_t)v617 / 4 + v615 / 0xFFFFFFFFFFFFFFFCLL];
  v619 = HIBYTE(v600);
  v620 = (unint64_t)&v618[v619 + v617 / 0xFFFFFFFFFFFFFFFCLL];
  v621 = 4 * HIBYTE(v603);
  v622 = (_DWORD *)(v620 + v621 - v619 * 4);
  v623 = 4 * v602;
  v624 = &v622[v621 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v623 / 4];
  v625 = 4 * BYTE2(v600);
  v626 = &v624[(unint64_t)v625 / 4 + v623 / 0xFFFFFFFFFFFFFFFCLL];
  v627 = 4 * HIBYTE(v602);
  v628 = &v626[v625 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v627 / 4];
  v629 = 4 * v600;
  v630 = &v628[(unint64_t)v629 / 4 + v627 / 0xFFFFFFFFFFFFFFFCLL];
  v631 = v517 ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x67F0]) ^ v607 ^ __ROR4__((_DWORD)v608, 8) ^ __ROR4__((_DWORD)v610, 16);
  STACK[0xDAC0] = (unint64_t)v616;
  LODWORD(v616) = *v616;
  STACK[0xDAC0] = (unint64_t)v618;
  LODWORD(v608) = *v618;
  STACK[0xDAC0] = v620;
  LODWORD(v610) = *(_DWORD *)v620;
  STACK[0xDAC0] = (unint64_t)v622;
  LODWORD(v618) = *v622;
  STACK[0xDAC0] = (unint64_t)v624;
  LODWORD(v624) = *v624;
  STACK[0xDAC0] = (unint64_t)v626;
  LODWORD(v620) = *v626;
  STACK[0xDAC0] = (unint64_t)v628;
  v632 = v631 ^ __ROR4__(*v628, 24);
  LODWORD(v608) = v517 ^ LODWORD(STACK[0x6308]) ^ LODWORD(STACK[0x67C0]) ^ v611 ^ __ROR4__((_DWORD)v612, 16) ^ __ROR4__((_DWORD)v608, 8) ^ __ROR4__((_DWORD)v610, 24);
  LODWORD(v606) = v517 ^ LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x6810]) ^ __ROR4__(v606, 8) ^ v609 ^ __ROR4__((_DWORD)v618, 24);
  STACK[0xDAC0] = (unint64_t)v630;
  v633 = (unint64_t)&v630[v629 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v630) = v606 ^ __ROR4__(*v630, 16);
  LODWORD(v624) = v518 ^ LODWORD(STACK[0x67D0]) ^ __ROR4__(v614, 24) ^ __ROR4__((_DWORD)v616, 8) ^ __ROR4__((_DWORD)v624, 16) ^ v620;
  v634 = v633 + 4 * BYTE2(v624);
  STACK[0xDAC0] = v634;
  v635 = *(_DWORD *)v634;
  STACK[0xDAC0] = v633;
  LODWORD(v634) = *(_DWORD *)(v633 + 4 * BYTE2(v630));
  v636 = 4 * BYTE1(v624);
  v637 = v633 + v636;
  v638 = 4 * (v630 >> 24);
  v639 = (_DWORD *)(v637 + v638 - v636);
  STACK[0xDAC0] = v637;
  LODWORD(v637) = *(_DWORD *)v637;
  STACK[0xDAC0] = (unint64_t)v639;
  v640 = &v639[v638 / 0xFFFFFFFFFFFFFFFCLL];
  HIDWORD(v641) = *v639;
  LODWORD(v641) = *v639;
  v642 = BYTE1(v608);
  v643 = (unint64_t)&v640[v642];
  v644 = 4 * BYTE2(v608);
  v645 = v643 + v644 - v642 * 4;
  STACK[0xDAC0] = v643;
  LODWORD(v643) = *(_DWORD *)v643;
  STACK[0xDAC0] = v645;
  v646 = v645 - v644;
  LODWORD(v645) = *(_DWORD *)v645;
  STACK[0xDAC0] = v646;
  v647 = *(_DWORD *)(v646 + 4 * v624);
  v648 = (_DWORD *)(v646 + 4 * v608);
  STACK[0xDAC0] = (unint64_t)v648;
  LODWORD(v611) = *v648;
  v649 = (_DWORD *)(v646 + 4 * BYTE1(v630));
  STACK[0xDAC0] = (unint64_t)v649;
  LODWORD(v637) = (v641 >> 24) ^ __ROR4__(v637, 8) ^ __ROR4__(v611, 16);
  LODWORD(v611) = *v649;
  v650 = 4 * (v608 >> 24);
  STACK[0xDAC0] = v646 + v650;
  HIDWORD(v641) = v611;
  LODWORD(v641) = v611;
  LODWORD(v650) = *(_DWORD *)(v646 + v650);
  v651 = (_DWORD *)(v646 + 4 * BYTE1(v632));
  STACK[0xDAC0] = (unint64_t)v651;
  LODWORD(v611) = *v651;
  v652 = (_DWORD *)(v646 + 4 * HIBYTE(v632));
  STACK[0xDAC0] = (unint64_t)v652;
  LODWORD(v648) = *v652;
  v653 = 4 * (v624 >> 24);
  v654 = (_DWORD *)(v646 + v653);
  v655 = 4 * v630;
  v656 = &v654[(unint64_t)v655 / 4 + v653 / 0xFFFFFFFFFFFFFFFCLL];
  v657 = BYTE2(v632);
  v658 = (unint64_t)&v656[v655 / 0xFFFFFFFFFFFFFFFCLL + v657];
  v659 = 4 * v632;
  v660 = (_DWORD *)(v658 + v659 - v657 * 4);
  STACK[0xDAC0] = (unint64_t)v654;
  LODWORD(v654) = *v654;
  STACK[0xDAC0] = (unint64_t)v656;
  LODWORD(v656) = *v656;
  STACK[0xDAC0] = v658;
  LODWORD(v658) = LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x66E0]) ^ *(_DWORD *)v658;
  LODWORD(v637) = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6300]) ^ (v658 + v637 - 2 * (v658 & v637));
  LODWORD(v658) = v546 ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6780]) ^ (((v641 >> 8) ^ -(int)(v641 >> 8) ^ (v645 - ((v641 >> 8) ^ v645)))
                                                                          + v645) ^ __ROR4__((_DWORD)v654, 24);
  STACK[0xDAC0] = (unint64_t)v660;
  v661 = (unint64_t)&v660[v659 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v658) = v658 ^ __ROR4__(*v660, 16);
  LODWORD(v634) = v546 ^ LODWORD(STACK[0x62F8]) ^ LODWORD(STACK[0x6760]) ^ v634 ^ __ROR4__(v647, 16) ^ __ROR4__(v650, 24);
  v662 = v546 ^ STACK[0x61C0] ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x67A0]) ^ v635 ^ __ROR4__(v643, 8) ^ __ROR4__((_DWORD)v648, 24) ^ __ROR4__((_DWORD)v656, 16);
  v663 = v661 + 4 * BYTE2(v637);
  STACK[0xDAC0] = v663;
  LODWORD(v663) = *(_DWORD *)v663;
  STACK[0xDAC0] = v661;
  LODWORD(v643) = *(_DWORD *)(v661 + 4 * BYTE2(v662));
  v664 = v661 + 4 * BYTE2(v658);
  STACK[0xDAC0] = v664;
  LODWORD(v664) = *(_DWORD *)v664;
  LODWORD(v634) = v634 ^ __ROR4__(v611, 8);
  STACK[0xDAC0] = v661;
  LODWORD(v654) = *(_DWORD *)(v661 + 4 * BYTE1(v662));
  v665 = v661 + 4 * BYTE2(v634);
  STACK[0xDAC0] = v665;
  LODWORD(v665) = *(_DWORD *)v665;
  v666 = v599 ^ 0xA752EDA7;
  STACK[0xDAC0] = v661;
  v667 = *(_DWORD *)(v661 + 4 * BYTE1(v634));
  v668 = 4 * BYTE3(v658);
  v669 = (_DWORD *)(v661 + v668);
  v670 = 4 * BYTE1(v658);
  v671 = &v669[(unint64_t)v670 / 4 + v668 / 0xFFFFFFFFFFFFFFFCLL];
  v672 = 4 * BYTE3(v637);
  v673 = &v671[v670 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v672 / 4];
  v674 = 4 * HIBYTE(v662);
  v675 = &v673[(unint64_t)v674 / 4 + v672 / 0xFFFFFFFFFFFFFFFCLL];
  v676 = 4 * v658;
  v677 = &v675[(unint64_t)v676 / 4 + v674 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDAC0] = (unint64_t)v669;
  LODWORD(v669) = *v669;
  STACK[0xDAC0] = (unint64_t)v671;
  LODWORD(v671) = *v671;
  STACK[0xDAC0] = (unint64_t)v673;
  LODWORD(v673) = *v673;
  STACK[0xDAC0] = (unint64_t)v675;
  LODWORD(v675) = *v675;
  STACK[0xDAC0] = (unint64_t)v677;
  v678 = (unint64_t)&v677[v676 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v677) = *v677;
  v679 = (int *)(v678 + 4 * v637);
  STACK[0xDAC0] = (unint64_t)v679;
  v680 = *v679;
  v681 = (_DWORD *)(v678 + 4 * v634);
  STACK[0xDAC0] = (unint64_t)v681;
  LODWORD(v679) = *v681;
  v682 = (_DWORD *)(v678 + 4 * BYTE1(v637));
  STACK[0xDAC0] = (unint64_t)v682;
  LODWORD(v637) = *v682;
  v683 = (_DWORD *)(v678 + 4 * BYTE3(v634));
  STACK[0xDAC0] = (unint64_t)v683;
  LODWORD(v634) = *v683;
  v684 = (int *)(v678 + 4 * v662);
  STACK[0xDAC0] = (unint64_t)v684;
  v685 = *v684;
  STACK[0xDAC0] = v678;
  v686 = LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x6730]) ^ v663 ^ __ROR4__((_DWORD)v654, 8) ^ __ROR4__((_DWORD)v677, 16) ^ __ROR4__(v634, 24);
  v687 = v579 ^ LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6740]) ^ v664 ^ __ROR4__(v667, 8) ^ __ROR4__((_DWORD)v675, 24) ^ __ROR4__(v680, 16);
  v688 = v579 ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6AC0]) ^ v665 ^ __ROR4__((_DWORD)v669, 24) ^ __ROR4__(v637, 8) ^ __ROR4__(v685, 16);
  v689 = v579 ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6750]) ^ v643 ^ __ROR4__((_DWORD)v671, 8) ^ __ROR4__((_DWORD)v673, 24) ^ __ROR4__((_DWORD)v679, 16);
  v690 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v686));
  v691 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v688));
  v692 = *(_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v688)) ^ __ROR4__(*(_DWORD *)(STACK[0xDAB0] + 4 * HIBYTE(v689)), 16);
  v693 = (_DWORD *)(STACK[0xDAB0] + 4 * v688);
  HIDWORD(v641) = *(_DWORD *)(STACK[0xDAB0] + 4 * v686);
  LODWORD(v641) = HIDWORD(v641);
  v694 = v641 >> 8;
  v695 = v692 ^ 0xF9D4375;
  if (!LODWORD(STACK[0x6A70]))
    v695 = -261964662;
  v696 = STACK[0xDAB0] + 4 * HIBYTE(v687);
  v697 = v695 & v692 ^ v694 & 0xF062BC8A | (v694 ^ v692) & 0xF9D4375;
  v698 = (int *)(STACK[0xDAB0] + 4 * BYTE1(v689));
  v699 = (_DWORD *)(STACK[0xDAB0] + 4 * v689);
  v700 = (int *)(STACK[0xDAB0] + 4 * BYTE1(v686));
  v701 = (int *)(STACK[0xDAB0] + 4 * HIBYTE(v688));
  v702 = STACK[0xDAB0] + 4 * HIBYTE(v686);
  v703 = (int *)(STACK[0xDAB0] + 4 * v687);
  v704 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE2(v687));
  v705 = (_DWORD *)(STACK[0xDAB0] + 4 * BYTE1(v687));
  v706 = 4 * BYTE2(v689);
  v707 = (_DWORD *)(STACK[0xDAB0] + v706);
  v708 = v666 ^ LODWORD(STACK[0x66F8]) ^ v697;
  STACK[0xDAB0] = (unint64_t)v698;
  v709 = *v698;
  STACK[0xDAB0] = (unint64_t)v699;
  LODWORD(v698) = *v699;
  STACK[0xDAB0] = (unint64_t)v700;
  v710 = *v700;
  STACK[0xDAB0] = (unint64_t)v701;
  v711 = *v701;
  STACK[0xDAB0] = v702;
  LODWORD(v702) = *(_DWORD *)v702;
  STACK[0xDAB0] = (unint64_t)v703;
  v712 = *v703;
  STACK[0xDAB0] = (unint64_t)v704;
  v713 = __ROR4__(*v704, 24);
  v714 = (v708 ^ v713) - 509984512 - ((2 * (v708 ^ v713)) & 0xC3348200);
  LODWORD(v696) = v666 ^ v596 ^ LODWORD(STACK[0x6A90]) ^ __ROR4__(*v691, 24) ^ __ROR4__(*(_DWORD *)v696, 16);
  v715 = __ROR4__((_DWORD)v698, 8);
  v716 = (v696 ^ v715 ^ v710) - 509984512 - ((2 * (v696 ^ v715 ^ v710)) & 0xC3348200);
  v717 = v666 ^ v596 ^ LODWORD(STACK[0x66F0]) ^ __ROR4__(*v693, 8);
  STACK[0xDAB0] = (unint64_t)v705;
  LODWORD(v702) = v717 ^ __ROR4__(v702, 16) ^ *v705;
  STACK[0xDAB0] = (unint64_t)v707;
  v718 = __ROR4__(*v707, 24);
  v719 = (v702 ^ v718) - 509984512 - ((2 * (v702 ^ v718)) & 0xC3348200);
  v720 = STACK[0x6518];
  v721 = v597 ^ 0xD7F82308 ^ LODWORD(STACK[0x6518]);
  v722 = v721 ^ LODWORD(STACK[0x65C8]);
  v723 = v721 ^ LODWORD(STACK[0x65D0]);
  v724 = LODWORD(STACK[0x6518]) ^ 0xD7F82308 ^ v598;
  v725 = LODWORD(STACK[0x6518]) ^ 0xD7F82308 ^ LODWORD(STACK[0x65E0]);
  v726 = STACK[0x6AB0];
  if ((STACK[0x6AB0] & 1) != 0)
    v727 = v722;
  else
    v727 = v724;
  if ((v726 & 1) != 0)
  {
    v722 = v720 ^ 0xD7F82308 ^ LODWORD(STACK[0x65E0]);
    v725 = v723;
  }
  else
  {
    v724 = v723;
  }
  v728 = v597 ^ 0xC4F94DD7 ^ v720 ^ v716;
  v729 = LODWORD(STACK[0x65D8]) ^ v720 ^ 0xC4F94DD7 ^ v714;
  v730 = __ROR4__(LODWORD(STACK[0x61A8]) ^ 0x2C8D6607 ^ __ROR4__(v719 ^ v720, 13), 19) ^ 0x6839A846;
  v731 = v597 ^ 0xC4F94DD7 ^ LODWORD(STACK[0x6488]) ^ LODWORD(STACK[0x6700]) ^ v666 ^ __ROR4__(*v690, 24) ^ v709 ^ __ROR4__(v711, 16) ^ __ROR4__(v712, 8);
  if ((v726 & 1) != 0)
    v732 = v729;
  else
    v732 = v728;
  if ((v726 & 1) != 0)
  {
    v729 = v730;
  }
  else
  {
    v728 = v731;
    v731 = v730;
  }
  if ((v726 & 2) != 0)
    v733 = v727;
  else
    v733 = v725;
  if ((v726 & 2) != 0)
  {
    v734 = v722;
  }
  else
  {
    v725 = v727;
    v734 = v724;
  }
  if ((v726 & 2) != 0)
  {
    v735 = v731;
  }
  else
  {
    v724 = v722;
    v735 = v732;
  }
  if ((v726 & 2) != 0)
  {
    v731 = v732;
    v736 = v728;
  }
  else
  {
    v736 = v729;
  }
  if ((v726 & 2) == 0)
    v729 = v728;
  v737 = v725 ^ v733;
  v738 = v734 + 303006123 * ((v736 ^ 0x13016EDF) + (v729 ^ v737 ^ 0xECFE9120)) + 303006123;
  v739 = (1246118373 * (v735 ^ 0x13016EDF)) ^ v724 ^ (1246118373 * (v738 ^ v666));
  v740 = v729 ^ 0x13016EDF;
  v741 = ((v729 ^ 0x13016EDF ^ v666 ^ v737) + 1154086561 * ((v731 ^ 0x13016EDF) - (v739 ^ v666))) ^ v738 ^ v666 ^ v735;
  v742 = v731 ^ v733;
  v743 = v742 ^ v729;
  v744 = v742 ^ v739;
  v745 = v736 & 0x40000000;
  v746 = v741 ^ v744;
  v190 = (v746 & v736 & 0x40000000) == 0;
  v747 = v746 ^ 0x13016EDF;
  if (v190)
    v748 = v736 & 0x40000000;
  else
    v748 = -v745;
  v749 = v741 ^ v745 ^ (v748 + v747);
  v750 = (v749 ^ v666) + 1489579647 * ((v743 ^ 0x13016EDF) - (v731 ^ v666));
  v751 = v741 ^ (697554601 * v740) ^ (697554601 * v749);
  v752 = STACK[0x6860];
  v753 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6860]) - 21322) - 8;
  v754 = STACK[0x6628];
  *(_BYTE *)(v754 + STACK[0x6600]) = v753[(v741 ^ (-87 * v740) ^ (-87 * v749)) ^ 0xA9] ^ v741 ^ (-87 * v740) ^ (-87 * v749) ^ 0x76;
  v755 = (LODWORD(STACK[0x6670]) ^ 0x830C6D71) - ((2 * (LODWORD(STACK[0x6670]) ^ 0x830C6D71)) & 0x363F0584) + 455049930;
  v756 = (char *)*(&off_1015B46D0 + (v752 ^ 0x55ED)) - 12;
  v757 = v756[HIBYTE(v750) ^ 0xD1];
  *(_BYTE *)(v754 + (((v755 & 0x1219B6E9 ^ 0x100824E1) + (v755 & 0xEDE64916 ^ 0xC0024003) - 1) ^ 0xC9B64902)) = ((v757 >> 3) | (32 * v757)) ^ (((v757 >> 3) | (32 * v757)) >> 6) ^ (((v757 >> 3) | (32 * v757)) >> 2) ^ 0x41;
  v758 = (uint64_t)*(&off_1015B46D0 + (v752 ^ 0x5330));
  *(_BYTE *)(v754 + STACK[0x6620]) = *(_BYTE *)(v758 + (BYTE1(v750) ^ 0x9FLL)) ^ BYTE1(v750) ^ 0x34;
  v759 = (LODWORD(STACK[0x6608]) ^ 0x1097A7E1 | 0xA71DAA50)
       - (LODWORD(STACK[0x6608]) ^ 0x1097A7E1 | 0x58E255AF)
       + 1491228079;
  *(_BYTE *)(v754
           + (((v759 & 0x6554875D ^ 0x2440074D) + (v759 ^ 0xC99DA812) - ((v759 ^ 0xC99DA812) & 0x6554875D)) ^ 0x9AECE0A0)) = v753[BYTE1(v743) ^ 0x73] ^ BYTE1(v743) ^ 0xE0;
  v760 = v756[HIBYTE(v751) ^ 0x45];
  *(_BYTE *)(v754 + STACK[0x6610]) = ((v760 >> 3) | (32 * v760)) ^ (((v760 >> 3) | (32 * v760)) >> 6) ^ (((v760 >> 3) | (32 * v760)) >> 2) ^ 0x57;
  *(_BYTE *)(v754 + STACK[0x65E8]) = v753[v750 ^ 0x42] ^ v750 ^ 0x2F;
  v761 = (char *)*(&off_1015B46D0 + (v752 ^ 0x532E)) - 12;
  *(_BYTE *)(v754 + STACK[0x65F0]) = v761[BYTE2(v738) ^ 0x47] ^ 0x7F;
  v762 = STACK[0xDAC8];
  v763 = STACK[0xDAC8];
  *(_BYTE *)(v762 + STACK[0x65F8]) = *(_BYTE *)(v758 + (v738 ^ 0x67)) ^ v738 ^ 0xC4;
  v764 = (127895269
        - (LODWORD(STACK[0x6650]) ^ 0x9D6FB470)
        + ((2 * (LODWORD(STACK[0x6650]) ^ 0x9D6FB470)) & 0xF0C10D04)
        - 3440) ^ 0xE489F1F5;
  *(_BYTE *)(v762 + ((((2 * v764) & 0x8BFD03B4) - v764 - 1174307291) ^ 0x45D7808A)) = v761[BYTE2(v743) ^ 0xFBLL] ^ 0x22;
  *(_BYTE *)(v762 + STACK[0x6668]) = *(_BYTE *)(v758 + (BYTE2(v751) ^ 0x4FLL)) ^ BYTE2(v751) ^ 0x2C;
  v765 = STACK[0x6618];
  *(_BYTE *)(v762
           + (((LODWORD(STACK[0x6678]) ^ 0xFE541720)
             + (v765 & 0xEE514A12 ^ 0x1481A)
             - ((LODWORD(STACK[0x6678]) ^ 0xFE541720) & 0xEE514A12)) ^ 0x91AA9F64)) = HIBYTE(v743) ^ 0x8D ^ *(_BYTE *)(v758 + (HIBYTE(v743) ^ 0x79));
  *(_BYTE *)(v762 + STACK[0x6660]) = *(_BYTE *)(v758 + (BYTE1(v751) ^ 0x49)) ^ BYTE1(v751) ^ 0x2E;
  v766 = v756[HIBYTE(v738) ^ 0x5ALL];
  *(_BYTE *)(v762 + STACK[0x6640]) = ((v766 >> 3) | (32 * v766)) ^ (((v766 >> 3) | (32 * v766)) >> 6) ^ (((v766 >> 3) | (32 * v766)) >> 2) ^ 0x8B;
  *(_BYTE *)(v762
           + (((LODWORD(STACK[0x6648]) ^ 0xD80069F1)
             - 794494934
             - ((2 * (LODWORD(STACK[0x6648]) ^ 0xD80069F1)) & 0xA149F050)) ^ 0x890B538DLL)) = BYTE1(v738) ^ 0xE4 ^ *(_BYTE *)(v758 + (BYTE1(v738) ^ 0x93));
  *(_BYTE *)(v762 + STACK[0x6630]) = v761[BYTE2(v750) ^ 0xF7] ^ 0xFE;
  v767 = (((2 * (LODWORD(STACK[0x6658]) ^ 0x24EA820)) | 0x540F4EBE) - (LODWORD(STACK[0x6658]) ^ 0x24EA820) + 1442338977) ^ 0xF21B365F;
  *(_BYTE *)(v763 + ((((2 * v767) | 0x63D9ADDC) - v767 + 1309878546) ^ 0x6A112D91)) = v743 ^ 0xCE ^ *(_BYTE *)(v758 + (v743 ^ 0x9DLL));
  STACK[0xDAB0] = (unint64_t)&v707[v706 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v761) = (((v765 ^ 0x33718B49) - 863079241) ^ ((v765 ^ 0xB633DA39) + 1238115783) ^ ((v765 ^ 0x4ED9322)
                                                                                           - 82678562))
                - 2023070461;
  LODWORD(v758) = (v761 ^ 0xF2205C5F) & (2 * (v761 & 0xFA455D5F)) ^ v761 & 0xFA455D5F;
  v768 = ((2 * (v761 ^ 0x822AEC47)) ^ 0xF0DF6230) & (v761 ^ 0x822AEC47) ^ (2 * (v761 ^ 0x822AEC47)) & 0x786FB118;
  LODWORD(v758) = (v768 ^ 0x700F2010) & (4 * v758) ^ v758;
  v769 = ((4 * (v768 ^ 0x8209108)) ^ 0xE1BEC460) & (v768 ^ 0x8209108) ^ (4 * (v768 ^ 0x8209108)) & 0x786FB118;
  LODWORD(v758) = (v769 ^ 0x602E8000) & (16 * v758) ^ v758;
  v770 = ((16 * (v769 ^ 0x18413118)) ^ 0x86FB1180) & (v769 ^ 0x18413118) ^ (16 * (v769 ^ 0x18413118)) & 0x786FB110;
  LODWORD(v758) = v758 ^ 0x786FB118 ^ (v770 ^ 0x6B1100) & ((_DWORD)v758 << 8);
  LODWORD(v761) = v761 ^ (2
                                      * (((_DWORD)v758 << 16) & 0x786F0000 ^ v758 ^ (((_DWORD)v758 << 16) ^ 0x31180000) & (((v770 ^ 0x7804A018) << 8) & 0x786F0000 ^ 0x104E0000 ^ (((v770 ^ 0x7804A018) << 8) ^ 0x6FB10000) & (v770 ^ 0x7804A018))));
  LODWORD(v758) = (((v761 ^ 0xF453C370) - 527842893) ^ ((v761 ^ 0x997EDE7B) - 1918575430) ^ ((v761 ^ 0x7A72264) + 326967463))
                - 47063161;
  v63 = v758 >= LODWORD(STACK[0x6680]);
  v771 = LODWORD(STACK[0x6638]) ^ (v758 < 0x7B821D35);
  v772 = !v63;
  if (v771)
    v773 = STACK[0x6638];
  else
    v773 = v772;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((90 * v773) ^ v752)) - 12))();
}

uint64_t sub_100AC6408()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  unint64_t v8;

  v2 = STACK[0x6530];
  v3 = STACK[0x6480];
  LODWORD(STACK[0x6860]) = 1695 * (LODWORD(STACK[0x6530]) ^ 0x3AFB);
  v4 = STACK[0x66C8];
  v5 = v0 ^ (2
           * ((v0 & STACK[0x64A8] & 0x5A2EBDF6 ^ 0x4A209D86)
            + (v0 & STACK[0x64A8] ^ 0x959E2071)
            - ((v0 & STACK[0x64A8] ^ 0x959E2071) & 0x5A2EBDF6))) ^ 0x9F613B0E;
  v6 = STACK[0x6A60];
  v7 = STACK[0x66D0];
  v8 = STACK[0x6870];
  LODWORD(STACK[0x6638]) = ((unint64_t)(v5 & STACK[0x66D0]) << STACK[0x6870])
                         + ((v5 & STACK[0x6688]) >> STACK[0x6A60]);
  LODWORD(STACK[0x6A70]) = ((unint64_t)((v1 ^ (2 * (v1 & v3))) & v7) << v8) | (((v1 ^ (2 * (v1 & v3))) & v4) >> v6);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v2))();
}

uint64_t sub_100AC664C()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6860]) ^ 0x7CE6))
                                                   - ((LODWORD(STACK[0x6860]) ^ 0x7CE6u)
                                                    + 7290)
                                                   + 18275))(STACK[0xDAC0]);
}

uint64_t sub_100AC66C0()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = (uint64_t (*)(uint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v3 = v2(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1)
                                          - ((v1 - 12268) ^ 0x178BLL)))(v3);
}

uint64_t sub_100AC671C@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;

  STACK[0xD1A8] = v2 - 32;
  *v3 = *(_BYTE *)(v4 + a1 - 562137043 + ((a2 - 1919) | 0x72u));
  v3[1] = *(_BYTE *)(v4 + (a1 - 562132828));
  v3[2] = *(_BYTE *)(v4 + (a1 - 562132827));
  v3[3] = *(_BYTE *)(v4 + (a1 - 562132826));
  v3[4] = *(_BYTE *)(v4 + (a1 - 562132825));
  v3[5] = *(_BYTE *)(v4 + (a1 - 562132824));
  v3[6] = *(_BYTE *)(v4 + (a1 - 562132823));
  v3[7] = *(_BYTE *)(v4 + (a1 - 562132822));
  v3[8] = *(_BYTE *)(v4 + (a1 - 562132821));
  v3[9] = *(_BYTE *)(v4 + (a1 - 562132820));
  v3[10] = *(_BYTE *)(v4 + (a1 - 562132819));
  v3[11] = *(_BYTE *)(v4 + (a1 - 562132818));
  v3[12] = *(_BYTE *)(v4 + (a1 - 562132817));
  v3[13] = *(_BYTE *)(v4 + (a1 - 562132816));
  v3[14] = *(_BYTE *)(v4 + (a1 - 562132815));
  v3[15] = *(_BYTE *)(v4 + (a1 - 562132814));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a2))();
}

uint64_t sub_100AC6820()
{
  return ((uint64_t (*)(void))STACK[0x8958])();
}

uint64_t sub_100AC682C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 1589) ^ (STACK[0x6508] - 1527))
                                               * (LODWORD(STACK[0x6110]) == 1358545653)) ^ (STACK[0x6508] + 10658)))
                            - 12))();
}

uint64_t sub_100AC6888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  STACK[0x6190] = a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 20046) ^ (11 * (LODWORD(STACK[0x5FB8]) ^ 1))))
                            - 53 * ((STACK[0x6508] + 20046) ^ 0x5FE9)
                            + 15941))();
}

uint64_t sub_100AC690C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;

  v20 = *(_DWORD *)(*v13 + (int)(*v14 & 0xBE46EE68));
  v21 = ((v20 ^ (v17 + v8)) & 0x7FFFFFFF) * (a8 + v9 - 8307 + 330);
  v22 = (v21 ^ HIWORD(v21)) * v12;
  v23 = ((((v20 ^ ((_DWORD)v11 + (_DWORD)v8)) & 0x7FFFFFFF) * v12) ^ ((((v20 ^ ((_DWORD)v11 + (_DWORD)v8)) & 0x7FFFFFFFu)
                                                                     * v12) >> 16))
      * v12;
  *(_BYTE *)(v11 + v8) = *(_BYTE *)(v16 + (v22 >> 24)) ^ *(_BYTE *)(v17 + v8) ^ *(_BYTE *)(v19 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v15 + 4) ^ *(_BYTE *)(v16 + (v23 >> 24)) ^ *(_BYTE *)(v19 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v15 + 4) ^ v22 ^ v23 ^ (13 * BYTE3(v22)) ^ (13 * BYTE3(v23));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 + 1 != v18) * v10) | v9)) - 12))();
}

uint64_t sub_100AC69F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t *, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3)
                                                                                         - 12))(a1, a2, &STACK[0x1D040], STACK[0x5A08]);
}

uint64_t sub_100AC6A64@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = (((v7 + v2) ^ *(_DWORD *)(v4 + v5)) & 0x7FFFFFFF) * v6;
  *(_BYTE *)(v3 + v2) = *(_BYTE *)(a1 + (v2 | (16 * (((v8 ^ HIWORD(v8)) * v6) >> 24)))) ^ *(_BYTE *)(v7 + v2) ^ (-53 * (v8 ^ BYTE2(v8)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((27459 * (((2 * a2) ^ 0x7CA3) + v2 == 16)) ^ a2))
                            - 12))();
}

uint64_t sub_100AC6ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(STACK[0x6AD8] + 8 * (((v3 ^ 0x3C79) * (LODWORD(STACK[0x6040]) != 839896401)) ^ v3)))(a1, 839896401, a3, 3192319592, STACK[0x60C0], STACK[0x5538], STACK[0x60B8]);
}

uint64_t sub_100AC6B50@<X0>(unsigned int a1@<W1>, int a2@<W3>, _QWORD *a3@<X4>, uint64_t a4@<X5>, _DWORD *a5@<X6>, unsigned int a6@<W7>, unsigned int a7@<W8>)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  char v18;

  v11 = a6 < a1;
  v12 = a7;
  v13 = (_BYTE *)(v7 + a7);
  v14 = ((*(_DWORD *)(*a3 + (*a5 & a2)) ^ v13) & 0x7FFFFFFF) * v9;
  v15 = v14 ^ HIWORD(v14);
  v16 = (v8 - 11374) & ((v15 * v9) >> 20) | a7 & 0xF;
  v17 = a7 + 1;
  v18 = *(_BYTE *)(a4 + v16) ^ *v13 ^ (-53 * v15);
  if (v11 == v17 > 0xCDF032AE)
    v11 = v17 + a1 < a6;
  *(_BYTE *)(v10 + v12) = v18;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((39 * v11) ^ v8)))();
}

uint64_t sub_100AC6BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE *v8;
  uint64_t v9;

  v7 = 1503753289 * ((((v6 - 240) | 0x362F3E84) - (v6 - 240) + ((v6 - 240) & 0xC9D0C178)) ^ 0xF8EF48A4);
  *(_QWORD *)(a3 + 824) = v5;
  *(_QWORD *)(a3 + 800) = v3;
  *(_DWORD *)(a3 + 832) = v4 - v7 + 1459;
  *(_DWORD *)(a3 + 816) = LODWORD(STACK[0x6058]) + v7;
  STACK[0x1D368] = STACK[0x5FB0];
  v8 = (_BYTE *)STACK[0x6190];
  STACK[0x1D350] = STACK[0x6190];
  v9 = ((uint64_t (*)(uint64_t))STACK[0x6178])(v6 - 240);
  STACK[0xD1A8] -= 16;
  *v8 = *(_BYTE *)(v5 + STACK[0x5FA8]);
  v8[1] = *(_BYTE *)(v5 + STACK[0x5FA0]);
  v8[2] = *(_BYTE *)(v5 + STACK[0x5F98]);
  v8[3] = *(_BYTE *)(v5 + STACK[0x5F90]);
  v8[4] = *(_BYTE *)(v5 + STACK[0x5F88]);
  v8[5] = *(_BYTE *)(v5 + STACK[0x5F80]);
  v8[6] = *(_BYTE *)(v5 + STACK[0x5F78]);
  v8[7] = *(_BYTE *)(v5 + STACK[0x5F70]);
  v8[8] = *(_BYTE *)(v5 + STACK[0x5F68]);
  v8[9] = *(_BYTE *)(v5 + STACK[0x5F60]);
  v8[10] = *(_BYTE *)(v5 + STACK[0x5F58]);
  v8[11] = *(_BYTE *)(v5 + STACK[0x5F50]);
  v8[12] = *(_BYTE *)(v5 + STACK[0x5F48]);
  v8[13] = *(_BYTE *)(v5 + STACK[0x5F40]);
  v8[14] = *(_BYTE *)(v5 + STACK[0x5F38]);
  v8[15] = *(_BYTE *)(v5 + STACK[0x5F30]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - (v4 - 12199) + 2675))(v9);
}

uint64_t sub_100AC6D84()
{
  int v0;
  unint64_t v1;

  STACK[0xC600] = STACK[0x60B0];
  v1 = STACK[0x6AD8];
  STACK[0xA108] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 7619 + v0 + 4102)) - 4))();
}

uint64_t sub_100AC6DD8()
{
  int v0;
  unsigned int v1;
  unint64_t v2;

  v0 = STACK[0x6508] - 114;
  v1 = STACK[0x6508] - 1639;
  STACK[0xC110] = STACK[0xAFC8] + STACK[0x60F0];
  v2 = STACK[0x6AD8];
  STACK[0xA108] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(v1 ^ 0x48C8 ^ (51033 * ((((v0 | 0xA81) + 1050611448) ^ v1) > 0x8A077782))))
                            - 4))();
}

uint64_t sub_100AC6E80()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((((STACK[0x6508] + 1713188706) ^ (LODWORD(STACK[0x60F8]) == 1847336883)) & 1) == 0)
                                               * ((STACK[0x6508] - 1543) ^ 0x36CE)) ^ (STACK[0x6508] + 3505)))
                            - 8))();
}

uint64_t sub_100AC6EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((((((v6 & 0x99E2F8F7) - 12217) | 0x3248) ^ 0x3B76) * LODWORD(STACK[0x6048])) | v6 & 0x99E2F8F7)) - 12))(a1, a2, a3, a4, a5, a6, 1772495178, 1772489163);
}

uint64_t sub_100AC6F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  char v19;
  unint64_t v20;
  unint64_t v21;

  v17 = (char *)(STACK[0x64B8] + v8);
  v18 = *(_DWORD *)(*v11 + (*v12 & ((v9 + 655) ^ 0xFFFFFFFFBE46D537)));
  v19 = *v17;
  v20 = ((((v18 ^ v17) & 0x7FFFFFFF) * a8) ^ ((((v18 ^ v17) & 0x7FFFFFFF) * a8) >> 16)) * a8;
  v21 = ((((v18 ^ ((_DWORD)v10 + (_DWORD)v8)) & 0x7FFFFFFF) * a8) ^ ((((v18 ^ ((_DWORD)v10 + (_DWORD)v8)) & 0x7FFFFFFFu)
                                                                    * a8) >> 16))
      * a8;
  *(_BYTE *)(v10 + v8) = *(_BYTE *)(v14 + (v20 >> 24)) ^ v19 ^ *(_BYTE *)(v15 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v13 + 4) ^ *(_BYTE *)(v14 + (v21 >> 24)) ^ *(_BYTE *)(v15 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v13 + 4) ^ v20 ^ v21 ^ (13 * BYTE3(v20)) ^ (13 * BYTE3(v21));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((41 * (v8 + 1 == v16)) | v9)) - 12))();
}

uint64_t sub_100AC7078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12))(a1, a2, a3, &STACK[0x1D040], STACK[0x5A08], 3192319592);
}

uint64_t sub_100AC70F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = (((v13 + v10) ^ *(_DWORD *)(v11 + v12)) & 0x7FFFFFFF) * a8;
  *(_BYTE *)(v9 + v10) = *(_BYTE *)(a5
                                  + (v10 | (16
                                                        * (((v14 ^ HIWORD(v14)) * ((v8 - 6179) ^ (a7 + 2477))) >> 24)))) ^ *(_BYTE *)(v13 + v10) ^ (-53 * (v14 ^ BYTE2(v14)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25194 * (v10 == 15)) ^ v8)) - 12))();
}

uint64_t sub_100AC716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * ((((v6 - 732218245) & 0x2BA4BE6F ^ 0x1E7B) * (LODWORD(STACK[0x6068]) == 1834996012)) ^ v6)))(a1, a2, a3, a4, 2459967898, a6, STACK[0x5538]);
}

uint64_t sub_100AC71D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  _BOOL4 v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  char v21;
  unsigned int v22;
  char v23;

  v16 = v9;
  v17 = v14 < v15;
  v18 = ((*(_DWORD *)(*v12 + (*v13 & a6)) ^ (v8 + v9)) & 0x7FFFFFFF) * a8;
  v19 = v18 ^ HIWORD(v18);
  v20 = (v10 ^ 0x2333) & v9 | (16 * ((v19 * a8) >> 24));
  v21 = *(_BYTE *)(v8 + v9) ^ (-53 * v19);
  v22 = v9 + 1;
  v23 = *(_BYTE *)(a7 + v20) ^ v21;
  if (v17 == v22 > a5 + 3385)
    v17 = v22 + v15 < v14;
  *(_BYTE *)(v11 + v16) = v23;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((92 * !v17) ^ v10)))();
}

uint64_t sub_100AC7280@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v7 = 1503753289 * ((v6 - 240) ^ 0xCEC07620);
  *(_QWORD *)(a1 + 800) = v2;
  *(_DWORD *)(a1 + 832) = v4 - v7 + 8626;
  STACK[0x1D350] = (unint64_t)v5;
  STACK[0x1D368] = a2 + 0x5E39224396782A6FLL;
  LODWORD(STACK[0x1D370]) = LODWORD(STACK[0x6060]) + v7;
  STACK[0x1D378] = v3;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x6178])(v6 - 240);
  STACK[0xD1A8] -= 16;
  *v5 = *(_BYTE *)(v3 + STACK[0x6038]);
  v5[1] = *(_BYTE *)(v3 + STACK[0x6030]);
  v5[2] = *(_BYTE *)(v3 + STACK[0x6028]);
  v5[3] = *(_BYTE *)(v3 + STACK[0x6020]);
  v5[4] = *(_BYTE *)(v3 + STACK[0x6018]);
  v5[5] = *(_BYTE *)(v3 + STACK[0x6010]);
  v5[6] = *(_BYTE *)(v3 + STACK[0x6008]);
  v5[7] = *(_BYTE *)(v3 + STACK[0x6000]);
  v5[8] = *(_BYTE *)(v3 + STACK[0x5FF8]);
  v5[9] = *(_BYTE *)(v3 + STACK[0x5FF0]);
  v5[10] = *(_BYTE *)(v3 + STACK[0x5FE8]);
  v5[11] = *(_BYTE *)(v3 + STACK[0x5FE0]);
  v5[12] = *(_BYTE *)(v3 + STACK[0x5FD8]);
  v5[13] = *(_BYTE *)(v3 + STACK[0x5FD0]);
  v5[14] = *(_BYTE *)(v3 + STACK[0x5FC8]);
  v5[15] = *(_BYTE *)(v3 + STACK[0x5FC0]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - (((v4 - 7163) | 0x843u) ^ 0xA67)))(v8);
}

uint64_t sub_100AC7414()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  STACK[0x6B00] = v0 + STACK[0x60E8];
  v2 = STACK[0x6AD8];
  STACK[0xA108] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 14424)) - 31 * (v1 ^ 0xAB4u) + 6785))();
}

uint64_t sub_100AC7470()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((24311 * ((((v0 ^ 0xF3) + 1) ^ (v1 == 0)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100AC74A8(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 10921)) - 12))();
}

uint64_t sub_100AC74D4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  *(_DWORD *)(v1 + 4 * a1) = v4 | v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((5 * (v2 ^ 0x58D1u)) ^ 0x3B1BLL)))();
}

uint64_t sub_100AC7504@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, char a4@<W5>, unsigned __int8 *a5@<X8>)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v16 = (((16 * v7) ^ 0x2049D1EA) - 1009263807) ^ (((16 * v7) ^ 0xFBB3C597) + 405655358) ^ (((16 * v7) ^ 0xDBFA147D)
                                                                                          + v15);
  v17 = ((v16 + 997950913) ^ 0xF8C74F31) & (2 * ((v16 + 997950913) & 0xE0E66F84)) ^ (v16 + 997950913) & 0xE0E66F84;
  v18 = ((2 * ((v16 + 997950913) ^ 0xF84B0A31)) ^ 0x315ACB6A) & ((v16 + 997950913) ^ 0xF84B0A31) ^ (2
                                                                                                  * ((v16 + 997950913) ^ 0xF84B0A31)) & 0x18AD65B4;
  v19 = v18 ^ (v14 + 1092);
  v20 = (v18 ^ 0x80C40A5) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x62B596D4) & v19 ^ (4 * v19) & 0x18AD65B4;
  v22 = (v21 ^ v13) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x18086121)) ^ 0x8AD65B50) & (v21 ^ 0x18086121) ^ (16 * (v21 ^ 0x18086121)) & 0x18AD65B0;
  v24 = v22 ^ 0x18AD65B5 ^ (v23 ^ 0x8844100) & (v22 << 8);
  v25 = (v24 << 16) & 0x18AD0000 ^ v24 ^ ((v24 << 16) ^ 0x65B50000) & (((v23 ^ 0x102924A5) << 8) & 0x18AD0000 ^ 0x10880000 ^ (((v23 ^ 0x102924A5) << 8) ^ 0xAD650000) & (v23 ^ 0x102924A5));
  a5[a1] = *((_BYTE *)*(&off_1015B46D0 + v8 - 13531) + a2 - 4) ^ *((_BYTE *)*(&off_1015B46D0 + (v8 ^ 0x3D2C)) + a2 + 5) ^ *((_BYTE *)*(&off_1015B46D0 + v8 - 12578) + a3 - 12) ^ a4 ^ (((v8 + 87) ^ 0xC1) * a2);
  v26 = (v16 + 997950913) ^ (2 * v25);
  a5[v5 + 8] = (((v5 + 8) & 0xF) * v12) ^ HIBYTE(v26) ^ *(_BYTE *)(v9 + ((v5 + 8) & 0xFLL)) ^ *(_BYTE *)(((v5 + 8) & 0xFLL) + v10 + 2) ^ *(_BYTE *)(((v5 + 8) & 0xFLL) + v11 + 4) ^ 0xD0;
  a5[v5 + 9] = (((v5 + 9) & 0xF) * v12) ^ BYTE2(v26) ^ *(_BYTE *)(v9 + ((v5 + 9) & 0xFLL)) ^ *(_BYTE *)(((v5 + 9) & 0xFLL) + v10 + 2) ^ *(_BYTE *)(((v5 + 9) & 0xFLL) + v11 + 4) ^ 0xF6;
  v27 = v5 + 10;
  a5[v27] = (((v5 + 10) & 0xF) * v12) ^ ((unsigned __int16)((((((16 * v7) ^ 0xD1EA) - 9407) ^ (((16 * v7) ^ 0xC597)
                                                                                             - 12482) ^ (((16 * v7) ^ 0x147D) + v15))
                                                           - 31295) ^ (2 * v25)) >> 8) ^ *(_BYTE *)(v9 + (v27 & 0xF)) ^ *(_BYTE *)((v27 & 0xF) + v10 + 2) ^ *(_BYTE *)((v27 & 0xF) + v11 + 4) ^ 0xA4;
  a5[v5 + 11] = (((v5 + 11) & 0xF) * v12) ^ *(_BYTE *)(v9 + ((v5 + 11) & 0xFLL)) ^ *(_BYTE *)(((v5 + 11) & 0xFLL)
                                                                                            + v10
                                                                                            + 2) ^ *(_BYTE *)(((v5 + 11) & 0xFLL) + v11 + 4) ^ (((((16 * v7) ^ 0xEA) + 65) ^ (((16 * v7) ^ 0x97) + 62) ^ (((16 * v7) ^ 0x7D) + v15)) - 63) ^ (2 * v25) ^ 0xEE;
  LODWORD(v27) = (((*a5 ^ 0x37DA7E9) + 1615066084) ^ ((*a5 ^ 0x13454E27) + 1887115822) ^ ((*a5 ^ 0x1038E9C7) + 1929821646))
               - 1665029124;
  a5[v5 + 12] = *(_BYTE *)(v9 + ((v5 + 12) & 0xFLL)) ^ (((v5 + 12) & 0xF) * v12) ^ *(_BYTE *)(((v5 + 12) & 0xFLL)
                                                                                            + v10
                                                                                            + 2) ^ *(_BYTE *)(((v5 + 12) & 0xFLL) + v11 + 4);
  a5[v5 + 13] = *(_BYTE *)(v9 + ((v5 + 13) & 0xFLL)) ^ (((v5 + 13) & 0xF) * v12) ^ *(_BYTE *)(((v5 + 13) & 0xFLL)
                                                                                            + v10
                                                                                            + 2) ^ *(_BYTE *)(((v5 + 13) & 0xFLL) + v11 + 4);
  v28 = v5 + 14;
  a5[v28] = *(_BYTE *)(v9 + (v28 & 0xF)) ^ ((v28 & 0xF) * v12) ^ *(_BYTE *)((v28 & 0xF) + v10 + 2) ^ *(_BYTE *)((v28 & 0xF) + v11 + 4);
  a5[v5 | 0xFLL] = (v27 % (v26 ^ 0xD0F6A4EE) - ((2 * (v27 % (v26 ^ 0xD0F6A4EE))) & 0xB2) + 89) ^ 0x99;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 ^ (32685 * (v6 == v7)))) - 12))();
}

uint64_t sub_100AC7940@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = (v2 + 7);
  v5 = *(_BYTE *)(*(_QWORD *)(v3 + 8 * (a1 ^ 0x179C)) - 12 + (v4 & 0xF)) ^ *(_BYTE *)(a2 + v4) ^ (49 * (v4 & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v3 + 8 * (a1 - 3152)) - 4 + (v4 & 0xF) + 2) ^ *(_BYTE *)((v4 & 0xF) + *(_QWORD *)(v3 + 8 * (a1 ^ 0x17FD)) - 12 + 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3146
                                          * ((v5
                                                             - (((v5 ^ 0x69) - 24) ^ ((v5 ^ 0xFD) + 116) ^ ((v5 ^ 0x94) + 27))) != 112)) ^ (a1 + 17036)))
                            - 4))();
}

uint64_t sub_100AC7ABC(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 3068)) - 4))();
}

uint64_t sub_100AC7AD4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v5 = (a1 ^ 0x4374) + 1869515859 + a4 - ((2 * a4) & 0xC8) + 15;
  v6 = *(_DWORD *)(v4 + 4 * ((v5 >> 5) ^ 0x37B76FB));
  LOBYTE(v5) = -2 - ((~(v5 & 0x1F) | 0x16) + (v5 & 0x16 | 0xE9));
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((19
                                * (((1 << (((v5 & 0xBB ^ 0x29) + (v5 ^ 0x92) - ((v5 ^ 0x92) & 0xBB)) ^ 0x3B)) & v6) != 0)) | (a1 + 4054))))();
}

uint64_t sub_100AC7BAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8
                                                     * ((((a4 + 1 - a7) == (a8 - 2))
                                                       * ((a8 + 7853) ^ 0x746F)) ^ a8))
                                         - 4))((a8 - 3068));
}

uint64_t sub_100AC7BF0(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 2575)) - 8))();
}

uint64_t sub_100AC7C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;

  v5 = STACK[0x6508];
  v6 = STACK[0x6508] + 12942;
  v7 = STACK[0x6508] - 1987;
  LODWORD(STACK[0xB794]) = STACK[0x6198];
  v8 = STACK[0x6AD8];
  STACK[0xC800] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ 0x3962 ^ (((v5 + 18283260) > 0x59B62DB0) * (v6 ^ 0x116E))))
                                                                                                - 4))(a1, a2, a3, a4, a5, STACK[0x5A08]);
}

uint64_t sub_100AC7CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  int v8;
  unint64_t v9;

  v7 = STACK[0x6508];
  v8 = STACK[0x6508] + 12942;
  v9 = STACK[0x6AD8];
  STACK[0xC800] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1969));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (v8 + (int)v7 - 8617)) - 4))(a1, a2, a3, a4, a5, STACK[0x5A08], a7, LODWORD(STACK[0x6198]));
}

uint64_t sub_100AC7D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = STACK[0x6508];
  v6 = STACK[0x6508] ^ 0x5372;
  LODWORD(STACK[0xCAD4]) = STACK[0x6198];
  v7 = STACK[0x6AD8];
  STACK[0xC800] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v5 - 1995)) + (v6 ^ 0xFFFFFFFFFFFFBCF8);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * ((int)v5 + 8539))
                                                                                                - 4))(a1, a2, a3, a4, a5, STACK[0x5A08]);
}

uint64_t sub_100AC7D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, int a8)
{
  int v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  STACK[0x8198] = v9;
  STACK[0xCCB8] = a7;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                      + 8
                                      * (((8 * (((a8 == 0) ^ (((v8 - 1) & 0x7E) + 1)) & 1)) & 0xEF | (16 * (((a8 == 0) ^ (((v8 - 1) & 0x7E) + 1)) & 1))) ^ v8))
                          - 8);
  LODWORD(STACK[0x6198]) = a8;
  return v10();
}

uint64_t sub_100AC7DD0()
{
  int v0;

  STACK[0xD1A8] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 7952)) - 12))();
}

uint64_t sub_100AC7E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v12 = (((v11 + v6) ^ *(_DWORD *)(v8 + v9)) & 0x7FFFFFFF) * a5;
  *(_BYTE *)(v10 + v6) = *(_BYTE *)(a6 + (v6 | (16 * (((v12 ^ HIWORD(v12)) * a5) >> 24)))) ^ *(_BYTE *)(v11 + v6) ^ (-53 * (v12 ^ BYTE2(v12)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((56 * (v6 - 16379 + (v7 ^ 0x1C30u) != 16)) ^ v7)) - 12))();
}

uint64_t sub_100AC7EE4@<X0>(uint64_t a1@<X6>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0xD1A8] = v3 + 32;
  STACK[0xDA70] = v4;
  STACK[0xDA60] = v5;
  STACK[0xDA68] = a2;
  STACK[0xDA80] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (32762 * (a1 == v4)))) - 4))();
}

uint64_t sub_100AC7F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;

  v10 = (char *)&STACK[0x1D0C0] + v7;
  *v10 = *a7;
  v10[1] = a7[1];
  v10[2] = a7[2];
  v10[3] = a7[3];
  v10[4] = a7[4];
  v10[5] = a7[5];
  v10[6] = a7[6];
  v10[7] = a7[7];
  v10[8] = a7[8];
  v10[9] = a7[9];
  v10[10] = a7[10];
  v10[11] = a7[11];
  v10[12] = a7[12];
  v10[13] = a7[13];
  v10[14] = a7[14];
  v10[15] = a7[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v8) - (v9 ^ 0x1FE8)))();
}

uint64_t sub_100AC7FF8@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v1 - 7400) | 0x4000) ^ 0x1A9F) * (a1 != 0)) ^ v1))
                            - 12))();
}

uint64_t sub_100AC8030()
{
  int v0;
  int v1;
  int v2;
  _BOOL4 v3;

  v3 = v1 - v0 != ((v2 + 10918) ^ 0x996) - 58275225;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 | (16 * v3)) ^ v2))
                            - ((v2 + 10918) | 0x44u)
                            + 19146))();
}

uint64_t sub_100AC8084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  uint64_t (*v17)(void);

  STACK[0x6AB0] = v8;
  LODWORD(STACK[0x66A8]) = v7;
  v10 = v9 + 4687;
  STACK[0xDA88] = 0;
  v11 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  v13 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xDA78] = v13;
  v14 = v11(1028);
  STACK[0xDA88] = v14;
  if (v13)
    v15 = v14 == 0;
  else
    v15 = 1;
  v16 = !v15;
  LODWORD(STACK[0x6AA0]) = v10;
  v17 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((v16 * (((2043 * (v9 ^ 0x4AD2)) ^ 0xFFFFA0C0) + v10)) ^ v9));
  STACK[0x6190] = a7;
  return v17();
}

uint64_t sub_100AC8134()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  int v3;
  char *v4;
  int v5;
  int v6;
  char *v7;
  unsigned __int8 v8;
  char *v9;
  unsigned int v10;
  char *v11;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char *v16;
  int v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  int v23;
  unsigned int v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  char v30;
  int v31;
  unint64_t v32;
  unsigned __int8 v33;
  char v34;
  unint64_t v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  int v45;
  unsigned int v46;
  char *v47;
  int v48;
  unint64_t v49;
  char *v50;
  int v51;
  unsigned int v52;
  char *v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  unsigned int v61;
  unsigned int v62;
  char *v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  int v72;
  char *v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unint64_t v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  char *v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unint64_t v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unint64_t v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unint64_t v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  BOOL v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned __int8 *v278;
  unsigned int v279;
  int v280;
  unint64_t v281;
  unsigned int v282;
  unsigned int v283;
  unint64_t v284;
  unsigned int v285;
  unint64_t v286;
  unsigned int v287;
  unsigned __int8 v288;
  int v289;
  unsigned __int8 v290;
  int v291;
  unsigned __int8 v292;
  unint64_t v293;
  unint64_t v294;
  unint64_t v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  unint64_t v309;
  unint64_t v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  int v404;
  int v405;
  unsigned int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  int v466;
  unint64_t v467;
  unint64_t v468;
  unint64_t v469;
  int v470;
  unint64_t v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  uint64_t (*v475)(void);
  int v476;
  int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;

  LODWORD(STACK[0x6A60]) = v1 ^ 0x1FEF;
  v2 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AA0]) ^ 0x5995)) - 12;
  v3 = STACK[0x6AA0];
  v4 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AA0]) ^ 0x5757)) - 12;
  v5 = ((v2[v0[6] ^ 0xA1] ^ 0x3D) << 8) | (((v4[v0[4] ^ 0x1ALL] + (v0[4] ^ 0xA)) ^ 0x70) << 24);
  v6 = v2[v0[12] ^ 0x38];
  v7 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AA0]) ^ 0x5507)) - 8;
  v8 = v7[v0[15] ^ 0x54] ^ ((v0[15] ^ 0x30) - 28);
  v9 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AA0]) - 23203) - 8;
  v10 = v9[v0[10] ^ 0xE4];
  v11 = v9;
  STACK[0x6518] = (unint64_t)v9;
  v12 = v2[v0[14] ^ 0xF9];
  v13 = v0[5];
  v14 = v4[v0[11] ^ 0xDBLL] + (v0[11] ^ 0xCB);
  v15 = v4[v13 ^ 0x6E];
  v16 = v4;
  STACK[0x6530] = (unint64_t)v4;
  v17 = v14 ^ 0x24 | (((((v10 >> 4) | (16 * v10)) ^ (((v10 >> 4) | (16 * v10)) >> 4) ^ (((v10 >> 4) | (16 * v10)) >> 2)) ^ 0x26) << 8);
  v18 = v15 + (v13 ^ 0x7E);
  v19 = v0[1];
  v20 = v0[3] ^ 0xC0;
  v21 = (v19 ^ 0xDD) - 28;
  v22 = v7[v19 ^ 0xB9];
  STACK[0x6538] = (unint64_t)v2;
  v23 = v2[v20];
  v24 = v5 & 0xFF00FFFF | ((v18 ^ 0x7B) << 16);
  if ((v22 & 8) != 0)
    v25 = -8;
  else
    v25 = 8;
  v26 = STACK[0xDA60];
  v27 = *(unsigned __int8 *)(STACK[0xDA60] + 7);
  STACK[0x69B0] = v27;
  v28 = (v23 ^ 0x5E) & 0xFF00FFFF | ((v21 ^ 0xF4 ^ (v25 + v22)) << 16);
  v29 = *(unsigned __int8 *)(v26 + 9);
  STACK[0x6A10] = v29;
  v30 = v2[v29 ^ 0xA0];
  v31 = v7[v27 ^ 0x88] ^ ((v27 ^ 0xEC) - 28) ^ 0xF1 | v24;
  LODWORD(STACK[0x69C0]) = v31;
  STACK[0x6900] = v26;
  v32 = *(unsigned __int8 *)(v26 + 2);
  v33 = (v30 ^ -v30 ^ ((v30 ^ 0x85) + 123)) + 122;
  STACK[0x69A0] = v32;
  v34 = v16[v32 ^ 0xB2];
  v35 = *(unsigned __int8 *)(v26 + 8);
  STACK[0x6930] = v35;
  v36 = v17 & 0xFF00FFFF | (v33 << 16);
  v37 = v28 & 0xFFFF00FF | (((v34 + (v32 ^ 0xA2)) ^ 0x4E) << 8);
  v38 = (v11[v35 ^ 0xCB] >> 4) | (16 * v11[v35 ^ 0xCB]);
  v39 = ((v11[v35 ^ 0xCB] >> 4) | (16 * v11[v35 ^ 0xCB]));
  v40 = *(unsigned __int8 *)(v26 + 13);
  STACK[0x6940] = v40;
  v41 = *(unsigned __int8 *)v26;
  STACK[0x6950] = v41;
  v42 = (v40 ^ 0x26) - 28;
  v43 = v38 ^ (v39 >> 4) ^ (v39 >> 2) ^ 0xBC;
  v44 = v40 ^ 0x42;
  LODWORD(v40) = v36 | (v43 << 24);
  LODWORD(STACK[0x69E0]) = v40;
  STACK[0x6520] = (unint64_t)v7;
  LOBYTE(v43) = v7[v44] ^ v42;
  v45 = ((v12 ^ 0x5A) << 8) | ((v43 ^ 0x5A) << 16) | v8 ^ 0xC4 | ((v6 ^ 0xE) << 24);
  LODWORD(STACK[0x6990]) = v45;
  v46 = v45 ^ 0xE5000689;
  v47 = (char *)*(&off_1015B46D0 + (v3 ^ 0x589C)) - 8;
  v48 = *(_DWORD *)&v47[4 * (v43 ^ 0x4E)];
  LODWORD(v41) = v37 | ((v7[v41 ^ 0x82] ^ ((v41 ^ 0xE6) - 28) ^ 0x49) << 24);
  LODWORD(STACK[0x6A30]) = v41;
  v49 = (unint64_t)v47;
  v50 = (char *)*(&off_1015B46D0 + v3 - 21531) - 4;
  LODWORD(v47) = *(_DWORD *)&v47[4 * (v8 ^ 0x59)] ^ __ROR4__(v48, 16) ^ v41 ^ __ROR4__(*(_DWORD *)&v47[4* (v12 ^ 0x48)] ^ 0x6DE4099A, 24) ^ __ROR4__((*(_DWORD *)&v50[4 * (v6 ^ 0xC5)]- 1495421540) ^ 0x5C5BDA98, 8) ^ 0x99A6DE4;
  v51 = v47 ^ v31 ^ v40;
  LODWORD(STACK[0x6A50]) = v47 ^ v31;
  v52 = v51 ^ v46;
  LODWORD(STACK[0x6A40]) = v51;
  LODWORD(STACK[0x6A20]) = v51 ^ v46;
  v53 = (char *)*(&off_1015B46D0 + (v3 ^ 0x5F59)) - 12;
  v54 = *(_DWORD *)&v53[4 * ((v51 ^ v46) ^ 0x6F)] ^ 0xCFC7527F;
  v55 = (v54 >> 3) & 0x1FA4ABB5 ^ v54 ^ __ROR4__(*(_DWORD *)(v49+ 4* (((unsigned __int16)(v51 ^ v46) >> 8) ^ 0x7Du)) ^ 0x6DE4099A, 24);
  v56 = (*(_DWORD *)&v50[4 * (((v51 ^ v46) >> 16) ^ 0xE9)] - 1495421540) ^ 0x5C5BDA98;
  LODWORD(STACK[0x6790]) = (_DWORD)v47;
  v57 = v55 ^ v47 ^ __ROR4__(v56, 16) ^ __ROR4__(*(_DWORD *)(v49 + 4 * (HIBYTE(v52) ^ 0x26)) ^ 0x6DE4099A, 8);
  LODWORD(STACK[0x6970]) = v57;
  v58 = v57 ^ 0xF8ED03AD ^ v47 ^ v31;
  LODWORD(STACK[0x6A00]) = v58;
  v59 = v58 ^ 0x7B079A18 ^ v46;
  HIDWORD(v60) = *(_DWORD *)(v49 + 4 * (BYTE1(v59) ^ 0xFAu)) ^ 0x6DE4099A;
  LODWORD(v60) = HIDWORD(v60);
  v61 = *(_DWORD *)&v53[4 * (BYTE2(v59) ^ 0x62)];
  v62 = *(_DWORD *)&v53[4 * (HIBYTE(v59) ^ 0x6F)];
  v63 = (char *)*(&off_1015B46D0 + (v3 ^ 0x5958)) - 8;
  v64 = *(_DWORD *)&v63[4 * (v58 ^ 0x18 ^ v46 ^ 9)] ^ v57 ^ 0xF8ED03AD ^ ((v60 >> 24) - 823920476 - ((2 * (v60 >> 24)) & 0x9DC7F148)) ^ __ROR4__(v61 ^ 0xA3581D14 ^ (v61 >> 3) & 0x1FA4ABB5, 16) ^ __ROR4__(v62 ^ 0xA3581D14 ^ (v62 >> 3) & 0x1FA4ABB5, 8) ^ 0xC3F68485;
  v65 = v58 ^ 0x7B079A18 ^ v47 ^ v31 ^ v40;
  v66 = v58 ^ 0x83EA99B5 ^ v64;
  v67 = v64;
  LODWORD(STACK[0x69F0]) = v64;
  v68 = v66 ^ v65;
  LODWORD(STACK[0x68F0]) = v66 ^ v65;
  v69 = v65;
  LODWORD(STACK[0x6910]) = v65;
  LODWORD(v26) = v66;
  LODWORD(STACK[0x69D0]) = v66;
  LODWORD(STACK[0x6920]) = v66 ^ v65 ^ v59;
  v70 = v66 ^ v65 ^ v59 ^ 0xE0CE63DF;
  v71 = (unint64_t)v50;
  HIDWORD(v60) = (*(_DWORD *)&v50[4 * (BYTE2(v70) ^ 0x2F)] - 1495421540) ^ 0x5C5BDA98;
  LODWORD(v60) = HIDWORD(v60);
  v72 = (v60 >> 16) ^ __ROR4__((*(_DWORD *)&v50[4 * (((v68 ^ v59) >> 24) ^ 0xC)] - 1495421540) ^ 0x5C5BDA98, 8);
  LODWORD(v60) = __ROR4__(*(_DWORD *)(v49 + 4 * (BYTE1(v70) ^ 0xF3u)) ^ 0x6DE4099A, 24);
  v73 = v53;
  v74 = *(_DWORD *)&v53[4 * ((v68 ^ v59) ^ 0xAE)] ^ 0xCFC7527F;
  v75 = v72 ^ v60 ^ v74 ^ (v74 >> 3) & 0x1FA4ABB5 ^ v67;
  v76 = v75 ^ v26;
  v77 = v75 ^ v26 ^ v59;
  v78 = *(_DWORD *)&v73[4
                      * (((unsigned __int16)(v72 ^ v60 ^ v74 ^ (v74 >> 3) & 0xABB5 ^ v67 ^ v26 ^ v59 ^ 0x3AD) >> 8) ^ 0x62)];
  v79 = (unint64_t)v73;
  v80 = *(_DWORD *)(v49 + 4 * ((v75 ^ v26 ^ v59) ^ 0xD7u)) ^ __ROR4__(*(_DWORD *)(v49+ 4 * (HIBYTE(v77) ^ 0x90)) ^ 0x6DE4099A, 8) ^ __ROR4__(v78 ^ 0xA3581D14 ^ (v78 >> 3) & 0x1FA4ABB5, 24) ^ __ROR4__((*(_DWORD *)(v71 + 4 * (((v77 ^ 0xF8ED03AD) >> 16) ^ 0x11u))- 1495421540) ^ 0x5C5BDA98, 16) ^ v75;
  LODWORD(STACK[0x6960]) = v75 ^ v69;
  v81 = v80 ^ 0xF8ED03AD ^ v76;
  LODWORD(STACK[0x68C0]) = v81;
  v82 = v75 ^ v69 ^ 0xC32A6A45 ^ v81;
  v83 = v82 ^ v77 ^ 0x84D2E6C3;
  v84 = v82;
  LODWORD(STACK[0x6A80]) = v82;
  v85 = v63;
  HIDWORD(v60) = *(_DWORD *)(v49 + 4 * (BYTE1(v83) ^ 0xFBu)) ^ 0x6DE4099A;
  LODWORD(v60) = HIDWORD(v60);
  v86 = *(_DWORD *)&v73[4 * (HIBYTE(v83) ^ 0xBB)];
  v87 = (v60 >> 24) ^ __ROR4__(*(_DWORD *)&v63[4 * (BYTE2(v83) ^ 0x53)] ^ 0xEE1D91E0, 16);
  LODWORD(v60) = __ROR4__(v86 ^ 0xA3581D14 ^ (v86 >> 3) & 0x1FA4ABB5, 8);
  v88 = *(_DWORD *)&v63[4 * (v83 ^ 0x3C)];
  STACK[0x6880] = (unint64_t)v63;
  v89 = ((v87 ^ v60) - 823920476 - ((2 * (v87 ^ v60)) & 0x9DC7F148)) ^ v88;
  v90 = v89 ^ v80 ^ 0xF8ED03AD;
  LODWORD(STACK[0x6890]) = v90;
  v91 = v89 ^ v76;
  v92 = v89 ^ v76 ^ 0xDAC961EB ^ v77 ^ 0x84D2E6C3;
  v93 = v89 ^ v76 ^ 0xDAC961EB;
  LODWORD(STACK[0x6A90]) = v93;
  v94 = *(_DWORD *)(v71 + 4 * ((v89 ^ v76) ^ 0xEB ^ (v76 ^ v59) ^ 0xC3 ^ 0x2Eu));
  v95 = (v90 ^ 0x83C8861D) & 1;
  v261 = (v95 & v94) == 0;
  v96 = v94 - 1495421540;
  if (!v261)
    v95 = -v95;
  v97 = v96 + v95;
  v98 = *(_DWORD *)(v79 + 4 * (BYTE1(v92) ^ 0x87u));
  HIDWORD(v99) = v98 ^ 0xA3581D14 ^ (v98 >> 3) & 0x1FA4ABB5;
  LODWORD(v99) = HIDWORD(v99);
  v100 = (v99 >> 24) ^ __ROR4__((*(_DWORD *)(v71 + 4 * (HIBYTE(v92) ^ 0x2E)) - 1495421540) ^ 0x5C5BDA98, 8);
  LODWORD(STACK[0x6980]) = v92;
  v101 = v100 ^ __ROR4__((*(_DWORD *)(v71 + 4 * (BYTE2(v92) ^ 0x2Eu)) - 1495421540) ^ 0x5C5BDA98, 16) ^ (v90 ^ 0x83C8861D) & 0xFFFFFFFE ^ v97;
  v102 = v101 ^ v84;
  v103 = v101 ^ v84 ^ 0x3536EF59;
  v104 = v103 ^ v92;
  HIDWORD(v99) = *(_DWORD *)(v49 + 4 * (((unsigned __int16)(v103 ^ v92) >> 8) ^ 0xCEu)) ^ 0x6DE4099A;
  LODWORD(v99) = HIDWORD(v99);
  v105 = v99 >> 24;
  LODWORD(v99) = __ROR4__(*(_DWORD *)(v49 + 4 * (((v103 ^ v92) >> 24) ^ 0xF3)) ^ 0x6DE4099A, 8);
  v106 = *(_DWORD *)(v71 + 4 * ((v103 ^ v92) ^ 0xB6u));
  STACK[0x6820] = v71;
  v107 = v105 ^ v99 ^ (v106 - 1495421540);
  v108 = *(_DWORD *)(v79 + 4 * (((v103 ^ v92) >> 16) ^ 0xDCu));
  v109 = v107 ^ __ROR4__(v108 ^ 0xA3581D14 ^ (v108 >> 3) & 0x1FA4ABB5, 16);
  v110 = v109 ^ v93;
  v111 = v109 ^ v93 ^ 0x13000000;
  v112 = v103 ^ v111;
  v113 = v103 ^ v111 ^ 0xE75BDA98;
  v114 = *(_DWORD *)(v79 + 4 * (((unsigned __int16)(v113 ^ v104) >> 8) ^ 0x87u));
  v115 = *(_DWORD *)(v79 + 4 * (((v113 ^ v104) >> 16) ^ 0x87u));
  v116 = v79;
  STACK[0x68A0] = v79;
  v117 = v113 ^ v104 ^ 0x9000000;
  LODWORD(STACK[0x68D0]) = v117;
  v118 = v101 ^ v109;
  v119 = (*(_DWORD *)(v71 + 4 * ((v113 ^ v104) ^ 0x2Eu)) - 1495421540) ^ __ROR4__(*(_DWORD *)&v85[4 * (((v113 ^ v104) >> 24) ^ 0x6C)] ^ 0xEE1D91E0, 8) ^ __ROR4__(v114 ^ 0xA3581D14 ^ (v114 >> 3) & 0x1FA4ABB5, 24) ^ __ROR4__(v115 ^ 0xA3581D14 ^ (v115 >> 3) & 0x1FA4ABB5, 16) ^ v101 ^ v109;
  v120 = v119 ^ v111;
  LODWORD(STACK[0x68E0]) = v119;
  v121 = v113 ^ v119 ^ v111;
  LODWORD(STACK[0x6A70]) = v121;
  v122 = v117 ^ v121;
  v123 = *(_DWORD *)(v116 + 4 * (((unsigned __int16)(v117 ^ v121) >> 8) ^ 0x5Du));
  STACK[0x68B0] = v49;
  HIDWORD(v99) = *(_DWORD *)(v49 + 4 * (BYTE2(v122) ^ 0x4Fu)) ^ 0x6DE4099A;
  LODWORD(v99) = HIDWORD(v99);
  v124 = v99 >> 16;
  LODWORD(STACK[0x6AC0]) = *(_DWORD *)(v49 + 4 * (v122 ^ 0x8Cu)) ^ __ROR4__(*(_DWORD *)(v49+ 4 * ((HIBYTE(v122) ^ 1) - ((2 * (HIBYTE(v122) ^ 1)) & 0xF2) + 121)) ^ 0x6DE4099A, 8) ^ __ROR4__(v123 ^ 0xA3581D14 ^ (v123 >> 3) & 0x1FA4ABB5, 24) ^ v124 ^ v119 ^ 0x9BFD302;
  v125 = v77 ^ 0xCA9EF7FC;
  LODWORD(STACK[0x6860]) = v80 ^ 0xBBE41E11;
  v126 = (v109 ^ 0x7D81EF3F) + 537621570;
  v127 = (v126 ^ 0xAF0081C5) & (2 * (v126 & 0xCF14D5D4)) ^ v126 & 0xCF14D5D4;
  v128 = ((2 * (v126 ^ 0xAD0821E5)) ^ 0xC439E862) & (v126 ^ 0xAD0821E5) ^ (2 * (v126 ^ 0xAD0821E5)) & 0x621CF430;
  v129 = (v128 ^ 0x4210E021) & (4 * v127) ^ v127;
  v130 = ((4 * (v128 ^ 0x22041411)) ^ 0x8873D0C4) & (v128 ^ 0x22041411) ^ (4 * (v128 ^ 0x22041411)) & 0x621CF430;
  v131 = (v130 ^ 0x10D011) & (16 * v129) ^ v129;
  v132 = ((16 * (v130 ^ 0x620C2431)) ^ 0x21CF4310) & (v130 ^ 0x620C2431) ^ (16 * (v130 ^ 0x620C2431)) & 0x621CF430;
  v133 = v131 ^ 0x621CF431 ^ (v132 ^ 0x200C4021) & (v131 << 8);
  LODWORD(STACK[0x66C0]) = v126 ^ (2
                                 * ((v133 << 16) & 0x621C0000 ^ v133 ^ ((v133 << 16) ^ 0x74310000) & (((v132 ^ 0x4210B421) << 8) & 0x621C0000 ^ 0x62080000 ^ (((v132 ^ 0x4210B421) << 8) ^ 0x1CF40000) & (v132 ^ 0x4210B421))));
  LODWORD(STACK[0x68C0]) ^= 0x2F3E1513u;
  v134 = LODWORD(STACK[0x68F0]) ^ 0x21799F54;
  LODWORD(STACK[0x6870]) = v134;
  v135 = LODWORD(STACK[0x6990]) ^ 0xE96C73FD;
  LODWORD(v116) = v102 ^ 0x311B744E;
  v136 = v104 ^ 0x42D9B17;
  v137 = v83 ^ 0x4A091DBC;
  v138 = v122 ^ 0xDF4815EC;
  LODWORD(STACK[0x68F0]) = v91 ^ 0x1A2B7795;
  v139 = LODWORD(STACK[0x6920]) ^ 0xC99C7138;
  LODWORD(STACK[0x6920]) = v139;
  v140 = v75 ^ 0x3273F451;
  LODWORD(STACK[0x6660]) = (v104 ^ 0x42D9B17) - (v75 ^ 0x3273F451) - 1180873720;
  v141 = (v122 ^ 0xDF4815EC) - (v91 ^ 0x1A2B7795) - 1379424839;
  LODWORD(STACK[0x6990]) = v59 ^ 0xBF4463D9;
  v142 = v110 ^ 0x6108514F;
  LODWORD(STACK[0x6668]) = (v110 ^ 0x6108514F ^ v59 ^ 0xBF4463D9) + 1816613847;
  v143 = LODWORD(STACK[0x6970]) ^ 0xBF4463D9;
  LODWORD(STACK[0x6850]) = v143;
  v144 = v120 ^ 0x3113CF74;
  LODWORD(STACK[0x6708]) = (v120 ^ 0x3113CF74) - v143 - 1751965886;
  LODWORD(STACK[0x6658]) = v139 - v135 + 1569977066;
  v145 = LODWORD(STACK[0x6890]) ^ 0x432A9063;
  LODWORD(STACK[0x6890]) = v120 ^ 0xFD5BDA98;
  v146 = LODWORD(STACK[0x6910]) ^ 0x8D830A31;
  v147 = v120 ^ v146;
  v148 = v147 ^ 0x6BAB4F81 ^ LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x6670]) = v147 ^ 0x6BAB4F81;
  LODWORD(STACK[0x69C0]) = v148 - 900337005 - ((2 * v148) & 0x94ABE526);
  v149 = v112 ^ 0x95538BD7;
  LODWORD(STACK[0x6648]) = ((v112 ^ 0x95538BD7) + v134) ^ 0x8953F9C8;
  v150 = v112 ^ 0x95538BD7 ^ v124;
  v151 = v150 + 2068128967;
  LODWORD(STACK[0x69E0]) = ((v150 + 2068128967) ^ LODWORD(STACK[0x69E0]))
                         - 900337005
                         - ((2 * ((v150 + 2068128967) ^ LODWORD(STACK[0x69E0]))) & 0x94ABE526);
  v152 = LODWORD(STACK[0x6A30]) ^ 0xA5277EC;
  v153 = (v76 ^ 0x227B1990) + v146;
  LODWORD(STACK[0x6A30]) = v153 ^ 0xDA72EEB1 ^ (v135 - 900337005 - ((2 * v135) & 0x94ABE526)) ^ v147;
  v154 = v153 ^ 0xDA72EEB1 ^ v152 ^ v147 ^ (v150 - ((2 * (v150 + 2068128967)) & 0x94ABE526) + 1167791962);
  v155 = (v137 + v152) ^ 0x2FE0A980;
  v156 = LODWORD(STACK[0x6960]) ^ 0xA61D62EA;
  LODWORD(STACK[0x6970]) = (v75 ^ 0x3273F451) - 900337005 - 2 * ((v75 ^ 0x3273F451) & 0x4A55F297 ^ v75 & 4);
  LODWORD(STACK[0x6810]) = LODWORD(STACK[0x6A80]) - 900337005 - ((2 * LODWORD(STACK[0x6A80])) & 0x94ABE526);
  LODWORD(STACK[0x6678]) = v141;
  LODWORD(STACK[0x6960]) = (v156 ^ v141) - 900337005 - ((2 * (v156 ^ v141)) & 0x94ABE526);
  LODWORD(STACK[0x6840]) = (v141 ^ v76 ^ 0x227B1990) - 900337005 - ((2 * (v141 ^ v76 ^ 0x227B1990)) & 0x94ABE526);
  v157 = v125;
  LODWORD(STACK[0x6830]) = (v141 ^ v125) - 900337005 - ((2 * (v141 ^ v125)) & 0x94ABE526);
  LODWORD(STACK[0x6910]) = v136 - 900337005 - ((2 * v136) & 0x94ABE526);
  LODWORD(STACK[0x67D0]) = v101 - 900337005 - ((2 * v101) & 0x94ABE526);
  LODWORD(STACK[0x67E0]) = (v101 ^ LODWORD(STACK[0x6A90]))
                         - 900337005
                         - ((2 * (v101 ^ LODWORD(STACK[0x6A90]))) & 0x94ABE526);
  LODWORD(STACK[0x6690]) = (v116 + v135) ^ 0xCCBB1E05;
  LODWORD(STACK[0x67B0]) = v118 - 1699475655 - ((2 * v118) & 0x35681E72);
  LODWORD(STACK[0x67A0]) = (v151 ^ v149) - 1699475655 - ((2 * (v151 ^ v149)) & 0x35681E72);
  v158 = v153 ^ 0x82BA67C8;
  LODWORD(STACK[0x6780]) = (v116 - 900337005 - ((2 * v116) & 0x94ABE526)) ^ v153 ^ 0x82BA67C8 ^ -((v116
                                                                                                 - 900337005
                                                                                                 - ((2 * v116) & 0x94ABE526)) ^ v153 ^ 0x82BA67C8) ^ (((v116 + v135) ^ 0xCCBB1E05) + ((v116 + v135) ^ 0x3344E1FA ^ (v116 - 900337005 - ((2 * v116) & 0x94ABE526)) ^ v153 ^ 0x82BA67C8) + 1);
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x6A70]) - 900337005 - ((2 * LODWORD(STACK[0x6A70])) & 0x94ABE526);
  v159 = STACK[0x68D0];
  LODWORD(STACK[0x6730]) = (v151 ^ LODWORD(STACK[0x68D0]))
                         - 1699475655
                         - ((2 * (v151 ^ LODWORD(STACK[0x68D0]))) & 0x35681E72);
  v160 = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6AC0]);
  v161 = LODWORD(STACK[0x6A40]) ^ 0x7AB755E6;
  LODWORD(STACK[0x67C0]) = v161;
  v162 = v159 ^ 0xBFDDF55D ^ v160;
  v163 = -1538053611 - v161 - v162;
  LODWORD(STACK[0x68E0]) = (v163 ^ LODWORD(STACK[0x68E0]))
                         - 900337005
                         - ((2 * (v163 ^ LODWORD(STACK[0x68E0]))) & 0x94ABE526);
  v164 = v157 - LODWORD(STACK[0x68C0]);
  v165 = STACK[0x66C0];
  v166 = LODWORD(STACK[0x66C0]) ^ v153 ^ 0xC82E5BF ^ v137;
  v167 = LODWORD(STACK[0x66C0]) ^ v153 ^ 0xC82E5BF ^ LODWORD(STACK[0x68C0]);
  v168 = LODWORD(STACK[0x66C0]) ^ v153 ^ 0xC82E5BF ^ LODWORD(STACK[0x6860]);
  v169 = LODWORD(STACK[0x6860]) - v142;
  LODWORD(STACK[0x68D0]) = v142 - 1699475655 - ((2 * v142) & 0x35681E72);
  v170 = STACK[0x6708];
  LODWORD(STACK[0x6750]) = (v160 ^ LODWORD(STACK[0x6708]))
                         + 893233458
                         - ((2 * (v160 ^ LODWORD(STACK[0x6708]))) & 0x6A7B5264);
  LODWORD(STACK[0x66A0]) = v163;
  LODWORD(STACK[0x6760]) = (v163 ^ v144) - 900337005 - ((2 * (v163 ^ v144)) & 0x94ABE526);
  LODWORD(STACK[0x6770]) = (v163 ^ v138) - 900337005 - ((2 * (v163 ^ v138)) & 0x94ABE526);
  LODWORD(STACK[0x65C8]) = v169;
  v171 = v169 + 2060254975;
  LODWORD(STACK[0x6510]) = v169 + 2060254975;
  LODWORD(STACK[0x68C0]) = v170 ^ (v169 + 2060254975);
  v172 = v170 ^ (v169 + 2060254975) ^ (v145 + v140);
  v173 = v145 + v140;
  LODWORD(STACK[0x64F0]) = v145 + v140;
  v174 = v162 ^ v172 ^ 0x7B03AC4D;
  v175 = LODWORD(STACK[0x6A50]) ^ 0xCB9AA5BB;
  v176 = v153 ^ 0xC982419 ^ v147 ^ 0x6BAB4F81 ^ LODWORD(STACK[0x69E0]);
  v177 = v151 ^ v153 ^ 0x82BA67C8 ^ LODWORD(STACK[0x69C0]);
  v178 = v170 ^ LODWORD(STACK[0x6658]);
  v179 = v178 ^ v145;
  v180 = v178 ^ v145 ^ 0xA35CE7C3 ^ v177;
  v181 = v177 ^ 0x903F213B;
  v182 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AA0]) - 23057);
  STACK[0x6890] = v182;
  v183 = LODWORD(STACK[0x6A30]) ^ v151;
  v184 = v175 ^ LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x6648]);
  v185 = LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x6648]);
  v186 = (v180 + v182) ^ v184;
  if ((v186 & 1) != 0)
    v187 = v176;
  else
    v187 = LODWORD(STACK[0x6A30]) ^ v151;
  LODWORD(STACK[0x66E8]) = v187;
  if ((v186 & 1) == 0)
    v183 = v154;
  LODWORD(STACK[0x6A40]) = v183;
  if ((v186 & 1) != 0)
    v188 = v154;
  else
    v188 = v181;
  LODWORD(STACK[0x66E0]) = v188;
  if ((v186 & 1) != 0)
    v189 = v181;
  else
    v189 = v176;
  LODWORD(STACK[0x6A30]) = v189;
  LODWORD(STACK[0x65B8]) = v164 ^ 0x4380D404;
  v190 = LODWORD(STACK[0x6668]) ^ v164 ^ 0x4380D404;
  v191 = v190 ^ LODWORD(STACK[0x6850]);
  v192 = v190 ^ v146;
  v193 = v190 ^ LODWORD(STACK[0x6990]);
  v194 = LODWORD(STACK[0x6A00]) ^ 0xC443F9C1 ^ v190;
  if ((v186 & 1) != 0)
    v195 = v191;
  else
    v195 = v194;
  LODWORD(STACK[0x6A50]) = v195;
  if ((v186 & 1) != 0)
    v196 = v194;
  else
    v196 = v192;
  LODWORD(STACK[0x66D8]) = v196;
  if ((v186 & 1) == 0)
    v192 = v193;
  LODWORD(STACK[0x6990]) = v192;
  if ((v186 & 1) != 0)
    v197 = v193;
  else
    v197 = v191;
  LODWORD(STACK[0x6700]) = v197;
  v198 = LODWORD(STACK[0x69D0]) ^ 0xFB5B18D0;
  LODWORD(STACK[0x65C0]) = v155;
  v199 = v151 ^ v155;
  v200 = v151;
  LODWORD(STACK[0x6638]) = v151;
  LODWORD(STACK[0x67F0]) = v151 ^ v155 ^ LODWORD(STACK[0x6870]);
  v201 = v151 ^ v155 ^ LODWORD(STACK[0x6920]);
  v202 = LODWORD(STACK[0x69F0]) ^ 0xEB53F511 ^ v199;
  v203 = v198 ^ v199;
  LODWORD(STACK[0x6650]) = v153;
  v204 = v153 ^ 0xCCF676F7 ^ LODWORD(STACK[0x6960]);
  v205 = v165 ^ v153 ^ LODWORD(STACK[0x6810]) ^ 0x8CDE0A90;
  if ((v186 & 1) != 0)
    v206 = v165 ^ v153 ^ LODWORD(STACK[0x6810]) ^ 0x8CDE0A90;
  else
    v206 = v166;
  LODWORD(STACK[0x6960]) = v206;
  if ((v186 & 1) != 0)
    v207 = v166;
  else
    v207 = v168;
  LODWORD(STACK[0x6810]) = v207;
  if ((v186 & 1) != 0)
    v208 = v167;
  else
    v208 = v205;
  LODWORD(STACK[0x6800]) = v208;
  if ((v186 & 1) != 0)
    v209 = v168;
  else
    v209 = v167;
  LODWORD(STACK[0x6920]) = v209;
  v210 = LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A90]) ^ 0xFCD4F927;
  v211 = STACK[0x6690];
  v212 = LODWORD(STACK[0x6690]) ^ v158 ^ 0xD2D9B17;
  v213 = LODWORD(STACK[0x6690]) ^ v158;
  LODWORD(STACK[0x6A80]) = v213;
  v214 = v212 ^ LODWORD(STACK[0x67D0]);
  v215 = v212 ^ LODWORD(STACK[0x67E0]);
  v216 = v165;
  v217 = LODWORD(STACK[0x6730]) ^ v165 ^ 0xCDEAB958;
  v218 = v153 ^ 0x5DF27224;
  v219 = v153 ^ 0x5DF27224 ^ LODWORD(STACK[0x6740]);
  v220 = v218 ^ LODWORD(STACK[0x68E0]);
  v221 = v172 ^ LODWORD(STACK[0x6A70]) ^ 0xA8858388 ^ v160;
  LODWORD(STACK[0x6A90]) = v173 ^ 0x1D7BD2A1;
  v222 = v171 ^ v173 ^ 0x1D7BD2A1 ^ 0xEC982283 ^ LODWORD(STACK[0x6750]);
  v223 = LODWORD(STACK[0x6AC0]) ^ v172 ^ 0xBB858388;
  if ((v186 & 1) != 0)
    v224 = v221;
  else
    v224 = v174;
  LODWORD(STACK[0x69D0]) = v224;
  if ((v186 & 1) != 0)
    v225 = v222;
  else
    v225 = v221;
  LODWORD(STACK[0x67E0]) = v225;
  if ((v186 & 1) != 0)
    v226 = v223;
  else
    v226 = v222;
  LODWORD(STACK[0x69C0]) = v226;
  if ((v186 & 1) != 0)
    v227 = v174;
  else
    v227 = v223;
  LODWORD(STACK[0x67D0]) = v227;
  v228 = v216 ^ 0x51B9328F;
  v229 = v185;
  LODWORD(STACK[0x69E0]) = v185;
  v230 = v185 ^ LODWORD(STACK[0x67C0]);
  v231 = v158;
  LODWORD(STACK[0x6640]) = v158;
  v232 = LODWORD(STACK[0x6840]) ^ v158;
  v233 = LODWORD(STACK[0x6830]) ^ v158;
  v234 = LODWORD(STACK[0x6970]) ^ v158 ^ LODWORD(STACK[0x6678]);
  v235 = v228 ^ LODWORD(STACK[0x67A0]);
  v236 = LODWORD(STACK[0x67B0]) ^ 0x8F538BD7;
  LODWORD(STACK[0x65B0]) = v228;
  v237 = v228 ^ v200;
  LODWORD(STACK[0x6AC0]) = v228 ^ v200;
  v238 = v228 ^ v200 ^ v236;
  v239 = v178 ^ LODWORD(STACK[0x68F0]);
  v240 = LODWORD(STACK[0x6780]) + v211;
  v241 = v237 ^ LODWORD(STACK[0x68D0]);
  v242 = LODWORD(STACK[0x6760]) ^ v231;
  v243 = v213 ^ LODWORD(STACK[0x6910]);
  v244 = LODWORD(STACK[0x6770]) ^ v231;
  v245 = LODWORD(STACK[0x6A20]) ^ 0x7AB755E6 ^ v229;
  LODWORD(STACK[0x6780]) = v184;
  if ((v186 & 1) != 0)
    v246 = v184;
  else
    v246 = v230;
  LODWORD(STACK[0x69F0]) = v246;
  LODWORD(STACK[0x6568]) = v245;
  if ((v186 & 1) == 0)
    v230 = v245;
  LODWORD(STACK[0x68D0]) = v230;
  LODWORD(STACK[0x6860]) = v178;
  v247 = v210 ^ v178;
  LODWORD(STACK[0x6A70]) = v178 ^ 0xC0E2167E;
  v248 = v178 ^ 0xC0E2167E ^ LODWORD(STACK[0x6980]);
  if ((v186 & 1) != 0)
    v249 = v179;
  else
    v249 = v239;
  LODWORD(STACK[0x6A00]) = v249;
  LODWORD(STACK[0x65E8]) = v247;
  if ((v186 & 1) != 0)
    v250 = v239;
  else
    v250 = v247;
  LODWORD(STACK[0x67C0]) = v250;
  LODWORD(STACK[0x65D0]) = v248;
  if ((v186 & 1) != 0)
    v251 = v248;
  else
    v251 = v179;
  LODWORD(STACK[0x67B0]) = v251;
  if ((v186 & 1) != 0)
    v252 = v240;
  else
    v252 = v243;
  LODWORD(STACK[0x6910]) = v252;
  LODWORD(STACK[0x66B0]) = v215;
  if ((v186 & 1) != 0)
    v253 = v215;
  else
    v253 = v240;
  LODWORD(STACK[0x66C8]) = v214;
  if ((v186 & 1) == 0)
    v243 = v214;
  v254 = v219 ^ LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x6720]) = v201;
  LODWORD(STACK[0x6710]) = v202;
  if ((v186 & 1) != 0)
    v255 = v201;
  else
    v255 = v202;
  LODWORD(STACK[0x66F8]) = v203;
  if ((v186 & 1) != 0)
    v256 = v203;
  else
    v256 = STACK[0x67F0];
  LODWORD(STACK[0x6600]) = v234;
  LODWORD(STACK[0x65F0]) = v233;
  if ((v186 & 1) != 0)
    v257 = v233;
  else
    v257 = v234;
  LODWORD(STACK[0x6980]) = v257;
  LODWORD(STACK[0x66F0]) = v204;
  LODWORD(STACK[0x6618]) = v232;
  if ((v186 & 1) != 0)
    v258 = v232;
  else
    v258 = v204;
  LODWORD(STACK[0x6970]) = v258;
  LODWORD(STACK[0x6610]) = v238;
  LODWORD(STACK[0x6608]) = v241;
  if ((v186 & 1) != 0)
    v241 = v238;
  LODWORD(STACK[0x6688]) = v217;
  LODWORD(STACK[0x6628]) = v235;
  if ((v186 & 1) != 0)
    v259 = v235;
  else
    v259 = v217;
  LODWORD(STACK[0x6620]) = v242;
  LODWORD(STACK[0x65E0]) = v254;
  if ((v186 & 1) != 0)
    v254 = v242;
  LODWORD(STACK[0x6630]) = v220;
  LODWORD(STACK[0x65F8]) = v244;
  if ((v186 & 1) != 0)
    v260 = v244;
  else
    v260 = v220;
  LODWORD(STACK[0x6A20]) = v186;
  v261 = (v186 & 2) == 0;
  v262 = STACK[0x66E8];
  v263 = STACK[0x66E0];
  if ((v186 & 2) != 0)
    v264 = STACK[0x66E8];
  else
    v264 = STACK[0x66E0];
  LODWORD(STACK[0x6840]) = v264;
  if ((v186 & 2) != 0)
    v265 = v263;
  else
    v265 = v262;
  LODWORD(STACK[0x6850]) = v265;
  v266 = STACK[0x6700];
  v267 = STACK[0x66D8];
  if ((v186 & 2) != 0)
    v268 = STACK[0x6700];
  else
    v268 = STACK[0x66D8];
  LODWORD(STACK[0x66E0]) = v268;
  if ((v186 & 2) != 0)
    v269 = v267;
  else
    v269 = v266;
  LODWORD(STACK[0x6870]) = v269;
  if ((v186 & 2) != 0)
    v270 = v255;
  else
    v270 = v256;
  LODWORD(STACK[0x68E0]) = v270;
  if ((v186 & 2) != 0)
    v271 = v256;
  else
    v271 = v255;
  LODWORD(STACK[0x6770]) = v271;
  if ((v186 & 2) != 0)
    v272 = v243;
  else
    v272 = v253;
  LODWORD(STACK[0x68F0]) = v272;
  if ((v186 & 2) != 0)
    v273 = v253;
  else
    v273 = v243;
  LODWORD(STACK[0x6760]) = v273;
  if ((v186 & 2) != 0)
    v274 = v259;
  else
    v274 = v241;
  LODWORD(STACK[0x6830]) = v274;
  if ((v186 & 2) != 0)
    v275 = v241;
  else
    v275 = v259;
  LODWORD(STACK[0x6750]) = v275;
  if ((v186 & 2) != 0)
    v276 = v254;
  else
    v276 = v260;
  LODWORD(STACK[0x65D8]) = v276;
  if ((v186 & 2) != 0)
    v277 = v260;
  else
    v277 = v254;
  LODWORD(STACK[0x66E8]) = v277;
  v278 = (unsigned __int8 *)STACK[0x6900];
  v279 = *(unsigned __int8 *)(STACK[0x6518] + (*(unsigned __int8 *)(STACK[0x6900] + 12) ^ 0x28));
  v280 = ((v279 >> 4) | (16 * v279)) ^ (((v279 >> 4) | (16 * v279)) >> 4) ^ (((v279 >> 4) | (16 * v279)) >> 2);
  v281 = STACK[0x6520];
  v282 = (((v278[15] ^ 0x64) - 28) | ((v280 ^ 0xFFFFFFCF) << 24)) ^ *(unsigned __int8 *)(STACK[0x6520] + v278[15]);
  v283 = *(unsigned __int8 *)(STACK[0x6518] + (*(unsigned __int8 *)(STACK[0x6900] + 11) ^ 0xCCLL));
  v284 = STACK[0x6900];
  v285 = (((v283 >> 4) | (16 * v283)) ^ (((v283 >> 4) | (16 * v283)) >> 4) ^ (((v283 >> 4) | (16 * v283)) >> 2)) ^ 0xB9 | (((*(_BYTE *)(STACK[0x6530] + (v278[10] ^ 1)) + (v278[10] ^ 0x11)) ^ 0x53) << 8) | ((*(unsigned __int8 *)(STACK[0x6520] + (STACK[0x6930] ^ 0x21)) ^ ((STACK[0x6930] ^ 0x45) - 28) ^ 0x88888888) << 24);
  v286 = STACK[0x6538];
  v287 = (*(unsigned __int8 *)(STACK[0x6538] + (v278[3] ^ 0xB3)) ^ 0x50) & 0xFF00FFFF | (((*(_BYTE *)(STACK[0x6530] + (v278[1] ^ 7)) + (v278[1] ^ 0x17)) ^ 0x11) << 16);
  v288 = (*(_BYTE *)(STACK[0x6518] + (STACK[0x69B0] ^ 0xB0)) >> 4) | (16
                                                                    * *(_BYTE *)(STACK[0x6518] + (STACK[0x69B0] ^ 0xB0)));
  v289 = (((*(_BYTE *)(STACK[0x6530] + (v278[5] ^ 0xC3)) + (v278[5] ^ 0xD3)) ^ 0xF1) << 16) | (((*(_BYTE *)(STACK[0x6530] + (v278[6] ^ 0x7ELL)) + (v278[6] ^ 0x6E)) ^ 0xA7) << 8) | (((v278[4] - 28) ^ 0x8E ^ *(unsigned __int8 *)(STACK[0x6520] + (v278[4] ^ 0x64))) << 24) | (v288 ^ (v288 >> 4) ^ (v288 >> 2)) ^ 0xBB;
  LODWORD(STACK[0x6930]) = v289;
  v290 = ((STACK[0x6940] ^ 0x52) - 28) ^ *(_BYTE *)(v281 + (STACK[0x6940] ^ 0x36));
  LOBYTE(v278) = *(_BYTE *)(v286 + (*(unsigned __int8 *)(v284 + 14) ^ 0xE0));
  v291 = v285 | ((*(unsigned __int8 *)(v286 + (STACK[0x6A10] ^ 0xD7)) ^ 0x87) << 16);
  v292 = v278 ^ 0xAB;
  v293 = STACK[0x6820];
  HIDWORD(v294) = (*(_DWORD *)(STACK[0x6820] + 4 * (v280 ^ 4u)) - 1495421540) ^ 0x5C5BDA98;
  LODWORD(v294) = HIDWORD(v294);
  LODWORD(v278) = ((v278 ^ 0xC8) << 8) | ((v290 ^ 0x51) << 16) | v282;
  v295 = STACK[0x6880];
  v296 = (v287 | ((*(unsigned __int8 *)(v286 + (STACK[0x69A0] ^ 0x52)) ^ 0x92) << 8) | ((*(unsigned __int8 *)(v286 + (STACK[0x6950] ^ 1)) ^ 0xA) << 24)) ^ *(_DWORD *)(STACK[0x6880] + 4 * (v282 ^ 0xB5u)) ^ __ROR4__(*(_DWORD *)(STACK[0x6880] + 4 * v292) ^ 0xEE1D91E0, 24) ^ __ROR4__(*(_DWORD *)(STACK[0x6880] + 4 * (v290 ^ 0x34u)) ^ 0xEE1D91E0, 16) ^ ((v294 >> 8) - 823920476 - ((2 * (v294 >> 8)) & 0x9DC7F148));
  LODWORD(STACK[0x6A10]) = v296 ^ v289;
  v297 = v296 ^ v289 ^ 0xCEF0F96B;
  v298 = v297 ^ v278;
  v299 = v297 ^ v278 ^ v291;
  LODWORD(v278) = *(_DWORD *)(STACK[0x68A0] + 4 * (BYTE1(v299) ^ 0x71u));
  v300 = v299 ^ 0x99;
  v301 = HIBYTE(v299) ^ 0x31;
  v302 = *(_DWORD *)(STACK[0x68A0] + 4 * (BYTE2(v299) ^ 0xAAu));
  v303 = v296 ^ *(_DWORD *)(STACK[0x68B0] + 4 * v300) ^ __ROR4__(v278 ^ 0xA3581D14 ^ (v278 >> 3) & 0x1FA4ABB5, 24) ^ __ROR4__(*(_DWORD *)(v295 + 4 * v301) ^ 0xEE1D91E0, 8) ^ __ROR4__(v302 ^ 0xA3581D14 ^ (v302 >> 3) & 0x1FA4ABB5, 16);
  v304 = v303 ^ 0x50D5A826 ^ v298 ^ 0x542DF68D;
  HIDWORD(v294) = *(_DWORD *)(STACK[0x68B0] + 4 * (BYTE1(v304) ^ 0x2Eu)) ^ 0x6DE4099A;
  LODWORD(v294) = HIDWORD(v294);
  v305 = *(_DWORD *)(v295 + 4 * (v303 ^ 0x26 ^ v298 ^ 0xD5u)) ^ __ROR4__(*(_DWORD *)(v295 + 4 * (((v303 ^ 0x50D5A826 ^ v298) >> 24) ^ 0x6D)) ^ 0xEE1D91E0, 8) ^ ((v294 >> 24) - 823920476 - ((2 * (v294 >> 24)) & 0x9DC7F148)) ^ __ROR4__(*(_DWORD *)(STACK[0x68A0] + 4 * (BYTE2(v304) ^ 0x5Bu)) ^ 0xA3581D14 ^ (*(_DWORD *)(STACK[0x68A0] + 4 * (BYTE2(v304) ^ 0x5Bu)) >> 3) & 0x1FA4ABB5, 16);
  v306 = v291 ^ 0x7EEB3292 ^ v303 ^ 0x50D5A826;
  v307 = v305 ^ v297;
  LODWORD(v278) = v303 ^ 0x50D5A826 ^ v298 ^ 0x8F1CCB0 ^ v306 ^ v307;
  v308 = v278 ^ 0xD3FE6944;
  v309 = STACK[0x68A0];
  LODWORD(v286) = *(_DWORD *)(STACK[0x68A0] + 4 * (((v278 ^ 0xD3FE6944) >> 16) ^ 0xB0u));
  LODWORD(v278) = *(_DWORD *)(STACK[0x68A0] + 4 * ((v278 >> 24) ^ 0x76));
  v310 = STACK[0x68B0];
  v311 = *(_DWORD *)(STACK[0x68B0] + 4 * (BYTE1(v308) ^ 0x1Cu));
  v312 = *(_DWORD *)(STACK[0x68B0] + 4 * (v308 ^ 0xBBu)) ^ v303 ^ __ROR4__(v286 ^ 0xA3581D14 ^ (v286 >> 3) & 0x1FA4ABB5, 16) ^ v305 ^ __ROR4__(v278 ^ 0xA3581D14 ^ (v278 >> 3) & 0x1FA4ABB5, 8) ^ __ROR4__((v311 & 0x10000 | 0x6DE4099A) ^ v311 & 0xFFFEFFFF, 24);
  v313 = v306 ^ 0x963708AF ^ v312;
  v314 = *(_DWORD *)(STACK[0x68A0] + 4 * (((v313 ^ v308) >> 24) ^ 0x1B));
  v315 = *(_DWORD *)(STACK[0x68A0] + 4 * ((v313 ^ v308) ^ 0xB0u)) ^ 0xCFC7527F;
  v316 = (v315 >> 3) & 0x1FA4ABB5 ^ v315 ^ __ROR4__((*(_DWORD *)(v293 + 4 * (((v313 ^ v308) >> 16) ^ 0x27u))- 1495421540) ^ 0x5C5BDA98, 16) ^ __ROR4__(*(_DWORD *)(v295+ 4* (((unsigned __int16)(v313 ^ v308) >> 8) ^ 0x6Fu)) ^ 0xEE1D91E0, 24) ^ __ROR4__(v314 ^ 0xA3581D14 ^ (v314 >> 3) & 0x1FA4ABB5, 8);
  v317 = v307 ^ 0x46F76373 ^ v316;
  v318 = v317 ^ v308 ^ 0x1E01E7F6;
  LODWORD(v278) = v317 ^ v308 ^ 0xBE3E0298;
  HIDWORD(v294) = *(_DWORD *)(STACK[0x68B0] + 4 * (((v317 ^ v308) >> 24) ^ 0xA)) ^ 0x6DE4099A;
  LODWORD(v294) = HIDWORD(v294);
  v319 = v294 >> 8;
  LODWORD(v294) = __ROR4__(*(_DWORD *)(v295 + 4 * (BYTE1(v278) ^ 0x80u)) ^ 0xEE1D91E0, 24);
  v320 = *(_DWORD *)(v295 + 4 * (v318 ^ 0x65u)) ^ v312 ^ v316 ^ __ROR4__((*(_DWORD *)(v293+ 4* (BYTE2(v278) ^ 0x11u))- 1495421540) ^ 0x5C5BDA98, 16) ^ 0xAB06A913 ^ ((v319 ^ v294) - 823920476 - ((2 * (v319 ^ v294)) & 0x9DC7F148));
  v321 = v317 ^ v313;
  v322 = v320 ^ v317;
  LODWORD(STACK[0x69B0]) = v322 ^ 0x3536EF59;
  v323 = v321 ^ v322 ^ 0x3536EF59;
  LODWORD(STACK[0x69A0]) = v323 ^ 0x8208EDC1;
  v324 = v323 ^ 0x8208EDC1 ^ v318;
  v325 = BYTE2(v324) ^ 0xAC;
  HIDWORD(v294) = *(_DWORD *)(v295 + 4 * (BYTE1(v324) ^ 0x42u)) ^ 0xEE1D91E0;
  LODWORD(v294) = HIDWORD(v294);
  v326 = *(_DWORD *)(v295 + 4 * (BYTE2(v324) ^ 0x9Cu)) ^ v325 ^ 0x88C6C2CF ^ (v325
                                                                              - ((2 * v325) & 0x116)
                                                                              + 1998365743
                                                                              + ((2
                                                                                * (v325
                                                                                 - ((2 * v325) & 0x116)
                                                                                 - 1472681077)) & 0x1148 ^ 0xEFBEBFFF)
                                                                              + 1);
  LODWORD(STACK[0x6950]) = v324 ^ 0xB7F927A1;
  v327 = *(_DWORD *)(v310 + 4 * (v324 ^ 0xB5u)) ^ __ROR4__(*(_DWORD *)(v295 + 4 * (HIBYTE(v324) ^ 0xD2)) ^ 0xEE1D91E0, 8) ^ (((v294 >> 24) ^ -(int)(v294 >> 24) ^ (v320 - (v320 ^ (v294 >> 24))))+ v320) ^ __ROR4__(v326, 16);
  v328 = v327 ^ v322;
  v329 = v327 ^ v322 ^ v323;
  v330 = v329 ^ 0x46D30135 ^ v324 ^ 0xB7F927A1;
  HIDWORD(v294) = *(_DWORD *)(v310 + 4 * (BYTE1(v330) ^ 0x39u)) ^ 0x6DE4099A;
  LODWORD(v294) = HIDWORD(v294);
  v331 = ((v294 >> 24) - 823920476 - ((2 * (v294 >> 24)) & 0x9DC7F148)) ^ *(_DWORD *)(v295
                                                                                    + 4
                                                                                    * (v329 ^ 0x35 ^ v324 ^ 0xA1 ^ 0xF3u)) ^ __ROR4__((*(_DWORD *)(v293 + 4 * (HIBYTE(v330) ^ 0xBE)) - 1495421540) ^ 0x5C5BDA98, 8);
  v332 = v330 ^ 0x90F02D96;
  v333 = *(_DWORD *)(v309 + 4 * (BYTE2(v330) ^ 0x77u));
  v334 = v331 ^ __ROR4__(v333 ^ 0xA3581D14 ^ (v333 >> 3) & 0x1FA4ABB5, 16) ^ v327;
  v335 = v328 ^ 0xEAD2E6C3 ^ v334;
  v336 = v335 ^ v329 ^ 0x46D30135;
  v337 = v336 ^ 0xDEE3477F;
  v338 = v332 ^ v336;
  v339 = v332 ^ v336 ^ 0x4E136AE9;
  HIDWORD(v294) = *(_DWORD *)(v295 + 4 * (BYTE1(v339) ^ 0x65u)) ^ 0xEE1D91E0;
  LODWORD(v294) = HIDWORD(v294);
  v335 ^= 0xE0E3477F;
  v340 = v334 ^ 0x50D5A826;
  v341 = ((v294 >> 24) - 823920476 - ((2 * (v294 >> 24)) & 0x9DC7F148)) ^ *(_DWORD *)(v295
                                                                                    + 4
                                                                                    * (v339 ^ 0x65u)) ^ __ROR4__((*(_DWORD *)(v293 + 4 * (BYTE2(v339) ^ 0x2Eu)) - 1495421540) ^ 0x5C5BDA98, 16) ^ __ROR4__(*(_DWORD *)(v310 + 4 * (HIBYTE(v338) ^ 0x6D)) ^ 0x6DE4099A, 8) ^ v334 ^ 0x50D5A826;
  v342 = v341 ^ v335 ^ 0x91F76373;
  v343 = v337 ^ v342;
  v344 = v338 ^ 0x79136AE9 ^ v337 ^ v342;
  LODWORD(v284) = *(_DWORD *)(v309 + 4 * (BYTE1(v344) ^ 0x4Fu));
  v345 = v344 ^ 0x8CCFC8F8;
  HIDWORD(v294) = v284 ^ 0xA3581D14 ^ (v284 >> 3) & 0x1FA4ABB5;
  LODWORD(v294) = HIDWORD(v294);
  LODWORD(v284) = v294 >> 24;
  LODWORD(v294) = __ROR4__(*(_DWORD *)(v310 + 4 * (HIBYTE(v344) ^ 0x98)) ^ 0x6DE4099A, 8);
  LODWORD(v310) = *(_DWORD *)(v295 + 4 * (v344 ^ 0x9Du)) ^ __ROR4__((*(_DWORD *)(v293+ 4 * (BYTE2(v344) ^ 0xE1u))- 1495421540) ^ 0x5C5BDA98, 16);
  v346 = v341 ^ 0xB6FE6944;
  v347 = v310 ^ v341 ^ 0xB6FE6944 ^ ((v284 ^ v294) - 823920476 - ((2 * (v284 ^ v294)) & 0x9DC7F148));
  v348 = STACK[0x6638];
  v349 = (v348 ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6930]))
       - 900337005
       - ((2 * (v348 ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6930]))) & 0x94ABE526);
  v350 = (v328 ^ 0xEAD2E6C3) - 900337005 - 2 * ((v328 ^ 0xEAD2E6C3) & 0x4A55F297 ^ v328 & 4);
  v351 = v335 - 1699475655 - ((2 * v335) & 0x35681E72);
  v352 = v332 - 900337005 - ((2 * v332) & 0x94ABE526);
  v353 = v346 - 900337005 - ((2 * v346) & 0x94ABE526);
  v354 = (v329 ^ 0xBE3E0298) - 900337005 - ((2 * (v329 ^ 0xBE3E0298)) & 0x94ABE526);
  v355 = (v327 ^ LODWORD(STACK[0x6690])) - 900337005 - ((2 * (v327 ^ LODWORD(STACK[0x6690]))) & 0x94ABE526);
  v356 = (v337 ^ v348) - 1699475655 - ((2 * (v337 ^ v348)) & 0x35681E72);
  v357 = v342 ^ 0x84C8861D ^ v347;
  v358 = v357 + 893233458 - ((2 * v357) & 0x6A7B5264);
  v359 = (v338 ^ 0x79136AE9) - 1699475655 - 2 * ((v338 ^ 0x79136AE9) & 0x1AB40F3B ^ v338 & 2);
  v360 = v342 - 900337005 - ((2 * v342) & 0x94ABE526);
  v361 = STACK[0x66A0];
  v362 = (v345 ^ v361) - 900337005 - ((2 * (v345 ^ v361)) & 0x94ABE526);
  v363 = v357 ^ v343;
  v364 = v343 - 900337005 - ((2 * v343) & 0x94ABE526);
  v365 = (v340 ^ v348) - 1699475655 - ((2 * (v340 ^ v348)) & 0x35681E72);
  v366 = (v345 ^ v363) + 893233458 - ((2 * (v345 ^ v363)) & 0x6A7B5264);
  v367 = (v347 ^ LODWORD(STACK[0x6510]) ^ 0xA6F76373)
       + 893233458
       - ((2 * (v347 ^ LODWORD(STACK[0x6510]) ^ 0xA6F76373)) & 0x6A7B5264);
  v368 = STACK[0x6860];
  v369 = LODWORD(STACK[0x6860]) ^ v320 ^ 0xDD47D61C;
  v370 = STACK[0x68C0];
  v371 = (v363 ^ v370) + 893233458 - ((2 * (v363 ^ v370)) & 0x6A7B5264);
  v372 = v349 ^ LODWORD(STACK[0x6640]);
  HIDWORD(v294) = v372 ^ 0xC38114D3;
  LODWORD(v294) = v372 ^ 0xC38114D3;
  v373 = v294 >> 7;
  LODWORD(STACK[0x6560]) = v372;
  v374 = v369 ^ v372;
  LODWORD(v294) = __ROR4__(v374, 7);
  v375 = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6950]);
  v376 = v368 ^ 0x771B31DF ^ LODWORD(STACK[0x69B0]);
  v377 = v368 ^ 0x771B31DF ^ LODWORD(STACK[0x69A0]);
  v378 = LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x69E0]);
  v379 = v374 + STACK[0x6890];
  LODWORD(v294) = v373 ^ v294 ^ 0x929F57C4;
  HIDWORD(v294) = v294;
  v380 = v294 >> 25;
  LODWORD(STACK[0x6558]) = v378;
  v381 = v379 ^ v378;
  LODWORD(STACK[0x6550]) = v380;
  v382 = v380 ^ 0x2F761159;
  v383 = STACK[0x6A40];
  if (!v261)
    v383 = STACK[0x6A30];
  LODWORD(STACK[0x6820]) = v383;
  v384 = STACK[0x6980];
  if (!v261)
    v384 = STACK[0x6970];
  LODWORD(STACK[0x6860]) = v384;
  v385 = STACK[0x6960];
  if (v261)
    v385 = STACK[0x6920];
  LODWORD(STACK[0x6730]) = v385;
  if (v261)
    v386 = STACK[0x6800];
  else
    v386 = STACK[0x6810];
  v387 = STACK[0x67C0];
  if (v261)
    v387 = STACK[0x67B0];
  LODWORD(STACK[0x6740]) = v387;
  v388 = STACK[0x69C0];
  if (!v261)
    v388 = STACK[0x69D0];
  v389 = STACK[0x67D0];
  if (v261)
    v389 = STACK[0x67E0];
  if ((v381 & 1) != 0)
    v390 = v376;
  else
    v390 = v382;
  if ((v381 & 1) == 0)
    v382 = v375;
  LODWORD(STACK[0x68B0]) = v382;
  if ((v381 & 1) != 0)
  {
    v376 = v377;
    v377 = v375;
  }
  v391 = LODWORD(STACK[0x6650]) ^ 0xD1087C ^ v355;
  v392 = LODWORD(STACK[0x6A80]) ^ 0xEA76418F ^ v350;
  v393 = LODWORD(STACK[0x6A80]) ^ 0xE376418F ^ v352;
  v394 = LODWORD(STACK[0x6A80]) ^ 0x8B6B6FB4 ^ v354;
  v395 = LODWORD(STACK[0x66C0]) ^ 0x7DDC5601 ^ v365;
  v396 = LODWORD(STACK[0x6AC0]) ^ v359 ^ 0x9C538BD7;
  v397 = LODWORD(STACK[0x6AC0]) ^ v351 ^ 0x95538BD7;
  v398 = LODWORD(STACK[0x66C0]) ^ 0x6A1A94CE ^ v356;
  v399 = LODWORD(STACK[0x6650]) ^ 0x31A9A8BC ^ v362;
  v400 = LODWORD(STACK[0x6650]) ^ v361 ^ v353 ^ 0x349F47E5;
  v401 = LODWORD(STACK[0x6650]) ^ v361 ^ v364 ^ 0xBD666044;
  v402 = LODWORD(STACK[0x6650]) ^ v361 ^ v360 ^ 0x1A964DD2;
  v403 = LODWORD(STACK[0x64F0]) ^ 0xD30DD0F2 ^ v371;
  v404 = v370 ^ LODWORD(STACK[0x6A90]) ^ 0x42B9CAAB ^ v358;
  v405 = LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x6A90]) ^ 0x4BB9CAAB ^ v367;
  v406 = v370 ^ LODWORD(STACK[0x6A90]) ^ 0xCE760253 ^ v366;
  if ((v381 & 1) != 0)
    v407 = v403;
  else
    v407 = v370 ^ LODWORD(STACK[0x6A90]) ^ 0x42B9CAAB ^ v358;
  LODWORD(STACK[0x69B0]) = v407;
  if ((v381 & 1) != 0)
    v408 = v404;
  else
    v408 = v405;
  if ((v381 & 1) != 0)
    v409 = v406;
  else
    v409 = v403;
  if ((v381 & 1) != 0)
    v410 = v405;
  else
    v410 = v406;
  LODWORD(STACK[0x69A0]) = v410;
  LODWORD(STACK[0x64D0]) = v400;
  if ((v381 & 1) != 0)
  {
    v411 = v399;
  }
  else
  {
    v400 = v399;
    v411 = v401;
  }
  LODWORD(STACK[0x68A0]) = v411;
  LODWORD(STACK[0x64C8]) = v402;
  if ((v381 & 1) != 0)
    v402 = v401;
  LODWORD(STACK[0x6540]) = v392;
  LODWORD(STACK[0x64F8]) = v394;
  if ((v381 & 1) != 0)
    v412 = v394;
  else
    v412 = v392;
  LODWORD(STACK[0x6548]) = v391;
  LODWORD(STACK[0x6500]) = v393;
  if ((v381 & 1) != 0)
    v413 = v391;
  else
    v413 = v393;
  LODWORD(STACK[0x6698]) = v395;
  LODWORD(STACK[0x64E0]) = v396;
  if ((v381 & 1) != 0)
    v414 = v395;
  else
    v414 = v396;
  LODWORD(STACK[0x6680]) = v397;
  LODWORD(STACK[0x64D8]) = v398;
  if ((v381 & 1) != 0)
    v415 = v398;
  else
    v415 = v397;
  LODWORD(STACK[0x6A10]) = v381;
  if ((v381 & 2) != 0)
    v416 = v412;
  else
    v416 = v413;
  LODWORD(STACK[0x65A0]) = v416;
  if ((v381 & 2) != 0)
    v412 = v413;
  LODWORD(STACK[0x6598]) = v412;
  v417 = STACK[0x6840];
  v418 = (((v389 ^ 0x7CA9E3DB) - 2091508699) ^ ((v389 ^ 0xBAF74787) + 1158199417) ^ ((v389 ^ 0x951B7382) + 1793363070))
       + 339366251;
  v419 = (v418 ^ 0x1E268884) & (2 * (v418 & 0x9F40A0C5)) ^ v418 & 0x9F40A0C5;
  v420 = ((2 * (v418 ^ 0x4A7C986)) ^ 0x37CED286) & (v418 ^ 0x4A7C986) ^ (2 * (v418 ^ 0x4A7C986)) & 0x9BE76942;
  v421 = (v420 ^ 0x13262841) & (4 * v419) ^ v419;
  v422 = ((4 * (v420 ^ 0x88212941)) ^ 0x6F9DA50C) & (v420 ^ 0x88212941) ^ (4 * (v420 ^ 0x88212941)) & 0x9BE76940;
  v423 = (v422 ^ 0xB852100) & (16 * v421) ^ v421;
  v424 = ((16 * (v422 ^ 0x90624843)) ^ 0xBE769430) & (v422 ^ 0x90624843) ^ (16 * (v422 ^ 0x90624843)) & 0x9BE76940;
  v425 = v423 ^ 0x9BE76943 ^ (v424 ^ 0x9A660043) & (v423 << 8);
  v426 = v418 ^ (2
               * ((v425 << 16) & 0x1BE70000 ^ v425 ^ ((v425 << 16) ^ 0x69430000) & (((v424 ^ 0x1816943) << 8) & 0x1BE70000 ^ 0x18860000 ^ (((v424 ^ 0x1816943) << 8) ^ 0x67690000) & (v424 ^ 0x1816943))));
  LODWORD(STACK[0x65A8]) = v388;
  v427 = LODWORD(STACK[0x68F0])
       + 526099711
       + (((v388 ^ 0x7C7456C3) - 2087999171) ^ ((v388 ^ 0x3A7A08E1) - 981076193) ^ ((v388 ^ 0x154B89FC) - 357272060))
       + (((v426 ^ 0x2D00798B) - 581968816) ^ ((v426 ^ 0xF8A238) - 256440323) ^ ((v426 ^ 0x8FBF1147) + 2146481284));
  v428 = (((v417 ^ 0xF2485010) + 230141936) ^ ((v417 ^ 0xA59E68D2) + 1516345134) ^ ((v417 ^ 0x64B5FE3A) - 1689648698))
       - LODWORD(STACK[0x68E0])
       - 1803607867
       + (((((v417 ^ 0xCC525E04) + 867017212) ^ ((v417 ^ 0xCCB2E27F) + 860691841) ^ ((v417 ^ 0x33837A83) - 864254595))
         + 1382137088) ^ 0x8E151583);
  v429 = (v428 ^ 0xDB1F6D3D) & (2 * (v428 & 0xC31E71BE)) ^ v428 & 0xC31E71BE;
  v430 = ((2 * (v428 ^ 0x5D17CC61)) ^ 0x3C137BBE) & (v428 ^ 0x5D17CC61) ^ (2 * (v428 ^ 0x5D17CC61)) & 0x9E09BDDE;
  v431 = (v430 ^ 0x9E010998) & (4 * v429) ^ v429;
  v432 = ((4 * (v430 ^ 0x82088441)) ^ 0x7826F77C) & (v430 ^ 0x82088441) ^ (4 * (v430 ^ 0x82088441)) & 0x9E09BDDC;
  v433 = (v432 ^ 0x1800B543) & (16 * v431) ^ v431;
  v434 = ((16 * (v432 ^ 0x86090883)) ^ 0xE09BDDF0) & (v432 ^ 0x86090883) ^ (16 * (v432 ^ 0x86090883)) & 0x9E09BDD0;
  v435 = v433 ^ 0x9E09BDDF ^ (v434 ^ 0x80099D00) & (v433 << 8);
  v436 = (v428 ^ (2
                * (((v435 << 16) ^ 0x3DDF0000) & (((v434 ^ 0x1E00200F) << 8) & 0x9E090000 ^ 0x16000000 ^ (((v434 ^ 0x1E00200F) << 8) ^ 0x9BD0000) & (v434 ^ 0x1E00200F)) ^ v435 ^ ((v435 << 16) & 0x1E090000 | 0x9543)))) >> 1;
  v437 = ((v436 ^ 0xCAC17361) - 433581553) ^ ((v436 ^ 0xCD2213A5) - 506760501) ^ ((v436 ^ 0x646C7087) + 1216680425);
  v438 = ((LODWORD(STACK[0x6850]) ^ 0xE9DA9253) + 371551661) ^ ((LODWORD(STACK[0x6850]) ^ 0xD01B270F) + 803526897) ^ ((LODWORD(STACK[0x6850]) ^ 0xAA273A4) - 178418596);
  LODWORD(STACK[0x66D0]) = v386;
  v439 = (v386 ^ 0x1DE883EE) - v438 + 1301212991;
  v440 = (v439 ^ 0xFF4E93F5) & (2 * (v439 & 0xFF4EDBF5)) ^ v439 & 0xFF4EDBF5;
  v441 = ((2 * (v439 ^ 0x23DAA73D)) ^ 0xB928F990) & (v439 ^ 0x23DAA73D) ^ (2 * (v439 ^ 0x23DAA73D)) & 0xDC947CC8;
  v442 = (v441 ^ 0x98807880) & (4 * v440) ^ v440;
  v443 = ((4 * (v441 ^ 0x44940448)) ^ 0x7251F320) & (v441 ^ 0x44940448) ^ (4 * (v441 ^ 0x44940448)) & 0xDC947CC8;
  v444 = (v443 ^ 0x50107000) & (16 * v442) ^ v442;
  v445 = ((16 * (v443 ^ 0x8C840CC8)) ^ 0xC947CC80) & (v443 ^ 0x8C840CC8) ^ (16 * (v443 ^ 0x8C840CC8)) & 0xDC947CC0;
  v446 = v444 ^ 0xDC947CC8 ^ (v445 ^ 0xC8044C00) & (v444 << 8);
  v447 = (v446 << 16) & 0x5C940000 ^ v446 ^ ((v446 << 16) ^ 0x7CC80000) & (((v445 ^ 0x14903048) << 8) & 0x5C940000 ^ 0x48800000 ^ (((v445 ^ 0x14903048) << 8) ^ 0x147C0000) & (v445 ^ 0x14903048));
  v437 -= 1883624049;
  v448 = (v437 ^ 0xDB5B3872) & (2 * (v437 & 0x9B5C3D64)) ^ v437 & 0x9B5C3D64;
  v449 = ((2 * (v437 ^ 0xFF7340F2)) ^ 0xC85EFB2C) & (v437 ^ 0xFF7340F2) ^ (2 * (v437 ^ 0xFF7340F2)) & 0x642F7D96;
  v450 = (v449 ^ 0x40007902) & (4 * v448) ^ v448;
  v451 = ((4 * (v449 ^ 0x24210492)) ^ 0x90BDF658) & (v449 ^ 0x24210492) ^ (4 * (v449 ^ 0x24210492)) & 0x642F7D94;
  v452 = (v451 ^ 0x2D7406) & (16 * v450) ^ v450;
  v453 = ((16 * (v451 ^ 0x64020986)) ^ 0x42F7D960) & (v451 ^ 0x64020986) ^ (16 * (v451 ^ 0x64020986)) & 0x642F7D90;
  v454 = v452 ^ 0x642F7D96 ^ (v453 ^ 0x40275900) & (v452 << 8);
  v455 = (v454 << 16) & 0x642F0000 ^ v454 ^ ((v454 << 16) ^ 0x7D960000) & (((v453 ^ 0x24082496) << 8) & 0x642F0000 ^ 0x40020000 ^ (((v453 ^ 0x24082496) << 8) ^ 0x2F7D0000) & (v453 ^ 0x24082496));
  v456 = v427 + 1691;
  v457 = ((v427 + 1691) ^ 0xCEB50195) & (2 * ((v427 + 1691) & 0xCC81A199)) ^ (v427 + 1691) & 0xCC81A199;
  v458 = ((2 * (v456 ^ 0x4FB44195)) ^ 0x66BC018) & (v456 ^ 0x4FB44195) ^ (2 * (v456 ^ 0x4FB44195)) & 0x8335E00C;
  v459 = (v458 ^ 0x8311A008) & (4 * v457) ^ v457;
  v460 = ((4 * (v458 ^ 0x81142004)) ^ 0xCD78030) & (v458 ^ 0x81142004) ^ (4 * (v458 ^ 0x81142004)) & 0x8335E00C;
  v461 = v459 ^ 0x8335E00C ^ (v460 ^ 0x15800C) & (16 * v459);
  v462 = (16 * (v460 ^ 0x8320600C)) & 0x8335E000 ^ 0x8021E00C ^ ((16 * (v460 ^ 0x8320600C)) ^ 0x335E00C0) & (v460 ^ 0x8320600C);
  v463 = (v461 << 8) & 0x8335E000 ^ v461 ^ ((v461 << 8) ^ 0x35E00C00) & v462;
  v464 = ((v463 << 16) ^ 0x600C0000) & ((v462 << 8) & 0x83350000 ^ 0x2150000 ^ ((v462 << 8) ^ 0x35E00000) & v462);
  v465 = (v463 << 16) & 0x3350000 ^ v463;
  v466 = LODWORD(STACK[0x66A8]) >> LODWORD(STACK[0x6A60]);
  LODWORD(STACK[0x6950]) = v466;
  v467 = v466 ^ 0x1F90E1ADu;
  v468 = STACK[0xDA68];
  v469 = *(_QWORD *)(v468
                   + 8
                   * ((*(_QWORD *)(v468
                                 + 8
                                 * ((*(_QWORD *)(v468 + 8 * (0xE12A7176 % v467)) + 1720032145) % v467))
                     + 2858420307)
                    % v467))
       + 929432018;
  STACK[0x6A70] = STACK[0xDA68];
  v470 = v465 ^ v464;
  v471 = *(_QWORD *)(v468 + 8 * (v469 % v467)) + 2585504009;
  LODWORD(STACK[0x66D8]) = v389;
  v472 = v439 ^ v389 ^ (2 * v447);
  STACK[0x68C0] = v467;
  v473 = v471 % v467 - ((2 * (v471 % v467)) & 0x2EBC6FC0) - 144820256;
  v474 = ((v473 ^ 0xF71DB3FE) + 437279170) ^ ((v473 ^ 0x8DC98EC6) + 1623483642) ^ ((v473 ^ 0x8D8A0AD8) + 1619517672);
  LODWORD(STACK[0x6900]) = (v456 ^ (2 * v470)) >> 1;
  LODWORD(STACK[0x6940]) = v437 ^ (2 * v455);
  LODWORD(STACK[0x6A80]) = v474;
  LODWORD(STACK[0x6A90]) = v474 + 1079465285;
  v475 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AA0])) - 12);
  LODWORD(STACK[0x67A0]) = v390;
  LODWORD(STACK[0x6700]) = v377;
  if ((v381 & 2) != 0)
    v476 = v377;
  else
    v476 = v390;
  LODWORD(STACK[0x6570]) = v476;
  LODWORD(STACK[0x66B8]) = v376;
  v477 = STACK[0x68B0];
  if ((v381 & 2) == 0)
    v477 = v376;
  LODWORD(STACK[0x6578]) = v477;
  LODWORD(STACK[0x6498]) = v414;
  LODWORD(STACK[0x6490]) = v415;
  if ((v381 & 2) != 0)
    v478 = v414;
  else
    v478 = v415;
  LODWORD(STACK[0x6580]) = v478;
  LODWORD(STACK[0x64A8]) = v400;
  LODWORD(STACK[0x64A0]) = v402;
  if ((v381 & 2) != 0)
    v479 = v402;
  else
    v479 = v400;
  LODWORD(STACK[0x6588]) = v479;
  LODWORD(STACK[0x64C0]) = v408;
  LODWORD(STACK[0x64B0]) = v409;
  if ((v381 & 2) != 0)
    v480 = v409;
  else
    v480 = v408;
  LODWORD(STACK[0x6590]) = v480;
  LODWORD(STACK[0x6930]) = v472 >> 1;
  STACK[0x6A60] = STACK[0xDA80];
  return v475();
}

uint64_t sub_100ACB9A0()
{
  unsigned int v0;
  unsigned int v1;
  _BOOL4 v2;
  unint64_t v3;
  uint64_t v4;
  int v5;

  v2 = LODWORD(STACK[0x6A80]) < 0x1A53DDE0;
  v3 = 8 * ((v1 | ((unint64_t)(v1 < v0) << 32)) + 0x643BF3F4648D945DLL) - 0x21DF9FA4CD520EC8;
  v4 = *(_QWORD *)(STACK[0x6A70] + v3);
  v5 = STACK[0x6AA0];
  STACK[0x6AC0] = (LODWORD(STACK[0x6AA0]) + 612100560) & 0xDB83FB9F;
  *(_QWORD *)(STACK[0x6A60] + v3) = v4 ^ 0x5555555555555555;
  if (v2 == v1 + 630097322 < 0x5AAB3325)
    v2 = v1 + 630097322 < LODWORD(STACK[0x6A90]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15978 * !v2) ^ v5)) - 12))();
}

uint64_t sub_100ACE638()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;

  v0 = STACK[0x6A20];
  if ((STACK[0x6A20] & 1) != 0)
    v1 = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x69E0]) ^ 0x64AA370C;
  else
    v1 = STACK[0x6780];
  if ((v0 & 1) != 0)
    v2 = STACK[0x6568];
  else
    v2 = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x69E0]) ^ 0x64AA370C;
  if ((v0 & 1) != 0)
    v3 = STACK[0x67F0];
  else
    v3 = STACK[0x6720];
  if ((v0 & 1) != 0)
    v4 = STACK[0x6710];
  else
    v4 = STACK[0x66F8];
  if ((v0 & 1) != 0)
    v5 = STACK[0x66F0];
  else
    v5 = STACK[0x65F0];
  if ((v0 & 1) != 0)
    v6 = STACK[0x6600];
  else
    v6 = STACK[0x6618];
  v7 = STACK[0x65E8];
  if ((v0 & 1) == 0)
    v7 = STACK[0x65D0];
  LODWORD(STACK[0x69E0]) = v7;
  if ((v0 & 1) != 0)
    v8 = STACK[0x66C8];
  else
    v8 = STACK[0x66B0];
  if ((v0 & 1) != 0)
    v9 = STACK[0x6688];
  else
    v9 = STACK[0x6610];
  if ((v0 & 1) != 0)
    v10 = STACK[0x6608];
  else
    v10 = STACK[0x6628];
  if ((v0 & 1) != 0)
    v11 = STACK[0x65E0];
  else
    v11 = STACK[0x65F8];
  if ((v0 & 1) != 0)
    v12 = STACK[0x6630];
  else
    v12 = STACK[0x6620];
  v13 = STACK[0x6810];
  if ((v0 & 2) != 0)
    v13 = STACK[0x6800];
  LODWORD(STACK[0x6710]) = v13;
  v14 = STACK[0x67C0];
  if ((v0 & 2) != 0)
    v14 = STACK[0x67B0];
  LODWORD(STACK[0x6608]) = v14;
  v15 = STACK[0x67E0];
  if ((v0 & 2) == 0)
    v15 = STACK[0x67D0];
  LODWORD(STACK[0x64E8]) = v15;
  v16 = (LODWORD(STACK[0x6560]) ^ 0x8C2AF69A ^ LODWORD(STACK[0x6550])) + STACK[0x6890];
  v17 = STACK[0x69F0];
  LODWORD(STACK[0x6790]) = v2;
  if ((v0 & 2) != 0)
    v17 = v2;
  LODWORD(STACK[0x65D0]) = v17;
  v18 = STACK[0x68D0];
  LODWORD(STACK[0x67C0]) = v1;
  if ((v0 & 2) != 0)
    v18 = v1;
  LODWORD(STACK[0x66C8]) = v18;
  v19 = STACK[0x6A50];
  if ((v0 & 2) == 0)
    v19 = STACK[0x6990];
  LODWORD(STACK[0x67E0]) = v19;
  LODWORD(STACK[0x6630]) = v3;
  LODWORD(STACK[0x6628]) = v4;
  if ((v0 & 2) != 0)
    v20 = v3;
  else
    v20 = v4;
  LODWORD(STACK[0x67F0]) = v20;
  LODWORD(STACK[0x66F8]) = v5;
  LODWORD(STACK[0x66F0]) = v6;
  if ((v0 & 2) != 0)
    v21 = v5;
  else
    v21 = v6;
  LODWORD(STACK[0x66B0]) = v21;
  v22 = STACK[0x6910];
  LODWORD(STACK[0x6600]) = v8;
  if ((v0 & 2) != 0)
    v22 = v8;
  LODWORD(STACK[0x6800]) = v22;
  LODWORD(STACK[0x67B0]) = v9;
  LODWORD(STACK[0x65F0]) = v10;
  if ((v0 & 2) != 0)
    v23 = v9;
  else
    v23 = v10;
  LODWORD(STACK[0x6688]) = v23;
  LODWORD(STACK[0x65F8]) = v11;
  LODWORD(STACK[0x65E0]) = v12;
  if ((v0 & 2) != 0)
    v24 = v11;
  else
    v24 = v12;
  LODWORD(STACK[0x6810]) = v24;
  v25 = STACK[0x6A10];
  v26 = STACK[0x6548];
  if ((STACK[0x6A10] & 1) != 0)
    v26 = STACK[0x6540];
  v27 = STACK[0x6500];
  if ((v25 & 1) == 0)
    v27 = STACK[0x64F8];
  v28 = STACK[0x64E0];
  if ((v25 & 1) == 0)
    v28 = STACK[0x64D8];
  LODWORD(STACK[0x6890]) = v28;
  v29 = STACK[0x64C8];
  if ((v25 & 1) == 0)
    v29 = STACK[0x64D0];
  v30 = (v25 & 2) == 0;
  v31 = STACK[0x6498];
  if (!v30)
    v31 = STACK[0x6490];
  LODWORD(STACK[0x6550]) = v31;
  v32 = STACK[0x64A8];
  if (v30)
    v32 = STACK[0x64A0];
  LODWORD(STACK[0x6560]) = v32;
  v33 = STACK[0x64C0];
  if (v30)
    v33 = STACK[0x64B0];
  LODWORD(STACK[0x6568]) = v33;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x6558]) ^ 0x4D585870 ^ v16;
  LODWORD(STACK[0x6A80]) = (((LODWORD(STACK[0x6950]) ^ 0x1C738A42) - 2138336528) ^ ((LODWORD(STACK[0x6950]) ^ 0x23A82DE6)
                                                                                  - 1085262516) ^ ((LODWORD(STACK[0x6950]) ^ 0x204B4609)
                                                                                                 - 1129095515))
                         - 1363102277;
  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6900]) ^ 0x12560EFC;
  STACK[0x6A70] = STACK[0xDA68];
  STACK[0x6A60] = STACK[0xDA80];
  LODWORD(STACK[0x6780]) = v26;
  LODWORD(STACK[0x6720]) = v27;
  if (v30)
    v34 = v26;
  else
    v34 = v27;
  LODWORD(STACK[0x6548]) = v34;
  v35 = STACK[0x68A0];
  LODWORD(STACK[0x6540]) = v29;
  if (!v30)
    v35 = v29;
  LODWORD(STACK[0x6558]) = v35;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]))();
}

uint64_t sub_100ACEC18()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  _BOOL4 v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  v2 = STACK[0x6A80];
  v3 = LODWORD(STACK[0x6A80]) < 0x3229AEBC;
  v4 = STACK[0x6AC0];
  v5 = 8 * ((v0 | ((unint64_t)(v0 < v1) << 32)) + 0x79BDC815B64D2FELL) - 0x3CDEE40C840C03D0;
  v6 = *(_QWORD *)(STACK[0x6A70] + v5);
  STACK[0x6A90] = (STACK[0x6AC0] + 1362850142) & 0xAEC47EFE;
  *(_QWORD *)(STACK[0x6A60] + v5) = v6 ^ 0x5555555555555555;
  if (v3 != v0 - 49479359 < 0x3229AEBC)
    v7 = v3;
  else
    v7 = v0 - 49479359 < v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((4793 * !v7) ^ v4)))();
}

uint64_t sub_100AD1884()
{
  BOOL v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t (*v15)(void);
  unint64_t v16;

  v0 = (STACK[0x6A20] & 2) == 0;
  v1 = STACK[0x6A40];
  if ((STACK[0x6A20] & 2) == 0)
    v1 = STACK[0x6A30];
  LODWORD(STACK[0x65E8]) = v1;
  v2 = STACK[0x68D0];
  if (v0)
    v2 = STACK[0x67C0];
  LODWORD(STACK[0x6610]) = v2;
  v3 = STACK[0x6630];
  if (!v0)
    v3 = STACK[0x6628];
  LODWORD(STACK[0x6618]) = v3;
  v4 = STACK[0x6960];
  if (!v0)
    v4 = STACK[0x6920];
  LODWORD(STACK[0x6628]) = v4;
  v5 = STACK[0x6A00];
  if (!v0)
    v5 = STACK[0x69E0];
  LODWORD(STACK[0x6620]) = v5;
  v6 = STACK[0x6910];
  if (v0)
    v6 = STACK[0x6600];
  LODWORD(STACK[0x67C0]) = v6;
  v7 = STACK[0x65F8];
  if (!v0)
    v7 = STACK[0x65E0];
  LODWORD(STACK[0x6630]) = v7;
  v8 = STACK[0x6A10];
  if ((STACK[0x6A10] & 1) != 0)
    v9 = STACK[0x6680];
  else
    v9 = STACK[0x6698];
  v10 = STACK[0x68B0];
  if ((v8 & 2) != 0)
    v10 = STACK[0x66B8];
  LODWORD(STACK[0x64D8]) = v10;
  v11 = STACK[0x68A0];
  if ((v8 & 2) == 0)
    v11 = STACK[0x6540];
  LODWORD(STACK[0x64E0]) = v11;
  LODWORD(STACK[0x68D0]) = v8 ^ 0x4D585870;
  v12 = STACK[0x6890];
  LODWORD(STACK[0x6A70]) = v9;
  if ((v8 & 2) != 0)
    v12 = v9;
  LODWORD(STACK[0x6498]) = v12;
  v13 = STACK[0x69B0];
  if ((v8 & 2) != 0)
    v13 = STACK[0x69A0];
  LODWORD(STACK[0x64A0]) = v13;
  v14 = STACK[0x6AB0];
  v15 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6A90]);
  if (((*(_BYTE *)(v14 + ((*(_BYTE *)(v14 + ((*(_BYTE *)(v14 + (*(_BYTE *)(v14 + 5) & 0xF)) + 4) & 0xF)) + 3) & 0xF))
       + 6) & 0xE) != 0)
    v16 = (*(_BYTE *)(v14 + ((*(_BYTE *)(v14 + ((*(_BYTE *)(v14 + (*(_BYTE *)(v14 + 5) & 0xF)) + 4) & 0xF)) + 3) & 0xF))
         + 6) & 0xF;
  else
    v16 = 1;
  STACK[0x6A40] = v16;
  STACK[0x6A80] = v16 - 1;
  return v15();
}

uint64_t sub_100AD2EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  LODWORD(STACK[0x6AC0]) = a8;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((505 * (STACK[0x6A80] == v8)) ^ STACK[0x6A90])))();
}

uint64_t sub_100AD3F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t (*v17)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD);
  unint64_t v18;
  unint64_t v19;

  v10 = (STACK[0x6A20] & 2) == 0;
  v11 = STACK[0x6A50];
  if ((STACK[0x6A20] & 2) != 0)
    v11 = STACK[0x6990];
  LODWORD(STACK[0x6600]) = v11;
  v12 = STACK[0x6980];
  if (v10)
    v12 = STACK[0x6970];
  LODWORD(STACK[0x65F8]) = v12;
  v13 = STACK[0x67B0];
  if (!v10)
    v13 = STACK[0x65F0];
  LODWORD(STACK[0x67B0]) = v13;
  v14 = (STACK[0x6A10] & 2) == 0;
  v15 = STACK[0x67A0];
  if ((STACK[0x6A10] & 2) == 0)
    v15 = STACK[0x6700];
  LODWORD(STACK[0x6488]) = v15;
  v16 = STACK[0x6890];
  if (v14)
    v16 = STACK[0x6A70];
  LODWORD(STACK[0x6490]) = v16;
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x6940]) ^ 0xF84C7D;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD))(STACK[0x6AD8] + 8 * v6);
  v18 = STACK[0x6AB0];
  v19 = STACK[0x6A40];
  LODWORD(STACK[0x6A30]) = v6;
  return v17(682748189, 458812290, v19, v18, 0, v9 + ((a6 + v7) >> 16) + 1618400814 + v8);
}

uint64_t sub_100AD4128(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  unint64_t v8;
  char v9;
  int v10;
  int v11;
  unint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;

  LODWORD(STACK[0x6A50]) = v10;
  LODWORD(STACK[0x6A80]) = v11;
  LODWORD(STACK[0x6AC0]) = a8;
  STACK[0x6A90] = v8;
  v12 = STACK[0x6A40];
  v13 = -1936804743
      - 1053712475
      * ((*(unsigned __int8 *)(a4 + v12) ^ 0x4EEFDEEF)
       - 2033669014
       + ((*(unsigned __int8 *)(a4 + v12) << (v9 + 110)) & 0x1DE));
  v14 = (v13 ^ 0x6FE1B20A) & (2 * (v13 & 0x4FEA342A)) ^ v13 & 0x4FEA342A;
  v15 = ((2 * (v13 ^ 0x60F1DA5A)) ^ 0x5E37DCE0) & (v13 ^ 0x60F1DA5A) ^ (2 * (v13 ^ 0x60F1DA5A)) & 0x2F1BEE70;
  v16 = v15 ^ 0x21082210;
  v17 = (v15 ^ 0xE11C260) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0xBC6FB9C0) & v16 ^ (4 * v16) & 0x2F1BEE70;
  v19 = (v18 ^ 0x2C0BA850) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x3104630)) ^ 0xF1BEE700) & (v18 ^ 0x3104630) ^ (16 * (v18 ^ 0x3104630)) & 0x2F1BEE70;
  v21 = v19 ^ 0x2F1BEE70 ^ (v20 ^ 0x211AE600) & (v19 << 8);
  v22 = a6 ^ 0x4DFDE8CA ^ v13 ^ (2
                               * ((v21 << 16) & 0x2F1B0000 ^ v21 ^ ((v21 << 16) ^ 0x6E700000) & (((v20 ^ 0xE010870) << 8) & 0x2F1B0000 ^ 0x24110000 ^ (((v20 ^ 0xE010870) << 8) ^ 0x1BEE0000) & (v20 ^ 0xE010870))));
  v23 = (unint64_t)(v22 + a3) >> 16;
  v24 = STACK[0x6A40] + a2 + v22 + v23;
  v25 = ((2 * (v24 ^ 0x23FF81C)) ^ 0xCD31D8C4) & (v24 ^ 0x23FF81C) ^ (2 * (v24 ^ 0x23FF81C)) & 0xE698EC62;
  v26 = (v24 ^ 0xC237D07C) & (2 * (v24 & 0xE4A7147E)) ^ v24 & 0xE4A7147E;
  v27 = ((4 * (v25 ^ 0x22882422)) ^ 0x9A63B188) & (v25 ^ 0x22882422) ^ (4 * (v25 ^ 0x22882422)) & 0xE698EC60;
  v28 = (v27 ^ 0x8200A002) & (16 * ((v25 ^ 0x8410C442) & (4 * v26) ^ v26)) ^ (v25 ^ 0x8410C442) & (4 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x64984C62)) ^ 0x698EC620) & (v27 ^ 0x64984C62) ^ (16 * (v27 ^ 0x64984C62)) & 0xE698EC60;
  v30 = v28 ^ 0xE698EC62 ^ (v29 ^ 0x6088C400) & (v28 << 8);
  v31 = (v24 ^ (2
              * ((v30 << 16) & 0x66980000 ^ v30 ^ ((v30 << 16) ^ 0x6C620000) & (((v29 ^ 0x86102842) << 8) & 0x66980000 ^ 0x66100000 ^ (((v29 ^ 0x86102842) << 8) ^ 0x18EC0000) & (v29 ^ 0x86102842))))) >> 8;
  v32 = STACK[0x6A40]
      + v8
      + v23
      + v22
      - (((v31 ^ 0x28BA62D0) + 972779837) ^ ((v31 ^ 0x8C0ED3E0) - 1655717875) ^ ((v31 ^ 0xA45527FC) - 1256967151));
  LODWORD(STACK[0x6A70]) = v32;
  v33 = (v32 ^ 0x868A2351) & (2 * (v32 & 0xC6932860)) ^ v32 & 0xC6932860;
  v34 = ((2 * (v32 ^ 0xB8A2311)) ^ 0x9A3216E2) & (v32 ^ 0xB8A2311) ^ (2 * (v32 ^ 0xB8A2311)) & 0xCD190B70;
  v35 = ((4 * (v34 ^ 0x45090911)) ^ 0x34642DC4) & (v34 ^ 0x45090911) ^ (4 * (v34 ^ 0x45090911)) & 0xCD190B70;
  v36 = ((16 * (v35 ^ 0xC9190231)) ^ 0xD190B710) & (v35 ^ 0xC9190231) ^ (16 * (v35 ^ 0xC9190231)) & 0xCD190B70;
  v37 = (v35 ^ 0x4000951) & (16 * ((v34 ^ 0x49100A11) & (4 * v33) ^ v33)) ^ (v34 ^ 0x49100A11) & (4 * v33) ^ v33 ^ 0xCD190B71 ^ (v36 ^ 0xC1100361) & (((v35 ^ 0x4000951) & (16 * ((v34 ^ 0x49100A11) & (4 * v33) ^ v33)) ^ (v34 ^ 0x49100A11) & (4 * v33) ^ v33) << 8);
  LODWORD(STACK[0x6A60]) = (v37 << 16) & 0x4D190000 ^ v37 ^ ((v37 << 16) ^ 0xB710000) & (((v36 ^ 0xC090861) << 8) & 0xCD190000 ^ 0x44100000 ^ (((v36 ^ 0xC090861) << 8) ^ 0x190B0000) & (v36 ^ 0xC090861));
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                               + 8
                                                                               * ((93 * (v12 + a5 == 15)) ^ LODWORD(STACK[0x6A30]))))(a1 + 1, a2 + 1, (a3 + 1), a4 + 1, a5 + 1);
}

uint64_t sub_100AD5568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;

  v11 = v8 + 6953;
  v12 = (STACK[0x6A20] & 2) == 0;
  v13 = STACK[0x66F8];
  if ((STACK[0x6A20] & 2) != 0)
    v13 = STACK[0x66F0];
  LODWORD(STACK[0x67A0]) = v13;
  v14 = STACK[0x69D0];
  if (!v12)
    v14 = STACK[0x69C0];
  LODWORD(STACK[0x6480]) = v14;
  v15 = STACK[0x69B0];
  if ((STACK[0x6A10] & 2) == 0)
    v15 = STACK[0x69A0];
  LODWORD(STACK[0x6478]) = v15;
  v16 = (((a6 ^ 0x8D7706D1) - ((a6 ^ 0x8D7706D1) >> 9)) ^ 0xFFECC00F)
      + 1184364070
      + ((2 * ((a6 ^ 0x8D7706D1) - ((a6 ^ 0x8D7706D1) >> 9))) & 0xFFD9801E)
      + 2516;
  v17 = (v16 ^ 0xB0733FE6) & (2 * (v16 & 0xB97B3FF7)) ^ v16 & 0xB97B3FF7;
  v18 = ((2 * (v16 ^ 0xC0473160)) ^ 0xF2781D2E) & (v16 ^ 0xC0473160) ^ (2 * (v16 ^ 0xC0473160)) & 0x793C0E96;
  v19 = v18 ^ 0x9040291;
  v20 = (v18 ^ 0x60380C05) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0xE4F03A5C) & v19 ^ (4 * v19) & 0x793C0E94;
  v22 = (v21 ^ 0x60300A10) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x190C0483)) ^ 0x93C0E970) & (v21 ^ 0x190C0483) ^ (16 * (v21 ^ 0x190C0483)) & 0x793C0E90;
  v24 = v22 ^ 0x793C0E97 ^ (v23 ^ 0x11000887) & (v22 << 8);
  v25 = (v16 ^ (2
              * ((v24 << 16) & 0x793C0000 ^ v24 ^ ((v24 << 16) ^ 0xE970000) & (((v23 ^ 0x683C0687) << 8) & 0x793C0000 ^ 0x41300000 ^ (((v23 ^ 0x683C0687) << 8) ^ 0x3C0E0000) & (v23 ^ 0x683C0687))))) >> 7;
  v26 = (((a6 ^ 0x8D7706D1) - ((a6 ^ 0x8D7706D1) >> 9)) ^ 0xFFECC00F)
      + 1184364070
      + ((2 * ((a6 ^ 0x8D7706D1) - ((a6 ^ 0x8D7706D1) >> 9))) & 0xFFD9801E)
      + 1816081642
      + (((v25 ^ 0x23CF5A15) - 1672186489) ^ ((v25 ^ 0x6F709036) - 789856346) ^ ((v25 ^ 0x4C099C66) - 208489482));
  v27 = (2 * (v26 & 0x8E0E9B0A ^ 0x12556411)) & 0x10152410 ^ v26 & 0x8E0E9B0A ^ 0x12556411 ^ ((2
                                                                                             * (v26 & 0x8E0E9B0A ^ 0x12556411)) ^ 0x24AAC822) & (v26 ^ 0x9C5BFF1B);
  v28 = (2 * (v26 ^ 0x9C5BFF1B)) & 0x12556410 ^ 0x12552411 ^ ((2 * (v26 ^ 0x9C5BFF1B)) ^ 0x24AAC822) & (v26 ^ 0x9C5BFF1B);
  v29 = (4 * v27) & 0x12556410 ^ v27 ^ ((4 * v27) ^ 0x49559044) & v28;
  v30 = (4 * v28) & 0x12556410 ^ 0x12006411 ^ ((4 * v28) ^ 0x49559044) & v28;
  v31 = v29 ^ 0x514010 ^ (16 * v29) & 0x12556410 ^ ((16 * v29) ^ 0x20064110) & v30;
  v32 = (16 * v30) & 0x12556410 ^ 0x12012401 ^ ((16 * v30) ^ 0x25564110) & v30;
  v33 = (v31 << 8) & 0x12556400 ^ v31 ^ ((v31 << 8) ^ 0x55641100) & v32;
  v34 = v26 ^ (2
             * ((v33 << 16) & 0x12550000 ^ v33 ^ ((v33 << 16) ^ 0x64110000) & ((v32 << 8) & 0x12550000 ^ 0x2110000 ^ ((v32 << 8) ^ 0x55640000) & v32)));
  v35 = ((v34 ^ 0xE309195C) + 520817722) ^ ((v34 ^ 0x450048CA) - 1191027280) ^ ((v34 ^ 0x2C0702BE) - 804972580);
  v36 = ((v35 + 863264746) ^ 0x54EDAC14) & (2 * ((v35 + 863264746) & 0x96CD2C98)) ^ (v35 + 863264746) & 0x96CD2C98;
  v37 = ((2 * ((v35 + 863264746) ^ 0x5877A424)) ^ 0x9D751178) & ((v35 + 863264746) ^ 0x5877A424) ^ (2
                                                                                                  * ((v35 + 863264746) ^ 0x5877A424)) & 0xCEBA88BC;
  v38 = v37 ^ 0x428A8884;
  v39 = (v37 ^ 0x8CB20824) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0x3AEA22F0) & v38 ^ (4 * v38) & 0xCEBA88BC;
  v41 = (v40 ^ 0xAAA00AC) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0xC410880C)) ^ 0xEBA88BC0) & (v40 ^ 0xC410880C) ^ (16 * (v40 ^ 0xC410880C)) & 0xCEBA88B0;
  v43 = v41 ^ 0xCEBA88BC ^ (v42 ^ 0xCAA88800) & (v41 << 8);
  v44 = v34 ^ v10;
  v45 = v35
      - 901673854
      + ((((v35 + 863264746) ^ (2
                              * ((v43 << 16) & 0x4EBA0000 ^ v43 ^ ((v43 << 16) ^ 0x8BC0000) & (((v42 ^ 0x412003C) << 8) & 0x4EBA0000 ^ 0x44320000 ^ (((v42 ^ 0x412003C) << 8) ^ 0x3A880000) & (v42 ^ 0x412003C))))) >> 10) ^ 0x6B20F);
  v46 = v45 - (v45 >> 1) - 103738462 - ((2 * (v45 - (v45 >> 1))) & 0xF3A22744);
  v47 = ((v46 ^ 0xB276CDA7) + 1300836953) ^ ((v46 ^ 0xD340ABC4) + 750736444) ^ ((v46 ^ 0x98E775C1) + 1729661503);
  v48 = v47 + ((v47 + 1127229948) >> 13) + 2034464748;
  v49 = (v48 ^ 0xE5CE394A) & (2 * (v48 & 0xC9ECB210)) ^ v48 & 0xC9ECB210;
  v50 = ((2 * (v48 ^ 0xF4D7194A)) ^ 0x7A7756B4) & (v48 ^ 0xF4D7194A) ^ (2 * (v48 ^ 0xF4D7194A)) & 0x3D3BAB5A;
  v51 = v50 ^ 0x508A94A;
  v52 = (v50 ^ 0x28330000) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xF4EEAD68) & v51 ^ (4 * v51) & 0x3D3BAB58;
  v54 = (v53 ^ 0x342AA940) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x9110212)) ^ 0xD3BAB5A0) & (v53 ^ 0x9110212) ^ (16 * (v53 ^ 0x9110212)) & 0x3D3BAB50;
  v56 = v54 ^ 0x3D3BAB5A ^ (v55 ^ 0x113AA100) & (v54 << 8);
  v57 = (v48 ^ (2
              * ((v56 << 16) & 0x3D3B0000 ^ v56 ^ ((v56 << 16) ^ 0x2B5A0000) & (((v55 ^ 0x2C010A5A) << 8) & 0x3D3B0000 ^ 0x4100000 ^ (((v55 ^ 0x2C010A5A) << 8) ^ 0x3BAB0000) & (v55 ^ 0x2C010A5A))))) >> 3;
  v58 = v48
      - 638292476
      + (((v57 ^ 0xF8FD787) + 898373641) ^ ((v57 ^ 0x4DD48BE6) + 2010596458) ^ ((v57 ^ 0x5E6EA0F5) + 1684893563))
      + 3692;
  v59 = (2 * (v58 & 0xC9C20284 ^ 0x650B9D0B)) & 0x41000508 ^ v58 & 0xC9C20284 ^ 0x650B9D0B ^ ((2
                                                                                             * (v58 & 0xC9C20284 ^ 0x650B9D0B)) ^ 0xCA173A16) & (v58 ^ 0xACC99F8F);
  v60 = (2 * (v58 ^ 0xACC99F8F)) & 0x650B9D0A ^ 0x25088509 ^ ((2 * (v58 ^ 0xACC99F8F)) ^ 0xCA173A16) & (v58 ^ 0xACC99F8F);
  v61 = (4 * v59) & 0x650B9D08 ^ v59 ^ ((4 * v59) ^ 0x942E742C) & v60;
  v62 = (4 * v60) & 0x650B9D08 ^ 0x61018903 ^ ((4 * v60) ^ 0x942E742C) & v60;
  v63 = (16 * v61) & 0x650B9D00 ^ v61 ^ ((16 * v61) ^ 0x10189030) & v62;
  v64 = (16 * v62) & 0x650B9D00 ^ 0x25020D0B ^ ((16 * v62) ^ 0x50B9D0B0) & v62;
  v65 = v63 ^ (v63 << 8) & 0x650B9D00 ^ ((v63 << 8) ^ 0x9190300) & v64 ^ 0x450B8508;
  v66 = v58 ^ (2
             * ((v65 << 16) & 0x650B0000 ^ v65 ^ ((v65 << 16) ^ 0x1D0B0000) & ((v64 << 8) & 0x650B0000 ^ 0x64020000 ^ ((v64 << 8) ^ 0xB9D0000) & v64)));
  v67 = ((v66 ^ 0x36ACBD6E) + 1067726469) ^ ((v66 ^ 0x48EFC16) + 226916349) ^ ((v66 ^ 0x3BE179EA) + 854192641);
  v68 = ((v67 - 173390234) ^ 0x95BE8BDF) & (2 * ((v67 - 173390234) & 0xA5BCCB1E)) ^ (v67 - 173390234) & 0xA5BCCB1E;
  v69 = ((2 * ((v67 - 173390234) ^ 0x97BE8BE7)) ^ 0x640481F2) & ((v67 - 173390234) ^ 0x97BE8BE7) ^ (2
                                                                                                  * ((v67 - 173390234) ^ 0x97BE8BE7)) & 0x320240F8;
  v70 = v69 ^ 0x12024009;
  v71 = (v69 ^ 0x200000F1) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0xC80903E4) & v70 ^ (4 * v70) & 0x320240F8;
  v73 = (v72 ^ 0xE0) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x32024019)) ^ 0x20240F90) & (v72 ^ 0x32024019) ^ (16 * (v72 ^ 0x32024019)) & 0x320240F0;
  v75 = v73 ^ 0x320240F9 ^ (v74 ^ 0x20000069) & (v73 << 8);
  v76 = v67
      - 1687744124
      + ((((v67 - 173390234) ^ (2
                              * ((v75 << 16) & 0x32020000 ^ v75 ^ ((v75 << 16) ^ 0x40F90000) & (((v74 ^ 0x12024069) << 8) & 0x32020000 ^ 0x30020000 ^ (((v74 ^ 0x12024069) << 8) ^ 0x2400000) & (v74 ^ 0x12024069u))))) >> 11) ^ 0x183709);
  v77 = v76 + (v76 >> 1) - ((2 * (v76 + (v76 >> 1))) & 0x8FF50F38) + 1207601052;
  v78 = v44 ^ v77;
  v79 = (v77 ^ 0x72E454BF) - ((v77 ^ 0x72E454BF) >> 12) - (((v77 ^ 0x72E454BF) - ((v77 ^ 0x72E454BF) >> 12)) >> 6);
  v80 = (((v79 ^ 0x33A1D600) - ((v79 ^ 0x33A1D600) >> 9)) ^ 0x4DFBDF62)
      - 134350592
      + ((2 * ((v79 ^ 0x33A1D600) - ((v79 ^ 0x33A1D600) >> 9))) & 0x9BF7BEC4);
  v81 = (v80 ^ 0x399497DD) & (2 * (v80 & 0xBA06279E)) ^ v80 & 0xBA06279E;
  v82 = ((2 * (v80 ^ 0x5D9496C5)) ^ 0xCF2562B6) & (v80 ^ 0x5D9496C5) ^ (2 * (v80 ^ 0x5D9496C5)) & 0xE792B15A;
  v83 = v82 ^ 0x20929149;
  v84 = (v82 ^ 0xC0002010) & (4 * v81) ^ v81;
  v85 = ((4 * v83) ^ 0x9E4AC56C) & v83 ^ (4 * v83) & 0xE792B158;
  v86 = (v85 ^ 0x86028140) & (16 * v84) ^ v84;
  v87 = ((16 * (v85 ^ 0x61903013)) ^ 0x792B15B0) & (v85 ^ 0x61903013) ^ (16 * (v85 ^ 0x61903013)) & 0xE792B150;
  v88 = v86 ^ 0xE792B15B ^ (v87 ^ 0x6102114B) & (v86 << 8);
  v89 = (v80 ^ (2
              * ((v88 << 16) & 0x67920000 ^ v88 ^ ((v88 << 16) ^ 0x315B0000) & (((v87 ^ 0x8690A04B) << 8) & 0x67920000 ^ 0x65020000 ^ (((v87 ^ 0x8690A04B) << 8) ^ 0x12B10000) & (v87 ^ 0x8690A04B))))) >> 6;
  v90 = v80
      - 919724676
      + (((v89 ^ 0x93A20680) + 205652198) ^ ((v89 ^ 0x469CA57B) - 646143201) ^ ((v89 ^ 0xD5E2BEEF) + 1241692299));
  v91 = (v90 ^ 0x5113EC2D) & (2 * (v90 & 0x519BEEB0)) ^ v90 & 0x519BEEB0;
  v92 = ((2 * (v90 ^ 0xD130302D)) ^ 0x157BD3A) & (v90 ^ 0xD130302D) ^ (2 * (v90 ^ 0xD130302D)) & 0x80ABDE9C;
  v93 = v92 ^ 0x80A84285;
  v94 = (v92 ^ 0x39C05) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0x2AF7A74) & v93 ^ (4 * v93) & 0x80ABDE9C;
  v96 = (v95 ^ 0xAB5A09) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x80008489)) ^ 0xABDE9D0) & (v95 ^ 0x80008489) ^ (16 * (v95 ^ 0x80008489)) & 0x80ABDE90;
  v98 = v96 ^ 0x80ABDE9D ^ (v97 ^ 0xA9C80D) & (v96 << 8);
  v99 = v90 ^ (2
             * ((v98 << 16) & 0xAB0000 ^ v98 ^ ((v98 << 16) ^ 0x5E9D0000) & (((v97 ^ 0x8002160D) << 8) & 0xAB0000 ^ 0x210000 ^ (((v97 ^ 0x8002160D) << 8) ^ 0x2BDE0000) & (v97 ^ 0x8002160D))));
  v100 = (v99 ^ 0x7B656D7E) + ((v99 >> 10) ^ 0xFFE126A4) + 1;
  v101 = (v99 ^ 0x7B656D7E)
       + ((v99 >> 10) ^ 0xFFE126A4)
       + 680893782
       + ((((v100 >> 2) ^ 0x824933A4) + 1661125740) ^ (((v100 >> 2) ^ 0xAF523E95) + 1310312795) ^ (((v100 >> 2) ^ 0x2D1B0D31)
                                                                                                 - 867108097));
  v102 = (v101 ^ 0xE71C6293) & (2 * (v101 & 0xF61E6ADB)) ^ v101 & 0xF61E6ADB;
  v103 = ((2 * (v101 ^ 0x7303633)) ^ 0xE25CB9D0) & (v101 ^ 0x7303633) ^ (2 * (v101 ^ 0x7303633)) & 0xF12E5CE8;
  v104 = v103 ^ 0x11224428;
  v105 = (v103 ^ 0xE00818C0) & (4 * v102) ^ v102;
  v106 = ((4 * v104) ^ 0xC4B973A0) & v104 ^ (4 * v104) & 0xF12E5CE8;
  v107 = (v106 ^ 0xC02850A0) & (16 * v105) ^ v105;
  v108 = ((16 * (v106 ^ 0x31060C48)) ^ 0x12E5CE80) & (v106 ^ 0x31060C48) ^ (16 * (v106 ^ 0x31060C48)) & 0xF12E5CE0;
  v109 = v107 ^ 0xF12E5CE8 ^ (v108 ^ 0x10244C68) & (v107 << 8);
  v110 = v101 ^ (2
               * ((v109 << 16) & 0x712E0000 ^ v109 ^ ((v109 << 16) ^ 0x5CE80000) & (((v108 ^ 0xE10A1068) << 8) & 0x712E0000 ^ 0x51220000 ^ (((v108 ^ 0xE10A1068) << 8) ^ 0x2E5C0000) & (v108 ^ 0xE10A1068))));
  v111 = ((v110 ^ 0x1851C6BF) + 1164045360) ^ ((v110 ^ 0xE94518C0) - 1267387823) ^ ((v110 ^ 0x45060D74) + 406202341);
  v112 = ((v111 - 276249965) ^ 0xE58CC60B) & (2 * ((v111 - 276249965) & 0xF5CCD752)) ^ (v111 - 276249965) & 0xF5CCD752;
  v113 = ((2 * ((v111 - 276249965) ^ 0x4E8D44AB)) ^ 0x768327F2) & ((v111 - 276249965) ^ 0x4E8D44AB) ^ (2 * ((v111 - 276249965) ^ 0x4E8D44AB)) & 0xBB4193F8;
  v114 = v113 ^ 0x89409009;
  v115 = (v113 ^ 0x320103D1) & (4 * v112) ^ v112;
  v116 = ((4 * v114) ^ 0xED064FE4) & v114 ^ (4 * v114) & 0xBB4193F8;
  v117 = (v116 ^ 0xA90003F9) & (16 * v115) ^ v115;
  v118 = ((16 * (v116 ^ 0x12419019)) ^ 0xB4193F90) & (v116 ^ 0x12419019) ^ (16 * (v116 ^ 0x12419019)) & 0xBB4193F0;
  v119 = v117 ^ 0xBB4193F9 ^ (v118 ^ 0xB0011300) & (v117 << 8);
  v120 = v111
       - 447374874
       + ((((v111 - 276249965) ^ (2
                                * ((v119 << 16) & 0x3B410000 ^ v119 ^ ((v119 << 16) ^ 0x13F90000) & (((v118 ^ 0xB408069) << 8) & 0xBB410000 ^ 0x3A400000 ^ (((v118 ^ 0xB408069) << 8) ^ 0x41930000) & (v118 ^ 0xB408069))))) >> 12) ^ 0xFFF5A320);
  v121 = v78 ^ v110;
  v122 = v120 + (v120 >> 5);
  v123 = (v122 ^ 0x5817FD78) + ((v122 ^ 0x5817FD78) >> 12);
  v124 = ((v123 + 395027803) ^ 0xCC755014) & (2 * ((v123 + 395027803) & 0xE8745AA5)) ^ (v123 + 395027803) & 0xE8745AA5;
  v125 = ((2 * ((v123 + 395027803) ^ 0xCC75655C)) ^ 0x48027FF2) & ((v123 + 395027803) ^ 0xCC75655C) ^ (2 * ((v123 + 395027803) ^ 0xCC75655C)) & 0x24013FF8;
  v126 = v125 ^ 0x24010009;
  v127 = (v125 ^ 0x4003FB1) & (4 * v124) ^ v124;
  v128 = ((4 * v126) ^ 0x9004FFE4) & v126 ^ (4 * v126) & 0x24013FF8;
  v129 = (v128 ^ 0x3FE0) & (16 * v127) ^ v127;
  v130 = ((16 * (v128 ^ 0x24010019)) ^ 0x4013FF90) & (v128 ^ 0x24010019) ^ (16 * (v128 ^ 0x24010019)) & 0x24013FF0;
  v131 = v129 ^ 0x24013FF9 ^ (v130 ^ 0x13F69) & (v129 << 8);
  v132 = ((v123 + 395027803) ^ (2
                              * ((v131 << 16) & 0x24010000 ^ v131 ^ ((v131 << 16) ^ 0x3FF90000) & (((v130 ^ 0x24000069) << 8) & 0x24010000 ^ 0x24000000 ^ (((v130 ^ 0x24000069) << 8) ^ 0x13F0000) & (v130 ^ 0x24000069))))) >> 5;
  v133 = v123
       - (((v132 ^ 0x30E9782C) - 294649056) ^ ((v132 ^ 0x9926C5E9) + 1203748571) ^ ((v132 ^ 0xAE8C1CEF) + 1880451037))
       + 186691295;
  v134 = (v133 ^ 0xAC388332) & (2 * (v133 & 0xCEBA2B3B)) ^ v133 & 0xCEBA2B3B;
  v135 = ((2 * (v133 ^ 0xA02CD720)) ^ 0xDD2DF836) & (v133 ^ 0xA02CD720) ^ (2 * (v133 ^ 0xA02CD720)) & 0x6E96FC1A;
  v136 = v135 ^ 0x22920409;
  v137 = (v135 ^ 0x4C02F811) & (4 * v134) ^ v134;
  v138 = ((4 * v136) ^ 0xBA5BF06C) & v136 ^ (4 * v136) & 0x6E96FC18;
  v139 = (v138 ^ 0x2A12F000) & (16 * v137) ^ v137;
  v140 = ((16 * (v138 ^ 0x44840C13)) ^ 0xE96FC1B0) & (v138 ^ 0x44840C13) ^ (16 * (v138 ^ 0x44840C13)) & 0x6E96FC10;
  v141 = v139 ^ 0x6E96FC1B ^ (v140 ^ 0x6806C00B) & (v139 << 8);
  v142 = v46 ^ a8 ^ (v79 - 390203264 + ~((2 * v79) & 0xD17BF0FE)) ^ v122;
  v143 = v66 ^ v9 ^ v99 ^ v133 ^ (2
                                * ((v141 << 16) & 0x6E960000 ^ v141 ^ ((v141 << 16) ^ 0x7C1B0000) & (((v140 ^ 0x6903C0B) << 8) & 0x6E960000 ^ 0x68020000 ^ (((v140 ^ 0x6903C0B) << 8) ^ 0x16FC0000) & (v140 ^ 0x6903C0B))));
  v144 = (v121 & 0xFE ^ 0x80C438A8) + (v121 & 0xF6 ^ 0x5A13C157) - ((v121 & 0xFE ^ 0x80C438A8) & 0x800428F6);
  LODWORD(STACK[0x6A40]) = 16843009
                         * (((v144 ^ 0x6A325CAB) + 1153850241) ^ ((v144 ^ 0x2D8CE7B8) + 58253460) ^ ((v144 ^ 0x1D6D6A7E) + 865693014));
  LODWORD(STACK[0x65E0]) = (v121 & 0xFFFFFF01 ^ 0x85BDD201 | 0x620888DF) - (v121 & 0xFFFFFF01 ^ 0x85BDD201 | 0x9DF77720);
  v145 = (v143 ^ ((v143 ^ 0xA3B6C7B) + 3) ^ ((v143 ^ 0xD0A1FAD9) + 1) ^ 6) + 3;
  LODWORD(STACK[0x66F0]) = v143 & 7;
  v146 = v143 & 7 ^ 3;
  LODWORD(STACK[0x65F0]) = v145;
  v147 = v145 & 7;
  LODWORD(STACK[0x6910]) = v143;
  v148 = (v143 & 0xFFFFFFF8 ^ 0x97C5EF08)
       + (v143 & 0x9E7FD028 ^ 0x83A1020)
       - ((v143 & 0xFFFFFFF8 ^ 0x97C5EF08) & 0x9E7FD028);
  LODWORD(STACK[0x6700]) = v146;
  if (v146)
    v149 = 255;
  else
    v149 = 0;
  LODWORD(STACK[0x66F8]) = v147;
  v150 = v149 << v147;
  LODWORD(STACK[0x6A30]) = v148 ^ 0x740C5CAB;
  LODWORD(STACK[0x6A50]) = (2 * (v148 ^ 0x740C5CAB)) & 0xD729A264;
  v151 = v150;
  v152 = 16843009 * v150;
  LODWORD(STACK[0x69D0]) = -117440512 * v150;
  v153 = v150 ^ 0xC127B762;
  if (!v146)
    v153 = 1054361757;
  v154 = v153 & 0xF2 ^ 0xB3 ^ (v153 ^ 0x9D) & (v121 ^ 0x5B);
  LODWORD(STACK[0x6A60]) = v152;
  LODWORD(STACK[0x6680]) = ((((v154 | 0x2001938D) - (v154 | 0xDFFE6C72) - 536974222) & 0x3A44D28B ^ 0x3A005203)
                          + (((v154 | 0x2001938D) - (v154 | 0xDFFE6C72) - 536974222) ^ 0x64818C)
                          - ((((v154 | 0x2001938D) - (v154 | 0xDFFE6C72) - 536974222) ^ 0x64818C) & 0x3A44D28B)) ^ (v152 - ((33686018 * v151) & 0x213BD5E0) - 1868698896);
  LODWORD(STACK[0x68B0]) = v121;
  v155 = v121 ^ 0x1D ^ BYTE1(v121) ^ ((v121 ^ 0xE95A21DuLL) >> ((((v121 ^ 0x94CC291D) >> 16) ^ 0x59) & 0x18) >> ((((v121 ^ 0x94CC291D) >> 16) ^ 0x59) & 0x18 ^ 0x18)) ^ ((((v121 ^ 0x94CC291D) >> 16) ^ 0x59) - ((2 * (((v121 ^ 0x94CC291D) >> 16) ^ 0x59)) & 0x16) - 117) ^ 0x1022847D;
  v156 = 16843009 * ((((2 * v155) | 0x75C05A50) - v155 + 1159713496) ^ 0xAAC2A997) + 430030330;
  v157 = (v156 ^ 0xD55C1074) & (2 * (v156 & 0xE65E4206)) ^ v156 & 0xE65E4206;
  v158 = ((2 * (v156 ^ 0x55E01470)) ^ 0x677CACEC) & (v156 ^ 0x55E01470) ^ (2 * (v156 ^ 0x55E01470)) & 0xB3BE5676;
  v159 = v158 ^ 0x90825212;
  v160 = (v158 ^ 0x23380020) & (4 * v157) ^ v157;
  v161 = ((4 * v159) ^ 0xCEF959D8) & v159 ^ (4 * v159) & 0xB3BE5674;
  v162 = (v161 ^ 0x82B85040) & (16 * v160) ^ v160;
  v163 = ((16 * (v161 ^ 0x31060626)) ^ 0x3BE56760) & (v161 ^ 0x31060626) ^ (16 * (v161 ^ 0x31060626)) & 0xB3BE5670;
  v164 = v162 ^ 0xB3BE5676 ^ (v163 ^ 0x33A44600) & (v162 << 8);
  v165 = v156 ^ (2
               * ((v164 << 16) & 0x33BE0000 ^ v164 ^ ((v164 << 16) ^ 0x56760000) & (((v163 ^ 0x801A1016) << 8) & 0xB3BE0000 ^ 0x1A80000 ^ (((v163 ^ 0x801A1016) << 8) ^ 0x3E560000) & (v163 ^ 0x801A1016))));
  LODWORD(STACK[0x6920]) = v142;
  v166 = ((v142 ^ 0xD6306B) >> 16) ^ HIBYTE(v142) ^ v142 ^ 0x6B ^ ((unsigned __int16)(v142 ^ 0x306B) >> 8) ^ 0x92;
  LODWORD(STACK[0x69C0]) = 16843009 * v166;
  LODWORD(STACK[0x6470]) = v165;
  LODWORD(STACK[0x6890]) = v165 ^ (16843009 * v166 - ((33686018 * v166) & 0xF6502988) + 2066224324);
  v167 = STACK[0x68C0];
  v168 = STACK[0xDA80];
  v169 = *(_QWORD *)(STACK[0xDA80] + 8 * (0x4EA83B79 % STACK[0x68C0]));
  v170 = *(_QWORD *)(STACK[0xDA80]
                   + 8
                   * (((((v169 ^ 0x9C378DC1C0E2ED3CLL) + 0x2EBB14C60909D26BLL) ^ ((v169 ^ 0x95C45BF325BB8068)
                                                                                + 0x2748C2F4EC50BF3FLL) ^ ((v169 ^ 0x5CA68367B00C3801) - 0x11D5E59F8618F8A8))
                     + 0x182633AE53BF6010)
                    % STACK[0x68C0]));
  v171 = *(_QWORD *)(STACK[0xDA80]
                   + 8
                   * (((((v170 ^ 0x29161DD9A5DF06C2) + 0x6D9EF5D422F3B705) ^ ((v170 ^ 0xE2D074058530BD61)
                                                                                - 0x59A763F7FDE3F358) ^ ((v170 ^ 0x9E933C8975BAEEF6) - 0x25E42B7B0D69A0CFLL))
                     - 0x11DDBD57D5C82CFCLL)
                    % STACK[0x68C0]));
  STACK[0x6A90] = STACK[0xDA80];
  v172 = *(_QWORD *)(v168
                   + 8
                   * (((((v171 ^ 0x76DE49C5402579A3) + 0x7B8CFF12C7FD3FF8) ^ ((v171 ^ 0xA1E0E30F36C4C780)
                                                                                - 0x534DAA274EE37E2BLL) ^ ((v171 ^ 0x826BFF9F23B4EB76) - 0x70C6B6B75B9352DDLL))
                     - 0x5807E38228CA6505)
                    % v167));
  LODWORD(v172) = ((((v172 ^ 0x6BE94AF4E14695B1) + 0x37DA569DF380561CLL) ^ ((v172 ^ 0x2215748B5B004D69)
                                                                            + 0x7E2668E249C68EC4) ^ ((v172 ^ 0x1CA96B2AEF138D8DuLL) + 0x409A7743FDD54E28))
                 - 0x966493BE08C76FBLL)
                % v167;
  LODWORD(v168) = (((v172 - ((2 * v172) & 0x12B0DCF8) + 1767403132) ^ 0x1C6967A7) + 1984314852) ^ (((v172 - ((2 * v172) & 0x12B0DCF8) + 1767403132) ^ 0x5FF99EBD)
                                                                                                 + 903267578) ^ (((v172 - ((2 * v172) & 0x12B0DCF8) + 1767403132) ^ 0x2AC89766) + 1088933155);
  LODWORD(STACK[0x6A80]) = v168;
  LODWORD(STACK[0x6A70]) = v168 + 436267009;
  v173 = STACK[0x6AD8];
  LODWORD(STACK[0x6AC0]) = v11;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v173 + 8 * v11) - 8))(919439257);
}

uint64_t sub_100AD73CC()
{
  int v0;
  _BOOL4 v1;

  if (LODWORD(STACK[0x6A80]) < 0x3773439 != (v0 - 425028446) < 0x1D781C3A)
    v1 = LODWORD(STACK[0x6A80]) < 0x3773439;
  else
    v1 = (v0 - 425028446) < LODWORD(STACK[0x6A70]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25708 * !v1) ^ LODWORD(STACK[0x6AC0])))
                                          - 8))(919439257);
}

uint64_t sub_100ADA3B8()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x69F0];
  if ((STACK[0x6A20] & 2) == 0)
    v1 = STACK[0x6790];
  LODWORD(STACK[0x6458]) = v1;
  v2 = STACK[0x6780];
  if ((STACK[0x6A10] & 2) == 0)
    v2 = STACK[0x6720];
  LODWORD(STACK[0x6460]) = v2;
  LODWORD(STACK[0x6720]) = LODWORD(STACK[0x68B0]) ^ 0xC91B882E;
  LODWORD(STACK[0x6540]) = LODWORD(STACK[0x6A40]) + 1186652857;
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6A30]) - 342568650;
  LODWORD(STACK[0x6A70]) = STACK[0x69D0] & LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x66B8]) = LODWORD(STACK[0x6680]) ^ 0x8ABC2A59;
  LODWORD(STACK[0x6468]) = LODWORD(STACK[0x69C0]) ^ 0x92929292;
  STACK[0x6A90] = STACK[0xDA80];
  LODWORD(STACK[0x6A80]) = (((LODWORD(STACK[0x6950]) ^ 0x8F41F087) + 330950699) ^ ((LODWORD(STACK[0x6950]) ^ 0xA8F25424)
                                                                                 + 873090186) ^ ((LODWORD(STACK[0x6950]) ^ 0x3823450E)
                                                                                               - 1529127516))
                         - 2009553519;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100ADA5D4()
{
  unsigned int v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = STACK[0x6A80];
  v4 = LODWORD(STACK[0x6A80]) < v0;
  STACK[0x6AC0] = 35 * (v1 ^ 0x3CB2u);
  if (v4 != (v2 - 724297990) < 0xBA19E92)
    v5 = v4;
  else
    v5 = v2 - 724297990 < v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23 * !v5) ^ v1)) - 8))(919439257);
}

uint64_t sub_100ADD2A0()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v0 = STACK[0x6A00];
  if ((STACK[0x6A20] & 2) == 0)
    v0 = STACK[0x69E0];
  LODWORD(STACK[0x6790]) = v0;
  LODWORD(STACK[0x64F8]) = LODWORD(STACK[0x6A40]) - LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6910]) ^ 0x2430AD24;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x6890]) ^ 0xA71F8357;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 13) + 5) & 0xF)) + 7) & 0xF))
                    + 4) & 0xF))
       + 1) & 0xE) != 0)
    v1 = (*(_BYTE *)(STACK[0x6AB0]
                   + ((*(_BYTE *)(STACK[0x6AB0]
                                + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 13) + 5) & 0xF)) + 7) & 0xF))
                     + 4) & 0xF))
        + 1) & 0xF;
  else
    v1 = 1;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 12);
  STACK[0x6A80] = v1 - 1;
  return v2();
}

uint64_t sub_100ADFB80()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0x6A90]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((238 * (STACK[0x6A80] == v0)) ^ STACK[0x6AC0]))
                            - 12))();
}

uint64_t sub_100AE11B0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (v0 + 1767213045) & 0x96AA77FE;
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x6930]) ^ 0xCB39EB2C;
  LODWORD(STACK[0x64D0]) = LODWORD(STACK[0x6A60]) ^ ~LODWORD(STACK[0x6A70]);
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  STACK[0x6AC0] = v1;
  STACK[0x6A80] = -1486542354;
  STACK[0x6A70] = 1932558809;
  STACK[0x6A60] = 674104456;
  return ((uint64_t (*)(uint64_t))(v2 - (v1 ^ 0x33DC)))(1453212506);
}

uint64_t sub_100AE12D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X3>, int a3@<W5>, unint64_t a4@<X6>, int a5@<W7>, int a6@<W8>)
{
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unint64_t v70;
  unint64_t v72;
  uint64_t v73;

  LODWORD(STACK[0x69A0]) = a5;
  LODWORD(STACK[0x69E0]) = a3;
  STACK[0x69F0] = v15;
  STACK[0x6A00] = v10;
  STACK[0x6A10] = a2;
  STACK[0x6A20] = v13;
  STACK[0x6A30] = v6;
  STACK[0x6A40] = a4;
  STACK[0x6A50] = v11;
  v16 = (STACK[0x6AC0] + 1195153897) & 0xB8C37FEF;
  v17 = *(unsigned __int8 *)(v8 + v9);
  LODWORD(STACK[0x6A90]) = v16;
  v18 = (v16 + (v17 ^ 0xADEBD7B9) + ((2 * v17) & 0x172) + 777302640) * v7 + 1879375105;
  v19 = ((2 * (v18 ^ 0x970717E0)) ^ 0x7259D7E2) & (v18 ^ 0x970717E0) ^ (2 * (v18 ^ 0x970717E0)) & 0x392CEBF0;
  v20 = v19 ^ 0x9242811;
  v21 = (v18 ^ 0x8F03FFC0) & (2 * (v18 & 0xAE2BFC11)) ^ v18 & 0xAE2BFC11;
  v22 = (v19 ^ 0x3008C8D1) & (4 * v21) ^ v21;
  v23 = ((4 * v20) ^ 0xE4B3AFC4) & v20 ^ (4 * v20) & 0x392CEBF0;
  v24 = (v23 ^ 0x2020ABC1) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x190C4031)) ^ 0x92CEBF10) & (v23 ^ 0x190C4031) ^ (16 * (v23 ^ 0x190C4031)) & 0x392CEBF0;
  v26 = a6 ^ 0x8E322BF3 ^ v18 ^ (2
                               * (((v24 ^ 0x392CEBF1 ^ (v25 ^ 0x100CAB00) & (v24 << 8)) << 16) & 0x392C0000 ^ v24 ^ 0x392CEBF1 ^ (v25 ^ 0x100CAB00) & (v24 << 8) ^ (((v24 ^ 0x392CEBF1 ^ (v25 ^ 0x100CAB00) & (v24 << 8)) << 16) ^ 0x6BF10000) & (((v25 ^ 0x292040E1) << 8) & 0x392C0000 ^ 0x11040000 ^ (((v25 ^ 0x292040E1) << 8) ^ 0x2CEB0000) & (v25 ^ 0x292040E1))));
  v27 = (unint64_t)(v26 + a3) >> 16;
  v28 = v9 + v10 + v26 + v27;
  v29 = (v28 ^ 0xE67FB943) & (2 * (v28 & 0xE77FBD8B)) ^ v28 & 0xE77FBD8B;
  v30 = ((2 * (v28 ^ 0xEE5EDA53)) ^ 0x1242CFB0) & (v28 ^ 0xEE5EDA53) ^ (2 * (v28 ^ 0xEE5EDA53)) & 0x92167D8;
  v31 = v30 ^ 0x9212048;
  v32 = (v30 ^ 0x4610) & (4 * v29) ^ v29;
  v33 = ((4 * v31) ^ 0x24859F60) & v31 ^ (4 * v31) & 0x92167D8;
  v34 = (v33 ^ 0x10748) & (16 * v32) ^ v32;
  v35 = ((16 * (v33 ^ 0x9206098)) ^ 0x92167D80) & (v33 ^ 0x9206098) ^ (16 * (v33 ^ 0x9206098)) & 0x92167D0;
  v36 = v34 ^ 0x92167D8 ^ (v35 ^ 0x6500) & (v34 << 8);
  v37 = (v28 ^ (2
              * ((v36 << 16) & 0x9210000 ^ v36 ^ ((v36 << 16) ^ 0x67D80000) & (((v35 ^ 0x9210258) << 8) & 0x9210000 ^ (((v35 ^ 0x9210258) << 8) ^ 0x21670000) & (v35 ^ 0x9210258) ^ 0x8000000)))) >> 8;
  v38 = v26 - (((v37 ^ 0x43F9C32B) - 1310680959) ^ ((v37 ^ 0x6E3D8EC8) - 1675307676) ^ ((v37 ^ 0x2D337091) - 550884549));
  v39 = v9 + a2 + v27 + v38;
  v40 = (v39 ^ 0xF32F7642) & (2 * (v39 & 0xFB487693)) ^ v39 & 0xFB487693;
  v41 = ((2 * (v39 ^ 0x573FF760)) ^ 0x58EF03E6) & (v39 ^ 0x573FF760) ^ (2 * (v39 ^ 0x573FF760)) & 0xAC7781F2;
  v42 = v41 ^ 0xA4108011;
  v43 = (v41 ^ 0x86300C0) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0xB1DE07CC) & v42 ^ (4 * v42) & 0xAC7781F0;
  v45 = (v44 ^ 0xA05601C0) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0xC218033)) ^ 0xC7781F30) & (v44 ^ 0xC218033) ^ (16 * (v44 ^ 0xC218033)) & 0xAC7781F0;
  v47 = v45 ^ 0xAC7781F3;
  v48 = v9 + v15 + v27 + v38;
  LODWORD(STACK[0x6990]) = v48;
  v49 = v46 ^ 0x280780C3;
  v50 = (v48 ^ 0xE41CC927) & (2 * (v48 & 0xF690ED26)) ^ v48 & 0xF690ED26;
  v51 = (v46 ^ 0x84700100) & (v45 << 8);
  v52 = ((2 * (v48 ^ 0x203C4163)) ^ 0xAD59588A) & (v48 ^ 0x203C4163) ^ (2 * (v48 ^ 0x203C4163)) & 0xD6ACAC44;
  v53 = v52 ^ 0x52A4A445;
  v54 = (v52 ^ 0x84200845) & (4 * v50) ^ v50;
  v55 = ((4 * v53) ^ 0x5AB2B114) & v53 ^ (4 * v53) & 0xD6ACAC44;
  v56 = (v55 ^ 0x52A0A000) & (16 * v54) ^ v54;
  v57 = v47 ^ v51;
  v58 = ((16 * (v55 ^ 0x840C0C41)) ^ 0x6ACAC450) & (v55 ^ 0x840C0C41) ^ (16 * (v55 ^ 0x840C0C41)) & 0xD6ACAC40;
  v59 = v56 ^ 0xD6ACAC45 ^ (v58 ^ 0x42888405) & (v56 << 8);
  LODWORD(STACK[0x6980]) = v59;
  LODWORD(v27) = v9 + v14 + v27 + v38;
  v60 = (v49 << 8) & 0x2C770000 ^ 0x8760000 ^ ((v49 << 8) ^ 0x77810000) & v49;
  v61 = (v27 ^ 0xE408CD27) & (2 * (v27 & 0xF690ED26)) ^ v27 & 0xF690ED26;
  v62 = ((v58 ^ 0x94242805) << 8) & 0xD6AC0000 ^ 0x52000000 ^ (((v58 ^ 0x94242805) << 8) ^ 0xACAC0000) & (v58 ^ 0x94242805);
  v63 = ((2 * (v27 ^ 0xD09972B)) ^ 0xF732F41A) & (v27 ^ 0xD09972B) ^ (2 * (v27 ^ 0xD09972B)) & 0xFB997A0C;
  v64 = v63 ^ 0x8890A05;
  v65 = (v63 ^ 0xF208720C) & (4 * v61) ^ v61;
  v66 = ((4 * v64) ^ 0xEE65E834) & v64 ^ (4 * v64) & 0xFB997A0C;
  LODWORD(STACK[0x69D0]) = (v59 << 16) & 0x56AC0000;
  v67 = ((16 * (v66 ^ 0x11981209)) ^ 0xB997A0D0) & (v66 ^ 0x11981209) ^ (16 * (v66 ^ 0x11981209)) & 0xFB997A00;
  v68 = ((v57 << 16) ^ 0x1F30000) & v60;
  v69 = (v66 ^ 0xEA016800) & (16 * v65) ^ v65 ^ 0xFB997A0D ^ (v67 ^ 0xB991200D) & (((v66 ^ 0xEA016800) & (16 * v65) ^ v65) << 8);
  LODWORD(STACK[0x69C0]) = ((v59 << 16) ^ 0x2C450000) & v62;
  LODWORD(STACK[0x69B0]) = (v57 << 16) & 0x2C770000 ^ v57 ^ v68;
  LODWORD(STACK[0x6970]) = v27 ^ (2
                                * ((v69 << 16) & 0x7B990000 ^ v69 ^ ((v69 << 16) ^ 0x7A0D0000) & (((v67 ^ 0x42085A0D) << 8) & 0x7B990000 ^ 0x62810000 ^ (((v67 ^ 0x42085A0D) << 8) ^ 0x197A0000) & (v67 ^ 0x42085A0D)))) ^ 0x66978EDA ^ v12;
  v70 = STACK[0x6A80];
  v72 = STACK[0x6A60];
  v73 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((52 * (v9 + STACK[0x6A50] != 15)) ^ STACK[0x6AC0]));
  ++STACK[0x6A70];
  STACK[0x6A60] = v72 + 1;
  STACK[0x6A80] = v70 + 1;
  return ((uint64_t (*)(uint64_t))(v73 - 8))(a1 + 1);
}

uint64_t sub_100AE2AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  char v195;
  BOOL v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  char *v213;
  int v214;
  int v215;
  char *v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  char *v243;
  unsigned int v244;
  uint64_t v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  int v258;
  uint64_t v259;
  unsigned int v260;
  int v261;
  unint64_t v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  uint64_t (*v279)(void);

  v12 = v10 + v9 - v8;
  v13 = (((v12 ^ 0x666C957A) + 470702685) ^ ((v12 ^ 0xFD54E604) - 2026493661) ^ ((v12 ^ 0x164F75AF) + 1814936202))
      - ((((v12 >> 9) ^ 0x51540E91) + 1170203960) ^ (((v12 >> 9) ^ 0x9600F6CD) - 2098520724) ^ (((v12 >> 9) ^ 0xC71243DF)
                                                                                              - 738613126));
  v14 = ((v13 + 1464043185) ^ 0xB653FF79) & (2 * ((v13 + 1464043185) & 0xC653FF7D)) ^ (v13 + 1464043185) & 0xC653FF7D;
  v15 = ((2 * ((v13 + 1464043185) ^ 0xB6F55F0B)) ^ 0xE14D40EC) & ((v13 + 1464043185) ^ 0xB6F55F0B) ^ (2 * ((v13 + 1464043185) ^ 0xB6F55F0B)) & 0x70A6A076;
  v16 = v15 ^ 0x10A2A012;
  v17 = (v15 ^ 0x20240066) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0xC29A81D8) & v16 ^ (4 * v16) & 0x70A6A074;
  v19 = (v18 ^ 0x40828050) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x30242026)) ^ 0xA6A0760) & (v18 ^ 0x30242026) ^ (16 * (v18 ^ 0x30242026)) & 0x70A6A070;
  v21 = v19 ^ 0x70A6A076 ^ (v20 ^ 0x220016) & (v19 << 8);
  v22 = ((v13 + 1464043185) ^ (2
                             * ((v21 << 16) & 0x70A60000 ^ v21 ^ ((v21 << 16) ^ 0x20760000) & (((v20 ^ 0x7084A016) << 8) & 0x70A60000 ^ 0x50060000 ^ (((v20 ^ 0x7084A016) << 8) ^ 0x26A00000) & (v20 ^ 0x7084A016))))) >> 7;
  v23 = v13
      + 734480371
      + (((v22 ^ 0x2CE17C0E) - 1936999835) ^ ((v22 ^ 0x14DFEB09) - 1263194780) ^ ((v22 ^ 0x38F03278) - 1734675437));
  v24 = ((2 * (v23 & 0x512BDB25)) & 0xA0042402 | v23 & 0x512BDB25) ^ (2 * (v23 & 0x512BDB25)) & (v23 ^ 0xB50FB697);
  v25 = ((2 * (v23 ^ 0xB50FB697)) ^ 0xC848DB64) & (v23 ^ 0xB50FB697) ^ (2 * (v23 ^ 0xB50FB697)) & 0xE4246DB2;
  v26 = v25 ^ 0x24242492;
  v27 = (v25 ^ 0xE0004922) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0x9091B6C8) & v26 ^ (4 * v26) & 0xE4246DB0;
  v29 = (v28 ^ 0x80002482) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x64244932)) ^ 0x4246DB20) & (v28 ^ 0x64244932) ^ (16 * (v28 ^ 0x64244932)) & 0xE4246DB0;
  v31 = v29 ^ 0xE4246DB2 ^ (v30 ^ 0x40044992) & (v29 << 8);
  v32 = v23 ^ (2
             * ((v31 << 16) & 0x64240000 ^ v31 ^ ((v31 << 16) ^ 0x6DB20000) & (((v30 ^ 0xA4202492) << 8) & 0x64240000 ^ (((v30 ^ 0xA4202492) << 8) ^ 0x246D0000) & (v30 ^ 0xA4202492) ^ 0x40000000)));
  v33 = ((v32 ^ 0x1DC05AE7) - 584694186) ^ ((v32 ^ 0x9C977D23) + 1550934418) ^ ((v32 ^ 0xD0742785) + 278018872);
  v34 = ((v33 - 633467386) ^ 0x8228A785) & (2 * ((v33 - 633467386) & 0xD44AA7D6)) ^ (v33 - 633467386) & 0xD44AA7D6;
  v35 = ((2 * ((v33 - 633467386) ^ 0xA2ADEA81)) ^ 0xEDCE9AAE) & ((v33 - 633467386) ^ 0xA2ADEA81) ^ (2
                                                                                                  * ((v33 - 633467386) ^ 0xA2ADEA81)) & 0x76E74D56;
  v36 = v35 ^ 0x12214551;
  v37 = (v35 ^ 0x60460800) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0xDB9D355C) & v36 ^ (4 * v36) & 0x76E74D54;
  v39 = (v38 ^ 0x52850540) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x24624803)) ^ 0x6E74D570) & (v38 ^ 0x24624803) ^ (16 * (v38 ^ 0x24624803)) & 0x76E74D50;
  v41 = v39 ^ 0x76E74D57 ^ (v40 ^ 0x66644500) & (v39 << 8);
  v42 = ((v33 - 633467386) ^ (2
                            * ((v41 << 16) & 0x76E70000 ^ v41 ^ ((v41 << 16) ^ 0x4D570000) & (((v40 ^ 0x10830807) << 8) & 0x76E70000 ^ 0x10A20000 ^ (((v40 ^ 0x10830807) << 8) ^ 0x674D0000) & (v40 ^ 0x10830807))))) >> 10;
  v43 = v33
      + 281929104
      + (((v42 ^ 0xB69D4790) - 1963896510) ^ ((v42 ^ 0x893B68D) + 889167965) ^ ((v42 ^ 0xBE22B392) - 2108775100));
  v44 = (v43 ^ 0x457873E8) & (2 * (v43 & 0x617A7BED)) ^ v43 & 0x617A7BED;
  v45 = ((2 * (v43 ^ 0x45BC0632)) ^ 0x498CFBBE) & (v43 ^ 0x45BC0632) ^ (2 * (v43 ^ 0x45BC0632)) & 0x24C67DDE;
  v46 = v45 ^ 0x24420441;
  v47 = (v45 ^ 0x2080799D) & (4 * v44) ^ v44;
  v48 = ((4 * v46) ^ 0x9319F77C) & v46 ^ (4 * v46) & 0x24C67DDC;
  v49 = (v48 ^ 0x7550) & (16 * v47) ^ v47;
  v50 = ((16 * (v48 ^ 0x24C60883)) ^ 0x4C67DDF0) & (v48 ^ 0x24C60883) ^ (16 * (v48 ^ 0x24C60883)) & 0x24C67DD0;
  v51 = v49 ^ 0x24C67DDF ^ (v50 ^ 0x4465D00) & (v49 << 8);
  v52 = (v43 ^ (2
              * ((v51 << 16) & 0x24C60000 ^ v51 ^ ((v51 << 16) ^ 0x7DDF0000) & (((v50 ^ 0x2080200F) << 8) & 0x24C60000 ^ 0x20820000 ^ (((v50 ^ 0x2080200F) << 8) ^ 0x467D0000) & (v50 ^ 0x2080200F))))) >> 1;
  v53 = v43
      - (((v52 ^ 0xA86C8A24) - 2028822422) ^ ((v52 ^ 0x6155D2AA) + 1311504616) ^ ((v52 ^ 0xF98418A7) - 688246037))
      - 1380863149;
  v54 = (v53 ^ 0xD36FB2FF) & (2 * (v53 & 0xD38C32FF)) ^ v53 & 0xD38C32FF;
  v55 = ((2 * (v53 ^ 0x706FB31F)) ^ 0x47C703C0) & (v53 ^ 0x706FB31F) ^ (2 * (v53 ^ 0x706FB31F)) & 0xA3E381E0;
  v56 = v55 ^ 0xA0208020;
  v57 = (v55 ^ 0x224101C0) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0x8F8E0780) & v56 ^ (4 * v56) & 0xA3E381E0;
  v59 = (v58 ^ 0x83820180) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x20618060)) ^ 0x3E381E00) & (v58 ^ 0x20618060) ^ (16 * (v58 ^ 0x20618060)) & 0xA3E381E0;
  v61 = v59 ^ 0xA3E381E0 ^ (v60 ^ 0x222000E0) & (v59 << 8);
  v62 = v53 ^ (2
             * ((v61 << 16) & 0x23E30000 ^ v61 ^ ((v61 << 16) ^ 0x1E00000) & (((v60 ^ 0x81C381E0) << 8) & 0x23E30000 ^ 0x620000 ^ (((v60 ^ 0x81C381E0) << 8) ^ 0x63810000) & (v60 ^ 0x81C381E0))));
  v63 = ((v62 ^ 0xFCAF17A2) + 1517806941) ^ ((v62 ^ 0x6B7522AD) - 844246956) ^ ((v62 ^ 0x510430) - 1500907825);
  v64 = ((v63 + 877836019) ^ 0xCB3413B4) & (2 * ((v63 + 877836019) & 0xE3B89BA5)) ^ (v63 + 877836019) & 0xE3B89BA5;
  v65 = ((2 * ((v63 + 877836019) ^ 0x891435F6)) ^ 0xD5595CA6) & ((v63 + 877836019) ^ 0x891435F6) ^ (2
                                                                                                  * ((v63 + 877836019) ^ 0x891435F6)) & 0x6AACAE52;
  v66 = v65 ^ 0x2AA4A251;
  v67 = (v65 ^ 0x20000C41) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0xAAB2B94C) & v66 ^ (4 * v66) & 0x6AACAE50;
  v69 = (v68 ^ 0x2AA0A840) & (16 * v67) ^ v67;
  v70 = ((16 * (v68 ^ 0x400C0613)) ^ 0xAACAE530) & (v68 ^ 0x400C0613) ^ (16 * (v68 ^ 0x400C0613)) & 0x6AACAE50;
  v71 = v69 ^ 0x6AACAE53 ^ (v70 ^ 0x2A88A443) & (v69 << 8);
  v72 = ((v63 + 877836019) ^ (2
                            * ((v71 << 16) & 0x6AAC0000 ^ v71 ^ ((v71 << 16) ^ 0x2E530000) & (((v70 ^ 0x40240A43) << 8) & 0x6AAC0000 ^ 0x42000000 ^ (((v70 ^ 0x40240A43) << 8) ^ 0xACAE0000) & (v70 ^ 0x40240A43))))) >> 13;
  v73 = v63
      + 2011003124
      + (((v72 ^ 0xA2471693) + 1083100198) ^ ((v72 ^ 0x9C34F786) + 2130521393) ^ ((v72 ^ 0x3E70F61B) - 591844178));
  v74 = (v73 ^ 0x3D72A3E2) & (2 * (v73 & 0xBD630BEB)) ^ v73 & 0xBD630BEB;
  v75 = ((2 * (v73 ^ 0xF32A222)) ^ 0x64A35392) & (v73 ^ 0xF32A222) ^ (2 * (v73 ^ 0xF32A222)) & 0xB251A9C8;
  v76 = v75 ^ 0x9250A849;
  v77 = (v75 ^ 0x20408181) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0xC946A724) & v76 ^ (4 * v76) & 0xB251A9C8;
  v79 = (v78 ^ 0x8040A109) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x321108C9)) ^ 0x251A9C90) & (v78 ^ 0x321108C9) ^ (16 * (v78 ^ 0x321108C9)) & 0xB251A9C0;
  v81 = v79 ^ 0xB251A9C9 ^ (v80 ^ 0x20108849) & (v79 << 8);
  v82 = (v73 ^ (2
              * ((v81 << 16) & 0x32510000 ^ v81 ^ ((v81 << 16) ^ 0x29C90000) & (((v80 ^ 0x92412149) << 8) & 0x32510000 ^ 0x22500000 ^ (((v80 ^ 0x92412149) << 8) ^ 0x51A90000) & (v80 ^ 0x92412149))))) >> 3;
  v83 = v73
      + 1150003003
      + (((v82 ^ 0xF905E25A) - 864477209) ^ ((v82 ^ 0xE35DE919) - 702475098) ^ ((v82 ^ 0x970404C) + 1007468017));
  v84 = (v83 ^ 0x10302DF9) & (2 * (v83 & 0x5282ADFC)) ^ v83 & 0x5282ADFC;
  v85 = ((2 * (v83 ^ 0x35346721)) ^ 0xCF6D95BA) & (v83 ^ 0x35346721) ^ (2 * (v83 ^ 0x35346721)) & 0x67B6CADC;
  v86 = v85 ^ 0x20924A45;
  v87 = (v85 ^ 0x66848095) & (4 * v84) ^ v84;
  v88 = ((4 * v86) ^ 0x9EDB2B74) & v86 ^ (4 * v86) & 0x67B6CADC;
  v89 = (v88 ^ 0x6920A49) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x6124C089)) ^ 0x7B6CADD0) & (v88 ^ 0x6124C089) ^ (16 * (v88 ^ 0x6124C089)) & 0x67B6CAD0;
  v91 = v89 ^ 0x67B6CADD ^ (v90 ^ 0x6324880D) & (v89 << 8);
  v92 = v83 ^ (2
             * ((v91 << 16) & 0x67B60000 ^ v91 ^ ((v91 << 16) ^ 0x4ADD0000) & (((v90 ^ 0x492420D) << 8) & 0x67B60000 ^ 0x41340000 ^ (((v90 ^ 0x492420D) << 8) ^ 0x36CA0000) & (v90 ^ 0x492420D))));
  v93 = ((v92 ^ 0x9F9C3F61) - 158773979) ^ ((v92 ^ 0xDB10297C) - 1308271814) ^ ((v92 ^ 0x5C4B2E5B) + 895376415);
  v94 = ((v93 - 2022443379) ^ 0x8E8646C) & (2 * ((v93 - 2022443379) & 0xA2EC846C)) ^ (v93 - 2022443379) & 0xA2EC846C;
  v95 = ((2 * ((v93 - 2022443379) ^ 0x4C686C24)) ^ 0xDD09D090) & ((v93 - 2022443379) ^ 0x4C686C24) ^ (2 * ((v93 - 2022443379) ^ 0x4C686C24)) & 0xEE84E848;
  v96 = v95 ^ 0x22842848;
  v97 = (v95 ^ 0xAC000808) & (4 * v94) ^ v94;
  v98 = ((4 * v96) ^ 0xBA13A120) & v96 ^ (4 * v96) & 0xEE84E848;
  v99 = (v98 ^ 0xAA00A000) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x44844848)) ^ 0xE84E8480) & (v98 ^ 0x44844848) ^ (16 * (v98 ^ 0x44844848)) & 0xEE84E840;
  v101 = v99 ^ 0xEE84E848 ^ (v100 ^ 0xE8048000) & (v99 << 8);
  v102 = ((v93 - 2022443379) ^ (2
                              * ((v101 << 16) & 0x6E840000 ^ v101 ^ ((v101 << 16) ^ 0x68480000) & (((v100 ^ 0x6806848) << 8) & 0x6E840000 ^ 0x6A040000 ^ (((v100 ^ 0x6806848) << 8) ^ 0x84E80000) & (v100 ^ 0x6806848))))) >> 11;
  v103 = v93
       - 1364076586
       + (((v102 ^ 0xF5896F82) + 693605909) ^ ((v102 ^ 0xB4E15B3B) + 1749000878) ^ ((v102 ^ 0x417DC813) - 1650249338));
  v104 = (v103 ^ 0x1CF35DE7) & (2 * (v103 & 0x9EE39DE6)) ^ v103 & 0x9EE39DE6;
  v105 = ((2 * (v103 ^ 0x35745E63)) ^ 0x572F870A) & (v103 ^ 0x35745E63) ^ (2 * (v103 ^ 0x35745E63)) & 0xAB97C384;
  v106 = v105 ^ 0xA8904085;
  v107 = (v105 ^ 0x3068300) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0xAE5F0E14) & v106 ^ (4 * v106) & 0xAB97C384;
  v109 = (v108 ^ 0xAA170201) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x180C181)) ^ 0xB97C3850) & (v108 ^ 0x180C181) ^ (16 * (v108 ^ 0x180C181)) & 0xAB97C380;
  v111 = v109 ^ 0xAB97C385 ^ (v110 ^ 0xA9140000) & (v109 << 8);
  v112 = (v103 ^ (2
                * ((v111 << 16) & 0x2B970000 ^ v111 ^ ((v111 << 16) ^ 0x43850000) & (((v110 ^ 0x283C385) << 8) & 0x2B970000 ^ 0x28140000 ^ (((v110 ^ 0x283C385) << 8) ^ 0x17C30000) & (v110 ^ 0x283C385))))) >> 1;
  v113 = v103
       - 532457661
       + (((v112 ^ 0x3625B077) - 571385853) ^ ((v112 ^ 0x198A0276) - 228660732) ^ ((v112 ^ 0x48CCBF77) - 1558685949));
  v114 = (v113 ^ 0x29E9719F) & (2 * (v113 & 0x31E8619F)) ^ v113 & 0x31E8619F;
  v115 = ((2 * (v113 ^ 0x9B9F295)) ^ 0x70A32614) & (v113 ^ 0x9B9F295) ^ (2 * (v113 ^ 0x9B9F295)) & 0x3851930A;
  v116 = v115 ^ 0x850910A;
  v117 = (v115 ^ 0x111302) & (4 * v114) ^ v114;
  v118 = ((4 * v116) ^ 0xE1464C28) & v116 ^ (4 * v116) & 0x38519308;
  v119 = (v118 ^ 0x20400002) & (16 * v117) ^ v117;
  v120 = ((16 * (v118 ^ 0x18119302)) ^ 0x851930A0) & (v118 ^ 0x18119302) ^ (16 * (v118 ^ 0x18119302)) & 0x38519300;
  v121 = v119 ^ 0x3851930A ^ (v120 ^ 0x11100A) & (v119 << 8);
  v122 = v113 ^ (2
               * ((v121 << 16) & 0x38510000 ^ v121 ^ ((v121 << 16) ^ 0x130A0000) & (((v120 ^ 0x3840830A) << 8) & 0x38510000 ^ 0x28400000 ^ (((v120 ^ 0x3840830A) << 8) ^ 0x51930000) & (v120 ^ 0x3840830A))));
  v123 = (v122 ^ 0x545594A8) + ((v122 >> 12) ^ 0xFFFABAA6) + 1;
  v124 = v123 - (v123 >> 6) - ((2 * (v123 - (v123 >> 6))) & 0x16B52FE8) + 190486516;
  v125 = (v124 ^ 0x38FB41F4)
       - ((v124 ^ 0x38FB41F4u) >> 9)
       - ((2 * ((v124 ^ 0x38FB41F4) - ((v124 ^ 0x38FB41F4u) >> 9))) & 0xC1C5B834)
       + 1625480218;
  v126 = (v125 >> 6) & 0x11042C4 ^ 0x11042C0 ^ ((v125 >> 6) ^ 0x1838B70) & (v125 ^ 0x1F29EDE);
  v127 = 2 * (((2 * v126) | 0x3CBED6BE) - v126) + 1128343874;
  v128 = ((((v125 >> 6) ^ v125 ^ 0x6CEC94DC) - 1533023988) ^ (((v125 >> 6) ^ v125 ^ 0x7D36014) - 811590204) ^ (((v125 >> 6) ^ v125 ^ 0xA5EA3A2) - 1037181322))
       - 1328836135
       + (((v127 ^ 0x1BC9AACF) + 516233955) ^ ((v127 ^ 0xF093B227) - 174128629) ^ ((v127 ^ 0x57C44F56) + 1388904316));
  v129 = (v128 ^ 0xCA2E13C5) & (2 * (v128 & 0xEC8F5BD5)) ^ v128 & 0xEC8F5BD5;
  v130 = ((2 * (v128 ^ 0xD33A1665)) ^ 0x7F6A9B60) & (v128 ^ 0xD33A1665) ^ (2 * (v128 ^ 0xD33A1665)) & 0x3FB54DB0;
  v131 = v130 ^ 0x954490;
  v132 = (v130 ^ 0x36A00920) & (4 * v129) ^ v129;
  v133 = ((4 * v131) ^ 0xFED536C0) & v131 ^ (4 * v131) & 0x3FB54DB0;
  v134 = v132 ^ 0x3FB54DB0 ^ (v133 ^ 0x3E950480) & (16 * v132);
  v135 = (16 * (v133 ^ 0x1204930)) & 0x3FB54DB0 ^ 0x4A104B0 ^ ((16 * (v133 ^ 0x1204930)) ^ 0xFB54DB00) & (v133 ^ 0x1204930);
  v136 = (v134 << 8) & 0x3FB54D00 ^ v134 ^ ((v134 << 8) ^ 0xB54DB000) & v135;
  v137 = v128 ^ (2
               * ((v136 << 16) & 0x3FB50000 ^ v136 ^ ((v136 << 16) ^ 0x4DB00000) & ((v135 << 8) & 0x3FB50000 ^ 0xAB00000 ^ ((v135 << 8) ^ 0x354D0000) & v135)));
  v138 = (((v137 ^ 0x568822D9) - 1516984168) ^ ((v137 ^ 0x2AD2B4C5) - 640794996) ^ ((v137 ^ 0xB46E685D) + 1198711316))
       - ((((v137 >> 10) ^ 0x362ECC9C) - 389519056) ^ (((v137 >> 10) ^ 0xE12C5799) + 1070264875) ^ (((v137 >> 10) ^ 0xD730963A)
                                                                                                  + 165032842))
       - 1068757911;
  v139 = (v138 ^ 0xF244A5D1) & (2 * (v138 & 0xE3602814)) ^ v138 & 0xE3602814;
  v140 = ((2 * (v138 ^ 0x3004B5D9)) ^ 0xA6C93B9A) & (v138 ^ 0x3004B5D9) ^ (2 * (v138 ^ 0x3004B5D9)) & 0xD3649DCC;
  v141 = (v140 ^ 0xC2240484) & (4 * v139) ^ v139;
  v142 = ((4 * (v140 ^ 0x51248445)) ^ 0x4D927734) & (v140 ^ 0x51248445) ^ (4 * (v140 ^ 0x51248445)) & 0xD3649DCC;
  v143 = (v142 ^ 0x41001509) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x926488C9)) ^ 0x3649DCD0) & (v142 ^ 0x926488C9) ^ (16 * (v142 ^ 0x926488C9)) & 0xD3649DC0;
  v145 = v143 ^ 0xD3649DCD ^ (v144 ^ 0x12409C0D) & (v143 << 8);
  v146 = (((v138 ^ (2
                  * ((v145 << 16) & 0x53640000 ^ v145 ^ ((v145 << 16) ^ 0x1DCD0000) & (((v144 ^ 0xC124010D) << 8) & 0xD3640000 ^ 0x13600000 ^ (((v144 ^ 0xC124010D) << 8) ^ 0x649D0000) & (v144 ^ 0xC124010D))))) >> 2) ^ 0x19C844E3)
       + v138;
  v147 = (2 * (v146 & 0xE3602814)) & (v146 ^ 0x57212AD6) ^ v146 & 0xE3602814 ^ ((2 * (v146 & 0xE3602814)) & 0x84400000 | 0x20000240);
  v148 = (2 * (v146 ^ 0x57212AD6)) & 0xB44102C2 ^ 0x94410242 ^ ((2 * (v146 ^ 0x57212AD6)) ^ 0x68820584) & (v146 ^ 0x57212AD6);
  v149 = v147 ^ 0x14410082 ^ (4 * v147) & 0xB44102C0 ^ ((4 * v147) ^ 0x80000900) & v148;
  v150 = (4 * v148) & 0xB44102C0 ^ 0x244100C2 ^ ((4 * v148) ^ 0xD1040B08) & v148;
  v151 = (16 * v149) & 0xB44102C0 ^ v149 ^ ((16 * v149) ^ 0x44102C20) & v150;
  v152 = (16 * v150) & 0xB44102C0 ^ 0xB04102C2 ^ ((16 * v150) ^ 0x44102C20) & v150;
  v153 = v151 ^ 0x4000200 ^ (v151 << 8) & 0xB4410200 ^ ((v151 << 8) ^ 0x4102C200) & v152;
  v154 = v146 ^ (2
               * ((v153 << 16) & 0x34410000 ^ v153 ^ ((v153 << 16) ^ 0x2C20000) & ((v152 << 8) & 0xB4410000 ^ 0x34410000 ^ ((v152 << 8) ^ 0x41020000) & v152)));
  v155 = (((v154 ^ 0x21AFB81D) - 1609155192) ^ ((v154 ^ 0x73F9F368) - 230656269) ^ ((v154 ^ 0xD93466E5) + 1485693824))
       - 1013126282;
  v156 = v155 - (v155 >> 12) + ((v155 - (v155 >> 12)) >> 5);
  v157 = ((((v156 >> 12) ^ 0xFC9112A1) + 100540772) ^ (((v156 >> 12) ^ 0xA273B3B5) + 1528594552) ^ (((v156 >> 12) ^ 0x5EE7206B)
                                                                                                  - 1484254294))
       + (((v156 ^ 0xE17FA3D3) - 58421409) ^ ((v156 ^ 0xC9A51153) - 732021281) ^ ((v156 ^ 0x70CD4FF8) + 1832280950));
  v158 = ((v157 - 194738290) ^ 0xEA3BFB3C) & (2 * ((v157 - 194738290) & 0xCC43F3BE)) ^ (v157 - 194738290) & 0xCC43F3BE;
  v159 = ((2 * ((v157 - 194738290) ^ 0xE23B7A2C)) ^ 0x5CF11324) & ((v157 - 194738290) ^ 0xE23B7A2C) ^ (2 * ((v157 - 194738290) ^ 0xE23B7A2C)) & 0x2E788992;
  v160 = (v159 ^ 0x100102) & (4 * v158) ^ v158;
  v161 = ((4 * (v159 ^ 0x22088892)) ^ 0xB9E22648) & (v159 ^ 0x22088892) ^ (4 * (v159 ^ 0x22088892)) & 0x2E788990;
  v162 = (v161 ^ 0x28600000) & (16 * v160) ^ v160;
  v163 = ((16 * (v161 ^ 0x6188992)) ^ 0xE7889920) & (v161 ^ 0x6188992) ^ (16 * (v161 ^ 0x6188992)) & 0x2E788990;
  v164 = v162 ^ 0x2E788992 ^ (v163 ^ 0x26088900) & (v162 << 8);
  v165 = ((v157 - 194738290) ^ (2
                              * ((v164 << 16) & 0x2E780000 ^ v164 ^ ((v164 << 16) ^ 0x9920000) & (((v163 ^ 0x8700092) << 8) & 0x2E780000 ^ 0x6700000 ^ (((v163 ^ 0x8700092) << 8) ^ 0x78890000) & (v163 ^ 0x8700092))))) >> 5;
  v166 = v157
       - (((v165 ^ 0xAA74EAC5) - 1644287553) ^ ((v165 ^ 0xCAE04313) - 43351959) ^ ((v165 ^ 0x64903ED2) + 1394277802))
       + 1705519809;
  v167 = (v166 ^ 0xC8EB583) & (2 * (v166 & 0x8E8EA50B)) ^ v166 & 0x8E8EA50B;
  v168 = ((2 * (v166 ^ 0x1092F597)) ^ 0x3C38A138) & (v166 ^ 0x1092F597) ^ (2 * (v166 ^ 0x1092F597)) & 0x9E1C509C;
  v169 = (v168 ^ 0x9C184098) & (4 * v167) ^ v167;
  v170 = ((4 * (v168 ^ 0x82045084)) ^ 0x78714270) & (v168 ^ 0x82045084) ^ (4 * (v168 ^ 0x82045084)) & 0x9E1C509C;
  v171 = (v170 ^ 0x1810401C) & (16 * v169) ^ v169;
  v172 = ((16 * (v170 ^ 0x860C108C)) ^ 0xE1C509C0) & (v170 ^ 0x860C108C) ^ (16 * (v170 ^ 0x860C108C)) & 0x9E1C5090;
  v173 = v171 ^ 0x9E1C509C ^ (v172 ^ 0x8004001C) & (v171 << 8);
  v174 = v92 ^ v11 ^ v137 ^ v166 ^ (2
                                  * ((v173 << 16) & 0x1E1C0000 ^ v173 ^ ((v173 << 16) ^ 0x509C0000) & (((v172 ^ 0x1E18501C) << 8) & 0x1E1C0000 ^ 0x20C0000 ^ (((v172 ^ 0x1E18501C) << 8) ^ 0x1C500000) & (v172 ^ 0x1E18501C))));
  v175 = v174 ^ 0xA3F2CE55;
  if (v174 == -561649728)
    v175 = -2104961432;
  v176 = ((2 * ((v175 ^ 0x8288D66F) & (v174 ^ 0x747AF361) ^ v175 & 0xAAFF14A3)) & 0x91F2B17C)
       - ((v175 ^ 0x8288D66F) & (v174 ^ 0x747AF361) ^ v175 & 0xAAFF14A3);
  v177 = v176 - 1224300735;
  v178 = v174;
  STACK[0x64B0] = v174 ^ 0x42F06563;
  v179 = 0xFF00FF00FF0100
       * (((v174 ^ 0x96F82495921962EBLL) + 0x6907DB6A2F16F878) ^ ((v174 ^ 0x7B56D7A0613E3979) - 0x7B56D7A023CE5C1ALL) ^ ((v174 ^ 0xEDAEF33505D47F28) + 0x12510CCAB8DBE5B5))
       + 0x4418A223BCF18C44;
  v180 = (2 * (v179 & 0xA30044F5DD774C00)) & 0x2008002980C8800 ^ v179 & 0xA30044F5DD774C00 ^ ((2 * (v179 & 0xA30044F5DD774C00)) | 8) & (v179 ^ 0x84082F7056BA4DBLL);
  v181 = (2 * (v179 ^ 0x84082F7056BA4DBLL)) & 0xAB40C602D81CE806 ^ 0xA940420248042801 ^ ((2
                                                                                            * (v179 ^ 0x84082F7056BA4DBLL)) ^ 0x56818C05B039D08ELL) & (v179 ^ 0x84082F7056BA4DBLL);
  v182 = (4 * v180) & 0xAB40C602D81CE864 ^ v180 ^ ((4 * v180) | 0x10) & v181;
  v183 = (4 * v181) & 0xAB40C602D81CE864 ^ 0x240C600980C4863 ^ ((4 * v181) ^ 0xAD03180B6073A19CLL) & v181;
  v184 = (16 * v182) & 0xAB40C602D81CE860 ^ v182 ^ ((16 * v182) ^ 0x40) & v183;
  v185 = (16 * v183) & 0xAB40C602D81CE860 ^ 0xB40860258106807 ^ ((16 * v183) ^ 0xB40C602D81CE8670) & v183;
  v186 = (v184 << 8) & 0xAB40C602D81CE800 ^ v184 ^ ((v184 << 8) ^ 0x4400) & v185;
  v187 = (v185 << 8) & 0xAB40C602D81CE800 ^ 0xAB00C402C0148867 ^ ((v185 << 8) ^ 0x40C602D81CE86700) & v185;
  v188 = v186 ^ (v186 << 16) & 0xAB40C602D81C0000 ^ ((v186 << 16) ^ 0x40440000) & v187 ^ 0xAB40C6029818A823;
  v189 = v179 ^ (2
               * ((v188 << 32) & 0x2B40C60200000000 ^ v188 ^ ((v188 << 32) ^ 0x581CE86700000000) & ((v187 << 16) & 0x2B40C60200000000 ^ 0x2940060200000000 ^ ((v187 << 16) ^ 0x4602D81C00000000) & v187)));
  v190 = (v176 - 1224300735) ^ 0x4A4EE1FB;
  v191 = (((v176 + 65) ^ (v176 + 6)) ^ (((v176 + 65) ^ 1) + 6)) & 7 ^ 4;
  LODWORD(STACK[0x69D0]) = v190;
  if (v190 == 2143310489)
    v192 = 0;
  else
    v192 = 255;
  v193 = v192 << v191;
  LODWORD(STACK[0x6AC0]) = v193;
  v194 = v191;
  LODWORD(STACK[0x6500]) = v191;
  if (v190 == 2143310489)
    v195 = 119;
  else
    v195 = v193 ^ 0x88;
  LODWORD(STACK[0x6A60]) = __CFADD__(v189 ^ 0xD708E13BC2EF12A4, 0x25A100F0EE640CELL) - 1;
  v196 = __CFADD__(v189 ^ 0x7B864F9E458CB489, 0xAED4BEAA8985E6E1);
  v197 = ((v189 ^ 0x7B864F9E458CB489) - 0x512B4155767A191FLL) ^ ((v189 ^ 0xD708E13BC2EF12A4) + 0x25A100F0EE640CELL);
  v198 = v189 ^ 0x490EE651EA2D3A5FLL;
  v199 = v197 ^ (v198 - 0x63A3E89AD9DB97C9);
  v200 = __CFADD__(v198, 0x9C5C176526246837) - 1;
  LODWORD(v198) = (LODWORD(STACK[0x64F8]) ^ 0x155FC7D3) & (LODWORD(STACK[0x66F0]) ^ 0xFFFFFFFC);
  v201 = STACK[0x6910];
  v202 = (253294587
        - (STACK[0x6910] & 1 ^ 0x19E79619 ^ v198)
        + ((2 * (STACK[0x6910] & 1 ^ 0x19E79619 ^ v198)) & 0xE1CE1008)) ^ 0x6896901D;
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6770])
                         - 206878920
                         + 1960132857
                         * (v202
                          - (((LODWORD(STACK[0x6910]) ^ 0xC34A0C30) - 961308921) ^ ((LODWORD(STACK[0x6910]) ^ 0xF79A393A)
                                                                                  - 228351475) ^ ((LODWORD(STACK[0x6910]) ^ 0xC9C4B199)
                                                                                                - 868406608)));
  LODWORD(v198) = a5 ^ v32 ^ 0xBD84C027 ^ v122;
  v203 = ((2 * (v198 & 0x131C71EB ^ 0x2566221)) | 0x8D2319BA) - (v198 & 0x131C71EB ^ 0x2566221) - 1183943901;
  LODWORD(v198) = (v198 & 0xECE38E14 ^ 0x48E38410)
                + (v198 & 0x68E20604 ^ 0x33085285)
                - ((v198 & 0xECE38E14 ^ 0x48E38410) & 0x68E20604);
  LODWORD(v198) = (v198 & 0x79ED3E24 ^ 0xC51823) + (v198 & 0x8602C0D8 ^ 0x104089) - 2;
  LODWORD(v198) = v198 & 0x5DF9DC82 ^ 0x5C49D581 ^ (v198 ^ 0xEC22F1D1) & (v203 ^ 0xE4D1AC80);
  v204 = v62 ^ a8 ^ v124 ^ (v156 - ((2 * v156) & 0xCB2F9CF0) - 443036040);
  LODWORD(v197) = v154 ^ (-1993265469 - v198 + ((2 * v198) & 0xED9DA278));
  v205 = (v197 & 0xFE ^ 0x22) - ((2 * (v197 & 0xFE ^ 0x22)) & 0xFFFFFFE7) + 597220595;
  v206 = ((v205 & 0x8DB83 ^ 0x10040382) + (v205 ^ 0x18ADC75) - ((v205 ^ 0x18ADC75) & 0x20382)) ^ 0x321CDBF1;
  v207 = (v197 & 0xFFFFFF01 ^ 0x1C529900) - ((2 * (v197 & 0xFFFFFF01 ^ 0x1C529900)) & 0x27AC7C00) + 332807820;
  v208 = ((v207 & 0x7B660901 ^ 0x29200163) + (v207 ^ 0x52473E98) - ((v207 ^ 0x52473E98) & 0x7B660905)) ^ 0xE316AB73;
  v209 = v178;
  v210 = ((v178 & 0xFFFFFFF8 ^ 0xF95BF9A0) - 1323517796 - ((2 * (v178 & 0xFFFFFFF8 ^ 0xF95BF9A0)) & 0x623976D0) + 720) & 0xFFFFFFF8;
  v211 = ((v210 ^ 0xD0B03814) + 2004894081) ^ ((v210 ^ 0xE416BA01) + 1126613910) ^ ((v210 ^ 0x8A12E465) + 757243378);
  LODWORD(STACK[0x6A30]) = (((v195 ^ 0x77) & (v197 ^ 0xDC) | 0x73)
                                           - ((v195 ^ 0x77) & (v197 ^ 0xDC) ^ v195 & 0x70 | 0x8C)
                                           - 116) ^ 0x24B21;
  LODWORD(STACK[0x6A70]) = BYTE2(v197) ^ BYTE3(v197) ^ 0x9A ^ (((BYTE1(v197) ^ 0x4E)
                                                                               - ((2 * (BYTE1(v197) ^ 0x4E)) & 0xB0)
                                                                               - 40) ^ v197);
  LODWORD(STACK[0x66F0]) = v204 ^ 0x59270D01;
  LODWORD(STACK[0x6A50]) = v204 ^ 0x6A ^ ((v204 ^ 0x59F13D6A) >> 16) ^ ((unsigned __int16)(v204 ^ 0x3D6A) >> 8) ^ HIBYTE(v204) ^ 0x9E;
  LODWORD(v198) = STACK[0x6540];
  v212 = STACK[0x6A90];
  v213 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6A90]) - 17934) - 4;
  v214 = *(_DWORD *)&v213[4 * (LODWORD(STACK[0x6540]) % 0x101)];
  LODWORD(STACK[0x64A8]) = v214;
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6610]) + (v214 ^ 0xB6BAA1A9);
  LODWORD(STACK[0x6A20]) = (v177 ^ 0x358EB362) % 0x101;
  v215 = v212;
  v216 = (char *)*(&off_1015B46D0 + (v212 ^ 0x4EE2)) - 4;
  STACK[0x6A00] = (unint64_t)v216;
  v217 = STACK[0x6700];
  LODWORD(STACK[0x69F0]) = LODWORD(STACK[0x66B0]) + (*(_DWORD *)&v216[4 * LODWORD(STACK[0x6700])] ^ 0x5E05B5EF);
  v218 = STACK[0x66F8];
  LODWORD(STACK[0x66B0]) = 32 * v194
                         + (LODWORD(STACK[0x65F8]) ^ (32 * LODWORD(STACK[0x66F8])))
                         - 2 * ((32 * v194) & (LODWORD(STACK[0x65F8]) ^ (32 * LODWORD(STACK[0x66F8]))));
  LODWORD(STACK[0x6A10]) = (LODWORD(STACK[0x6960]) >> 4) + 862177016 - ((2 * (LODWORD(STACK[0x6960]) >> 4)) & 0x6C78DF0);
  v219 = LODWORD(STACK[0x65E0]) - 1644726496;
  v220 = ~(_BYTE)v198 | 0xFFFFFF01;
  v221 = v198 & 0xD6 ^ 0x4202390 ^ v220 & (v219 ^ 0xBD9856F7);
  v222 = ((2 * v221) & 0x7AFE9E72) - v221;
  v223 = (v222 + 1115730118) ^ 0xFDF3537E;
  v224 = v217 ^ LODWORD(STACK[0x6618]) ^ (2 * (v177 ^ v217));
  LODWORD(STACK[0x69C0]) = (v224 ^ 0x6B1D66C4) + 2143310489 - 2 * ((v224 ^ 0x6B1D66C4) & 0x7FC0529B ^ v224 & 2);
  LODWORD(STACK[0x6980]) = v218 - 2 * (STACK[0x65F0] & 3) - 64132413;
  v225 = ((v211 - 24848542) ^ 0xD7F6C4B1) & (2 * ((v211 - 24848542) & 0xE7F708B9)) ^ (v211 - 24848542) & 0xE7F708B9;
  v226 = ((2 * ((v211 - 24848542) ^ 0x59DAD4D1)) ^ 0x7C5BB8D0) & ((v211 - 24848542) ^ 0x59DAD4D1) ^ (2 * ((v211 - 24848542) ^ 0x59DAD4D1)) & 0xBE2DDC68;
  v227 = (v226 ^ 0x3C080040) & (4 * v225) ^ v225;
  v228 = ((4 * (v226 ^ 0x82244428)) ^ 0xF8B771A0) & (v226 ^ 0x82244428) ^ (4 * (v226 ^ 0x82244428)) & 0xBE2DDC68;
  v229 = (v228 ^ 0xB8255020) & (16 * v227) ^ v227;
  v230 = ((16 * (v228 ^ 0x6088C48)) ^ 0xE2DDC680) & (v228 ^ 0x6088C48) ^ (16 * (v228 ^ 0x6088C48)) & 0xBE2DDC60;
  v231 = v229 ^ 0xBE2DDC68 ^ (v230 ^ 0xA20DC400) & (v229 << 8);
  v232 = v177 & 0xF86B25 ^ 0x582921 ^ ((v211 - 24848542) ^ (2
                                                          * ((v231 << 16) & 0x3E2D0000 ^ v231 ^ ((v231 << 16) ^ 0x5C680000) & (((v230 ^ 0x1C201868) << 8) & 0x3E2D0000 ^ 0x12210000 ^ (((v230 ^ 0x1C201868) << 8) ^ 0x2DDC0000) & (v230 ^ 0x1C201868)))) ^ 0x5CFB24B3) & (v177 ^ 0xCA714C9D);
  v233 = (((2 * v232) & 0x94998C8) - v232 - 77909093) ^ 0x48CAD40;
  v234 = STACK[0x68B0];
  v235 = v202;
  v236 = LODWORD(STACK[0x6688]) ^ 0xFD14849 ^ ((v201 ^ v202) >> 4);
  LODWORD(v216) = 16843009 * v206;
  v237 = (16843009 * v206) & 0xFE | v208;
  v238 = v237 - ((2 * v237) & 0xDECB3278) - 278554308;
  v239 = __CFADD__(257 * v199, 0xFC73859E16EA15E4)
       + (((unint64_t)v199 * (unsigned __int128)0x101uLL) >> 64)
       + 257 * ((v196 - 1) ^ LODWORD(STACK[0x6A60]) ^ v200)
       + 1468808299;
  v240 = v198 & 0xE8 ^ 0x40A06220 ^ v220 & (v219 ^ 0xBD9C0FC8);
  LODWORD(STACK[0x6770]) = v177;
  v241 = STACK[0x6620];
  LODWORD(STACK[0x6970]) = v234 ^ 0x70B3CAB;
  v242 = v234 ^ 0x70B3CAB ^ v241 ^ LODWORD(STACK[0x6890]) ^ (215869745 - (v240 | 0xCDDE931) + (v240 | 0xF32216CE));
  v243 = (char *)*(&off_1015B46D0 + (v215 ^ 0x4710)) - 12;
  v244 = (v239 - 908165447) ^ 0x9EF7D4EB ^ *(_DWORD *)&v243[4 * (v239 - 1468808092)];
  v245 = (uint64_t)*(&off_1015B46D0 + (v215 ^ 0x484A));
  LODWORD(v199) = *(_DWORD *)(v245 + 4 * (v233 % 0x101)) - 1358525920;
  v246 = (((LODWORD(STACK[0x6710]) ^ 0x8E82D24) - 149433636) ^ ((LODWORD(STACK[0x6710]) ^ 0x759FA139) - 1973395769) ^ ((LODWORD(STACK[0x6710]) ^ 0xF217C14F) + 233324209))
       - 1889515938
       + v244
       + (v199 ^ 0x6C2A4008 ^ (v199 >> 1) & 0x5F805ECA);
  v247 = v211
       + 1715217737
       + (((v177 ^ 0xF9C7701D) + 1282829850) ^ ((v177 ^ 0x27AAE582) - 1843659897) ^ ((v177 ^ 0xEBE326FD) + 1582446842))
       + 3435;
  LODWORD(v199) = LODWORD(STACK[0x6740]) - v247;
  v248 = ((v201 ^ 0xFD148493) % 0x101 + 560642645) ^ 0x61082B14 ^ *(_DWORD *)&v243[4 * ((v201 ^ 0xFD148493) % 0x101)];
  LODWORD(STACK[0x6610]) = v223
                         - (((v234 ^ 0xBAE290E8) + 1108759485) ^ ((v234 ^ 0x236AEAD9) - 610391666) ^ ((v234 ^ 0x78F6B602) - 2147322537));
  LODWORD(STACK[0x6620]) = v223 - 2 * (v223 & 0x3C21CE0D ^ v222 & 1) - 1138635252;
  v249 = v209;
  LODWORD(v199) = (((v209 ^ 0x5CC533E2) - 506812033) ^ ((v209 ^ 0xF1AF4633) + 1285610672) ^ ((v209 ^ 0x5B99516B)
                                                                                           - 426325000))
                + (v199 ^ 0xB1FFEFBD)
                + ((2 * v199) & 0x63FFDF7A)
                + 1687713161;
  v250 = (v199 ^ 0x98609892) & (2 * (v199 & 0x9D6ADC93)) ^ v199 & 0x9D6ADC93;
  v251 = ((2 * (v199 ^ 0x80651894)) ^ 0x3A1F880E) & (v199 ^ 0x80651894) ^ (2 * (v199 ^ 0x80651894)) & 0x1D0FC406;
  v252 = (v251 ^ 0x180F8005) & (4 * v250) ^ v250;
  v253 = ((4 * (v251 ^ 0x5004401)) ^ 0x743F101C) & (v251 ^ 0x5004401) ^ (4 * (v251 ^ 0x5004401)) & 0x1D0FC404;
  v254 = (v253 ^ 0x140F0000) & (16 * v252) ^ v252;
  v255 = ((16 * (v253 ^ 0x900C403)) ^ 0xD0FC4070) & (v253 ^ 0x900C403) ^ (16 * (v253 ^ 0x900C403)) & 0x1D0FC400;
  v256 = v254 ^ 0x1D0FC407 ^ (v255 ^ 0x100C4007) & (v254 << 8);
  LODWORD(STACK[0x6710]) = v199 ^ (2
                                 * ((v256 << 16) & 0x1D0F0000 ^ v256 ^ ((v256 << 16) ^ 0x44070000) & (((v255 ^ 0xD038407) << 8) & 0x1D0F0000 ^ 0x100B0000 ^ (((v255 ^ 0xD038407) << 8) ^ 0xFC40000) & (v255 ^ 0xD038407))));
  v257 = *(_DWORD *)(v245 + 4 * LODWORD(STACK[0x6A20]));
  LODWORD(STACK[0x6A20]) = v235;
  LODWORD(v245) = *(_DWORD *)(v245 + 4 * (v235 % 0x101));
  LODWORD(v199) = LODWORD(STACK[0x6600]) + v248;
  LODWORD(STACK[0x6740]) = v197;
  v258 = v197 ^ 0xC5B33BD6 ^ LODWORD(STACK[0x6760]) ^ (32 * (v197 ^ 0xC5B33BD6));
  LODWORD(v243) = *(_DWORD *)&v243[4 * (v237 % 0x101)] ^ (v237 % 0x101 + 560642645);
  v259 = 4 * (v216 % 0x101);
  LODWORD(STACK[0x6618]) = *(_DWORD *)(STACK[0x6A00] + v259);
  v260 = v243 ^ (v246 + 1781);
  LODWORD(STACK[0x6440]) = *(_DWORD *)&v213[v259];
  v261 = *(_DWORD *)&v213[4 * ((v197 ^ 0xC5B33BD6) % 0x101)];
  v262 = STACK[0x68C0];
  v263 = STACK[0xDA80];
  v264 = *(_QWORD *)(STACK[0xDA80] + 8 * (0x4F211994 % STACK[0x68C0]));
  v265 = *(_QWORD *)(STACK[0xDA80]
                   + 8
                   * (((((v264 ^ 0xA081B2BC165DFB85) + 0x67076363CA6EC11) ^ ((v264 ^ 0x5119DCEED39D4E53)
                                                                               - 0x817E79B0699A639) ^ ((v264 ^ 0xA4CD3B079095E083) + 0x23CFF8DBA6EF717))
                     + 0xC5B6E2138E7E280)
                    % STACK[0x68C0]));
  v266 = *(_QWORD *)(STACK[0xDA80]
                   + 8
                   * (((((v265 ^ 0xD4DB02C626BA221DLL) + 0x711E4A00F02E507BLL) ^ ((v265 ^ 0x56A003442E4FE693)
                                                                                - 0xC9AB47D07246B0BLL) ^ ((v265 ^ 0xD72E54D75DA091DBLL) + 0x72EB1C118B34E3BDLL))
                     + 0xF6FE26CAC5E3757)
                    % STACK[0x68C0]));
  STACK[0x6A60] = STACK[0xDA80];
  v267 = *(_QWORD *)(v263
                   + 8
                   * (((((v266 ^ 0x17F971FD0E8CE58) + 0x6FDDF27FEE8E54BCLL) ^ ((v266 ^ 0x96D42991DB59B821)
                                                                               - 0x789B30E1AC0DD3DLL) ^ ((v266 ^ 0xC2FEEBDB5EE4232CLL) - 0x53A371449F7D4630))
                     - 0x3BF730353E0EBC3BLL)
                    % v262));
  LODWORD(v267) = ((((v267 ^ 0x539C6323C4F1102BLL) - 0x66AB435A8EF1B011) ^ ((v267 ^ 0x35ED67D3BDCBEF02)
                                                                            - 0xDA47AAF7CB4F38) ^ ((v267 ^ 0x332451A52C6FAA7CuLL) - 0x61371DC666F0A46))
                 + 0x6062752CC33FB7CCLL)
                % v262;
  v268 = (((v267 - ((2 * v267) & 0x1A7F6CA8) - 314591660) ^ 0xFE69E1C0) + 316930111) ^ (((v267
                                                                                        - ((2 * v267) & 0x1A7F6CA8)
                                                                                        - 314591660) ^ 0x83D2BAE1)
                                                                                      + 1868079904) ^ (((v267 - ((2 * v267) & 0x1A7F6CA8) - 314591660) ^ 0x9084ED75) + 2081354892);
  LODWORD(v263) = LODWORD(STACK[0x6AC0]);
  v269 = STACK[0x66F0];
  LODWORD(STACK[0x6A00]) = 16843009 * v263;
  LODWORD(STACK[0x6760]) = (2097152000 * v263) & v269 ^ (16843009 * v263);
  v270 = 16843009 * LODWORD(STACK[0x6A70]);
  LODWORD(v197) = 16843009 * LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x6A40]) + 1;
  v271 = v257 - 1358525920;
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x69F0]) + 1;
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x6500]) ^ v218 ^ LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6428]) = LODWORD(STACK[0x6850]) ^ 0x3363C6F8;
  LODWORD(STACK[0x64F8]) = (_DWORD)v216;
  LODWORD(v263) = (v216 ^ v198) >> 4;
  LODWORD(STACK[0x65F0]) = (2 * v263) & 0x6C78DF0;
  LODWORD(STACK[0x63D0]) = v263 + 862177016;
  LODWORD(v216) = STACK[0x6960];
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x63E8]) = (2 * v236) & 0xE25C0B4;
  LODWORD(STACK[0x63E0]) = v236 + 118677594;
  LODWORD(STACK[0x6688]) = v197;
  LODWORD(STACK[0x69B0]) = v270;
  LODWORD(v197) = v197 ^ v270;
  LODWORD(STACK[0x6430]) = v197;
  v272 = v197 ^ 0x10101010;
  v273 = v242 ^ (v216 >> 8) ^ v197 ^ 0x10101010;
  v274 = LODWORD(STACK[0x6A80]) + 318;
  v275 = v245 - 1358525920;
  LODWORD(STACK[0x6990]) = v199 + 1;
  v276 = v260 & 0x200;
  LODWORD(STACK[0x65F8]) = v261;
  if ((v260 & 0x200 & (unsigned __int16)v261) != 0)
    v276 = -v276;
  LODWORD(STACK[0x64C0]) = v276;
  LODWORD(STACK[0x64C8]) = v260 & 0xFFFFFDFF;
  v277 = STACK[0x6750];
  LODWORD(STACK[0x6418]) = (2 * LODWORD(STACK[0x6750])) & 0xAD7BF950;
  LODWORD(STACK[0x6408]) = v277 - 692192088;
  v278 = v274 ^ LODWORD(STACK[0x6920]) ^ v269;
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6930]) ^ 0x7D8E5C8D;
  LODWORD(STACK[0x6438]) = v278;
  LODWORD(STACK[0x6450]) = v278 ^ 0xF00F1BE0;
  LODWORD(STACK[0x6A50]) = v268;
  LODWORD(STACK[0x6A40]) = v268 + 402096446;
  LODWORD(STACK[0x63F0]) = v238;
  LODWORD(STACK[0x6850]) = v258 ^ v238 ^ (32 * v238);
  LODWORD(STACK[0x6630]) = v273 ^ (v272 >> 8);
  v279 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A90])) - 4);
  LODWORD(STACK[0x6600]) = 2 * LODWORD(STACK[0x6A30]);
  LODWORD(STACK[0x6420]) = v271;
  LODWORD(STACK[0x63D8]) = v271 >> 1;
  LODWORD(STACK[0x63C0]) = LODWORD(STACK[0x6700]) << 8;
  LODWORD(STACK[0x6750]) = v272;
  LODWORD(STACK[0x69E0]) = v272 >> 4;
  LODWORD(STACK[0x6400]) = v275;
  LODWORD(STACK[0x63C8]) = v275 >> 1;
  LODWORD(STACK[0x6448]) = v247;
  LODWORD(STACK[0x63F8]) = v249;
  LODWORD(STACK[0x69F0]) = v247 ^ v249;
  return v279();
}

uint64_t sub_100AE6294@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;

  v5 = LODWORD(STACK[0x6A90]) ^ 0x45C3;
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6A50]) < 0x1B5AFAB;
  v6 = (3 * v5);
  STACK[0x6A80] = v6;
  v7 = (v6 ^ 0x6F89E34F0B2153D8) + a2 + ((unint64_t)(a2 < v3) << 32);
  v8 = (((*(_QWORD *)(STACK[0x6A60] + 8 * v7 - 0x7C4F1A792C3F4150) ^ 0x9604DC9822395B1ELL) + 0x4D19697ED1F3E922) ^ ((*(_QWORD *)(STACK[0x6A60] + 8 * v7 - 0x7C4F1A792C3F4150) ^ 0x144D5182237F6DC5) - 0x30AF1B9B2F4A2005) ^ ((*(_QWORD *)(STACK[0x6A60] + 8 * v7 - 0x7C4F1A792C3F4150) ^ 0xD71CD84F5413638ELL) + 0xC016DA9A7D9D1B2))
     * v4
     - 0x326BCBAD8945DEC9;
  v9 = ((2 * (v8 ^ 0x2762B1C4AA5A393ALL)) ^ 0xE06EDD7FBE96B78CLL) & (v8 ^ 0x2762B1C4AA5A393ALL) ^ (2
                                                                                                 * (v8 ^ 0x2762B1C4AA5A393ALL)) & 0xF0376EBFDF4B5BC6;
  v10 = (v8 ^ 0x87419F72605878FALL) & (2 * (v8 & 0xD755DF7B751162FCLL)) ^ v8 & 0xD755DF7B751162FCLL;
  v11 = v9 ^ 0x1011228041494842;
  v12 = (v9 ^ 0xE0264C3F9C021380) & (4 * v10) ^ v10;
  v13 = ((4 * v11) ^ 0xC0DDBAFF7D2D6F18) & v11 ^ (4 * v11) & 0xF0376EBFDF4B5BC4;
  v14 = (v13 ^ 0xC0152ABF5D094B00) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x30224400824210C6)) ^ 0x376EBFDF4B5BC60) & (v13 ^ 0x30224400824210C6) ^ (16 * (v13 ^ 0x30224400824210C6)) & 0xF0376EBFDF4B5BC0;
  v16 = (v15 ^ 0x366ABDD4011800) & (v14 << 8) ^ v14;
  v17 = (((v15 ^ 0xF00104020B4A4386) << 8) ^ 0x376EBFDF4B5BC600) & (v15 ^ 0xF00104020B4A4386) ^ ((v15 ^ 0xF00104020B4A4386) << 8) & 0xF0376EBFDF4B5B00;
  v18 = v8 ^ (2
            * (((v16 ^ 0xF0376EBFDF4B5BC6 ^ (v17 ^ 0x30262E9F4B4B0000) & (v16 << 16)) << 32) & 0x70376EBF00000000 ^ v16 ^ 0xF0376EBFDF4B5BC6 ^ (v17 ^ 0x30262E9F4B4B0000) & (v16 << 16) ^ (((v16 ^ 0xF0376EBFDF4B5BC6 ^ (v17 ^ 0x30262E9F4B4B0000) & (v16 << 16)) << 32) ^ 0x5F4B5BC600000000) & (((v17 ^ 0xC0114020940019C6) << 16) & 0x70376EBF00000000 ^ 0x100020B400000000 ^ (((v17 ^ 0xC0114020940019C6) << 16) ^ 0x6EBFDF4B00000000) & (v17 ^ 0xC0114020940019C6))));
  v19 = v7
      + 0x6EE1E6A62DAF5F74
      + (((v18 ^ v2 ^ 0x400FDF877AA9063CLL) + 0x58416FB453EE1DCDLL) ^ ((v18 ^ v2 ^ 0xC1F577833A558EB3)
                                                                     - 0x2644384FECED6ABCLL) ^ ((v18 ^ v2 ^ 0x16C73F0C8B7B5DFFLL)
                                                                                              + 0xE898F3FA23C4610));
  v20 = ((2 * (v19 ^ 0x8C4455BBA7F381BALL)) ^ 0x3CCAB6EADBE8D0B6) & (v19 ^ 0x8C4455BBA7F381BALL) ^ (2 * (v19 ^ 0x8C4455BBA7F381BALL)) & 0x1E655B756DF4685ALL;
  v21 = (v19 ^ 0x88044CAEA3F7C1F8) & (2 * (v19 & 0x92210ECECA07E9E1)) ^ v19 & 0x92210ECECA07E9E1;
  v22 = v20 ^ 0x225491524142849;
  v23 = (v20 ^ 0x1800126048204000) & (4 * v21) ^ v21;
  v24 = ((4 * v22) ^ 0x79956DD5B7D1A16CLL) & v22 ^ (4 * v22) & 0x1E655B756DF46858;
  v25 = (v24 ^ 0x1805495525D02040) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x660122048244813)) ^ 0xE655B756DF4685B0) & (v24 ^ 0x660122048244813) ^ (16 * (v24 ^ 0x660122048244813)) & 0x1E655B756DF46850;
  v27 = (v26 ^ 0x64513544D440000) & (v25 << 8) ^ v25;
  v28 = (((v26 ^ 0x1820482120B0684BLL) << 8) ^ 0x655B756DF4685B00) & (v26 ^ 0x1820482120B0684BLL) ^ ((v26 ^ 0x1820482120B0684BLL) << 8) & 0x1E655B756DF46800;
  v29 = v27 ^ 0x1E655B756DF4685BLL ^ (v28 ^ 0x441516564600000) & (v27 << 16);
  v30 = (v19 ^ (2
              * ((v29 << 32) & 0x1E655B7500000000 ^ v29 ^ ((v29 << 32) ^ 0x6DF4685B00000000) & (((v28 ^ 0x1A240A100994205BLL) << 16) & 0x1E655B7500000000 ^ 0x400120100000000 ^ (((v28 ^ 0x1A240A100994205BLL) << 16) ^ 0x5B756DF400000000) & (v28 ^ 0x1A240A100994205BLL))))) >> 32;
  v31 = v19
      - (((v30 ^ 0xA2B495A0E25702C4) - 0x20E5C88A79BD319DLL) ^ ((v30 ^ 0xDFE391C837F22253) - 0x5DB2CCE2AC18110ALL) ^ ((v30 ^ 0x7D57046863860811) + 0xF9A6BD0793C4B8))
      + 0x7A8AD50E104ADF4ELL;
  v32 = ((2 * (v31 ^ 0xE7F3BBC7145B296FLL)) ^ 0xE56ECEA33F518FB6) & (v31 ^ 0xE7F3BBC7145B296FLL) ^ (2 * (v31 ^ 0xE7F3BBC7145B296FLL)) & 0x72B767519FA8C7DALL;
  v33 = (v31 ^ 0xC5729AC603FBEC27) & (2 * (v31 & 0x9544DC968BF3EEB4)) ^ v31 & 0x9544DC968BF3EEB4;
  v34 = ((4 * (v32 ^ 0x1291215080A84049)) ^ 0xCADD9D467EA31F6CLL) & (v32 ^ 0x1291215080A84049) ^ (4 * (v32 ^ 0x1291215080A84049)) & 0x72B767519FA8C7D8;
  v35 = (v34 ^ 0x429505401EA00740) & (16 * ((v32 ^ 0x602646001F008790) & (4 * v33) ^ v33)) ^ (v32 ^ 0x602646001F008790) & (4 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x302262118108C093)) ^ 0x2B767519FA8C7DB0) & (v34 ^ 0x302262118108C093) ^ (16 * (v34 ^ 0x302262118108C093)) & 0x72B767519FA8C7D0;
  v37 = (v36 ^ 0x223665119A884500) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0x508102400520824BLL) << 8) ^ 0xB767519FA8C7DB00) & (v36 ^ 0x508102400520824BLL) ^ ((v36 ^ 0x508102400520824BLL) << 8) & 0x72B767519FA8C700;
  v39 = v37 ^ 0x72B767519FA8C7DBLL ^ (v38 ^ 0x3227411188800000) & (v37 << 16);
  v40 = (v31 ^ (2
              * ((v39 << 32) & 0x72B7675100000000 ^ v39 ^ ((v39 << 32) ^ 0x1FA8C7DB00000000) & (((v38 ^ 0x40902640172804DBLL) << 16) & 0x72B7675100000000 ^ 0x10A6605100000000 ^ (((v38 ^ 0x40902640172804DBLL) << 16) ^ 0x67519FA800000000) & (v38 ^ 0x40902640172804DBLL))))) >> 16;
  v41 = v31
      - 0x755C55D7078F668ALL
      + (((v40 ^ 0xA54FAFEFC293A0B9) - 0x556CCBE402B348AFLL) ^ ((v40 ^ 0x25A1D39AF24239E1) + 0x2A7D486ECD9D2E09) ^ ((v40 ^ 0x80EE291FAC462DFALL) - 0x70CD4D146C66C5ECLL));
  v42 = ((2 * (v41 ^ 0xD2AA77DC05B24B3)) ^ 0xEFDD896660C32A82) & (v41 ^ 0xD2AA77DC05B24B3) ^ (2
                                                                                                  * (v41 ^ 0xD2AA77DC05B24B3)) & 0xF7EEC4B330619540;
  v43 = (v41 ^ 0xF8A263ECE03A25F3) & (2 * (v41 & 0xFAC463CEF03AB1F2)) ^ v41 & 0xFAC463CEF03AB1F2;
  v44 = ((4 * (v42 ^ 0x1022449110209541)) ^ 0xDFBB12CCC1865504) & (v42 ^ 0x1022449110209541) ^ (4 * (v42 ^ 0x1022449110209541)) & 0xF7EEC4B330619540;
  v45 = (v42 ^ 0xE700802200410000) & (4 * v43) ^ v43;
  v46 = (v44 ^ 0xD7AA008000001500) & (16 * v45);
  v47 = ((16 * (v44 ^ 0x2044C43330618041)) ^ 0x7EEC4B3306195410) & (v44 ^ 0x2044C43330618041) ^ (16 * (v44 ^ 0x2044C43330618041)) & 0xF7EEC4B330619540;
  v48 = (v47 ^ 0x76EC403300011400) & ((v46 ^ v45) << 8) ^ v46 ^ v45;
  v49 = (((v47 ^ 0x8102848030608141) << 8) ^ 0xEEC4B33061954100) & (v47 ^ 0x8102848030608141) ^ ((v47 ^ 0x8102848030608141) << 8) & 0xF7EEC4B330619500;
  v50 = v48 ^ 0xF7EEC4B330619541 ^ (v49 ^ 0xE6C4803020010000) & (v48 << 16);
  v51 = v18 ^ 0xE4F57D43B9CDB907;
  v52 = (v41 ^ (2
              * ((v50 << 32) & 0x77EEC4B300000000 ^ v50 ^ ((v50 << 32) ^ 0x3061954100000000) & (((v49 ^ 0x112A448310609441) << 16) & 0x77EEC4B300000000 ^ 0x334CC49200000000 ^ (((v49 ^ 0x112A448310609441) << 16) ^ 0x44B3306100000000) & (v49 ^ 0x112A448310609441))))) >> 8;
  v53 = v41
      - (((v52 ^ 0xCAB7B1AF45BE85B7) + 0x273EFF56AC02D4DLL) ^ ((v52 ^ 0x2E73B10F10698F4BLL) - 0x194810AAC0E8D84FLL) ^ ((v52 ^ 0xE4B1D842FF47F367) + 0x2C758618D0395B9DLL))
      + 0x7FAFCBE8310B17B7;
  v54 = (v53 ^ 0x32105B9E47D8AEB2) & (2 * (v53 & 0x30101BC0571A88B2)) ^ v53 & 0x30101BC0571A88B2;
  v55 = ((2 * (v53 ^ 0x12105D1EE5FCAE96)) ^ 0x44008DBD65CC4C48) & (v53 ^ 0x12105D1EE5FCAE96) ^ (2 * (v53 ^ 0x12105D1EE5FCAE96)) & 0x220046DEB2E62624;
  v56 = ((4 * (v55 ^ 0x2200424292222224)) ^ 0x88011B7ACB989890) & (v55 ^ 0x2200424292222224) ^ (4 * (v55 ^ 0x2200424292222224)) & 0x220046DEB2E62624;
  v57 = (v56 ^ 0x25A82800000) & (16 * ((v55 ^ 0x2200044022C40424) & (4 * v54) ^ v54)) ^ (v55 ^ 0x2200044022C40424) & (4 * v54) ^ v54;
  v58 = ((16 * (v56 ^ 0x2200448430662624)) ^ 0x20046DEB2E626240) & (v56 ^ 0x2200448430662624) ^ (16 * (v56 ^ 0x2200448430662624)) & 0x220046DEB2E62620;
  v59 = (v58 ^ 0x200044CA22622200) & (v57 << 8) ^ v57;
  v60 = (((v58 ^ 0x200021490840424) << 8) ^ 0x46DEB2E6262400) & (v58 ^ 0x200021490840424) ^ ((v58 ^ 0x200021490840424) << 8) & 0x220046DEB2E62600;
  v61 = v59 ^ 0x220046DEB2E62624 ^ (v60 ^ 0x4692A2260000) & (v59 << 16);
  v62 = v53 ^ (2
             * ((v61 << 32) & 0x220046DE00000000 ^ v61 ^ ((v61 << 32) ^ 0x32E6262400000000) & (((v60 ^ 0x2200004C10C00224) << 16) & 0x220046DE00000000 ^ 0x2000441800000000 ^ (((v60 ^ 0x2200004C10C00224) << 16) ^ 0x46DEB2E600000000) & (v60 ^ 0x2200004C10C00224))));
  v63 = v62 ^ 0x66F9546EE6ADB7ADLL;
  LODWORD(v62) = a1 & (v62 >> 2) ^ 0x1980220F;
  v64 = v62 | 0x6B017D59;
  v65 = -1795259738 - (v62 | 0x94FE82A6);
  v66 = v7
      - 0x45C815486CF61731
      + (((v63 ^ v51 ^ 0x7D5E76BF806190CDLL) - 0x7D5E76BF806190CDLL) ^ ((v63 ^ v51 ^ 0xCB4ECF01A5660AE5)
                                                                      + 0x34B130FE5A99F51BLL) ^ ((v63 ^ v51 ^ 0x93319DEE83368508)
                                                                                               + 0x6CCE62117CC97AF8));
  v67 = ((2 * (v66 ^ 0xD0EB4047782FF4DLL)) ^ 0xECA3C49B343B62D4) & (v66 ^ 0xD0EB4047782FF4DLL) ^ (2
                                                                                                  * (v66 ^ 0xD0EB4047782FF4DLL)) & 0xF651E24D9A1DB16ALL;
  v68 = (v66 ^ 0xFB1E1405ED9E6F07) & (2 * (v66 & 0xFB5F5649ED9F4E27)) ^ v66 & 0xFB5F5649ED9F4E27;
  v69 = ((4 * (v67 ^ 0x125022448A04912ALL)) ^ 0xD94789366876C5A8) & (v67 ^ 0x125022448A04912ALL) ^ (4 * (v67 ^ 0x125022448A04912ALL)) & 0xF651E24D9A1DB168;
  v70 = (v67 ^ 0xE401C00910192000) & (4 * v68) ^ v68;
  v71 = (v69 ^ 0xD041800408148120) & (16 * v70);
  v72 = ((16 * (v69 ^ 0x2610624992093042)) ^ 0x651E24D9A1DB16A0) & (v69 ^ 0x2610624992093042) ^ (16 * (v69 ^ 0x2610624992093042)) & 0xF651E24D9A1DB160;
  v73 = (v72 ^ 0x6410204980191000) & ((v71 ^ v70) << 8) ^ v71 ^ v70;
  v74 = (((v72 ^ 0x9241C2041A04A14ALL) << 8) ^ 0x51E24D9A1DB16A00) & (v72 ^ 0x9241C2041A04A14ALL) ^ ((v72 ^ 0x9241C2041A04A14ALL) << 8) & 0xF651E24D9A1DB100;
  v75 = v73 ^ 0xF651E24D9A1DB16ALL ^ (v74 ^ 0x5040400818110000) & (v73 << 16);
  v76 = (v66 ^ (2
              * ((v75 << 32) & 0x7651E24D00000000 ^ v75 ^ ((v75 << 32) ^ 0x1A1DB16A00000000) & (((v74 ^ 0xA611A245820C916ALL) << 16) & 0x7651E24D00000000 ^ 0x1410604000000000 ^ (((v74 ^ 0xA611A245820C916ALL) << 16) ^ 0x624D9A1D00000000) & (v74 ^ 0xA611A245820C916ALL))))) >> 32;
  v77 = v66
      - (((v76 ^ 0x1DB2D71C66BC231ALL) + 0x7B7F252A5F182887) ^ ((v76 ^ 0xBE85C2D7C0A0E793) - 0x27B7CF1E06FB13F0) ^ ((v76 ^ 0xA33715CB95C316CBLL) - 0x3A0518025398E2A8));
  v78 = ((v77 - 0x7A58D10D68CB7D2ALL) ^ 0xDCB495C868E605A4) & (2
                                                               * ((v77 - 0x7A58D10D68CB7D2ALL) & 0xDC86198D60E6A530)) ^ (v77 - 0x7A58D10D68CB7D2ALL) & 0xDC86198D60E6A530;
  v79 = ((2 * ((v77 - 0x7A58D10D68CB7D2ALL) ^ 0xD5B486C8A82A07A4)) ^ 0x12653E8B91994528) & ((v77
                                                                                               - 0x7A58D10D68CB7D2ALL) ^ 0xD5B486C8A82A07A4) ^ (2 * ((v77 - 0x7A58D10D68CB7D2ALL) ^ 0xD5B486C8A82A07A4)) & 0x9329F45C8CCA294;
  v80 = v79 ^ 0x91281444844A294;
  v81 = (v79 ^ 0x200E0180880000) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0x24CA7D1723328A50) & v80 ^ (4 * v80) & 0x9329F45C8CCA294;
  v83 = (v82 ^ 0x21D0500008200) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x9308240C8CC2084)) ^ 0x9329F45C8CCA2940) & (v82 ^ 0x9308240C8CC2084) ^ (16 * (v82 ^ 0x9308240C8CC2084)) & 0x9329F45C8CCA290;
  v85 = (v84 ^ 0x120944488C82000) & (v83 << 8) ^ v83;
  v86 = (((v84 ^ 0x8120B0140048294) << 8) ^ 0x329F45C8CCA29400) & (v84 ^ 0x8120B0140048294) ^ ((v84 ^ 0x8120B0140048294) << 8) & 0x9329F45C8CCA200;
  v87 = ((v77 - 0x7A58D10D68CB7D2ALL) ^ (2
                                       * (((v85 ^ 0x9329F45C8CCA294 ^ (v86 ^ 0x120540C8800000) & (v85 << 16)) << 32) & 0x9329F4500000000 ^ v85 ^ 0x9329F45C8CCA294 ^ (v86 ^ 0x120540C8800000) & (v85 << 16) ^ (((v85 ^ 0x9329F45C8CCA294 ^ (v86 ^ 0x120540C8800000) & (v85 << 16)) << 32) ^ 0x48CCA29400000000) & (((v86 ^ 0x9209A05004C2294) << 16) & 0x9329F4500000000 ^ 0x32170100000000 ^ (((v86 ^ 0x9209A05004C2294) << 16) ^ 0x1F45C8CC00000000) & (v86 ^ 0x9209A05004C2294))))) >> 16;
  v88 = v77
      - 0x43CFC954BC88BC29
      + (((v87 ^ 0xEAF6D331E983A485) + 0xE90DD3B2CE1B7AFLL) ^ ((v87 ^ 0xA8621028E550F1FALL) + 0x4C041E222032E2D2) ^ ((v87 ^ 0x42941DFB2FDDA400) - 0x590DEC0E154048D4));
  v89 = ((2 * (v88 ^ 0x9897ACE3D8868206)) ^ 0xB203D8102D6307B8) & (v88 ^ 0x9897ACE3D8868206) ^ (2 * (v88 ^ 0x9897ACE3D8868206)) & 0x5901EC0816B183DCLL;
  v90 = (v88 ^ 0x99972CE3CCA68192) & (2 * (v88 & 0xC19640EBCE3701DALL)) ^ v88 & 0xC19640EBCE3701DALL;
  v91 = ((4 * (v89 ^ 0x4900240812908044)) ^ 0x6407B0205AC60F70) & (v89 ^ 0x4900240812908044) ^ (4 * (v89 ^ 0x4900240812908044)) & 0x5901EC0816B183DCLL;
  v92 = (v89 ^ 0x1000000200398) & (4 * v90) ^ v90;
  v93 = (v91 ^ 0x4001A00012800340) & (16 * v92);
  v94 = ((16 * (v91 ^ 0x19004C080431808CLL)) ^ 0x901EC0816B183DC0) & (v91 ^ 0x19004C080431808CLL) ^ (16 * (v91 ^ 0x19004C080431808CLL)) & 0x5901EC0816B183D0;
  v95 = (v94 ^ 0x1000C00002100100) & ((v93 ^ v92) << 8) ^ v93 ^ v92;
  v96 = (((v94 ^ 0x49012C0814A1821CLL) << 8) ^ 0x1EC0816B183DC00) & (v94 ^ 0x49012C0814A1821CLL) ^ ((v94 ^ 0x49012C0814A1821CLL) << 8) & 0x5901EC0816B18300;
  v97 = v95 ^ 0x5901EC0816B183DCLL ^ (v96 ^ 0x100080010810000) & (v95 << 16);
  v98 = ((2 * ((v65 + v64) ^ 0xEF0B6F58)) | 0x58990B3C) - ((v65 + v64) ^ 0xEF0B6F58) + 1404271202;
  v99 = (v88 ^ (2
              * ((v97 << 32) & 0x5901EC0800000000 ^ v97 ^ ((v97 << 32) ^ 0x16B183DC00000000) & (((v96 ^ 0x5801E408063003DCLL) << 16) & 0x5901EC0800000000 ^ 0x1101E80800000000 ^ (((v96 ^ 0x5801E408063003DCLL) << 16) ^ 0x6C0816B100000000) & (v96 ^ 0x5801E408063003DCLL))))) >> 8;
  v100 = v88
       - (((v99 ^ 0x575AD11E78856C2CLL) - 0x6EFB63348935B38CLL) ^ ((v99 ^ 0xFFF38E6CF960852DLL) + 0x39ADC3B9F72FA573) ^ ((v99 ^ 0xA8FAC9EA6A06BD07) + 0x6EA4843F64499D59))
       + 0x14178617F323DD78;
  v101 = (v100 ^ 0x5FC6D362C83AB19ALL) & (2 * (v100 & 0x5FD69342D2BC35D2)) ^ v100 & 0x5FD69342D2BC35D2;
  v102 = ((2 * (v100 ^ 0x67EAD3626962D21ELL)) ^ 0x7078804177BDCF98) & (v100 ^ 0x67EAD3626962D21ELL) ^ (2 * (v100 ^ 0x67EAD3626962D21ELL)) & 0x383C4020BBDEE7CCLL;
  v103 = (v102 ^ 0x303800201392C78CLL) & (4 * v101) ^ v101;
  v104 = ((4 * (v102 ^ 0x804402088422044)) ^ 0xE0F10082EF7B9F30) & (v102 ^ 0x804402088422044) ^ (4 * (v102 ^ 0x804402088422044)) & 0x383C4020BBDEE7CCLL;
  v105 = (v104 ^ 0x20300000AB5A8700) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x180C4020108460CCLL)) ^ 0x83C4020BBDEE7CC0) & (v104 ^ 0x180C4020108460CCLL) ^ (16 * (v104 ^ 0x180C4020108460CCLL)) & 0x383C4020BBDEE7C0;
  v107 = (((v106 ^ 0x383840200210830CLL) << 8) ^ 0x3C4020BBDEE7CC00) & (v106 ^ 0x383840200210830CLL) ^ ((v106 ^ 0x383840200210830CLL) << 8) & 0x383C4020BBDEE700;
  v108 = (v106 ^ 0x40000B9CE6400) & (v105 << 8) ^ v105 ^ 0x383C4020BBDEE7CCLL ^ (v107 ^ 0x380000209AC60000) & (((v106 ^ 0x40000B9CE6400) & (v105 << 8) ^ v105) << 16);
  v109 = v100 ^ (2
               * ((v108 << 32) & 0x383C402000000000 ^ v108 ^ ((v108 << 32) ^ 0x3BDEE7CC00000000) & (((v107 ^ 0x3C4000211823CCLL) << 16) & 0x383C402000000000 ^ 0x381C402000000000 ^ (((v107 ^ 0x3C4000211823CCLL) << 16) ^ 0x4020BBDE00000000) & (v107 ^ 0x3C4000211823CCLL))));
  v110 = v109 ^ 0xD87D913DE5A0692;
  v109 >>= 2;
  v111 = v109 & 0x1A12B06;
  v112 = v109 & 0x38001089 ^ 0x54148089;
  v113 = v7
       + 0x2F6988273F7B6BD9
       + (((v110 ^ v51 ^ 0xF6C343190590858ALL) + 0x93CBCE6FA6F7A76) ^ ((v110 ^ v51 ^ 0x2502DE191A53DE53)
                                                                       - 0x2502DE191A53DE53) ^ ((v110 ^ v51 ^ 0xF2183D5B16D2CB76)
                                                                                                + 0xDE7C2A4E92D348ALL));
  v114 = (v113 ^ 0xAD7B6F033CFBAACLL) & (2 * (v113 & 0x82E634E4A40E3CACLL)) ^ v113 & 0x82E634E4A40E3CACLL;
  v115 = ((2 * (v113 ^ 0xFD3F6F173D7C2E4)) ^ 0x1A6B842BAFB3FC90) & (v113 ^ 0xFD3F6F173D7C2E4) ^ (2 * (v113 ^ 0xFD3F6F173D7C2E4)) & 0x8D35C215D7D9FE48;
  v116 = v115 ^ 0x8514421450480248;
  v117 = (v115 ^ 0x82180018011F400) & (4 * v114) ^ v114;
  v118 = ((4 * v116) ^ 0x34D708575F67F920) & v116 ^ (4 * v116) & 0x8D35C215D7D9FE48;
  v119 = ((16 * (v118 ^ 0x8920C20080980648)) ^ 0xD35C215D7D9FE480) & (v118 ^ 0x8920C20080980648) ^ (16 * (v118 ^ 0x8920C20080980648)) & 0x8D35C215D7D9FE40;
  v120 = (v119 ^ 0x811400155599E400) & (((v118 ^ 0x41500155741F800) & (16 * v117) ^ v117) << 8) ^ (v118 ^ 0x41500155741F800) & (16 * v117) ^ v117;
  v121 = (((v119 ^ 0xC21C20082401A48) << 8) ^ 0x35C215D7D9FE4800) & (v119 ^ 0xC21C20082401A48) ^ ((v119 ^ 0xC21C20082401A48) << 8) & 0x8D35C215D7D9FE00;
  v122 = v120 ^ 0x8D35C215D7D9FE48 ^ (v121 ^ 0x5000015D1D80000) & (v120 << 16);
  v123 = v113 ^ (2
               * ((v122 << 32) & 0xD35C21500000000 ^ v122 ^ ((v122 << 32) ^ 0x57D9FE4800000000) & (((v121 ^ 0x8835C2000601B648) << 16) & 0xD35C21500000000 ^ 0xD20000400000000 ^ (((v121 ^ 0x8835C2000601B648) << 16) ^ 0x4215D7D900000000) & (v121 ^ 0x8835C2000601B648))));
  v124 = v113
       - (((HIDWORD(v123) ^ 0xCC52B48416371ACALL) - 0x27A8EFF9702F48DLL) ^ ((HIDWORD(v123) ^ 0x49BA5CDFB606D01BLL)
                                                                          + 0x786D995BC8CCC1A4) ^ ((HIDWORD(v123) ^ 0x85E8E85B329FFE1ELL) - 0x4BC0D220B3AA1059))
       - 0x1D13B92C63A7C3EELL;
  v125 = (v124 ^ 0x91C1BB41E6DA06D3) & (2 * (v124 & 0xD1D1B395F41A2612)) ^ v124 & 0xD1D1B395F41A2612;
  v126 = ((2 * (v124 ^ 0x9261BD404ECA42F7)) ^ 0x87601DAB75A0C9CALL) & (v124 ^ 0x9261BD404ECA42F7) ^ (2 * (v124 ^ 0x9261BD404ECA42F7)) & 0x43B00ED5BAD064E4;
  v127 = v126 ^ 0x409002548A502425;
  v128 = (v126 ^ 0x3000C81308000C0) & (4 * v125) ^ v125;
  v129 = ((4 * v127) ^ 0xEC03B56EB419394) & v127 ^ (4 * v127) & 0x43B00ED5BAD064E4;
  v130 = (v129 ^ 0x2800A54AA400080) & (16 * v128) ^ v128;
  v131 = ((16 * (v129 ^ 0x4130048110906461)) ^ 0x3B00ED5BAD064E50) & (v129 ^ 0x4130048110906461) ^ (16 * (v129 ^ 0x4130048110906461)) & 0x43B00ED5BAD064E0;
  v132 = (v131 ^ 0x3000C51A8004400) & (v130 << 8) ^ v130;
  v133 = (((v131 ^ 0x40B0028412D020A5) << 8) ^ 0xB00ED5BAD064E500) & (v131 ^ 0x40B0028412D020A5) ^ ((v131 ^ 0x40B0028412D020A5) << 8) & 0x43B00ED5BAD06400;
  v134 = v132 ^ 0x43B00ED5BAD064E5 ^ (v133 ^ 0x49090400000) & (v132 << 16);
  v135 = v124 ^ (2
               * ((v134 << 32) & 0x43B00ED500000000 ^ v134 ^ ((v134 << 32) ^ 0x3AD064E500000000) & (((v133 ^ 0x43B00A452A9000E5) << 16) & 0x43B00ED500000000 ^ 0x4120040500000000 ^ (((v133 ^ 0x43B00A452A9000E5) << 16) ^ 0xED5BAD000000000) & (v133 ^ 0x43B00A452A9000E5))));
  v136 = v124
       - 0x36EEA7239E2E24F4
       + ((((v135 >> 16) ^ 0xC07976AA19A150FBLL) - 0x694A3F40A9E76B6) ^ (((v135 >> 16) ^ 0xEB7E80AA929963BALL)
                                                                         - 0x2D9355F481A645F7) ^ (((v135 >> 16) ^ 0x2B07A5912C8CB2FBLL)
                                                                                                  + 0x12158F30C04C6B4ALL));
  v137 = (v136 ^ 0xAF89D1802683F0F8) & (2 * (v136 & 0xCFADE18946D3F2FDLL)) ^ v136 & 0xCFADE18946D3F2FDLL;
  v138 = ((2 * (v136 ^ 0x25D2518027A154CALL)) ^ 0xD4FF6012C2E54C6ELL) & (v136 ^ 0x25D2518027A154CALL) ^ (2 * (v136 ^ 0x25D2518027A154CALL)) & 0xEA7FB0096172A636;
  v139 = ((4 * (v138 ^ 0x2A0090092112A211)) ^ 0xA9FEC02585CA98DCLL) & (v138 ^ 0x2A0090092112A211) ^ (4 * (v138 ^ 0x2A0090092112A211)) & 0xEA7FB0096172A634;
  v140 = (v138 ^ 0x407F000000400424) & (4 * v137) ^ v137;
  v141 = (v139 ^ 0xA87E800101428010) & (16 * v140);
  v142 = ((16 * (v139 ^ 0x4201300860302623)) ^ 0xA7FB0096172A6370) & (v139 ^ 0x4201300860302623) ^ (16 * (v139 ^ 0x4201300860302623)) & 0xEA7FB0096172A630;
  v143 = (v142 ^ 0xA27B000001222200) & ((v141 ^ v140) << 8) ^ v141 ^ v140;
  v144 = (((v142 ^ 0x4804B00960508407) << 8) ^ 0x7FB0096172A63700) & (v142 ^ 0x4804B00960508407) ^ ((v142 ^ 0x4804B00960508407) << 8) & 0xEA7FB0096172A600;
  v145 = v143 ^ 0xEA7FB0096172A637 ^ (v144 ^ 0x6A30000160220000) & (v143 << 16);
  v146 = (v136 ^ (2
                * ((v145 << 32) & 0x6A7FB00900000000 ^ v145 ^ ((v145 << 32) ^ 0x6172A63700000000) & (((v144 ^ 0x804FB00801508037) << 16) & 0x6A7FB00900000000 ^ 0x4A76900900000000 ^ (((v144 ^ 0x804FB00801508037) << 16) ^ 0x3009617200000000) & (v144 ^ 0x804FB00801508037))))) >> 8;
  LODWORD(v136) = v136
                - (((v146 ^ 0xA909855E) - 661109970) ^ ((v146 ^ 0x3C948BD0) + 1292193188) ^ ((v146 ^ 0xC193830)
                                                                                           + 2106129988))
                + 1538437523;
  v147 = (v112 + (v111 ^ 0x1432A13) - 1) ^ v110;
  LODWORD(v144) = (v136 ^ 0xD3B7B336) & (2 * (v136 & 0xD3373238)) ^ v136 & 0xD3373238;
  LODWORD(v146) = ((2 * (v136 ^ 0x73B99316)) ^ 0x411D425C) & (v136 ^ 0x73B99316) ^ (2 * (v136 ^ 0x73B99316)) & 0xA08EA12E;
  LODWORD(v142) = v146 ^ 0xA082A122;
  LODWORD(v146) = (v146 ^ 0xC0000) & (4 * v144) ^ v144;
  LODWORD(v144) = ((4 * v142) ^ 0x823A84B8) & v142 ^ (4 * v142) & 0xA08EA12C;
  LODWORD(v146) = (v144 ^ 0x800A8020) & (16 * v146) ^ v146;
  LODWORD(v144) = ((16 * (v144 ^ 0x20842106)) ^ 0x8EA12E0) & (v144 ^ 0x20842106) ^ (16 * (v144 ^ 0x20842106)) & 0xA08EA120;
  v148 = v136 ^ (2
               * ((v144 ^ 0x8A0000) & ((_DWORD)v146 << 8) ^ v146 ^ 0xA08EA12E ^ ((((v144 ^ 0xA004A10E) << 8) ^ 0x8EA12E00) & (v144 ^ 0xA004A10E) ^ ((v144 ^ 0xA004A10E) << 8) & 0xA08EA100 ^ 0x80800000) & (((v144 ^ 0x8A0000) & ((_DWORD)v146 << 8) ^ v146) << 16)));
  v149 = a2 - 12151982;
  LODWORD(v41) = a2 - 12151982 < 0x19AD30E9;
  v150 = STACK[0x6A70];
  if (LODWORD(STACK[0x6A70]) == v41)
    v150 = v149 < LODWORD(STACK[0x6A40]);
  v151 = a1 & (((((v148 ^ 0x14A42652) + 960136290) ^ ((v148 ^ 0x810476E9) - 1399139109) ^ ((v148 ^ 0x78A20DF) + 705987309))
              + 1380436670) >> 2) ^ 0x8212186;
  LODWORD(STACK[0x6AC0]) ^= v63 ^ v98 ^ v147 ^ 0xCF871124 ^ (-766946219 - (v151 | 0xD2495455) + (v151 | 0x2DB6ABAA)) ^ ((((v148 ^ 0x14A42652) + 960136290) ^ ((v148 ^ 0x810476E9) - 1399139109) ^ ((v148 ^ 0x78A20DF) + 705987309)) + 1380436670);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5777 * (v150 ^ 1)) ^ LODWORD(STACK[0x6A90]))) - 4))();
}

uint64_t sub_100AE91FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x6A30]) = (LODWORD(STACK[0x6600]) | 0x65636AAC) - LODWORD(STACK[0x6A30]) - 850507094;
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6618]) ^ 0xA1FA4A10;
  LODWORD(STACK[0x63D8]) = LODWORD(STACK[0x6420]) ^ 0x6C2A4008 ^ STACK[0x63D8] & 0x5F805ECA;
  LODWORD(STACK[0x6420]) = LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x64F8]) ^ (LODWORD(STACK[0x63D0]) - LODWORD(STACK[0x65F0]));
  v6 = STACK[0x6500];
  LODWORD(STACK[0x6618]) = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6500]) ^ 0x734D2791;
  LODWORD(STACK[0x65F0]) = 209424499 * LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6980]) = LODWORD(STACK[0x63E0]) - LODWORD(STACK[0x63E8]);
  v7 = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x6428]) = LODWORD(STACK[0x6428]) - v6 + LODWORD(STACK[0x66F8]);
  LODWORD(STACK[0x6620]) = v7 ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x6770]) ^ (LODWORD(STACK[0x6770]) << 8) ^ 0xE169EFF6;
  LODWORD(STACK[0x6840]) = LODWORD(STACK[0x6850]) ^ 0x30F85E8C;
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x6400]) ^ STACK[0x63C8] & 0x5F805ECA ^ 0x93D5BFF7;
  v8 = LODWORD(STACK[0x64C0]) + (LODWORD(STACK[0x65F8]) ^ 0x8FA1494D);
  LODWORD(STACK[0x6418]) = LODWORD(STACK[0x6408]) - LODWORD(STACK[0x6418]);
  LODWORD(STACK[0x6628]) = LODWORD(STACK[0x6688]) ^ 0x4488DC81;
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x64C8]) ^ 0xA7EC3C0F ^ v8;
  v9 = STACK[0x6950];
  v10 = (LODWORD(STACK[0x6950]) ^ 0x62BDB938) - 28991082;
  STACK[0x6A50] = STACK[0xDA80];
  LODWORD(STACK[0x6A90]) = (((v9 ^ 0xE2D68974) + 2116981210) ^ ((v9 ^ 0x9FFBD1E1) + 50579789) ^ v10) - 362423380;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * (int)STACK[0x6A80]))(a1, a2, a3, a4, a5, a6, 1842271405);
}

uint64_t sub_100AE95C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  int v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  int v157;
  int v158;

  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6A90]) < a7;
  v11 = STACK[0x6A80] + 358;
  v12 = (v10 | ((unint64_t)(v10 < v8) << 32)) + 0x1A245FB57F14C235;
  v13 = *(_QWORD *)(STACK[0x6A50] + 8 * v12 + 0x2EDD025334250198);
  STACK[0x6A40] = v11;
  v14 = (((v13 ^ 0xFFF842F63B20A5AELL) + 0x4EBE9EA2AB4FEFCCLL) ^ ((v11 ^ 0xAE3E0526AC1E6CF2 ^ v13)
                                                                + 0x1F78D9723C713C28) ^ ((v13 ^ 0x4931285C26B86B9)
                                                                                         - 0x4A2A312EADFB3323))
      * v9
      + 0x6ABFE6C72ED9E5B2;
  v15 = (v14 ^ 0x35BE096679A40006) & (2 * (v14 & 0xB83E497779A42257)) ^ v14 & 0xB83E497779A42257;
  v16 = ((2 * (v14 ^ 0x45D61BCABBAC0022)) ^ 0xFBD0A57B841044EALL) & (v14 ^ 0x45D61BCABBAC0022) ^ (2 * (v14 ^ 0x45D61BCABBAC0022)) & 0xFDE852BDC2082274;
  v17 = v16 ^ 0x428528442082215;
  v18 = (v16 ^ 0xE1C0003980000060) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0xF7A14AF7082089D4) & v17 ^ (4 * v17) & 0xFDE852BDC2082274;
  v20 = (v19 ^ 0xF5A042B500000050) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x8481008C2082221)) ^ 0xDE852BDC20822750) & (v19 ^ 0x8481008C2082221) ^ (16 * (v19 ^ 0x8481008C2082221)) & 0xFDE852BDC2082270;
  v22 = (v21 ^ 0xDC80029C00002200) & (v20 << 8) ^ v20;
  v23 = (((v21 ^ 0x21685021C2080025) << 8) ^ 0xE852BDC208227500) & (v21 ^ 0x21685021C2080025) ^ ((v21 ^ 0x21685021C2080025) << 8) & 0xFDE852BDC2082200;
  v24 = v14 ^ (2
             * (((v22 ^ 0xFDE852BDC2082275 ^ (v23 ^ 0xE840108000000000) & (v22 << 16)) << 32) & 0x7DE852BD00000000 ^ v22 ^ 0xFDE852BDC2082275 ^ (v23 ^ 0xE840108000000000) & (v22 << 16) ^ (((v22 ^ 0xFDE852BDC2082275 ^ (v23 ^ 0xE840108000000000) & (v22 << 16)) << 32) ^ 0x4208227500000000) & (((v23 ^ 0x15A8423DC2080275) << 16) & 0x7DE852BD00000000 ^ 0x2D4010B500000000 ^ (((v23 ^ 0x15A8423DC2080275) << 16) ^ 0x52BDC20800000000) & (v23 ^ 0x15A8423DC2080275))));
  v25 = (v10 | ((unint64_t)(v10 < v8) << 32))
      + 0x4379E5A47107E0C0
      + (((v24 ^ v7 ^ 0x11EEB36FD8E69D48) - 0x17ECA4AD07C71663) ^ ((v24 ^ v7 ^ 0x693FC2854D246C2)
                                                                     - 0x91EBEA8BF3CDE9) ^ ((v24 ^ v7 ^ 0xD483A7217180BD37)
                                                                                            + 0x2D7E4F1C515EC9E4));
  v26 = (v25 ^ 0x986A5DFF47864FBCLL) & (2 * (v25 & 0x828319FF97276F3ELL)) ^ v25 & 0x828319FF97276F3ELL;
  v27 = ((2 * (v25 ^ 0x986C6CBE478C458CLL)) ^ 0x35DEEA83A1565564) & (v25 ^ 0x986C6CBE478C458CLL) ^ (2 * (v25 ^ 0x986C6CBE478C458CLL)) & 0x1AEF7541D0AB2AB2;
  v28 = v27 ^ 0xA21154050A92A92;
  v29 = (v27 ^ 0x100C600080020020) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ 0x6BBDD50742ACAAC8) & v28 ^ (4 * v28) & 0x1AEF7541D0AB2AB0;
  v31 = (v30 ^ 0xAAD550140A82A80) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x1042204090030032)) ^ 0xAEF7541D0AB2AB20) & (v30 ^ 0x1042204090030032) ^ (16 * (v30 ^ 0x1042204090030032)) & 0x1AEF7541D0AB2AB0;
  v33 = (v32 ^ 0xAE7540100A22A00) & (v31 << 8) ^ v31;
  v34 = (((v32 ^ 0x10082140D0090092) << 8) ^ 0xEF7541D0AB2AB200) & (v32 ^ 0x10082140D0090092) ^ ((v32 ^ 0x10082140D0090092) << 8) & 0x1AEF7541D0AB2A00;
  v35 = v33 ^ 0x1AEF7541D0AB2AB2 ^ (v34 ^ 0xA654140802A0000) & (v33 << 16);
  v36 = (v25 ^ (2
              * ((v35 << 32) & 0x1AEF754100000000 ^ v35 ^ ((v35 << 32) ^ 0x50AB2AB200000000) & (((v34 ^ 0x108A3401508108B2) << 16) & 0x1AEF754100000000 ^ 0xAAE254000000000 ^ (((v34 ^ 0x108A3401508108B2) << 16) ^ 0x7541D0AB00000000) & (v34 ^ 0x108A3401508108B2))))) >> 32;
  v37 = v25
      - (((v36 ^ 0x363FEC4D169B58BELL) - 0x29C15C7F8D758005) ^ ((v36 ^ 0xEC7B8B7B3027115) - 0x1139088528ECA9AELL) ^ ((v36 ^ 0x38F854FA33929AD7) - 0x2706E4C8A87C426CLL))
      + 0x635E91264B1439CFLL;
  v38 = (v37 ^ 0xFE3594263C09CD81) & (2 * (v37 & 0xFF25D8A73E2DC9A8)) ^ v37 & 0xFF25D8A73E2DC9A8;
  v39 = ((2 * (v37 ^ 0xC474B52E00415F91)) ^ 0x76A2DB127CD92C72) & (v37 ^ 0xC474B52E00415F91) ^ (2 * (v37 ^ 0xC474B52E00415F91)) & 0x3B516D893E6C9638;
  v40 = v39 ^ 0x951248902249209;
  v41 = (v39 ^ 0x3000410038480420) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0xED45B624F9B258E4) & v40 ^ (4 * v40) & 0x3B516D893E6C9638;
  v43 = ((16 * (v42 ^ 0x12104989064C8619)) ^ 0xB516D893E6C96390) & (v42 ^ 0x12104989064C8619) ^ (16 * (v42 ^ 0x12104989064C8619)) & 0x3B516D893E6C9630;
  v44 = (v43 ^ 0x3110488126480200) & (((v42 ^ 0x2941240038201020) & (16 * v41) ^ v41) << 8) ^ (v42 ^ 0x2941240038201020) & (16 * v41) ^ v41;
  v45 = (((v43 ^ 0xA41250818249429) << 8) ^ 0x516D893E6C963900) & (v43 ^ 0xA41250818249429) ^ ((v43 ^ 0xA41250818249429) << 8) & 0x3B516D893E6C9600;
  v46 = v44 ^ 0x3B516D893E6C9639 ^ (v45 ^ 0x114109082C040000) & (v44 << 16);
  v47 = v37 ^ (2
             * ((v46 << 32) & 0x3B516D8900000000 ^ v46 ^ ((v46 << 32) ^ 0x3E6C963900000000) & (((v45 ^ 0x2A10648112688639) << 16) & 0x3B516D8900000000 ^ 0x1250418100000000 ^ (((v45 ^ 0x2A10648112688639) << 16) ^ 0x6D893E6C00000000) & (v45 ^ 0x2A10648112688639))));
  v48 = v37
      + 0x1AE715576398EBDELL
      + ((((v47 >> 16) ^ 0x129705982A9F7B90) + 0x1E93F9F46EA60FC1) ^ (((v47 >> 16) ^ 0x8573154360542D2FLL)
                                                                        - 0x768816D0DB92A680) ^ (((v47 >> 16) ^ 0x97E4EDDC416C144BLL)
                                                                                                 - 0x641FEE4FFAAA9FE4));
  v49 = (v48 ^ 0x93BAF5F6A0F636A1) & (2 * (v48 & 0xD83AC1E48AF6A725)) ^ v48 & 0xD83AC1E48AF6A725;
  v50 = ((2 * (v48 ^ 0xA38E74FFB1BF74ABLL)) ^ 0xF7696A367693A71CLL) & (v48 ^ 0xA38E74FFB1BF74ABLL) ^ (2 * (v48 ^ 0xA38E74FFB1BF74ABLL)) & 0x7BB4B51B3B49D38ELL;
  v51 = v50 ^ 0x894950909485082;
  v52 = (v50 ^ 0x612000123201810CLL) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xEED2D46CED274E38) & v51 ^ (4 * v51) & 0x7BB4B51B3B49D38CLL;
  v54 = ((16 * (v53 ^ 0x1124211312489186)) ^ 0xBB4B51B3B49D38E0) & (v53 ^ 0x1124211312489186) ^ (16 * (v53 ^ 0x1124211312489186)) & 0x7BB4B51B3B49D380;
  v55 = (v54 ^ 0x3B00111330091000) & (((v53 ^ 0x6A90940829014200) & (16 * v52) ^ v52) << 8) ^ (v53 ^ 0x6A90940829014200) & (16 * v52) ^ v52;
  v56 = (((v54 ^ 0x40B4A4080B40C30ELL) << 8) ^ 0xB4B51B3B49D38E00) & (v54 ^ 0x40B4A4080B40C30ELL) ^ ((v54 ^ 0x40B4A4080B40C30ELL) << 8) & 0x7BB4B51B3B49D300;
  v57 = v55 ^ 0x7BB4B51B3B49D38ELL ^ (v56 ^ 0x30B4111B09410000) & (v55 << 16);
  v58 = (v48 ^ (2
              * ((v57 << 32) & 0x7BB4B51B00000000 ^ v57 ^ ((v57 << 32) ^ 0x3B49D38E00000000) & (((v56 ^ 0x4B00A4003208518ELL) << 16) & 0x7BB4B51B00000000 ^ 0x4AA4841200000000 ^ (((v56 ^ 0x4B00A4003208518ELL) << 16) ^ 0x351B3B4900000000) & (v56 ^ 0x4B00A4003208518ELL))))) >> 8;
  v59 = v48
      - (((v58 ^ 0x96EC30E036827CBALL) + 0x61EA8ADB196DEE44) ^ ((v58 ^ 0x30E43C25EAD529DELL) - 0x381D79E13AC544D8) ^ ((v58 ^ 0xA6515E4C1AAB3064) + 0x5157E4773544A29ELL))
      + 0x18357DDEA3E7C84BLL;
  v60 = (v59 ^ 0x23AF85D1E21E6BE3) & (2 * (v59 & 0xA3AF29D9E21F73EALL)) ^ v59 & 0xA3AF29D9E21F73EALL;
  v61 = ((2 * (v59 ^ 0x63B1C453A630A877)) ^ 0x803DDB14885FB73ALL) & (v59 ^ 0x63B1C453A630A877) ^ (2 * (v59 ^ 0x63B1C453A630A877)) & 0xC01EED8A442FDB9CLL;
  v62 = ((4 * (v61 ^ 0x4002248A44204885)) ^ 0x7BB62910BF6E74) & (v61 ^ 0x4002248A44204885) ^ (4
                                                                                                  * (v61 ^ 0x4002248A44204885)) & 0xC01EED8A442FDB9CLL;
  v63 = ((16 * (v62 ^ 0xC004498244009189)) ^ 0x1EED8A442FDB9D0) & (v62 ^ 0xC004498244009189) ^ (16 * (v62 ^ 0xC004498244009189)) & 0xC01EED8A442FDB90;
  v64 = (v63 ^ 0xEC880402D9900) & (((v62 ^ 0x1AA408002F4A00) & (16 * ((v61 ^ 0xC01EC900440F931CLL) & (4 * v60) ^ v60)) ^ (v61 ^ 0xC01EC900440F931CLL) & (4 * v60) ^ v60) << 8) ^ (v62 ^ 0x1AA408002F4A00) & (16 * ((v61 ^ 0xC01EC900440F931CLL) & (4 * v60) ^ v60)) ^ (v61 ^ 0xC01EC900440F931CLL) & (4 * v60) ^ v60;
  v65 = (((v63 ^ 0xC010250A0402420DLL) << 8) ^ 0x1EED8A442FDB9D00) & (v63 ^ 0xC010250A0402420DLL) ^ ((v63 ^ 0xC010250A0402420DLL) << 8) & 0xC01EED8A442FDB00;
  v66 = v65 ^ 0xC012658A4024429DLL;
  v67 = v64 ^ 0xC01EED8A442FDB9DLL ^ (v65 ^ 0xC8800040B0000) & (v64 << 16);
  v68 = v59 ^ (2
             * ((v67 << 32) & 0x401EED8A00000000 ^ v67 ^ ((v67 << 32) ^ 0x442FDB9D00000000) & ((v66 << 16) & 0x401EED8A00000000 ^ 0x14A98000000000 ^ ((v66 << 16) ^ 0x6D8A442F00000000) & v66)));
  v69 = v68 ^ 0xBDF368D0DA2C002;
  STACK[0x6A60] = v68 ^ 0xBDF368D0DA2C002;
  v68 >>= 2;
  LODWORD(v59) = v68 & a5 ^ 0x18013A8A;
  v70 = v12
      + 0xE41F988E9EBD1D0
      + (((v69 ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0xA151F93818A3E4A0) + 0x5EAE06C7E75C1B60) ^ ((v69 ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0x22181A3E01FCC1B6)
                                                                                             - 0x22181A3E01FCC1B6) ^ ((v69 ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0x881D7EEAFAF21A5FLL) + 0x77E28115050DE5A1));
  v71 = v59 + (v68 & 0x2981310B ^ 0xA1C08521);
  v72 = (v70 ^ 0xC8CF10AD4E144D28) & (2 * (v70 & 0xE2EE44AE60460DACLL)) ^ v70 & 0xE2EE44AE60460DACLL;
  v73 = ((2 * (v70 ^ 0xCD1390A10E985F30)) ^ 0x5FFBA81EDDBCA538) & (v70 ^ 0xCD1390A10E985F30) ^ (2 * (v70 ^ 0xCD1390A10E985F30)) & 0x2FFDD40F6EDE529CLL;
  v74 = (v73 ^ 0xFF9000A00180010) & (4 * v72) ^ v72;
  v75 = ((4 * (v73 ^ 0x2004540122425284)) ^ 0xBFF7503DBB794A70) & (v73 ^ 0x2004540122425284) ^ (4 * (v73 ^ 0x2004540122425284)) & 0x2FFDD40F6EDE529CLL;
  v76 = (v75 ^ 0x2FF5500D2A584200) & (16 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x884024486108CLL)) ^ 0xFFDD40F6EDE529C0) & (v75 ^ 0x884024486108CLL) ^ (16
                                                                                               * (v75 ^ 0x884024486108CLL)) & 0x2FFDD40F6EDE5290;
  v78 = (v77 ^ 0x2FDD40066CC40000) & (v76 << 8) ^ v76;
  v79 = (((v77 ^ 0x209409021A521CLL) << 8) ^ 0xFDD40F6EDE529C00) & (v77 ^ 0x209409021A521CLL) ^ ((v77 ^ 0x209409021A521CLL) << 8) & 0x2FFDD40F6EDE5200;
  v80 = v78 ^ 0x2FFDD40F6EDE529CLL ^ (v79 ^ 0x2DD4040E4E520000) & (v78 << 16);
  v81 = v59 & 0x2981310B;
  v82 = (v70 ^ (2
              * ((v80 << 32) & 0x2FFDD40F00000000 ^ v80 ^ ((v80 << 32) ^ 0x6EDE529C00000000) & (((v79 ^ 0x229D001208C429CLL) << 16) & 0x2FFDD40F00000000 ^ 0x2BF0900100000000 ^ (((v79 ^ 0x229D001208C429CLL) << 16) ^ 0x540F6EDE00000000) & (v79 ^ 0x229D001208C429CLL))))) >> 32;
  v83 = v70
      - (((v82 ^ 0x7E56E51DB125455ELL) + 0x38751A509F03CBCCLL) ^ ((v82 ^ 0x1E8D80B3888D1CE8) + 0x58AE7FFEA6AB927ELL) ^ ((v82 ^ 0x60DB65AED905151ELL) + 0x26F89AE3F7239B8CLL));
  v84 = v71 - v81;
  v85 = ((v83 - 0x70ACC0DB78AA7647) ^ 0x9DBE1687377B043CLL) & (2
                                                               * ((v83 - 0x70ACC0DB78AA7647) & 0x99BF04D7A77C4631)) ^ (v83 - 0x70ACC0DB78AA7647) & 0x99BF04D7A77C4631;
  v86 = ((2 * ((v83 - 0x70ACC0DB78AA7647) ^ 0x9E9E1E0739730C3ELL)) ^ 0xE4235A13C1E941ELL) & ((v83
                                                                                              - 0x70ACC0DB78AA7647) ^ 0x9E9E1E0739730C3ELL) ^ (2 * ((v83 - 0x70ACC0DB78AA7647) ^ 0x9E9E1E0739730C3ELL)) & 0x7211AD09E0F4A0ELL;
  v87 = v86 ^ 0x1210A5082014A01;
  v88 = (v86 ^ 0x60010801C02000CLL) & (4 * v85) ^ v85;
  v89 = ((4 * v87) ^ 0x1C846B42783D283CLL) & v87 ^ (4 * v87) & 0x7211AD09E0F4A0CLL;
  v90 = (v89 ^ 0x4000A40180D0800) & (16 * v88) ^ v88;
  v91 = ((16 * (v89 ^ 0x321109086024203)) ^ 0x7211AD09E0F4A0F0) & (v89 ^ 0x321109086024203) ^ (16 * (v89 ^ 0x321109086024203)) & 0x7211AD09E0F4A00;
  v92 = (v91 ^ 0x201080080040000) & (v90 << 8) ^ v90;
  v93 = (((v91 ^ 0x52012D01E0B4A0FLL) << 8) ^ 0x211AD09E0F4A0F00) & (v91 ^ 0x52012D01E0B4A0FLL) ^ ((v91 ^ 0x52012D01E0B4A0FLL) << 8) & 0x7211AD09E0F4A00;
  v94 = v92 ^ 0x7211AD09E0F4A0FLL ^ (v93 ^ 0x10010900E0A0000) & (v92 << 16);
  v95 = v84 ^ 0x2DC4BE27;
  v96 = ((v83 - 0x70ACC0DB78AA7647) ^ (2
                                       * ((v94 << 32) & 0x7211AD000000000 ^ v94 ^ ((v94 << 32) ^ 0x1E0F4A0F00000000) & (((v93 ^ 0x6210A409005400FLL) << 16) & 0x7211AD000000000 ^ 0x52100D000000000 ^ (((v93 ^ 0x6210A409005400FLL) << 16) ^ 0x1AD09E0F00000000) & (v93 ^ 0x6210A409005400FLL))))) >> 16;
  v97 = v83
      + 0x3A4281E3D5B82E50
      + (((v96 ^ 0x75A1F9DC02DC88DLL) + 0x6664E85E2CF9D0C8) ^ ((v96 ^ 0x4C721D122E442B97) + 0x2D4CEAD1C29033DELL) ^ ((v96 ^ 0x4B289970CB1F7878) + 0x2A166EB327CB6033));
  v98 = ((2 * (v97 ^ 0x4233E2DDE5E95C6DLL)) ^ 0x9F456E0CD53C8438) & (v97 ^ 0x4233E2DDE5E95C6DLL) ^ (2 * (v97 ^ 0x4233E2DDE5E95C6DLL)) & 0xCFA2B7066A9E421CLL;
  v99 = (v97 ^ 0x491141DBEF675C6DLL) & (2 * (v97 & 0x8D9155DB8F771E71)) ^ v97 & 0x8D9155DB8F771E71;
  v100 = ((4 * (v98 ^ 0x40A291022A824204)) ^ 0x3E8ADC19AA790870) & (v98 ^ 0x40A291022A824204) ^ (4 * (v98 ^ 0x40A291022A824204)) & 0xCFA2B7066A9E421CLL;
  v101 = (v98 ^ 0xE002604401C0008) & (4 * v99) ^ v99;
  v102 = (v100 ^ 0xE8294002A180010) & (16 * v101);
  v103 = ((16 * (v100 ^ 0xC12023064086420CLL)) ^ 0xFA2B7066A9E421C0) & (v100 ^ 0xC12023064086420CLL) ^ (16 * (v100 ^ 0xC12023064086420CLL)) & 0xCFA2B7066A9E4210;
  v104 = (v103 ^ 0xCA22300628840000) & ((v102 ^ v101) << 8) ^ v102 ^ v101;
  v105 = (((v103 ^ 0x5808700421A421CLL) << 8) ^ 0xA2B7066A9E421C00) & (v103 ^ 0x5808700421A421CLL) ^ ((v103 ^ 0x5808700421A421CLL) << 8) & 0xCFA2B7066A9E4200;
  v106 = v104 ^ 0xCFA2B7066A9E421CLL ^ (v105 ^ 0x82A206020A020000) & (v104 << 16);
  v107 = (v97 ^ (2
               * ((v106 << 32) & 0x4FA2B70600000000 ^ v106 ^ ((v106 << 32) ^ 0x6A9E421C00000000) & (((v105 ^ 0x4D00B104609C421CLL) << 16) & 0x4FA2B70600000000 ^ 0x48A0950000000000 ^ (((v105 ^ 0x4D00B104609C421CLL) << 16) ^ 0x37066A9E00000000) & (v105 ^ 0x4D00B104609C421CLL))))) >> 8;
  v108 = ((2 * v95) | 0x591EEBA) - v95 - 46724957;
  v109 = v97
       - (((v107 ^ 0xDA8F0400DA1376B7) - 0x13C9FA0CEDAA99C6) ^ ((v107 ^ 0xC0E37035FE2886FCLL) - 0x9A58E39C991698DLL) ^ ((v107 ^ 0x1AEBA40AFB61BBD1) + 0x2C52A5F93327AB60))
       - 0x796339C49C9249A2;
  v110 = (v109 ^ 0x2C781CA80511583CLL) & (2 * (v109 & 0x297D5E8D5522603ELL)) ^ v109 & 0x297D5E8D5522603ELL;
  v111 = ((2 * (v109 ^ 0x2C5A80A20F559824)) ^ 0xA4FBC5EB4EFF034) & (v109 ^ 0x2C5A80A20F559824) ^ (2 * (v109 ^ 0x2C5A80A20F559824)) & 0x527DE2F5A77F81ALL;
  v112 = ((4 * (v111 ^ 0x52042214A10080ALL)) ^ 0x149F78BD69DFE068) & (v111 ^ 0x52042214A10080ALL) ^ (4 * (v111 ^ 0x52042214A10080ALL)) & 0x527DE2F5A77F818;
  v113 = (v112 ^ 0x407582D4857E010) & (16 * ((v111 ^ 0x79C0E12038810) & (4 * v110) ^ v110)) ^ (v111 ^ 0x79C0E12038810) & (4 * v110) ^ v110;
  v114 = ((16 * (v112 ^ 0x120860212201812)) ^ 0x527DE2F5A77F81A0) & (v112 ^ 0x120860212201812) ^ (16 * (v112 ^ 0x120860212201812)) & 0x527DE2F5A77F810;
  v115 = v114 ^ 0x5021C0A5800781ALL;
  v116 = (v114 ^ 0x25C22502778000) & (v113 << 8) ^ v113;
  v117 = ((v115 << 8) ^ 0x27DE2F5A77F81A00) & v115 ^ (v115 << 8) & 0x527DE2F5A77F800;
  v118 = v116 ^ 0x527DE2F5A77F81ALL ^ (v117 ^ 0x5060E0A52700000) & (v116 << 16);
  v119 = v109 ^ (2
               * ((v118 << 32) & 0x527DE2F00000000 ^ v118 ^ ((v118 << 32) ^ 0x5A77F81A00000000) & (((v117 ^ 0x21D0250807E01ALL) << 16) & 0x527DE2F00000000 ^ 0x100840800000000 ^ (((v117 ^ 0x21D0250807E01ALL) << 16) ^ 0x5E2F5A7700000000) & (v117 ^ 0x21D0250807E01ALL))));
  LODWORD(v97) = v119 ^ 0xA24B2D7D;
  v120 = (v119 >> 2) & 0x39A13B8F ^ 0x2A2128A3;
  v121 = v12
       + 0x69F5657ADD700950
       + (((v119 ^ 0xB2E5679DA24B2D7DLL ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0x355031BA9ED3EA0DLL) - 0x355031BA9ED3EA0DLL) ^ ((v119 ^ 0xB2E5679DA24B2D7DLL ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0xECD4CF82416A5DA4) + 0x132B307DBE95A25CLL) ^ ((v119 ^ 0xB2E5679DA24B2D7DLL ^ v24 ^ 0x60FA22DA79FB5D26 ^ 0xEB1801DE18703145) + 0x14E7FE21E78FCEBBLL));
  v122 = (v121 ^ 0xAEF338A6469E198ELL) & (2 * (v121 & 0xAE833AB650DE1DCFLL)) ^ v121 & 0xAE833AB650DE1DCFLL;
  v123 = ((2 * (v121 ^ 0xEFF57DA6C6B61816)) ^ 0x82EC8E212CD00BB2) & (v121 ^ 0xEFF57DA6C6B61816) ^ (2 * (v121 ^ 0xEFF57DA6C6B61816)) & 0x41764710966805D8;
  v124 = v123 ^ 0x4112411092280449;
  v125 = (v123 ^ 0x4060004400110) & (4 * v122) ^ v122;
  v126 = ((4 * v124) ^ 0x5D91C4259A01764) & v124 ^ (4 * v124) & 0x41764710966805D8;
  v127 = (v126 ^ 0x150040010200540) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x4026431086480099)) ^ 0x1764710966805D90) & (v126 ^ 0x4026431086480099) ^ (16 * (v126 ^ 0x4026431086480099)) & 0x41764710966805D0;
  v129 = (v128 ^ 0x164410006000500) & (v127 << 8) ^ v127;
  v130 = (((v128 ^ 0x4012061090680049) << 8) ^ 0x764710966805D900) & (v128 ^ 0x4012061090680049) ^ ((v128 ^ 0x4012061090680049) << 8) & 0x4176471096680500;
  v131 = v129 ^ 0x41764710966805D9 ^ (v130 ^ 0x4046001000000000) & (v129 << 16);
  v132 = (v121 ^ (2
                * ((v131 << 32) & 0x4176471000000000 ^ v131 ^ ((v131 << 32) ^ 0x166805D900000000) & (((v130 ^ 0x1304700966804D9) << 16) & 0x4176471000000000 ^ 0x66411000000000 ^ (((v130 ^ 0x1304700966804D9) << 16) ^ 0x4710966800000000) & (v130 ^ 0x1304700966804D9))))) >> 32;
  v133 = v121
       - (((v132 ^ 0xD109A6C9FF1CDD39) - 0x7A52760B4FFAF331) ^ ((v132 ^ 0x44F7C829FE74A740) + 0x1053E714B16D76B8) ^ ((v132 ^ 0x95FE6EE02DC7C4CELL) - 0x3EA5BE229D21EAC6))
       - 0x12E9B3AC7844E840;
  v134 = (v133 ^ 0x97949D990ED46117) & (2 * (v133 & 0x16111DA02CD97550)) ^ v133 & 0x16111DA02CD97550;
  v135 = ((2 * (v133 ^ 0xB3B4A49947748397)) ^ 0x4B4B7272D75BED8ELL) & (v133 ^ 0xB3B4A49947748397) ^ (2 * (v133 ^ 0xB3B4A49947748397)) & 0xA5A5B9396BADF6C6;
  v136 = ((4 * (v135 ^ 0xA4A4890928A41241)) ^ 0x9696E4E5AEB7DB1CLL) & (v135 ^ 0xA4A4890928A41241) ^ (4 * (v135 ^ 0xA4A4890928A41241)) & 0xA5A5B9396BADF6C4;
  v137 = (v135 ^ 0x30004309E480) & (4 * v134) ^ v134;
  v138 = (v136 ^ 0x8484A0212AA5D200) & (16 * v137);
  v139 = ((16 * (v136 ^ 0x21211918410824C3)) ^ 0x5A5B9396BADF6C70) & (v136 ^ 0x21211918410824C3) ^ (16 * (v136 ^ 0x21211918410824C3)) & 0xA5A5B9396BADF6C0;
  v140 = (v139 ^ 0x191102A8D6400) & ((v138 ^ v137) << 8) ^ v138 ^ v137;
  v141 = (((v139 ^ 0xA5A4282941209287) << 8) ^ 0xA5B9396BADF6C700) & (v139 ^ 0xA5A4282941209287) ^ ((v139 ^ 0xA5A4282941209287) << 8) & 0xA5A5B9396BADF600;
  v142 = v140 ^ 0xA5A5B9396BADF6C7 ^ (v141 ^ 0xA5A1392929A40000) & (v140 << 16);
  v143 = (((2 * v120) & 0x17404254) - v120 - 1341415723) ^ v97;
  v144 = (v133 ^ (2
                * ((v142 << 32) & 0x25A5B93900000000 ^ v142 ^ ((v142 << 32) ^ 0x6BADF6C700000000) & (((v141 ^ 0x48010420930C7) << 16) & 0x25A5B93900000000 ^ 0x484901000000000 ^ (((v141 ^ 0x48010420930C7) << 16) ^ 0x39396BAD00000000) & (v141 ^ 0x48010420930C7))))) >> 16;
  v145 = v133
       - 0x754DB76DAFE0687ELL
       + (((v144 ^ 0xE5ED7E0D332F5317) + 0x6D69A44305CFB782) ^ ((v144 ^ 0x8C2EF24D7CF37590) + 0x4AA28034A139107) ^ ((v144 ^ 0x69C39251400CDD05) - 0x1EB8B7E08913C66CLL));
  v146 = ((2 * (v145 ^ 0x6FB7595AA83828D6)) ^ 0xDADA93E817632CDELL) & (v145 ^ 0x6FB7595AA83828D6) ^ (2 * (v145 ^ 0x6FB7595AA83828D6)) & 0x6D6D49F40BB1966ELL;
  v147 = (v145 ^ 0x6A93580EAB293CB4) & (2 * (v145 & 0x2DA10AEA389BEB9)) ^ v145 & 0x2DA10AEA389BEB9;
  v148 = ((4 * (v146 ^ 0x2525481408909221)) ^ 0xB5B527D02EC659BCLL) & (v146 ^ 0x2525481408909221) ^ (4 * (v146 ^ 0x2525481408909221)) & 0x6D6D49F40BB1966CLL;
  v149 = (v146 ^ 0x84801E00221044CLL) & (4 * v147) ^ v147;
  v150 = (v148 ^ 0x252501D00A801020) & (16 * v149);
  v151 = ((16 * (v148 ^ 0x4848482401318643)) ^ 0xD6D49F40BB1966F0) & (v148 ^ 0x4848482401318643) ^ (16 * (v148 ^ 0x4848482401318643)) & 0x6D6D49F40BB19660;
  v152 = (v151 ^ 0x444409400B110600) & ((v150 ^ v149) << 8) ^ v150 ^ v149;
  v153 = (((v151 ^ 0x292940B400A0900FLL) << 8) ^ 0x6D49F40BB1966F00) & (v151 ^ 0x292940B400A0900FLL) ^ ((v151 ^ 0x292940B400A0900FLL) << 8) & 0x6D6D49F40BB19600;
  v154 = v152 ^ 0x6D6D49F40BB1966FLL ^ (v153 ^ 0x6D49400001900000) & (v152 << 16);
  v155 = (v145 ^ (2
                * ((v154 << 32) & 0x6D6D49F400000000 ^ v154 ^ ((v154 << 32) ^ 0xBB1966F00000000) & (((v153 ^ 0x2409F40A21906FLL) << 16) & 0x6D6D49F400000000 ^ 0x2409404400000000 ^ (((v153 ^ 0x2409F40A21906FLL) << 16) ^ 0x49F40BB100000000) & (v153 ^ 0x2409F40A21906FLL))))) >> 8;
  v156 = v145
       - (((v155 ^ 0xC107A684) - 1039619964) ^ ((v155 ^ 0x689C495B) + 1804814173) ^ ((v155 ^ 0x272F054D) + 606079819));
  LODWORD(v153) = (((2 * (((v156 + 1128415333) >> 2) & 0x39A13B8F ^ 0x38801304)) & 0x32005716)
                 - (((v156 + 1128415333) >> 2) & 0x39A13B8F ^ 0x38801304)
                 - 1560554428) ^ 0x9A299410;
  v157 = ((2 * v153) & 0x5822662) - v153 + 2101275854;
  if (LODWORD(STACK[0x6A70]) != v10 + 1399338774 < 0x6DCED4AD)
    v158 = STACK[0x6A70];
  else
    v158 = v10 + 1399338774 < LODWORD(STACK[0x6A90]);
  LODWORD(STACK[0x6AC0]) ^= v108 ^ STACK[0x6A60] ^ v143 ^ v157 ^ (v156 + 1128415333) ^ 0x7D4F6790;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((19433 * (v158 ^ 1)) ^ STACK[0x6A80])))();
}

uint64_t sub_100AEC4AC()
{
  unint64_t v0;
  int v1;
  char v2;
  unint64_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x6400]) = LODWORD(STACK[0x69A0]) + LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69D0]);
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6608]) + LODWORD(STACK[0x65F0]) + 1755802552;
  LODWORD(STACK[0x6408]) = LODWORD(STACK[0x6990]) + LODWORD(STACK[0x6970]);
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x69B0]) ^ 0xBFEB35C6;
  v0 = STACK[0x6A40];
  LODWORD(STACK[0x64C8]) = ~LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6890]) ^ 0x8FFCE6F5;
  v1 = LODWORD(STACK[0x6630]) ^ 0x675847D1;
  LODWORD(STACK[0x6A80]) = v0 - 42;
  LODWORD(STACK[0x65F0]) = v1 ^ (v0 - 42);
  v2 = *(_BYTE *)(STACK[0x6AB0]
                + ((*(_BYTE *)(STACK[0x6AB0]
                             + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 6) + 11) & 0xF)) - 1) & 0xF))
                  + 13) & 0xF));
  if (((v2 + 9) & 0xE) != 0)
    v3 = (v2 + 9) & 0xF;
  else
    v3 = 1;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0) - 4);
  STACK[0x6AC0] = v3;
  STACK[0x6A60] = v3 - 1;
  return v4();
}

uint64_t sub_100AED358(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  LODWORD(STACK[0x6A90]) = v2;
  v3 = STACK[0x6A80];
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6A80]) + 12973;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((54 * (STACK[0x6A60] != a2)) ^ v3)) - 4))();
}

uint64_t sub_100AEE7FC()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  LODWORD(STACK[0x64C0]) = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6A30]) ^ 0x32B3FE74;
  LODWORD(STACK[0x63E8]) = LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x69E0]);
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6980]) ^ 0xFA0664C9;
  LODWORD(STACK[0x63E0]) = LODWORD(STACK[0x69F0]) >> 7;
  v0 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 12);
  STACK[0x6A40] = -551773124;
  STACK[0x6A30] = 640697799;
  STACK[0x6A20] = 1833168722;
  return v0(517426069, -1511835700);
}

uint64_t sub_100AEE998(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7)
{
  unint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;

  LODWORD(STACK[0x6A50]) = a7;
  LODWORD(STACK[0x6A90]) = v13;
  LODWORD(STACK[0x6A60]) = v16;
  STACK[0x69C0] = a6;
  STACK[0x69D0] = a1;
  LODWORD(STACK[0x69E0]) = v15;
  LODWORD(STACK[0x69F0]) = v8;
  STACK[0x6A00] = v7;
  STACK[0x6A10] = v9;
  v17 = 2913 * (LODWORD(STACK[0x6A70]) ^ 0x4D30);
  v18 = *(unsigned __int8 *)(a6 + v11);
  LODWORD(STACK[0x6A80]) = v17;
  v19 = ((v18 ^ 0x37BFEBEF) + 1642595797 + ((v17 ^ 0x23FD) & (2 * v18))) * v12 - 564486930;
  v20 = ((2 * (v19 ^ 0x8182468F)) ^ 0x7E772A62) & (v19 ^ 0x8182468F) ^ (2 * (v19 ^ 0x8182468F)) & 0x3F3B9530;
  v21 = (v19 ^ 0xBCB1C3BF) & (2 * (v19 & 0xBEB9D3BE)) ^ v19 & 0xBEB9D3BE;
  v22 = ((4 * (v20 ^ 0x1089511)) ^ 0xFCEE54C4) & (v20 ^ 0x1089511) ^ (4 * (v20 ^ 0x1089511)) & 0x3F3B9530;
  v23 = (v22 ^ 0x3C2A1400) & (16 * ((v20 ^ 0x3E230020) & (4 * v21) ^ v21)) ^ (v20 ^ 0x3E230020) & (4 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x3118131)) ^ 0xF3B95310) & (v22 ^ 0x3118131) ^ (16 * (v22 ^ 0x3118131)) & 0x3F3B9530;
  v25 = v23 ^ 0x3F3B9531 ^ (v24 ^ 0x33391100) & (v23 << 8);
  v26 = v10 ^ 0xEAACF9DC ^ v19 ^ (2
                                * ((v25 << 16) & 0x3F3B0000 ^ v25 ^ ((v25 << 16) ^ 0x15310000) & (((v24 ^ 0xC028421) << 8) & 0x3F3B0000 ^ 0x42A0000 ^ (((v24 ^ 0xC028421) << 8) ^ 0x3B950000) & (v24 ^ 0xC028421))));
  v27 = STACK[0x6AC0] + v9;
  STACK[0x69B0] = v27;
  v28 = STACK[0x6AC0]
      + a1
      + v26
      + ((v26 + v14) >> 16)
      - ((2 * (v27 + v26 - ((v26 + v14 + ((v26 + v14) >> 16)) >> 8) + ((v26 + v14) >> 16))) & 0x3DAE972A)
      - ((v26 + v14 + ((v26 + v14) >> 16)) >> 8);
  v29 = (((v28 >> 2) & 0x39000A84 ^ 0xFD52C8B1) + ((v28 >> 2) & 0xA1310B) - 1) ^ 0xBCDEFB3D;
  v30 = (((v28 ^ 0x3916DED5) - 957800149) ^ ((v28 ^ 0xC2350282) + 1036713342) ^ ((v28 ^ 0xE5F497C2) + 436955198))
      - 685738269;
  v31 = (v30 ^ 0xAEE07CB8) & (2 * (v30 & 0x8ECA7E3D)) ^ v30 & 0x8ECA7E3D;
  LODWORD(STACK[0x69A0]) = v29 - ((2 * v29) & 0x6158352C) + 855513750;
  v32 = ((2 * (v30 ^ 0xA6E00CCA)) ^ 0x5054E5EE) & (v30 ^ 0xA6E00CCA) ^ (2 * (v30 ^ 0xA6E00CCA)) & 0x282A72F6;
  v33 = v32 ^ 0x282A1211;
  v34 = (v32 ^ 0x60E4) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xA0A9CBDC) & v33 ^ (4 * v33) & 0x282A72F4;
  v36 = (v35 ^ 0x202842D3) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x8023023)) ^ 0x82A72F70) & (v35 ^ 0x8023023) ^ (16 * (v35 ^ 0x8023023)) & 0x282A72F0;
  v38 = (((v28 ^ 0x5ACCD5C2) - 1523373506) ^ ((v28 ^ 0x6E4C4214) - 1850491412) ^ ((v28 ^ 0x2A57DC43) - 710401091))
      + 576246070;
  v39 = (v38 ^ 0x4AB18870) & (2 * (v38 & 0x8AA5CD75)) ^ v38 & 0x8AA5CD75;
  v40 = ((2 * (v38 ^ 0x5FF31238)) ^ 0xAAADBE9A) & (v38 ^ 0x5FF31238) ^ (2 * (v38 ^ 0x5FF31238)) & 0xD556DF4C;
  v41 = ((4 * (v40 ^ 0x55524145)) ^ 0x555B7D34) & (v40 ^ 0x55524145) ^ (4 * (v40 ^ 0x55524145)) & 0xD556DF4C;
  v42 = v41 ^ 0x80048249;
  v43 = (v41 ^ 0x55525D00) & (16 * ((v40 ^ 0x441E09) & (4 * v39) ^ v39)) ^ (v40 ^ 0x441E09) & (4 * v39) ^ v39;
  LODWORD(v27) = v30 ^ (2
                      * (((v36 ^ 0x282A72F7 ^ (v37 ^ 0x222287) & (v36 << 8)) << 16) & 0x282A0000 ^ v36 ^ 0x282A72F7 ^ (v37 ^ 0x222287) & (v36 << 8) ^ (((v36 ^ 0x282A72F7 ^ (v37 ^ 0x222287) & (v36 << 8)) << 16) ^ 0x72F70000) & (((v37 ^ 0x28085087) << 8) & 0x282A0000 ^ (((v37 ^ 0x28085087) << 8) ^ 0x2A720000) & (v37 ^ 0x28085087) ^ 0x80000)));
  LODWORD(STACK[0x6990]) = v27;
  v44 = ((16 * v42) ^ 0x556DF4D0) & v42 ^ (16 * v42) & 0xD556DF40;
  v45 = (v27 >> 2) ^ 0x85EBE09;
  v46 = v44 ^ 0x80120B0D;
  v47 = v43 ^ 0xD556DF4D ^ (v44 ^ 0x5544D400) & (v43 << 8);
  LODWORD(STACK[0x6980]) = v45 & 0x3DD143AF;
  v48 = v38 ^ (2
             * ((v47 << 16) & 0x55560000 ^ v47 ^ ((v47 << 16) ^ 0x5F4D0000) & ((v46 << 8) & 0x55560000 ^ ((v46 << 8) ^ 0x56DF0000) & v46 ^ 0x1000000)));
  LODWORD(STACK[0x6970]) = ((2 * v45) & 0x207000) - (v45 & 0x4707820) + 534824692;
  LODWORD(STACK[0x6960]) = (v48 & 0xA84E0172 ^ 0x4E0113) + (v48 & 0x57B1FE0D);
  v49 = STACK[0x6A30];
  v50 = STACK[0x6A20];
  v51 = STACK[0x69D0];
  v52 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((12032 * (STACK[0x69B0] == 15)) ^ LODWORD(STACK[0x6A70])));
  ++STACK[0x6A40];
  STACK[0x6A30] = v49 + 1;
  STACK[0x6A20] = v50 + 1;
  return ((uint64_t (*)(unint64_t, uint64_t))(v52 - 12))(v51 + 1, a2 + 1);
}

uint64_t sub_100AF004C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;

  LODWORD(STACK[0x6A90]) = v10;
  LODWORD(STACK[0x6A50]) = a7;
  LODWORD(STACK[0x6A60]) = v11;
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x65E0]) + LODWORD(STACK[0x63D8]);
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x6710]) ^ 0x357F715;
  v12 = (v9 + a3 - ((a3 + v8) >> 8) - v7) ^ 0x8D7706D1;
  v13 = v12 - (v12 >> 9) + ((v12 - (v12 >> 9)) >> 7);
  v14 = v13 - 806333318 + (~(2 * v13) | 0x601F570D);
  v15 = (((v14 ^ 0xB4FDC908) + 1258436344) ^ ((v14 ^ 0x4177CA) - 4290506) ^ ((v14 ^ 0x7B4CEABB) - 2068638395))
      + 272508745;
  v16 = v15 + (v15 >> 10) - ((v15 + (v15 >> 10)) >> 1);
  v17 = v16 + ((v16 + 1230968410) >> 13) - 2033354387;
  v18 = (v17 ^ 0xB095DAE8) & (2 * (v17 & 0xC2919CED)) ^ v17 & 0xC2919CED;
  v19 = ((2 * (v17 ^ 0xB5B5DA20)) ^ 0xEE488D9A) & (v17 ^ 0xB5B5DA20) ^ (2 * (v17 ^ 0xB5B5DA20)) & 0x772446CC;
  v20 = v19 ^ 0x11244245;
  v21 = (v19 ^ 0x7200488) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0xDC911B34) & v20 ^ (4 * v20) & 0x772446CC;
  v23 = (v22 ^ 0x54000209) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x232444C9)) ^ 0x72446CD0) & (v22 ^ 0x232444C9) ^ (16 * (v22 ^ 0x232444C9)) & 0x772446C0;
  v25 = v23 ^ 0x772446CD ^ (v24 ^ 0x7204440D) & (v23 << 8);
  v26 = (v17 ^ (2
              * ((v25 << 16) & 0x77240000 ^ v25 ^ ((v25 << 16) ^ 0x46CD0000) & (((v24 ^ 0x520020D) << 8) & 0x77240000 ^ 0x53200000 ^ (((v24 ^ 0x520020D) << 8) ^ 0x24460000) & (v24 ^ 0x520020D))))) >> 3;
  v27 = v16
      + ((v16 + 1230968410) >> 13)
      + 831216875
      + (((v26 ^ 0xE5E890C6) + 1583369953) ^ ((v26 ^ 0xDF253A1A) + 1689117757) ^ ((v26 ^ 0x2ED788F2) - 1788913963));
  v28 = (v27 ^ 0x4C36BC76) & (2 * (v27 & 0x6840BD66)) ^ v27 & 0x6840BD66;
  v29 = ((2 * (v27 ^ 0xCC368C36)) ^ 0x48EC62A0) & (v27 ^ 0xCC368C36) ^ (2 * (v27 ^ 0xCC368C36)) & 0xA4763150;
  v30 = v29 ^ 0xA4121150;
  v31 = (v29 ^ 0x4142040) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0x91D8C540) & v30 ^ (4 * v30) & 0xA4763150;
  v33 = (v32 ^ 0x80500150) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x24263010)) ^ 0x47631500) & (v32 ^ 0x24263010) ^ (16 * (v32 ^ 0x24263010)) & 0xA4763150;
  v35 = v33 ^ 0xA4763150 ^ (v34 ^ 0x4621150) & (v33 << 8);
  v36 = v27 ^ (2
             * ((v35 << 16) & 0x24760000 ^ v35 ^ ((v35 << 16) ^ 0x31500000) & (((v34 ^ 0xA0142050) << 8) & 0x24760000 ^ 0x460000 ^ (((v34 ^ 0xA0142050) << 8) ^ 0x76310000) & (v34 ^ 0xA0142050))));
  v37 = v36 ^ 0x40EC8FBB;
  v38 = ((v36 ^ 0x30E2CF25) - 1879982238) ^ ((v36 ^ 0x679631A7) - 662355484) ^ ((v36 ^ 0x37782144) - 2006232831);
  v39 = ((v38 - 365338092) ^ 0xC891BB66) & (2 * ((v38 - 365338092) & 0xD2D9B366)) ^ (v38 - 365338092) & 0xD2D9B366;
  v40 = ((2 * ((v38 - 365338092) ^ 0xE9B0DB66)) ^ 0x76D2D000) & ((v38 - 365338092) ^ 0xE9B0DB66) ^ (2
                                                                                                  * ((v38 - 365338092) ^ 0xE9B0DB66)) & 0x3B696800;
  v41 = v40 ^ 0x9292800;
  v42 = v39 ^ 0x3B696800 ^ (v40 ^ 0x12406000) & (4 * v39);
  v43 = (4 * v41) & 0x3B696800 ^ 0x12484800 ^ ((4 * v41) ^ 0xEDA5A000) & v41;
  v44 = (16 * v42) & 0x3B696800 ^ v42 ^ ((16 * v42) ^ 0xB6968000) & v43;
  v45 = (16 * v43) & 0x3B696800 ^ 0x9696800 ^ ((16 * v43) ^ 0xB6968000) & v43;
  v46 = (v44 << 8) & 0x3B696800 ^ v44 ^ ((v44 << 8) ^ 0x69680000) & v45;
  v47 = v38
      - 1122825378
      + ((((v38 - 365338092) ^ (2
                              * ((v46 << 16) & 0x3B690000 ^ v46 ^ ((v46 << 16) ^ 0x68000000) & ((v45 << 8) & 0x3B690000 ^ 0x12010000 ^ ((v45 << 8) ^ 0x69680000) & v45)))) >> 11) ^ 0x185B6C)
      + 2588;
  v48 = v47 + (v47 >> 1) - ((2 * (v47 + (v47 >> 1))) & 0x2E0EC22A) + 386359573;
  v49 = (v48 ^ 0x2219B236) - ((v48 ^ 0x2219B236u) >> 12) - (((v48 ^ 0x2219B236) - ((v48 ^ 0x2219B236u) >> 12)) >> 6);
  v50 = (((v49 ^ 0x33A1D600) - ((v49 ^ 0x33A1D600) >> 9)) ^ 0x7AFFFFEF)
      - 580389000
      + ((2 * ((v49 ^ 0x33A1D600) - ((v49 ^ 0x33A1D600) >> 9))) & 0xF5FFFFDE);
  v51 = (2 * (v50 & 0xA7980899)) & (v50 ^ 0xA3D183F3) ^ v50 & 0xA7980899 ^ ((2 * (v50 & 0xA7980899)) & 0x4000122 | 0x10200);
  v52 = (2 * (v50 ^ 0xA3D183F3)) & 0x4498B6A ^ 0x448892A ^ ((2 * (v50 ^ 0xA3D183F3)) ^ 0x89316D4) & (v50 ^ 0xA3D183F3);
  v53 = (4 * v51) & 0x4498B68 ^ v51 ^ ((4 * v51) ^ 0x40800) & v52;
  v54 = (4 * v52) & 0x4498B68 ^ 0x4498242 ^ ((4 * v52) ^ 0x11262DA8) & v52;
  v55 = (16 * v53) & 0x4498B60 ^ v53 ^ ((16 * v53) ^ 0x10A000) & v54;
  v56 = (16 * v54) & 0x4498B60 ^ 0x41094A ^ ((16 * v54) ^ 0x4498B6A0) & v54;
  v57 = v55 ^ 0x440016A ^ (v55 << 8) & 0x4498B00 ^ ((v55 << 8) ^ 0x18A0000) & v56;
  v58 = (v50 ^ (2
              * ((v57 << 16) & 0x4490000 ^ v57 ^ ((v57 << 16) ^ 0xB6A0000) & ((v56 << 8) & 0x4490000 ^ 0x4400000 ^ ((v56 << 8) ^ 0x498B0000) & v56)))) >> 6;
  LODWORD(STACK[0x63D8]) = v16;
  v59 = v50
      + 1225536573
      + (((v58 ^ 0xE1B68375) - 311838516) ^ ((v58 ^ 0x92AB9D98) - 1636522457) ^ ((v58 ^ 0x71A37294) + 2105297195));
  v60 = (v59 ^ 0xC087C83) & (2 * (v59 & 0x502A7C94)) ^ v59 & 0x502A7C94;
  v61 = ((2 * (v59 ^ 0xC088C83)) ^ 0xB845E02E) & (v59 ^ 0xC088C83) ^ (2 * (v59 ^ 0xC088C83)) & 0x5C22F016;
  v62 = v61 ^ 0x44221011;
  v63 = (v61 ^ 0x400E001) & (4 * v60) ^ v60;
  v64 = ((4 * v62) ^ 0x708BC05C) & v62 ^ (4 * v62) & 0x5C22F014;
  v65 = (v64 ^ 0x5002C003) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0xC203003)) ^ 0xC22F0170) & (v64 ^ 0xC203003) ^ (16 * (v64 ^ 0xC203003)) & 0x5C22F010;
  v67 = v65 ^ 0x5C22F017 ^ (v66 ^ 0x40220007) & (v65 << 8);
  v68 = v59 ^ (2
             * ((v67 << 16) & 0x5C220000 ^ v67 ^ ((v67 << 16) ^ 0x70170000) & (((v66 ^ 0x1C00F007) << 8) & 0x5C220000 ^ 0x5C020000 ^ (((v66 ^ 0x1C00F007) << 8) ^ 0x22F00000) & (v66 ^ 0x1C00F007))));
  LODWORD(STACK[0x69B0]) = v37;
  LODWORD(STACK[0x69A0]) = v68 ^ 0xD55B126E;
  v69 = v68 ^ 0xD55B126E ^ v37;
  v70 = (v68 ^ 0x62D0A24E) + ((v68 >> 10) ^ 0xFFE74BD7) + 1;
  v71 = v70 + (v70 >> 2);
  LODWORD(STACK[0x6A10]) = v14;
  LODWORD(STACK[0x6A00]) = v48;
  LODWORD(STACK[0x69F0]) = v71;
  v72 = v71 - 830958719 - ((v71 - 830958719) >> 12) + ((v71 - 830958719 - ((v71 - 830958719) >> 12)) >> 5);
  LODWORD(STACK[0x63D0]) = v72;
  LODWORD(STACK[0x6A20]) = (v49 ^ v16 ^ v72) >> 2;
  LODWORD(STACK[0x63C8]) = v49 - ((2 * v49) & 0x99ADD620) + 1289153296;
  v73 = (v72 ^ 0x5817FD78) + ((v72 ^ 0x5817FD78) >> 12) - (((v72 ^ 0x5817FD78) + ((v72 ^ 0x5817FD78) >> 12)) >> 5);
  v74 = v73 - 1266196837 + (~(2 * v73) | 0x96F142CB);
  v75 = LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6840]);
  v76 = STACK[0x68F0];
  v77 = LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x68F0]);
  v78 = LODWORD(STACK[0x65D0]) ^ 0x3021090B ^ ((v71 ^ v14 ^ v48) >> 2) & 0x39A13B8F;
  LODWORD(STACK[0x69E0]) = ((2 * ((v75 >> 2) & 0x39A13B8F ^ 0x10619984)) | 0xE95AE644)
                         - ((v75 >> 2) & 0x39A13B8F ^ 0x10619984)
                         - 1957524258;
  LODWORD(STACK[0x6990]) = v74;
  LODWORD(STACK[0x6980]) = (v69 ^ v74) >> 2;
  v79 = (v77 + 1438236021 - ((2 * v77) & 0xAB737AEA)) ^ LODWORD(STACK[0x67D0]);
  v80 = (LODWORD(STACK[0x6850]) >> 2) & 0x39A13B8F ^ 0x19211B81;
  LODWORD(STACK[0x69D0]) = ((((2 * v80) | 0x3FF3DCF4) - v80 + 1611010438) & 0xF6B5B0E0 ^ 0xF60400A0)
                         + ((((2 * v80) | 0x3FF3DCF4) - v80 + 1611010438) ^ 0x9F9FE4C)
                         - (((((2 * v80) | 0x3FF3DCF4) - v80 + 1611010438) ^ 0x9F9FE4C) & 0xF6B5B0E0);
  LODWORD(STACK[0x6970]) = (2 * v78) & 0x67EBBAA;
  LODWORD(STACK[0x6960]) = v78 - 2092999211;
  LODWORD(STACK[0x63B8]) = (v79 >> 2) & 0x39A13B8F;
  LODWORD(STACK[0x63C0]) = (v76 >> 2) & 0x39A13B8F;
  v81 = (LODWORD(STACK[0x6820]) >> 2) & 0x39A13B8F ^ 0x880318E;
  LODWORD(STACK[0x65D0]) = ((((LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6820])) ^ LODWORD(STACK[0x68A0])) >> 2) & 0x39A13B8F ^ 0x11802A04)
                         + 1197714165
                         - 2
                         * (((((LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6820])) ^ LODWORD(STACK[0x68A0])) >> 2) & 0x39A13B8F ^ 0x11802A04) & 0x1213881 ^ (((LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6820])) ^ LODWORD(STACK[0x68A0])) >> 2) & 1)
                         + 3547;
  v82 = STACK[0x68C0];
  v83 = STACK[0xDA80];
  LODWORD(STACK[0x63B0]) = v77 - ((2 * v77) & 0x70AB556C) - 1202345290;
  v84 = *(_QWORD *)(v83 + 8 * (0x4E176531 % v82));
  v85 = *(_QWORD *)(v83
                  + 8
                  * (((((v84 ^ 0x2502C1B6ACDFA98FLL) - 0x59F6254B258C1EE4) ^ ((v84 ^ 0xBEA0EA406CC7CF99)
                                                                              + 0x3DABF1421A6B870ELL) ^ ((v84 ^ 0xCEF77EA3954D3343) + 0x4DFC65A1E3E17BD8))
                    + 0x29A1B1A958E378BFLL)
                   % v82));
  v86 = *(_QWORD *)(v83
                  + 8
                  * (((((v85 ^ 0xFA631D44D2FA02BELL) + 0x5D1BED175A11DDD7) ^ ((v85 ^ 0x66C336D99A553555)
                                                                              - 0x3E443975ED4115C2) ^ ((v85 ^ 0xC9F57EC81DFA62BELL) + 0x6E8D8E9B9511BDD7))
                    + 0xDD25AF995375C5CLL)
                   % v82));
  STACK[0x6A70] = v83;
  v87 = *(_QWORD *)(v83
                  + 8
                  * (((((v86 ^ 0xFA7D98A9F83E1392) + 0x333BE9EC7CAA731ELL) ^ ((v86 ^ 0x3CE24A77CAA0923DLL)
                                                                              - 0xA5BC4CDB1CB0D4DLL) ^ ((v86 ^ 0x93CA878B67CBD4FALL) + 0x5A8CF6CEE35FB476))
                    + 0x63ECDBEFD7DB0802)
                   % v82));
  LODWORD(STACK[0x65D8]) ^= v81 + 862177016 - ((2 * v81) & 0x62420510);
  LODWORD(v87) = ((((v87 ^ 0x53CA99973AEA4C5BLL) - 0x46D8B5FBD098ACF2) ^ ((v87 ^ 0xEE9565AB3B4953D1)
                                                                          + 0x478B6382EC44C88) ^ ((v87 ^ 0xE80AA96954F64ADFLL)
                                                                                                  + 0x2E77AFA417B558ALL))
                + 0x4047793A0BDFE0A9)
               % v82;
  v88 = (((v87 - ((2 * v87) & 0xC1E4DA4) - 1508956462) ^ 0x795DBB68) + 226116188) ^ (((v87
                                                                                     - ((2 * v87) & 0xC1E4DA4)
                                                                                     - 1508956462) ^ 0xE5BA7509)
                                                                                   - 1851945925) ^ (((v87 - ((2 * v87) & 0xC1E4DA4) - 1508956462) ^ 0x3AE8E8B3)
                                                                                                  + 1322193281);
  LODWORD(STACK[0x6A40]) = v88;
  LODWORD(STACK[0x6A30]) = v88 + 380159065;
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80])))(0x924DB411963EFB8BLL);
}

uint64_t sub_100AF1174@<X0>(int a1@<W8>)
{
  _BOOL4 v1;
  _BOOL4 v2;

  v1 = LODWORD(STACK[0x6A40]) < 0xD228DFE2;
  STACK[0x6AC0] = (LODWORD(STACK[0x6A80]) + 1005) | 0x8Cu;
  if (v1 != (a1 - 1299045188) < 0xE8D1A43B)
    v2 = v1;
  else
    v2 = (a1 - 1299045188) < LODWORD(STACK[0x6A30]);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((21 * !v2) ^ LODWORD(STACK[0x6A80]))))();
}

uint64_t sub_100AF4690()
{
  int v0;

  LODWORD(STACK[0x68C0]) = LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x69C0]) ^ 0xBE7A029;
  v0 = STACK[0x6980] & 0x39A13B8F;
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6960]) - LODWORD(STACK[0x6970]);
  LODWORD(STACK[0x65D8]) ^= LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x65D0]) ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6990]) ^ v0;
  STACK[0x6A90] = STACK[0xDA80];
  LODWORD(STACK[0x6A80]) = (((LODWORD(STACK[0x6950]) ^ 0xC87FDFF2) + 1418184544) ^ ((LODWORD(STACK[0x6950]) ^ 0x33C95FA)
                                                                                  - 1614508712) ^ ((LODWORD(STACK[0x6950]) ^ 0xD4D3ABA5)
                                                                                                 + 1210823433))
                         - 986016097;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 12))();
}

uint64_t sub_100AF4874()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;
  unint64_t v3;
  _BOOL4 v4;

  v1 = STACK[0x6A80];
  v2 = LODWORD(STACK[0x6A80]) < 0x48A38FA0;
  v3 = STACK[0x6AC0];
  STACK[0x6A70] = (STACK[0x6AC0] + 952621091) & 0xC73827EB;
  if (v2 != (v0 + 308547617) < 0x48A38FA0)
    v4 = v2;
  else
    v4 = v1 > v0 + 308547617;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((4 * !v4) | (32 * !v4)) ^ v3)) - 12))();
}

uint64_t sub_100AF7734()
{
  unint64_t v0;
  uint64_t (*v1)(void);

  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x69F0]);
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + (*(_BYTE *)(STACK[0x6AB0]
                              + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 10) + 7) & 0xF)) + 3) & 0xF)) & 0xF))
       + 14) & 0xE) != 0)
    v0 = (*(_BYTE *)(STACK[0x6AB0]
                   + (*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 10) + 7) & 0xF)) + 3) & 0xF)) & 0xF))
        + 14) & 0xF;
  else
    v0 = 1;
  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A70]) - 4);
  STACK[0x6AC0] = v0;
  STACK[0x6A50] = v0 - 1;
  return v1();
}

uint64_t sub_100AF8598()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0x6A90]) = v1;
  v2 = STACK[0x6A70];
  LODWORD(STACK[0x6A80]) = STACK[0x6A70] - 5685;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8 * (int)((296 * (STACK[0x6A50] == v0)) ^ v2))
                                                   - 4))(STACK[0x6AB0]);
}

uint64_t sub_100AF94E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  v8 = LODWORD(STACK[0x6A80]) + 8635;
  LODWORD(STACK[0x63F8]) = STACK[0x6A20] & 0x39A13B8F;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v8)
                                                                                            - 12);
  STACK[0x6A50] = -457883105;
  STACK[0x6A40] = -1628073604;
  STACK[0x6A30] = 1474422769;
  LODWORD(STACK[0x6750]) = a8;
  return v9(a1, -1191450250, -2135296531, a4, a5, a6, 0);
}

uint64_t sub_100AF95B4@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X6>, unint64_t a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unint64_t v110;
  int v111;
  unint64_t v112;
  int v113;
  unsigned int v114;
  unint64_t v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unint64_t v138;
  int v139;
  int v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;

  LODWORD(STACK[0x6990]) = v13;
  LODWORD(STACK[0x6A90]) = v12;
  STACK[0x69A0] = a1;
  STACK[0x69B0] = v10;
  STACK[0x69C0] = a5;
  STACK[0x69D0] = v14;
  STACK[0x6A70] = a3;
  STACK[0x69E0] = a2;
  STACK[0x69F0] = v11;
  STACK[0x6A00] = v9;
  LODWORD(STACK[0x6A10]) = v5;
  STACK[0x6A20] = a4;
  v18 = LODWORD(STACK[0x6A80]) ^ 0x5081;
  v19 = ((*(unsigned __int8 *)(a1 + v17) ^ 0xEEEBEBD7) + 1954233673 + ((2 * *(unsigned __int8 *)(a1 + v17)) & 0x1AE))
      * v6
      + 677763414;
  LODWORD(STACK[0x6910]) = v18;
  v20 = ((2 * (v19 ^ (v18 + 1357670814))) ^ 0xC93ADF3E) & (v19 ^ (v18 + 1357670814)) ^ (2 * (v19 ^ (v18 + 1357670814))) & 0xE49D6F9E;
  v21 = (v19 ^ 0x306DA081) & (2 * (v19 & 0xB471C50A)) ^ v19 & 0xB471C50A;
  v22 = ((4 * (v20 ^ 0x24852081)) ^ 0x9275BE7C) & (v20 ^ 0x24852081) ^ (4 * (v20 ^ 0x24852081)) & 0xE49D6F9C;
  v23 = (v22 ^ 0x80152E00) & (16 * ((v20 ^ 0xC4080C99) & (4 * v21) ^ v21)) ^ (v20 ^ 0xC4080C99) & (4 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x64884183)) ^ 0x49D6F9F0) & (v22 ^ 0x64884183) ^ (16 * (v22 ^ 0x64884183)) & 0xE49D6F90;
  v25 = v23 ^ 0xE49D6F9F ^ (v24 ^ 0x40946900) & (v23 << 8);
  v26 = v19 ^ (2
             * ((v25 << 16) & 0x649D0000 ^ v25 ^ ((v25 << 16) ^ 0x6F9F0000) & (((v24 ^ 0xA409060F) << 8) & 0xE49D0000 ^ 0x60900000 ^ (((v24 ^ 0xA409060F) << 8) ^ 0x9D6F0000) & (v24 ^ 0xA409060F))));
  v27 = v7 ^ 0xB4711A34 ^ v26;
  v28 = v26;
  v29 = (unint64_t)(v27 + v8) >> 16;
  v30 = v17 + a5 + v27 + v29;
  v31 = (v30 ^ 0x903ADC24) & (2 * (v30 & 0xA53B1846)) ^ v30 & 0xA53B1846;
  v32 = ((2 * (v30 ^ 0xD05CCC28)) ^ 0xEACFA8DC) & (v30 ^ 0xD05CCC28) ^ (2 * (v30 ^ 0xD05CCC28)) & 0x7567D46E;
  v33 = v32 ^ 0x15205422;
  v34 = (v32 ^ 0x2044940A) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xD59F51B8) & v33 ^ (4 * v33) & 0x7567D46C;
  v36 = (v35 ^ 0x55075020) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x20608446)) ^ 0x567D46E0) & (v35 ^ 0x20608446) ^ (16 * (v35 ^ 0x20608446)) & 0x7567D460;
  v38 = v36 ^ 0x7567D46E ^ (v37 ^ 0x54654400) & (v36 << 8);
  v39 = (v30 ^ (2
              * ((v38 << 16) & 0x75670000 ^ v38 ^ ((v38 << 16) ^ 0x546E0000) & (((v37 ^ 0x2102900E) << 8) & 0x75670000 ^ 0x10230000 ^ (((v37 ^ 0x2102900E) << 8) ^ 0x67D40000) & (v37 ^ 0x2102900Eu))))) >> 8;
  v40 = v27 - (((v39 ^ 0x854ECC7D) - 87243558) ^ ((v39 ^ 0xC05DA1C5) - 1075861150) ^ ((v39 ^ 0x45F45508) + 980835757));
  v41 = v17 + a2 + v29 + v40;
  LODWORD(STACK[0x6980]) = v41 & 0xC669469F;
  v42 = 2 * (v41 & 0xC669469F);
  LODWORD(STACK[0x6970]) = v42;
  v43 = ((2 * (v41 ^ 0x3C318108)) ^ 0xF4B18F2E) & (v41 ^ 0x3C318108) ^ (2 * (v41 ^ 0x3C318108)) & 0xFA58C796;
  v44 = v43 ^ 0xA484091;
  v45 = (v43 ^ 0x30004605) & (4 * (v42 & (v41 ^ 0xB461041E) ^ v41 & 0xC669469F)) ^ v42 & (v41 ^ 0xB461041E) ^ v41 & 0xC669469F;
  v46 = ((4 * v44) ^ 0xE9631E5C) & v44 ^ (4 * v44) & 0xFA58C794;
  v47 = v46 ^ 0x1218C183;
  v48 = (v46 ^ 0xE8400610) & (16 * v45) ^ v45;
  v49 = ((16 * v47) ^ 0xA58C7970) & v47 ^ (16 * v47) & 0xFA58C790;
  v50 = v48 ^ 0xFA58C797;
  v51 = v49 ^ 0x5A508687;
  v52 = v17 + v10 + v29 + v40;
  v53 = (v52 ^ 0x889289BE) & (2 * (v52 & 0x8CD28D3E)) ^ v52 & 0x8CD28D3E;
  v54 = (v49 ^ 0xA0084187) & (v48 << 8);
  v55 = ((2 * (v52 ^ 0x88B283C6)) ^ 0x8C01DF0) & (v52 ^ 0x88B283C6) ^ (2 * (v52 ^ 0x88B283C6)) & 0x4600EF8;
  v56 = v55 ^ 0x4200208;
  v57 = (v55 ^ 0x600EF0) & (4 * v53) ^ v53;
  v58 = ((4 * v56) ^ 0x11803BE0) & v56 ^ (4 * v56) & 0x4600EF8;
  v59 = v58 ^ 0x4600418;
  v60 = v50 ^ v54;
  v61 = (v58 ^ 0xAF0) & (16 * v57) ^ v57;
  v62 = 16 * (v58 ^ 0x4600418);
  v63 = (v62 ^ 0x4600EF80) & v59;
  v64 = ((v51 << 8) ^ 0x18C70000) & v51;
  v65 = v63 ^ v62 & 0x4600EF0;
  v66 = (v51 << 8) & 0x1A580000 ^ 0x2180000;
  v67 = v61 ^ 0x4600EF8 ^ (v65 ^ 0x4000E78) & (v61 << 8);
  LODWORD(v29) = STACK[0x6AC0] + STACK[0x6A70] + v29 + v40;
  v68 = (2 * (v29 & 0x8CD28D3E ^ 0x809511D3)) & 0x851050 ^ v29 & 0x8CD28D3E ^ 0x809511D3 ^ ((2
                                                                                           * (v29 & 0x8CD28D3E ^ 0x809511D3)) ^ 0x12A23A6) & (v29 ^ 0xC479CED);
  v69 = (2 * (v29 ^ 0xC479CED)) & 0x809511D2 ^ 0x80951051 ^ ((2 * (v29 ^ 0xC479CED)) ^ 0x12A23A6) & (v29 ^ 0xC479CED);
  v70 = (4 * v68) & 0x809511D0 ^ v68 ^ ((4 * v68) ^ 0x254474C) & v69;
  v71 = (4 * v69) & 0x809511D0 ^ 0x80811093 ^ ((4 * v69) ^ 0x254474C) & v69;
  v72 = (16 * v70) & 0x809511D0 ^ v70 ^ ((16 * v70) ^ 0x8110930) & v71;
  v73 = (16 * v71) & 0x809511D0 ^ 0x808400C3 ^ ((16 * v71) ^ 0x9511D30) & v71;
  LODWORD(STACK[0x6950]) = (v60 << 16) & 0x12400000 ^ v60 ^ ((v60 << 16) ^ 0x7970000) & (v66 ^ v64);
  v74 = v72 ^ 0x80140150 ^ (v72 << 8) & 0x80951100 ^ ((v72 << 8) ^ 0x90118300) & v73;
  v75 = v52 ^ (2
             * ((v67 << 16) & 0x4600000 ^ v67 ^ ((v67 << 16) ^ 0xEF80000) & (((v65 ^ 0x600078) << 8) & 0x4600000 ^ 0x4600000 ^ (((v65 ^ 0x600078) << 8) ^ 0x600E0000) & (v65 ^ 0x600078))));
  LODWORD(STACK[0x6960]) = v75;
  v76 = v29 ^ 0xFF0EB043 ^ (2
                          * ((v74 << 16) & 0x950000 ^ v74 ^ ((v74 << 16) ^ 0x11D30000) & ((v73 << 8) & 0x950000 ^ 0x840000 ^ ((v73 << 8) ^ 0x15110000) & v73)));
  LODWORD(v29) = ((8 * v76) & 0x8300A80) + 466073791 + ((4 * v76) & 0x9E1FADF0 ^ 0x67FDD7FF);
  v77 = v28;
  v78 = ((4 * v75) ^ 0xF2D56C95) & 0x5F47DC2D ^ 0xC7A000F2 ^ ((((4 * v75) ^ 0xF2D56C95) & 0xC15871DC ^ 0x6B8217F) - 1);
  v79 = ((v76 ^ v28 ^ 0x44F684D6) + 1356047297) ^ ((v76 ^ v28 ^ 0xEE8C40DF) - 89561142) ^ ((v76 ^ v28 ^ 0x6DDFC0E6)
                                                                                         + 2046486513);
  v80 = STACK[0x6AC0] + v15 + v79;
  LODWORD(STACK[0x6940]) = (v29 & 0x6EDFFE50 ^ 0x60100E40) + (v29 ^ 0x1EEFF1B8) - ((v29 ^ 0x1EEFF1B8) & 0x6F5FFE50);
  v81 = (v80 ^ 0xDA71282D) & (2 * (v80 & 0xDB754A8E)) ^ v80 & 0xDB754A8E;
  v82 = ((2 * (v80 ^ 0x4C913839)) ^ 0x2FC8E56E) & (v80 ^ 0x4C913839) ^ (2 * (v80 ^ 0x4C913839)) & 0x97E472B6;
  LODWORD(STACK[0x6930]) = ((2 * v78) | 0xADE6113C) - v78 + 688715618;
  v83 = (v82 ^ 0x7C060A0) & (4 * v81) ^ v81;
  v84 = ((4 * (v82 ^ 0x90241291)) ^ 0x5F91CADC) & (v82 ^ 0x90241291) ^ (4 * (v82 ^ 0x90241291)) & 0x97E472B4;
  v85 = v84 ^ 0x80643023;
  v86 = (v84 ^ 0x17804280) & (16 * v83) ^ v83;
  v87 = ((16 * v85) ^ 0x7E472B70) & v85 ^ (16 * v85) & 0x97E472B0;
  v88 = v86 ^ 0x97E472B7 ^ (v87 ^ 0x16442287) & (v86 << 8);
  v89 = v79
      + (((v80 ^ (2
                * ((v88 << 16) & 0x17E40000 ^ v88 ^ ((v88 << 16) ^ 0x72B70000) & (((v87 ^ 0x81A05087) << 8) & 0x17E40000 ^ 0x13840000 ^ (((v87 ^ 0x81A05087) << 8) ^ 0x64720000) & (v87 ^ 0x81A05087))))) >> 16) ^ 0xD1F5);
  v90 = STACK[0x6AC0] + v16 + v89;
  v91 = (v90 ^ 0x228C386B) & (2 * (v90 & 0xB320A14A)) ^ v90 & 0xB320A14A;
  v92 = ((2 * (v90 ^ 0x428C3AEF)) ^ 0xE359374A) & (v90 ^ 0x428C3AEF) ^ (2 * (v90 ^ 0x428C3AEF)) & 0xF1AC9BA4;
  v93 = v92 ^ 0x10A488A5;
  v94 = (v92 ^ 0xC1200384) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0xC6B26E94) & v93 ^ (4 * v93) & 0xF1AC9BA4;
  v96 = (v95 ^ 0xC0A00A81) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x310C9121)) ^ 0x1AC9BA50) & (v95 ^ 0x310C9121) ^ (16 * (v95 ^ 0x310C9121)) & 0xF1AC9BA0;
  v98 = v96 ^ 0xF1AC9BA5 ^ (v97 ^ 0x10889AA5) & (v96 << 8);
  v99 = (v90 ^ (2
              * ((v98 << 16) & 0x71AC0000 ^ v98 ^ ((v98 << 16) ^ 0x1BA50000) & (((v97 ^ 0xE12401A5) << 8) & 0x71AC0000 ^ 0x51240000 ^ (((v97 ^ 0xE12401A5) << 8) ^ 0xAC9B0000) & (v97 ^ 0xE12401A5))))) >> 8;
  v100 = v89 - (((v99 ^ 0xA266728E) + 772352714) ^ ((v99 ^ 0x666EAF84) - 368969788) ^ ((v99 ^ 0xC47BEC9C) + 1209316572));
  v101 = STACK[0x6A50];
  v102 = STACK[0x6AC0] + STACK[0x6A50] + v100;
  v103 = 2 * (v102 & 0xD3E703B9);
  v104 = ((2 * (v102 ^ 0xEC61D6FF)) ^ 0x7F0DAA8C) & (v102 ^ 0xEC61D6FF) ^ (2 * (v102 ^ 0xEC61D6FF)) & 0x3F86D546;
  v105 = v104 ^ 0x825542;
  v106 = (v104 ^ 0x1F040004) & (4 * (v103 & (v102 ^ 0xCBE7D3BD) ^ v102 & 0xD3E703B9)) ^ v103 & (v102 ^ 0xCBE7D3BD) ^ v102 & 0xD3E703B9;
  v107 = ((4 * v105) ^ 0xFE1B5518) & v105 ^ (4 * v105) & 0x3F86D544;
  v108 = (v107 ^ 0x3E025506) & (16 * v106) ^ v106;
  v109 = ((16 * (v107 ^ 0x1848046)) ^ 0xF86D5460) & (v107 ^ 0x1848046) ^ (16 * (v107 ^ 0x1848046)) & 0x3F86D540;
  v110 = STACK[0x6A30];
  v111 = v108 ^ 0x3F86D546 ^ (v109 ^ 0x38045406) & (v108 << 8);
  v112 = STACK[0x6A40];
  v113 = STACK[0x6AC0] + STACK[0x6A40] + v100;
  v114 = (v113 ^ 0x178F367A) & (2 * (v113 & 0xA7CE0772)) ^ v113 & 0xA7CE0772;
  v115 = STACK[0x6AC0];
  v116 = ((2 * (v113 ^ 0x5F1B327A)) ^ 0xF1AA6A10) & (v113 ^ 0x5F1B327A) ^ (2 * (v113 ^ 0x5F1B327A)) & 0xF8D53508;
  v117 = ((4 * (v116 ^ 0x8551508)) ^ 0xE354D420) & (v116 ^ 0x8551508) ^ (4 * (v116 ^ 0x8551508)) & 0xF8D53508;
  v118 = (v116 ^ 0xB0052000) & (4 * v114) ^ v114 ^ 0xF8D53508 ^ (v117 ^ 0xE0541400) & (16
                                                                                     * ((v116 ^ 0xB0052000) & (4 * v114) ^ v114));
  v119 = (16 * (v117 ^ 0x18812108)) & 0xF8D53500 ^ 0x70842508 ^ ((16 * (v117 ^ 0x18812108)) ^ 0x8D535080) & (v117 ^ 0x18812108);
  v120 = (v118 << 8) & 0xF8D53500 ^ v118 ^ ((v118 << 8) ^ 0xD5350800) & v119;
  v121 = 8
       * ((v111 << 16) & 0x13820000 ^ v111 ^ ((v111 << 16) ^ 0x15460000) & (((v109 ^ 0x7828106) << 8) & 0x1F860000 ^ 0x19020000 ^ (((v109 ^ 0x7828106) << 8) ^ 0x6D50000) & (v109 ^ 0x7828106)));
  v122 = v113 ^ (2
               * ((v120 << 16) & 0x78D50000 ^ v120 ^ ((v120 << 16) ^ 0x35080000) & ((v119 << 8) & 0x78D50000 ^ 0x28C00000 ^ ((v119 << 8) ^ 0xD5350000) & v119)));
  v123 = ((2 * (v41 ^ 0xD7D010E8)) ^ 0x2372ACEE) & (v41 ^ 0xD7D010E8) ^ (2 * (v41 ^ 0xD7D010E8)) & 0x11B95676;
  v124 = (v123 ^ 0x1204465) & (4 * (STACK[0x6970] & (v41 ^ 0xD74014DE) ^ LODWORD(STACK[0x6980]))) ^ STACK[0x6970] & (v41 ^ 0xD74014DE) ^ LODWORD(STACK[0x6980]);
  v125 = ((4 * (v123 ^ 0x10895211)) ^ 0x46E559DC) & (v123 ^ 0x10895211) ^ (4 * (v123 ^ 0x10895211)) & 0x11B95674;
  v126 = (v125 ^ 0xA15053) & (16 * v124) ^ v124;
  v127 = ((16 * (v125 ^ 0x11180623)) ^ 0x1B956770) & (v125 ^ 0x11180623) ^ (16 * (v125 ^ 0x11180623)) & 0x11B95670;
  v128 = v126 ^ 0x11B95677 ^ (v127 ^ 0x11914600) & (v126 << 8);
  v129 = (v128 << 16) & 0x11B90000 ^ v128 ^ ((v128 << 16) ^ 0x56770000) & (((v127 ^ 0x281007) << 8) & 0x11B90000 ^ 0xA90000 ^ (((v127 ^ 0x281007) << 8) ^ 0x39560000) & (v127 ^ 0x281007));
  v130 = v103 & (v102 ^ 0x93D7433D) ^ v102 & 0xD3E703B9;
  v131 = ((2 * (v102 ^ 0x36DB474D)) ^ 0xCA7889E8) & (v102 ^ 0x36DB474D) ^ (2 * (v102 ^ 0x36DB474D)) & 0xE53C44F4;
  v132 = (((v121 ^ (4 * v102)) & 0x9E1FADF0 ^ 0x2EF62F79) - 1) ^ 0x286442B0;
  v133 = (v131 ^ 0xE03840F0) & (4 * v130) ^ v130;
  v134 = ((4 * (v131 ^ 0x25044414)) ^ 0x94F113D0) & (v131 ^ 0x25044414) ^ (4 * (v131 ^ 0x25044414)) & 0xE53C44F4;
  v135 = ((16 * (v134 ^ 0x610C4424)) ^ 0x53C44F40) & (v134 ^ 0x610C4424) ^ (16 * (v134 ^ 0x610C4424)) & 0xE53C44F0;
  v136 = (v134 ^ 0x843000D0) & (16 * v133) ^ v133 ^ 0xE53C44F4 ^ (v135 ^ 0x410444B4) & (((v134 ^ 0x843000D0) & (16 * v133) ^ v133) << 8);
  v137 = LODWORD(STACK[0x6750]) ^ v41 ^ (2 * v129) ^ ((8 * LODWORD(STACK[0x6950])) ^ (4 * v41)) & 0x9E1FADF0;
  v138 = STACK[0x6A20];
  v139 = 1893818331 - v132 + ((2 * v132) | 0x1E3D256E) + 3438;
  v140 = STACK[0x6AC0]
       + STACK[0x6A20]
       + (v77 ^ 0x4DA65C71 ^ v122 ^ 0x6F992B27)
       - (((v77 ^ 0x4DA65C71 ^ v122 ^ 0x6F992B27) + v8 + (((v77 ^ 0x4DA65C71 ^ v122 ^ 0x6F992B27) + v8) >> 16)) >> 8)
       + (((v77 ^ 0x4DA65C71 ^ v122 ^ 0x6F992B27) + v8) >> 16);
  LODWORD(STACK[0x6750]) = v137 ^ v102 ^ (2
                                        * ((v136 << 16) & 0x653C0000 ^ v136 ^ ((v136 << 16) ^ 0x44F40000) & (((v135 ^ 0xA43800B4) << 8) & 0x653C0000 ^ 0x41380000 ^ (((v135 ^ 0xA43800B4) << 8) ^ 0x3C440000) & (v135 ^ 0xA43800B4)))) ^ v140 ^ v139 ^ (4 * v140) & 0x9E1FADF0 ^ 0x5D1B1F4F;
  v141 = STACK[0x6A70];
  v142 = STACK[0x69E0];
  v143 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * (v115 + v138 != 15)) ^ (LODWORD(STACK[0x6A80]) + 8630)));
  v144 = STACK[0x69A0];
  STACK[0x6A50] = v101 + 1;
  STACK[0x6A30] = v110 + 1;
  STACK[0x6A40] = v112 + 1;
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t))(v143 - 12))(v144 + 1, v142 + 1, v141 + 1);
}

uint64_t sub_100AFABF8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;

  v6 = STACK[0x6910];
  v7 = (v5 + v1 + ((v1 + v0) >> 16) - ((v1 + v0 + ((v1 + v0) >> 16)) >> 8) - v2) ^ 0x8D7706D1;
  v8 = v7 - (v7 >> 9) + ((v7 - (v7 >> 9)) >> 7);
  v9 = v8 + 1826361176 - ((LODWORD(STACK[0x6910]) ^ 0xD9B85E47) & (2 * v8));
  v10 = (((v9 ^ 0xBCC89F54) + 1127702700) ^ ((v9 ^ 0xE64B20C7) + 431284025) ^ ((v9 ^ 0x365FB0CB) - 912240843))
      - 1389764056;
  v11 = v10 + (v10 >> 10) - ((v10 + (v10 >> 10)) >> 1);
  v12 = v11 + ((v11 + 1230968410) >> 13) - 1169166974;
  v13 = (v12 ^ 0x8F2F0C9A) & (2 * (v12 & 0x8F0F28D8)) ^ v12 & 0x8F0F28D8;
  v14 = ((2 * (v12 ^ 0x892B4C3A)) ^ 0xC48C9C4) & (v12 ^ 0x892B4C3A) ^ (2 * (v12 ^ 0x892B4C3A)) & 0x62464E2;
  v15 = v14 ^ 0x2242422;
  v16 = (v14 ^ 0x60040C2) & (4 * v13) ^ v13;
  v17 = ((4 * v15) ^ 0x18919388) & v15 ^ (4 * v15) & 0x62464E0;
  v18 = (v17 ^ 0x80) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x6246462)) ^ 0x62464E20) & (v17 ^ 0x6246462) ^ (16 * (v17 ^ 0x6246462)) & 0x62464E0;
  v20 = v18 ^ 0x62464E2 ^ (v19 ^ 0x20444C2) & (v18 << 8);
  v21 = (v12 ^ (2
              * ((v20 << 16) & 0x6240000 ^ v20 ^ ((v20 << 16) ^ 0x64E20000) & (((v19 ^ 0x42020C2) << 8) & 0x6240000 ^ (((v19 ^ 0x42020C2) << 8) ^ 0x24640000) & (v19 ^ 0x42020C2) ^ 0x2000000)))) >> 3;
  v22 = v11
      + ((v11 + 1230968410) >> 13)
      - 48911063
      + (((v21 ^ 0xF1C03EC9) - 1006240518) ^ ((v21 ^ 0x5B179C1B) + 1859280428) ^ ((v21 ^ 0xBBB75EF1) - 1905091390))
      + 3151;
  v23 = (v22 ^ 0x1797DCCF) & (2 * (v22 & 0x27A41ECE)) ^ v22 & 0x27A41ECE;
  v24 = ((2 * (v22 ^ 0x5797E4D3)) ^ 0xE067F43A) & (v22 ^ 0x5797E4D3) ^ (2 * (v22 ^ 0x5797E4D3)) & 0x7033FA1C;
  v25 = v24 ^ 0x10100A05;
  v26 = (v24 ^ 0x2020F01D) & (4 * v23) ^ v23;
  v27 = ((4 * v25) ^ 0xC0CFE874) & v25 ^ (4 * v25) & 0x7033FA1C;
  v28 = (v27 ^ 0x4003E809) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x30301209)) ^ 0x33FA1D0) & (v27 ^ 0x30301209) ^ (16 * (v27 ^ 0x30301209)) & 0x7033FA10;
  v30 = v28 ^ 0x7033FA1D ^ (v29 ^ 0x33A00D) & (v28 << 8);
  v31 = v22 ^ (2
             * ((v30 << 16) & 0x70330000 ^ v30 ^ ((v30 << 16) ^ 0x7A1D0000) & (((v29 ^ 0x70005A0D) << 8) & 0x70330000 ^ 0x40010000 ^ (((v29 ^ 0x70005A0D) << 8) ^ 0x33FA0000) & (v29 ^ 0x70005A0D))));
  v32 = v31 ^ 0x18EF73C0;
  v33 = ((v31 ^ 0xF4880303) + 328765245) ^ ((v31 ^ 0xD1866EAB) + 915858069) ^ ((v31 ^ 0x2EF875C) - 436270236);
  v34 = ((v33 + 32816412) ^ 0xD82EB151) & (2 * ((v33 + 32816412) & 0xD94CA115)) ^ (v33 + 32816412) & 0xD94CA115;
  v35 = ((2 * ((v33 + 32816412) ^ 0xFA36F37B)) ^ 0x46F4A4DC) & ((v33 + 32816412) ^ 0xFA36F37B) ^ (2
                                                                                                * ((v33 + 32816412) ^ 0xFA36F37B)) & 0x237A526E;
  v36 = v35 ^ 0x210A5222;
  v37 = (v35 ^ 0x270004C) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x8DE949B8) & v36 ^ (4 * v36) & 0x237A526C;
  v39 = (v38 ^ 0x1684026) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x22121246)) ^ 0x37A526E0) & (v38 ^ 0x22121246) ^ (16 * (v38 ^ 0x22121246)) & 0x237A5260;
  v41 = v39 ^ 0x237A526E ^ (v40 ^ 0x2320020E) & (v39 << 8);
  v42 = v33
      - 616473039
      + ((((v33 + 32816412) ^ (2
                             * ((v41 << 16) & 0x237A0000 ^ v41 ^ ((v41 << 16) ^ 0x526E0000) & (((v40 ^ 0x5A500E) << 8) & 0x237A0000 ^ 0x1280000 ^ (((v40 ^ 0x5A500E) << 8) ^ 0x7A520000) & (v40 ^ 0x5A500E))))) >> 11) ^ 0x136D80);
  v43 = v42 + (v42 >> 1);
  LODWORD(STACK[0x6A70]) = v43;
  LODWORD(STACK[0x6AC0]) = v9;
  v44 = (v43 + 1826361176 - ((2 * v43) & 0xD9B81EB0)) ^ v9;
  v45 = (v43 ^ 0x351ED323) - ((v43 ^ 0x351ED323) >> 12) - (((v43 ^ 0x351ED323) - ((v43 ^ 0x351ED323) >> 12)) >> 6);
  v46 = (((v45 ^ 0x33A1D600) - ((v45 ^ 0x33A1D600) >> 9)) ^ 0xF78DFCED)
      + 2147465205
      + ((2 * ((v45 ^ 0x33A1D600) - ((v45 ^ 0x33A1D600) >> 9))) & 0xEF1BF9DA)
      - 1013;
  v47 = (v46 ^ 0x8D706FD3) & (2 * (v46 & 0x88724F13)) ^ v46 & 0x88724F13;
  v48 = ((2 * (v46 ^ 0x8D54FFD5)) ^ 0xA4D618C) & (v46 ^ 0x8D54FFD5) ^ (2 * (v46 ^ 0x8D54FFD5)) & 0x526B0C6;
  v49 = v48 ^ 0x5229042;
  v50 = (v48 ^ 0x420A086) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0x149AC318) & v49 ^ (4 * v49) & 0x526B0C4;
  v52 = (v51 ^ 0x4028006) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x12430C6)) ^ 0x526B0C60) & (v51 ^ 0x12430C6) ^ (16 * (v51 ^ 0x12430C6)) & 0x526B0C0;
  v54 = v52 ^ 0x526B0C6 ^ (v53 ^ 0x220086) & (v52 << 8);
  v55 = (v46 ^ (2
              * ((v54 << 16) & 0x5260000 ^ v54 ^ ((v54 << 16) ^ 0x30C60000) & (((v53 ^ 0x504B086) << 8) & 0x5260000 ^ 0x1060000 ^ (((v53 ^ 0x504B086) << 8) ^ 0x26B00000) & (v53 ^ 0x504B086))))) >> 6;
  v56 = (((v45 ^ 0x33A1D600) - ((v45 ^ 0x33A1D600) >> 9)) ^ 0xF78DFCED)
      + 2147465205
      + ((2 * ((v45 ^ 0x33A1D600) - ((v45 ^ 0x33A1D600) >> 9))) & 0xEF1BF9DA)
      - 1631474812
      + (((v55 ^ 0x612CCC38) + 145636042) ^ ((v55 ^ 0x39CEA7FF) + 1347178767) ^ ((v55 ^ 0x5AEAA77D) + 862474637));
  v57 = (v56 ^ 0x7D97454D) & (2 * (v56 & 0x7E26654E)) ^ v56 & 0x7E26654E;
  v58 = ((2 * (v56 ^ 0xD59387D9)) ^ 0x576BC52E) & (v56 ^ 0xD59387D9) ^ (2 * (v56 ^ 0xD59387D9)) & 0xABB5E296;
  v59 = v58 ^ 0xA8942291;
  v60 = (v58 ^ 0x1258081) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0xAED78A5C) & v59 ^ (4 * v59) & 0xABB5E294;
  v62 = (v61 ^ 0xAA958200) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0x1206083)) ^ 0xBB5E2970) & (v61 ^ 0x1206083) ^ (16 * (v61 ^ 0x1206083)) & 0xABB5E290;
  v64 = v62 ^ 0xABB5E297 ^ (v63 ^ 0xAB142000) & (v62 << 8);
  v65 = v56 ^ (2
             * ((v64 << 16) & 0x2BB50000 ^ v64 ^ ((v64 << 16) ^ 0x62970000) & (((v63 ^ 0xA1C287) << 8) & 0x2BB50000 ^ 0xA150000 ^ (((v63 ^ 0xA1C287) << 8) ^ 0x35E20000) & (v63 ^ 0xA1C287))));
  v66 = (v65 ^ 0x46DC9E94) + ((v65 >> 10) ^ 0xFFEE48D8) + 1;
  v67 = v66 + (v66 >> 2) - ((2 * (v66 + (v66 >> 2))) & 0xE137431C) + 1889247630;
  v68 = (((v67 ^ 0x3AEACB35) - 988465973) ^ ((v67 ^ 0xB1D2ACA8) + 1311593304) ^ ((v67 ^ 0xFBA3C613) + 73153005))
      + 1058288911;
  v69 = (4 * (v67 ^ (v44 - ((2 * v44) & 0x2137431C) + 815505806))) ^ 0x1F234186;
  v70 = (v69 & 0x751BD3B0) - (v69 & 0x100D1B0) + (v69 & 0x100D1B0 ^ 0x124D1FA);
  v71 = v69 & 0xEB047E40;
  v72 = v68 - (v68 >> 12) + ((v68 - (v68 >> 12)) >> 5);
  v73 = (v72 ^ 0x5817FD78) + ((v72 ^ 0x5817FD78) >> 12) - (((v72 ^ 0x5817FD78) + ((v72 ^ 0x5817FD78) >> 12)) >> 5);
  v74 = LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6720]);
  v75 = (((2 * ((4 * v74) & 0x9E1FADF0 ^ 0x84010C10)) & 0x342A5320) - ((4 * v74) & 0x9E1FADF0 ^ 0x84010C10) - 1530210708) ^ 0xB7CAD768;
  v76 = LODWORD(STACK[0x64E8]) ^ v74 ^ (v75 - ((2 * v75) & 0xA2CF27C0) - 773352470) ^ v71 ^ 0x7C07EF3A ^ v70;
  v77 = (((2 * ((4 * LODWORD(STACK[0x6730])) & 0x9E1FADF0 ^ 0x8C03A510)) & 0x28131BE0)
       - ((4 * LODWORD(STACK[0x6730])) & 0x9E1FADF0 ^ 0x8C03A510)
       + 718692362) ^ 0xABD6621A;
  v78 = STACK[0x66E8];
  v79 = LODWORD(STACK[0x66E8]) ^ (LODWORD(STACK[0x6920]) - 1879251211 - ((2 * LODWORD(STACK[0x6920])) & 0x1FF9CDEA));
  v80 = (v79 + 1438236021 - ((2 * v79) & 0xAB737AEA)) ^ LODWORD(STACK[0x67D0]);
  v81 = LODWORD(STACK[0x66D0]) ^ v80 ^ v4;
  LODWORD(STACK[0x6A40]) = v77;
  LODWORD(STACK[0x6A30]) = 2 * v77;
  v82 = v81 ^ v11 ^ v45 ^ v72 ^ 0x316FFB5C ^ (4 * (v11 ^ v80 ^ v45 ^ v72)) & 0x9E1FADF0;
  v83 = v78 ^ LODWORD(STACK[0x68A0]);
  v84 = ((4 * LODWORD(STACK[0x6890])) & 0x9E1FADF0) - 1879251211 - ((8 * LODWORD(STACK[0x6890])) & 0x1C3949E0);
  v85 = (4 * (v83 ^ LODWORD(STACK[0x6780]))) & 0x9E1FADF0 ^ 0x2E123774;
  LODWORD(STACK[0x6A80]) = v76 + 114573744;
  LODWORD(STACK[0x6A00]) = (2 * v76) & 0xDA88360;
  v86 = v83 ^ LODWORD(STACK[0x66E0]) ^ (-134345712 - (v85 | 0xF7FE0C10) + (v85 | 0x801F3EF)) ^ v3 ^ v32 ^ v65 ^ 0x259E4527 ^ (v73 - ((2 * v73) & 0x4A873E24) - 1522295022) ^ (4 * (v65 ^ 0x259E4527 ^ v32 ^ (v73 - ((2 * v73) & 0x4A873E24) - 1522295022))) & 0x9E1FADF0;
  LODWORD(STACK[0x69E0]) = (v84 ^ v78) - ((2 * (v84 ^ v78)) & 0x4A39B6EC) + 622648182;
  LODWORD(STACK[0x6A10]) = (v84 ^ v78) + 1;
  LODWORD(STACK[0x69F0]) = v86;
  LODWORD(STACK[0x69D0]) = v86 ^ 0x52707EC7;
  LODWORD(STACK[0x69C0]) = -(v86 ^ 0x52707EC7);
  v87 = LODWORD(STACK[0x6900]) ^ 0xECA2E943;
  LODWORD(STACK[0x6A20]) = v84 ^ v78;
  LODWORD(STACK[0x6A90]) = v87 ^ v84 ^ v78 ^ (v82 + 1438236021 - ((2 * v82) & 0xAB737AEA));
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x6770]);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 12))(LODWORD(STACK[0x64C8]));
}

uint64_t sub_100AFBAA8@<X0>(int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W3>, int a4@<W4>, char a5@<W5>, char a6@<W6>, unsigned int a7@<W7>, int a8@<W8>)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  char v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;

  v20 = v13 ^ ((v13 & a7) >> 1);
  v21 = *(_DWORD *)(*(_QWORD *)(a2 + 8 * (v12 + 2262)) + 4 * (v13 ^ 0x9Du)) ^ 0x16DAD886;
  v22 = v21 ^ ((v21 & a3) >> 1);
  v23 = v10
      + (((v22 & STACK[0x66B8]) >> LODWORD(STACK[0x66F8])) ^ 0xD9FCF0FB)
      + ((2 * ((v22 & STACK[0x66B8]) >> LODWORD(STACK[0x66F8]))) & 0xB3F9E1F6)
      + (((unint64_t)(v22 & a1) << v15) ^ 0x7FF3CED7)
      + ((2 * ((unint64_t)(v22 & a1) << v15)) & 0xFFE79DAE)
      - 3379;
  v24 = ((2 * (v23 ^ 0xCDF1E517)) ^ 0x3B3C9BAA) & (v23 ^ 0xCDF1E517) ^ (2 * (v23 ^ 0xCDF1E517)) & a4;
  v25 = (v23 ^ 0x4D6FA493) & (2 * (v23 & 0x506FA8C2)) ^ v23 & 0x506FA8C2;
  v26 = ((4 * (v24 ^ (v11 + 1011))) ^ 0x76793754) & (v24 ^ (v11 + 1011)) ^ (4 * (v24 ^ (v11 + 1011))) & a4;
  v27 = (v26 ^ 0x14180540) & (16 * ((v24 ^ 0x11C0100) & (4 * v25) ^ v25)) ^ (v24 ^ 0x11C0100) & (4 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x89864881)) ^ 0xD9E4DD50) & (v26 ^ 0x89864881) ^ (16 * (v26 ^ 0x89864881)) & (a4 - 4);
  v29 = v27 ^ (a4 + 1) ^ (v28 ^ 0x99844D00) & (v27 << 8);
  v30 = 4
      * ((a6 ^ ((((v20 & v14) >> a5) | (v20 << LODWORD(STACK[0x6700])))
                               - (((((v20 & v14) >> a5) | (v20 << LODWORD(STACK[0x6700]))) << (((v12 + 20) | 0xC0) + 45)) & 0x22)
                               - 111)) ^ 0x81u);
  *(_DWORD *)(STACK[0xDA88] + v30) = v9 ^ a8 ^ LODWORD(STACK[0x6920]) ^ v23 ^ (2
                                                                             * ((v29 << 16) & 0x1D9E0000 ^ v29 ^ ((v29 << 16) ^ 0x4DD50000) & (((v28 ^ 0x41A0085) << 8) & 0x1D9E0000 ^ 0x1920000 ^ (((v28 ^ 0x41A0085) << 8) ^ 0x1E4D0000) & (v28 ^ 0x41A0085))));
  *(_DWORD *)(v17 + v30) = LODWORD(STACK[0x6740]) ^ v16 ^ 0x2649BBAC ^ *(_DWORD *)(v8 + 4 * (v13 ^ 0x65u));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2861 * (((v19 + v13) | v18) >= 0)) ^ (v12 + 16375)))
                            - 12))();
}

uint64_t sub_100AFBD5C(int a1, char a2, uint64_t a3, unsigned int a4, uint64_t a5, char a6, uint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  unsigned int v41;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  char v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  char v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned __int8 *v169;
  uint64_t v170;
  unsigned int v171;
  unint64_t v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  unint64_t v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unint64_t v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  uint64_t v209;
  unsigned int v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int v215;
  unsigned int v216;
  uint64_t v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unsigned int v230;
  uint64_t v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unint64_t v235;
  unsigned int v236;
  int v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  uint64_t (*v245)(void);
  unint64_t v246;

  v12 = LODWORD(STACK[0x63B0]) ^ LODWORD(STACK[0x63B8]) ^ STACK[0x64B0];
  v13 = LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x63E0]);
  v14 = LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x63F8]);
  v15 = LODWORD(STACK[0x6A80]) - LODWORD(STACK[0x6A00]);
  v16 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69F0]);
  v17 = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x6440]);
  LODWORD(STACK[0x64E8]) = LODWORD(STACK[0x6AC0]) ^ LODWORD(STACK[0x6A70]) ^ v8 ^ v15;
  v18 = STACK[0x68F0];
  v19 = LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x6418]) ^ v12 ^ v13 ^ LODWORD(STACK[0x6A60]) ^ v14 ^ 0xEA521E20;
  LODWORD(STACK[0x6770]) = v19;
  LODWORD(STACK[0x6AC0]) = v9 + 13417;
  LODWORD(STACK[0x6448]) = ((v9 + 13417) ^ 0xE4EF1333 | LODWORD(STACK[0x6A30])) - LODWORD(STACK[0x6A40]) + 227037305;
  v20 = (v17 ^ (LODWORD(STACK[0x6A10]) + (v16 ^ 0x88935A4E))) + LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6A60]) = v20;
  v21 = STACK[0x6420];
  v22 = STACK[0x66C8];
  v23 = STACK[0x6458];
  v24 = STACK[0x63E8];
  v25 = LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x63E8]);
  v26 = STACK[0x6428];
  v27 = STACK[0x6400];
  v28 = STACK[0x6450];
  v29 = STACK[0x6820];
  v30 = LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6730]) ^ (v22
                                                                                  - ((2 * v22) & 0xB0F81152)
                                                                                  - 662959959) ^ (v28
                                                                                                + 492783382
                                                                                                - 2
                                                                                                * (v28 & 0x1D5F471F ^ STACK[0x6438] & 9)) ^ (v21 + 862177016 - ((2 * v21) & 0x66C78DF0));
  v31 = STACK[0x6408];
  v32 = STACK[0x6410];
  v33 = v18 ^ LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x68C0]) ^ (LODWORD(STACK[0x6830]) - ((2 * LODWORD(STACK[0x6830])) & 0x6430C734) - 1307024486) ^ LODWORD(STACK[0x65F0]) ^ LODWORD(STACK[0x6A90]) ^ 0x813683AA ^ ((v30 ^ v31 ^ v32 ^ v20 ^ 0x88F2327F) + 786940769 - ((2 * (v30 ^ v31 ^ v32 ^ v20 ^ 0x88F2327F)) & 0x5DCF86C2));
  v34 = LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x66E8]) ^ ((v25 ^ v26 ^ v27) - 1879251211 - ((2 * (v25 ^ v26 ^ v27)) & 0x1FF9CDEA));
  v35 = (v33
       + (LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x65E8]) ^ v19)
       - 2 * (v33 & (LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x65E8]) ^ v19))) ^ LODWORD(STACK[0x65D0]);
  v36 = LODWORD(STACK[0x65D8]) ^ 0xCA898335 ^ (v35 + 309412708 - ((2 * v35) & 0x24E286C8));
  v37 = LODWORD(STACK[0x67C0]) ^ 0x2ED014D1 ^ LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x6610]) ^ (v34 - 1406360696 - ((2 * v34) & 0x58594710));
  v38 = v37 ^ ((v37 & a4) >> 1);
  v39 = (((2 * (LODWORD(STACK[0x6A50]) ^ 0x62)) | 0x8A7183B8) - (LODWORD(STACK[0x6A50]) ^ 0x62) - 1161347548) ^ 0xDD49E1DC;
  v40 = (((2 * v39) | 0xA7C8F374) - v39 - 1407482298) ^ 0xCB9559BA;
  v41 = STACK[0x64D0];
  LODWORD(STACK[0x64B0]) = ((unint64_t)((v36 ^ ((v36 & a8) >> 1)) & STACK[0x64D0]) << ((((2 * v39) | 0x74)
                                                                                             - v39
                                                                                             + 70) ^ 0xBA)) | (((v36 ^ ((v36 & a8) >> 1)) & v10) >> a6);
  v43 = v21 ^ ((v21 & a8) >> 1);
  v44 = STACK[0x66B8];
  v45 = v38 & STACK[0x66B8];
  v47 = v38 & a1;
  v48 = STACK[0x66F8];
  v49 = STACK[0x6700];
  LODWORD(STACK[0x64A8]) = ((v47 << LODWORD(STACK[0x6700])) ^ (v45 >> LODWORD(STACK[0x66F8])))
                         + 2 * ((v47 << LODWORD(STACK[0x6700])) & (v45 >> LODWORD(STACK[0x66F8])));
  v50 = ((v43 & v44) >> a6) | ((v43 & v41) << v49);
  v51 = (v50 + 1748820497 - ((2 * v50) & 0xD079C422)) ^ LODWORD(STACK[0x6608]);
  v52 = STACK[0x6628];
  LODWORD(STACK[0x66F0]) = (v51 ^ -v51 ^ ((LODWORD(STACK[0x6688]) ^ 0xC7C7C7C7)
                                        - ((v51 - 2091967674 - ((2 * v51) & 0x69E368C)) ^ LODWORD(STACK[0x6628]))))
                         + (LODWORD(STACK[0x6688]) ^ 0xC7C7C7C7);
  v53 = ((v10 & (v24 ^ ((v24 & a4) >> 1))) >> a6) ^ (((v24 ^ ((v24 & a4) >> 1)) & v41) << v49);
  v54 = (v53 - 2091967674 - ((2 * v53) & 0x69E368C)) ^ v52;
  LODWORD(STACK[0x67D0]) = v54 + 1748820497 - ((2 * v54) & 0xD079C422);
  v55 = ((unint64_t)((v26 ^ ((v26 & a4) >> 1)) & v41) << v40) + (((v26 ^ ((v26 & a4) >> 1)) & v44) >> a6);
  v56 = (v55 - 2091967674 - ((2 * v55) & 0x69E368C)) ^ v52;
  LODWORD(STACK[0x6780]) = v56 + 1748820497 - ((2 * v56) & 0xD079C422);
  v57 = ((1514560964
        - (a8 & (v29 ^ 0x3363C6F8) ^ 0x20020130 | 0x5A465DC4)
        + (a8 & (v29 ^ 0x3363C6F8) ^ 0x20020130 | 0xA5B9A23B)) >> 1) ^ 0x42DDD185;
  v58 = (v57 + 862177016 - ((2 * v57) & 0x66C78DF0)) ^ v29;
  v59 = ((a1 & v58) << v49) | ((v58 & v44) >> a6);
  v60 = (v59 - 2091967674 - ((2 * v59) & 0x69E368C)) ^ v52;
  LODWORD(STACK[0x6440]) = v60 + 1748820497 - ((2 * v60) & 0xD079C422);
  LODWORD(STACK[0x66E8]) = (((v27 ^ ((v27 & a4) >> 1)) & a1) << v49) | (((v27 ^ ((v27 & a4) >> 1)) & v44) >> v48);
  v61 = v32 ^ ((-1887809231
              - ((v32 ^ 0xC2B13092) & a4 ^ 0x1D200801)
              + ((2 * ((v32 ^ 0xC2B13092) & a4 ^ 0x1D200801)) | 0xE10B5D9E)) >> 1);
  v62 = STACK[0x6760];
  v63 = ((((v61 ^ 0x4A7C4DD4) & a1 & 0xAAE9EABC | v62 & 0xAA09AA20) ^ 0x80E860BC)
       + (((v61 ^ 0x4A7C4DD4) & a1 | v62 & 0xBE1FAE21) ^ 0x2A118A00)
       - ((((v61 ^ 0x4A7C4DD4) & a1 | v62 & 0xBE1FAE21) ^ 0x2A118A00) & 0xAAE9EABC)) ^ 0x3EE7CE9D;
  v64 = STACK[0x6680];
  v65 = STACK[0x6680] & 0x77A15880 ^ 0x61205080 ^ (v61 ^ 0x83C2BB75) & v44;
  LODWORD(STACK[0x66E0]) = (v63 << v49) + (((v65 - ((2 * v65) & 0xC72796F4) - 476853382) ^ 0x801393FA) >> a6);
  LODWORD(STACK[0x66D8]) = ((v10 & (v22 ^ ((a8 & v22) >> 1))) >> v48) | ((unint64_t)((v22 ^ ((a8 & v22) >> 1)) & v41) << v40);
  LODWORD(STACK[0x6A50]) = ((v10 & (v23 ^ ((a8 & v23) >> 1))) >> a6) | (((v23 ^ ((a8 & v23) >> 1)) & v41) << v49);
  LODWORD(STACK[0x6A70]) = (((v31 ^ ((v31 & a8) >> 1)) & a1) << v49) | (((v31 ^ ((v31 & a8) >> 1)) & v44) >> a6);
  v66 = LODWORD(STACK[0x6A60]) ^ ((STACK[0x6A60] & a8) >> 1);
  LODWORD(STACK[0x66D0]) = ((unint64_t)(v66 & v41) << v40) | ((v66 & v10) >> v48);
  v67 = LODWORD(STACK[0x67E0]) ^ ((a8 & STACK[0x67E0]) >> 1);
  LODWORD(STACK[0x6A60]) = ((v10 & v67) >> a6) + ((a1 & v67) << v49);
  v68 = LODWORD(STACK[0x6870]) ^ ((a4 & STACK[0x6870]) >> 1);
  LODWORD(STACK[0x6A40]) = ((a1 & v68) << v49) | ((v44 & v68) >> a6);
  v69 = LODWORD(STACK[0x67F0]) ^ ((a8 & STACK[0x67F0]) >> 1);
  LODWORD(STACK[0x66C8]) = ((v10 & v69) >> a6) ^ ((unint64_t)(v69 & v41) << v40);
  v70 = LODWORD(STACK[0x68E0]) ^ ((a4 & STACK[0x68E0]) >> 1);
  LODWORD(STACK[0x6A30]) = ((v10 & v70) >> v48) | ((unint64_t)(a1 & v70) << v40);
  v71 = LODWORD(STACK[0x65F8]) ^ ((STACK[0x65F8] & a8) >> 1);
  LODWORD(STACK[0x6A20]) = ((unint64_t)(v71 & v41) << v40) | ((v71 & v44) >> v48);
  LODWORD(STACK[0x69F0]) = ((v10 & (v28 ^ ((v28 & a8) >> 1))) >> a6) ^ ((unint64_t)(a1 & (v28 ^ ((v28 & a8) >> 1))) << v40);
  v72 = LODWORD(STACK[0x68C0]) ^ ((STACK[0x68C0] & a4) >> 1);
  v73 = STACK[0x6890];
  LODWORD(STACK[0x6A10]) = ((v72 & v44) >> v48) | ((v72 & a1) << v49);
  v74 = STACK[0x66B0] & 0x200000;
  v75 = (((2 * (v73 & a4 ^ 0x5AC0862A)) | 0x8ED27F24) - (v73 & a4 ^ 0x5AC0862A) + 949403758) >> 1;
  if ((v75 & v74) != 0)
    v74 = -v74;
  LODWORD(STACK[0x6A00]) = ((unint64_t)(((v74 + (v75 ^ 0x4ED4DCDC)) ^ v73 & 0xFFDFFFFF) & a1) << v40)
                         + ((((v74 + (v75 ^ 0x4ED4DCDC)) ^ v73 & 0xFFDFFFFF) & v10) >> v48);
  v76 = LODWORD(STACK[0x67A0]) ^ ((a8 & STACK[0x67A0]) >> 1);
  LODWORD(STACK[0x69E0]) = ((v10 & v76) >> v48) | ((unint64_t)(v76 & v41) << v40);
  v77 = LODWORD(STACK[0x6860]) ^ ((a8 & STACK[0x6860]) >> 1);
  LODWORD(STACK[0x69D0]) = ((v10 & v77) >> a6) ^ ((unint64_t)(v77 & v41) << v40);
  v78 = LODWORD(STACK[0x6730]) ^ ((((2 * (a4 & (LODWORD(STACK[0x6730]) ^ 0x8F604D52) ^ 0x60848151)) & 0xB4C9648E)
                                 - (a4 & (LODWORD(STACK[0x6730]) ^ 0x8F604D52) ^ 0x60848151)
                                 + 630934968) >> 1);
  v79 = (v62 & 0x7C3BC414 | a1 & (v78 ^ 0xD1D46F32)) ^ 0x1C3B0004;
  LODWORD(STACK[0x69C0]) = ((unint64_t)((v79 - ((2 * v79) & 0xF295A70C) - 112536698) ^ 0x994A1796) << v40) ^ ((v64 & 0x5B7E33B8 ^ 0xA3C2218 ^ v44 & (v78 ^ 0xF691989E)) >> a6);
  v80 = LODWORD(STACK[0x6A90]) ^ ((STACK[0x6A90] & a4) >> 1);
  LODWORD(STACK[0x69B0]) = ((unint64_t)(v80 & v41) << v40) | ((v80 & v10) >> a6);
  v81 = LODWORD(STACK[0x6618]) ^ ((STACK[0x6618] & a4) >> 1);
  LODWORD(STACK[0x6990]) = ((unint64_t)(v81 & v41) << v40) + ((v81 & v44) >> a6);
  v82 = ((STACK[0x6610] & a4) >> 1) + LODWORD(STACK[0x6610]) - 2 * (((STACK[0x6610] & a4) >> 1) & STACK[0x6610]);
  LODWORD(STACK[0x69A0]) = ((v82 & a1) << v49) + ((v82 & v10) >> v48);
  v83 = ((1173407384
        - ((LODWORD(STACK[0x6630]) ^ 0x49BF9E36) & a8 ^ 0x210C0604 | 0x45F0C698)
        + ((LODWORD(STACK[0x6630]) ^ 0x49BF9E36) & a8 ^ 0x210C0604 | 0xBA0F3967)) >> 1) ^ 0x4D819FB1;
  v84 = LODWORD(STACK[0x65F0]) ^ (v83 + 786940769 - ((2 * v83) & 0x5DCF86C2));
  LODWORD(STACK[0x6980]) = ((unint64_t)(v84 & v41) << v40) | ((v84 & v10) >> a6);
  v85 = LODWORD(STACK[0x6570]) ^ ((a4 & STACK[0x6570]) >> 1);
  LODWORD(STACK[0x68C0]) = ((a1 & v85) << v49) | ((v44 & v85) >> v48);
  v86 = LODWORD(STACK[0x6600]) ^ ((a8 & STACK[0x6600]) >> 1);
  v87 = LODWORD(STACK[0x6578]) ^ ((a4 & STACK[0x6578]) >> 1);
  LODWORD(STACK[0x6970]) = ((v10 & v86) >> a6) ^ ((unint64_t)(a1 & v86) << v40);
  LODWORD(STACK[0x68B0]) = ((v44 & v87) >> v48) ^ ((v41 & v87) << v49);
  v88 = LODWORD(STACK[0x6790]) ^ ((a8 & STACK[0x6790]) >> 1);
  v89 = LODWORD(STACK[0x6488]) ^ ((a4 & STACK[0x6488]) >> 1);
  v90 = ((((LODWORD(STACK[0x6710]) ^ 0xAF7B549D) & a4 ^ 0x4415F22)
        - ((2 * ((LODWORD(STACK[0x6710]) ^ 0xAF7B549D) & a4 ^ 0x4415F22)) & 0x1A0881B4)
        + 218382554) >> 1) ^ 0x4A28FFC;
  v91 = (v90 - 1406360696 - ((2 * v90) & 0x58594710)) ^ LODWORD(STACK[0x65E0]);
  LODWORD(STACK[0x6960]) = ((v10 & v88) >> a6) | ((unint64_t)(v88 & v41) << v40);
  LODWORD(STACK[0x6950]) = ((unint64_t)(v91 & v41) << v40) ^ ((v91 & v44) >> a6);
  v92 = v49;
  LODWORD(STACK[0x68A0]) = ((a1 & v89) << v49) + ((v44 & v89) >> v48);
  v93 = LODWORD(STACK[0x64D8]) ^ ((a8 & STACK[0x64D8]) >> 1);
  LODWORD(STACK[0x6890]) = ((v10 & v93) >> v48) + ((a1 & v93) << v49);
  v94 = LODWORD(STACK[0x67C0]) ^ ((a4 & STACK[0x67C0]) >> 1);
  v95 = LODWORD(STACK[0x6548]) ^ ((a8 & STACK[0x6548]) >> 1);
  LODWORD(STACK[0x6940]) = ((v10 & v94) >> v48) ^ ((unint64_t)(a1 & v94) << v40);
  LODWORD(STACK[0x6880]) = ((v95 & v44) >> a6) ^ ((v95 & v41) << v49);
  v96 = LODWORD(STACK[0x68F0]) ^ ((a4 & STACK[0x68F0]) >> 1);
  LODWORD(STACK[0x6930]) = ((v10 & v96) >> a6) ^ ((unint64_t)(a1 & v96) << v40);
  v97 = LODWORD(STACK[0x6598]) ^ ((a8 & STACK[0x6598]) >> 1);
  v98 = LODWORD(STACK[0x6800]) ^ ((a8 & STACK[0x6800]) >> 1);
  v99 = (v97 & v41) << v49;
  v100 = (v97 & v44) >> v48;
  v101 = v99 & v100;
  v102 = v99 + v100;
  v103 = LODWORD(STACK[0x6460]) ^ ((a4 & STACK[0x6460]) >> 1);
  LODWORD(STACK[0x6870]) = v102 - 2 * v101;
  LODWORD(STACK[0x6920]) = ((v10 & v98) >> v48) ^ ((a1 & v98) << v49);
  LODWORD(STACK[0x6860]) = ((unint64_t)(v41 & v103) << v40) ^ ((v44 & v103) >> a6);
  v104 = LODWORD(STACK[0x6840]) ^ ((((LODWORD(STACK[0x6850]) ^ 0x3D6BEBC) & a4 & 0x30832E08 ^ 0x20832C08)
                                  + ((LODWORD(STACK[0x6850]) ^ 0x3D6BEBC) & a4 ^ 0x54640340)
                                  - (((LODWORD(STACK[0x6850]) ^ 0x3D6BEBC) & a4 ^ 0x54640340) & 0x30832E08)) >> 1);
  v105 = v64 & 0xF6290DD9 ^ 0xB42801D8 ^ (v104 ^ 0xF7747B4D) & v44;
  LODWORD(STACK[0x6910]) = ((unint64_t)((((v62 & 0x20208041 | a1 & (v104 ^ 0x257EFAD5) & 0xABFC82C9) ^ 0xABDC8288)
                                              + ((v62 & 0x24238C41 | a1 & (v104 ^ 0x257EFAD5)) ^ 0x230C41)
                                              - (((v62 & 0x24238C41 | a1 & (v104 ^ 0x257EFAD5)) ^ 0x230C41) & 0xABFC82C9)) ^ 0x8FFC02C9) << v40)
                         + (((-389992584 - (v105 | 0xE8C12F78) + (v105 | 0x173ED087)) ^ 0x213ED906) >> a6);
  v106 = LODWORD(STACK[0x65A0]) ^ ((a8 & STACK[0x65A0]) >> 1);
  v107 = LODWORD(STACK[0x6830]) ^ ((a8 & STACK[0x6830]) >> 1);
  LODWORD(STACK[0x6850]) = ((v10 & v106) >> v48) + ((v106 & v41) << v49);
  v108 = LODWORD(STACK[0x6490]) ^ ((a4 & STACK[0x6490]) >> 1);
  LODWORD(STACK[0x6900]) = ((unint64_t)(a1 & v107) << v40) ^ ((v107 & v44) >> v48);
  v109 = LODWORD(STACK[0x65E8]) ^ ((a8 & STACK[0x65E8]) >> 1);
  LODWORD(STACK[0x6840]) = ((v10 & v108) >> a6) + ((v41 & v108) << v49);
  LODWORD(STACK[0x68F0]) = ((unint64_t)(a1 & v109) << v40) + ((v109 & v44) >> v48);
  v110 = LODWORD(STACK[0x6580]) ^ ((a4 & STACK[0x6580]) >> 1);
  v111 = LODWORD(STACK[0x6770]) ^ ((STACK[0x6770] & a8) >> 1);
  LODWORD(STACK[0x6830]) = ((v10 & v110) >> a6) ^ ((v41 & v110) << v49);
  v112 = LODWORD(STACK[0x6498]) ^ ((a4 & STACK[0x6498]) >> 1);
  LODWORD(STACK[0x68E0]) = ((unint64_t)(v111 & a1) << v40) | ((v111 & v44) >> a6);
  LODWORD(STACK[0x6820]) = ((v10 & v112) >> v48) | ((v41 & v112) << v49);
  v113 = LODWORD(STACK[0x6550]) ^ ((a8 & STACK[0x6550]) >> 1);
  v114 = LODWORD(STACK[0x67B0]) ^ ((a4 & STACK[0x67B0]) >> 1);
  v115 = ((v10 & v114) >> a6) ^ ((v41 & v114) << v49);
  v116 = LODWORD(STACK[0x6810]) ^ ((a8 & STACK[0x6810]) >> 1);
  LODWORD(STACK[0x67B0]) = ((unint64_t)(a1 & v113) << v40) ^ ((v113 & v44) >> v48);
  v117 = ((unint64_t)(v116 & v41) << v40) + ((v116 & v44) >> v48);
  v119 = LODWORD(STACK[0x64E0]) ^ ((a4 & STACK[0x64E0]) >> 1);
  v120 = LODWORD(STACK[0x6620]) ^ ((STACK[0x6620] & a4) >> 1);
  v121 = ((v10 & v120) >> v48) ^ ((v120 & v41) << v49);
  LODWORD(STACK[0x67F0]) = ((v10 & v119) >> a6) + ((a1 & v119) << v49);
  v122 = LODWORD(STACK[0x6560]) ^ ((a8 & STACK[0x6560]) >> 1);
  LODWORD(STACK[0x67E0]) = ((unint64_t)(a1 & v122) << v40) ^ __ROR4__(__ROR4__(((v122 & v44) >> a6) ^ 0x4271A4BE, 9) ^ 0x5F2138D2, 23);
  v123 = LODWORD(STACK[0x65D0]) ^ ((STACK[0x65D0] & a4) >> 1);
  v124 = ((unint64_t)(v123 & v41) << v40) | ((v123 & v44) >> v48);
  v125 = LODWORD(STACK[0x6558]) ^ ((a8 & STACK[0x6558]) >> 1);
  LODWORD(STACK[0x67C0]) = ((v10 & v125) >> a6) + ((a1 & v125) << v49);
  v126 = ((((LODWORD(STACK[0x65D8]) ^ 0xF628D480) & a4 ^ 0x10278080)
         - ((2 * ((LODWORD(STACK[0x65D8]) ^ 0xF628D480) & a4 ^ 0x10278080)) & 0xD44EAEB0)
         - 366520488) >> 1) ^ 0x7D006BEC;
  v127 = LODWORD(STACK[0x65D8]) ^ 0xE45997E4 ^ (v126 + 309412708 - ((2 * v126) & 0x24E286C8));
  v128 = ((v127 & v41) << v49) + ((v127 & v10) >> v48);
  v129 = LODWORD(STACK[0x6588]) ^ ((a8 & STACK[0x6588]) >> 1);
  LODWORD(STACK[0x6710]) = ((unint64_t)(a1 & v129) << v40) + ((v129 & v44) >> a6);
  v130 = STACK[0x6608];
  v131 = LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6608]);
  v132 = LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6608]);
  v133 = LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x67A0]) = v132;
  v134 = LODWORD(STACK[0x66F0]) ^ v132;
  LODWORD(STACK[0x66B0]) = v133;
  LODWORD(STACK[0x6790]) = v131;
  v135 = LODWORD(STACK[0x66E0])
       + (v133 ^ v134 ^ v131 ^ LODWORD(STACK[0x66E8]))
       - 2 * (STACK[0x66E0] & (v133 ^ v134 ^ v131 ^ LODWORD(STACK[0x66E8])));
  v136 = STACK[0x6468];
  v137 = (v136 - ((2 * v136) & 0x620FA142) - 1324887903) ^ LODWORD(STACK[0x6A80]);
  v138 = v137 ^ 0xE242077F;
  v139 = STACK[0x6470];
  v140 = v137 & 0x1BFBD981 ^ 0x10690880 ^ (v137 ^ 0xE242077F) & (LODWORD(STACK[0x6470]) ^ 0x555EDC80);
  v141 = LODWORD(STACK[0x65A8]) ^ v130 ^ 0xB8362E89;
  LODWORD(STACK[0x6810]) = v117;
  v142 = v117 ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x67D0]) = v124;
  v143 = v142 ^ v124 ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x69F0]);
  v144 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6970]);
  LODWORD(STACK[0x6A90]) = v115;
  LODWORD(STACK[0x6800]) = v121;
  v145 = v143 ^ v144 ^ v115 ^ v121 ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x6A80]) = v128;
  LODWORD(STACK[0x6630]) = v145 ^ v128 ^ LODWORD(STACK[0x69B0]) ^ v135;
  v146 = LODWORD(STACK[0x6590]) + 1748820497 - ((2 * LODWORD(STACK[0x6590])) & 0xD079C422);
  v147 = LODWORD(STACK[0x6478]) + 1748820497 - ((2 * LODWORD(STACK[0x6478])) & 0xD079C422);
  v148 = STACK[0x6628];
  LODWORD(STACK[0x6770]) = v141 ^ LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x6780]) = v148 ^ ((v130 ^ v146) - 2091967674 - ((2 * (v130 ^ v146)) & 0x69E368C));
  LODWORD(STACK[0x6760]) = v148 ^ ((v130 ^ v147) - 2091967674 - ((2 * (v130 ^ v147)) & 0x69E368C));
  LODWORD(STACK[0x6750]) ^= LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6720]) ^ v136 ^ v139 ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x64E8]) ^ 0x9F2380DF ^ LODWORD(STACK[0x6448]);
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x64A0]) ^ v139 ^ 0xC22254B8 ^ (v136 - ((2 * v136) & 0x190EA372) - 1937288775);
  LODWORD(STACK[0x6730]) = LODWORD(STACK[0x6480]) ^ v130 ^ LODWORD(STACK[0x6688]) ^ 0xFCBEF208;
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x6568]) ^ v139 ^ 0xC7EE24D ^ (v136 - ((2 * v136) & 0x85B7CE98) + 1121707852);
  LODWORD(STACK[0x6720]) = (((v139 ^ 0x1252EB36) + 110597212) ^ ((v139 ^ 0x69A5EDD7) + 2103481019) ^ ((v139 ^ 0x355203E0) + 563575950))
                         + v138
                         - 1516272236
                         + ((2 * ((v140 | 0x35195D69) - (v140 | 0x4AE6A296)) - 1781709524) ^ 0xB19B562F);
  v149 = LODWORD(STACK[0x6638]) ^ ((a8 & STACK[0x6638]) >> 1);
  v150 = a8 & (LODWORD(STACK[0x66C0]) ^ 0xCB0D3DB6) ^ 0x100080A0;
  LODWORD(STACK[0x66C0]) = ((v10 & v149) >> v48) | ((unint64_t)(v149 & v41) << v40);
  v151 = LODWORD(STACK[0x6648]) ^ ((a4 & STACK[0x6648]) >> 1);
  LODWORD(STACK[0x64A0]) = ((a1 & v151) << v92) + ((v44 & v151) >> a6);
  v152 = ((2078516328 - (v150 | 0x7BE3A468) + (v150 | 0x841C5B97)) >> 1) ^ 0x4A0E6D9B;
  v153 = (v152 - 1699475655 - ((2 * v152) & 0x35681E72)) ^ LODWORD(STACK[0x65B0]);
  v154 = LODWORD(STACK[0x65B8]) ^ ((a8 & STACK[0x65B8]) >> 1);
  LODWORD(STACK[0x6498]) = ((a1 & v153) << v92) | ((v153 & v44) >> a6);
  v155 = LODWORD(STACK[0x6690]) ^ ((a4 & STACK[0x6690]) >> 1);
  v156 = LODWORD(STACK[0x65C0]) ^ ((a8 & STACK[0x65C0]) >> 1);
  v157 = ((a1 & v154) << v92) ^ ((v154 & v44) >> a6);
  LODWORD(STACK[0x64E8]) = v157;
  v158 = (((a4 & (LODWORD(STACK[0x6650]) ^ 0x48EF955B) ^ 0xC2044209)
         - ((2 * (a4 & (LODWORD(STACK[0x6650]) ^ 0x48EF955B) ^ 0xC2044209)) & 0xEFEA1E1E)
         + 2012548879) >> 1) ^ 0x5AF8A683;
  v159 = (v158 - 900337005 - ((2 * v158) & 0x94ABE526)) ^ LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x6490]) = ((v10 & v155) >> v48) + ((unint64_t)(v41 & v155) << v40);
  v160 = v48;
  LODWORD(STACK[0x6488]) = ((v10 & v156) >> v48) ^ ((a1 & v156) << v92);
  LODWORD(STACK[0x64E0]) = ((unint64_t)(v41 & v159) << v40) ^ ((v44 & v159) >> a6);
  v161 = LODWORD(STACK[0x6660]) ^ ((a8 & STACK[0x6660]) >> 1);
  v162 = LODWORD(STACK[0x6658]) ^ ((a4 & STACK[0x6658]) >> 1);
  LODWORD(STACK[0x6480]) = ((v10 & v161) >> v48) ^ ((a1 & v161) << v92);
  LODWORD(STACK[0x6478]) = ((unint64_t)(v41 & v162) << v40) ^ ((v44 & v162) >> a6);
  v163 = LODWORD(STACK[0x6668]) ^ ((a4 & STACK[0x6668]) >> 1);
  v164 = a1;
  LODWORD(STACK[0x6470]) = ((v10 & v163) >> a6) ^ ((unint64_t)(a1 & v163) << v40);
  v165 = LODWORD(STACK[0x66A0]) ^ ((a8 & STACK[0x66A0]) >> 1);
  LODWORD(STACK[0x6468]) = ((v165 & v41) << v92) + ((v165 & v44) >> v48);
  v166 = LODWORD(STACK[0x6678]) ^ ((a4 & STACK[0x6678]) >> 1);
  v167 = v41;
  LODWORD(STACK[0x64D8]) = ((unint64_t)(v41 & v166) << v40) ^ ((v44 & v166) >> a6);
  v168 = LODWORD(STACK[0x6670]) ^ ((a8 & STACK[0x6670]) >> 1);
  LODWORD(STACK[0x6460]) = ((v10 & v168) >> v160) + ((a1 & v168) << v92);
  v169 = (unsigned __int8 *)STACK[0x6AB0];
  v170 = *(unsigned __int8 *)(STACK[0x6AB0] + 12);
  v171 = LODWORD(STACK[0x6708]) ^ ((a4 & STACK[0x6708]) >> 1);
  LODWORD(STACK[0x6458]) = ((v10 & v171) >> v160) | ((v41 & v171) << v92);
  v172 = STACK[0x6520];
  v173 = *(unsigned __int8 *)(STACK[0x6518] + (v169[11] ^ 0x20));
  v174 = v169[8];
  v175 = v174 ^ 0xB3;
  v176 = v174 ^ 0xD7;
  LODWORD(v174) = ((*(unsigned __int8 *)(v172 + (v170 ^ 0x8E)) ^ ((v170 ^ 0xEA) - 28) ^ 0xB3) << 24) | ((*(unsigned __int8 *)(v172 + (v169[14] ^ 0x67)) ^ ((v169[14] ^ 3) - 28) ^ 0x78) << 8);
  LODWORD(v170) = (((v173 >> 4) | (16 * v173)) ^ (((v173 >> 4) | (16 * v173)) >> 4) ^ (((v173 >> 4) | (16 * v173)) >> 2)) ^ 0xC6 | ((*(unsigned __int8 *)(STACK[0x6520] + v175) ^ (v176 - 28) ^ 0x44444444) << 24);
  v177 = *(unsigned __int8 *)(STACK[0x6518] + (v169[7] ^ 0x81));
  LODWORD(v175) = (((v177 >> 4) | (16 * v177)) ^ (((v177 >> 4) | (16 * v177)) >> 4) ^ (((v177 >> 4) | (16 * v177)) >> 2)) ^ 0xB6 | ((*(unsigned __int8 *)(STACK[0x6538] + (v169[5] ^ 0x39)) ^ 0x49) << 16);
  v178 = *(unsigned __int8 *)(STACK[0x6518] + (v169[9] ^ 0x29));
  LODWORD(v170) = v170 & 0xFF00FFFF | (((((v178 >> 4) | (16 * v178)) ^ (((v178 >> 4) | (16 * v178)) >> 4) ^ (((v178 >> 4) | (16 * v178)) >> 2)) ^ 0x88) << 16);
  v179 = *(unsigned __int8 *)(STACK[0x6518] + (v169[10] ^ 0xF6));
  LODWORD(v170) = v170 & 0xFFFF00FF | (((((v179 >> 4) | (16 * v179)) ^ (((v179 >> 4) | (16 * v179)) >> 4) ^ (((v179 >> 4) | (16 * v179)) >> 2)) ^ 0x4B) << 8);
  v180 = *(unsigned __int8 *)(STACK[0x6518] + (v169[1] ^ 0xDCLL));
  v181 = ((*(unsigned __int8 *)(STACK[0x6538] + (*v169 ^ 0xF4)) ^ 0xFFFFFFE7) << 24) | ((*(unsigned __int8 *)(STACK[0x6538] + (v169[2] ^ 0xC8)) ^ 0x57) << 8) & 0xFF00FFFF | (*(_BYTE *)(STACK[0x6530] + (v169[3] ^ 0x2ELL)) + (v169[3] ^ 0x3E)) ^ 0xC9 | ((((v180 >> 4) | (16 * v180)) ^ (((v180 >> 4) | (16 * v180)) >> 4) ^ (((v180 >> 4) | (16 * v180)) >> 2) ^ a2) << 16);
  LODWORD(v174) = *(unsigned __int8 *)(v172 + (v169[15] ^ 0x52)) ^ ((v169[15] ^ 0x36) - 28) ^ 0x86 | v174 | ((*(unsigned __int8 *)(v172 + (v169[13] ^ 0xB9)) ^ ((v169[13] ^ 0xDD) - 28) ^ 0xFC) << 16);
  LODWORD(v175) = v175 | ((*(unsigned __int8 *)(STACK[0x6520] + (v169[6] ^ 0x1ELL)) ^ ((v169[6] ^ 0x7A) - 28) ^ 0xCE) << 8) | ((*(unsigned __int8 *)(STACK[0x6538] + (v169[4] ^ 9)) ^ 3) << 24);
  LODWORD(STACK[0x66A0]) = ((unint64_t)((v181 ^ ((v181 & a8) >> 1)) & a1) << v40)
                         + (((v181 ^ ((v181 & a8) >> 1)) & v44) >> v160);
  LODWORD(STACK[0x6678]) = (((v175 ^ ((v175 & a4) >> 1)) & v10) >> a6)
                         + (((v175 ^ ((v175 & a4) >> 1)) & v167) << v92);
  v182 = v10;
  LODWORD(STACK[0x6690]) = ((unint64_t)((v170 ^ ((v170 & a4) >> 1)) & v167) << v40) ^ (((v170 ^ ((v170 & a4) >> 1)) & v10) >> a6);
  LODWORD(STACK[0x6688]) = (((v174 ^ ((v174 & a8) >> 1)) & v164) << v92)
                         + (((v174 ^ ((v174 & a8) >> 1)) & v44) >> v160);
  v183 = a4 >> 1;
  LODWORD(STACK[0x6450]) = ((unint64_t)(v167 & ((a4 >> 1) & 0x274DE506 ^ 0x4E9BCA0C)) << v40) ^ ((v44 & ((a4 >> 1) & 0x274DE506 ^ 0x4E9BCA0C)) >> a6);
  v184 = a8 >> 1;
  LODWORD(STACK[0x6448]) = ((v10 & ((a8 >> 1) & 0x5561A089 ^ 0xAAC34112)) >> v160) | ((v164 & ((a8 >> 1) & 0x5561A089 ^ 0xAAC34112)) << v92);
  LODWORD(STACK[0x6440]) = ((unint64_t)(((a8 >> 1) & 0x5BC14826 ^ 0xB782904C) & v167) << v40)
                         + ((((a8 >> 1) & 0x5BC14826 ^ 0xB782904C) & v44) >> a6);
  LODWORD(STACK[0x6438]) = ((v10 & ((a4 >> 1) & 0x10180F89 ^ 0x20301F13)) >> v160)
                         + ((v164 & ((a4 >> 1) & 0x10180F89 ^ 0x20301F13)) << v92);
  v185 = (a8 >> 1) & 0x24381E07 ^ 0x48703C0E;
  LODWORD(STACK[0x6430]) = ((v10 & v185) >> v160) + ((unint64_t)(v185 & v167) << v40);
  v186 = (a4 >> 1) & 0x24381E07 ^ 0x48703C0E;
  v187 = (a4 >> 1) & 0x24381E07 ^ 0x24080201 ^ v44;
  if ((v164 & v186) == 0)
    v187 = v44;
  LODWORD(STACK[0x6428]) = ((v187 & v186) >> a6) + ((v164 & v186) << v92);
  LODWORD(STACK[0x6420]) = ((v164 & v185) << v92) ^ ((v185 & v44) >> a6);
  LODWORD(STACK[0x6418]) = ((v10 & v186) >> v160) | ((unint64_t)(v167 & v186) << v40);
  v188 = v184 & 0x2BD0C6DA ^ 0x57A18DB5;
  v189 = v188 & v44;
  v190 = v164 & v188;
  LODWORD(STACK[0x6410]) = ((_DWORD)v190 << v92) ^ ((v188 & v44) >> v160) ^ v157 & 0xFFBFFFFF;
  v191 = v183 & 0x2BD0C6DA ^ 0x57A18DB5;
  v192 = v10 & v191;
  v193 = v167 & v191;
  LODWORD(STACK[0x6408]) = (v192 >> v160) | ((_DWORD)v193 << v92);
  LODWORD(STACK[0x6400]) = (v190 << v40) | (v189 >> a6);
  v194 = v184 & 0x75A9FA88 ^ 0xEB53F511;
  v195 = v194 & v167;
  v196 = v167;
  v197 = (v194 & v44) >> v160;
  LODWORD(STACK[0x63F8]) = (v195 << v40) + v197;
  LODWORD(STACK[0x63F0]) = v197 + ((_DWORD)v195 << v92);
  v198 = v184 & 0x2726089F ^ 0x4E4C113F;
  LODWORD(STACK[0x6AB0]) = v198;
  LOBYTE(v197) = v92;
  LODWORD(STACK[0x6670]) = v10 & v198;
  LODWORD(STACK[0x63E8]) = ((v10 & v198) >> a6) + ((v164 & v198) << v92);
  v199 = v183 & 0x2726089F ^ 0x4E4C113F;
  LODWORD(STACK[0x63E0]) = ((unint64_t)(v167 & v199) << v40) + ((v44 & v199) >> v160);
  LODWORD(STACK[0x63D8]) = ((unint64_t)(v164 & v199) << v40) + ((v44 & v199) >> a6);
  v200 = v183 & 0x3B1FF972 ^ 0x763FF2E5;
  v201 = v164 & v200;
  STACK[0x6660] = v201;
  LODWORD(STACK[0x6658]) = v10 & v200;
  LODWORD(STACK[0x63D0]) = ((v10 & v200) >> v160) + ((_DWORD)v201 << v92);
  v202 = v184 & 0x3B1FF972 ^ 0x763FF2E5;
  v203 = v183 & 0x60710B3F ^ 0xC0E2167E;
  v204 = v44 & v203;
  v205 = v167 & v203;
  STACK[0x6668] = v205;
  LODWORD(STACK[0x63C8]) = (v205 << v40) + ((v44 & v203) >> v160);
  v206 = a8 >> 1;
  v207 = v184 & 0x60710B3F ^ 0xC0E2167E;
  v208 = v10 & v207;
  v209 = v164 & v207;
  LODWORD(STACK[0x63C0]) = (v208 >> a6) | ((_DWORD)v209 << v92);
  v210 = v184 & 0x5989E7BA ^ 0xB313CF74;
  LODWORD(STACK[0x6680]) = (LODWORD(STACK[0x6680]) ^ 0xC6501AD2 ^ v184 & 0x5989E7BA) + (v210 | v44);
  LODWORD(STACK[0x63B8]) = LODWORD(STACK[0x65C8]) - ((2 * LODWORD(STACK[0x6510])) & 0x6A7B5264) - 1341478863;
  v211 = v160;
  v212 = v208 >> v160;
  v213 = v207 & v196;
  LODWORD(STACK[0x63B0]) = v212 + (v213 << v40);
  LODWORD(STACK[0x63A8]) = v212 | (v209 << v40);
  v214 = v164 & v203;
  LODWORD(v205) = v182;
  LODWORD(STACK[0x63A0]) = ((v182 & v203) >> a6) + (v214 << v40);
  LODWORD(STACK[0x6398]) = ((v207 & v44) >> v160) + ((_DWORD)v213 << v197);
  v215 = a4 >> 1;
  v216 = (a4 >> 1) & 0x4E29C5EB ^ 0x9C538BD7;
  v217 = v196 & v216;
  LODWORD(STACK[0x6390]) = (v217 << v40) | ((v44 & v216) >> v160);
  v218 = (v182 & v216) >> a6;
  LODWORD(STACK[0x6388]) = v218 + ((_DWORD)v217 << v197);
  LODWORD(STACK[0x6380]) = v218 | (v217 << v40);
  v219 = v164;
  LODWORD(STACK[0x6378]) = ((v164 & v216) << v197) + ((v44 & v216) >> a6);
  v220 = v206 & 0x4E29C5EB ^ 0x9C538BD7;
  LODWORD(v217) = v182 & v220;
  LODWORD(STACK[0x6370]) = ((v182 & v220) >> v160) + ((unint64_t)(v220 & v196) << v40);
  v221 = (a4 >> 1) & 0x5989E7BA ^ 0xB313CF74;
  LODWORD(STACK[0x6368]) = ((unint64_t)(v164 & v221) << v40) | ((v44 & v221) >> v160);
  v222 = v182 & v210;
  LODWORD(STACK[0x6360]) = ((v182 & v210) >> a6) + ((v210 & v196) << v197);
  v223 = ((LODWORD(STACK[0x66A8]) ^ 0x6F038178) - 1006771517) ^ ((LODWORD(STACK[0x66A8]) ^ 0xFA0DD77C) + 1458812103) ^ ((LODWORD(STACK[0x66A8]) ^ 0x69895B6F) - 982042410);
  LODWORD(v213) = v206 & 0x6363ABA ^ 0xC6C7574;
  v224 = (v164 & v213) << v197;
  v225 = (a4 >> 1) & 0x6363ABA ^ 0xC6C7574;
  *(_QWORD *)(v11 - 152) = v192;
  LODWORD(STACK[0x6348]) = (v213 & v44) >> v211;
  v226 = (v205 & v225) >> a6;
  v227 = (unint64_t)(v196 & v225) << v40;
  LODWORD(STACK[0x6338]) = (v44 & v225) >> a6;
  v228 = *(_QWORD *)(v11 - 152);
  STACK[0x6330] = v193 << v40;
  LODWORD(STACK[0x6328]) = v228 >> a6;
  LODWORD(v228) = v215 & 0x75A9FA88 ^ 0xEB53F511;
  LODWORD(v193) = (v205 & v228) >> a6;
  LODWORD(STACK[0x6318]) = LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x66D0]);
  v229 = v219 & v228;
  LOBYTE(v225) = v197;
  LODWORD(v228) = (_DWORD)v229 << v197;
  STACK[0x6310] = v229 << v40;
  STACK[0x6340] = v227;
  LODWORD(STACK[0x6308]) = v226 | v227;
  v230 = v196;
  LODWORD(v229) = STACK[0x6AB0] & v196;
  LODWORD(STACK[0x6300]) = LODWORD(STACK[0x6670]) >> v211;
  LODWORD(STACK[0x62F8]) = (_DWORD)v229 << v197;
  LODWORD(STACK[0x6350]) = v224;
  LODWORD(STACK[0x62F0]) = ((v205 & v213) >> v211) + v224;
  v231 = v202 & v196;
  STACK[0x62E8] = v231 << v40;
  LODWORD(STACK[0x62E0]) = (_DWORD)v231 << v197;
  LODWORD(STACK[0x6320]) = v193;
  LODWORD(STACK[0x62D8]) = v193 | v228;
  LODWORD(STACK[0x62D0]) = (v202 & v44) >> a6;
  LOBYTE(v197) = v211;
  LODWORD(STACK[0x62C8]) = (v202 & v44) >> v211;
  LODWORD(STACK[0x62C0]) = LODWORD(STACK[0x6658]) >> a6;
  STACK[0x62B8] = STACK[0x6660] << v40;
  LOBYTE(v213) = v225;
  LODWORD(STACK[0x62B0]) = (_DWORD)v214 << v225;
  v232 = v204 >> a6;
  v233 = v215 & 0x71BB20C7 ^ 0xE376418F;
  v234 = v219;
  v235 = (unint64_t)(v219 & v233) << v40;
  v236 = v206 & 0x71BB20C7 ^ 0xE376418F;
  v237 = (v236 & v230) << v213;
  LODWORD(STACK[0x6290]) = v217 >> a6;
  v238 = v234 & v220;
  v239 = (_DWORD)v238 << v213;
  LODWORD(v228) = (v220 & v44) >> v197;
  LODWORD(STACK[0x6280]) = (v238 << v40) | v228;
  LOBYTE(v214) = v197;
  v240 = v234 & v210;
  STACK[0x6278] = v240 << v40;
  LODWORD(STACK[0x6270]) = (v222 >> v197) + (v240 << v40);
  LODWORD(STACK[0x6268]) = (v44 & v221) >> a6;
  v241 = v230 & v221;
  v242 = (_DWORD)v241 << v213;
  v243 = (v205 & v221) >> v197;
  LODWORD(STACK[0x6258]) = v243 | (v241 << v40);
  LODWORD(STACK[0x6250]) = (_DWORD)v240 << v213;
  LODWORD(STACK[0x6248]) = (LODWORD(STACK[0x6680]) + 1) >> a6;
  LODWORD(v241) = STACK[0x6668] << v213;
  LODWORD(STACK[0x62A8]) = v232;
  LODWORD(STACK[0x6240]) = v232 + v241;
  LODWORD(v241) = v236 & v44;
  STACK[0x66A8] = v40;
  STACK[0x6238] = (unint64_t)(v234 & v236) << v40;
  LODWORD(v240) = (v205 & v233) >> v214;
  LODWORD(STACK[0x6228]) = v240 + ((v230 & v233) << v213);
  LODWORD(STACK[0x6220]) = ((v205 & v233) >> a6) | v235;
  v244 = (v236 & v44) >> a6;
  LODWORD(STACK[0x6210]) = (v241 >> v214) + v237;
  LODWORD(STACK[0x6288]) = v239;
  LODWORD(STACK[0x6208]) = v239 + v228;
  LODWORD(STACK[0x6200]) = (v210 & v44) >> a6;
  LODWORD(STACK[0x6260]) = v242;
  LODWORD(STACK[0x61F8]) = v243 | v242;
  v245 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 4);
  HIDWORD(v246) = STACK[0x64E0];
  LODWORD(v246) = STACK[0x64E0];
  LODWORD(STACK[0x61F0]) = v246 >> 23;
  LODWORD(v241) = STACK[0x64E8] & 0x400000;
  LODWORD(STACK[0x61E8]) = v241;
  LODWORD(STACK[0x61E0]) = -(int)v241;
  STACK[0x62A0] = v235;
  LODWORD(STACK[0x6230]) = v240;
  LODWORD(STACK[0x61DC]) = v240 + v235;
  LODWORD(STACK[0x6298]) = v237;
  LODWORD(STACK[0x6218]) = v244;
  LODWORD(STACK[0x61D0]) = v244 | v237;
  LODWORD(STACK[0x6358]) = v223;
  LODWORD(STACK[0x61C8]) = v223 + 33468903;
  LODWORD(STACK[0x6AB0]) = STACK[0x6AA0];
  HIDWORD(v246) = STACK[0x64D8];
  LODWORD(v246) = STACK[0x64D8];
  LODWORD(STACK[0x61C0]) = v246 >> 4;
  HIDWORD(v246) = STACK[0x66C0];
  LODWORD(v246) = STACK[0x66C0];
  LODWORD(STACK[0x61BC]) = v246 >> 28;
  return v245();
}

uint64_t sub_100AFECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, char a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  int v59;
  int v60;
  unint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  BOOL v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  uint64_t v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unint64_t v275;
  unint64_t v276;
  _DWORD *v277;
  unint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  _DWORD *v282;
  unint64_t v283;
  int v284;
  _DWORD *v285;
  _DWORD *v286;
  uint64_t v287;
  _DWORD *v288;
  uint64_t v289;
  _DWORD *v290;
  _DWORD *v291;
  int *v292;
  int v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  unint64_t v297;
  unint64_t v298;
  _DWORD *v299;
  uint64_t v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  _DWORD *v305;
  uint64_t v306;
  int v307;
  _DWORD *v308;
  _DWORD *v309;
  int *v310;
  int *v311;
  uint64_t v312;
  int *v313;
  uint64_t v314;
  int *v315;
  uint64_t v316;
  int *v317;
  uint64_t v318;
  int *v319;
  uint64_t v320;
  int *v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  unint64_t v327;
  int *v328;
  int v329;
  int *v330;
  int v331;
  int v332;
  int *v333;
  _DWORD *v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  int v346;
  _DWORD *v347;
  _DWORD *v348;
  _DWORD *v349;
  unint64_t v350;
  unint64_t v351;
  int *v352;
  int v353;
  uint64_t v354;
  _DWORD *v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  _DWORD *v359;
  uint64_t v360;
  _DWORD *v361;
  uint64_t v362;
  unint64_t v363;
  _DWORD *v364;
  uint64_t v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  _DWORD *v371;
  uint64_t v372;
  _DWORD *v373;
  uint64_t v374;
  _DWORD *v375;
  uint64_t v376;
  unint64_t v377;
  unint64_t v378;
  unint64_t v379;
  _DWORD *v380;
  _DWORD *v381;
  uint64_t v382;
  _DWORD *v383;
  uint64_t v384;
  _DWORD *v385;
  uint64_t v386;
  _DWORD *v387;
  _DWORD *v388;
  _DWORD *v389;
  _DWORD *v390;
  uint64_t v391;
  _DWORD *v392;
  uint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  _DWORD *v399;
  uint64_t v400;
  unint64_t v401;
  uint64_t v402;
  _DWORD *v403;
  uint64_t v404;
  _DWORD *v405;
  _DWORD *v406;
  unint64_t v407;
  _DWORD *v408;
  _DWORD *v409;
  uint64_t v410;
  _DWORD *v411;
  _DWORD *v412;
  _DWORD *v413;
  unint64_t v414;
  _DWORD *v415;
  uint64_t v416;
  unint64_t v417;
  uint64_t v418;
  unint64_t v419;
  unint64_t v420;
  _DWORD *v421;
  uint64_t v422;
  int v423;
  uint64_t v424;
  unint64_t v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  unint64_t v429;
  unint64_t v430;
  _DWORD *v431;
  uint64_t v432;
  _DWORD *v433;
  uint64_t v434;
  _DWORD *v435;
  uint64_t v436;
  _DWORD *v437;
  uint64_t v438;
  unint64_t v439;
  unint64_t v440;
  _DWORD *v441;
  _DWORD *v442;
  uint64_t v443;
  _DWORD *v444;
  uint64_t v445;
  unint64_t v446;
  unint64_t v447;
  _DWORD *v448;
  uint64_t v449;
  unint64_t v450;
  _DWORD *v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  unint64_t v455;
  int v456;
  unint64_t v457;
  _DWORD *v458;
  uint64_t v459;
  unint64_t v460;
  uint64_t v461;
  unint64_t v462;
  uint64_t v463;
  _DWORD *v464;
  uint64_t v465;
  _DWORD *v466;
  uint64_t v467;
  _DWORD *v468;
  uint64_t v469;
  _DWORD *v470;
  uint64_t v471;
  unint64_t v472;
  uint64_t v473;
  _DWORD *v474;
  uint64_t v475;
  _DWORD *v476;
  uint64_t v477;
  _DWORD *v478;
  int v479;
  unint64_t v480;
  unint64_t v481;
  _DWORD *v482;
  uint64_t v483;
  unint64_t v484;
  uint64_t v485;
  _DWORD *v486;
  _DWORD *v487;
  uint64_t v488;
  unint64_t v489;
  uint64_t v490;
  unint64_t v491;
  uint64_t v492;
  _DWORD *v493;
  _DWORD *v494;
  uint64_t v495;
  _DWORD *v496;
  uint64_t v497;
  _DWORD *v498;
  char *v499;
  char *v500;
  uint64_t v501;
  char *v502;
  uint64_t v503;
  char *v504;
  char *v505;
  char *v506;
  uint64_t v507;
  unint64_t v508;
  int v509;
  int v510;
  unint64_t v511;
  uint64_t v512;
  uint64_t v513;
  _DWORD *v514;
  uint64_t v515;
  unint64_t v516;
  unint64_t v517;
  unint64_t v518;
  _DWORD *v519;
  uint64_t v520;
  _DWORD *v521;
  uint64_t v522;
  _DWORD *v523;
  uint64_t v524;
  _DWORD *v525;
  char *v526;
  char *v527;
  uint64_t v528;
  char *v529;
  uint64_t v530;
  unint64_t v531;
  uint64_t v532;
  unint64_t v533;
  int v534;
  unint64_t v535;
  _DWORD *v536;
  _DWORD *v537;
  _DWORD *v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  _DWORD *v542;
  uint64_t v543;
  _DWORD *v544;
  _DWORD *v545;
  _DWORD *v546;
  uint64_t v547;
  _DWORD *v548;
  uint64_t v549;
  _DWORD *v550;
  uint64_t v551;
  _DWORD *v552;
  int v553;
  int v554;
  _DWORD *v555;
  _DWORD *v556;
  _DWORD *v557;
  _DWORD *v558;
  unint64_t v559;
  _DWORD *v560;
  unint64_t v561;
  unint64_t v562;
  _DWORD *v563;
  _DWORD *v564;
  unint64_t v565;
  unint64_t v566;
  uint64_t v567;
  unint64_t v568;
  unint64_t v569;
  _DWORD *v570;
  _DWORD *v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  _DWORD *v575;
  uint64_t v576;
  _DWORD *v577;
  _DWORD *v578;
  _DWORD *v579;
  uint64_t v580;
  _DWORD *v581;
  uint64_t v582;
  _DWORD *v583;
  uint64_t v584;
  _DWORD *v585;
  uint64_t v586;
  unint64_t v587;
  unint64_t v588;
  _DWORD *v589;
  uint64_t v590;
  _DWORD *v591;
  uint64_t v592;
  unint64_t v593;
  uint64_t v594;
  unint64_t v595;
  uint64_t v596;
  unint64_t v597;
  unint64_t v598;
  _DWORD *v599;
  _DWORD *v600;
  uint64_t v601;
  _DWORD *v602;
  uint64_t v603;
  unint64_t v604;
  unint64_t v605;
  _DWORD *v606;
  uint64_t v607;
  _DWORD *v608;
  uint64_t v609;
  unint64_t v610;
  uint64_t v611;
  _DWORD *v612;
  uint64_t v613;
  _DWORD *v614;
  uint64_t v615;
  _DWORD *v616;
  uint64_t v617;
  _DWORD *v618;
  _DWORD *v619;
  _DWORD *v620;
  uint64_t v621;
  _DWORD *v622;
  uint64_t v623;
  unint64_t v624;
  uint64_t v625;
  _DWORD *v626;
  uint64_t v627;
  _DWORD *v628;
  _DWORD *v629;
  _DWORD *v630;
  uint64_t v631;
  unint64_t v632;
  uint64_t v633;
  _DWORD *v634;
  unint64_t v635;
  _DWORD *v636;
  _DWORD *v637;
  _DWORD *v638;
  unint64_t v639;
  _DWORD *v640;
  _DWORD *v641;
  _DWORD *v642;
  unint64_t v643;
  _DWORD *v644;
  unint64_t v645;
  _DWORD *v646;
  unint64_t v647;
  unint64_t v648;
  uint64_t v649;
  unint64_t v650;
  unint64_t v651;
  _DWORD *v652;
  uint64_t v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  int v676;
  int v677;
  unsigned int v678;
  int v679;
  int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  char *v687;
  unsigned int v688;
  int v689;
  unint64_t v690;
  int v691;
  uint64_t v692;
  char *v693;
  char *v694;
  int v695;
  unint64_t v696;
  unint64_t v697;
  unsigned int v698;
  unsigned int v699;
  int v700;
  unsigned int v701;
  BOOL v702;
  int v703;
  int v704;
  int v705;

  LODWORD(STACK[0x6AC0]) = v8;
  LODWORD(STACK[0x66A0]) = v9 & 0xFFFFFFF6;
  v21 = STACK[0x6518];
  v22 = *(unsigned __int8 *)(STACK[0x6518] + (*(unsigned __int8 *)(v10 + (v9 & 0xFFFFFFF6 ^ 0x2E38C81B)) ^ 0xA6));
  v23 = ((v9 & 0x9AFCA7D8 ^ 0x8E8A259) + (v9 & 0x65035821) - 1) ^ 0x26D06A46;
  STACK[0x6650] = v23;
  LODWORD(STACK[0x61B0]) = (v8 - 2487) | 0x850;
  v24 = ((v22 >> 4) | (16 * v22)) ^ (((v22 >> 4) | (16 * v22)) >> 4) ^ ~(((v22 >> 4) | (16 * v22)) >> (((v8 + 73) | 0x50) + 44));
  v25 = *(unsigned __int8 *)(v10 + (v9 & (v8 - 19526) ^ 0x2E38C81Au));
  v26 = STACK[0x6520];
  LODWORD(v25) = *(unsigned __int8 *)(STACK[0x6520] + (v25 ^ 0xB5)) ^ ((v25 ^ 0xD1) - 28) ^ 0xDC;
  LODWORD(STACK[0x6690]) = v9 & 0xFFFFFFF1;
  LODWORD(v25) = ((_DWORD)v25 << 24) | (v24 << 16);
  v27 = STACK[0xDA70];
  STACK[0x6658] = STACK[0xDA70];
  v28 = *(unsigned __int8 *)(v26 + (*(unsigned __int8 *)(v10 + v23) ^ 0xELL)) ^ ((*(_BYTE *)(v10 + v23) ^ 0x6A)
                                                                                                - 28) ^ 0xC8;
  v29 = *(unsigned __int8 *)(v21
                           + (*(unsigned __int8 *)(v27
                                                 + ((((2 * (v9 & 0xFFFFFFF1 ^ 0x7D8727E1)) & 0x7E262BC0)
                                                   - (v9 & 0xFFFFFFF1 ^ 0x7D8727E1)
                                                   - 1058215393) ^ 0x935305E0)) ^ 0xACLL));
  v30 = v9 & 0xFFFFFFFD ^ 0x2E38C81A;
  STACK[0x6680] = v30;
  LODWORD(v30) = *(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v27 + v30) ^ 0xDFLL));
  v31 = v9;
  v32 = ((2 * (v9 & 0xFFFFFFF5 ^ 0xEC65CAE4)) & 0x9D8D5B00) - (v9 & 0xFFFFFFF5 ^ 0xEC65CAE4) - 1321643395;
  v33 = ((v32 & 0x2EC4DB4 ^ 0x2440983) + (v32 & 0xFD13B241) - 1) ^ 0x71205909;
  STACK[0x6678] = v33;
  v34 = STACK[0x6530];
  LODWORD(v25) = v25 & 0xFFFF00FF | (((*(_BYTE *)(STACK[0x6530]
                                                                 + (*(unsigned __int8 *)(v27 + v33) ^ 0x3ELL))
                                                      + (*(_BYTE *)(v27 + v33) ^ 0x2E)) ^ 0xCF) << 8);
  v35 = ((v31 & 0xFFFFFFF2 ^ 0xD5AB07F0)
       + (v31 & 0xA7B94952 ^ 0x2210480A)
       - ((v31 & 0xFFFFFFF2 ^ 0xD5AB07F0) & 0xA7B94952)) ^ 0x5C2A86B5;
  STACK[0x6648] = v35;
  LODWORD(v35) = *(unsigned __int8 *)(v26 + *(unsigned __int8 *)(v27 + v35)) ^ ((*(_BYTE *)(v27 + v35) ^ 0x64)
                                                                                               - 28) ^ 0x83;
  v36 = v31 ^ 0x2E38C81Au;
  STACK[0x6670] = v36;
  v37 = *(unsigned __int8 *)(v27 + v36) ^ 0xA6;
  v38 = (((((v29 >> 4) | (16 * v29)) ^ (((v29 >> 4) | (16 * v29)) >> 4) ^ (((v29 >> 4) | (16 * v29)) >> 2)) ^ 0x47) << 8) | ((_DWORD)v35 << 16);
  LODWORD(STACK[0x6628]) = v31 & 0xFFFFFFFE;
  LODWORD(v35) = (((2 * (v31 & 0xFFFFFFFE ^ 0xF02F7760)) | 0xB8C04C4) - (v31 & 0xFFFFFFFE ^ 0xF02F7760) + 2050620830) ^ 0xA4AE02E7;
  v39 = *(unsigned __int8 *)(v27 + ((-2062174946 - (_DWORD)v35 + ((2 * (_DWORD)v35) | 0xF5D495C4)) ^ 0x8595F51C));
  v40 = STACK[0x6538];
  LODWORD(v30) = (((((v30 >> 4) | (16 * v30)) ^ (((v30 >> 4) | (16 * v30)) >> 4) ^ (((v30 >> 4) | (16 * v30)) >> 2)) ^ 0x49) << 8) | ((*(unsigned __int8 *)(STACK[0x6538] + v37) ^ 0xE2) << 24) | ((*(unsigned __int8 *)(v26 + (v39 ^ 0xB8)) ^ ((v39 ^ 0xDC) - 28) ^ 0x61) << 16);
  LODWORD(v39) = (v31 & 0x41199F4A ^ 0x19080B) + (v31 & 0xBEE660B0 ^ 0x8864031) - 2;
  v41 = *(unsigned __int8 *)(v27
                           + (((v39 & 0x2444E1B0 ^ 0x24448021)
                             + (v39 ^ 0xD1187FDA)
                             - ((v39 ^ 0xD1187FDA) & 0x2444E1B0)) ^ 0xD3FB1E4ELL));
  v42 = *(_BYTE *)(v34 + (v41 ^ 0xE1));
  v43 = ((v31 & 0xEF6B56F4 ^ 0xA360001B) + (v31 & 0x1094A900 ^ 0x10042001) - 2) ^ 0x9D5CE801;
  STACK[0x6638] = v43;
  v44 = (v28 << 8) & 0xFF00FFFF | (((v42 + (v41 ^ 0xF1)) ^ 0xC) << 16);
  v45 = (-1265374724 - (v31 & 0xFFFFFFF0 ^ 0xB8D5E3B0 | 0xB493E9FC) + (v31 & 0xFFFFFFF0 ^ 0xB8D5E3B0 | 0x4B6C1603)) ^ 0xDD813DACLL;
  STACK[0x6630] = v45;
  v46 = *(unsigned __int8 *)(v27 + v43) ^ 0x4ELL;
  LODWORD(STACK[0x6620]) = v31 & 0xFFFFFFFB;
  LODWORD(v37) = (((2 * (v31 & 0xFFFFFFFB ^ 0xEE54CAA2)) & 0x2BDCDEF4) - (v31 & 0xFFFFFFFB ^ 0xEE54CAA2) - 367947643) ^ 0xE392D986;
  LODWORD(v43) = *(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v27 + v45) ^ 0x38));
  v47 = *(unsigned __int8 *)(v27 + (((_DWORD)v37 - ((2 * (_DWORD)v37) & 0x8956C00A) + 1152081925) ^ 0x8D442BBA));
  LODWORD(v25) = *(unsigned __int8 *)(v40 + v46) | v25;
  LODWORD(v46) = *(unsigned __int8 *)(v26 + (v47 ^ 0xCB));
  v48 = v38 & 0xFFFFFF00 | (((v43 >> 4) | (16 * v43)) ^ (((v43 >> 4) | (16 * v43)) >> 4) ^ (((v43 >> 4) | (16 * v43)) >> 2)) ^ 0xC9;
  LODWORD(v43) = (241819263 - (v31 & 0xFFFFFFF8 ^ 0xC8C012C0 | 0xE69DE7F) + (v31 & 0xFFFFFFF8 ^ 0xC8C012C0 | 0xF1962180)) ^ 0xE99420A4;
  v49 = (((2 * (_DWORD)v43) | 0xB1698F14) - v43 + 659241078) ^ 0x264E1C71;
  STACK[0x6668] = v49;
  LODWORD(STACK[0x6640]) = v31;
  v50 = ((v31 & 0xFFFFFFFC ^ 0x7C13EC8) + (v31 & 0xB55C7200 ^ 0xB01C4003) - ((v31 & 0xFFFFFFFC ^ 0x7C13EC8) & 0xB55C7200)) & 0xFFFFFFFC ^ 0x9CA584D3;
  STACK[0x6660] = v50;
  LODWORD(v46) = v44 | (((v46 ^ 0x6F)
                       + (v47 ^ 0xFFFFFFAF)
                       - 28
                       - 2 * ((v46 ^ 0x6F) & ((v47 ^ 0xFFFFFFAF) - 28))) << 24) | *(unsigned __int8 *)(v26 + (*(unsigned __int8 *)(v27 + v49) ^ 0xALL)) ^ ((*(_BYTE *)(v27 + v49) ^ 0x6E) - 28) ^ 0x3B;
  LODWORD(STACK[0x6610]) = 775473182;
  v51 = *(unsigned __int8 *)(v27 + v50);
  v52 = v31 & 0xFFFFFFF3 ^ 0x2E38C81E;
  STACK[0x6618] = v52;
  LODWORD(v30) = *(unsigned __int8 *)(v40 + (v51 ^ 0x3C)) | v30;
  LODWORD(v30) = v30 ^ 0x27 ^ (((v30 ^ 0x27) & v16) >> 1);
  v53 = v48 | ((*(unsigned __int8 *)(v26 + (*(unsigned __int8 *)(v27 + v52) ^ 0xE2)) ^ ((*(unsigned __int8 *)(v27 + v52) ^ 0x86)
                                                                                        - 28) ^ 0xB7) << 24);
  LODWORD(v25) = v25 ^ 0x6E ^ (((v25 ^ 0x6E) & v16) >> 1);
  LODWORD(v43) = ((unint64_t)((v53 ^ ((v53 & v14) >> 1)) & v15) << STACK[0x66A8]) | (((v53 ^ ((v53 & v14) >> 1)) & a6) >> v12);
  LODWORD(v50) = LODWORD(STACK[0x6450]) ^ v11 ^ (((v30 & v15) << a7) + ((v30 & v18) >> a8));
  LODWORD(v49) = v17 ^ LODWORD(STACK[0x6448]) ^ (((v46 ^ ((v46 & v14) >> 1)) & a6) >> v12) ^ ((unint64_t)((v46 ^ ((v46 & v14) >> 1)) & v13) << STACK[0x66A8]);
  v54 = v19 ^ LODWORD(STACK[0x6440]) ^ (((v25 & v13) << a7) | ((v25 & v18) >> a8));
  LODWORD(v25) = LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x6438]) ^ v43;
  LODWORD(v51) = v54 ^ (LODWORD(STACK[0x6A80]) - LODWORD(STACK[0x6A90]));
  LODWORD(STACK[0x6600]) = v54;
  LODWORD(STACK[0x65F0]) = v50;
  LODWORD(v51) = 411032801
               * (v50 ^ (((-316877179 * v51) ^ ((-316877179 * v51) >> 16))
                       - (((-316877179 * (_DWORD)v51) ^ ((-316877179 * v51) >> 16)) >> 8)));
  LODWORD(STACK[0x65F8]) = v25;
  LODWORD(v51) = -613350623 * (v51 - WORD1(v51) - ((v51 - WORD1(v51)) >> 8) + v25);
  LODWORD(v34) = v51 + WORD1(v51) - ((v51 + WORD1(v51)) >> 8);
  v55 = ((LODWORD(STACK[0x6A50]) - (v34 + v49)) ^ (v34 + v49))
      + 2 * ((LODWORD(STACK[0x6A50]) - (v34 + v49)) & (v34 + v49));
  v56 = STACK[0x67B0];
  v57 = STACK[0x6710];
  HIDWORD(v58) = v54 ^ (LODWORD(STACK[0x6710]) - LODWORD(STACK[0x67B0]));
  LODWORD(v58) = HIDWORD(v58);
  LODWORD(v43) = (v58 >> 15) ^ __ROR4__((v51 ^ LODWORD(STACK[0x69F0])) - v51 + 2 * (v51 & LODWORD(STACK[0x69F0])), 15) ^ 0xC62DBEBB;
  LODWORD(v27) = 411032801
               * (v50 ^ (((-316877179 * HIDWORD(v58)) ^ ((-316877179 * HIDWORD(v58)) >> 16))
                       - (((-316877179 * HIDWORD(v58)) ^ ((-316877179 * HIDWORD(v58)) >> 16)) >> 8)));
  LODWORD(v27) = -613350623 * (v27 - WORD1(v27) - ((v27 - WORD1(v27)) >> 8) + v25);
  LODWORD(v27) = v27 + WORD1(v27);
  LODWORD(STACK[0x6608]) = v49;
  v59 = v27 - (v27 >> 8) + v49;
  v60 = v59 + LODWORD(STACK[0x6970]) - 2 * (v59 & STACK[0x6970]);
  LODWORD(v58) = __ROR4__(v43, 17);
  v61 = STACK[0xDA88];
  STACK[0x65E8] = STACK[0xDA88];
  LODWORD(v21) = 923858245 * (v27 + v49 - (v27 >> 8));
  v62 = v21 - WORD1(v21) + v61 + ((v21 - WORD1(v21)) >> 8);
  v63 = (((HIDWORD(v58) ^ v58 ^ 0xDF5DE316) - v34) ^ v34) + 2 * (((HIDWORD(v58) ^ v58 ^ 0xDF5DE316) - v34) & v34);
  v64 = ((v21 ^ (-923858245 * (v27 + v49 - (v27 >> 8))) ^ (LODWORD(STACK[0x6990])
                                                                       - (v21 ^ LODWORD(STACK[0x6990]))))
       + LODWORD(STACK[0x6990])) ^ v21;
  LODWORD(STACK[0x68D0]) += v61
                          + 923858245 * v59
                          - ((923858245 * v59) >> 16)
                          + ((923858245 * v59 - ((923858245 * v59) >> 16)) >> 8);
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6358]) < 0x50796ED2;
  v65 = STACK[0x66F0];
  v66 = STACK[0x6790];
  if ((v62 & 1) != 0)
    v67 = STACK[0x6790];
  else
    v67 = STACK[0x66F0];
  LODWORD(STACK[0x65C8]) = v67;
  v68 = STACK[0x67A0];
  if ((v62 & 1) != 0)
    v66 = STACK[0x67A0];
  LODWORD(STACK[0x6A50]) = v66;
  if ((v62 & 1) != 0)
    v69 = STACK[0x66B0];
  else
    v69 = v68;
  if ((v62 & 1) != 0)
    v70 = v65;
  else
    v70 = STACK[0x66B0];
  v71 = STACK[0x66E0];
  v72 = STACK[0x66D8];
  if ((v62 & 1) != 0)
    v73 = STACK[0x66D8];
  else
    v73 = STACK[0x66E0];
  LODWORD(STACK[0x65C0]) = v73;
  v74 = STACK[0x66E8];
  if ((v62 & 1) == 0)
    v71 = STACK[0x66E8];
  LODWORD(STACK[0x69F0]) = v71;
  if ((v62 & 1) != 0)
    v75 = v74;
  else
    v75 = v55;
  if ((v62 & 1) != 0)
    v76 = v55;
  else
    v76 = v72;
  v77 = STACK[0x6A60];
  v78 = STACK[0x6A40];
  if ((v62 & 1) != 0)
    v79 = STACK[0x6A40];
  else
    v79 = STACK[0x6A60];
  LODWORD(STACK[0x65B8]) = v79;
  v80 = STACK[0x6A70];
  if ((v62 & 1) != 0)
    v78 = STACK[0x6A70];
  LODWORD(STACK[0x6970]) = v78;
  if ((v62 & 1) != 0)
    v81 = STACK[0x66D0];
  else
    v81 = v80;
  if ((v62 & 1) != 0)
    v82 = v77;
  else
    v82 = STACK[0x66D0];
  LODWORD(STACK[0x6548]) = v82;
  v83 = STACK[0x6A20];
  if ((v62 & 1) != 0)
    v84 = v63;
  else
    v84 = STACK[0x6A20];
  LODWORD(STACK[0x6990]) = v84;
  v85 = STACK[0x6A30];
  if ((v62 & 1) != 0)
    v86 = v83;
  else
    v86 = v85;
  *(_QWORD *)(v20 - 152) = v86;
  if ((v62 & 1) != 0)
  {
    v63 = STACK[0x66C8];
    v87 = v85;
  }
  else
  {
    v87 = STACK[0x66C8];
  }
  v88 = STACK[0x6A10];
  v89 = STACK[0x69D0];
  if ((v62 & 1) != 0)
    v90 = STACK[0x6A10];
  else
    v90 = STACK[0x69D0];
  LODWORD(STACK[0x65B0]) = v90;
  v91 = STACK[0x69E0];
  if ((v62 & 1) == 0)
    v89 = STACK[0x69E0];
  LODWORD(STACK[0x66D0]) = v89;
  if ((v62 & 1) != 0)
    v92 = v91;
  else
    v92 = STACK[0x6A00];
  if ((v62 & 1) != 0)
    v88 = STACK[0x6A00];
  LODWORD(STACK[0x6A10]) = v88;
  v93 = STACK[0x69C0];
  v94 = STACK[0x69B0];
  if ((v62 & 1) != 0)
    v95 = STACK[0x69B0];
  else
    v95 = STACK[0x69C0];
  LODWORD(STACK[0x65A8]) = v95;
  if ((v62 & 1) != 0)
    v94 = v64;
  LODWORD(STACK[0x69B0]) = v94;
  if ((v62 & 1) != 0)
  {
    v64 = STACK[0x69A0];
    v96 = v93;
  }
  else
  {
    v96 = STACK[0x69A0];
  }
  v97 = STACK[0x6960];
  if ((v62 & 1) != 0)
    v98 = STACK[0x6960];
  else
    v98 = v60 ^ v59;
  LODWORD(STACK[0x65A0]) = v98;
  v99 = STACK[0x6950];
  if ((v62 & 1) != 0)
    v97 = STACK[0x6950];
  LODWORD(STACK[0x66C8]) = v97;
  v100 = STACK[0x6980];
  if ((v62 & 1) != 0)
    v101 = v60 ^ v59;
  else
    v101 = STACK[0x6980];
  LODWORD(STACK[0x6590]) = v101;
  if ((v62 & 1) != 0)
    v102 = v100;
  else
    v102 = v99;
  v103 = STACK[0x68A0];
  v104 = STACK[0x6890];
  if ((v62 & 1) != 0)
    v105 = STACK[0x6890];
  else
    v105 = STACK[0x68A0];
  LODWORD(STACK[0x6598]) = v105;
  v106 = STACK[0x68C0];
  if ((v62 & 1) != 0)
    v104 = STACK[0x68C0];
  LODWORD(STACK[0x66B0]) = v104;
  v107 = STACK[0x68B0];
  if ((v62 & 1) == 0)
    v103 = STACK[0x68B0];
  LODWORD(STACK[0x6588]) = v103;
  if ((v62 & 1) != 0)
    v108 = v107;
  else
    v108 = v106;
  v109 = STACK[0x6940];
  v110 = STACK[0x6930];
  if ((v62 & 1) != 0)
    v111 = STACK[0x6930];
  else
    v111 = STACK[0x6940];
  LODWORD(STACK[0x66E8]) = v111;
  if ((v62 & 1) != 0)
    v112 = STACK[0x6920];
  else
    v112 = v110;
  v113 = STACK[0x6910];
  if ((v62 & 1) != 0)
    v114 = STACK[0x6910];
  else
    v114 = STACK[0x6920];
  LODWORD(STACK[0x6580]) = v114;
  if ((v62 & 1) != 0)
    v115 = v109;
  else
    v115 = v113;
  v116 = STACK[0x6880];
  v117 = STACK[0x6850];
  if ((v62 & 1) != 0)
    v118 = STACK[0x6880];
  else
    v118 = STACK[0x6850];
  LODWORD(STACK[0x6578]) = v118;
  v119 = STACK[0x6870];
  if ((v62 & 1) != 0)
    v116 = STACK[0x6870];
  LODWORD(STACK[0x6880]) = v116;
  if ((v62 & 1) != 0)
    v120 = STACK[0x6860];
  else
    v120 = v119;
  if ((v62 & 1) != 0)
    v121 = v117;
  else
    v121 = STACK[0x6860];
  v122 = STACK[0x68F0];
  v123 = STACK[0x68E0];
  if ((v62 & 1) != 0)
    v124 = STACK[0x68E0];
  else
    v124 = STACK[0x68F0];
  LODWORD(STACK[0x6570]) = v124;
  v125 = STACK[0x6900];
  if ((v62 & 1) != 0)
    v126 = v122;
  else
    v126 = STACK[0x6900];
  LODWORD(STACK[0x65E0]) = v126;
  if ((v62 & 1) != 0)
    v127 = v125;
  else
    v127 = STACK[0x6A90];
  if ((v62 & 1) != 0)
    v128 = STACK[0x6A90];
  else
    v128 = v123;
  LODWORD(STACK[0x68E0]) = v128;
  v129 = STACK[0x6830];
  v130 = STACK[0x6820];
  if ((v62 & 1) != 0)
    v131 = STACK[0x6820];
  else
    v131 = STACK[0x6830];
  LODWORD(STACK[0x6560]) = v131;
  v132 = STACK[0x6840];
  if ((v62 & 1) != 0)
    v133 = v129;
  else
    v133 = STACK[0x6840];
  LODWORD(STACK[0x65D8]) = v133;
  if ((v62 & 1) != 0)
    v134 = v132;
  else
    v134 = v56;
  if ((v62 & 1) != 0)
    v135 = v56;
  else
    v135 = v130;
  v136 = STACK[0x6800];
  v137 = STACK[0x67D0];
  if ((v62 & 1) != 0)
    v138 = STACK[0x67D0];
  else
    v138 = STACK[0x6800];
  LODWORD(STACK[0x6568]) = v138;
  v139 = STACK[0x6810];
  if ((v62 & 1) != 0)
    v140 = v136;
  else
    v140 = STACK[0x6810];
  LODWORD(STACK[0x66F0]) = v140;
  if ((v62 & 1) != 0)
    v141 = v139;
  else
    v141 = STACK[0x6A80];
  if ((v62 & 1) != 0)
    v142 = STACK[0x6A80];
  else
    v142 = v137;
  LODWORD(STACK[0x67D0]) = v142;
  v143 = STACK[0x67F0];
  v144 = STACK[0x67E0];
  if ((v62 & 1) != 0)
    v145 = STACK[0x67E0];
  else
    v145 = STACK[0x67F0];
  LODWORD(STACK[0x66E0]) = v145;
  if ((v62 & 1) != 0)
  {
    v144 = STACK[0x67C0];
    v146 = v57;
  }
  else
  {
    v146 = STACK[0x67C0];
  }
  LODWORD(STACK[0x67C0]) = v146;
  if ((v62 & 1) != 0)
    v147 = v143;
  else
    v147 = v57;
  v148 = STACK[0x6770];
  v149 = STACK[0x6750];
  if ((v62 & 1) != 0)
    v150 = STACK[0x6770];
  else
    v150 = STACK[0x6750];
  LODWORD(STACK[0x6558]) = v150;
  v151 = STACK[0x6730];
  if ((v62 & 1) == 0)
    v149 = STACK[0x6730];
  LODWORD(STACK[0x65D0]) = v149;
  if ((v62 & 1) != 0)
    v152 = v151;
  else
    v152 = STACK[0x6720];
  if ((v62 & 1) != 0)
    v153 = STACK[0x6720];
  else
    v153 = v148;
  v154 = STACK[0x6740];
  v155 = STACK[0x6698];
  if ((v62 & 1) != 0)
    v156 = STACK[0x6698];
  else
    v156 = STACK[0x6740];
  LODWORD(STACK[0x66D8]) = v156;
  v157 = STACK[0x6760];
  if ((v62 & 1) != 0)
    v155 = STACK[0x6760];
  LODWORD(STACK[0x6698]) = v155;
  v158 = STACK[0x6780];
  if ((v62 & 1) != 0)
    v157 = STACK[0x6780];
  LODWORD(STACK[0x6550]) = v157;
  if ((v62 & 1) != 0)
    v158 = v154;
  LODWORD(STACK[0x6AB0]) += v62;
  LODWORD(STACK[0x6AA0]) += v62;
  v159 = (v62 & 2) == 0;
  v160 = STACK[0x65C8];
  if ((v62 & 2) != 0)
    v161 = STACK[0x65C8];
  else
    v161 = v69;
  LODWORD(STACK[0x67A0]) = v161;
  if ((v62 & 2) != 0)
    v162 = v69;
  else
    v162 = v160;
  v163 = STACK[0x6A50];
  if (v159)
    v164 = STACK[0x6A50];
  else
    v164 = v70;
  LODWORD(STACK[0x6790]) = v164;
  if (v159)
    v165 = v70;
  else
    v165 = v163;
  v166 = STACK[0x65C0];
  if (v159)
    v167 = v75;
  else
    v167 = STACK[0x65C0];
  LODWORD(STACK[0x6A50]) = v167;
  if (v159)
  {
    v75 = v166;
    v168 = STACK[0x69F0];
  }
  else
  {
    v168 = v76;
  }
  if (!v159)
    v76 = STACK[0x69F0];
  v169 = STACK[0x65B8];
  if (v159)
    v170 = STACK[0x65B8];
  else
    v170 = v81;
  LODWORD(STACK[0x6A60]) = v170;
  if (v159)
    v171 = v81;
  else
    v171 = v169;
  LODWORD(STACK[0x6A70]) = v171;
  v172 = STACK[0x6970];
  v173 = STACK[0x6548];
  if (v159)
    v174 = STACK[0x6970];
  else
    v174 = STACK[0x6548];
  LODWORD(STACK[0x6A40]) = v174;
  v175 = *(_QWORD *)(v20 - 152);
  if (v159)
  {
    v176 = v63;
  }
  else
  {
    v173 = v172;
    v176 = *(_QWORD *)(v20 - 152);
  }
  LODWORD(STACK[0x69F0]) = v176;
  if (v159)
    v177 = v175;
  else
    v177 = v63;
  LODWORD(STACK[0x6A30]) = v177;
  v178 = STACK[0x6990];
  if (v159)
    v179 = STACK[0x6990];
  else
    v179 = v87;
  LODWORD(STACK[0x6A20]) = v179;
  if (v159)
    v180 = v87;
  else
    v180 = v178;
  v181 = STACK[0x65B0];
  if (v159)
    v182 = STACK[0x65B0];
  else
    v182 = v92;
  LODWORD(STACK[0x69D0]) = v182;
  if (v159)
    v183 = v92;
  else
    v183 = v181;
  LODWORD(STACK[0x6A00]) = v183;
  v184 = STACK[0x6A10];
  v185 = STACK[0x66D0];
  if (v159)
    v186 = STACK[0x66D0];
  else
    v186 = STACK[0x6A10];
  LODWORD(STACK[0x69E0]) = v186;
  if (v159)
    v187 = v184;
  else
    v187 = v185;
  LODWORD(STACK[0x6A10]) = v187;
  v188 = STACK[0x65A8];
  if (v159)
    v189 = STACK[0x65A8];
  else
    v189 = v64;
  LODWORD(STACK[0x69C0]) = v189;
  if (v159)
    v190 = v64;
  else
    v190 = v188;
  LODWORD(STACK[0x6990]) = v190;
  v191 = STACK[0x69B0];
  if (v159)
    v192 = v96;
  else
    v192 = STACK[0x69B0];
  LODWORD(STACK[0x69A0]) = v192;
  if (v159)
    v193 = v191;
  else
    v193 = v96;
  LODWORD(STACK[0x69B0]) = v193;
  v194 = STACK[0x65A0];
  if (v159)
    v195 = v102;
  else
    v195 = STACK[0x65A0];
  LODWORD(STACK[0x6950]) = v195;
  if (v159)
    v196 = v194;
  else
    v196 = v102;
  LODWORD(STACK[0x6970]) = v196;
  v197 = STACK[0x66C8];
  v198 = STACK[0x6590];
  if (v159)
    v199 = STACK[0x66C8];
  else
    v199 = STACK[0x6590];
  LODWORD(STACK[0x6960]) = v199;
  if (v159)
    v200 = v198;
  else
    v200 = v197;
  LODWORD(STACK[0x6980]) = v200;
  v201 = STACK[0x6598];
  if (v159)
    v202 = v108;
  else
    v202 = STACK[0x6598];
  LODWORD(STACK[0x68C0]) = v202;
  if (v159)
    v203 = v201;
  else
    v203 = v108;
  LODWORD(STACK[0x68A0]) = v203;
  v204 = STACK[0x66B0];
  v205 = STACK[0x6588];
  if (v159)
    v206 = STACK[0x66B0];
  else
    v206 = STACK[0x6588];
  LODWORD(STACK[0x6890]) = v206;
  if (v159)
    v207 = v205;
  else
    v207 = v204;
  LODWORD(STACK[0x68B0]) = v207;
  if (v159)
    v208 = v112;
  else
    v208 = v115;
  LODWORD(STACK[0x6930]) = v208;
  if (v159)
    v209 = v115;
  else
    v209 = v112;
  LODWORD(STACK[0x6910]) = v209;
  v210 = STACK[0x66E8];
  v211 = STACK[0x6580];
  if (v159)
    v212 = STACK[0x6580];
  else
    v212 = STACK[0x66E8];
  LODWORD(STACK[0x6920]) = v212;
  if (v159)
    v213 = v210;
  else
    v213 = v211;
  LODWORD(STACK[0x6940]) = v213;
  v214 = STACK[0x6578];
  if (v159)
    v215 = v120;
  else
    v215 = STACK[0x6578];
  LODWORD(STACK[0x6870]) = v215;
  if (v159)
    v216 = v214;
  else
    v216 = v120;
  LODWORD(STACK[0x6850]) = v216;
  v217 = STACK[0x6880];
  if (v159)
    v218 = v121;
  else
    v218 = STACK[0x6880];
  LODWORD(STACK[0x6860]) = v218;
  if (v159)
    v219 = v217;
  else
    v219 = v121;
  LODWORD(STACK[0x6880]) = v219;
  v220 = STACK[0x6570];
  if (v159)
    v221 = v127;
  else
    v221 = STACK[0x6570];
  LODWORD(STACK[0x6A90]) = v221;
  if (v159)
    v222 = v220;
  else
    v222 = v127;
  LODWORD(STACK[0x68F0]) = v222;
  v223 = STACK[0x65E0];
  v224 = STACK[0x68E0];
  if (v159)
    v225 = STACK[0x65E0];
  else
    v225 = STACK[0x68E0];
  LODWORD(STACK[0x6900]) = v225;
  if (v159)
    v226 = v224;
  else
    v226 = v223;
  LODWORD(STACK[0x68E0]) = v226;
  v227 = STACK[0x6560];
  if (v159)
    v228 = v134;
  else
    v228 = STACK[0x6560];
  LODWORD(STACK[0x67B0]) = v228;
  if (v159)
    v229 = v227;
  else
    v229 = v134;
  LODWORD(STACK[0x6830]) = v229;
  v230 = STACK[0x65D8];
  if (v159)
    v231 = v135;
  else
    v231 = STACK[0x65D8];
  LODWORD(STACK[0x6820]) = v231;
  if (v159)
    v232 = v230;
  else
    v232 = v135;
  LODWORD(STACK[0x6840]) = v232;
  v233 = STACK[0x6568];
  if (v159)
    v234 = v141;
  else
    v234 = STACK[0x6568];
  LODWORD(STACK[0x6A80]) = v234;
  if (v159)
    v235 = v233;
  else
    v235 = v141;
  LODWORD(STACK[0x6800]) = v235;
  if (v159)
    v236 = v144;
  else
    v236 = v147;
  LODWORD(STACK[0x67E0]) = v236;
  if (v159)
    v237 = v147;
  else
    v237 = v144;
  LODWORD(STACK[0x6710]) = v237;
  v238 = STACK[0x66F0];
  v239 = STACK[0x67D0];
  if (v159)
    v240 = STACK[0x66F0];
  else
    v240 = STACK[0x67D0];
  LODWORD(STACK[0x6810]) = v240;
  if (v159)
    v241 = v239;
  else
    v241 = v238;
  LODWORD(STACK[0x67D0]) = v241;
  v242 = STACK[0x66E0];
  v243 = STACK[0x67C0];
  if (v159)
    v244 = STACK[0x66E0];
  else
    v244 = STACK[0x67C0];
  LODWORD(STACK[0x67F0]) = v244;
  if (v159)
    v245 = v243;
  else
    v245 = v242;
  LODWORD(STACK[0x67C0]) = v245;
  v246 = STACK[0x6558];
  if (v159)
    v247 = v152;
  else
    v247 = STACK[0x6558];
  LODWORD(STACK[0x6720]) = v247;
  if (v159)
    v248 = v246;
  else
    v248 = v152;
  LODWORD(STACK[0x6750]) = v248;
  v249 = STACK[0x65D0];
  if (v159)
    v250 = STACK[0x65D0];
  else
    v250 = v153;
  LODWORD(STACK[0x6730]) = v250;
  if (v159)
    v251 = v153;
  else
    v251 = v249;
  LODWORD(STACK[0x6770]) = v251;
  v252 = STACK[0x6698];
  if (v159)
    v253 = v158;
  else
    v253 = STACK[0x6698];
  LODWORD(STACK[0x6780]) = v253;
  if (v159)
    v254 = v252;
  else
    v254 = v158;
  LODWORD(STACK[0x6698]) = v254;
  v255 = STACK[0x66D8];
  v256 = STACK[0x6550];
  if (v159)
    v257 = STACK[0x6550];
  else
    v257 = STACK[0x66D8];
  LODWORD(STACK[0x6760]) = v257;
  if (v159)
    v258 = v255;
  else
    v258 = v256;
  LODWORD(STACK[0x6740]) = v258;
  v259 = STACK[0x68D0];
  v260 = STACK[0x65F0];
  v261 = STACK[0x6608];
  if ((STACK[0x68D0] & 1) != 0)
    v262 = STACK[0x6608];
  else
    v262 = STACK[0x65F0];
  v263 = STACK[0x6600];
  if ((v259 & 1) != 0)
  {
    v261 = STACK[0x6600];
    v263 = STACK[0x65F8];
  }
  else
  {
    v260 = STACK[0x65F8];
  }
  if ((v259 & 2) != 0)
    v264 = v261;
  else
    v264 = v260;
  if ((v259 & 2) != 0)
  {
    v261 = v260;
    v265 = v263;
  }
  else
  {
    v265 = v262;
  }
  if ((v259 & 2) == 0)
    v262 = v263;
  v266 = LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6460]);
  v267 = STACK[0x66C0];
  v268 = v266 ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6350]);
  v269 = STACK[0x64E0];
  LODWORD(STACK[0x66F0]) = v162;
  v270 = v268 ^ v269 ^ v162 ^ v265;
  v271 = v266 ^ v269 ^ LODWORD(STACK[0x6308]);
  LODWORD(STACK[0x66B0]) = v165;
  v272 = v271 ^ v165 ^ v264;
  v273 = v266 ^ v269 ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x67A0]) ^ v262;
  v274 = LODWORD(STACK[0x6338]) ^ STACK[0x6340] ^ 0x81610D76 ^ LODWORD(STACK[0x6790]) ^ __ROR4__(LODWORD(STACK[0x61F0]) ^ 0xC21AED02 ^ __ROR4__(v266 ^ v261, 23), 9);
  v275 = STACK[0x65E8] + 4 * BYTE1(v273);
  v276 = STACK[0x65E8] + 4 * BYTE1(v272);
  v277 = (_DWORD *)(STACK[0x65E8] + 4 * v273);
  v278 = STACK[0x65E8] + 4 * BYTE2(v270);
  v279 = 4 * v270;
  v280 = STACK[0x65E8] + v279;
  STACK[0xDA88] = v275;
  LODWORD(v275) = *(_DWORD *)v275;
  STACK[0xDA88] = v276;
  LODWORD(v276) = *(_DWORD *)v276;
  STACK[0xDA88] = (unint64_t)v277;
  LODWORD(v277) = *v277;
  STACK[0xDA88] = v278;
  LODWORD(v278) = *(_DWORD *)v278;
  STACK[0xDA88] = v280;
  v281 = v280 - v279;
  LODWORD(v280) = *(_DWORD *)v280;
  v282 = (_DWORD *)(v281 + 4 * BYTE2(v272));
  STACK[0xDA88] = (unint64_t)v282;
  HIDWORD(v283) = v280;
  LODWORD(v283) = v280;
  LODWORD(v280) = *v282;
  STACK[0xDA88] = v281;
  v284 = *(_DWORD *)(v281 + 4 * HIBYTE(v270));
  v285 = (_DWORD *)(v281 + 4 * HIBYTE(v273));
  STACK[0xDA88] = (unint64_t)v285;
  LODWORD(v282) = *v285;
  v286 = (_DWORD *)(v281 + 4 * v272);
  STACK[0xDA88] = (unint64_t)v286;
  LODWORD(v285) = *v286;
  v287 = 4 * v274;
  v288 = (_DWORD *)(v281 + v287);
  v289 = 4 * BYTE2(v273);
  v290 = &v288[(unint64_t)v289 / 4 + v287 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v288;
  LODWORD(v288) = *v288;
  STACK[0xDA88] = (unint64_t)v290;
  v291 = &v290[v289 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v290) = *v290;
  v292 = &v291[BYTE1(v270)];
  STACK[0xDA88] = (unint64_t)v292;
  HIDWORD(v283) = (v283 >> 16) ^ __ROR4__(v276, 8);
  LODWORD(v283) = HIDWORD(v283);
  LODWORD(v276) = v283 >> 2;
  LODWORD(v283) = __ROR4__((_DWORD)v290, 2);
  v293 = *v292;
  v294 = HIBYTE(v272);
  v295 = (unint64_t)&v291[v294];
  v296 = 4 * BYTE2(v274);
  v297 = v295 + v296 - v294 * 4;
  STACK[0xDA88] = v295;
  LODWORD(v295) = *(_DWORD *)v295;
  STACK[0xDA88] = v297;
  v298 = v297 - v296;
  LODWORD(v297) = *(_DWORD *)v297;
  v299 = (_DWORD *)(v298 + 4 * HIBYTE(v274));
  STACK[0xDA88] = (unint64_t)v299;
  LODWORD(v292) = *v299;
  v300 = 4 * BYTE1(v274);
  STACK[0xDA88] = v298 + v300;
  LODWORD(v283) = v276 ^ v283 ^ 0xFCAACD2F;
  HIDWORD(v283) = v283;
  LODWORD(v276) = v259 - LODWORD(STACK[0x6AB0]) + ((v283 >> 30) ^ __ROR4__((_DWORD)v292, 24) ^ 0xF2AB34BF);
  v301 = STACK[0x64A0];
  v302 = STACK[0x6480];
  LODWORD(v275) = LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x6430]) ^ __ROR4__(v275, 8) ^ __ROR4__(v284, 24);
  LODWORD(STACK[0x66E8]) = v168;
  LODWORD(v297) = v275 ^ __ROR4__((_DWORD)v285, 16) ^ v168 ^ v297;
  LODWORD(v275) = v302 ^ v301 ^ LODWORD(STACK[0x6428]);
  LODWORD(STACK[0x66E0]) = v75;
  LODWORD(v276) = v275 ^ v75 ^ v276;
  v303 = STACK[0x6AA0];
  LODWORD(v295) = LODWORD(STACK[0x6420]) ^ v301 ^ v302 ^ __ROR4__((_DWORD)v277, 16) ^ v278 ^ v259 ^ LODWORD(STACK[0x6AA0]) ^ __ROR4__(v295, 24);
  LODWORD(v275) = v302 ^ v301 ^ LODWORD(STACK[0x6418]) ^ v280 ^ __ROR4__((_DWORD)v282, 24) ^ __ROR4__((_DWORD)v288, 16);
  LODWORD(v283) = __ROR4__(v293, 8);
  LODWORD(v300) = *(_DWORD *)(v298 + v300);
  LODWORD(STACK[0x66D8]) = v76;
  v304 = v275 ^ v283 ^ v76;
  v305 = (_DWORD *)(v298 + 4 * (v275 ^ v283 ^ v76));
  STACK[0xDA88] = (unint64_t)v305;
  LODWORD(v275) = *v305;
  v306 = 4 * BYTE2(v304);
  STACK[0xDA88] = v298 + v306;
  LODWORD(v306) = *(_DWORD *)(v298 + v306);
  LODWORD(v295) = v295 ^ LODWORD(STACK[0x6A50]) ^ __ROR4__(v300, 8);
  STACK[0xDA88] = v298;
  v307 = *(_DWORD *)(v298 + 4 * BYTE2(v295));
  v308 = (_DWORD *)(v298 + 4 * BYTE1(v276));
  STACK[0xDA88] = (unint64_t)v308;
  LODWORD(v278) = *v308;
  v309 = (_DWORD *)(v298 + 4 * BYTE3(v295));
  v310 = (int *)(v298 + 4 * v276);
  v311 = (int *)(v298 + 4 * HIBYTE(v304));
  v312 = 4 * BYTE3(v297);
  v313 = (int *)(v298 + v312);
  v314 = 4 * BYTE1(v297);
  v315 = &v313[(unint64_t)v314 / 4 + v312 / 0xFFFFFFFFFFFFFFFCLL];
  v316 = 4 * BYTE1(v295);
  v317 = &v315[(unint64_t)v316 / 4 + v314 / 0xFFFFFFFFFFFFFFFCLL];
  v318 = 4 * v295;
  v319 = &v317[v316 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v318 / 4];
  v320 = 4 * v297;
  v321 = &v319[(unint64_t)v320 / 4 + v318 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v309;
  LODWORD(v309) = *v309;
  STACK[0xDA88] = (unint64_t)v310;
  v322 = *v310;
  STACK[0xDA88] = (unint64_t)v311;
  v323 = *v311;
  STACK[0xDA88] = (unint64_t)v313;
  v324 = *v313;
  STACK[0xDA88] = (unint64_t)v315;
  v325 = *v315;
  STACK[0xDA88] = (unint64_t)v317;
  LODWORD(v317) = *v317;
  STACK[0xDA88] = (unint64_t)v319;
  v326 = *v319;
  STACK[0xDA88] = (unint64_t)v321;
  v327 = (unint64_t)&v321[v320 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v321) = *v321;
  v328 = (int *)(v327 + 4 * BYTE3(v276));
  STACK[0xDA88] = (unint64_t)v328;
  v329 = *v328;
  v330 = (int *)(v327 + 4 * BYTE2(v276));
  STACK[0xDA88] = (unint64_t)v330;
  LODWORD(STACK[0x66D0]) = v173;
  v331 = v306 ^ v173 ^ __ROR4__((_DWORD)v317, 8) ^ __ROR4__((_DWORD)v321, 16) ^ __ROR4__(v329, 24);
  v332 = *v330;
  v333 = (int *)(v327 + 4 * BYTE1(v304));
  v334 = (_DWORD *)(v327 + 4 * BYTE2(v297));
  v335 = STACK[0x6470];
  v336 = LODWORD(STACK[0x6470]) ^ LODWORD(STACK[0x64E8]);
  LODWORD(v275) = v336 ^ STACK[0x6330] ^ LODWORD(STACK[0x6328]) ^ LODWORD(STACK[0x6A40]) ^ __ROR4__(v275, 16) ^ __ROR4__(v278, 8);
  STACK[0xDA88] = (unint64_t)v333;
  v337 = *v333;
  STACK[0xDA88] = (unint64_t)v334;
  v338 = v275 ^ __ROR4__((_DWORD)v309, 24) ^ *v334;
  v339 = STACK[0x61E8];
  if ((v331 & STACK[0x61E8]) != 0)
    v339 = STACK[0x61E0];
  v340 = LODWORD(STACK[0x6410]) ^ v335 ^ (v339 + v331);
  v341 = v336 ^ LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6A60]) ^ v307 ^ __ROR4__(v322, 16) ^ __ROR4__(v323, 24) ^ __ROR4__(v325, 8);
  v342 = v336 ^ LODWORD(STACK[0x6400]) ^ LODWORD(STACK[0x6A70]) ^ __ROR4__(v324, 24) ^ __ROR4__(v326, 16) ^ v332 ^ __ROR4__(v337, 8);
  v343 = v327 + 4 * v338;
  v344 = v327 + 4 * BYTE1(v340);
  STACK[0xDA88] = v343;
  LODWORD(v343) = *(_DWORD *)v343;
  STACK[0xDA88] = v344;
  LODWORD(v344) = *(_DWORD *)v344;
  v345 = v327 + 4 * BYTE2(v338);
  STACK[0xDA88] = v345;
  v346 = *(_DWORD *)v345;
  STACK[0xDA88] = v327;
  LODWORD(v345) = *(_DWORD *)(v327 + 4 * BYTE2(v340));
  v347 = (_DWORD *)(v327 + 4 * v340);
  v348 = (_DWORD *)(v327 + 4 * HIBYTE(v341));
  v349 = (_DWORD *)(v327 + 4 * HIBYTE(v342));
  v350 = v327 + 4 * BYTE2(v342);
  STACK[0xDA88] = (unint64_t)v347;
  LODWORD(v347) = *v347;
  STACK[0xDA88] = (unint64_t)v348;
  LODWORD(v348) = *v348;
  STACK[0xDA88] = (unint64_t)v349;
  LODWORD(v349) = *v349;
  STACK[0xDA88] = v350;
  v351 = v327;
  LODWORD(v350) = *(_DWORD *)v350;
  v352 = (int *)(v327 + 4 * BYTE2(v341));
  STACK[0xDA88] = (unint64_t)v352;
  v353 = *v352;
  STACK[0xDA88] = v327;
  LODWORD(v352) = *(_DWORD *)(v327 + 4 * BYTE1(v338));
  v354 = 4 * BYTE1(v342);
  v355 = (_DWORD *)(v351 + v354);
  v356 = 4 * BYTE1(v341);
  v357 = &v355[(unint64_t)v356 / 4 + v354 / 0xFFFFFFFFFFFFFFFCLL];
  v358 = 4 * v342;
  v359 = &v357[(unint64_t)v358 / 4 + v356 / 0xFFFFFFFFFFFFFFFCLL];
  v360 = 4 * v341;
  v361 = &v359[(unint64_t)v360 / 4 + v358 / 0xFFFFFFFFFFFFFFFCLL];
  v362 = HIBYTE(v340);
  v363 = (unint64_t)&v361[v362 + v360 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v355;
  LODWORD(v355) = *v355;
  STACK[0xDA88] = (unint64_t)v357;
  LODWORD(v357) = *v357;
  STACK[0xDA88] = (unint64_t)v359;
  LODWORD(v359) = *v359;
  STACK[0xDA88] = (unint64_t)v361;
  LODWORD(v361) = *v361;
  STACK[0xDA88] = v363;
  v364 = (_DWORD *)(v363 - v362 * 4);
  LODWORD(v363) = *(_DWORD *)v363;
  v365 = 4 * HIBYTE(v338);
  STACK[0xDA88] = (unint64_t)v364 + v365;
  v366 = LODWORD(STACK[0x6488]) ^ v267;
  v367 = STACK[0x64A8];
  v368 = STACK[0x64B0];
  v369 = STACK[0x6318];
  v370 = v366 ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x6318]) ^ LODWORD(STACK[0x64B0]);
  LODWORD(STACK[0x66C8]) = v180;
  LODWORD(v343) = v370 ^ v180 ^ __ROR4__(v343, 16) ^ v345 ^ __ROR4__((_DWORD)v349, 24) ^ __ROR4__((_DWORD)v357, 8);
  LODWORD(v361) = v366 ^ LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x69F0]) ^ __ROR4__(v344, 8) ^ v350 ^ __ROR4__((_DWORD)v361, 16) ^ __ROR4__(*(_DWORD *)((char *)v364 + v365), 24);
  LODWORD(v363) = v366 ^ STACK[0x6310] ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6A30]) ^ v353 ^ __ROR4__((_DWORD)v352, 8) ^ __ROR4__((_DWORD)v359, 16) ^ __ROR4__(v363, 24);
  LODWORD(v365) = v366 ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x6A20]) ^ v346 ^ __ROR4__((_DWORD)v347, 16) ^ __ROR4__((_DWORD)v348, 24) ^ __ROR4__((_DWORD)v355, 8);
  v371 = &v364[BYTE1(v361)];
  STACK[0xDA88] = (unint64_t)v371;
  LODWORD(v344) = *v371;
  v372 = 4 * BYTE3(v365);
  v373 = &v364[(unint64_t)v372 / 4];
  v374 = 4 * v365;
  v375 = &v373[(unint64_t)v374 / 4 + v372 / 0xFFFFFFFFFFFFFFFCLL];
  v376 = BYTE2(v363);
  v377 = (unint64_t)&v375[v376 + v374 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v373;
  LODWORD(v373) = *v373;
  STACK[0xDA88] = (unint64_t)v375;
  LODWORD(v375) = *v375;
  STACK[0xDA88] = v377;
  v378 = v377 - v376 * 4;
  LODWORD(v377) = *(_DWORD *)v377;
  STACK[0xDA88] = v378;
  LODWORD(v348) = *(_DWORD *)(v378 + 4 * v343);
  v379 = v378 + 4 * BYTE1(v343);
  STACK[0xDA88] = v379;
  LODWORD(v349) = *(_DWORD *)v379;
  v380 = (_DWORD *)(v378 + 4 * v361);
  STACK[0xDA88] = (unint64_t)v380;
  LODWORD(v379) = *v380;
  v381 = (_DWORD *)(v378 + 4 * BYTE1(v363));
  STACK[0xDA88] = (unint64_t)v381;
  LODWORD(v380) = *v381;
  v382 = 4 * BYTE3(v343);
  v383 = (_DWORD *)(v378 + v382);
  v384 = 4 * (v361 >> 24);
  v385 = &v383[(unint64_t)v384 / 4 + v382 / 0xFFFFFFFFFFFFFFFCLL];
  v386 = 4 * BYTE1(v365);
  v387 = &v385[(unint64_t)v386 / 4 + v384 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v383;
  LODWORD(v383) = *v383;
  STACK[0xDA88] = (unint64_t)v385;
  LODWORD(v385) = *v385;
  STACK[0xDA88] = (unint64_t)v387;
  v388 = &v387[v386 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v387) = *v387;
  v389 = &v388[v363];
  STACK[0xDA88] = (unint64_t)v389;
  LODWORD(v359) = *v389;
  v390 = &v388[BYTE2(v343)];
  STACK[0xDA88] = (unint64_t)v390;
  LODWORD(v343) = *v390;
  v391 = 4 * BYTE3(v363);
  v392 = &v388[(unint64_t)v391 / 4];
  v393 = BYTE2(v361);
  v394 = (unint64_t)&v392[v393 + v391 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v392;
  LODWORD(v392) = *v392;
  STACK[0xDA88] = v394;
  v395 = v394 - v393 * 4;
  LODWORD(v394) = *(_DWORD *)v394;
  v396 = 4 * BYTE2(v365);
  STACK[0xDA88] = v395 + v396;
  LODWORD(v344) = LODWORD(STACK[0x64D8]) ^ __ROR4__(v344, 8) ^ __ROR4__((_DWORD)v348, 16);
  v397 = __ROR4__((_DWORD)v392, 24);
  LODWORD(v396) = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x63E8]) ^ ((v344 ^ v397 ^ *(_DWORD *)(v395 + v396))
                                                                   + v269
                                                                   - 2
                                                                   * ((v344 ^ v397 ^ *(_DWORD *)(v395 + v396)) & v269));
  LODWORD(v344) = v269 ^ LODWORD(STACK[0x64D8]) ^ LODWORD(STACK[0x63E0]) ^ LODWORD(STACK[0x6A10]) ^ v377 ^ __ROR4__(v379, 16) ^ __ROR4__((_DWORD)v383, 24) ^ __ROR4__((_DWORD)v387, 8);
  LODWORD(v373) = v269 ^ LODWORD(STACK[0x63D8]) ^ __ROR4__(LODWORD(STACK[0x61C0]) ^ 0x913241F9 ^ __ROR4__(LODWORD(STACK[0x69E0]) ^ __ROR4__((_DWORD)v373, 24) ^ __ROR4__((_DWORD)v349, 8) ^ __ROR4__((_DWORD)v359, 16) ^ v394, 4), 28) ^ 0x13241F99;
  LODWORD(v394) = v269 ^ LODWORD(STACK[0x64D8]) ^ LODWORD(STACK[0x62F8]) ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x69D0]) ^ __ROR4__((_DWORD)v375, 16) ^ __ROR4__((_DWORD)v380, 8) ^ __ROR4__((_DWORD)v385, 24) ^ v343;
  v398 = 4 * BYTE1(v373);
  v399 = (_DWORD *)(v395 + v398);
  v400 = v396;
  v401 = (unint64_t)&v399[v400 + v398 / 0xFFFFFFFFFFFFFFFCLL];
  v402 = 4 * (v373 >> 24);
  v403 = (_DWORD *)(v401 - v400 * 4 + v402);
  v404 = 4 * v344;
  v405 = &v403[(unint64_t)v404 / 4 + v402 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v399;
  LODWORD(v399) = *v399;
  STACK[0xDA88] = v401;
  LODWORD(v401) = *(_DWORD *)v401;
  STACK[0xDA88] = (unint64_t)v403;
  LODWORD(v403) = *v403;
  STACK[0xDA88] = (unint64_t)v405;
  v406 = &v405[v404 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v405) = *v405;
  HIDWORD(v407) = (_DWORD)v403;
  LODWORD(v407) = (_DWORD)v403;
  v408 = &v406[v394];
  STACK[0xDA88] = (unint64_t)v408;
  LODWORD(v401) = (v407 >> 24) ^ __ROR4__(v401, 16);
  LODWORD(v403) = *v408;
  v409 = &v406[BYTE1(v344)];
  STACK[0xDA88] = (unint64_t)v409;
  LODWORD(v348) = *v409;
  v410 = 4 * BYTE1(v396);
  STACK[0xDA88] = (unint64_t)v406 + v410;
  HIDWORD(v407) = (_DWORD)v348;
  LODWORD(v407) = (_DWORD)v348;
  LODWORD(v410) = *(_DWORD *)((char *)v406 + v410);
  v411 = &v406[BYTE3(v344)];
  STACK[0xDA88] = (unint64_t)v411;
  LODWORD(v348) = *v411;
  v412 = &v406[BYTE2(v373)];
  STACK[0xDA88] = (unint64_t)v412;
  LODWORD(v379) = *v412;
  v413 = &v406[BYTE3(v394)];
  STACK[0xDA88] = (unint64_t)v413;
  LODWORD(v412) = *v413;
  v414 = (unint64_t)&v406[BYTE3(v396)];
  STACK[0xDA88] = v414;
  LODWORD(v413) = *(_DWORD *)v414;
  v415 = &v406[BYTE1(v394)];
  STACK[0xDA88] = (unint64_t)v415;
  LODWORD(v414) = *v415;
  v416 = BYTE2(v396);
  v417 = (unint64_t)&v406[v416];
  v418 = 4 * BYTE2(v394);
  v419 = v417 + v418 - v416 * 4;
  STACK[0xDA88] = v417;
  LODWORD(v417) = *(_DWORD *)v417;
  STACK[0xDA88] = v419;
  v420 = v419 - v418;
  LODWORD(v419) = *(_DWORD *)v419;
  v421 = (_DWORD *)(v420 + 4 * v373);
  STACK[0xDA88] = (unint64_t)v421;
  LODWORD(v373) = *v421;
  v422 = 4 * BYTE2(v344);
  STACK[0xDA88] = v420 + v422;
  v423 = STACK[0x6498];
  LODWORD(v405) = v269 ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x69B0]) ^ __ROR4__((_DWORD)v405, 16) ^ v379 ^ __ROR4__((_DWORD)v413, 24) ^ __ROR4__(v414, 8);
  LODWORD(v373) = v269 ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x62D0]) ^ STACK[0x62E8] ^ LODWORD(STACK[0x69A0]) ^ __ROR4__(v410, 8) ^ __ROR4__((_DWORD)v412, 24) ^ __ROR4__((_DWORD)v373, 16) ^ *(_DWORD *)(v420 + v422);
  LODWORD(v419) = v269 ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6990]) ^ v419 ^ ((v401 ^ -(int)v401 ^ ((v407 >> 8) - ((v407 >> 8) ^ v401))) + (v407 >> 8));
  LODWORD(v399) = v269 ^ LODWORD(STACK[0x6498]) ^ STACK[0x62B8] ^ LODWORD(STACK[0x62C0]) ^ v367 ^ v369 ^ v368 ^ LODWORD(STACK[0x69C0]) ^ __ROR4__((_DWORD)v399, 8) ^ __ROR4__((_DWORD)v403, 16) ^ __ROR4__((_DWORD)v348, 24) ^ v417;
  v424 = 4 * BYTE1(v399);
  v425 = v420 + v424;
  v426 = 4 * v399;
  v427 = v425 + v426 - v424;
  v428 = 4 * (v399 >> 24);
  v429 = v427 + v428 - v426;
  STACK[0xDA88] = v425;
  LODWORD(v425) = *(_DWORD *)v425;
  STACK[0xDA88] = v427;
  LODWORD(v427) = *(_DWORD *)v427;
  STACK[0xDA88] = v429;
  v430 = v429 - v428;
  LODWORD(v429) = *(_DWORD *)v429;
  v431 = (_DWORD *)(v430 + 4 * BYTE2(v373));
  STACK[0xDA88] = (unint64_t)v431;
  LODWORD(v425) = *v431 ^ __ROR4__(v425, 8);
  v432 = 4 * (v373 >> 24);
  v433 = (_DWORD *)(v430 + v432);
  v434 = 4 * v405;
  v435 = &v433[(unint64_t)v434 / 4 + v432 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v433;
  LODWORD(v433) = *v433;
  STACK[0xDA88] = (unint64_t)v435;
  LODWORD(v425) = v425 ^ __ROR4__(*v435, 16);
  v436 = 4 * BYTE2(v419);
  v437 = &v435[(unint64_t)v436 / 4 + v434 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v437;
  LODWORD(v427) = *v437 ^ __ROR4__(v427, 16);
  v438 = v405 >> 24;
  v439 = (unint64_t)&v437[v438 + v436 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = v439;
  v440 = v439 - v438 * 4;
  LODWORD(v439) = *(_DWORD *)v439;
  v441 = (_DWORD *)(v440 + 4 * BYTE2(v405));
  STACK[0xDA88] = (unint64_t)v441;
  LODWORD(v427) = v427 ^ __ROR4__(v439, 24);
  LODWORD(v439) = *v441;
  v442 = (_DWORD *)(v440 + 4 * BYTE3(v419));
  STACK[0xDA88] = (unint64_t)v442;
  LODWORD(v429) = v439 ^ __ROR4__(v429, 24);
  LODWORD(v439) = v425 ^ __ROR4__(*v442, 24);
  v443 = 4 * v419;
  v444 = (_DWORD *)(v440 + v443);
  STACK[0xDA88] = (unint64_t)v444;
  HIDWORD(v407) = *v444;
  LODWORD(v407) = *v444;
  v445 = BYTE1(v405);
  v446 = (unint64_t)&v444[v445 + v443 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = v446;
  v447 = v446 - v445 * 4;
  LODWORD(v446) = (v407 >> 16) ^ __ROR4__((_DWORD)v433, 24) ^ __ROR4__(*(_DWORD *)v446, 8);
  v448 = (_DWORD *)(v447 + 4 * BYTE1(v419));
  v449 = 4 * BYTE2(v399);
  STACK[0xDA88] = (unint64_t)v448;
  LODWORD(v429) = v429 ^ __ROR4__(*v448, 8);
  STACK[0xDA88] = v447 + v449;
  v450 = v447;
  LODWORD(v446) = v446 ^ *(_DWORD *)(v447 + v449);
  v451 = (_DWORD *)(v447 + 4 * v373);
  STACK[0xDA88] = (unint64_t)v451;
  LODWORD(v449) = *v451;
  v452 = 4 * BYTE1(v373);
  STACK[0xDA88] = v447 + v452;
  v453 = v446 + v303 - v259;
  LODWORD(v452) = *(_DWORD *)(v447 + v452);
  LODWORD(v414) = LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x6478]);
  LODWORD(v446) = v414 ^ LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x6960]) ^ v439;
  v454 = 4 * BYTE2(v446);
  STACK[0xDA88] = v447 + v454;
  LODWORD(v449) = (v429 ^ __ROR4__(v449, 16)) - v259 + LODWORD(STACK[0x6AB0]);
  LODWORD(v429) = v414 ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x6980]) ^ v449;
  LODWORD(v447) = v414 ^ LODWORD(STACK[0x63B0]) ^ LODWORD(STACK[0x6950]) ^ v453;
  LODWORD(v454) = *(_DWORD *)(v450 + v454);
  STACK[0xDA88] = v450;
  LODWORD(v444) = *(_DWORD *)(v450 + 4 * BYTE1(v447));
  v455 = v450 + 4 * BYTE2(v429);
  STACK[0xDA88] = v455;
  LODWORD(v455) = *(_DWORD *)v455;
  v456 = v427 ^ __ROR4__(v452, 8);
  STACK[0xDA88] = v450;
  LODWORD(v452) = *(_DWORD *)(v450 + 4 * BYTE3(v446));
  v457 = v450 + 4 * v447;
  STACK[0xDA88] = v457;
  LODWORD(v427) = *(_DWORD *)v457;
  v458 = (_DWORD *)(v450 + 4 * v429);
  STACK[0xDA88] = (unint64_t)v458;
  LODWORD(v457) = *v458;
  v459 = 4 * BYTE1(v446);
  v460 = v450 + v459;
  v461 = 4 * BYTE3(v447);
  v462 = v460 + v461 - v459;
  v463 = 4 * BYTE2(v447);
  v464 = (_DWORD *)(v462 + v463 - v461);
  LODWORD(v421) = v414 ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x6970]) ^ v456;
  v465 = 4 * v446;
  v466 = &v464[v463 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v465 / 4];
  v467 = 4 * (v421 >> 24);
  v468 = &v466[(unint64_t)v467 / 4 + v465 / 0xFFFFFFFFFFFFFFFCLL];
  v469 = 4 * BYTE1(v421);
  v470 = &v468[(unint64_t)v469 / 4 + v467 / 0xFFFFFFFFFFFFFFFCLL];
  v471 = BYTE1(v429);
  v472 = (unint64_t)&v470[v471 + v469 / 0xFFFFFFFFFFFFFFFCLL];
  v473 = 4 * BYTE2(v421);
  v474 = (_DWORD *)(v472 + v473 - v471 * 4);
  v475 = 4 * (v414 ^ LOBYTE(STACK[0x62A8]) ^ LOBYTE(STACK[0x62B0]) ^ LOBYTE(STACK[0x6970]) ^ v456);
  v476 = &v474[v473 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v475 / 4];
  v477 = 4 * BYTE3(v429);
  v478 = &v476[(unint64_t)v477 / 4 + v475 / 0xFFFFFFFFFFFFFFFCLL];
  v479 = STACK[0x6490];
  LODWORD(v454) = v454 ^ LODWORD(STACK[0x6490]) ^ __ROR4__((_DWORD)v444, 8) ^ __ROR4__(v457, 16);
  STACK[0xDA88] = v460;
  LODWORD(v460) = *(_DWORD *)v460;
  STACK[0xDA88] = v462;
  LODWORD(v444) = *(_DWORD *)v462;
  STACK[0xDA88] = (unint64_t)v464;
  LODWORD(v462) = *v464;
  STACK[0xDA88] = (unint64_t)v466;
  LODWORD(v466) = *v466;
  STACK[0xDA88] = (unint64_t)v468;
  LODWORD(v407) = __ROR4__(*v468, 24);
  LODWORD(v468) = LODWORD(STACK[0x61DC]) ^ v269 ^ ((LODWORD(STACK[0x6930]) ^ -LODWORD(STACK[0x6930]) ^ ((v454 ^ v407) - (v454 ^ v407 ^ LODWORD(STACK[0x6930]))))
                                                 + (v454 ^ v407));
  LODWORD(v457) = v479 ^ v269;
  LODWORD(v454) = v479 ^ v269 ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x6940]) ^ __ROR4__(v427, 16);
  LODWORD(v407) = __ROR4__(v460, 8);
  STACK[0xDA88] = (unint64_t)v470;
  LODWORD(v427) = *v470;
  STACK[0xDA88] = v472;
  LODWORD(v460) = *(_DWORD *)v472;
  STACK[0xDA88] = (unint64_t)v474;
  LODWORD(v454) = v454 ^ v407 ^ *v474;
  STACK[0xDA88] = (unint64_t)v476;
  LODWORD(v464) = *v476;
  STACK[0xDA88] = (unint64_t)v478;
  v480 = (unint64_t)&v478[v477 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v454) = v454 ^ __ROR4__(*v478, 24);
  LODWORD(v427) = v479 ^ v269 ^ STACK[0x62A0] ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x6910]) ^ v455 ^ __ROR4__((_DWORD)v444, 24) ^ __ROR4__((_DWORD)v466, 16) ^ __ROR4__(v427, 8);
  LODWORD(v472) = v479 ^ v269 ^ LODWORD(STACK[0x6218]);
  LODWORD(v452) = v472 ^ LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6920]) ^ __ROR4__(v452, 24) ^ v462 ^ __ROR4__(v460, 8) ^ __ROR4__((_DWORD)v464, 16);
  v481 = v480 + 4 * BYTE3(v454);
  STACK[0xDA88] = v481;
  LODWORD(v460) = *(_DWORD *)v481;
  v482 = (_DWORD *)(v480 + 4 * BYTE2(v454));
  STACK[0xDA88] = (unint64_t)v482;
  LODWORD(v481) = *v482;
  STACK[0xDA88] = v480;
  LODWORD(v482) = *(_DWORD *)(v480 + 4 * v454);
  v483 = 4 * BYTE1(v452);
  v484 = v480 + v483;
  v485 = 4 * v452;
  v486 = (_DWORD *)(v484 + v485 - v483);
  STACK[0xDA88] = v484;
  HIDWORD(v407) = v460;
  LODWORD(v407) = v460;
  LODWORD(v460) = v407 >> 24;
  HIDWORD(v407) = *(_DWORD *)v484;
  LODWORD(v407) = *(_DWORD *)v484;
  LODWORD(v484) = (v407 >> 8) + v460 - 2 * ((v407 >> 8) & v460);
  v487 = &v486[v485 / 0xFFFFFFFFFFFFFFFCLL];
  v488 = BYTE1(v468);
  v489 = (unint64_t)&v487[v488];
  v490 = 4 * v468;
  v491 = v489 + v490 - v488 * 4;
  v492 = 4 * (v468 >> 24);
  v493 = (_DWORD *)(v491 + v492 - v490);
  STACK[0xDA88] = (unint64_t)v486;
  LODWORD(v486) = *v486;
  STACK[0xDA88] = v489;
  LODWORD(v489) = *(_DWORD *)v489;
  STACK[0xDA88] = v491;
  LODWORD(v491) = *(_DWORD *)v491;
  STACK[0xDA88] = (unint64_t)v493;
  v494 = &v493[v492 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v493) = *v493;
  v495 = v427;
  v496 = &v494[v495];
  STACK[0xDA88] = (unint64_t)v496;
  LODWORD(v407) = __ROR4__(*v496, 16);
  v497 = 4 * BYTE1(v427);
  v498 = (_DWORD *)((char *)v496 + v497 - v495 * 4);
  STACK[0xDA88] = (unint64_t)v498;
  v499 = (char *)v498 - v497;
  LODWORD(v498) = *v498;
  v500 = &v499[4 * BYTE2(v452)];
  STACK[0xDA88] = (unint64_t)v500;
  LODWORD(v497) = *(_DWORD *)v500;
  v501 = 4 * BYTE2(v468);
  v502 = &v499[v501];
  STACK[0xDA88] = (unint64_t)v502;
  LODWORD(v484) = v484 ^ v407 ^ *(_DWORD *)v502;
  v503 = 4 * BYTE3(v427);
  v504 = &v502[v503 - v501];
  v505 = &v504[4 * BYTE3(v452) - v503];
  v506 = &v504[4 * BYTE1(v454) - v503];
  v507 = 4 * BYTE2(v427);
  v508 = (unint64_t)&v504[v507 - v503];
  v509 = STACK[0x66C0];
  v510 = v509 ^ v423;
  LODWORD(v489) = LODWORD(STACK[0x66C0]) ^ v423 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x6A90]) ^ v481 ^ __ROR4__((_DWORD)v486, 16) ^ __ROR4__(v489, 8);
  STACK[0xDA88] = (unint64_t)v504;
  LODWORD(v504) = v489 ^ __ROR4__(*(_DWORD *)v504, 24);
  LODWORD(v484) = LODWORD(STACK[0x61BC]) ^ 0xAF56401B ^ __ROR4__(v484, 28);
  LODWORD(v489) = v509 ^ v423 ^ LODWORD(STACK[0x6390]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__(v491, 16);
  STACK[0xDA88] = (unint64_t)v505;
  LODWORD(v489) = v489 ^ __ROR4__(*(_DWORD *)v505, 24);
  STACK[0xDA88] = (unint64_t)v506;
  LODWORD(v407) = __ROR4__(*(_DWORD *)v506, 8);
  STACK[0xDA88] = v508;
  v511 = v508 - v507;
  LODWORD(v506) = v489 ^ v407 ^ *(_DWORD *)v508;
  LODWORD(v508) = LODWORD(STACK[0x68F0]) ^ __ROR4__((_DWORD)v482, 16) ^ __ROR4__((_DWORD)v493, 24);
  LODWORD(v407) = __ROR4__((_DWORD)v498, 8);
  LODWORD(v484) = v423 ^ LODWORD(STACK[0x6388]) ^ LODWORD(STACK[0x6900]) ^ __ROR4__(v484, 4) ^ 0xBAF56401;
  v512 = 4 * BYTE2(v484);
  STACK[0xDA88] = v511 + v512;
  LODWORD(v508) = LODWORD(STACK[0x6280]) ^ v423 ^ ((v508 ^ v407 ^ v497) + v509 - 2 * ((v508 ^ v407 ^ v497) & v509));
  LODWORD(v512) = *(_DWORD *)(v511 + v512);
  STACK[0xDA88] = v511;
  LODWORD(v481) = *(_DWORD *)(v511 + 4 * BYTE3(v508));
  v513 = 4 * BYTE1(v484);
  v514 = (_DWORD *)(v511 + v513);
  v515 = 4 * BYTE2(v504);
  v516 = (unint64_t)v514 + v515 - v513;
  STACK[0xDA88] = (unint64_t)v514;
  LODWORD(v491) = *v514;
  STACK[0xDA88] = v516;
  v517 = v516 - v515;
  LODWORD(v516) = *(_DWORD *)v516;
  v518 = v517 + 4 * (v506 >> 24);
  STACK[0xDA88] = v518;
  LODWORD(v515) = *(_DWORD *)v518;
  v519 = (_DWORD *)(v517 + 4 * v484);
  STACK[0xDA88] = (unint64_t)v519;
  LODWORD(v518) = *v519;
  v520 = 4 * BYTE1(v506);
  v521 = (_DWORD *)(v517 + v520);
  v522 = v504 >> 24;
  v523 = &v521[v522 + v520 / 0xFFFFFFFFFFFFFFFCLL];
  v524 = 4 * v508;
  v525 = (_DWORD *)((char *)v523 + v524 - v522 * 4);
  STACK[0xDA88] = (unint64_t)v521;
  LODWORD(v503) = *v521;
  STACK[0xDA88] = (unint64_t)v523;
  LODWORD(v523) = *v523;
  STACK[0xDA88] = (unint64_t)v525;
  v526 = (char *)v525 - v524;
  LODWORD(v525) = *v525;
  v527 = &v526[4 * BYTE1(v504)];
  STACK[0xDA88] = (unint64_t)v527;
  LODWORD(v524) = *(_DWORD *)v527;
  v528 = 4 * BYTE1(v508);
  v529 = &v526[v528];
  v530 = 4 * BYTE2(v508);
  v531 = (unint64_t)&v529[v530 - v528];
  v532 = 4 * BYTE2(v506);
  v533 = v531 + v532 - v530;
  STACK[0xDA88] = (unint64_t)v529;
  v534 = *(_DWORD *)v529;
  STACK[0xDA88] = v531;
  LODWORD(v531) = *(_DWORD *)v531;
  STACK[0xDA88] = v533;
  v535 = v533 - v532;
  LODWORD(v533) = *(_DWORD *)v533;
  v536 = (_DWORD *)(v535 + 4 * v504);
  STACK[0xDA88] = (unint64_t)v536;
  LODWORD(v504) = *v536;
  v537 = (_DWORD *)(v535 + 4 * BYTE3(v484));
  STACK[0xDA88] = (unint64_t)v537;
  LODWORD(v484) = *v537;
  v538 = (_DWORD *)(v535 + 4 * v506);
  STACK[0xDA88] = (unint64_t)v538;
  LODWORD(v506) = *v538;
  STACK[0xDA88] = v535;
  v539 = v269 ^ LODWORD(STACK[0x6468]);
  LODWORD(v506) = v539 ^ LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x6A80]) ^ v512 ^ __ROR4__((_DWORD)v523, 24) ^ __ROR4__(v534, 8) ^ __ROR4__((_DWORD)v506, 16);
  LODWORD(v504) = v539 ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6810]) ^ __ROR4__(v503, 8) ^ v531 ^ __ROR4__((_DWORD)v504, 16) ^ __ROR4__(v484, 24);
  LODWORD(v484) = v539 ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x67D0]) ^ __ROR4__(v491, 8) ^ v516 ^ __ROR4__(v515, 24) ^ __ROR4__((_DWORD)v525, 16);
  LODWORD(v533) = v539 ^ LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x6800]) ^ __ROR4__(v481, 24) ^ __ROR4__(v518, 16) ^ __ROR4__(v524, 8) ^ v533;
  v540 = STACK[0xDA78];
  LODWORD(v481) = *(_DWORD *)(STACK[0xDA78] + 4 * v484);
  LODWORD(v515) = *(_DWORD *)(STACK[0xDA78] + 4 * v533);
  LODWORD(v491) = *(_DWORD *)(STACK[0xDA78] + 4 * BYTE1(v533));
  LODWORD(v518) = *(_DWORD *)(STACK[0xDA78] + 4 * BYTE1(v504));
  LODWORD(v525) = *(_DWORD *)(STACK[0xDA78] + 4 * (v506 >> 24));
  LODWORD(v503) = *(_DWORD *)(STACK[0xDA78] + 4 * BYTE2(v533));
  LODWORD(STACK[0x6608]) = *(_DWORD *)(STACK[0xDA78] + 4 * v504);
  LODWORD(v538) = *(_DWORD *)(v540 + 4 * v506);
  LODWORD(STACK[0x6600]) = *(_DWORD *)(v540 + 4 * BYTE2(v484));
  v541 = 4 * BYTE2(v504);
  v542 = (_DWORD *)(v540 + v541);
  v543 = 4 * BYTE1(v506);
  v544 = &v542[(unint64_t)v543 / 4 + v541 / 0xFFFFFFFFFFFFFFFCLL];
  v545 = &v544[BYTE3(v484) + v543 / 0xFFFFFFFFFFFFFFFCLL];
  v546 = &v544[v543 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v484) = v546[BYTE1(v484)];
  v547 = 4 * BYTE3(v533);
  v548 = &v546[(unint64_t)v547 / 4];
  v549 = v504 >> 24;
  v550 = &v548[v549 + v547 / 0xFFFFFFFFFFFFFFFCLL];
  v551 = 4 * BYTE2(v506);
  v552 = (_DWORD *)((char *)v550 + v551 - v549 * 4);
  STACK[0xDA78] = (unint64_t)v552 - v551;
  v553 = LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x6510]);
  LODWORD(v551) = v553 ^ LODWORD(STACK[0x6770]) ^ __ROR4__(v503, 24) ^ __ROR4__((_DWORD)v538, 8) ^ v484;
  LODWORD(v407) = __ROR4__(*v550, 16);
  LODWORD(STACK[0x65F0]) = (v551 ^ v407) + 893233458 - ((2 * (v551 ^ v407)) & 0x6A7B5264);
  LODWORD(v551) = v553 ^ LODWORD(STACK[0x6730]) ^ __ROR4__(v515, 8) ^ v518 ^ __ROR4__(*v545, 16);
  LODWORD(v407) = __ROR4__(*v552, 24);
  LODWORD(STACK[0x65E8]) = (v551 ^ v407) + 893233458 - ((2 * (v551 ^ v407)) & 0x6A7B5264);
  LODWORD(v551) = v553 ^ LODWORD(STACK[0x6750]) ^ __ROR4__(v481, 8) ^ v491 ^ __ROR4__((_DWORD)v525, 16);
  LODWORD(v407) = __ROR4__(*v542, 24);
  LODWORD(STACK[0x65E0]) = (v551 ^ v407) + 893233458 - ((2 * (v551 ^ v407)) & 0x6A7B5264);
  LODWORD(v484) = v439 - v453 - v449 + v456 - 1789147628;
  LODWORD(v551) = LODWORD(STACK[0x6698]) ^ 0xC674DCBE;
  LODWORD(v552) = LODWORD(STACK[0x6698]) ^ -LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x65F8]) = v484;
  v554 = v484 ^ 0x398B2341;
  LODWORD(v484) = v552 ^ ((v551 ^ v484) + (v484 ^ 0x398B2341) + 1);
  LODWORD(v552) = v414 ^ LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x68C0]) ^ v449;
  LODWORD(v449) = v414 ^ LODWORD(STACK[0x63A8]) ^ LODWORD(STACK[0x6890]) ^ v453;
  LODWORD(v542) = v414 ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x68B0]) ^ v456;
  LODWORD(v481) = v414 ^ LODWORD(STACK[0x6398]) ^ LODWORD(STACK[0x68A0]) ^ v439;
  v555 = (_DWORD *)(STACK[0xDA88] + 4 * BYTE1(v552));
  v556 = (_DWORD *)(STACK[0xDA88] + 4 * (v414 ^ LOBYTE(STACK[0x63A8]) ^ LOBYTE(STACK[0x6890]) ^ v453));
  v557 = (_DWORD *)(STACK[0xDA88] + 4 * BYTE3(v449));
  v558 = (_DWORD *)(STACK[0xDA88] + 4 * (v542 >> 24));
  v559 = STACK[0xDA88] + 4 * BYTE1(v449);
  v560 = (_DWORD *)(STACK[0xDA88] + 4 * v552);
  v561 = STACK[0xDA88] + 4 * BYTE2(v449);
  v562 = STACK[0xDA88] + 4 * BYTE2(v552);
  v563 = (_DWORD *)(STACK[0xDA88] + 4 * BYTE2(v542));
  v564 = (_DWORD *)(STACK[0xDA88] + 4 * BYTE3(v481));
  v565 = STACK[0xDA88] + 4 * (v552 >> 24);
  v566 = STACK[0xDA88] + 4 * v481;
  v567 = 4 * BYTE2(v481);
  v568 = STACK[0xDA88] + v567;
  LODWORD(v544) = *v544;
  LODWORD(v414) = *v548;
  *(_QWORD *)(v20 - 152) = v539;
  STACK[0xDA88] = (unint64_t)v555;
  LODWORD(v555) = *v555;
  STACK[0xDA88] = (unint64_t)v556;
  LODWORD(v556) = *v556;
  STACK[0xDA88] = (unint64_t)v557;
  LODWORD(v557) = *v557;
  STACK[0xDA88] = (unint64_t)v558;
  LODWORD(v558) = *v558;
  STACK[0xDA88] = v559;
  LODWORD(v548) = *(_DWORD *)v559;
  STACK[0xDA88] = (unint64_t)v560;
  LODWORD(v560) = *v560;
  STACK[0xDA88] = v561;
  LODWORD(v559) = *(_DWORD *)v561;
  STACK[0xDA88] = v562;
  LODWORD(v561) = *(_DWORD *)v562;
  STACK[0xDA88] = (unint64_t)v563;
  LODWORD(v562) = *v563;
  STACK[0xDA88] = (unint64_t)v564;
  LODWORD(v564) = *v564;
  STACK[0xDA88] = v565;
  LODWORD(v565) = *(_DWORD *)v565;
  STACK[0xDA88] = v566;
  LODWORD(v566) = *(_DWORD *)v566;
  STACK[0xDA88] = v568;
  v569 = v568 - v567;
  LODWORD(v568) = *(_DWORD *)v568;
  v570 = (_DWORD *)(v569 + 4 * BYTE1(v542));
  STACK[0xDA88] = (unint64_t)v570;
  LODWORD(v570) = *v570;
  v571 = (_DWORD *)(v569 + 4 * v542);
  STACK[0xDA88] = (unint64_t)v571;
  LODWORD(v542) = *v571;
  v572 = 4 * BYTE1(v481);
  STACK[0xDA88] = v569 + v572;
  v573 = *(_QWORD *)(v20 - 152);
  LODWORD(v568) = v472 ^ STACK[0x6238] ^ LODWORD(STACK[0x6870]) ^ __ROR4__((_DWORD)v558, 24) ^ __ROR4__((_DWORD)v548, 8) ^ __ROR4__((_DWORD)v560, 16) ^ v568;
  LODWORD(v542) = v457 ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x6860]) ^ __ROR4__((_DWORD)v555, 8) ^ v559 ^ __ROR4__((_DWORD)v564, 24) ^ __ROR4__((_DWORD)v542, 16);
  LODWORD(v565) = v457 ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x6880]) ^ __ROR4__((_DWORD)v556, 16) ^ v562 ^ __ROR4__(v565, 24) ^ __ROR4__(*(_DWORD *)(v569 + v572), 8);
  LODWORD(v566) = v457 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6850]) ^ __ROR4__((_DWORD)v557, 24) ^ v561 ^ __ROR4__(v566, 16) ^ __ROR4__((_DWORD)v570, 8);
  v574 = 4 * BYTE1(v542);
  v575 = (_DWORD *)(v569 + v574);
  v576 = 4 * BYTE3(v568);
  v577 = &v575[(unint64_t)v576 / 4 + v574 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v575;
  LODWORD(v575) = *v575;
  STACK[0xDA88] = (unint64_t)v577;
  v578 = &v577[v576 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v577) = *v577;
  v579 = &v578[v565];
  STACK[0xDA88] = (unint64_t)v579;
  LODWORD(v457) = *v579;
  v580 = 4 * BYTE1(v566);
  v581 = &v578[(unint64_t)v580 / 4];
  v582 = 4 * v542;
  v583 = &v581[(unint64_t)v582 / 4 + v580 / 0xFFFFFFFFFFFFFFFCLL];
  v584 = 4 * BYTE3(v566);
  v585 = &v583[(unint64_t)v584 / 4 + v582 / 0xFFFFFFFFFFFFFFFCLL];
  v586 = BYTE2(v565);
  v587 = (unint64_t)&v585[v586 + v584 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v581;
  LODWORD(v581) = *v581;
  STACK[0xDA88] = (unint64_t)v583;
  LODWORD(v583) = *v583;
  STACK[0xDA88] = (unint64_t)v585;
  LODWORD(v585) = *v585;
  STACK[0xDA88] = v587;
  v588 = v587 - v586 * 4;
  LODWORD(v587) = *(_DWORD *)v587;
  v589 = (_DWORD *)(v588 + 4 * (v542 >> 24));
  STACK[0xDA88] = (unint64_t)v589;
  LODWORD(v560) = *v589;
  v590 = 4 * BYTE1(v568);
  v591 = (_DWORD *)(v588 + v590);
  v592 = BYTE2(v542);
  v593 = (unint64_t)&v591[v592 + v590 / 0xFFFFFFFFFFFFFFFCLL];
  v594 = 4 * BYTE3(v565);
  v595 = v593 - v592 * 4 + v594;
  v596 = 4 * BYTE2(v568);
  v597 = v595 + v596 - v594;
  STACK[0xDA88] = (unint64_t)v591;
  LODWORD(v591) = *v591;
  STACK[0xDA88] = v593;
  LODWORD(v593) = *(_DWORD *)v593;
  STACK[0xDA88] = v595;
  LODWORD(v595) = *(_DWORD *)v595;
  STACK[0xDA88] = v597;
  v598 = v597 - v596;
  LODWORD(v597) = *(_DWORD *)v597;
  v599 = (_DWORD *)(v598 + 4 * v566);
  STACK[0xDA88] = (unint64_t)v599;
  LODWORD(v561) = *v599;
  v600 = (_DWORD *)(v598 + 4 * BYTE2(v566));
  STACK[0xDA88] = (unint64_t)v600;
  v601 = 4 * BYTE1(v565);
  v602 = (_DWORD *)(v598 + v601);
  v603 = v568;
  v604 = (unint64_t)&v602[v603 + v601 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v583) = v510 ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x67B0]) ^ __ROR4__((_DWORD)v583, 16) ^ __ROR4__((_DWORD)v585, 24) ^ v587 ^ __ROR4__((_DWORD)v591, 8);
  LODWORD(v575) = v510 ^ LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x6840]) ^ __ROR4__((_DWORD)v575, 8) ^ __ROR4__(v595, 24) ^ v597 ^ __ROR4__(v561, 16);
  LODWORD(v595) = v510 ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x6830]) ^ __ROR4__((_DWORD)v577, 24) ^ __ROR4__(v457, 16) ^ __ROR4__((_DWORD)v581, 8) ^ v593;
  LODWORD(v566) = v510 ^ LODWORD(STACK[0x6370]) ^ LODWORD(STACK[0x6820]) ^ __ROR4__((_DWORD)v560, 24) ^ *v600;
  STACK[0xDA88] = (unint64_t)v602;
  LODWORD(v566) = v566 ^ __ROR4__(*v602, 8);
  STACK[0xDA88] = v604;
  v605 = v604 - v603 * 4;
  LODWORD(v604) = v566 ^ __ROR4__(*(_DWORD *)v604, 16);
  v606 = (_DWORD *)(v605 + 4 * (v575 >> 24));
  STACK[0xDA88] = (unint64_t)v606;
  LODWORD(v566) = *v606;
  v607 = 4 * BYTE1(v575);
  v608 = (_DWORD *)(v605 + v607);
  v609 = BYTE2(v583);
  v610 = (unint64_t)&v608[v609 + v607 / 0xFFFFFFFFFFFFFFFCLL];
  v611 = 4 * BYTE1(v604);
  v612 = (_DWORD *)(v610 + v611 - v609 * 4);
  v613 = 4 * v575;
  v614 = &v612[(unint64_t)v613 / 4 + v611 / 0xFFFFFFFFFFFFFFFCLL];
  v615 = 4 * v595;
  v616 = &v614[(unint64_t)v615 / 4 + v613 / 0xFFFFFFFFFFFFFFFCLL];
  v617 = 4 * BYTE1(v595);
  v618 = &v616[(unint64_t)v617 / 4 + v615 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v608;
  LODWORD(v608) = *v608;
  STACK[0xDA88] = v610;
  LODWORD(v610) = *(_DWORD *)v610;
  STACK[0xDA88] = (unint64_t)v612;
  LODWORD(v612) = *v612;
  STACK[0xDA88] = (unint64_t)v614;
  LODWORD(v614) = *v614;
  STACK[0xDA88] = (unint64_t)v616;
  LODWORD(v616) = *v616;
  STACK[0xDA88] = (unint64_t)v618;
  v619 = &v618[v617 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v618) = *v618;
  v620 = &v619[BYTE3(v604)];
  STACK[0xDA88] = (unint64_t)v620;
  LODWORD(v560) = *v620;
  v621 = 4 * BYTE3(v595);
  v622 = &v619[(unint64_t)v621 / 4];
  v623 = BYTE2(v604);
  v624 = (unint64_t)&v622[v623 + v621 / 0xFFFFFFFFFFFFFFFCLL];
  v625 = 4 * BYTE1(v583);
  v626 = (_DWORD *)(v624 + v625 - v623 * 4);
  v627 = 4 * (v583 >> 24);
  v628 = &v626[(unint64_t)v627 / 4 + v625 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xDA88] = (unint64_t)v622;
  LODWORD(v622) = *v622;
  STACK[0xDA88] = v624;
  LODWORD(v624) = *(_DWORD *)v624;
  STACK[0xDA88] = (unint64_t)v626;
  LODWORD(v626) = *v626;
  STACK[0xDA88] = (unint64_t)v628;
  v629 = &v628[v627 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v628) = *v628;
  v630 = &v629[v604];
  STACK[0xDA88] = (unint64_t)v630;
  LODWORD(v604) = *v630;
  v631 = BYTE2(v575);
  v632 = (unint64_t)&v629[v631];
  v633 = 4 * v583;
  v634 = (_DWORD *)(v632 + v633 - v631 * 4);
  STACK[0xDA88] = v632;
  LODWORD(v632) = *(_DWORD *)v632;
  STACK[0xDA88] = (unint64_t)v634;
  v635 = (unint64_t)&v634[v633 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v634) = *v634;
  v636 = (_DWORD *)(v635 + 4 * BYTE2(v595));
  STACK[0xDA88] = (unint64_t)v636;
  LODWORD(v595) = *v636;
  STACK[0xDA88] = v635;
  LODWORD(v604) = v573 ^ LODWORD(STACK[0x6200]) ^ STACK[0x6278] ^ LODWORD(STACK[0x6710]) ^ __ROR4__((_DWORD)v618, 8) ^ __ROR4__((_DWORD)v628, 24) ^ __ROR4__(v604, 16) ^ v632;
  LODWORD(v608) = v573 ^ LODWORD(STACK[0x61F8]) ^ LODWORD(STACK[0x67C0]) ^ __ROR4__((_DWORD)v608, 8) ^ v610 ^ __ROR4__((_DWORD)v616, 16) ^ __ROR4__((_DWORD)v560, 24);
  LODWORD(v566) = v573 ^ LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x67F0]) ^ __ROR4__(v566, 24) ^ __ROR4__((_DWORD)v612, 8) ^ __ROR4__((_DWORD)v634, 16) ^ v595;
  LODWORD(v634) = v573 ^ LODWORD(STACK[0x6360]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__((_DWORD)v614, 16) ^ __ROR4__((_DWORD)v622, 24) ^ v624 ^ __ROR4__((_DWORD)v626, 8);
  LODWORD(v573) = *(_DWORD *)(STACK[0xDA78] + 4 * BYTE3(v566));
  v637 = (_DWORD *)(STACK[0xDA78] + 4 * BYTE2(v566));
  v638 = (_DWORD *)(STACK[0xDA78] + 4 * BYTE3(v604));
  v639 = STACK[0xDA78] + 4 * v604;
  v640 = (_DWORD *)(STACK[0xDA78] + 4 * v608);
  v641 = (_DWORD *)(STACK[0xDA78] + 4 * BYTE2(v634));
  v642 = (_DWORD *)(STACK[0xDA78] + 4 * (v634 >> 24));
  v643 = STACK[0xDA78] + 4 * BYTE1(v634);
  v644 = (_DWORD *)(STACK[0xDA78] + 4 * (v608 >> 24));
  v645 = STACK[0xDA78] + 4 * BYTE1(v604);
  v646 = (_DWORD *)(STACK[0xDA78] + 4 * BYTE2(v608));
  v647 = STACK[0xDA78] + 4 * BYTE1(v608);
  v648 = STACK[0xDA78] + 4 * v634;
  v649 = 4 * BYTE1(v566);
  v650 = STACK[0xDA78] + v649;
  STACK[0xDA78] = v643;
  LODWORD(v643) = *(_DWORD *)v643;
  STACK[0xDA78] = (unint64_t)v644;
  LODWORD(v632) = *v644;
  STACK[0xDA78] = v645;
  LODWORD(v645) = *(_DWORD *)v645;
  STACK[0xDA78] = (unint64_t)v646;
  LODWORD(v646) = *v646;
  STACK[0xDA78] = v647;
  LODWORD(v647) = *(_DWORD *)v647;
  STACK[0xDA78] = v648;
  LODWORD(v648) = *(_DWORD *)v648;
  STACK[0xDA78] = v650;
  v651 = v650 - v649;
  LODWORD(v650) = *(_DWORD *)v650;
  v652 = (_DWORD *)(v651 + 4 * BYTE2(v604));
  STACK[0xDA78] = (unint64_t)v652;
  LODWORD(v604) = *v652;
  v653 = 4 * v566;
  STACK[0xDA78] = v651 + v653;
  LODWORD(v573) = v553 ^ LODWORD(STACK[0x6780]) ^ v554 ^ __ROR4__(v573, 16) ^ __ROR4__(*(_DWORD *)v639, 8);
  LODWORD(v407) = __ROR4__(*v641, 24);
  v654 = (v573 ^ v407 ^ v647) + 893233458 - ((2 * (v573 ^ v407 ^ v647)) & 0x6A7B5264);
  LODWORD(v639) = v553 ^ LODWORD(STACK[0x6740]) ^ v554 ^ __ROR4__(*v642, 16) ^ v645 ^ __ROR4__((_DWORD)v646, 24);
  LODWORD(v407) = __ROR4__(*(_DWORD *)(v651 + v653), 8);
  v655 = (v639 ^ v407) + 893233458 - ((2 * (v639 ^ v407)) & 0x6A7B5264);
  LODWORD(v604) = v553 ^ (v484 + v554) ^ __ROR4__(v632, 16) ^ __ROR4__(v648, 8) ^ v650 ^ __ROR4__(v604, 24);
  LODWORD(v648) = v553 ^ LODWORD(STACK[0x6760]) ^ v554 ^ __ROR4__(*v637, 24) ^ __ROR4__(*v638, 16);
  LODWORD(v407) = __ROR4__(*v640, 8);
  v656 = v604 + 893233458 - ((2 * v604) & 0x6A7B5264);
  v657 = (v648 ^ v407 ^ v643) + 893233458 - ((2 * (v648 ^ v407 ^ v643)) & 0x6A7B5264);
  v658 = STACK[0x64F0];
  v659 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65E0]);
  v660 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65F0]);
  v661 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x6720]) ^ __ROR4__(STACK[0x6608], 8) ^ __ROR4__(STACK[0x6600], 24) ^ v544 ^ __ROR4__(v414, 16);
  v662 = STACK[0x6AA0];
  if ((STACK[0x6AA0] & 1) != 0)
    v663 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65E0]);
  else
    v663 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65F0]);
  if ((v662 & 1) != 0)
    v659 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65E8]);
  else
    v660 = v661;
  if ((v662 & 1) == 0)
    v661 = LODWORD(STACK[0x64F0]) ^ 0xDDFDFD64 ^ LODWORD(STACK[0x65E8]);
  v664 = v658 ^ 0x69F2EC47 ^ v654;
  v665 = v658 ^ 0x69F2EC47 ^ v657;
  v666 = v658 ^ 0x69F2EC47 ^ v656;
  v667 = v658 ^ 0x69F2EC47 ^ v655;
  if ((v662 & 1) != 0)
    v668 = v665;
  else
    v668 = v664;
  if ((v662 & 1) == 0)
  {
    v664 = v667;
    v667 = v666;
    v666 = v665;
  }
  if ((v662 & 2) != 0)
    v669 = v663;
  else
    v669 = v661;
  if ((v662 & 2) != 0)
  {
    v670 = v660;
  }
  else
  {
    v661 = v663;
    v670 = v659;
  }
  if ((v662 & 2) != 0)
  {
    v671 = v667;
  }
  else
  {
    v659 = v660;
    v671 = v668;
  }
  if ((v662 & 2) != 0)
  {
    v667 = v668;
    v672 = v664;
  }
  else
  {
    v672 = v666;
  }
  if ((v662 & 2) == 0)
    v666 = v664;
  v673 = (1620062193 * (v670 ^ 0xB40F1123)) ^ v661 ^ (1620062193 * (v672 ^ v554));
  v674 = 1334093971 * ((v671 ^ 0x4BF0EEDC) + (v673 ^ v554)) + 1334093971 + v669;
  v675 = v674 ^ v659 ^ v667;
  v676 = v675 ^ v554;
  if (((v675 ^ v554) & 0x20000) != 0)
    v677 = -131072;
  else
    v677 = 0x20000;
  v678 = v673 + 427038553 * ((v666 ^ 0x4BF0EEDC) + (LODWORD(STACK[0x65F8]) ^ 0x8D863262 ^ (v677 + v676))) + 427038553;
  v679 = v670 ^ v554 ^ (-1820974935 * (v666 ^ v554)) ^ v674 ^ (-1820974935 * v676);
  v680 = v667 & 0x400000;
  if ((v679 & v667 & 0x400000) != 0)
    v680 = -v680;
  v681 = (v680 + v679) ^ v667 & 0xFFBFFFFF;
  v682 = v678 ^ v666;
  v683 = v675 ^ v672 ^ v671 ^ v678 ^ v681 ^ 0xB40F1123;
  v684 = v682 ^ v683;
  v685 = v674 ^ v672 ^ v671 ^ v681 ^ v682 ^ v683;
  v686 = v683 ^ v667 ^ v685 ^ 0xB40F1123;
  v687 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x4BCB)) - 12;
  v688 = v687[BYTE1(v686) ^ 0x27];
  v689 = ((v686 >> 8 << 7) | ((unsigned __int16)v686 >> 9)) ^ ((v688 >> 1) | (v688 << 7));
  v690 = STACK[0x6658];
  *(_BYTE *)(v690 + STACK[0x6650]) = (((v689 & 0x80) != 0) | (2 * v689)) ^ 0x19;
  v691 = ((2 * (LODWORD(STACK[0x6628]) ^ 0x5661C270)) & 0x14A231C) - (LODWORD(STACK[0x6628]) ^ 0x5661C270) + 2136665712;
  v692 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 18672);
  *(_BYTE *)(v690 + (((v691 & 0x85008872 ^ 0x13) + (v691 & 0x7AFF778C ^ 0x78DC2605) - 2) ^ 0x7FDFC20D)) = *(_BYTE *)(v692 + (BYTE2(v684) ^ 0xD5)) ^ BYTE2(v684) ^ 0x95;
  v693 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 17582) - 12;
  *(_BYTE *)(v690 + (LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6610]))) = v693[((unsigned __int16)(v681 ^ 0x1123) >> 8) ^ 0x47] ^ ((((unsigned __int16)(v681 ^ 0x1123) >> 8) ^ 0x50) - 32) ^ 0xF9;
  v694 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x4AF8)) - 12;
  *(_BYTE *)(v690
           + (((LODWORD(STACK[0x6620]) ^ 0x5F47D88)
             - ((2 * (LODWORD(STACK[0x6620]) ^ 0x5F47D88)) & 0x4A0914E6u)
             - 1526429065) ^ 0x8EC83FE1)) = v694[HIBYTE(v686) ^ 0x3DLL] ^ 0x4B ^ (v694[HIBYTE(v686) ^ 0x3DLL] >> 3) & 0xE;
  *(_BYTE *)(v690 + STACK[0x6638]) = *(_BYTE *)(v692 + (v685 ^ 0xB1)) ^ v685 ^ 0xF0;
  *(_BYTE *)(v690 + STACK[0x6630]) = v694[v681 ^ 0x8ELL] ^ 0x2E ^ (v694[v681 ^ 0x8ELL] >> 3) & 0xE;
  *(_BYTE *)(v690 + STACK[0x6618]) = v694[HIBYTE(v681) ^ 0x1ELL] ^ (v694[HIBYTE(v681) ^ 0x1ELL] >> 3) & 0xE ^ 0x55;
  *(_BYTE *)(v690 + STACK[0x6648]) = v694[BYTE2(v681) ^ 0x10] ^ 0x6E ^ (v694[BYTE2(v681) ^ 0x10] >> 3) & 0xE;
  v695 = STACK[0x6640];
  v696 = STACK[0xDA70];
  v697 = STACK[0xDA70];
  *(_BYTE *)(v696 + (((v695 & 0xB5718602 ^ 0x5508009) + (v695 & 0x4A8E79F5) - 1) ^ 0x2B684812)) = v694[HIBYTE(v685) ^ 0xE9] ^ 0x68 ^ (v694[HIBYTE(v685) ^ 0xE9] >> 3) & 0xE;
  *(_BYTE *)(v696
           + ((1132641187
             - (LODWORD(STACK[0x66A0]) ^ 0x24D90670 | 0x4382BBA3)
             + (LODWORD(STACK[0x66A0]) ^ 0x24D90670 | 0xBC7D445C)) ^ 0xB69C8A37)) = v687[BYTE2(v685) ^ 0x4DLL] ^ BYTE2(v685) ^ 0x57;
  *(_BYTE *)(v696 + STACK[0x6670]) = *(_BYTE *)(v692 + (HIBYTE(v684) ^ 0xE2)) ^ HIBYTE(v684) ^ 2;
  *(_BYTE *)(v696 + STACK[0x6678]) = v687[((unsigned __int16)(v685 ^ 0x1123) >> 8) ^ 0x90] ^ ((unsigned __int16)(v685 ^ 0x1123) >> 8) ^ 0xE9;
  v698 = (-640171856 - (v695 & 0xFFFFFFFA ^ 0x2F254AEA | 0xD9D7C0B0) + (v695 & 0xFFFFFFFA ^ 0x2F254AEA | 0x26283F4F)) ^ 0x96682B47;
  *(_BYTE *)(v696 + ((894872573 - (v698 | 0x3556ABFD) + (v698 | 0xCAA95402)) ^ 0x7BF4C2FFLL)) = v687[BYTE2(v686) ^ 0x2ELL] ^ BYTE2(v686) ^ 0x18;
  *(_BYTE *)(v696 + STACK[0x6680]) = BYTE1(v684) ^ 0xB0 ^ v687[BYTE1(v684) ^ 0x7ELL];
  *(_BYTE *)(v696 + STACK[0x6668]) = ((v686 ^ 0xEE) - 32) ^ 0xB6 ^ v693[v686 ^ 0xF9];
  *(_BYTE *)(v697 + STACK[0x6660]) = v694[v684 ^ 0xC6] ^ 0x79 ^ (v694[v684 ^ 0xC6] >> 3) & 0xE;
  STACK[0xDA78] = v651;
  LODWORD(v687) = (((v695 ^ 0xFA95616A) + 90873494) ^ ((v695 ^ 0x121EC96E) - 304007534) ^ ((v695 ^ 0xC6B3601E)
                                                                                         + 961322978))
                + 1306272573;
  LODWORD(v696) = (v687 ^ 0xFA1E82C9) & (2 * (v687 & 0xE05CA4ED)) ^ v687 & 0xE05CA4ED;
  v699 = ((2 * (v687 ^ 0xBA1EC351)) ^ 0xB484CF78) & (v687 ^ 0xBA1EC351) ^ (2 * (v687 ^ 0xBA1EC351)) & 0x5A4267BC;
  LODWORD(v696) = (v699 ^ 0x48000738) & (4 * v696) ^ v696;
  v700 = ((4 * (v699 ^ 0x4A422084)) ^ 0x69099EF0) & (v699 ^ 0x4A422084) ^ (4 * (v699 ^ 0x4A422084)) & 0x5A4267BC;
  LODWORD(v696) = (v700 ^ 0x480006BC) & (16 * v696) ^ v696;
  v701 = ((16 * (v700 ^ 0x1242610C)) ^ 0xA4267BC0) & (v700 ^ 0x1242610C) ^ (16 * (v700 ^ 0x1242610C)) & 0x5A4267B0;
  LODWORD(v696) = v696 ^ 0x5A4267BC ^ (v701 ^ 0x2633C) & ((_DWORD)v696 << 8);
  LODWORD(v696) = v687 ^ (2
                                      * (((_DWORD)v696 << 16) & 0x5A420000 ^ v696 ^ (((_DWORD)v696 << 16) ^ 0x67BC0000) & (((v701 ^ 0x5A40043C) << 8) & 0x5A420000 ^ (((v701 ^ 0x5A40043C) << 8) ^ 0x42670000) & (v701 ^ 0x5A40043C) ^ 0x18000000)));
  LODWORD(v687) = (((v696 ^ 0xAF65E80) + 199820017) ^ ((v696 ^ 0x7BB42040) + 2058058801) ^ ((v696 ^ 0xA19A1555)
                                                                                          - 1601877722))
                - 2135889709;
  v702 = v687 >= LODWORD(STACK[0x61C8]);
  v703 = LODWORD(STACK[0x6688]) ^ (v687 < 0x527820B9);
  v704 = !v702;
  if (v703)
    v705 = STACK[0x6688];
  else
    v705 = v704;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v705 ^ 1 | (2 * (v705 ^ 1))) ^ LODWORD(STACK[0x6AC0]))))();
}

uint64_t sub_100B034BC()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;

  LODWORD(STACK[0x6688]) = (((v3 ^ ((v3 & STACK[0x64F8]) >> 1)) & STACK[0x64C8]) << LODWORD(STACK[0x6700])) | (((v3 ^ ((v3 & STACK[0x64F8]) >> 1)) & STACK[0x64C0]) >> LODWORD(STACK[0x66F8]));
  LODWORD(STACK[0x6698]) = v1 ^ v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 13417)) - 4))();
}

uint64_t sub_100B0362C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v8 = STACK[0x6508] + 15723;
  v9 = STACK[0x6508] - 3786;
  v10 = STACK[0xA540] + 16;
  STACK[0xAFC8] = v10;
  STACK[0xB930] = v10;
  STACK[0xAAD0] = STACK[0xB350];
  STACK[0xC8B8] = v7;
  STACK[0xC108] = a7;
  v11 = STACK[0x6AD8];
  STACK[0x8958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 8 * (v8 + v9 - 2689)))(a1, a2, a3, a4, a5, LODWORD(STACK[0x6108]));
}

uint64_t sub_100B036C8()
{
  return (*(uint64_t (**)(unint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x61B0])))(STACK[0xDA88]);
}

uint64_t sub_100B03730()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = (uint64_t (*)(uint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v3 = v2(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 ^ 0x5CE8u) + 17144))(v3);
}

uint64_t sub_100B03784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t v12;

  STACK[0xD1A8] = v8 - 32;
  v12 = (a8 - 16);
  *v11 = *(_BYTE *)(v9 + v12);
  v11[1] = *(_BYTE *)(v9 + (v12 | 1));
  v11[2] = *(_BYTE *)(v9 + (v12 | 2));
  v11[3] = *(_BYTE *)(v9 + (v10 ^ 0x4307 | v12));
  v11[4] = *(_BYTE *)(v9 + (v12 | 4));
  v11[5] = *(_BYTE *)(v9 + (v12 | 5));
  v11[6] = *(_BYTE *)(v9 + (v12 | 6));
  v11[7] = *(_BYTE *)(v9 + (v12 | 7));
  v11[8] = *(_BYTE *)(v9 + (v12 | 8));
  v11[9] = *(_BYTE *)(v9 + (v12 | 9));
  v11[10] = *(_BYTE *)(v9 + (v12 | 0xA));
  v11[11] = *(_BYTE *)(v9 + (v12 | 0xB));
  v11[12] = *(_BYTE *)(v9 + (v12 | 0xC));
  v11[13] = *(_BYTE *)(v9 + (v12 | 0xD));
  v11[14] = *(_BYTE *)(v9 + (v12 | 0xE));
  v11[15] = *(_BYTE *)(v9 + (v12 | 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v10) - 8))();
}

uint64_t sub_100B0389C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v8 = (STACK[0x6508] + 14315) | 0x580;
  v9 = STACK[0x6508] - 3749;
  v10 = STACK[0xC110] + SLODWORD(STACK[0xCAD4]);
  STACK[0x8758] = v10;
  *(_QWORD *)v10 = 0x54E4A1BC22CAA7BLL;
  *(_BYTE *)(v10 + 8) = STACK[0x6170];
  *(_BYTE *)(v10 + 9) = STACK[0x616C];
  *(_BYTE *)(v10 + 10) = STACK[0x6140];
  *(_BYTE *)(v10 + 11) = STACK[0x6138];
  *(_BYTE *)(v10 + 12) = STACK[0x6130];
  *(_BYTE *)(v10 + 13) = STACK[0x6128];
  *(_BYTE *)(v10 + 14) = STACK[0x6160];
  *(_BYTE *)(v10 + 15) = STACK[0x6148];
  STACK[0xB930] = v10;
  STACK[0xAAD0] = v10 + 0x778E069994F0EBC0;
  STACK[0xC8B8] = v7;
  STACK[0xC108] = a7;
  v11 = STACK[0x6AD8];
  STACK[0x8958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (v9 ^ 0x93C ^ v8)))(a1, a2, a3, a4, a5, 562132829);
}

uint64_t sub_100B039EC()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v0 = STACK[0x4B08] ^ 0x1729;
  v1 = STACK[0x6508] + 5112;
  v2 = LODWORD(STACK[0xA7DC]) + STACK[0x6080];
  LODWORD(STACK[0xDF10]) = STACK[0x6080];
  LODWORD(STACK[0xDF14]) = v2;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x5510])(v2);
  STACK[0xB3B8] = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((27821 * ((v0 ^ (v3 == 0)) & 1)) ^ v1)))();
}

uint64_t sub_100B03A70()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD3B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 4940)) - 12))();
}

uint64_t sub_100B03AF8()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)(((LODWORD(STACK[0x4BA4]) | 0x24) + 1950) ^ (STACK[0x6508] - 2338)))
                                                   - 4))(v0, v1);
}

uint64_t sub_100B03B3C()
{
  int v0;
  unint64_t v1;

  STACK[0xD3B8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 + 14268) + 22768))();
}

uint64_t sub_100B03B68(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v3 > a1 + ((23 * (v2 ^ 0x5A63u)) ^ 0xD7EA5AF7D0633718) + a2)
                                          * (v2 ^ 0x58FB)) | v2))
                            - 12))();
}

uint64_t sub_100B03BC8()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x12C9 ^ (5181 * (v0 != 0))))
                            - (((v1 ^ 0x12C9) - 14801) | 0x16u)
                            + 4210))();
}

uint64_t sub_100B03C0C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 11025)) - 4))();
}

uint64_t sub_100B03C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v4 + ((2 * v2) & 0x1FFF7FD52) + (v2 ^ 0xEFD7FEB9FFFBFEA9)) = *(_BYTE *)(((2 * v2) & 0x1FFF7FD52)
                                                                                            + (v2 ^ 0xEFD7FEB9FFFBFEA9)
                                                                                            + v5
                                                                                            + 0x1028014600040157);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 + 1 == v1) * (v3 + 13809)) ^ v3)) - 4))();
}

uint64_t sub_100B03CB0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((1053 * (((v3 == 0) ^ (a3 - 19 + a3 + 119 + 1)) & 1)) ^ a3))
                            - 8))();
}

uint64_t sub_100B03CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                              + 8
                                                              * (int)(((v2 >= 86
                                                                                          * (v3 & 0xF73E7EE7 ^ 0x3AF3)
                                                                                          - 4206)
                                                                     * ((((v3 & 0xF73E7EE7) - 13926) | 0x3821) ^ 0x561C)) ^ v3 & 0xF73E7EE7)))(a1, a2, v2);
}

uint64_t sub_100B03D58(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((213
                                          * (0x2815A5082F9CF30BLL - a2 - a1 + v3 < (unint64_t)((v2 ^ 0xB68u) - 9887)
                                                                                 - 4182)) ^ v2))
                            - 8))();
}

uint64_t sub_100B03DB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((35 * (v4 < ((a4 - 1304) ^ 0xFFFFDE57) + v5)) ^ a4))
                            - 12))();
}

uint64_t sub_100B03DEC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                                 + 8 * a2)
                                                                                     - ((a2 - 4601) | 0x11E2u)
                                                                                     + 12770))(a1, (v2 & 0xFFFFFFF8) - 8, v2 & 7, v2 & 0xFFFFFFF8, v3 - 7, a1 - 7);
}

uint64_t sub_100B03E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  *(_QWORD *)(a6 + ((v9 + v10) ^ v8) + v6 + v7) = *(_QWORD *)(a5 + ((v9 + v10) ^ v8) + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a2 != v8) * v11) ^ v9)) - 4))();
}

uint64_t sub_100B03E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((v5 - 1279712360) & 0x4C46BAF7 ^ 0xFFFFFF91) + ((v5 + 2233) ^ 0x2AE9))
                                     * (a4 != v4)) ^ (v5 + 2233))))();
}

uint64_t sub_100B03EBC(uint64_t a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 4793)) - 8))(a1, (v1 & 0xFFFFFFE0) - 32, 0);
}

uint64_t sub_100B03EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v15 = (((v10 ^ v13) * v11 + v12) ^ a3) + v8;
  v16 = *(_OWORD *)(v14 + v15 - 15);
  v17 = *(_OWORD *)(v14 + v15 - 31);
  v18 = a1 + v9 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a2 != a3) | (4 * (a2 != a3))) ^ (v10 + a8))) - 8))();
}

uint64_t sub_100B03F44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((((a4 + 1989491710) & 0x896ABF77 ^ 0x371B) * (v5 == v4)) ^ a4))
                            - 8))();
}

uint64_t sub_100B03F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((32748 * (((((67 * (a5 ^ 0x3789)) ^ 0x218B) - 4190) & v5) == 0)) ^ a5))
                            - 12))();
}

uint64_t sub_100B03FCC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9805)) - 4))();
}

uint64_t sub_100B03FE4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v6 = a3 - 1;
  *(_BYTE *)(a1 + v6 + v4) = *(_BYTE *)(v5 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31986 * (v6 == 0)) ^ v3)) - 4))();
}

uint64_t sub_100B04018()
{
  return ((uint64_t (*)(void))STACK[0xD3B8])();
}

uint64_t sub_100B04028()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)(STACK[0x6508]
                                                                     - 2432
                                                                     + ((STACK[0x6508] - 4190) | 0x2124)
                                                                     + 1884))
                                                   - 4))(v0, 0x2815A5082F9CF30BLL);
}

uint64_t sub_100B0407C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x4C70];
  *(_QWORD *)(v1 + 72) = STACK[0xE310];
  *(_DWORD *)(v1 + 80) = *(_DWORD *)(v0 + 1124);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((16133 * (LODWORD(STACK[0x326C]) < 0x969E47AC)) ^ (STACK[0x6508] + 3808)))
                                          - 8))(5121);
}

uint64_t sub_100B04100()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6508];
  LODWORD(STACK[0xA06C]) = *(_DWORD *)(STACK[0xA3B0] + 8)
                         - 852283779
                         - ((2 * *(_DWORD *)(STACK[0xA3B0] + 8)) & 0x9A665CFA);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((*(unsigned __int8 *)(v0 + 2203) * (((v1 - 3555) | 0x1824) - 6740)) ^ (v1 + 2625))))();
}

uint64_t sub_100B04188@<X0>(int a1@<W8>)
{
  _QWORD *v1;

  *(_QWORD *)STACK[0xC7E8] = (((a1 + 9705) | 0x1900u) ^ 0x67F3171B1845F43FLL) + 0x3B2B85D6199E010FLL * *v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B041E0()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3268])))();
}

uint64_t sub_100B04200()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3264])))();
}

uint64_t sub_100B04220()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;

  v3 = STACK[0xB258];
  LODWORD(STACK[0xDF18]) = v0;
  LODWORD(STACK[0xDF1C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3828 * (v3 != 0)) ^ (v1 + 17948))) - 12))();
}

uint64_t sub_100B04264()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B04278()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8876 * (STACK[0xB2D0] != 0)) ^ (v0 + 3442)))
                            - ((v0 - 2544) ^ 0x682)))();
}

uint64_t sub_100B042CC()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((((v0 - 2116780660) ^ 0x81D47F04) + v0) ^ (8084 * (v0 < 0xC7CDA017))))
                                          - 4))(v1);
}

uint64_t sub_100B04318()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((*(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340CDELL) == (v0 ^ 0xA) - 1926394409)
                                                        * ((602 * (v0 ^ 0x681)) ^ 0x452A)) ^ v0))
                                          - 12))(5121);
}

uint64_t sub_100B043AC()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 - 10991 + (int)v0 + 13147)) - 8))();
}

uint64_t sub_100B04414()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 2591)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 1294)) - (v0 + 10609) + 14815))();
}

uint64_t sub_100B04480()
{
  int v0;
  _QWORD *v1;
  BOOL v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;

  v2 = v0 == 1667214383;
  v3 = STACK[0xCE18];
  v4 = *(_DWORD *)(*v1 + (int)(*(_DWORD *)STACK[0x60B8] & 0xD75FEFDC));
  v5 = 1772489163
     * (((1772489163 * ((v4 ^ v3) & 0x7FFFFFFF)) >> (STACK[0x6508] - 102)) ^ (1772489163
                                                                                          * ((v4 ^ v3) & 0x7FFFFFFF)));
  v6 = (*(_BYTE *)(STACK[0x4A40] + (v5 >> 24)) ^ *(_BYTE *)STACK[0xCE18] ^ *(_BYTE *)((v5 >> 24) + STACK[0x4A38] + 3) ^ *(_BYTE *)(STACK[0x4A30] + (v5 >> 24)) ^ v5 ^ (11 * BYTE3(v5)));
  v7 = 1772489163
     * ((1772489163 * ((v4 ^ ((_DWORD)v3 + 1)) & 0x7FFFFFFF)) ^ ((1772489163 * ((v4 ^ ((_DWORD)v3 + 1)) & 0x7FFFFFFFu)) >> 16));
  LODWORD(v7) = 16
              * (*(_BYTE *)(STACK[0x4A40] + (v7 >> 24)) ^ *(_BYTE *)(STACK[0xCE18] + 1) ^ *(_BYTE *)((v7 >> 24) + STACK[0x4A38] + 3) ^ *(_BYTE *)(STACK[0x4A30] + (v7 >> 24)) ^ v7 ^ (11 * BYTE3(v7)));
  LODWORD(STACK[0x751C]) = ((((v6 ^ 0x3A0A8997) - 482823054) ^ ((v6 ^ 0x98390090) + 1091255671) ^ ((v6 ^ 0xA2338907)
                                                                                                 + 2063709410))
                          - 935210346
                          + (((v7 ^ 0x218B35EB) + 2130762346) ^ ((v7 ^ 0xAA789C81)
                                                                             - 185371900) ^ ((v7 ^ 0x8BF3A96A)
                                                                                           - 713537815)))
                         % 0x2F
                         + 17;
  v8 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x2FF8]) ^ (v8 | (16 * v8)))) - 4))();
}

uint64_t sub_100B0466C()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 1561;
  v1 = STACK[0x6AD8];
  STACK[0xB820] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (v0 ^ 0x2C3A ^ (27327 * (((v0 + 1868657826) & 0x909E9176 ^ 0x4A4DC20A) + v0 < 0x359EC7DB)))))();
}

uint64_t sub_100B04724()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;

  STACK[0x8EE8] = v0;
  LODWORD(STACK[0x7E20]) = v2;
  v5 = STACK[0xC768];
  STACK[0xBA28] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v5 + 32;
  STACK[0xC350] = v1;
  STACK[0xB030] = 4;
  v6 = ((uint64_t (*)(unint64_t *, unint64_t *, unint64_t *, _QWORD, _QWORD))STACK[0x49E0])(&STACK[0x1D094], &STACK[0x9454], &STACK[0xB030], 0, 0);
  v7 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v3 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = v3 - 660898515;
  LODWORD(STACK[0xEE50]) = v3 - 660901258;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v6;
  LODWORD(STACK[0xEE60]) = v3 - 660901282;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v4 + 2057624348 - 2 * ((v4 - 240) & 0x7AA4DC0C)) ^ 0x47360355)
                          + v3;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v8 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v4 - 240);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * SLODWORD(STACK[0x1D354])))(v8);
}

uint64_t sub_100B0488C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2C44])) - 12))();
}

uint64_t sub_100B048A8@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x3304];
  v4 = LODWORD(STACK[0x3304]) - 15;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (STACK[0x3304] & (v1 + 1768))) - 4;
  LODWORD(STACK[0xEE20]) = v4;
  LODWORD(STACK[0xEE50]) = v3 + 2600;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v3;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = a1;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v2 - 240) | 0x4F1241E9) - ((v2 - 240) & 0x4F1241E9)) ^ 0x72809EB0)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v6);
}

uint64_t sub_100B0496C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x4B08] ^ 0x1056;
  v3 = STACK[0x6508] - 4162;
  STACK[0xA520] = v0 - 0x55058F428EADA7E4;
  STACK[0xAC58] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ (14809 * (v0 != 0x55058F428EADA7E4))))
                            - (v2 ^ 0x2CLL)))();
}

uint64_t sub_100B049EC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6811)) - ((v0 - 1241017378) & 0x49F86FF9 ^ 0x3F4)))();
}

uint64_t sub_100B04A38()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 891) ^ 0x4F8D)) - 4))();
}

uint64_t sub_100B04A5C()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  LODWORD(STACK[0xB7DC]) = 1926392715;
  LOBYTE(STACK[0x99CF]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 10527)) - 12))();
}

uint64_t sub_100B04AA0()
{
  int v0;
  int v1;
  int v2;
  _BOOL4 v3;

  v1 = STACK[0x6508] - 2166;
  v2 = STACK[0x6508] - 3333;
  LODWORD(STACK[0xB7DC]) = v0;
  v3 = v0 == (v2 ^ 0x8D2D9716);
  LOBYTE(STACK[0x99CF]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((2 * (((v1 ^ v3) & 1) == 0)) & 0xFB | (4
                                                                                 * ((v1 ^ ~v3) & 1))) ^ LODWORD(STACK[0x22AC])))
                            - 8))();
}

uint64_t sub_100B04B14()
{
  int v0;
  uint64_t v1;

  STACK[0xC768] = (v0 - 2356) + STACK[0xC768] - 4886;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B04B4C@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((a1 + 11715) | 0x888) - 9746) ^ a1)) - 8))();
}

uint64_t sub_100B04B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;

  v4 = (STACK[0x6508] + 968716041) & 0xC642BBD3;
  v5 = STACK[0x6508] - 4084;
  v6 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v6
                                                                                         + 8
                                                                                         * (v5 ^ 0x116C ^ (954 * (((v4 - 202089213) ^ v5) != 170736313)))))(a1, a2, a3, a4, 0xF26FC0784BC7DF50);
}

uint64_t sub_100B04C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a6)
                                                                                       - ((a6 + 4385) ^ 0x4C70)))(a1, a2, a3, a4, a5, 0x58292A32636B72E6);
}

uint64_t sub_100B04C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((203
                                          * (v9 + a8 - 0x2AB629F33171E5F1 > v10
                                                                            + (((v8 - 19550) | 0x12A1u) ^ ((unint64_t)(v8 - 14779) - 0x58292A32636B730CLL))
                                                                            + a6)) ^ v8))
                            - 8))();
}

uint64_t sub_100B04CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((14
                                          * ((((a5 ^ 0x503DF9E8) + 842289219) ^ ((a5 ^ 0x6426FB41) + 103764716) ^ ((a5 ^ 0x7FDCCDCF ^ (v5 - 577)) + 500528148)) == 701396667)) ^ v5))
                            - 12))();
}

uint64_t sub_100B04D70@<X0>(unsigned int a1@<W4>, unsigned int a2@<W5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  unsigned int v8;

  v7 = a1 < 0xE21B5906;
  *(_BYTE *)(v6 + a2 + a3) = *(_BYTE *)(v5 + a2 + a4);
  v8 = a2 + 1;
  if (v7 == v8 > 0x1DE4A6F9)
    v7 = v8 - 501524218 < a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((!v7 * ((v4 + 731955656) & 0xD45F3BF6 ^ 0x1078)) ^ v4))
                            - 12))();
}

uint64_t sub_100B04DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((14030
                                          * ((a5 ^ (v5 + 948431937) & 0xC7785D7D ^ ((v5 - 659) | 0x50) ^ 0x4BC7931E) != 0)) ^ v5))
                            - 12))();
}

uint64_t sub_100B04E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v5 - 6175) ^ 0x44BC) * (a5 < 8)) ^ v5)) - 8))();
}

uint64_t sub_100B04E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((214
                                          * (0xD549D60CCE8E1A0FLL
                                           - a6
                                           - v10
                                           + a8
                                           + v9
                                           - (((v8 - 17221) | 0x4042u) ^ 0xA7D6D5CD9C94CC4CLL) > 0x1F)) ^ v8))
                            - 4))();
}

uint64_t sub_100B04F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((a5 >= ((v5 + 100697774) | 0x240020u) - 103073796)
                                          * (((v5 - 12242) | 0x860) - 6575)) ^ v5))
                            - 12))();
}

uint64_t sub_100B04F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8]
                                                                                        + 8
                                                                                        * ((18840 * (v5 != 432992066)) ^ (v5 - 103070748))))(a1, a2, a3, a4, a5, (((v5 - 103056276) | 0x100) ^ 0xFFFFBA70) & a5);
}

uint64_t sub_100B04FE8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v12 = (((a4 + v5) & v6) + v8) & (a1 + v7);
  v13 = v9 + a5 + v12;
  v14 = *(_OWORD *)(v13 - 31);
  v15 = v10 + v12 + a3;
  *(_OWORD *)(v15 - 15) = *(_OWORD *)(v13 - 15);
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a2 + v7 == 31) * v11) ^ a4)))();
}

uint64_t sub_100B05040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((61 * (a6 != a5)) ^ v6)))();
}

uint64_t sub_100B05060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((6469
                                               * ((a5 & 0x18) == ((2 * ((v5 + 2082675097) & 0x83DC91FF ^ 0x30DD) - 16374) | 0x1884)
                                                               - 2414
                                                               - 4214)) ^ (2
                                                                           * ((v5 + 2082675097) & 0x83DC91FF ^ 0x30DD))))
                            - 12))();
}

uint64_t sub_100B050D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  STACK[0x6AB0] = a4;
  STACK[0x6AC0] = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - 8))(v9, a1, v10, a2);
}

uint64_t sub_100B0513C@<X0>(int a1@<W4>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  *(_QWORD *)(v8 + ((((a4 + v6) & v5) + v10) ^ a2) + a1 + a3) = *(_QWORD *)(v7
                                                                                        + ((((a4 + v6) & v5) + v10) ^ a2)
                                                                                        + a1
                                                                                        + a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v9 == a2) | (8 * (v9 == a2)) | a4)) - 8))();
}

uint64_t sub_100B05184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((19114
                                                                                            * ((((v6 == a5) ^ v7) ^ (45 * (v7 ^ 0xB7))) & 1)) ^ v7))
                                                                              - 12))(a2, a4, v5, STACK[0x6AB0]);
}

uint64_t sub_100B05200()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14385)) - 8))();
}

uint64_t sub_100B0521C@<X0>(int a1@<W4>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v6 + (v4 - 1) + a2) = *(_BYTE *)(v5 + (v4 - 1) + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 == 1) * v3) ^ a1)) - 8))();
}

uint64_t sub_100B05250()
{
  return ((uint64_t (*)(void))STACK[0xD238])();
}

uint64_t sub_100B05268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (STACK[0x6508] + 2525) | 0x2100;
  v5 = STACK[0x6508] - 4067;
  LODWORD(STACK[0x9A04]) = STACK[0xB5C4];
  v6 = LODWORD(STACK[0x7584]) - 0xD903F87B43820F0 - ((2 * LODWORD(STACK[0x7584])) & 0x978FBE20);
  v7 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (v5 ^ 0x2994 ^ v4)))(a1, a2, a3, a4, v6);
}

uint64_t sub_100B05314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _DWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);

  v6 = STACK[0x6508];
  *(_DWORD *)(v4 + 60) = *v5;
  v7 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v6 - 4089));
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                                      + 8
                                                                                      * (int)(((v6 + 10973) ^ 0x2A84)
                                                                                            + v6
                                                                                            - 4089));
  STACK[0xD238] = v7 - 4;
  return v8(a1, a2, a3, a4, 0xF26FC0784BC7DF30);
}

uint64_t sub_100B05384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;

  v4 = STACK[0x6508];
  v5 = STACK[0x6AD8];
  v6 = STACK[0x6508] + 10973;
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 4145)) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v5
                                                                                         + 8
                                                                                         * (v6 + (int)v4 - 4145 - 10564)))(a1, a2, a3, a4, 0xF26FC0784BC7DF39);
}

uint64_t sub_100B053F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unint64_t v8;

  v6 = STACK[0x6508] + 10973;
  v7 = STACK[0x6508] - 4039;
  *(_DWORD *)(v4 + 60) = v5;
  v8 = STACK[0x6AD8];
  STACK[0xD238] = v6 - 15191 + *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v8 + 8 * (v7 ^ 0x12FB)))(a1, a2, a3, a4, 0xF26FC0784BC7DF30);
}

uint64_t sub_100B05460()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5374)) - 4))();
}

uint64_t sub_100B05488()
{
  int v0;
  unsigned int v1;

  v0 = STACK[0x6508] + 8481;
  v1 = STACK[0x6508] - 1440152925;
  *(_BYTE *)(STACK[0xA2D8] + 516) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (int)(v0 ^ v1 ^ 0xAA297863 ^ (61214 * (v1 < 0x6AE5AEA4))))
                            - 12))();
}

uint64_t sub_100B054F0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6564)) - 8))();
}

uint64_t sub_100B0551C()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 2898;
  v2 = STACK[0xB2C0];
  v3 = STACK[0x7678];
  *(_BYTE *)(v3 - 0x55058F428EADA763) = *(_BYTE *)(STACK[0xB2C0] + 1769);
  *(_BYTE *)(v3 - 0x55058F428EADA761) = *(_BYTE *)(v2 + 1768);
  *(_BYTE *)(v3 - 0x55058F428EADA762) = *(_BYTE *)(v2 + 1770);
  LODWORD(v2) = LODWORD(STACK[0xA100]) == -1926392729;
  LOBYTE(STACK[0x9E67]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((85 * (((v1 ^ v2) & 1) == 0)) ^ ((int)v0 + 3865)))
                            - 12))();
}

uint64_t sub_100B055D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  unint64_t v8;

  STACK[0xA168] = STACK[0xB620] + 1784;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v6 + 4076)))(v7 - 0x55058F428EADA7E4, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100B058EC()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  *(_BYTE *)(STACK[0x49E8] + 104) = *(_BYTE *)(STACK[0xC2A8] + 28);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 7189))
                            - (((_DWORD)v0 + 1542678376) & 0xA40CACBB)
                            + 9366))();
}

uint64_t sub_100B05958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 15047)) - ((STACK[0x6508] + 7330) ^ 0x2D1CLL)))(a1, a2, a3, a4, &off_1015B46D0, a6, 1727129952);
}

uint64_t sub_100B059B0()
{
  return ((uint64_t (*)(uint64_t))STACK[0x82E8])(5121);
}

uint64_t sub_100B059F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  unint64_t v8;

  v6 = STACK[0x6508] + 13536;
  v7 = STACK[0x6508] - 4053;
  v8 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((9347 * ((v7 ^ 0x9C1E1238) == -1761611480)) ^ ((v6 ^ 0x5E95) + v7))))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100B05AB0()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  LODWORD(STACK[0xC014]) = STACK[0x7584];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v0 - 1968) ^ 0x1978)) - 12))();
}

uint64_t sub_100B05D2C()
{
  unint64_t v0;
  uint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] ^ 0x18AC;
  *(_BYTE *)(STACK[0xA2D8] + 533) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 9773)) - (v1 ^ 0x8D2)))();
}

uint64_t sub_100B05D6C()
{
  int v0;

  v0 = STACK[0x6508] + 4039;
  STACK[0x6AC0] = STACK[0xE078];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B05DB0()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = STACK[0x6508] + 1466;
  v1 = (_QWORD *)STACK[0xDF38];
  v2 = sub_10009A6DC();
  *v1 = STACK[0xDF58];
  *(_DWORD *)STACK[0xDF40] = STACK[0xDF48];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v2);
}

uint64_t sub_100B05E18()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 7414)))();
}

uint64_t sub_100B05E4C()
{
  unsigned int v0;
  int v1;

  LODWORD(STACK[0xE3CC]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((v0 >= *(_DWORD *)STACK[0x56C8]) | (8 * (v0 >= *(_DWORD *)STACK[0x56C8])) | (v1 + 4158)))
                            - ((417 * (v1 ^ 0x1074) - 832) | 0x58u)
                            + 86))();
}

uint64_t sub_100B05EAC()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7060))
                                          - ((v0 + 827767574) & 0xCEA95BF7 ^ 0x1A5CLL)))(5121);
}

uint64_t sub_100B05F14()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x7B80] = v2;
  LODWORD(STACK[0xEA8C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 + 5221) + v3))();
}

uint64_t sub_100B05F4C@<X0>(unsigned int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 48) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((88 * (((a1 < v1) ^ (v2 - 63) ^ 0xB3) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_100B05F90()
{
  return ((uint64_t (*)(void))STACK[0x7B80])();
}

uint64_t sub_100B05FA4()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  *(_DWORD *)STACK[0x56C8] = STACK[0x6EC8];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((int)v0 + 7302)))();
}

uint64_t sub_100B05FD8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0xA088] == 0) * ((v0 + 3570) ^ 0x1E54)) ^ (v0 + 3550)))
                            - 4))();
}

uint64_t sub_100B06014()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  STACK[0xA088] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (((v0 - 3682) | 0x70u) ^ 0x1072)))(v1);
}

uint64_t sub_100B06044()
{
  int v0;
  int v1;
  int v2;
  _BOOL4 v4;

  v2 = v0 + 5822;
  v4 = v1 != -1926392729 && *(_QWORD *)(STACK[0x56C8] + 8) != 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((31725 * v4) ^ v2)))();
}

uint64_t sub_100B06080()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  *(_QWORD *)(STACK[0x56C8] + 8) = 0;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B06098()
{
  return ((uint64_t (*)(void))STACK[0xB6B8])();
}

uint64_t sub_100B060A8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = v1 ^ v2;
  v4 = STACK[0x56C8];
  v5 = *(_QWORD *)(STACK[0x56C8] + 8);
  STACK[0xDB40] = a1;
  v6 = (unint64_t)a1 << 7;
  *(_QWORD *)(v5 + v6) = 0x603CE14A0A8FADE1;
  *(_QWORD *)(*(_QWORD *)(v4 + 8) + v6 + 16) = 0x28623712C9340FB6;
  *(_QWORD *)(*(_QWORD *)(v4 + 8) + v6 + 8) = 0x55058F428EADAA34;
  *(_QWORD *)(*(_QWORD *)(v4 + 8) + v6 + 32) = 0;
  *(_QWORD *)(*(_QWORD *)(v4 + 8) + v6 + 40) = 0;
  v7 = STACK[0x6AD8];
  STACK[0xD1B0] = v3 - 4226 + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return (*(uint64_t (**)(void))(v7 + 8 * ((int)v1 + 1565)))();
}

uint64_t sub_100B06180()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((53539 * (STACK[0x6508] == -1926801469)) ^ ((STACK[0x6508] ^ 0x540769F4) + STACK[0x6508] - 1409759965)))
                            - 8))();
}

uint64_t sub_100B061E0()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int *v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  _DWORD *v370;
  int v371;
  unsigned int v372;
  unsigned int v373;

  v0 = STACK[0x6508] ^ 0x1000;
  STACK[0x6AC0] = v0;
  v1 = STACK[0xECB0];
  v2 = *(_DWORD *)(STACK[0xECB0] + 16);
  v3 = *(_DWORD *)(STACK[0xECB0] + 20);
  v4 = *(_DWORD *)(STACK[0xECB0] + 8);
  v5 = *(_DWORD *)(STACK[0xECB0] + 12);
  STACK[0x6AB0] = STACK[0xECB0];
  v6 = (unsigned int *)STACK[0xD778];
  v7 = bswap32(*(_DWORD *)STACK[0xD778]);
  HIDWORD(v8) = v4;
  LODWORD(v8) = v4;
  LODWORD(v1) = ((v8 >> 27) ^ 0xFEB6DFAD)
              + *(_DWORD *)(v1 + 24)
              + ((2 * (v8 >> 27)) & 0xFD6DBF5A)
              + v7
              + 1700137708
              + (v3 ^ 0xB08718BE ^ ((v0 ^ 0xC7087005 ^ (v3 ^ v2) & v5)
                                  - ((2 * (v0 ^ 0xC7087005 ^ (v3 ^ v2) & v5)) & 0xEF1ED19A)
                                  + 2005887181));
  v9 = (v1 ^ 0xE7754E02) & (2 * (v1 & 0xF6758F00)) ^ v1 & 0xF6758F00;
  LODWORD(v0) = ((2 * (v1 ^ 0xA3374002)) ^ 0xAA859E04) & (v1 ^ 0xA3374002) ^ (2 * (v1 ^ 0xA3374002)) & 0x5542CF02;
  v10 = v0 ^ 0x55424102;
  LODWORD(v0) = (v0 ^ 0x4000D02) & (4 * v9) ^ v9;
  v11 = ((4 * v10) ^ 0x550B3C08) & v10 ^ (4 * v10) & 0x5542CF00;
  LODWORD(v0) = (v11 ^ 0x55020C02) & (16 * v0) ^ v0;
  v12 = ((16 * (v11 ^ 0x40C302)) ^ 0x542CF020) & (v11 ^ 0x40C302) ^ (16 * (v11 ^ 0x40C302)) & 0x5542CF00;
  LODWORD(v0) = v0 ^ 0x5542CF02 ^ (v12 ^ 0x5400C002) & ((_DWORD)v0 << 8);
  LODWORD(v0) = v1 ^ (2
                    * (((_DWORD)v0 << 16) & 0x55420000 ^ v0 ^ (((_DWORD)v0 << 16) ^ 0x4F020000) & (((v12 ^ 0x1420F02) << 8) & 0x55420000 ^ 0x15000000 ^ (((v12 ^ 0x1420F02) << 8) ^ 0x42CF0000) & (v12 ^ 0x1420F02))));
  HIDWORD(v8) = v5;
  LODWORD(v8) = v5;
  v13 = (v8 >> 2) - 583261429 - ((2 * (v8 >> 2)) & 0xBA784616);
  LODWORD(v1) = v13 ^ 0xDD3C230B;
  v14 = (v13 ^ 0xDD3C230B) & v4 | v2 & ~v4;
  v15 = bswap32(*(_DWORD *)(STACK[0xD778] + 4));
  *v6 = v7;
  v6[1] = v15;
  HIDWORD(v8) = v0 ^ 0x6F41104;
  LODWORD(v8) = v0 ^ 0xD0000000;
  v16 = v3
      + v15
      + (((v14 ^ 0xEF3334CA) + 1539669542) ^ ((v14 ^ 0x50A7B3B9) - 464389801) ^ ((v14 ^ 0xBF948773) + 191024541))
      - 1403309554
      + (v8 >> 27);
  v17 = (v16 ^ 0xFDB8FC12) & (2 * (v16 & 0xF930FC9B)) ^ v16 & 0xF930FC9B;
  v18 = ((2 * (v16 ^ 0x5DD84D06)) ^ 0x49D1633A) & (v16 ^ 0x5DD84D06) ^ (2 * (v16 ^ 0x5DD84D06)) & 0xA4E8B19C;
  v19 = v18 ^ 0xA4289085;
  v20 = (v18 ^ 0xE82019) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x93A2C674) & v19 ^ (4 * v19) & 0xA4E8B19C;
  v22 = (v21 ^ 0x80A08019) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x24483189)) ^ 0x4E8B19D0) & (v21 ^ 0x24483189) ^ (16 * (v21 ^ 0x24483189)) & 0xA4E8B190;
  v24 = v22 ^ 0xA4E8B19D ^ (v23 ^ 0x488110D) & (v22 << 8);
  v25 = v16 ^ (2
             * ((v24 << 16) & 0x24E80000 ^ v24 ^ ((v24 << 16) ^ 0x319D0000) & (((v23 ^ 0xA060A00D) << 8) & 0x24E80000 ^ 0x4480000 ^ (((v23 ^ 0xA060A00D) << 8) ^ 0xE8B10000) & (v23 ^ 0xA060A00D))));
  HIDWORD(v8) = v4;
  LODWORD(v8) = v4;
  v26 = (v8 >> 2) - 1914973098 - ((2 * (v8 >> 2)) & 0x1BB7A8AC);
  v27 = (v13 ^ v26) & 0xB4F7DC3C ^ 0x94E18034 ^ (v0 ^ 0x6203CD38) & (v13 ^ v26 ^ 0x50E7F75D);
  v28 = (v27 - ((2 * v27) & 0x7CBA571E) - 1101190257) ^ v13;
  v29 = bswap32(v6[2]);
  HIDWORD(v8) = v25 ^ 0x1F19FA1;
  LODWORD(v8) = v25 ^ 0xF0000000;
  v30 = v2
      + v29
      + (((v28 ^ 0x15EA28E8) + 672145324) ^ ((v28 ^ 0x6CA8A72D) + 1364365423) ^ ((v28 ^ 0x9E25D369) - 1545608149))
      - 88222398
      + (v8 >> 27);
  v31 = (v30 ^ 0xA086BB67) & (2 * (v30 & 0x85273867)) ^ v30 & 0x85273867;
  v32 = ((2 * (v30 ^ 0xA88EDB63)) ^ 0x5B53C608) & (v30 ^ 0xA88EDB63) ^ (2 * (v30 ^ 0xA88EDB63)) & 0x2DA9E304;
  v33 = v32 ^ 0x24A82104;
  v34 = (v32 ^ 0x901C200) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xB6A78C10) & v33 ^ (4 * v33) & 0x2DA9E304;
  v36 = v34 ^ 0x2DA9E304 ^ (v35 ^ 0x24A18000) & (16 * v34);
  v37 = (16 * (v35 ^ 0x9086304)) & 0x2DA9E300 ^ 0x2521C304 ^ ((16 * (v35 ^ 0x9086304)) ^ 0xDA9E3040) & (v35 ^ 0x9086304);
  v38 = (v36 << 8) & 0x2DA9E300 ^ v36 ^ ((v36 << 8) ^ 0xA9E30400) & v37;
  v39 = (v38 << 16) & 0x2DA90000 ^ v38 ^ ((v38 << 16) ^ 0x63040000) & ((v37 << 8) & 0x2DA90000 ^ 0x4080000 ^ ((v37 << 8) ^ 0xA9E30000) & v37);
  v40 = v30 ^ (2 * v39);
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0 ^ 0xD6F41104;
  v41 = v8 >> 2;
  v42 = (v25 ^ 0xF1F19FA1) & ((v41 - 1914973098 - ((2 * v41) & 0x1BB7A8AC)) ^ v26);
  v43 = ((v42 & 0x55BF6946 ^ 0x55896147) + (v42 & 0xAA4096B9) - 1) ^ v26;
  LODWORD(v0) = bswap32(v6[3]);
  v6[2] = v29;
  v6[3] = v0;
  HIDWORD(v8) = v40 ^ 0x736FE6F;
  LODWORD(v8) = v40 ^ 0xC8000000;
  v44 = v8 >> 27;
  LODWORD(v1) = v1
              + v0
              + (((v43 ^ 0xD5D3CB90) + 469495051) ^ ((v43 ^ 0xF93B190B) + 924008338) ^ ((v43 ^ 0xF4BA678B) + 982663442))
              + 1141368334;
  HIDWORD(v8) = v25 ^ 1;
  LODWORD(v8) = v25 ^ 0xF1F19FA0;
  v45 = v8 >> 2;
  v46 = v1 + v44;
  LODWORD(v1) = (((v40 ^ 0xCF36FE6F) & (v45 ^ v41) & 0xCD9FE021 ^ 0x9818021)
               + ((v40 ^ 0xCF36FE6F) & (v45 ^ v41) ^ 0xF41E74DC)
               - (((v40 ^ 0xCF36FE6F) & (v45 ^ v41) ^ 0xF41E74DC) & 0xCD9FE021)) ^ v41;
  v47 = bswap32(v6[4]);
  LODWORD(v0) = ((v1 ^ 0xCFB859BD) + 1572407497) ^ ((v1 ^ 0x39604773) - 1419700729) ^ ((v1 ^ 0xCF598A33) + 1566104391);
  HIDWORD(v8) = v46;
  LODWORD(v8) = v46;
  v48 = (v26 ^ 0x8DDBD456) + v47 + (v8 >> 27) - 1358842864;
  HIDWORD(v8) = v30 ^ ~(2 * v39);
  LODWORD(v8) = v40 ^ 0xCF36FE6C;
  LODWORD(v1) = v8 >> 2;
  LODWORD(v0) = v48 + v0;
  v49 = bswap32(v6[5]);
  v6[4] = v47;
  v6[5] = v49;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v50 = v49
      + v41
      + ((((v1 & v46 | v45 & ~v46) ^ 0x783985D0) + 521978814) ^ (((v1 & v46 | v45 & ~v46) ^ 0x7DBE6D2B) + 446376775) ^ (((v1 & v46 | v45 & ~v46) ^ 0x587E8FB) + 1654828695))
      - 211995861
      + (v8 >> 27);
  HIDWORD(v8) = v46;
  LODWORD(v8) = v46;
  v51 = v8 >> 2;
  v52 = bswap32(v6[7]);
  v53 = bswap32(v6[8]);
  v6[7] = v52;
  v6[8] = v53;
  v54 = bswap32(v6[10]);
  v55 = bswap32(v6[11]);
  LODWORD(STACK[0x6AA0]) = v55;
  v6[11] = v55;
  v56 = v6[12];
  LODWORD(STACK[0x6A90]) = v55;
  v57 = bswap32(v56);
  v58 = bswap32(v6[13]);
  v6[12] = v57;
  v6[13] = v58;
  v59 = v6[14];
  LODWORD(STACK[0x6A80]) = v58;
  v60 = bswap32(v59);
  v6[14] = v60;
  v61 = v6[15];
  LODWORD(STACK[0x6A70]) = v60;
  v62 = bswap32(v61);
  v63 = v6[2];
  v64 = v6[3];
  v66 = v6[4];
  v65 = v6[5];
  HIDWORD(v8) = v63 ^ v62 ^ v54 ^ v66;
  LODWORD(v8) = HIDWORD(v8);
  v67 = v8 >> 31;
  v69 = v6[7];
  v68 = v6[8];
  HIDWORD(v8) = v65 ^ v58 ^ v69 ^ v67;
  LODWORD(v8) = HIDWORD(v8);
  v70 = v8 >> 31;
  v71 = v6[6];
  LODWORD(STACK[0x6A40]) = v70;
  v72 = bswap32(v71);
  v6[5] = v70;
  v6[6] = v72;
  HIDWORD(v8) = v50;
  LODWORD(v8) = v50;
  v73 = v72
      + v45
      + (v8 >> 27)
      + ((((v51 & v0 | v1 & ~(_DWORD)v0) ^ 0x3C852367) - 853266029) ^ (((v51 & v0 | v1 & ~(_DWORD)v0) ^ 0x4DE99CFC)
                                                                     - 1136095734) ^ (((v51 & v0 | v1 & ~(_DWORD)v0) ^ 0x716CBF9B)
                                                                                    - 2134004369))
      + 1759602339;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v74 = v8 >> 2;
  HIDWORD(v8) = v73;
  LODWORD(v8) = v73;
  v75 = v52
      + v1
      + ((((v74 & v50 | v51 & ~v50) ^ 0xDDA583F3) + 1476981582) ^ (((v74 & v50 | v51 & ~v50) ^ 0xBEA67245) + 990577404) ^ (((v74 & v50 | v51 & ~v50) ^ 0x6303F1B6) - 424771319))
      + (v8 >> 27)
      - 724236070;
  HIDWORD(v8) = v50;
  LODWORD(v8) = v50;
  v76 = v8 >> 2;
  HIDWORD(v8) = v75;
  LODWORD(v8) = v75;
  v77 = v53
      + v51
      + (v8 >> 27)
      + ((((v76 & v73 | v74 & ~v73) ^ 0xA7B6104E) - 435473154) ^ (((v76 & v73 | v74 & ~v73) ^ 0x17DF51F) + 1086378413) ^ (((v76 & v73 | v74 & ~v73) ^ 0xA6CBE551) - 411647517))
      + 415585509;
  HIDWORD(v8) = v73;
  LODWORD(v8) = v73;
  v78 = v8 >> 2;
  v79 = v53 ^ v58;
  v80 = v6[1];
  HIDWORD(v8) = v79 ^ v63 ^ *v6;
  LODWORD(v8) = HIDWORD(v8);
  LODWORD(v0) = ((2 * (v8 >> 31)) & 0x3EFDE41E) + ((v8 >> 31) ^ 0x1F7EF20F);
  v81 = v0 - 528413199;
  *v6 = v0 - 528413199;
  LODWORD(STACK[0x6A50]) = v0 - 528413199;
  HIDWORD(v8) = v70 ^ v54 ^ v68 ^ (v0 - 528413199);
  LODWORD(v8) = HIDWORD(v8);
  v82 = v8 >> 31;
  v6[8] = v82;
  v83 = v6[9];
  LODWORD(STACK[0x6A60]) = v82;
  v84 = bswap32(v83);
  HIDWORD(v8) = v77;
  LODWORD(v8) = v77;
  v85 = v84
      + v74
      + (v8 >> 27)
      + ((((v78 & v75 | v76 & ~v75) ^ 0x76411B76) + 443747471) ^ (((v78 & v75 | v76 & ~v75) ^ 0xC3DDA4B5) - 1343245490) ^ (((v78 & v75 | v76 & ~v75) ^ 0xB59CBFC3) - 642865092))
      - 296722016;
  HIDWORD(v8) = v75;
  LODWORD(v8) = v75;
  v86 = v8 >> 2;
  v6[10] = v54;
  HIDWORD(v8) = v85;
  LODWORD(v8) = v85;
  v87 = v54
      + v76
      + (v8 >> 27)
      + ((((v86 & v77 | v78 & ~v77) ^ 0x3F136BD2) - 707924126) ^ (((v86 & v77 | v78 & ~v77) ^ 0x822ADABB) + 1760845321) ^ (((v86 & v77 | v78 & ~v77) ^ 0xBD39B169) + 1474770395))
      + 1873016037;
  HIDWORD(v8) = v77;
  LODWORD(v8) = v77;
  v88 = v8 >> 2;
  HIDWORD(v8) = v87;
  LODWORD(v8) = v87;
  v89 = LODWORD(STACK[0x6AA0])
      + v78
      + (v8 >> 27)
      + ((((v88 & v85 | v86 & ~v85) ^ 0x3256C4A8) - 287856341) ^ (((v88 & v85 | v86 & ~v85) ^ 0x48B69AA9) - 1808271572) ^ (((v88 & v85 | v86 & ~v85) ^ 0x7AE05E01) - 1503579260))
      + 2113997846;
  HIDWORD(v8) = v85;
  LODWORD(v8) = v85;
  v90 = v8 >> 2;
  HIDWORD(v8) = v89;
  LODWORD(v8) = v89;
  v91 = v57
      + v86
      + ((((v90 & v87 | v88 & ~v87) ^ 0xD7B9A7D7) - 1498748063) ^ (((v90 & v87 | v88 & ~v87) ^ 0x594D9DAD) + 677302555) ^ (((v90 & v87 | v88 & ~v87) ^ 0x8EF43A7A) - 1607986))
      + (v8 >> 27);
  HIDWORD(v8) = v87;
  LODWORD(v8) = v87;
  v92 = v8 >> 2;
  v91 -= 378589983;
  HIDWORD(v8) = v91;
  LODWORD(v8) = v91;
  v93 = v58
      + v88
      + (v8 >> 27)
      + ((((v92 & v89 | v90 & ~v89) ^ 0xF7B5DE09) + 1032792895) ^ (((v92 & v89 | v90 & ~v89) ^ 0xE021067E) + 706474826) ^ (((v92 & v89 | v90 & ~v89) ^ 0x1794D877) - 575787711))
      - 1874361247;
  HIDWORD(v8) = v89;
  LODWORD(v8) = v89;
  v94 = v8 >> 2;
  HIDWORD(v8) = v93;
  LODWORD(v8) = v93;
  v95 = v60
      + v90
      + (v8 >> 27)
      + ((((v94 & v91 | v92 & ~v91) ^ 0xB1F53FAB) + 1818082998) ^ (((v94 & v91 | v92 & ~v91) ^ 0x3F470F33) - 487616978) ^ (((v94 & v91 | v92 & ~v91) ^ 0x8EB23098) + 1394258311))
      + 2094659706;
  HIDWORD(v8) = v91;
  LODWORD(v8) = v91;
  v96 = v8 >> 2;
  v6[9] = v84;
  v6[15] = v62;
  HIDWORD(v8) = v95;
  LODWORD(v8) = v95;
  v97 = v62
      + v92
      + (v8 >> 27)
      + ((((v96 & v93 | v94 & ~v93) ^ 0x37976F3E) - 2013328990) ^ (((v96 & v93 | v94 & ~v93) ^ 0x8F74CE88) + 1058842648) ^ (((v96 & v93 | v94 & ~v93) ^ 0xB8E3A1B6) + 143378218))
      - 1441131783;
  HIDWORD(v8) = v93;
  LODWORD(v8) = v93;
  v98 = v8 >> 2;
  HIDWORD(v8) = v97;
  LODWORD(v8) = v97;
  LODWORD(v0) = v0 + 990083001 + v94 + (v98 & v95 | v96 & ~v95) + (v8 >> 27) + 4049;
  HIDWORD(v8) = v95;
  LODWORD(v8) = v95;
  v99 = v8 >> 2;
  HIDWORD(v8) = v84 ^ v60 ^ v64 ^ v80;
  LODWORD(v8) = HIDWORD(v8);
  v100 = v8 >> 31;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v101 = v8 >> 27;
  v102 = v100 + 1518500249 + v96 + (v99 & v97 | v98 & ~v97);
  HIDWORD(v8) = v97;
  LODWORD(v8) = v97;
  v103 = v8 >> 2;
  v104 = v102 + v101;
  v6[1] = v100;
  v6[2] = v67;
  HIDWORD(v8) = v102 + v101;
  LODWORD(v8) = v102 + v101;
  v105 = v67 + 1518500249 + v98 + (v103 & v0 | v99 & ~(_DWORD)v0) + (v8 >> 27);
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v106 = v8 >> 2;
  v107 = v6[6];
  HIDWORD(v8) = v100 ^ v66 ^ v57 ^ v107;
  LODWORD(v8) = HIDWORD(v8);
  v108 = v8 >> 31;
  LODWORD(v0) = v6[15];
  HIDWORD(v8) = v108 ^ v84 ^ v69 ^ v0;
  LODWORD(v8) = HIDWORD(v8);
  v109 = v8 >> 31;
  v110 = v6[9];
  HIDWORD(v8) = v109 ^ v57 ^ v67 ^ v6[10];
  LODWORD(v8) = HIDWORD(v8);
  v111 = v8 >> 31;
  v6[10] = v111;
  v112 = v6[11];
  v113 = v111;
  HIDWORD(v8) = v81 ^ v64 ^ v112 ^ v65;
  LODWORD(v8) = HIDWORD(v8);
  v114 = v8 >> 31;
  HIDWORD(v8) = v105;
  LODWORD(v8) = v105;
  v115 = v114 + 1518500249 + v99 + (v106 & v104 | v103 & ~v104) + (v8 >> 27);
  HIDWORD(v8) = v104;
  LODWORD(v8) = v104;
  v116 = v8 >> 2;
  v6[3] = v114;
  v6[4] = v108;
  HIDWORD(v8) = v115;
  LODWORD(v8) = v115;
  v117 = v108 + 1859775393 + v103 + (v116 ^ v106 ^ v105) + (v8 >> 27);
  HIDWORD(v8) = v105;
  LODWORD(v8) = v105;
  v118 = v8 >> 2;
  HIDWORD(v8) = v117;
  LODWORD(v8) = v117;
  v119 = v70 + 1859775393 + v106 + (v118 ^ v116 ^ v115) + (v8 >> 27);
  HIDWORD(v8) = v115;
  LODWORD(v8) = v115;
  v120 = v8 >> 2;
  LODWORD(v1) = STACK[0x6A70];
  HIDWORD(v8) = v107 ^ LODWORD(STACK[0x6A70]) ^ v68 ^ v114;
  LODWORD(v8) = HIDWORD(v8);
  v121 = v8 >> 31;
  HIDWORD(v8) = v119;
  LODWORD(v8) = v119;
  v122 = v121 + 1859775393 + v116 + (v120 ^ v118 ^ v117) + (v8 >> 27);
  HIDWORD(v8) = v117;
  LODWORD(v8) = v117;
  v123 = v8 >> 2;
  v6[6] = v121;
  v6[7] = v109;
  HIDWORD(v8) = v122;
  LODWORD(v8) = v122;
  v124 = v109 + 1859775393 + v118 + (v123 ^ v120 ^ v119) + (v8 >> 27);
  HIDWORD(v8) = v119;
  LODWORD(v8) = v119;
  v125 = v8 >> 2;
  HIDWORD(v8) = v124;
  LODWORD(v8) = v124;
  v126 = v82 + 1859775393 + v120 + (v125 ^ v123 ^ v122) + (v8 >> 27);
  HIDWORD(v8) = v122;
  LODWORD(v8) = v122;
  v127 = v8 >> 2;
  v128 = *v6;
  v129 = v6[1];
  HIDWORD(v8) = v121 ^ v112 ^ v129 ^ v110;
  LODWORD(v8) = HIDWORD(v8);
  v130 = v8 >> 31;
  v6[9] = v130;
  HIDWORD(v8) = v126;
  LODWORD(v8) = v126;
  v131 = v130 + 1859775393 + v123 + (v127 ^ v125 ^ v124) + (v8 >> 27);
  HIDWORD(v8) = v124;
  LODWORD(v8) = v124;
  v132 = v8 >> 2;
  HIDWORD(v8) = v131;
  LODWORD(v8) = v131;
  v133 = v111 + 1859775393 + v125 + (v132 ^ v127 ^ v126) + (v8 >> 27);
  HIDWORD(v8) = v126;
  LODWORD(v8) = v126;
  v134 = v8 >> 2;
  v135 = v6[2];
  HIDWORD(v8) = v82 ^ LODWORD(STACK[0x6A80]) ^ v6[3] ^ LODWORD(STACK[0x6A90]);
  LODWORD(v8) = HIDWORD(v8);
  v136 = v8 >> 31;
  HIDWORD(v8) = v133;
  LODWORD(v8) = v133;
  v137 = v136 + 1859775393 + v127 + (v134 ^ v132 ^ v131) + (v8 >> 27);
  HIDWORD(v8) = v131;
  LODWORD(v8) = v131;
  v138 = v8 >> 2;
  v139 = v1 ^ v6[4];
  v140 = v6[12];
  LODWORD(STACK[0x6AA0]) = v136;
  HIDWORD(v8) = v130 ^ v139 ^ v140;
  LODWORD(v8) = HIDWORD(v8);
  v141 = v8 >> 31;
  v6[11] = v136;
  v6[12] = v141;
  HIDWORD(v8) = v137;
  LODWORD(v8) = v137;
  v142 = v141 + 1859775393 + v132 + (v138 ^ v134 ^ v133) + (v8 >> 27);
  HIDWORD(v8) = v133;
  LODWORD(v8) = v133;
  v143 = v8 >> 2;
  v144 = v6[4];
  v145 = v141;
  HIDWORD(v8) = v111 ^ v0 ^ v6[5] ^ v6[13];
  LODWORD(v8) = HIDWORD(v8);
  v146 = v8 >> 31;
  v6[13] = v146;
  HIDWORD(v8) = v142;
  LODWORD(v8) = v142;
  LODWORD(v0) = v8 >> 27;
  v147 = v146 + 1859775393 + v134 + (v143 ^ v138 ^ v137);
  v148 = v6[6];
  HIDWORD(v8) = v129 ^ v6[7] ^ v6[15] ^ 0x888DB381 ^ v141;
  LODWORD(v8) = HIDWORD(v8);
  v149 = (((v8 >> 31) ^ 0x1A5702BC) - 1895755322) ^ (((v8 >> 31) ^ 0x31FE2445) - 1532479683) ^ (((v8 >> 31) ^ 0x3AB241FA)
                                                                                              - 1343991164);
  v150 = v6[9];
  v151 = v6[10];
  HIDWORD(v8) = (v149 + 2075298693) ^ v135 ^ v151 ^ v144;
  LODWORD(v8) = HIDWORD(v8);
  v152 = v8 >> 31;
  v154 = v6[13];
  v153 = v6[14];
  v155 = v6[7];
  LODWORD(v1) = STACK[0x6A40];
  HIDWORD(v8) = LODWORD(STACK[0x6A40]) ^ v154 ^ v155 ^ v152;
  LODWORD(v8) = HIDWORD(v8);
  v156 = v8 >> 31;
  v157 = v147 + v0;
  v6[5] = v156;
  LODWORD(STACK[0x6A90]) = v156;
  LODWORD(v0) = v6[13];
  v158 = LODWORD(STACK[0x6A50]) ^ v148 ^ v153;
  v159 = v6[8];
  HIDWORD(v8) = v137;
  LODWORD(v8) = v137;
  v160 = v8 >> 2;
  HIDWORD(v8) = v136 ^ v158;
  LODWORD(v8) = v136 ^ v158;
  v161 = v8 >> 31;
  HIDWORD(v8) = v157;
  LODWORD(v8) = v157;
  v162 = v161 + 1859775393 + v138 + (v160 ^ v143 ^ v142) + (v8 >> 27);
  HIDWORD(v8) = v142;
  LODWORD(v8) = v142;
  v163 = v8 >> 2;
  v6[15] = v149 + 2075298693;
  HIDWORD(v8) = v162;
  LODWORD(v8) = v162;
  v164 = v149 - 359896134 + v143 + (v163 ^ v160 ^ v157) + (v8 >> 27) + 2924;
  HIDWORD(v8) = v157;
  LODWORD(v8) = v157;
  v165 = v8 >> 2;
  v166 = v159 ^ v135 ^ v146;
  HIDWORD(v8) = v166 ^ v128;
  LODWORD(v8) = v166 ^ ~v128;
  v167 = (((v8 >> 31) ^ 0x8702A9D0) + 2092395852) ^ (((v8 >> 31) ^ 0x55C1437D) - 1368094745) ^ (((v8 >> 31) ^ 0xD2C3EAAC)
                                                                                              + 695610936);
  v168 = v167 + 71973733;
  *v6 = v167 + 71973733;
  HIDWORD(v8) = v164;
  LODWORD(v8) = v164;
  v169 = v167 + v160 + (v165 ^ v163 ^ v162) + 1931749126 + (v8 >> 27);
  v6[2] = v152;
  v170 = STACK[0x6A60];
  HIDWORD(v8) = v156 ^ v151 ^ LODWORD(STACK[0x6A60]) ^ v168;
  LODWORD(v8) = HIDWORD(v8);
  v171 = v8 >> 31;
  v6[8] = v171;
  v172 = v6[3];
  v173 = v152;
  v174 = v6[9];
  v175 = v171;
  v176 = *v6;
  v177 = v174 ^ v172 ^ v6[1];
  v6[14] = v161;
  HIDWORD(v8) = v162;
  LODWORD(v8) = v162;
  v178 = v8 >> 2;
  HIDWORD(v8) = v177 ^ v161;
  LODWORD(v8) = v177 ^ v161;
  v179 = v8 >> 31;
  HIDWORD(v8) = v169;
  LODWORD(v8) = v169;
  v180 = v179 + 1859775393 + v163 + (v178 ^ v165 ^ v164) + (v8 >> 27);
  HIDWORD(v8) = v164;
  LODWORD(v8) = v164;
  v181 = v8 >> 2;
  v182 = v152 + 1859775393 + v165 + (v181 ^ v178 ^ v169);
  HIDWORD(v8) = v180;
  LODWORD(v8) = v180;
  v183 = v8 >> 27;
  HIDWORD(v8) = v169;
  LODWORD(v8) = v169;
  v184 = v8 >> 2;
  v6[1] = v179;
  HIDWORD(v8) = v179 ^ v144 ^ v145 ^ v148;
  LODWORD(v8) = HIDWORD(v8);
  v185 = v8 >> 31;
  v186 = v182 + v183;
  v187 = v174 ^ v155;
  v188 = v6[14];
  HIDWORD(v8) = v185 ^ v187 ^ v6[15];
  LODWORD(v8) = HIDWORD(v8);
  v189 = v8 >> 31;
  v190 = v6[1];
  HIDWORD(v8) = v189 ^ v145 ^ v6[2] ^ v113;
  LODWORD(v8) = HIDWORD(v8);
  v191 = v8 >> 31;
  v6[10] = v191;
  v192 = v6[11];
  v193 = v191;
  HIDWORD(v8) = v192 ^ v172 ^ v1 ^ v168;
  LODWORD(v8) = HIDWORD(v8);
  v194 = v8 >> 31;
  HIDWORD(v8) = v186;
  LODWORD(v8) = v186;
  v195 = v194 + 1859775393 + v178 + (v184 ^ v181 ^ v180) + (v8 >> 27);
  HIDWORD(v8) = v180;
  LODWORD(v8) = v180;
  v196 = v8 >> 2;
  v6[3] = v194;
  v6[4] = v185;
  HIDWORD(v8) = v195;
  LODWORD(v8) = v195;
  v197 = v185 + 1859775393 + v181 + (v196 ^ v184 ^ v186) + (v8 >> 27);
  HIDWORD(v8) = v186;
  LODWORD(v8) = v186;
  v198 = v8 >> 2;
  HIDWORD(v8) = v197;
  LODWORD(v8) = v197;
  v199 = v8 >> 27;
  HIDWORD(v8) = v195;
  LODWORD(v8) = v195;
  v200 = v8 >> 2;
  v201 = v156 + 1859775393 + v184 + (v198 ^ v196 ^ v195) + v199;
  v203 = v6[14];
  v202 = v6[15];
  HIDWORD(v8) = v6[5] ^ v202 ^ v0 ^ v191;
  LODWORD(v8) = HIDWORD(v8);
  v204 = v8 >> 31;
  v6[13] = v204;
  LODWORD(v1) = v204;
  HIDWORD(v8) = v194 ^ v148 ^ v203 ^ v170;
  LODWORD(v8) = HIDWORD(v8);
  v205 = v8 >> 31;
  HIDWORD(v8) = v201;
  LODWORD(v8) = v201;
  v206 = v205 + 1859775393 + v196 + (v200 ^ v198 ^ v197) + (v8 >> 27);
  HIDWORD(v8) = v197;
  LODWORD(v8) = v197;
  v207 = v8 >> 2;
  v6[6] = v205;
  v6[7] = v189;
  HIDWORD(v8) = v206;
  LODWORD(v8) = v206;
  v208 = v189 + 1859775393 + v198 + (v207 ^ v200 ^ v201) + (v8 >> 27);
  HIDWORD(v8) = v201;
  LODWORD(v8) = v201;
  v209 = v8 >> 2;
  HIDWORD(v8) = v208;
  LODWORD(v8) = v208;
  v210 = v171 - 1894007588 + v200 + ((v206 | v209) & v207 | v206 & v209) + (v8 >> 27);
  HIDWORD(v8) = v206;
  LODWORD(v8) = v206;
  v211 = v8 >> 2;
  HIDWORD(v8) = v204 ^ v176 ^ v6[8] ^ v173;
  LODWORD(v8) = HIDWORD(v8);
  v212 = (((v8 >> 31) ^ 0xC2F6A0CC) + 231402947) ^ (((v8 >> 31) ^ 0xF9B9F51C) + 914733075) ^ (((v8 >> 31) ^ 0x3B4F55D0)
                                                                                            - 193783585);
  *v6 = v212 + 818131697;
  v213 = v212 + 818131697;
  HIDWORD(v8) = v205 ^ v192 ^ v6[1] ^ v150;
  LODWORD(v8) = HIDWORD(v8);
  v214 = v8 >> 31;
  v6[9] = v214;
  HIDWORD(v8) = v210;
  LODWORD(v8) = v210;
  v215 = v214 - 1894007588 + v207 + ((v208 | v211) & v209 | v208 & v211) + (v8 >> 27);
  HIDWORD(v8) = v208;
  LODWORD(v8) = v208;
  v216 = v8 >> 2;
  HIDWORD(v8) = v215;
  LODWORD(v8) = v215;
  v217 = v191 - 1894007588 + v209 + ((v210 | v216) & v211 | v210 & v216) + (v8 >> 27);
  HIDWORD(v8) = v210;
  LODWORD(v8) = v210;
  v218 = v8 >> 2;
  HIDWORD(v8) = v171 ^ v154 ^ v6[3] ^ LODWORD(STACK[0x6AA0]);
  LODWORD(v8) = HIDWORD(v8);
  v219 = v8 >> 31;
  HIDWORD(v8) = v217;
  LODWORD(v8) = v217;
  v220 = v219 - 1894007588 + v211 + ((v215 | v218) & v216 | v215 & v218) + (v8 >> 27);
  HIDWORD(v8) = v215;
  LODWORD(v8) = v215;
  v221 = v8 >> 2;
  v222 = v6[3];
  v223 = v219;
  HIDWORD(v8) = v6[4] ^ v188 ^ v6[12] ^ v214;
  LODWORD(v8) = HIDWORD(v8);
  v224 = v8 >> 31;
  v6[11] = v219;
  v6[12] = v224;
  HIDWORD(v8) = v220;
  LODWORD(v8) = v220;
  v225 = v224 - 1894007588 + v216 + ((v217 | v221) & v218 | v217 & v221) + (v8 >> 27);
  HIDWORD(v8) = v217;
  LODWORD(v8) = v217;
  v226 = v8 >> 2;
  HIDWORD(v8) = v225;
  LODWORD(v8) = v225;
  v227 = v204 - 1894007588 + v218 + ((v220 | v226) & v221 | v220 & v226) + (v8 >> 27);
  HIDWORD(v8) = v220;
  LODWORD(v8) = v220;
  v228 = v8 >> 2;
  HIDWORD(v8) = v219 ^ v188 ^ v6[6] ^ v176;
  LODWORD(v8) = HIDWORD(v8);
  v229 = v8 >> 31;
  HIDWORD(v8) = v227;
  LODWORD(v8) = v227;
  v230 = v229 - 1894007588 + v221 + ((v225 | v228) & v226 | v225 & v228) + (v8 >> 27);
  HIDWORD(v8) = v225;
  LODWORD(v8) = v225;
  v231 = v8 >> 2;
  v232 = v6[6];
  HIDWORD(v8) = v224 ^ v202 ^ v6[7] ^ v190;
  LODWORD(v8) = HIDWORD(v8);
  v233 = v8 >> 31;
  v6[14] = v229;
  v6[15] = v233;
  HIDWORD(v8) = v230;
  LODWORD(v8) = v230;
  v234 = v233 - 1894007588 + v226 + ((v227 | v231) & v228 | v227 & v231) + (v8 >> 27);
  HIDWORD(v8) = v227;
  LODWORD(v8) = v227;
  v235 = v8 >> 2;
  HIDWORD(v8) = v234;
  LODWORD(v8) = v234;
  v236 = v212 + v228 + ((v230 | v235) & v231 | v230 & v235) - 1075875891 + (v8 >> 27);
  HIDWORD(v8) = v230;
  LODWORD(v8) = v230;
  v237 = v8 >> 2;
  HIDWORD(v8) = v190 ^ v6[9] ^ v222 ^ v229;
  LODWORD(v8) = HIDWORD(v8);
  v238 = v8 >> 31;
  HIDWORD(v8) = v236;
  LODWORD(v8) = v236;
  v239 = v238 - 1894007588 + v231 + ((v234 | v237) & v235 | v234 & v237) + (v8 >> 27);
  HIDWORD(v8) = v234;
  LODWORD(v8) = v234;
  v240 = v8 >> 2;
  v241 = v6[9];
  LODWORD(v0) = STACK[0x6A90];
  HIDWORD(v8) = (v212 + 818131697) ^ v222 ^ v223 ^ LODWORD(STACK[0x6A90]);
  LODWORD(v8) = HIDWORD(v8);
  v242 = v6[4];
  v243 = v8 >> 31;
  HIDWORD(v8) = v173 ^ v6[10] ^ v242 ^ v233;
  LODWORD(v8) = HIDWORD(v8);
  v244 = v8 >> 31;
  v6[1] = v238;
  v6[2] = v244;
  v6[3] = v243;
  HIDWORD(v8) = v239;
  LODWORD(v8) = v239;
  v245 = v244 - 1894007588 + v235 + ((v236 | v240) & v237 | v236 & v240) + (v8 >> 27);
  HIDWORD(v8) = v236;
  LODWORD(v8) = v236;
  v246 = v8 >> 2;
  HIDWORD(v8) = v245;
  LODWORD(v8) = v245;
  v247 = v243 - 1894007588 + v237 + ((v239 | v246) & v240 | v239 & v246) + (v8 >> 27);
  HIDWORD(v8) = v239;
  LODWORD(v8) = v239;
  v248 = v8 >> 2;
  HIDWORD(v8) = v242 ^ v6[12] ^ v232 ^ v238;
  LODWORD(v8) = HIDWORD(v8);
  v249 = v8 >> 31;
  HIDWORD(v8) = v247;
  LODWORD(v8) = v247;
  v250 = v249 - 1894007588 + v240 + ((v245 | v248) & v246 | v245 & v248) + (v8 >> 27);
  HIDWORD(v8) = v245;
  LODWORD(v8) = v245;
  v251 = v8 >> 2;
  v252 = v6[15];
  HIDWORD(v8) = v232 ^ v6[14] ^ v175 ^ v243;
  LODWORD(v8) = HIDWORD(v8);
  v253 = v6[12];
  v254 = v0 ^ v6[13];
  v255 = v6[7];
  LODWORD(v0) = v8 >> 31;
  HIDWORD(v8) = v254 ^ v255 ^ v244;
  LODWORD(v8) = HIDWORD(v8);
  v256 = v8 >> 31;
  v6[4] = v249;
  v6[5] = v256;
  v6[6] = v0;
  HIDWORD(v8) = v250;
  LODWORD(v8) = v250;
  v257 = v256 - 1894007588 + v246 + ((v247 | v251) & v248 | v247 & v251) + (v8 >> 27);
  HIDWORD(v8) = v247;
  LODWORD(v8) = v247;
  v258 = v8 >> 2;
  HIDWORD(v8) = v257;
  LODWORD(v8) = v257;
  v259 = v0 - 1894007588 + v248 + ((v250 | v258) & v251 | v250 & v258) + (v8 >> 27);
  HIDWORD(v8) = v250;
  LODWORD(v8) = v250;
  v260 = v8 >> 2;
  HIDWORD(v8) = v255 ^ v252 ^ v241 ^ v249;
  LODWORD(v8) = HIDWORD(v8);
  v261 = v8 >> 31;
  HIDWORD(v8) = v259;
  LODWORD(v8) = v259;
  v262 = v261 - 1894007588 + v251 + ((v257 | v260) & v258 | v257 & v260) + (v8 >> 27);
  HIDWORD(v8) = v257;
  LODWORD(v8) = v257;
  v263 = v8 >> 2;
  v264 = *v6;
  HIDWORD(v8) = v175 ^ *v6 ^ v193 ^ v256;
  LODWORD(v8) = HIDWORD(v8);
  v265 = v8 >> 31;
  HIDWORD(v8) = v262;
  LODWORD(v8) = v262;
  v266 = v8 >> 27;
  v6[7] = v261;
  v6[8] = v265;
  HIDWORD(v8) = v259;
  LODWORD(v8) = v259;
  v267 = v8 >> 2;
  v268 = v265 - 1894007588 + v258 + ((v259 | v263) & v260 | v259 & v263) + v266;
  v269 = v6[1];
  v270 = v6[2];
  HIDWORD(v8) = v193 ^ v270 ^ v253 ^ v261;
  LODWORD(v8) = HIDWORD(v8);
  v271 = v8 >> 31;
  v272 = v6[15];
  v273 = v6[4];
  HIDWORD(v8) = v1 ^ v6[5] ^ v272 ^ v271;
  LODWORD(v8) = HIDWORD(v8);
  v274 = v8 >> 31;
  v275 = v274 ^ v270 ^ v213;
  v277 = v6[7];
  v276 = v6[8];
  HIDWORD(v8) = v275 ^ v276;
  LODWORD(v8) = v275 ^ ~v276;
  v278 = (((v8 >> 31) ^ 0xB0708252) - 636020037) ^ (((v8 >> 31) ^ 0xA50917C4) - 814837971) ^ (((v8 >> 31) ^ 0x15799597)
                                                                                            + 2132675968);
  *v6 = v278 - 1785174250;
  v279 = v6[1];
  v280 = v278 - 1785174250;
  v281 = v241 ^ v279;
  v282 = v6[11];
  v283 = v271;
  HIDWORD(v8) = v281 ^ v282 ^ v0;
  LODWORD(v8) = HIDWORD(v8);
  v284 = v8 >> 31;
  v6[9] = v284;
  v6[10] = v271;
  HIDWORD(v8) = v268;
  LODWORD(v8) = v268;
  v285 = v284 - 1894007588 + v260 + ((v262 | v267) & v263 | v262 & v267) + (v8 >> 27);
  HIDWORD(v8) = v262;
  LODWORD(v8) = v262;
  v286 = v8 >> 2;
  HIDWORD(v8) = v285;
  LODWORD(v8) = v285;
  v287 = v271 - 1894007588 + v263 + ((v268 | v286) & v267 | v268 & v286) + (v8 >> 27);
  HIDWORD(v8) = v268;
  LODWORD(v8) = v268;
  v288 = v8 >> 2;
  HIDWORD(v8) = v282 ^ v6[3] ^ v1 ^ v265;
  LODWORD(v8) = HIDWORD(v8);
  v289 = v8 >> 31;
  HIDWORD(v8) = v287;
  LODWORD(v8) = v287;
  v290 = v289 - 1894007588 + v267 + ((v285 | v288) & v286 | v285 & v288) + (v8 >> 27);
  HIDWORD(v8) = v285;
  LODWORD(v8) = v285;
  v291 = v8 >> 2;
  v292 = v6[14];
  LODWORD(v1) = v274;
  HIDWORD(v8) = v253 ^ v6[4] ^ v292 ^ v284;
  LODWORD(v8) = HIDWORD(v8);
  v293 = v8 >> 31;
  HIDWORD(v8) = v290;
  LODWORD(v8) = v290;
  v294 = v8 >> 27;
  v6[11] = v289;
  v6[12] = v293;
  v6[13] = v274;
  v295 = v293 - 899497514 + v286 + (v291 ^ v288 ^ v287);
  HIDWORD(v8) = v287;
  LODWORD(v8) = v287;
  v296 = v8 >> 2;
  v297 = v295 + v294;
  HIDWORD(v8) = v297;
  LODWORD(v8) = v297;
  v298 = v274 - 899497514 + v288 + (v296 ^ v291 ^ v290) + (v8 >> 27);
  HIDWORD(v8) = v290;
  LODWORD(v8) = v290;
  v299 = v8 >> 2;
  v300 = v6[6] ^ v292 ^ v289;
  HIDWORD(v8) = v300 ^ v264;
  LODWORD(v8) = v300 ^ v213;
  v301 = v8 >> 31;
  HIDWORD(v8) = v298;
  LODWORD(v8) = v298;
  v302 = v301 - 899497514 + v291 + (v299 ^ v296 ^ v297) + (v8 >> 27);
  HIDWORD(v8) = v297;
  LODWORD(v8) = v297;
  v303 = v8 >> 2;
  HIDWORD(v8) = v293 ^ v279 ^ v272 ^ v6[7];
  LODWORD(v8) = HIDWORD(v8);
  v304 = v8 >> 31;
  v6[14] = v301;
  v6[15] = v304;
  HIDWORD(v8) = v302;
  LODWORD(v8) = v302;
  v305 = v304 - 899497514 + v296 + (v303 ^ v299 ^ v298) + (v8 >> 27);
  HIDWORD(v8) = v298;
  LODWORD(v8) = v298;
  v306 = v8 >> 2;
  HIDWORD(v8) = v305;
  LODWORD(v8) = v305;
  v307 = v278 + v299 + (v306 ^ v303 ^ v302) + 1610295532 + (v8 >> 27);
  HIDWORD(v8) = v302;
  LODWORD(v8) = v302;
  v308 = v8 >> 2;
  v309 = v6[9];
  v310 = v6[10];
  HIDWORD(v8) = v309 ^ v243 ^ v269 ^ v301;
  LODWORD(v8) = HIDWORD(v8);
  v311 = v8 >> 31;
  v6[1] = v311;
  HIDWORD(v8) = v307;
  LODWORD(v8) = v307;
  v312 = v311 - 899497514 + v303 + (v308 ^ v306 ^ v305) + (v8 >> 27);
  HIDWORD(v8) = v305;
  LODWORD(v8) = v305;
  v313 = v8 >> 2;
  v314 = v6[9];
  v315 = v311;
  HIDWORD(v8) = v310 ^ v273 ^ v6[2] ^ v304;
  LODWORD(v8) = HIDWORD(v8);
  v316 = v8 >> 31;
  HIDWORD(v8) = v312;
  LODWORD(v8) = v312;
  v317 = v316 - 899497514 + v306 + (v313 ^ v308 ^ v307) + (v8 >> 27);
  HIDWORD(v8) = v307;
  LODWORD(v8) = v307;
  v318 = v8 >> 2;
  v319 = v6[11];
  v320 = v6[12];
  HIDWORD(v8) = v311 ^ v273 ^ v320 ^ v0;
  LODWORD(v8) = HIDWORD(v8);
  v321 = v6[5];
  v322 = v8 >> 31;
  HIDWORD(v8) = v319 ^ v243 ^ v321 ^ v280;
  LODWORD(v8) = HIDWORD(v8);
  v323 = v8 >> 31;
  HIDWORD(v8) = v317;
  LODWORD(v8) = v317;
  v324 = v8 >> 27;
  v6[2] = v316;
  v6[3] = v323;
  v6[4] = v322;
  v325 = v323 - 899497514 + v308 + (v318 ^ v313 ^ v312);
  HIDWORD(v8) = v312;
  LODWORD(v8) = v312;
  v326 = v8 >> 2;
  v327 = v325 + v324;
  HIDWORD(v8) = v327;
  LODWORD(v8) = v327;
  v328 = v322 - 899497514 + v313 + (v326 ^ v318 ^ v317) + (v8 >> 27);
  HIDWORD(v8) = v317;
  LODWORD(v8) = v317;
  v329 = v8 >> 2;
  v331 = v6[12];
  v330 = v6[13];
  HIDWORD(v8) = v316 ^ v321 ^ v330 ^ v277;
  LODWORD(v8) = HIDWORD(v8);
  v332 = v8 >> 31;
  HIDWORD(v8) = v328;
  LODWORD(v8) = v328;
  v333 = v332 - 899497514 + v318 + (v329 ^ v326 ^ v327) + (v8 >> 27);
  HIDWORD(v8) = v327;
  LODWORD(v8) = v327;
  v334 = v8 >> 2;
  v335 = v6[14];
  v336 = v309 ^ v277;
  v337 = v6[15];
  HIDWORD(v8) = v322 ^ v336 ^ v337;
  LODWORD(v8) = HIDWORD(v8);
  v338 = v8 >> 31;
  v6[7] = v338;
  v339 = v6[8];
  v340 = v338;
  HIDWORD(v8) = v323 ^ v0 ^ v335 ^ v339;
  LODWORD(v8) = HIDWORD(v8);
  v341 = v8 >> 31;
  HIDWORD(v8) = v333;
  LODWORD(v8) = v333;
  LODWORD(v0) = v341 - 899497514 + v326 + (v334 ^ v329 ^ v328) + (v8 >> 27);
  HIDWORD(v8) = v328;
  LODWORD(v8) = v328;
  v342 = v8 >> 2;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v343 = v338 - 899497514 + v329 + (v342 ^ v334 ^ v333) + (v8 >> 27);
  HIDWORD(v8) = v333;
  LODWORD(v8) = v333;
  v344 = v8 >> 2;
  v345 = *v6;
  HIDWORD(v8) = v332 ^ v310 ^ v339 ^ *v6;
  LODWORD(v8) = HIDWORD(v8);
  v346 = v8 >> 31;
  HIDWORD(v8) = v343;
  LODWORD(v8) = v343;
  v347 = v346 - 899497514 + v334 + (v344 ^ v342 ^ v0) + (v8 >> 27);
  v348 = v319 ^ v6[1];
  v6[5] = v332;
  v6[6] = v341;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  LODWORD(v0) = v8 >> 2;
  HIDWORD(v8) = v341 ^ v348 ^ v314;
  LODWORD(v8) = HIDWORD(v8);
  v349 = v8 >> 31;
  HIDWORD(v8) = v347;
  LODWORD(v8) = v347;
  v350 = v349 - 899497514 + v342 + (v0 ^ v344 ^ v343) + (v8 >> 27);
  HIDWORD(v8) = v343;
  LODWORD(v8) = v343;
  v351 = v8 >> 2;
  HIDWORD(v8) = v338 ^ v320 ^ v6[2] ^ v283;
  LODWORD(v8) = HIDWORD(v8);
  v352 = v8 >> 31;
  v353 = v352 - 899497514 + v344 + (v351 ^ v0 ^ v347);
  HIDWORD(v8) = v350;
  LODWORD(v8) = v350;
  v354 = v8 >> 27;
  HIDWORD(v8) = v347;
  LODWORD(v8) = v347;
  v355 = v8 >> 2;
  v356 = v353 + v354;
  HIDWORD(v8) = v346 ^ v330 ^ v6[3] ^ v319;
  LODWORD(v8) = HIDWORD(v8);
  v357 = v8 >> 31;
  HIDWORD(v8) = v356;
  LODWORD(v8) = v356;
  LODWORD(v0) = v357 - 899497514 + v0 + (v355 ^ v351 ^ v350) + (v8 >> 27);
  v6[8] = v346;
  v6[9] = v349;
  HIDWORD(v8) = v350;
  LODWORD(v8) = v350;
  v358 = v8 >> 2;
  HIDWORD(v8) = v349 ^ v335 ^ v322 ^ v331;
  LODWORD(v8) = HIDWORD(v8);
  v359 = v8 >> 31;
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  v360 = v359 - 899497514 + v351 + (v358 ^ v355 ^ v356) + (v8 >> 27);
  v361 = v6[6];
  HIDWORD(v8) = v356;
  LODWORD(v8) = v356;
  v362 = v8 >> 2;
  HIDWORD(v8) = v352 ^ v337 ^ v6[5] ^ v1;
  LODWORD(v8) = HIDWORD(v8);
  LODWORD(v1) = v8 >> 31;
  v6[13] = v1;
  HIDWORD(v8) = v360;
  LODWORD(v8) = v360;
  LODWORD(v1) = v1 - 899497514 + v355 + (v362 ^ v358 ^ v0) + (v8 >> 27);
  HIDWORD(v8) = v0;
  LODWORD(v8) = v0;
  LODWORD(v0) = (v8 >> 2) - 894865053 - ((2 * (v8 >> 2)) & 0x9552E2C6);
  v6[10] = v352;
  v6[11] = v357;
  HIDWORD(v8) = v335 ^ v361 ^ v357 ^ v345;
  LODWORD(v8) = v335 ^ v361 ^ v357 ^ v280;
  v363 = v8 >> 31;
  HIDWORD(v8) = v1;
  LODWORD(v8) = v1;
  v364 = v363 - 899497514 + v358 + (v0 ^ v362 ^ (v360 - 894865053 - ((2 * v360) & 0x9552E2C6))) + (v8 >> 27);
  HIDWORD(v8) = v360;
  LODWORD(v8) = v360;
  v365 = (v8 >> 2) - 1189830238 - ((2 * (v8 >> 2)) & 0x72294344);
  v366 = (v1 - 1189830238 - ((2 * v1) & 0x72294344)) ^ v365;
  v367 = v340 ^ v315 ^ v6[15];
  v6[12] = v359;
  HIDWORD(v8) = v367 ^ v359;
  LODWORD(v8) = v367 ^ v359;
  v368 = v8 >> 31;
  v6[14] = v363;
  v6[15] = v368;
  HIDWORD(v8) = v1;
  LODWORD(v8) = v1;
  v369 = v8 >> 2;
  v370 = (_DWORD *)STACK[0x6AB0];
  HIDWORD(v8) = v364;
  LODWORD(v8) = v364;
  v371 = v364 + *(_DWORD *)(STACK[0x6AB0] + 12);
  v370[2] = v370[2] - 899497514 + v368 + v362 + (v8 >> 27) + ((v366 - 894865053 - ((2 * v366) & 0x9552E2C6)) ^ v0);
  v370[3] = v371;
  v372 = v370[4] + (v369 ^ 0x55E7FDCF) + ((2 * v369) & 0xABCFFB9E) - 1441267151;
  v373 = v370[5]
       - 1189830238
       + (((v365 ^ 0x52FAF46C) - 1392178284) ^ ((v365 ^ 0xFB49AD0A) + 79057654) ^ ((v365 ^ 0x10A7F8C4) - 279443652));
  v370[4] = v372;
  v370[5] = v373;
  v370[6] = v370[6]
          - 894865053
          + (((v0 ^ 0xE7138C92) + 418149230) ^ ((v0 ^ 0x8BFD4BAD) + 1946334291) ^ ((v0 ^ 0xA647B65C) + 1505249700));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 9456)))();
}

uint64_t sub_100B08384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, int a6@<W8>)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v10 = (v9 + v8)
      + ((a6 - v7) ^ 0xF7DE9B3FFFFCFD8FLL)
      + ((2 * (a6 - v7)) & 0x1FFF9FB1ELL)
      + 0x5BE77DEAD7FF2424;
  v11 = (v7 ^ 0xFDD3F7FFF76BCD65) + 0x2CE231F33A06188CLL + ((2 * v7) & 0x1EED79ACALL);
  v12 = (v10 ^ 0x2451BDA42A1BA2F8) & (2 * (v10 & 0x52803A2FALL)) ^ v10 & 0x52803A2FALL;
  v13 = ((2 * (v10 ^ 0x2451BDAC6A1FA708)) ^ 0x1090A48284380BE4) & (v10 ^ 0x2451BDAC6A1FA708) ^ (2 * (v10 ^ 0x2451BDAC6A1FA708)) & 0x88685B79421C05F2;
  v14 = v13 ^ 0x8828490942040412;
  v15 = (v13 ^ 0x30001801E0) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x21A16DE5087017C8) & v14 ^ (4 * v14) & 0x88685B79421C05F0;
  v17 = (v16 ^ 0x204961001005C0) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x88481218420C0032)) ^ 0x8685B79421C05F20) & (v16 ^ 0x88481218420C0032) ^ (16 * (v16 ^ 0x88481218420C0032)) & 0x88685B79421C05F0;
  v19 = (v18 ^ 0x8000131000000500) & (v17 << 8) ^ v17;
  v20 = (((v18 ^ 0x8684869421C00D2) << 8) ^ 0x685B79421C05F200) & (v18 ^ 0x8684869421C00D2) ^ ((v18 ^ 0x8684869421C00D2) << 8) & 0x88685B79421C0500;
  v21 = v10 ^ (2 * (v20 & 0x4218001000000000 ^ v19 ^ (v20 ^ 0x848594000040000) & (v19 << 16)));
  v22 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v22 + 8 * (v9 + 5564)))(a1, a2, a3, a4, v21 ^ 0x5E4626AD63C47DEALL, v6 + 0x160ADC64934A84D4, a5, v11);
}

uint64_t sub_100B085FC()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 4983;
  v2 = STACK[0xA2D8];
  *(_DWORD *)(v2 + 96) = STACK[0x750C];
  *(_QWORD *)(v2 + 744) = STACK[0x75B8];
  *(_BYTE *)(v2 + 764) = STACK[0xAE0F];
  *(_QWORD *)(v2 + 768) = STACK[0xA420];
  *(_QWORD *)(v2 + 752) = STACK[0x7BC0];
  *(_DWORD *)(v2 + 760) = STACK[0x83BC];
  *(_QWORD *)(v2 + 832) = STACK[0xAA00];
  *(_DWORD *)(v2 + 840) = STACK[0xB960];
  *(_DWORD *)(v2 + 784) = STACK[0xA6F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((STACK[0xC938] == 0x55058F428EADAA34) * (v0 - 2256)) ^ v1))
                            - 4))();
}

uint64_t sub_100B086D0()
{
  char v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((*(unsigned __int8 *)(v1 - 0x55058F428EADA763) | v0 & 1) == 0)
                                     * (((STACK[0x6508] - 4178) | 0x1052) + 6724)) ^ (STACK[0x6508] + 2162))))();
}

uint64_t sub_100B08730()
{
  int v0;
  _BYTE *v1;

  *v1 = 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 2162)))();
}

uint64_t sub_100B0874C()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((25289 * ((*(unsigned __int8 *)(v2 - 0x55058F428EADA762) | v1 & 2) == 0)) ^ (v0 + 5077)))
                            - 4))();
}

uint64_t sub_100B08798()
{
  _BYTE *v0;
  int v1;

  *v0 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))();
}

uint64_t sub_100B087B0@<X0>(uint64_t a1@<X8>)
{
  int v1;

  *(_DWORD *)(a1 + 352) = STACK[0x8074];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 8315)) - ((271 * (v1 ^ 0x107Bu)) ^ 0xDC7)))();
}

uint64_t sub_100B087FC()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;

  v0 = (STACK[0x6508] - 4214) | 0x2D38;
  v1 = (STACK[0x6508] - 1950497935) & 0x74427CFB;
  v2 = STACK[0x6508] + 7362;
  v3 = STACK[0xA018];
  v4 = STACK[0xA628];
  *(_DWORD *)(v4 + 96) = *(_DWORD *)(STACK[0xA018] - 0x28623712C9340D56);
  *(_QWORD *)(v4 + 400) = STACK[0x6B78];
  *(_DWORD *)(v4 + 408) = -1926392713;
  *(_DWORD *)(v4 + 352) = *(_DWORD *)(v3 - 0x28623712C9340CDELL);
  *(_QWORD *)(v4 + 832) = STACK[0xCBA8];
  *(_DWORD *)(v4 + 840) = STACK[0x80BC];
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(unsigned __int8 *)(STACK[0x7750] - 0x55058F428EADA763) != (v0 & 0xC7))
                                * (v1 ^ 0x2FCB)) ^ v2)))();
}

uint64_t sub_100B088F4()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = *(_DWORD *)(v0 + 784) & 0xFFFFFFFE ^ (v1 + 972515724);
  *(_DWORD *)(v0 + 784) = ((v2 & 0xD4EB0790) - (v2 | 0xD4EB0791)) & 0xFFFFFFFE ^ 0x12E36EAA;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v1))();
}

uint64_t sub_100B0894C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * ((3390
                                              * (((*(_BYTE *)(v1 - 0x55058F428EADA762) == 0) ^ (a1 - 112)) & 1)) ^ a1)))(1733415904);
}

uint64_t sub_100B089B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;

  v2 = (a1 + 2066755096) & 0x84CFA777 ^ 0x8A95A287 ^ *(_DWORD *)(v1 + 784) & 0xFFFFFFFD;
  v3 = (v2 - ((2 * v2) & 0x50CF3158) + 677877932) ^ 0x58237EC0;
  *(_DWORD *)(v1 + 784) = (((2 * v3) & 0x79E0CD7A) - v3 + 1125095744) ^ 0xB9DEFBD8;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B08A4C(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = STACK[0x6508] + 4566;
  *(_DWORD *)STACK[0xE648] += ((STACK[0x6508] + 1715474263) & 0x99BFF377) - 4932;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 12))(a1, a2, LODWORD(STACK[0xE67C]));
}

uint64_t sub_100B08AB4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 14103)) - 12))();
}

uint64_t sub_100B08ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;

  v10 = (unint64_t)v7 << 7;
  v11 = (_QWORD *)(STACK[0xA088] + v10);
  STACK[0xA670] = (unint64_t)v11;
  v12 = (_QWORD *)(*(_QWORD *)(v9 + 8) + v10);
  STACK[0xCEF8] = (unint64_t)v12;
  v12[2] = v11[2];
  *v12 = *v11;
  v12[1] = v11[1];
  v12[4] = v11[4];
  v12[5] = v11[5];
  v13 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * ((int)v8 - 9595 + (int)v8 + 15097)))(a1, a2, a3, a4, 0xF26FC0784BC7DF35, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100B08BA8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((315 * (**(_QWORD **)(STACK[0x7D88] - 0x1006922FAD1859E0) != 0)) ^ (v0 + 1592)))
                            - 4))();
}

uint64_t sub_100B08BEC()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B08C00()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((20286 * (**(_QWORD **)(v1 - 0x1006922FAD1859D0) != 0)) ^ (v0 + 7722)))
                            - 8))();
}

uint64_t sub_100B08C44()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B08C58()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((28647 * (**(_QWORD **)(v1 - 0x1006922FAD1859C0) != 0)) ^ (v0 + 8398)))
                            - 12))();
}

uint64_t sub_100B08C9C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B08CB0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10527)) - 12))();
}

uint64_t sub_100B08CD8()
{
  int v0;
  int v1;

  STACK[0xC768] -= 672;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 == -1926392729) * ((v0 + 16523) ^ 0x526B)) ^ (v0 + 2356))))();
}

uint64_t sub_100B08D2C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 16523) ^ 0x107ELL)))();
}

uint64_t sub_100B08D7C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 19015)) - 4))();
}

uint64_t sub_100B08DA0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((a1 < (((v1 ^ v2) * v7) ^ (v4 + 2785))) * (v5 + v1 - v3 - 4 + 144)) ^ (v1 + v6))))();
}

uint64_t sub_100B08DE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((126 * (((a1 - v1) | (v1 - a1)) >> 31)) ^ (v2 + (v1 ^ 0x8D2D8415) + (v1 ^ 0x8D2D8415) + 2276)))
                            - 4))();
}

uint64_t sub_100B08E38()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6474)) - 4))();
}

uint64_t sub_100B08E64@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((28167 * (a1 <= (int)((v1 - 6474) ^ 0x8D2DCFF2 ^ (v1 + 8738)))) ^ v1))
                            - 4))();
}

uint64_t sub_100B08EBC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B08F10()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((25 * (v1 < (int)((((v0 - 10067) | 0x100) ^ 0xFFFFFEFE) + 905 * (v0 ^ 0x3805)))) ^ v0)))();
}

uint64_t sub_100B08F58@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((((a1 - 4523) | 0x1074) + 7935) ^ (a1 + 1534104866) & 0xA48F5F3D) * (v1 == 128)) ^ a1)))();
}

uint64_t sub_100B08FB8()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 == 301 * (v0 ^ 0x11A3) - 3958) * (v0 ^ 0x38D5)) ^ v0)))();
}

uint64_t sub_100B09008@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  LODWORD(STACK[0xDF24]) = a1;
  LODWORD(STACK[0x90B0]) = v2 + 24;
  LODWORD(STACK[0x9744]) = v2 + 44;
  LODWORD(STACK[0x8CEC]) = v2 + 268834966;
  v3 = LODWORD(STACK[0xC014]) + v2 + 268834966;
  v4 = (v3 ^ 0xEFFDD713) & (2 * (v3 & 0xEFF9E79A)) ^ v3 & 0xEFF9E79A;
  v5 = ((2 * (v3 ^ 0x292D9733)) ^ 0x8DA8E152) & (v3 ^ 0x292D9733) ^ (2 * (v3 ^ 0x292D9733)) & 0xC6D470A8;
  v6 = v5 ^ 0x425410A9;
  v7 = (v5 ^ 0x84902001) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x1B51C2A4) & v6 ^ (4 * v6) & 0xC6D470A8;
  v9 = (v8 ^ 0x25040A0) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0xC4843009)) ^ 0x6D470A90) & (v8 ^ 0xC4843009) ^ (16 * (v8 ^ 0xC4843009)) & 0xC6D470A0;
  v11 = v9 ^ 0xC6D470A9 ^ (v10 ^ 0x44440029) & (v9 << 8);
  v12 = v3 ^ (2
            * ((v11 << 16) & 0x46D40000 ^ v11 ^ ((v11 << 16) ^ 0x70A90000) & (((v10 ^ 0x82907029) << 8) & 0xC6D40000 ^ 0x2840000 ^ (((v10 ^ 0x82907029) << 8) ^ 0xD4700000) & (v10 ^ 0x82907029))));
  LODWORD(STACK[0x862C]) = v12 ^ 0x6E7C92AF;
  LODWORD(STACK[0x974C]) = v2;
  v13 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v12 ^ 0xE35106C8);
  STACK[0x7408] = v13;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((126 * (v13 != 0)) ^ (v1 + 20660))))();
}

uint64_t sub_100B09228()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 21183)) - 4))();
}

uint64_t sub_100B09240()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((94
                                                             * (((((v0 - 3958) | v1) - (v0 - 3958)) | (v1 - (v0 - 3958)) & ~(v1 ^ (v0 - 3958))) >> 31)) ^ ((15 * (v0 ^ 0x10DB)) ^ 0x5E89 | (v0 - 3958))))
                                          - 12))(5121);
}

uint64_t sub_100B092C8()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v0 + 1619) ^ 0x7610 ^ (5 * (v0 ^ 0xBD7))) * (v1 == 128)) ^ v0))
                            - 4))();
}

uint64_t sub_100B0931C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2024))
                            - ((v0 - 8462853) & 0xB68F7CED ^ 0xB60E64A5)))();
}

uint64_t sub_100B09370()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((2107 * (v0 ^ 0xA21)) ^ 0x3BF9) * (v1 == 256)) ^ v0))
                            - 4))();
}

uint64_t sub_100B093C0()
{
  int v0;

  return ((uint64_t (*)(void))(3054396581
                            - (v0 - 1240573302)
                            + *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1B8F))))();
}

uint64_t sub_100B09410@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x9F04]) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((unint64_t)&STACK[0x9F04] > STACK[0x7408] + 4)
                                * (((a1 + 4522) | 0x801) ^ 0x2A22)) ^ (a1 + 14974))))();
}

uint64_t sub_100B09468@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  a1[4] = 0;
  a1[5] = STACK[0x9F05];
  a1[6] = STACK[0x9F06];
  a1[7] = STACK[0x9F07];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 + 6571)) - ((a2 + 6571) ^ 0x2A29)))();
}

uint64_t sub_100B094C8(_BYTE *a1)
{
  int v1;

  a1[7] = 0;
  a1[6] = STACK[0x9F06];
  a1[5] = STACK[0x9F05];
  a1[4] = STACK[0x9F04];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 1949682218) & 0x7435AB2A ^ 0xB2ALL)))();
}

uint64_t sub_100B09530()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x33B1)) - 4))();
}

uint64_t sub_100B095AC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((25
                                          * (*(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340CDELL) + 1926392731 >= ((STACK[0x6508] + 5872) ^ LODWORD(STACK[0x319C]) ^ 0x823))) ^ LODWORD(STACK[0x31A0])))
                            - 12))();
}

uint64_t sub_100B09618@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v1 == -1926392733) ^ (a1 - 101)) & 1)
                                * (((a1 - 3526) | 0xA) - 6542)) ^ a1)))();
}

uint64_t sub_100B09674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v6 | 0x40) + 6415))
                                                                                                - 12))(2959752912, 216, 1335218521, 12646, 5750, a6, 26365);
}

uint64_t sub_100B09730()
{
  int v0;
  unint64_t v1;
  __n128 v2;

  STACK[0x9A88] = STACK[0x7408] + 24;
  v1 = STACK[0xC768];
  STACK[0x72C8] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v1 + 256;
  LODWORD(STACK[0xA4C0]) = 0;
  v2.n128_u64[0] = 0x9292929292929292;
  v2.n128_u64[1] = 0x9292929292929292;
  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v2);
}

uint64_t sub_100B09798(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  __n128 *v6;

  v6 = (__n128 *)(v1 + v2);
  *v6 = a1;
  v6[1] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 == 224) * ((v5 + v3) ^ v4)) ^ v5)) - 12))();
}

uint64_t sub_100B097CC()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0xB8D8];
  STACK[0x93C8] = STACK[0xB8D8] - 0x55058F428EADA8F4;
  STACK[0xCE68] = v1 - 0x55058F428EADAA04;
  v2 = *(_DWORD *)(v1 - 0x55058F428EADAA00);
  if (v2 < 0)
    v2 = -v2;
  LODWORD(STACK[0x8C0C]) = 4 * v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((22936
                                          * (((v0 - 110) ^ 0x29 ^ (4 * v2 > ((v0 - 2158) | 0x1050u)
                                                                                           - 3958)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100B09898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;
  char *v4;

  STACK[0x98E0] = v2;
  v4 = (char *)&STACK[0x10000] + a1;
  STACK[0xB408] = (unint64_t)v4;
  STACK[0xAB58] = (unint64_t)(v4 + 0x6A91553144A2483ELL);
  STACK[0xA9B8] = (unint64_t)(v4 + 0x1097C91CF9244AC0);
  STACK[0xC768] = ((v3 - 5083) ^ 0x2A54) + v1;
  STACK[0xCF60] = 0;
  STACK[0xA528] = 0x1097C91CF9244A80;
  STACK[0x9C08] = 0;
  STACK[0xA698] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12))();
}

uint64_t sub_100B0996C()
{
  int v0;
  __int16 v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (84 * (v1 > 255))))
                            - (((v0 - 6660) | 0x47u)
                             - 257)
                            + 4206))();
}

uint64_t sub_100B099D0()
{
  int v0;
  unsigned __int16 v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((11 * ((((((_WORD)v0 + 27528) & 0x9376) - 4086) & 0xFFFE) != v1)) ^ v0)))();
}

uint64_t sub_100B09A14()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 262)))();
}

uint64_t sub_100B09A38()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6890)) - 8))();
}

uint64_t sub_100B09A5C()
{
  int v0;
  int v1;
  __int16 v2;
  int v3;
  BOOL v4;
  int v5;

  LODWORD(STACK[0x8B10]) = v3;
  LODWORD(STACK[0x90B4]) = v1;
  if (v2)
    v4 = STACK[0x6D18] == 0;
  else
    v4 = 1;
  v5 = !v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 * (431 * (v0 ^ 0x1061) - 9197)) ^ (v0 + 7473)))
                            - 12))();
}

uint64_t sub_100B09AC4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((a1 - 2 * v2 + (((v1 ^ 0x1061) + 9890) ^ 0xFFFFD957) < 0xFFFFFFF0)
                                          * ((431 * (v1 ^ 0x1061)) ^ 0x5ADA)) ^ v1 ^ 0x33E9))
                            - 8))();
}

uint64_t sub_100B09B30()
{
  __int16 v0;
  __int16 v1;
  int v2;
  uint64_t v3;

  LOWORD(STACK[0xDF2A]) = v0 - v1 - 18;
  v3 = ((uint64_t (*)(_QWORD))STACK[0x5510])((unsigned __int16)(v0 - v1 - 18));
  STACK[0xCF60] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v3 != 0) * (v2 ^ 0x5D9A)) ^ v2))
                            - ((v2 - 5699) ^ 0x1072)))();
}

uint64_t sub_100B09BA4(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v2;
  int v3;
  unsigned int v4;

  v4 = v2;
  if ((v2 & 0xFFFE) == 0)
    v4 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * ((26
                                                                                   * (v4 < ((708
                                                                                           * ((unsigned __int16)v3 ^ 0x26A0)
                                                                                           - 17692) & 0xFFFCu))) | v3 ^ 0x339C))
                                                                     - ((v3 ^ 0x339Cu)
                                                                      - 1199)
                                                                     + 4210))(a1, a2, 4294958271, 13289);
}

uint64_t sub_100B09C14@<X0>(unsigned int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((30 * (((((v1 ^ 0x696CF85A) - 1768729864) ^ (a1 < 0x20)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_100B09C5C()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 13433)) - 4))(9466, 6429, (__n128)0);
}

uint64_t sub_100B09C90(int a1, uint64_t a2, __n128 a3)
{
  int v3;
  int v4;
  __n128 *v5;
  uint64_t v6;
  unsigned int v7;

  v5[-1] = a3;
  *v5 = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 == 0) * a1) ^ v4)) - 7 * (v3 ^ v7) + a2))();
}

uint64_t sub_100B09CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (7 * (v1 != a1))))
                            - (((v2 - 1309) | 0x13B) ^ ((v2 - 5523) | 0x2011u) ^ 0x36A4)))();
}

uint64_t sub_100B09D18@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((73 * ((((v1 ^ 0x696CA841) - 1768738268 + 43 * (v1 ^ 0x155D)) & a1) != 0)) ^ v1))
                            - 4))();
}

uint64_t sub_100B09D68()
{
  unsigned int v0;

  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * (int)(v0 ^ 0x696CBA40 ^ (9051 * (v0 < 0xEBD00165))))
                                         - 4))((__n128)0);
}

uint64_t sub_100B09DD0(double a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  *(double *)(v6 + v2) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v3 == v2) * v5) ^ v1))
                            - ((v1 - 3878) ^ v4)))();
}

uint64_t sub_100B09E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((((v2 - 5371) | 0x1032) + 7947) ^ (v2 + 472770176) & 0xE3D227DF)
                                               * (v1 == a1)) ^ v2))
                            - 4))();
}

uint64_t sub_100B09E54()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 18978)))();
}

uint64_t sub_100B09E68@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v6 + v3) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v3 + 1 == a3) * ((v4 ^ a2) + a1)) ^ v5)))();
}

uint64_t sub_100B09E94()
{
  __int16 v0;
  __int16 v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  LOWORD(STACK[0xADEA]) = v0 - v1 + 13542;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x5510])((unsigned __int16)(((v3 + 794) ^ 0xD946) + v0 - v1));
  STACK[0xA698] = v4;
  if (v2)
    v5 = v4 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((32416 * v6) ^ v3)) - (v3 ^ 0x26AEu) + 1321))();
}

uint64_t sub_100B09F18(unint64_t a1)
{
  int v1;
  int v2;
  char v3;

  STACK[0xD4C8] = a1;
  STACK[0xA750] = (v3 & 0x28) + 0x3C76C777F737B7E8 + (v2 ^ (v1 + 13839) ^ 0xFFBB3999DFFFC59DLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x176A)) - 12))();
}

uint64_t sub_100B0A188()
{
  int v0;

  v0 = 1443 * (STACK[0x2ED0] ^ 0x93);
  STACK[0xD4D0] = STACK[0xD4C8] + STACK[0xA750] - 0x3C320111D737B6C5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0xCF60] != 0) * (v0 ^ 0x2D1B)) ^ LODWORD(STACK[0x2AE0])))
                            - 4))();
}

uint64_t sub_100B0A210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v9 = STACK[0x2ED0];
  v10 = ((STACK[0x2ED0] + 15032) ^ *(unsigned __int16 *)(v7 + 134) ^ 0xB3F331FEF9ECD8B6)
      + ((2 * *(unsigned __int16 *)(v7 + 134)) & 0x1C7CALL)
      + 0x7EADFFBBDF7FFE80;
  v11 = (v10 ^ 0xDC9A8AB5ACB31D53) & (2 * (v10 & (v8 + 3467))) ^ v10 & (v8 + 3467);
  v12 = ((2 * (v10 ^ 0xDC9A8AB5ACB12C45)) ^ 0x22088901144463BCLL) & (v10 ^ 0xDC9A8AB5ACB12C45) ^ (2 * (v10 ^ 0xDC9A8AB5ACB12C45)) & 0x11C444F08A2231DELL;
  v13 = v12 ^ 0x104444108A221042;
  v14 = (v12 ^ 0x104444108A22209CLL) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x471113C22888C778) & v13 ^ (4 * v13) & 0x11C444F08A2231DCLL;
  v16 = (v15 ^ 0x10000C008000150) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x10C4443082223086)) ^ 0x1C444F08A2231DE0) & (v15 ^ 0x10C4443082223086) ^ (16 * (v15 ^ 0x10C4443082223086)) & 0x11C444F08A2231D0;
  v18 = v10 ^ (2
             * (((((v17 ^ 0x18000F00800201ELL) << 8) ^ 0xC444F08A2231DE00) & (v17 ^ 0x18000F00800201ELL) & 0x20000200000000 | 0xD000000000) ^ (v17 ^ 0x1044440082221100) & (v16 << 8) ^ v16 ^ (((v17 ^ 0x18000F00800201ELL) << 8) & 0x11C444F08A223100 ^ 0x44408002200000 ^ (((v17 ^ 0x18000F00800201ELL) << 8) ^ 0xC444F08A2231DE00) & (v17 ^ 0x18000F00800201ELL)) & (((v17 ^ 0x1044440082221100) & (v16 << 8) ^ v16) << 16))) ^ 0x3F310F9D6D54C28BLL;
  v19 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x2ED0]) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(v9 ^ 0x16A9)))(a1, a2, a3, a4, v18, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100B0A468()
{
  int v0;
  _BYTE *v1;

  *v1 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x6D18] > (unint64_t)(v1 + 1))
                                          * (((v0 - 9200) | 0x2400) - 5514)) ^ v0))
                            - 4))();
}

uint64_t sub_100B0A500@<X0>(int a1@<W5>, unsigned int a2@<W6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;

  v13 = (v7 ^ 0x5F6BFBDD7FFFDDF6) - 0x5F6BFBDD7FFFDDF6 + ((v7 << (v8 - 39)) & (a3 + 4009));
  v14 = (((a4 + v13) ^ *(_DWORD *)(*v11 + (*v12 & a2))) & 0x7FFFFFFF) * a1;
  v15 = (v14 ^ HIWORD(v14)) * a1;
  *(_BYTE *)(v9 + v13) = *(_BYTE *)(v6 + (v15 >> 24)) ^ *(_BYTE *)(a4 + v13) ^ *(_BYTE *)((v15 >> 24) + v4 + 2) ^ *(_BYTE *)(v5 + (v15 >> 24)) ^ v15 ^ (BYTE3(v15) * v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6062 * (v7 != 15)) ^ v8)) - 4))();
}

uint64_t sub_100B0A5DC@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;

  v12 = (char *)(a3 + v7 - 1);
  v13 = *v12;
  LODWORD(v12) = ((*(_DWORD *)(*v9 + (*v10 & (a2 + (v3 ^ 0x2E64u) - 892))) ^ v12) & 0x7FFFFFFF) * a1;
  v14 = (v12 ^ (v12 >> 16)) * a1;
  *(_BYTE *)(v11 + v7) = *(_BYTE *)(v6 + (v14 >> 24)) ^ v13 ^ *(_BYTE *)((v14 >> 24) + v4 + 2) ^ *(_BYTE *)(v5 + (v14 >> 24)) ^ v14 ^ (BYTE3(v14) * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((16 * (v7 == 1)) | (32 * (v7 == 1))) ^ v3)) - 4))();
}

uint64_t sub_100B0A670()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x2A1B ^ (v0 + 13888))) - 8))();
}

uint64_t sub_100B0A6BC()
{
  char v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((STACK[0x6508] + 2560 + (STACK[0x3CB4] & 0xA5FC76BF) + 514) * (v0 & 1)) ^ (STACK[0x6508] + 1242))))();
}

uint64_t sub_100B0A6F8(uint64_t a1, uint64_t a2)
{
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                + 8
                                                                                * (((18
                                                                                   * (((v2 + 77612575) | 0x30148408) ^ 0x34B4E4C4)
                                                                                   - 57)
                                                                                  * (LOWORD(STACK[0xADEA]) != 13543)) ^ v2)))(a1, a2, 58572, 4294960333, 4294962124);
}

uint64_t sub_100B0A760()
{
  unsigned int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)((12192 * (v0 <= ((v0 - 884263463) ^ 0x246A93F3))) ^ (v0 - 884263444))))();
}

uint64_t sub_100B0A7EC(uint64_t a1, uint64_t a2, unsigned int a3, __int16 a4, __int16 a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  unsigned __int16 v10;
  __int16 v11;
  _BOOL4 v12;

  *(_BYTE *)(v8 + v9) = *(_BYTE *)(v7 + v9) ^ *(_BYTE *)(v6 + v9);
  v11 = v9 + v5 + a5;
  v12 = v10 > (unsigned __int16)(v9 + a4);
  if (v10 < a3 != (unsigned __int16)((unsigned __int16)(v11 - 1601) >> 2) > 0x6CCu)
    v12 = v10 < a3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((255 * v12) ^ v5)))();
}

uint64_t sub_100B0A858()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v0 ^ 0x434 ^ (6587 * ((v0 + 1186715097) < 0x68D3C5F8))))
                            - 4))();
}

uint64_t sub_100B0A8D8@<X0>(__int16 a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  BOOL v11;

  v7 = STACK[0x6AD8];
  STACK[0x72A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) + v4;
  STACK[0x81C8] = v3;
  LOWORD(STACK[0x93C6]) = a1;
  LODWORD(STACK[0x7BCC]) = v2;
  v8 = STACK[0xC768];
  v9 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xB0E0] = (unint64_t)v9;
  STACK[0xA6D8] = (unint64_t)(v9 + 112);
  STACK[0xC768] = v8 + 144;
  v11 = v5 == 0x1097C91CF9244A80 || v3 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((15489 * (((29 * ((v1 + 99) & 0x77 ^ 0xA5)) ^ v11) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_100B0A9B8()
{
  int v0;
  unsigned int v1;

  LODWORD(STACK[0xC67C]) = (v1 | ((v1 < 0x34E7) << 16)) + 1046145860;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v0 ^ 0x470 ^ (37 * ((((v1 - v0) | (v0 - v1)) & 0x8000) == 0))))
                            - (((v0 - 13427) | 0x1002u)
                             + 6162)
                            + 10368))();
}

uint64_t sub_100B0AA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  if (v7 == 2)
    v10 = 284974821;
  else
    v10 = 284974833;
  v11 = v7 == 3;
  v12 = 284974801;
  if (!v11)
    v12 = v10;
  LODWORD(STACK[0x97AC]) = v12;
  LODWORD(STACK[0xB188]) = (v9 - 1046159403) / ((v8 + 284964457) ^ v12) + 2017966115;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 12))(a1, a2, a3, a4, a5, a6, a7, 806657363);
}

uint64_t sub_100B0AADC()
{
  char v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((STACK[0x6508] ^ 0x36CF) + 8743) ^ LODWORD(STACK[0x3FDC])) * ((v0 & 1) == 0)) ^ (STACK[0x6508] + 1235))))();
}

uint64_t sub_100B0AB18()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((122 * ((((v0 + 327128518) & 0xEC8053F6 ^ (STACK[0xCF60] == 0)) & 1) == 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100B0AB70()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B0AB9C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((24052 * (STACK[0xA698] != 0)) ^ (v0 + 10251))) - 12))();
}

uint64_t sub_100B0ABDC()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B0ABF4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((16722 * (STACK[0xA528] != 0x1097C91CF9244A80)) | (v0 + 2962)))
                            - 12))();
}

uint64_t sub_100B0AC44()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B0AC70()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8643 * (STACK[0x9C08] != 0)) ^ (v0 + 1514))) - 8))();
}

uint64_t sub_100B0ACA4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B0ACBC()
{
  int v0;
  int v1;

  STACK[0xC768] -= 96;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((14301 * (v1 == ((v0 - 2030207351) & 0x79027994 ^ 0x8D2D9CF3))) ^ (v0 - 2018)))
                            - 8))();
}

uint64_t sub_100B0AD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v7 + 1275583158) & 0xB3F83FB7 ^ 0x998) + v7)) - 4))(a1, a2, a3, a4, a5, a6, a7, LODWORD(STACK[0x8C0C]));
}

uint64_t sub_100B0ADA4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int v12;

  v8 = STACK[0x6AD8];
  STACK[0xADD0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) + a2;
  STACK[0x6E30] = v6;
  v9 = STACK[0xC768];
  v10 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0x7438] = (unint64_t)v10;
  STACK[0xC768] = v9 + 1920;
  STACK[0x9860] = v5;
  STACK[0x8778] = v3;
  v10[35] = 64;
  v10[36] = v10 + 3;
  v10[102] = 130;
  v10[103] = v10 + 37;
  v10[104] = 1;
  v10[105] = &STACK[0x8444];
  v10[171] = 130;
  v10[172] = v10 + 106;
  v10[238] = 130;
  v10[239] = v10 + 173;
  if (v5 | v7)
    v11 = a1 == ((v2 - 4748) ^ 0x337B) - 8973;
  else
    v11 = 1;
  v12 = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * v12) ^ v2)))();
}

uint64_t sub_100B0AE90(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((a2 - 8903) | 0x1030) + 1744) * ((v2 | v3) != 0)) ^ a2)))();
}

uint64_t sub_100B0AEC8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  _DWORD *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  STACK[0x6AA0] = v11;
  STACK[0x6A20] = v9;
  STACK[0x6A60] = a8;
  STACK[0x6A50] = v10 + 280;
  STACK[0x6A70] = v10 + 816;
  STACK[0x6A80] = v10 + 832;
  STACK[0x6A40] = v10 + 1368;
  STACK[0x6A30] = v10 + 1904;
  *v8 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 + 6958)) - 12))(23108);
}

uint64_t sub_100B0AF30@<X0>(int a1@<W0>, int a2@<W8>)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(*(_QWORD *)(v6 + 824) + 4 * v3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v4 + a2) ^ v2) + v3 >= *(unsigned int *)(v6 + 816)) * a1) ^ v5))
                            - 12))();
}

uint64_t sub_100B0AF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;

  STACK[0x6AB0] = v5;
  LODWORD(STACK[0x9268]) = v4 << (v3 + 79);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ (106 * (v2 != 0))))
                                                            - ((v3 - 16412) ^ 0x69BLL)))(43, a2, 4294952683);
}

uint64_t sub_100B0AFFC()
{
  int v0;
  unint64_t v1;

  STACK[0xC948] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((99 * ((((v0 + 6974) ^ (STACK[0x9860] == 0)) & 1) == 0)) ^ (v0 + 17172)))
                            - 4))();
}

uint64_t sub_100B0B070@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 | (2 * (v1 > v2)) | ((v1 > v2) << 6)))
                            - (((v3 ^ 0x3BC2u) + a1) ^ 0x3663)))();
}

uint64_t sub_100B0B0A8(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 11792)) - 8))(a1, STACK[0x6A60]);
}

uint64_t sub_100B0B0D4(uint64_t a1, uint64_t a2)
{
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * (v2 + 16323)))(a1, a2, 0);
}

uint64_t sub_100B0B0F0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((93 * (v0 == 24)) ^ (v1 + 14104))) - 4))();
}

uint64_t sub_100B0B158@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)(((a1 != (v2 ^ 0x5030)) * ((v2 - 1115297201) & a2 ^ 0x107F)) ^ v2)))();
}

uint64_t sub_100B0B1A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * v6) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v5 ^ 0x2FA8 ^ (4398 * (((a5 - v5) | (unint64_t)(v5 - a5)) >> 63))))
                            - ((14 * (v5 ^ 0x12D) + 786) | 0x66)
                            + 5094))();
}

uint64_t sub_100B0B20C@<X0>(char a1@<W8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((32498 * (((v2 > v3) ^ ((v1 ^ 0x80) + a1)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_100B0B244(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a3 + 9303)) - 4))();
}

uint64_t sub_100B0B268(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a3 + 21001))
                                                  - ((a3 + 14358) | 0x502u)
                                                  + 19850))(a1, 0);
}

uint64_t sub_100B0B2A8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((47 * (v3 != 24)) ^ v4))
                                                  - ((v4 + 5361) ^ a3 ^ 0x34C5)))(a1, (*(unsigned __int8 *)(STACK[0x6AA0] + v5) << v3) | a2);
}

uint64_t sub_100B0B2F4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v3 == ((a3 - 21631) | 0x5079u) - 24185)
                                          * ((a3 - 677287041) & 0x285E7F8F ^ 0x4C61)) ^ a3))
                            - 4))();
}

uint64_t sub_100B0B354(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * v5) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a4 ^ (31368 * (v4 == 0)))) - 4))();
}

uint64_t sub_100B0B3B0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((LODWORD(STACK[0x8B10]) != 0) * ((LODWORD(STACK[0x3FDC]) ^ 0x551D) - 2066)) ^ LODWORD(STACK[0x3FDC]))) - 8))(a1, a2, 32467057, 1826308093, 6679, 118, -12678, 29270);
}

uint64_t sub_100B0B43C@<X0>(unsigned int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 - 811) ^ (71 * (a1 < 8))))
                            - ((10916 * ((v1 - 811) ^ 0x1ABB) - 81642321) & 0x4DD7E7E)
                            + 4202))();
}

uint64_t sub_100B0B4E4@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = (a1 - 1) < 0x10000 && (v1 ^ 0xAAB7) != (unsigned __int16)(a1 - 1);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2792 * v3) ^ v1)))();
}

uint64_t sub_100B0B524()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v7;

  v4 = v3 - 0x6A91553144A2481ELL;
  v5 = 0x1097C91CF9244A80 - v2 + v4;
  v7 = (unint64_t)(v4 - v0) < 0x20 || v5 < 0x20;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((v7 ^ (v1 - 1)) & 1) * (((v1 - 1624995409) & 0x60DB639A) - 17025)) ^ v1)))();
}

uint64_t sub_100B0B5C0@<X0>(unsigned int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v1 - 21219 + ((v1 - 17040) | 0x1074)) * (a1 < 0x20)) ^ v1))
                            - 8))();
}

uint64_t sub_100B0B610(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  unsigned int v4;

  a4.n128_u16[0] = -28014;
  a4.n128_u8[2] = -110;
  a4.n128_u8[3] = -110;
  a4.n128_u8[4] = -110;
  a4.n128_u8[5] = -110;
  a4.n128_u8[6] = -110;
  a4.n128_u8[7] = -110;
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8]
                                                                                       + 8
                                                                                       * (int)((45030
                                                                                              * (v4 <= 0x6A6B10C9)) ^ (v4 + 1748022736)))
                                                                           - 8))(a1, 25933, a2, a3, a4);
}

uint64_t sub_100B0B66C(double a1, double a2, int8x8_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;

  *(int8x8_t *)(v10 + ((unsigned __int16)v13 & 0xFFF8)) = veor_s8(veor_s8(*(int8x8_t *)(v8 + ((unsigned __int16)v13 & 0xFFF8)), *(int8x8_t *)(v9 + ((unsigned __int16)v13 & 0xFFF8))), a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 == v13) * (((v11 ^ a5) * v14) ^ a8)) ^ v11)) - 8))();
}

uint64_t sub_100B0B6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v6 ^ 0x56C1 ^ (v6 + 1587307264) & 0xA1639FE5) * (a6 == v7)) ^ v6))
                                                                                       - 12))(a1, a2, a3, a4, a5, 118);
}

uint64_t sub_100B0B708()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v1 - 11192) | 0x102C) - 5102 == v0) * (v1 ^ 0x2FA8)) ^ v1))
                            - 8))();
}

uint64_t sub_100B0B74C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  *(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * v4) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ 0xD2)) - (((v3 ^ 0xD2u) - 7098) ^ 0x13E6)))();
}

uint64_t sub_100B0B784(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  *(_DWORD *)(STACK[0x6AB0] + 284) = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a4))();
}

uint64_t sub_100B0B7AC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((9436 * (v1 > ((v0 - 54) ^ 0x3818) - 11254)) ^ v0)))();
}

uint64_t sub_100B0B7E4(uint64_t a1, int a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * (v2 - 1)) != 0)
                                * (((a2 - 4042) | 0x1000) ^ 0x13EE)) ^ a2)))();
}

uint64_t sub_100B0B830()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v1 - 21560) | 0x4404) - 19791) * (v0 == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_100B0B874(uint64_t a1, int a2)
{
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * v3) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4))();
}

uint64_t sub_100B0B8A4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  *(_DWORD *)(STACK[0x6AB0] + 284) = v3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v2))(a1, a2, 4294956042);
}

uint64_t sub_100B0B8E0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((9924 * (v4 > ((v3 - 979014701) & 0x3A5AABFE) + a3)) ^ v3)))();
}

uint64_t sub_100B0B920(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((759
                                * (*(_DWORD *)(*(_QWORD *)(STACK[0x6AB0] + 288) + 4 * (v4 - 1)) == ((2 * v3) ^ 0x3BE)
                                                                                                 + a3)) ^ v3)))();
}

uint64_t sub_100B0B964()
{
  int v0;
  int v1;
  int v2;

  if (v2 <= 0)
    v1 = v0 + 2681 - v1 - 13935;
  *(_DWORD *)(STACK[0x6AB0] + 284) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B0B994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  int v11;

  v7 = (unint64_t *)STACK[0x7438];
  STACK[0xC648] = STACK[0x7438];
  v8 = STACK[0x6A30];
  *v7 = STACK[0x6A40];
  v7[1] = v8;
  v9 = STACK[0xC768];
  v10 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x8650] = (unint64_t)(v10 + 520);
  STACK[0xC768] = v9 + 544;
  v11 = *(_DWORD *)(v5 + 4);
  if (v11 < 0)
    v11 = -v11;
  LODWORD(STACK[0xCCA0]) = v11 << ((v6 - 46) ^ 0x44);
  STACK[0x8C60] = *v7;
  STACK[0x78B8] = v8;
  *((_QWORD *)v10 + 65) = 130;
  *((_QWORD *)v10 + 66) = v10;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6)
                                                                                               - 4))(a1, **(unsigned int **)(v5 + 8), 1, a4, a5, 46, 1);
}

uint64_t sub_100B0BA54@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int v12;

  if ((a2 & (v6 ^ v5 ^ a5)) != 0)
    v8 = v7;
  else
    v8 = 0;
  v9 = v8 + (a2 >> 1);
  v10 = a3 == 31;
  v11 = (a3 + 1);
  v12 = !v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v12 * a4) | v6)) - 4))(a1, v9, v11);
}

uint64_t sub_100B0BA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  *(_DWORD *)(v2 + 16) = ((v3 - 1696) & 0xFFFFA9D9) - v4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8
                                                                        * (v3 ^ 0x37F8 ^ (21397
                                                                                        * ((v3 ^ 0x39FC733Eu) > 0xE5CB3107))))
                                                            - 4))(a1, a2, 4294952683);
}

uint64_t sub_100B0BB10()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ v1 ^ 0x1072)))();
}

uint64_t sub_100B0BB30(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ 0x5082))
                                                            - (((v2 + 2510) | 4u) ^ 0x1072)))(a1, a2, 4294952683);
}

uint64_t sub_100B0BB70()
{
  uint64_t (*v0)(void);
  int v1;
  uint64_t v2;

  **(_DWORD **)(v2 + 8) = v1;
  *(_DWORD *)(v2 + 4) = 1;
  return v0();
}

uint64_t sub_100B0BB90()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] + 21900;
  v1 = STACK[0x6508] - 1234;
  v2 = STACK[0x6AD8];
  STACK[0xC3B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 + v1 - 22222)) - 12))();
}

uint64_t sub_100B0BBF4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0x7798] = (STACK[0x4A98] ^ 0xFFFFFFFFFFFFAC40) + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 958));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 1646)) - 8))();
}

uint64_t sub_100B0BC44()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;

  v1 = STACK[0x6508] + 86613823;
  v2 = STACK[0x6508] - 3474;
  v3 = STACK[0x6AD8];
  STACK[0x9278] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((v1 ^ 0x529B4EB) + v2)) - 4))(43, v0);
}

uint64_t sub_100B0BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  v7 = STACK[0x6508];
  v8 = STACK[0x6508] + 1401;
  LODWORD(STACK[0xA2F8]) = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((v7 - 1059) ^ 0x2DA0)))(97, a2, a3, a4, a5, v8 - 5623 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v7 - 1059)), STACK[0x8C60], v5);
}

uint64_t sub_100B0BCF4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((STACK[0x5100] ^ 0x31F) * (v0 >= 0)) ^ (STACK[0x6508] + 9352)))
                            - 8))();
}

uint64_t sub_100B0BD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6919)) - 4))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1077))+ 5 * ((STACK[0x6508] - 1077) ^ 0x822)- 5627, v5, v6);
}

uint64_t sub_100B0BD84()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 16954) ^ 0x5821)))();
}

uint64_t sub_100B0BDA8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((*(_DWORD *)(a7 + 4) > *(_DWORD *)(a8 + 4)) * a1) ^ v8))
                            - (((v8 - 20009) | 0x5108u)
                             + (unint64_t)((v8 - 22455) | 0x1004u))
                            + 27514))();
}

uint64_t sub_100B0BE04()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (2 * (v0 >= v2))))
                            - (v1 ^ 0x4B7E ^ (v1 - 9699) ^ 0x255FLL)))();
}

uint64_t sub_100B0BE40()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B0BE74()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((30914 * (v1 - 1 > (int)(((v0 + 1995498955) & 0x890EF57F) - 4215))) ^ v0)))();
}

uint64_t sub_100B0BEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;

  v10 = 4 * v9;
  v11 = *(_DWORD *)(*(_QWORD *)(a8 + 8) + v10);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((31308
                                * (((v11 ^ ~(v8 + 863903699)) & *(_DWORD *)(*(_QWORD *)(a7 + 8) + v10) | (*(_DWORD *)(*(_QWORD *)(a7 + 8) + v10) | ~v11) & (v11 - *(_DWORD *)(*(_QWORD *)(a7 + 8) + v10))) >= 0)) ^ v8)))();
}

uint64_t sub_100B0BF18()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((14 * (((v1 - 7) | 1) ^ 0x3408)) ^ v3 ^ (349 * (((v1 - 7) | 1) ^ 0x3502))) * (v0 < v2)) ^ ((v1 - 7) | 1))))();
}

uint64_t sub_100B0BF6C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((LODWORD(STACK[0x50DC]) ^ 0xC02) * (v0 >= 0)) | LODWORD(STACK[0x50D8]))))();
}

uint64_t sub_100B0BFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v5 - 3092) | 0x15A3) + 4398) ^ v5)) - 4))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 12, v6, v7);
}

uint64_t sub_100B0BFF4()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((29 * (v0 <= (int)(STACK[0x50E8] - 3145))) ^ LODWORD(STACK[0x50E4])))
                                          - 12))(97);
}

uint64_t sub_100B0C040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 89064) - 4))(a1, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 8, a5, a3);
}

uint64_t sub_100B0C070()
{
  int v0;
  _BOOL4 v1;

  v1 = v0 > (int)((STACK[0x50F8] + 2428) ^ 0xFFFFF396);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v1 | (8 * v1)) ^ LODWORD(STACK[0x50E0]))))();
}

uint64_t sub_100B0C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 ^ 0xDD7 ^ (10947 * ((v5 ^ 0x20960043) != 1328028238)))) - (((v5 + 1350) | 0x440) ^ 0x15EBLL)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4, a2, a4);
}

uint64_t sub_100B0C120()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 2610) ^ (97 * (v0 >= 0))))
                            - STACK[0x50F0]))();
}

uint64_t sub_100B0C160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x50B8] ^ 0x32BB ^ ((STACK[0x50B8] + 2115) | 0x183))) - 4))(a1, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x50B8]), v5, v6);
}

uint64_t sub_100B0C198()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 951) ^ (27752 * (v0 > 0)))) - 8))();
}

uint64_t sub_100B0C1DC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 21177)) - 8))();
}

uint64_t sub_100B0C204()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 10369) ^ (507 * (v0 >> 31))))
                            - ((STACK[0x6508] - 3270) ^ 0x3B8)))();
}

uint64_t sub_100B0C24C()
{
  LODWORD(STACK[0x6DD8]) = -1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3984])))();
}

uint64_t sub_100B0C270()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((119 * (v0 <= (int)((STACK[0x6508] - 3311) ^ 0xFFFFFC78))) ^ LODWORD(STACK[0x3F88]))))();
}

uint64_t sub_100B0C2B4()
{
  int v0;

  v0 = STACK[0x6508] + 326;
  LODWORD(STACK[0x7444]) = -1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B0C2DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 928) ^ (16958 * (v0 > 0)))) - 12))();
}

uint64_t sub_100B0C320()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x398C])))();
}

uint64_t sub_100B0C33C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 950) ^ (15822 * (v0 > 0)))) - 8))();
}

uint64_t sub_100B0C380()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 10945)) - 12))();
}

uint64_t sub_100B0C3A8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 954) ^ (5276 * (v0 > 0)))) - 12))();
}

uint64_t sub_100B0C3EC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1609)) - 4))();
}

uint64_t sub_100B0C410()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((3 * LODWORD(STACK[0x3F84]) - 882) * (v0 >> 31)) ^ LODWORD(STACK[0x3F80])))
                            - 4))();
}

uint64_t sub_100B0C44C()
{
  LODWORD(STACK[0xC2FC]) = -1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3980])) - 8))();
}

uint64_t sub_100B0C470()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((461 * (STACK[0x6508] ^ 0x1074)) ^ 0x3B9) * (v0 >> 31)) ^ LODWORD(STACK[0x3F90])))
                            - 8))();
}

uint64_t sub_100B0C4BC()
{
  int v0;

  v0 = STACK[0x6508] + 1594;
  LODWORD(STACK[0x7C74]) = -1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B0C4E4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 5945) ^ (108 * (v0 > 0)))))();
}

uint64_t sub_100B0C528()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3988])) - 8))();
}

uint64_t sub_100B0C548()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((251 * (v0 > (int)(49 * (STACK[0x6508] ^ 0x1065) - 932))) ^ LODWORD(STACK[0x3F8C]))))();
}

uint64_t sub_100B0C594()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x86B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ (v0 + 9506) ^ 0xDE3 ^ (27531 * ((v0 ^ 0xF017FE4E) < 0xA55E7EF9)))))();
}

uint64_t sub_100B0C5FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0x5100];
  v3 = STACK[0x6AD8];
  STACK[0x9278] = v1
                + ((STACK[0x5100] - 810566453) & 0x3579EFFD)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x5100])
                - 2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 + 6998)) - 4))(43, v0);
}

uint64_t sub_100B0C65C()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3F74])) - 8))(43);
}

uint64_t sub_100B0C6A4()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 5554)) - 8))(43);
}

uint64_t sub_100B0C6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unint64_t v9;

  v8 = v5 - 2428;
  v9 = STACK[0x6AD8];
  STACK[0x9278] = ((v8 + 86617321) ^ (unint64_t)(v7 + 8)) + *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (v8 + v6)) - 4))(43, a5);
}

uint64_t sub_100B0C734()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0x50F8];
  v2 = STACK[0x6AD8];
  STACK[0x9278] = (STACK[0x50F8] ^ 0x529AD58 ^ v0) + *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x50F8]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((int)v1 + 6997)) - 4))(43);
}

uint64_t sub_100B0C78C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x86B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + (v0 ^ 0x2B75u) - 10449;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 8917)))();
}

uint64_t sub_100B0C7D0()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x86B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + (v0 + 9534) - 10441;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x2502)))();
}

uint64_t sub_100B0C810()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x86B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x252E ^ (27529 * ((v0 + 484934152) > 0x3A8ED200)))))();
}

uint64_t sub_100B0C86C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x86B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + ((v0 + 9446) | 0x45) - 1498)))();
}

uint64_t sub_100B0C8AC()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  STACK[0x98B0] = v2;
  STACK[0xC188] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((4318 * (*(_DWORD *)(v2 + 4) != ((v0 - 6223) ^ 0x1076))) ^ v0))
                            - ((v0 + 1774) ^ 0x2FBFLL)))();
}

uint64_t sub_100B0C908()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_DWORD *)(v1 + 4) == (((v0 - 11517) | 0x40) ^ 0x2F6))
                                * (((v0 + 4217) | 0x2C2) - 17007)) ^ v0)))();
}

uint64_t sub_100B0C958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (v0 + 86617279);
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 6988));
  STACK[0x9278] = v3;
  return ((uint64_t (*)(uint64_t, uint64_t))(v4 - (v2 ^ 0x529AFB1)))(43, v1);
}

uint64_t sub_100B0C9AC(uint64_t a1, int a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((463 * (a2 * v2 < (int)(((v3 + 348173133) & 0xEB3F09FF) - 59))) ^ v3))
                            - 4))();
}

uint64_t sub_100B0C9F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;

  v3 = *(_DWORD *)(v1 + 4);
  if (v3 < 0)
    v3 = -v3;
  LODWORD(STACK[0x8C18]) = v3;
  v4 = *(_DWORD *)(v2 + 4);
  if (v4 < 0)
    v4 = -v4;
  LODWORD(STACK[0x9014]) = v4;
  v5 = STACK[0x6AD8];
  STACK[0xAD60] = (v0 + 3298) + *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 3369;
  return (*(uint64_t (**)(void))(v5 + 8 * (v0 ^ 0x2EA4)))();
}

uint64_t sub_100B0CA60()
{
  int v0;

  v0 = STACK[0x6508] + 9036;
  LODWORD(STACK[0x8714]) = -1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B0CA8C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;

  v3 = v0 + 49;
  v4 = *(_DWORD *)(v1 + 4);
  if (v4 < 0)
    v4 = -v4;
  LODWORD(STACK[0x7C14]) = v4;
  v5 = *(_DWORD *)(v2 + 4);
  if (v5 < 0)
    v5 = -v5;
  LODWORD(STACK[0xCF38]) = v5;
  v6 = STACK[0x6AD8];
  STACK[0xAD60] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 8;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((v3 + 971005681) & 0xC61FADBF ^ 0x232E) + v3)))();
}

uint64_t sub_100B0CB0C()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] + 5343;
  v1 = STACK[0xA2F8];
  LODWORD(STACK[0xC2FC]) = STACK[0xA2F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7387 * (v1 != 1)) ^ v0)) - 8))();
}

uint64_t sub_100B0CB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1076) ^ 0x2DB1)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1076))+ ((STACK[0x6508] - 2706) | 0x100B)- 5623, v6, v5);
}

uint64_t sub_100B0CBAC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v4;

  v2 = STACK[0x6508] ^ 0x43CA;
  v3 = STACK[0x6508] - 1054;
  v4 = STACK[0x6AD8];
  STACK[0x7798] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v2 + v3 - 18736)) - 8))(a1, a2, 4294952683);
}

uint64_t sub_100B0CBEC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x46BC])) - 8))();
}

uint64_t sub_100B0CC10(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((6163 * (a4 < 0xB4E89A8B)) ^ (a4 - 86617107)))
                            - 8))();
}

uint64_t sub_100B0CC5C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((24980 * (a2 != v3)) ^ v2))
                            - ((v2 - 11025) ^ ((v2 - 11838) | 0x20A2u) ^ 0x3D99)))();
}

uint64_t sub_100B0CCA4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(v3 + 4) = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((24861 * (((v2 - 38) ^ (v4 == ((98 * (v2 ^ 0x2DC0)) ^ 0x1076))) & 1)) ^ v2)))();
}

uint64_t sub_100B0CCFC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B0CD10(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = (((v6 ^ a4) * a1) ^ a5) + v7;
  *(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * v9) = *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4 * v9);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v9 == 0) * a6) ^ v6)))();
}

uint64_t sub_100B0CD50(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 11025))
                                                                     - 4))(a1, a2, STACK[0x9278]);
}

uint64_t sub_100B0CD74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_100B0CD84()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;

  v2 = STACK[0x6508];
  v3 = STACK[0x6508] - 3466;
  LODWORD(STACK[0x7804]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v0 > *(_DWORD *)(v1 + 33)) * (v2 + 2100)) ^ v3))
                            - 12))();
}

uint64_t sub_100B0CDC4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;

  v3 = STACK[0x6508] - 3482;
  v4 = STACK[0x6AD8];
  STACK[0x9278] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ 0x196D))
                                                   - ((v3 + v2) ^ 0x3B8FLL)))(a1, v1);
}

uint64_t sub_100B0CE10()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] - 982390125) ^ 0xC571CB7F ^ (20862
                                                                                          * (STACK[0x6508] == 707075693))))
                            - ((STACK[0x6508] + 6479) ^ 0x29C1)))();
}

uint64_t sub_100B0CE84()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 > (v1 ^ 0x29C5)) * (v1 ^ 0x5464)) ^ v1)) - 8))();
}

uint64_t sub_100B0CEC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = *(_DWORD *)(*(_QWORD *)(v0 + 8) + 4 * (v1 - 4869 + (v2 ^ 0x1991u) - 7504)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2 * v3) | (32 * v3) | v2 ^ 0x1991))
                            - ((((v2 ^ 0x1991) - 10192) | 0x2141u) ^ 0x29C1)))();
}

uint64_t sub_100B0CF20(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                                                                              - 4))(a1, a2, 4294956602, 26, 5825);
}

uint64_t sub_100B0CF44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((((v5 >> v6) & 1) * a4) | v4)) - 4))();
}

uint64_t sub_100B0CF74()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B0CFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;

  v2 = STACK[0x6508] ^ 0x43CA;
  v3 = STACK[0x6508] - 934;
  v4 = STACK[0x6AD8];
  STACK[0x7798] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ 0x1A34)) - v2 + 21428))(a1, a2, 4294952683);
}

uint64_t sub_100B0CFEC()
{
  *(_DWORD *)(STACK[0xC188] + 4) = -*(_DWORD *)(STACK[0xC188] + 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x42AC])) - 12))();
}

uint64_t sub_100B0D01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  unint64_t v7;

  v7 = STACK[0x6508];
  LODWORD(STACK[0x9D3C]) = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)(((v7 + 1401) ^ 0x73) + v7 - 1055)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v7 - 1055)), STACK[0x78B8], v5);
}

uint64_t sub_100B0D060()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] + 11208;
  v1 = STACK[0x9D3C];
  LODWORD(STACK[0x6DD8]) = STACK[0x9D3C];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((100 * (v1 == 1)) ^ v0)))();
}

uint64_t sub_100B0D0B0(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  v2 = STACK[0x6508] - 928;
  v3 = STACK[0x6AD8];
  STACK[0x7798] = ((LODWORD(STACK[0x432C]) | 0x1228u) ^ 0xFFFFFFFFFFFFAC48) + *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x1A32)) - 8))(a1, a2, 4294952683);
}

uint64_t sub_100B0D100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)(((STACK[0x6508] + 1401) ^ 0x52) + STACK[0x6508] - 1088)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1088)) - 12, v6, v5);
}

uint64_t sub_100B0D13C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 934)) - 4))();
}

uint64_t sub_100B0D160()
{
  int v0;
  int v1;

  LODWORD(STACK[0x6D88]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 <= (((v1 ^ 0x1067) + 2942) ^ 0xB8E)) * (116 * (v1 ^ 0x1067) - 1946)) ^ (v1 + 13812)))
                            - 4))();
}

uint64_t sub_100B0D1B4()
{
  int v0;
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;

  v1 = STACK[0xC768];
  v2 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  *(v2 - 3) = 130;
  v2 -= 3;
  STACK[0xC0B0] = (unint64_t)v2;
  STACK[0x8E20] = (unint64_t)(v2 + 67);
  STACK[0xC768] = v1 - 25586 + ((v0 + 23153) | 2u);
  v2[1] = v2 - 65;
  v2[67] = 130;
  v2[68] = v2 + 2;
  v3 = STACK[0x6AD8];
  STACK[0xC3B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 + 3913)) - 12))();
}

uint64_t sub_100B0D25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 15674)) - (v5 + 14994) + 16954))(a1, a2, a3, a4, a5, STACK[0x78B8], 43);
}

uint64_t sub_100B0D29C()
{
  unsigned __int8 v0;
  int v1;
  int v2;

  v0 = STACK[0x6508] + 65;
  v1 = STACK[0x6508] + 5554;
  v2 = SLODWORD(STACK[0x6D88]) / 2;
  LODWORD(STACK[0x87E4]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5080 * ((v0 ^ ((STACK[0xCCA0] & v2) == 0)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100B0D30C(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6AD8];
  STACK[0x7798] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x1A53))
                                                            - ((v2 - 293868730) & 0x11845BBE)
                                                            + 21428))(a1, a2, 4294952683);
}

uint64_t sub_100B0D360(int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;

  v2 = (STACK[0x6508] + a1) | 0x5202020;
  v3 = STACK[0x6508] - 3483;
  v4 = STACK[0x6AD8];
  STACK[0x9278] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((v2 ^ 0x529B4D2) + v3)) - 4))(43, v1);
}

uint64_t sub_100B0D3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v7 = 1123 * (STACK[0x6508] ^ 0x1073);
  v8 = STACK[0x6508] - 1225;
  LODWORD(STACK[0xADE4]) = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v8 ^ 0x3FB1 ^ v7)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 8, STACK[0x78B8], v5);
}

uint64_t sub_100B0D410(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 7523 * (v1 ^ 0x15ECu) + 22561))(a1, STACK[0x7588], STACK[0xBE20], STACK[0xB148], STACK[0xA330]);
}

uint64_t sub_100B0D474()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] + 326;
  v1 = STACK[0xADE4];
  LODWORD(STACK[0x7444]) = STACK[0xADE4];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29331 * (v1 == 1)) ^ v0)) - 8))();
}

uint64_t sub_100B0D4C4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0x7798] = (LODWORD(STACK[0x4328]) | 0x1B0u)
                - 21444
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 951));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((15160 * ((((_DWORD)v0 - 951) ^ 0xB25D03CC) < 0x7CD93F02)) ^ ((int)v0 + 1646)))
                            - 8))();
}

uint64_t sub_100B0D538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)(((STACK[0x6508] ^ 0x599) + 6080) ^ (STACK[0x6508] - 1050))))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1050)) - 12, v6, v5);
}

uint64_t sub_100B0D57C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x46F4])))();
}

uint64_t sub_100B0D59C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v2 = STACK[0x6508] - 3526;
  v3 = *(_QWORD *)STACK[0xC648];
  v4 = STACK[0x6AD8];
  STACK[0x9278] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                + ((STACK[0x6508] - 947916985) & 0x3DA9AFF7 ^ (unint64_t)(v1 + 8));
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v2 ^ 0x1CF2)) - 4))(a1, v3);
}

uint64_t sub_100B0D608()
{
  int v0;
  int v1;

  LODWORD(STACK[0x921C]) = v0 + ((v1 - 1677215883) & 0x63F83FBC) - 260 - 1701;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((54 * (v0 > 0)) ^ (v1 + 19297))) - 12))();
}

uint64_t sub_100B0D664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v5 + 15686)) - (v5 ^ 0x7A4)))(a1, a2, a3, a4, a5, STACK[0x8E20], 43);
}

uint64_t sub_100B0D6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7)
{
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;

  v10 = STACK[0x6AD8];
  STACK[0xAA30] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 8;
  STACK[0x7EA8] = v7;
  STACK[0x8BB8] = a6;
  v11 = STACK[0xC768];
  v12 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0xA330] = (unint64_t)(v12 + 65);
  STACK[0xBE20] = (unint64_t)(v12 + 132);
  STACK[0xC768] = v11 + 1072;
  v13 = *(_DWORD *)(v7 + 4);
  if (v13 >= 0)
    v14 = v13;
  else
    v14 = -v13;
  v12[65] = 130;
  v12[66] = v12;
  v12[132] = 130;
  v12[133] = v12 + 67;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10
                                                     + 8
                                                     * (((((v9 + 39) ^ (*(_DWORD *)(a6 + 4) == (v9 ^ 0x5230) - 4214)) & 1)
                                                       * a7) ^ v9)))(4294951749, v14);
}

uint64_t sub_100B0D770(int a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 528) + 4 * a4) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a4 + 1 > a2) * (a5 + a1)) ^ a5)))();
}

uint64_t sub_100B0D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a5 - 11694)) - 8))();
}

uint64_t sub_100B0D7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v11 = *(_QWORD *)(v8 + 528);
  v12 = HIDWORD(v10) + HIDWORD(v9) + *(unsigned int *)(v11 + 4 * a2);
  *(_DWORD *)(v11 + 4 * a5) = v12;
  *(_DWORD *)(*(_QWORD *)(v8 + 528) + 4 * a2) = HIDWORD(v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (11 * (a7 + 1 != a4))))
                            - ((v7 + 2972) | 0x820u)
                            + 10344))();
}

uint64_t sub_100B0D844(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * (a4 <= v4)) | (8 * (a4 <= v4))) ^ v5)) - 8))();
}

uint64_t sub_100B0D8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;

  *(_DWORD *)(*(_QWORD *)(v9 + 528) + 4 * v8 - 4) = HIDWORD(v13)
                                                  + *(_DWORD *)(*(_QWORD *)(v9 + 528) + 4 * v8)
                                                  + HIDWORD(v10)
                                                  + *(_DWORD *)(*(_QWORD *)(a6 + 8) + 4 * v8) * v14
                                                  + *(_DWORD *)(*(_QWORD *)(v7 + 8) + 4 * v8) * v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v8 + 1 - a4) | (a4 - (v8 + 1))) >= 0)
                                          * (((v12 + v6) & (v16 + 1240)) + v15)) ^ v12))
                            - 8))();
}

uint64_t sub_100B0D93C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7697 * (v3 < a2)) ^ v2))
                            - (((v2 ^ 0x55D3u) + 1086) ^ 0x14B8)))();
}

uint64_t sub_100B0D984()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9161)) - 12))();
}

uint64_t sub_100B0D9A0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  *(_DWORD *)(*(_QWORD *)(v5 + 528) + 4 * v11 - 4) = ((*(_DWORD *)(*(_QWORD *)(v5 + 528) + 4 * v11) + HIDWORD(v6)) & (v13 + (v8 ^ v9) * v2 + 3739))
                                                   + HIDWORD(v10)
                                                   + *(_DWORD *)(*(_QWORD *)(v3 + 8) + 4 * v11) * v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v11 + 1 == a2) * v12) ^ v4)) - 12))();
}

uint64_t sub_100B0DA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  *(_DWORD *)(a6 + 4) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 - 3498)) - 4))(43);
}

uint64_t sub_100B0DA1C()
{
  STACK[0xC768] -= 1072;
  return ((uint64_t (*)(void))STACK[0xAA30])();
}

uint64_t sub_100B0DA48()
{
  unsigned int v0;
  int v1;

  v0 = STACK[0x921C];
  if (SLODWORD(STACK[0x921C]) < 0)
    v0 = -v0;
  v1 = *(_DWORD *)(STACK[0xC948] + 4);
  if (v1 < 0)
    v1 = -v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)((19202 * (v0 >> 5 < v1)) ^ (STACK[0x6508] - 1232)))
                                          - ((213 * (STACK[0x6508] ^ 0x1078)) ^ 0xBAALL)))(43);
}

uint64_t sub_100B0DAC4()
{
  int v0;
  char v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((10254
                                          * (((((*(_DWORD *)(*(_QWORD *)(v3 + 8) + 4 * v2) >> v1) & 1) == 0) ^ (v0 - 1)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100B0DB08()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC3B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 22224 + v0 + 23132)) - 12))();
}

uint64_t sub_100B0DB64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;

  STACK[0x8E90] = v8;
  STACK[0x9348] = v9;
  v10 = STACK[0xC768];
  v11 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0x7588] = (unint64_t)(v11 + 65);
  STACK[0xB148] = (unint64_t)(v11 + 132);
  STACK[0xC768] = ((a4 - 1402966805) & 0x539F2FFF) + v10 + 323;
  v12 = *(_DWORD *)(v8 + 4);
  LODWORD(STACK[0x6A90]) = v12;
  if (v12 >= 0)
    v13 = v12;
  else
    v13 = -v12;
  v11[65] = 130;
  v11[66] = v11;
  v11[132] = 130;
  v11[133] = v11 + 67;
  v14 = *(_DWORD *)(a5 + 4) * *(_DWORD *)(a8 + 4) == 0;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v14 | (16 * v14)) ^ a4))
                                                   - ((a4 + 537984957) & 0xDFEEDA7D)
                                                   + 16441))(a1, v13);
}

uint64_t sub_100B0DC50()
{
  uint64_t v0;
  unsigned int v1;

  *(_DWORD *)(v0 + 4) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 + 3465) ^ 0x107ALL)))();
}

uint64_t sub_100B0DC80()
{
  STACK[0xC768] -= 1072;
  return ((uint64_t (*)(void))STACK[0xC3B8])();
}

uint64_t sub_100B0DCB4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6479)) - 8))();
}

uint64_t sub_100B0DCD8(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((117 * (a4 >= a2)) ^ (v4 + 4360)))
                            - (((v4 + 4360) ^ 0x2E5Au)
                             + 7494)
                            + 10536))();
}

uint64_t sub_100B0DD58(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((a3 != 602 * (a7 ^ 0x17CB) - 4214) * (19 * (a7 ^ 0x17EA) + 29557)) ^ a7)))();
}

uint64_t sub_100B0DDCC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 17297)))();
}

uint64_t sub_100B0DDE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  unsigned int v10;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((133 * (*(_DWORD *)(v9 + 4 * v10) != (((v8 ^ a8) + a4) ^ 0x2D2))) ^ (v8 + 1747))))();
}

uint64_t sub_100B0DE24(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a3 ^ (17355 * (v3 > 1)))))();
}

uint64_t sub_100B0DE5C(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  *(_DWORD *)(v4 + 524) = a2 + 1;
  v6 = STACK[0x6AD8];
  STACK[0x9278] = ((v3 + 632929517) & 0xDF6FEFF5 ^ v5) + *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v3 + 7024)) - 4))(43, v2);
}

uint64_t sub_100B0DEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, unint64_t a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t (*v11)(void);

  if (a7 >= 0)
    v9 = a7;
  else
    v9 = -a7;
  if (a6 >= 0)
    v10 = a6;
  else
    v10 = -a6;
  v11 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 ^ (182 * (v9 > v10))))
                          - ((v8 + 1829780154) & 0x92EF957E)
                          + 4206);
  STACK[0x6AC0] = a8;
  return v11();
}

uint64_t sub_100B0DF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 + 12231))
                                                                                              - 8);
  STACK[0x6AC0] = a5;
  return v10(a1, a2, a3, v9, a8, a6, a4);
}

uint64_t sub_100B0DF4C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 14246)))();
}

uint64_t sub_100B0DF80@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 528) + 4 * (v3 - 1)) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v3 > a1) * (v2 + a2)) ^ v2)))();
}

uint64_t sub_100B0DFB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v4 - 953) ^ 0x6BE) + 1006227092) ^ 0x3BFA1179) * (a4 == 0)) ^ (v4 - 953)))
                            - 12))();
}

uint64_t sub_100B0DFF4(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((2 * ((v4 + 1940778208) & 0x8C51FBFF ^ 0x3A) - 21811) * (a4 >= a2)) ^ v4))
                            - 4))();
}

uint64_t sub_100B0E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * ((26662
                                                                                   * (LODWORD(STACK[0x6A90]) != ((3 * (a7 ^ 0x2B41) + 114118667) & 0xF932BD76) - 4214)) ^ a7))
                                                                     - 4))(a1, a2, a3, 2054813770);
}

uint64_t sub_100B0E0F4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 18430)) - 4))();
}

uint64_t sub_100B0E114@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v1 + 4 * v3) == 0) * (((v2 - 4082) | 0x270) - 654)) ^ (v2 + 6983)))
                            - ((v2 - 1528205495) & a1)
                            + 11193))();
}

uint64_t sub_100B0E16C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((86 * ((a3 - 2054824895) & (a4 + 683) ^ 0x2C5)) ^ 0x63BF) * (v4 > 1)) ^ a3))
                            - 4))();
}

uint64_t sub_100B0E1BC(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  *(_DWORD *)(v4 + 524) = a2 + 1;
  v5 = STACK[0x6AD8];
  STACK[0x9278] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t, uint64_t))(86618033
                                                   - ((v3 + 67174444) | 0x128AC95u)
                                                   + *(_QWORD *)(v5 + 8 * (v3 ^ 0x1CB6))))(43, v2);
}

uint64_t sub_100B0E224(uint64_t a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;

  v2 = STACK[0x6508] - 3477;
  v3 = STACK[0x8E20];
  v4 = STACK[0x6AD8];
  STACK[0x9278] = v1 + (STACK[0x6508] ^ 0x529BFC3) + *(_QWORD *)(STACK[0x6AD8] + 8 * v2) + 2;
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v4 + 8 * (v2 ^ 0x1CA3)) - 4))(a1, v3);
}

uint64_t sub_100B0E278()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0x19FFu) + 12495))();
}

uint64_t sub_100B0E298(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;

  v13 = *(unsigned int *)(a8 + 4 * a2) + HIDWORD(v9);
  *(_DWORD *)(a8 + 4 * a5) = v13;
  *(_DWORD *)(*(_QWORD *)(v10 + 528) + 4 * a2) = HIDWORD(v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((431 * (v8 ^ 0x106B)) ^ v11) * (a4 + 1 != (_DWORD)a2)) ^ (v8 + 5459)))
                            - (v8 + 1878)
                            + v12))();
}

uint64_t sub_100B0E2FC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((2107 * (a6 ^ v6)) ^ 0x107E) * (a2 < 2)) ^ a6)))();
}

uint64_t sub_100B0E34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  *(_DWORD *)(*(_QWORD *)(v10 + 528) + 4 * v9 - 4) = *(_DWORD *)(*(_QWORD *)(v10 + 528) + 4 * v9)
                                                   + HIDWORD(v8)
                                                   + *(_DWORD *)(*(_QWORD *)(v7 + 8) + 4 * v9) * a7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v9 + 1 == a2) * ((a6 + v11) ^ v12)) ^ a6)))();
}

uint64_t sub_100B0E398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * (v7 + 8293)))(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v8 + 528));
}

uint64_t sub_100B0E3B0()
{
  unsigned int v0;
  BOOL v1;
  int v2;
  int v3;

  v1 = v0 > 0xBBD6DAC5;
  v2 = v0 ^ 0x3BFA3FF3;
  v3 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (29591 * v3))) - 12))();
}

uint64_t sub_100B0E428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v14 = *(_QWORD *)(v9 + 528);
  v15 = (v12 >> (v8 - 98)) + HIDWORD(v13) + *(unsigned int *)(v14 + 4 * a2);
  *(_DWORD *)(v14 + 4 * v10) = v15;
  *(_DWORD *)(*(_QWORD *)(v9 + 528) + 4 * a2) = HIDWORD(v15);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 ^ (27369 * (a8 + 1 == v11))))
                            - (v8 ^ 0x122Eu)
                            + 15520))();
}

uint64_t sub_100B0E498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v7;
  int v8;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v8 ^ (111 * (a7 > v7)))))();
}

uint64_t sub_100B0E508@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_DWORD *)(*(_QWORD *)(v5 + 528) + 4 * v4 - 4) = HIDWORD(v10)
                                                  + *(_DWORD *)(*(_QWORD *)(v5 + 528) + 4 * v4)
                                                  + HIDWORD(v8)
                                                  + *(_DWORD *)(*(_QWORD *)(a1 + 8) + 4 * v4) * v3
                                                  + *(_DWORD *)(*(_QWORD *)(v2 + 8) + 4 * v4) * v9;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v4 + 1 != v6) * (v7 + a2)) ^ v7)))();
}

uint64_t sub_100B0E568(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((v3 < a2) * ((((v2 ^ 0x2B5C) + 11304) ^ 0xFFFFC122) + 7 * (v2 ^ 0x2B5C))) ^ v2)))();
}

uint64_t sub_100B0E5B8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 16703)))();
}

uint64_t sub_100B0E5D0@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W5>, char a4@<W8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  uint64_t v11;

  *(_DWORD *)(*(_QWORD *)(v7 + 528) + 4 * v6 - 4) = HIDWORD(v11)
                                                  + *(_DWORD *)(*(_QWORD *)(v7 + 528) + 4 * v6)
                                                  + (v9 >> (v8 + a4 + v4))
                                                  + *(_DWORD *)(*(_QWORD *)(v5 + 8) + 4 * v6) * v10;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v6 + 1 != a1) * a3) ^ (v8 + a2))))();
}

uint64_t sub_100B0E62C()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B0E664(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v11 = *(unsigned int *)(a8 + 4 * a2) + HIDWORD(v9);
  *(_DWORD *)(a8 + 4 * a5) = v11;
  *(_DWORD *)(*(_QWORD *)(v10 + 528) + 4 * a2) = HIDWORD(v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v8 ^ 0x3BCB) - 6069) * (a4 + 1 != (_DWORD)a2)) | (v8 + 12944)))
                            - 4))();
}

uint64_t sub_100B0E6C0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((245 * (((a2 > 1) ^ (a6 - 6)) & 1)) ^ a6)))();
}

uint64_t sub_100B0E71C@<X0>(uint64_t a1@<X1>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_DWORD *)(*(_QWORD *)(v8 + 528) + 4 * v7 - 4) = *(_DWORD *)(*(_QWORD *)(v8 + 528) + 4 * v7)
                                                  + HIDWORD(v6)
                                                  + *(_DWORD *)(*(_QWORD *)(v5 + 8) + 4 * v7) * a3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v7 + 1 == a1) * (((a2 ^ a4) * v9) ^ v4)) ^ a2)))();
}

uint64_t sub_100B0E76C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v3 + a3)))();
}

uint64_t sub_100B0E780()
{
  int v0;
  int v1;
  unint64_t v2;

  STACK[0x7728] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((1118 * (v0 ^ 0x53BF) - 3246) * (v1 > 0)) ^ v0)) - 8))();
}

uint64_t sub_100B0E7C0()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0xC344]) = v1 & 0x1F;
  LODWORD(STACK[0xB93C]) = ((v0 + 416877930) & 0xE726FF3F) - (v1 & 0x1F) - 3325;
  LODWORD(STACK[0x9ADC]) = v1 >> 5;
  v3 = *(_DWORD *)(v2 + 4);
  if (v3 < 0)
    v3 = -v3;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  LODWORD(STACK[0xC9A4]) = v3;
  STACK[0xAD60] = v5 - 12;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(v0 ^ 0x2EEC)))();
}

uint64_t sub_100B0E84C(uint64_t a1, int a2)
{
  unint64_t v2;
  int v3;

  STACK[0xB298] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 + a2 + a2 - 533203943 + 1675)) - 8))();
}

uint64_t sub_100B0E888(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  int v6;

  v5 = -v2;
  v6 = *(_DWORD *)(v3 + 4);
  if (v6 < 0)
    v6 = -v6;
  LODWORD(STACK[0x6D2C]) = v6;
  LODWORD(STACK[0xB840]) = v5 >> 5;
  LODWORD(STACK[0xA47C]) = v5 & 0x1F;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + a2 + a2 - 533203940 + 1678)) - 8))();
}

uint64_t sub_100B0E8F8()
{
  int v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5369 * (v1 != v2 + 2646)) ^ (v1 + v3)))
                            - (v1 ^ (v0 + 1997) ^ 0x4987)))();
}

uint64_t sub_100B0E950(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4379 * (v4 > ((v3 + a3) ^ 0x1076))) ^ v3))
                            - ((v3 - 1772226974) & 0x69A1FDFE ^ 0x3DE0)))();
}

uint64_t sub_100B0E9A4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((*(_DWORD *)(*(_QWORD *)(v2 + 8) + v0) == 0) ^ (v1 - 65)) & 1)
                                          * (v1 + 13947)) ^ v1))
                            - 12))();
}

uint64_t sub_100B0EA00(uint64_t a1, int a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((LODWORD(STACK[0x4CE4]) * (v2 > a2)) ^ (STACK[0x6508] + 2324)))
                                          - 8))(622367);
}

uint64_t sub_100B0EA38()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((19 * (SLODWORD(STACK[0x6D2C]) > SLODWORD(STACK[0xB840]))) | LODWORD(STACK[0x4A6C])))
                            - 167 * (LODWORD(STACK[0x4A6C]) ^ 0x29F5u)
                            + 14859))();
}

uint64_t sub_100B0EA94()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((LODWORD(STACK[0xA47C]) == ((v0 - 10767) ^ 0x1000)) * (((v0 - 10767) | 0xA14) ^ 0x1A0E)) ^ v0)))();
}

uint64_t sub_100B0EAD8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(STACK[0x7728] + 4);
  if (v4 < a3 - 6676)
    v5 = v3;
  else
    v5 = -v3;
  *(_DWORD *)(STACK[0x7728] + 4) = v5 + v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 8))();
}

uint64_t sub_100B0EB18()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v2 + 8) + 4 * v0) = *(_DWORD *)(*(_QWORD *)(v2 + 8) + 4 * ((int)v0 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((926 * (((v1 ^ (v0 + 1 == v4)) & 1) == 0)) ^ v1)) - 8))();
}

uint64_t sub_100B0EB5C(uint64_t a1, int a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((LODWORD(STACK[0x4CE8]) * (v2 > a2)) ^ LODWORD(STACK[0x4E7C])))
                                          - 4))(622367);
}

uint64_t sub_100B0EBA0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x4E7C])) - 4))();
}

uint64_t sub_100B0EBEC()
{
  return ((uint64_t (*)(void))STACK[0xAD60])();
}

uint64_t sub_100B0EBFC()
{
  int v0;

  v0 = STACK[0x6508] - 4214;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0x198A ^ (9718
                                                             * ((v0 & ~LODWORD(STACK[0xC9A4]) | (LODWORD(STACK[0xC9A4]) ^ ~v0) & (v0 - LODWORD(STACK[0xC9A4]))) >> 31))))
                            - 8))();
}

uint64_t sub_100B0EC50()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((LODWORD(STACK[0xC344]) == LODWORD(STACK[0x44F0])) * (LODWORD(STACK[0x44F4]) - 6178)) | LODWORD(STACK[0x44F4]))))();
}

uint64_t sub_100B0EC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 1877))
                                                                                       - 4))(20432, a2, a3, a4, a5, 32396);
}

uint64_t sub_100B0ECC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;

  *(_DWORD *)(*(_QWORD *)(v7 + 8) + 4 * (v9 + (int)v10)) = *(_DWORD *)(*(_QWORD *)(v7 + 8) + 4 * v10 - 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 <= ((v8 + v6) ^ a1)) * a6) ^ v8))
                            - 4))();
}

uint64_t sub_100B0ED00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * ((5159
                                                                         * (v3 > v4 - 13895 + (v4 ^ 0x5FA7) - 10752)) ^ v4)))(2931988879, a2, a3, 4294962348);
}

uint64_t sub_100B0ED48()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 14705)))();
}

uint64_t sub_100B0ED60(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v9 = v7 - 1;
  *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * v9) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v9 < 1) * (((v8 + v5 + 3251) & a1) + a4)) ^ v6)))();
}

uint64_t sub_100B0ED98()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  v3 = *(_DWORD *)(v1 + 4);
  if (v3 < ((v2 - 1248635027) & 0x4A6C9F7E ^ 0x1076))
    v0 = -v0;
  *(_DWORD *)(v1 + 4) = v0 + v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))(622367);
}

uint64_t sub_100B0EDE4()
{
  char v0;
  char v1;
  int v2;
  unsigned int v3;

  v1 = v0 + STACK[0x6508] + 127;
  if (SLODWORD(STACK[0x8C18]) >= SLODWORD(STACK[0x9014]))
    v3 = STACK[0x9014];
  else
    v3 = STACK[0x8C18];
  v2 = STACK[0x6508] - 4214;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (v2 ^ 0x2C36 ^ (((((((v3 | v2) - v3) | (v2 - v3) & ~(v2 ^ v3)) >> (v1 ^ 0x41)) & 1) == 0)
                                              * (LODWORD(STACK[0x4A68]) ^ 0x34B7)))))();
}

uint64_t sub_100B0EE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(STACK[0x6AD8]
                                                                                                 + 8
                                                                                                 * SLODWORD(STACK[0x4A68])))(a1, a2, v4, a4, LODWORD(STACK[0x4A68]) ^ v5, STACK[0x98B0]);
}

uint64_t sub_100B0EEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  *(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * v7) += v9 + *(_DWORD *)(*(_QWORD *)(a6 + 8) + 4 * v7);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v7 + v10 + 3 * (a5 ^ v12) != v6) * v11) ^ a5)))();
}

uint64_t sub_100B0EF18(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((a3 & (a3 ^ a4) | (a3 - a4) & ~(a3 ^ a4)) >> (v4 ^ 0x41)) & 1) * (v4 ^ 0x5ACF)) ^ v4)))();
}

uint64_t sub_100B0EF60(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ 0x6216))
                                                                                               - (((v4 ^ 0x6216u) - 9) ^ 0x263BLL)))(a1, a2, a3, a4, 4294961719, 4215, 119);
}

uint64_t sub_100B0EF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;

  *(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * a3) += v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((uint64_t)(((v7 + a5) ^ a6) + a3) < a4) * a7) ^ v7))
                            - 4))();
}

uint64_t sub_100B0EFD8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 13288)))();
}

uint64_t sub_100B0EFEC(uint64_t a1, int a2, int a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * ((((v3 + 21244) ^ 0x7197 ^ ((v3 + 282) | 0xA4E)) * (a3 < a2)) ^ (v3 + 12976))))(18324);
}

uint64_t sub_100B0F03C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * v3))(a1, a2, a3);
}

uint64_t sub_100B0F058(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  *(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * a3) = *(_DWORD *)(*(_QWORD *)(v6 + 8) + 4 * a3) + v9;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a2 <= (int)a3 + a5 + v7 + a1) * a6) ^ v7)))();
}

uint64_t sub_100B0F09C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((243 * (v4 == ((a4 + 15) ^ 0x4B44u) - 10437)) ^ a4)))();
}

uint64_t sub_100B0F0D0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * a3) = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * v3))(a1, a2, a3 - 10436 + ((v3 - 23232) | 0x2004));
}

uint64_t sub_100B0F108(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v5 + 4) = a3 * v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - (v3 - 6223) + 4202))();
}

uint64_t sub_100B0F130()
{
  int v0;

  if (SLODWORD(STACK[0x7C14]) >= SLODWORD(STACK[0xCF38]))
    v0 = STACK[0xCF38];
  else
    v0 = STACK[0x7C14];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 > (int)(((STACK[0x6508] - 4213) | 0x2510) - 9489))
                                               * (((STACK[0x6508] + 2250) | 0x490) ^ 0x2235)) ^ (STACK[0x6508] + 3387)))
                            - 4))();
}

uint64_t sub_100B0F1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3)
                                                                    - (v3 - 31)
                                                                    + 7597))(a1, 1, a3, 0);
}

uint64_t sub_100B0F208(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  *(_DWORD *)(*(_QWORD *)(a6 + 8) + 4 * a4) = a2
                                            + *(_DWORD *)(*(_QWORD *)(a6 + 8) + 4 * a4)
                                            - *(_DWORD *)(*(_QWORD *)(a7 + 8) + 4 * a4)
                                            + v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a4 + v10 + ((a5 + v9) & v8) != v7) * v11) ^ a5)) - 4))();
}

uint64_t sub_100B0F260(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)(((301 * ((v3 + 217886893) & 0xF3037EEF ^ 0x54A0) + 20877) * (v4 < a3)) ^ v3)))();
}

uint64_t sub_100B0F2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                                                                                                - 12))(a1, a2, a3, a4, 4294963081, 301, 2818);
}

uint64_t sub_100B0F2EC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v10 = *(_QWORD *)(v8 + 8);
  v11 = a2 + a5 + (v7 ^ a1) * a6 + *(unsigned int *)(v10 + 4 * v9);
  *(_DWORD *)(v10 + 4 * v9) = v11;
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8 * (((v9 + 1 >= a3) * a7) ^ v7))
                                                            - 12))(21664, HIDWORD(v11));
}

uint64_t sub_100B0F33C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a4 + 5275)))();
}

uint64_t sub_100B0F350(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((4081 * (v4 < v5)) ^ (a4 + 9365)))
                            - ((a4 ^ 0x24BE)
                             + (a4 ^ 0xFFFFFFFFFFFFDB32))))();
}

uint64_t sub_100B0F3A4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B0F3D0@<X0>(int a1@<W1>, int a2@<W3>, unsigned int a3@<W4>, int a4@<W5>, unint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_DWORD *)(*(_QWORD *)(v7 + 8) + 4 * v8) = ~*(_DWORD *)(*(_QWORD *)(v6 + 8) + 4 * v8) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 <= (int)v8 + 1) * a4) ^ v5))
                            - (((v5 ^ a3) * a2) ^ a5)))();
}

uint64_t sub_100B0F420(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((a2 == 0) * ((a3 - 16153) ^ 0x3E60 ^ (5 * (a3 ^ 0x4452)))) ^ a3))
                            - 12))();
}

uint64_t sub_100B0F460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((((((v4 - 10785) ^ (v5 == 0)) & 1) == 0) * ((v4 + 941776685) & 0xC7DD75F7 ^ 0x15F2)) ^ v4))
                                                                                       - 12))(a1, a2, a3, a4, 11361, 4202);
}

uint64_t sub_100B0F4BC(uint64_t a1)
{
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 | 0x600)) - 12))(a1, v2, 1);
}

uint64_t sub_100B0F4E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * v6) = ~*(_DWORD *)(*(_QWORD *)(v8 + 8) + 4 * v6) + a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 + 1 == a2) * a5) ^ v7))
                            - (v7 - 1722)
                            + a6))();
}

uint64_t sub_100B0F530()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 16153)) - 12))();
}

uint64_t sub_100B0F54C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 + 3737) ^ (13183 * (v1 > 0))))
                            - ((v0 - 288444550) & 0x11315F0F ^ 0x1F04)))();
}

uint64_t sub_100B0F594(uint64_t a1, unsigned int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2) - 37 * (a2 ^ 0x1D21) + 20161))();
}

uint64_t sub_100B0F5D0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v2 + 4 * (v0 - 1)) == 0)
                                          * ((v1 - 15951) ^ 0x1062)) ^ v1))
                            - 496 * (v1 ^ 0x4ED5u)
                            + 7932))();
}

uint64_t sub_100B0F620(uint64_t a1, int a2)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (a2
                                         - (((v2 - 1 > 0) ^ (a2 - 51)) & 1)
                                         + 16 * (((v2 - 1 > 0) ^ (a2 - 51)) & 1)))
                            - 602 * (a2 ^ 0x1F07u)
                            + 4210))();
}

uint64_t sub_100B0F684()
{
  int v0;

  *(_DWORD *)(STACK[0x7728] + 4) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x3026))
                            - (((v0 ^ 0x3026) - 1338631316) & 0x4FC9DB7F ^ 0x107ELL)))();
}

uint64_t sub_100B0F6C4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((507
                                          * ((int)((((v0 ^ 0x5EF2) + 2062744717) & 0x850CFCF6 ^ 0xFFFFB789) + v1) > 0)) ^ v0 ^ 0x5EF2))
                            - (((v0 ^ 0x5EF2) + 373829355) & 0xE9B7E67F ^ 0x6451)))();
}

uint64_t sub_100B0F750(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a4) - 12))();
}

uint64_t sub_100B0F764(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  *(_DWORD *)(*(_QWORD *)(v5 + 8) + 4 * v6) = ((2
                                              * *(_DWORD *)(*(_QWORD *)(v5 + 8)
                                                          + 4 * (int)(v6 + v7 + (((a4 - 2101) | v4) ^ v8)))) << ~a2) | (*(_DWORD *)(*(_QWORD *)(v5 + 8) + 4 * ((int)v6 + v7)) >> a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 + 1 == a3) * v9) ^ a4)) - 12))();
}

uint64_t sub_100B0F7C0(uint64_t a1, char a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * a3) = *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * (v5 - 1)) >> a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((37 * (*(_DWORD *)(v4 + 4) > 0)) ^ v3))
                            - (v3 ^ 0x742Bu)
                            + 4206))();
}

uint64_t sub_100B0F834()
{
  uint64_t v0;
  int v1;
  int v2;

  *(_DWORD *)(v0 + 4) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 2324)) - 8))();
}

uint64_t sub_100B0F850()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3737)) - 4))();
}

uint64_t sub_100B0F868()
{
  int v0;
  int v1;
  int v2;

  *(_DWORD *)(STACK[0xC188] + 4) = v2 * v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15174 * (v0 != -1104190706)) ^ (v0 + 781))) - 12))();
}

uint64_t sub_100B0F8C0()
{
  return ((uint64_t (*)(void))STACK[0x86B0])();
}

uint64_t sub_100B0F8CC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = STACK[0x6508] + 1594;
  v3 = STACK[0xB1E4];
  LODWORD(STACK[0x7C74]) = STACK[0xB1E4];
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * ((15 * (v3 == 1)) ^ v2))
                                                                     - 4))(a1, a2, STACK[0xBE20]);
}

uint64_t sub_100B0F920(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v4;

  v2 = 10718 * (STACK[0x6508] ^ 0x1074);
  v3 = STACK[0x6508] - 954;
  v4 = STACK[0x6AD8];
  STACK[0x7798] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ 0x49E4 ^ v2)) - 8))(a1, a2, 4294952683);
}

uint64_t sub_100B0F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  v3 = STACK[0x6508] + 9036;
  v4 = STACK[0x75DC];
  LODWORD(STACK[0x8714]) = STACK[0x75DC];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((2293 * (v4 == 1)) ^ v3))
                                                                              - 12))(a1, a2, a3, STACK[0xB148]);
}

uint64_t sub_100B0F9C0(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  v2 = STACK[0x6508] - 950;
  v3 = STACK[0x6AD8];
  STACK[0x7798] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (LODWORD(STACK[0x4320]) ^ v2)) - 8))(a1, a2, 4294952683);
}

uint64_t sub_100B0FA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1064) ^ 0x3852 ^ STACK[0x4324] & 0x667815EF)))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1064)) - 12, a3, STACK[0x7EA8]);
}

uint64_t sub_100B0FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (int)((1123 * (STACK[0x6508] ^ 0x1073) + 6074) ^ (STACK[0x6508] - 1052))))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1052)), a4, STACK[0x8E90]);
}

uint64_t sub_100B0FA9C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3F6C])) - 8))();
}

uint64_t sub_100B0FADC(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;

  v10 = a3 + v6;
  v11 = v6 - 1;
  *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * v10) = (*(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * v11) >> a4) | v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 | (32 * (v11 == ((v8 + v9) ^ v7))))) - 8))();
}

uint64_t sub_100B0FB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v4 + 8) + 4 * a3) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ (55 * ((int)a3 > 0))))
                            - (v3 - 5326)
                            + 6530))();
}

uint64_t sub_100B0FB70(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  unsigned int v6;

  *(_DWORD *)(*(_QWORD *)(v5 + 8) + 4 * v6) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 != 0) * (v4 ^ a4)) ^ v4)) - 8))();
}

uint64_t sub_100B0FBA4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(v0 + 4) = ((__PAIR64__(((14 * (v2 ^ 0x18A7)) ^ 0x1077u) + v3, *(_DWORD *)(*(_QWORD *)(v0 + 8) + 4 * v3))
                        - 1) >> 32)
                      * v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_100B0FBEC()
{
  uint64_t v0;
  int v1;
  int v2;

  *(_DWORD *)(v0 + 4) = ((v1 - 6518) | 0x1062) - v2 - 4214;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100B0FC20()
{
  return ((uint64_t (*)(void))STACK[0x7798])();
}

uint64_t sub_100B0FC2C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x46B8])))();
}

uint64_t sub_100B0FC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unint64_t v6;
  uint64_t v7;

  v6 = STACK[0x6508];
  v7 = STACK[0x6508] + 1401;
  LODWORD(STACK[0x75DC]) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x48B4])))(97, a2, a3, a4, a5, v7 - 5627 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v6 - 1099)), STACK[0x7588], STACK[0x8E90]);
}

uint64_t sub_100B0FCA0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3492)) - 12))();
}

uint64_t sub_100B0FCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unint64_t v6;

  v6 = STACK[0x6508];
  LODWORD(STACK[0xB1E4]) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(STACK[0x6AD8] + 8 * (int)((v6 - 1071) ^ 0xF91 ^ (((((_DWORD)v6 - 1071) ^ 0x147D74ECu) < 0x8B33F6CB) * (v6 ^ 0x3253)))))(97, a2, a3, a4, a5, *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v6 - 1071)) - 8, STACK[0xA330], STACK[0x7EA8]);
}

uint64_t sub_100B0FD44()
{
  STACK[0xC768] -= 1072;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((70 * (((STACK[0x8778] == 0) ^ (STACK[0x42B0] - 1)) & 1)) ^ LODWORD(STACK[0x42A8])))
                            - 12))();
}

uint64_t sub_100B0FDA4(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((76 * (*(_QWORD *)(STACK[0x6AB0] + 824) != 0)) ^ (v2 + 14498))) - ((v2 + 1080) | 0x54u) + 4202))(a1, a2, 20577, 7447, 4294952266, 4294955103, 1823, 10848);
}

uint64_t sub_100B0FE0C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  int v3;

  v3 = *(_DWORD *)(v2 + 820);
  if (v3 < 0)
    v3 = -v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((7682 * (((v0 + 1) ^ (v1 < 4 * v3)) & 1)) ^ v0))
                            - ((v0 - 13368) | 0x22u)
                            + 4202))();
}

uint64_t sub_100B0FE68()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12193)) - 4))();
}

uint64_t sub_100B0FE94(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, char a6)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  char v9;
  int v10;
  uint64_t v11;

  v11 = (v7 - 1);
  *(_BYTE *)(v6 + v11) = v10 + a6 + (v8 >> v9) - (((v10 ^ a3) - 14) & (2 * (v8 >> v9))) + 62;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v10 ^ ((v11 == 0) * a4))) - 4))();
}

uint64_t sub_100B0FEE0@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((v4 == 34 * (v5 ^ a4) + a1) * ((v5 ^ 0x107F) * a2 + 14077)) ^ (v5 + a3))))();
}

uint64_t sub_100B0FF24()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 - 15011) * (v1 < v0)) ^ v2)))();
}

uint64_t sub_100B0FF54()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B0FF78()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xAB80] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((178
                                          * ((((39 * (v0 ^ 0x74)) ^ ((v0 - 116) ^ (STACK[0x6A20] == 0))) & 1) == 0)) ^ ((int)v0 + 6463)))
                            - 4))();
}

uint64_t sub_100B0FFE4()
{
  int v0;
  unsigned int v1;
  int v2;

  v2 = *(_DWORD *)(STACK[0x6A70] + 4);
  if (v2 < 0)
    v2 = -v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v1 < 4 * v2) * (((1057 * (v0 ^ 0x661B) - 5351) | 0x34) - 4178)) ^ v0))
                            - 12))();
}

uint64_t sub_100B10040()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((5604 * (((v1 == 0) ^ (v0 - 70)) & 1)) ^ v0))
                            - 49 * (v0 ^ 0x257Fu)
                            + 4210))();
}

uint64_t sub_100B1008C(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                                                                              - ((v2 - 3344) ^ 0x19DFLL)))(a1, a2, 6611, 9955, 32097);
}

uint64_t sub_100B100C8(uint64_t a1, uint64_t a2, char a3, int a4)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  unsigned int v7;

  *(_BYTE *)(a1 + v5) = v4 >> v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v7 ^ a4 ^ (29
                                                         * (((((v5 - (unint64_t)v7) | (v7 - (unint64_t)v5)) >> (((v7 ^ a3) - 93) ^ 0x49)) & 1) == 0))))
                            - 12))();
}

uint64_t sub_100B10128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v5 == 32) * a5) ^ v6))
                            - (v6 - 6611)
                            - 8))();
}

uint64_t sub_100B10154@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  char v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v2 ^ (4
                                                    * (((v1 & (v1 ^ a1) | (v1 - a1) & ~(v1 ^ a1)) >> (v3 ^ 0x1F)) & 1))))
                            - 8))();
}

uint64_t sub_100B10190(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - (v3 ^ a3) - 8))();
}

uint64_t sub_100B101BC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x37CF)) - (v0 + 20367) + 22050))();
}

uint64_t sub_100B101F0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5299)) - 4))();
}

uint64_t sub_100B10218()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B10240()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((16637 * (v0 == (LODWORD(STACK[0x3604]) ^ 0x8D2DC862))) ^ (STACK[0x6508] + 1733))))();
}

uint64_t sub_100B1027C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x3604])
                                         + 8
                                         * ((((((LODWORD(STACK[0x3604]) - 15220) | 0xB22) - 6973) ^ (*(_DWORD *)(STACK[0xB2C0] + 1776) > (*(_DWORD *)(STACK[0xB2C0] + 1780) ^ 0x8D2D9467) - LODWORD(STACK[0xB1A0]))) & 1) == 0)))
                            - 12))();
}

uint64_t sub_100B10300()
{
  int v0;

  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * v0))((v0 + 6620));
}

uint64_t sub_100B10350@<X0>(int a1@<W0>, int a2@<W8>)
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((8597 * (((a1 - 14699) | 0x1210) ^ 0x1E36) - 17099) * (a2 != 0)) ^ a1))
                                          - 4))(0x44C14E061CD1C0FDLL);
}

uint64_t sub_100B103F4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v7 = a1 + v5 + ((a2 + 8668) | 0x5C0u);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(unsigned __int8 *)(v3 + v7) != *(unsigned __int8 *)(v2 + v7))
                                          * ((a2 ^ v4) + v6)) ^ a2))
                            - 4))();
}

uint64_t sub_100B1043C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;

  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8 * (a3 ^ ((v4 + v5 + v3 + a1 == v8) * v9)))
                                                   - (((v6 + a3 + 1576) | 0x2A00A12Au) ^ v10)))((((a3 + v11) | v12) ^ v7) + a1);
}

uint64_t sub_100B10490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((a5 - 981772800) ^ 0xC57B0BFD) + a5) ^ (23042 * (a5 > 0xB632D950))))
                            - 4))();
}

uint64_t sub_100B104E8(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 8))(859 * (a3 ^ 0x4330u), 1);
}

uint64_t sub_100B10538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a5) - 4))();
}

uint64_t sub_100B105A4(uint64_t a1, int a2, int a3)
{
  return ((uint64_t (*)(_QWORD, BOOL))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 8))((a3 - 1465566188) & 0x575AD7FF, a2 == 0);
}

uint64_t sub_100B10610(int a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((75 * (a2 ^ 1)) ^ a1)) - 8))();
}

uint64_t sub_100B106BC@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = v5 & 0x3F;
  *(_DWORD *)STACK[0x47D0] = v5 + 1;
  if (v6 >= ((a1 + 11860) ^ 0x4599u))
    v7 = (_QWORD *)(STACK[0x5068] + 8 * ((((a1 - 5847) | 0x1012u) ^ 0x1FFFFFFFFFFFEF9CLL) + v6));
  else
    v7 = (_QWORD *)(STACK[0x5060] + 8 * (v5 & 0x3F));
  *v7 = a2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((15496 * (v3 + 1 <= (*(_DWORD *)(v4 + 1780) ^ 0x8D2D9467) - a3)) ^ a1)))();
}

uint64_t sub_100B1075C(uint64_t a1, uint64_t a2)
{
  int v2;

  *(_DWORD *)STACK[0x6E30] = STACK[0x9268];
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (v2 + 4759)))(a1, a2, STACK[0xC768]);
}

uint64_t sub_100B107A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(void);

  STACK[0xC768] = a3 - 1920;
  return v3();
}

uint64_t sub_100B107D8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x3F9C]) ^ (1488 * (v0 == -1926392729))))
                            - 4))();
}

uint64_t sub_100B1082C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((15747
                                * ((LODWORD(STACK[0x72B4])
                                                + ~(LODWORD(STACK[0x756C]) + LODWORD(STACK[0x8EC8]))) > 2)) ^ LODWORD(STACK[0x43D4]))))();
}

uint64_t sub_100B108FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                                                                                       - 12))(a1 - 3, a2, a3, a4, 4158728987, 127597814);
}

uint64_t sub_100B10954(uint64_t a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a1 == 0) * v2) ^ v1)) - 12))(a1 - 1);
}

uint64_t sub_100B109B4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 2836)))();
}

uint64_t sub_100B109CC@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;

  STACK[0x6AC0] = a1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v1 + 10489) ^ (28199 * (v2 != 0)))))();
}

uint64_t sub_100B10A70()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 13392)))(v1);
}

uint64_t sub_100B10AD0(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * (((2 * (v2 == 0)) | (16 * (v2 == 0))) ^ v1)))((a1 + 1));
}

uint64_t sub_100B10B48()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 10489)))();
}

uint64_t sub_100B10B60()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((113 * (v0 == v1 - 4214)) ^ (v1 + 13243))))();
}

uint64_t sub_100B10BE8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 19101)))();
}

uint64_t sub_100B10C08()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (((v2 + 1 != v0) * v4) ^ (v1 + v3))))(6378);
}

uint64_t sub_100B10CA4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B10D30@<X0>(uint64_t a1@<X8>)
{
  int v1;

  STACK[0xC768] = a1 - 256;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100B10DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v8;
  int v9;

  v9 = STACK[0xA4C0];
  STACK[0xC768] = a8 - 256;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((29489 * (((v8 + 1) ^ (v9 == LODWORD(STACK[0x974C]))) & 1)) ^ (v8 + 5892))))(a1, a2, a3, a4, a5, a6, a7, 3589933888);
}

uint64_t sub_100B10E5C()
{
  int v0;

  LODWORD(STACK[0xDF2C]) = 1926417709;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 2356)))();
}

uint64_t sub_100B10E8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;

  v6 = a1 - 463;
  *(_DWORD *)STACK[0x47D0] = v5 - 5946 + ((43 * ((a1 - 463) ^ 0x550D) + 1012057797) & 0xC3AD3FFF);
  v7 = v5 & 0x3F;
  v8 = 8 * (v5 & 0x3F);
  v9 = (_QWORD *)(STACK[0x5060] + v8);
  v10 = v8 + STACK[0x5068] - 176;
  if (v7 >= 0x16)
    v11 = (_QWORD *)v10;
  else
    v11 = v9;
  *v11 = a4 & 0xFFFF79D893727070;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 ^ (23 * (v4 == 0)))) - 8))();
}

uint64_t sub_100B10F3C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v6 = STACK[0x9B98];
  *(_QWORD *)v6 = v3 + *(unsigned int *)(v2 + 1776);
  *(_DWORD *)(v6 + 8) = v1 - *(_DWORD *)(v2 + 1776);
  *(_DWORD *)(v6 + 12) = 0;
  *(_QWORD *)(v6 + 16) = v5;
  *(_DWORD *)(v6 + 24) = a1;
  *(_DWORD *)(v6 + 28) = 4;
  *(_QWORD *)(v6 + 32) = v5 + a1;
  *(_DWORD *)(v6 + 40) = *(_DWORD *)(v2 + 1776) - (a1 + v1) + (*(_DWORD *)(v2 + 1780) ^ 0x8D2D9467);
  *(_DWORD *)(v6 + 44) = 3;
  v7 = STACK[0x8CDC];
  v8 = STACK[0x75A0];
  *(_QWORD *)v8 = v3 + ((602 * (v4 ^ 0x173C)) ^ LODWORD(STACK[0x8CDC]) ^ 0x8D2D8411) - a1;
  *(_DWORD *)(v8 + 8) = a1;
  *(_DWORD *)(v8 + 12) = 9;
  v9 = STACK[0x7678];
  *(_QWORD *)(v9 - 0x55058F428EADA74CLL) = v3;
  *(_DWORD *)(v9 - 0x55058F428EADA744) = v7;
  v10 = STACK[0x8F08];
  *(_QWORD *)v10 = v6;
  *(_DWORD *)(v10 + 8) = 3;
  *(_QWORD *)(v10 + 16) = v8;
  *(_DWORD *)(v10 + 24) = 1;
  *(_QWORD *)(v9 - 0x55058F428EADA73CLL) = v10;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v4))();
}

uint64_t sub_100B11058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9)
{
  int v9;
  __n128 v10;

  v10.n128_u64[0] = 0x9292929292929292;
  v10.n128_u64[1] = 0x9292929292929292;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v9 + 6547)) - 8))(a1, a2, a3, a4, a5, 6518, a6, a7, a8, a9, v10);
}

uint64_t sub_100B11090(double a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t *v24;

  v21 = (((v14 ^ v20) * v19) ^ v18) & v16;
  v22 = veorq_s8(veorq_s8(*(int8x16_t *)(v11 + v21), *(int8x16_t *)(v12 + v21)), a5);
  v23 = veorq_s8(veorq_s8(*(int8x16_t *)(v11 + v21 + 16), *(int8x16_t *)(v12 + v21 + 16)), a5);
  v24 = (int8x16_t *)(v13 + v21);
  *v24 = v22;
  v24[1] = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v15 != v16) * v17) ^ (v14 + a11))) - 8))();
}

uint64_t sub_100B110F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((433 * (((a6 == v6) ^ (v7 + 6)) & 1)) ^ v7))
                                                                                       - 8))(a1, a2, a3, a4, a5, 118);
}

uint64_t sub_100B11140@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((6422
                                          * (((((((v1 & 0x7EA456B7) - 1144145977) & 0x443215F7) - 1748001022) ^ 0x97CFAF60) & a1) == 0)) ^ v1 & 0x7EA456B7u))
                            - 8))();
}

uint64_t sub_100B111A0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 871)) - 12))();
}

uint64_t sub_100B111B4@<X0>(char a1@<W3>, char a2@<W5>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 v6;
  char v7;
  int v8;
  char v9;
  int v10;

  *(_BYTE *)(v5 + v6) = *(_BYTE *)(v3 + v6) ^ *(_BYTE *)(v4 + v6) ^ (v7 + v9) & a1 ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a3 <= (unsigned __int16)(v6 + 1)) * v10) ^ v8)) - 12))();
}

uint64_t sub_100B111FC()
{
  int v0;
  _BYTE *v1;
  _BOOL4 v2;

  v1 = (_BYTE *)STACK[0x98E0];
  *v1 = -110;
  v2 = STACK[0xAB58] - 0x6A91553144A2481ELL > (unint64_t)(v1 + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 | (8 * v2)) ^ v0)) - 12))();
}

uint64_t sub_100B113AC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((214
                                * ((((v4 ^ 0x1AC82E71) + 675085457) ^ ((v4 ^ 0x8B651A5B) - 1181628229) ^ (((((v3 - 13560) | 0x2102) - 1184543861) ^ v4) - 1953386511))
                                 - 407712618 != a3)) ^ v3)))();
}

uint64_t sub_100B11450(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;
  unsigned int v12;

  v11 = v7 < a3;
  *(_BYTE *)(v3 + v5) = *(_BYTE *)(v4 + v5);
  v12 = v5 + 1;
  if (v11 == v12 > v9)
    v11 = v12 + a3 < v7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v11 * ((v6 + v8) ^ v10)) ^ v6)))();
}

uint64_t sub_100B114A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                + 8
                                                                                * ((((v5 ^ ((v4 - 9208) | 0x1002) ^ 0x28C878BD) != 0)
                                                                                  * (v4 - 14107)) ^ v4)))(a1, a2, a3, a4, 383416857);
}

uint64_t sub_100B114F4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((v0 ^ ~(1511 * ((v1 - 17780) ^ 0xB)) | (v1 - 17780)) & (v0 - (v1 - 17780)) | (v1 - 17780) & ~v0) >= 0)
                                               * ((v1 + 244896643) & 0xF166F776 ^ 0x3771)) ^ (v1 - 13255)))
                            - 8))();
}

uint64_t sub_100B11570@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((123
                                          * ((((unint64_t)(a1 - 0x6A91553144A2481FLL + v2) < 0x20) ^ (v1 + 58) & 0xF7) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100B115E8(int a1)
{
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v1 >= ((a1 + 8091) ^ 0x54A2u)) * (((a1 - 13447) | 0x1016) ^ 0x1066)) ^ a1))
                            - 12))();
}

uint64_t sub_100B11634()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 3899)) - 4))((v0 & 0xFFFFFFE0) - 32);
}

uint64_t sub_100B11654(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v8 = v2 + v5;
  v9 = *(_OWORD *)(v8 - 31);
  v10 = v1 + v5;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a1 == 0) * ((v4 + v6) ^ v7)) ^ v3))
                                          - 4))(a1 - 32);
}

uint64_t sub_100B116A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((844 * (((v1 == v0) ^ (3 * (v2 ^ 0x25))) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_100B116E8()
{
  char v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (14373 * ((v0 & 0x18) != 0))))
                            - 49 * ((v1 + 1172000262) & 0xBA24F4C6 ^ 0x54D4)
                            + 4206))();
}

uint64_t sub_100B11740()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B11764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  *(_QWORD *)(a2 + (~(_DWORD)v7 + v6)) = *(_QWORD *)(v10 + (~(_DWORD)v7 + v6));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v7 + v11 + ((v8 + v13) | a6) == v9) * v12) ^ v8)))();
}

uint64_t sub_100B117A0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ (17527 * (v2 == v1)))) - ((a1 - 323) | 4u) + 4206))();
}

uint64_t sub_100B117DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5918)) - 8))();
}

uint64_t sub_100B117F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;

  v14 = v11 - 1;
  *(_BYTE *)(v8 + v14) = *(_BYTE *)(v9 + v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v14 == (v12 + v13) + a7) * a8) ^ v10))
                            - 8))();
}

uint64_t sub_100B1182C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = STACK[0x9C08] <= v0 + (unint64_t)(v2 - 991) + v1 - 0x3C320111D737E46CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * v3) | (16 * v3)) ^ v2)) - (v2 ^ 0x7E77u) + 20453))();
}

uint64_t sub_100B118AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (((((v5 - 16347) | 0x228) + 3521) * (v6 != a5)) ^ v5))
                                          - 4))(36);
}

uint64_t sub_100B118F8()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((78
                                          * (v0 < ((v1 - 1838322255) & 0x6D92D2FB ^ 0xFFFFBD79) + ((v1 - 510) | 0x36))) ^ v1))
                            - 8))();
}

uint64_t sub_100B11950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v3 ^ (495 * ((unint64_t)(a1 - v1 + 0x3C320111D737B6C4 + v2) > 0x1F))))
                            - (v3 ^ 0x52E7)))();
}

uint64_t sub_100B119A4()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v1 - 17131) | 0x448) - 978) ^ 0x105A) * (v0 > 0x1F)) ^ ((v1 - 17131) | 0x448)))
                            - (((v1 - 17131) | 0x448u)
                             - 40)
                            + 5144))();
}

uint64_t sub_100B119F0(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  int v4;
  __n128 v5;
  __n128 v6;

  v5.n128_u64[0] = 0x2424242424242424;
  v5.n128_u64[1] = 0x2424242424242424;
  v6.n128_u64[0] = 0x9292929292929292;
  v6.n128_u64[1] = 0x9292929292929292;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8]
                                                                                             + 8 * (v4 + 597))
                                                                                 - 12))(a1, a2, a3, a4, v5, v6);
}

uint64_t sub_100B11A38(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  uint64_t v20;
  int8x16_t v21;
  int8x16_t v22;

  v15 = (v14 + v11);
  v16 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 15));
  v17 = vextq_s8(v16, v16, 8uLL);
  v18 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 31));
  v19 = vextq_s8(v18, v18, 8uLL);
  v20 = v9 + v15;
  v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a5)), a6));
  *(int8x16_t *)(v20 - 15) = vextq_s8(v21, v21, 8uLL);
  v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a5)), a6));
  *(int8x16_t *)(v20 - 31) = vextq_s8(v22, v22, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v13 == v11) * a9) ^ v12)) - 12))();
}

uint64_t sub_100B11AB8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((((((v1 + 426) | 0x50) ^ 0xFFFFC854)
                                                              + ((v1 + 4034) | 0x681))
                                                             * (a1 == v2)) ^ (v1 + 7428)))
                                          - 12))(36);
}

uint64_t sub_100B11B14()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((1592
                                          * ((((322 * (v0 ^ 0x1260)) ^ 0x1438) & v1) != ((v0 - 506) ^ 0x1076))) ^ v0))
                            - 8))();
}

uint64_t sub_100B11B64(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  int v4;

  a3.n128_u16[0] = 9252;
  a3.n128_u8[2] = 36;
  a3.n128_u8[3] = 36;
  a3.n128_u8[4] = 36;
  a3.n128_u8[5] = 36;
  a3.n128_u8[6] = 36;
  a3.n128_u8[7] = 36;
  a4.n128_u16[0] = -28014;
  a4.n128_u8[2] = -110;
  a4.n128_u8[3] = -110;
  a4.n128_u8[4] = -110;
  a4.n128_u8[5] = -110;
  a4.n128_u8[6] = -110;
  a4.n128_u8[7] = -110;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8))(a1, a2, a3, a4);
}

uint64_t sub_100B11BAC(double a1, double a2, int8x8_t a3, int8x8_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, int a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x8_t v16;

  v15 = (a7 + 10 * (v11 ^ a8) - 506) & (v10 + v12);
  v16 = vrev64_s8(*(int8x8_t *)(v13 + v15));
  *(int8x8_t *)(v14 + v15) = vrev64_s8(vadd_s8(vsub_s8(v16, vand_s8(vadd_s8(v16, v16), a3)), a4));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 + v12 != 7) * a9) ^ v11)) - 8))();
}

uint64_t sub_100B11C10@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ (12783 * (v1 == v2))))
                                          - ((a1 ^ 0x206u)
                                           + 5699)
                                          + 9905))(36);
}

uint64_t sub_100B11C58()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 7415)))();
}

uint64_t sub_100B11C6C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v5 = ((v4 + 5699) ^ 0xFFFFD946) & (v3 - 1);
  *(_BYTE *)(v1 + v5) = *(_BYTE *)(v2 + v5) - (a1 & (2 * *(_BYTE *)(v2 + v5))) - 110;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((14397 * (v5 != 0)) ^ (v4 + 1242))))();
}

uint64_t sub_100B11CC4(uint64_t a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * ((25543
                                                                 * ((((v2 ^ 0xF308234F) - 1234037859) ^ ((v2 ^ 0xAECFF37D) - 340409425) ^ (((23 * (v1 ^ 0x2C08) + 1260225394) ^ v2) + 241670905)) != 1403013835)) ^ v1))
                                                   - 12))(a1, 36);
}

uint64_t sub_100B11D70@<X0>(char a1@<W1>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  *(_BYTE *)(v3 + v2) = *(_BYTE *)(v4 + v2) - (a1 & (2 * *(_BYTE *)(v4 + v2))) - 110;
  v6 = v2 - 9912 + ((v5 - 11166) | 0x24B0);
  v7 = v2 - 1673741325 < a2;
  if (a2 < 0x9C3CBBF2 != v6 > 0x63C3440D)
    v7 = a2 < 0x9C3CBBF2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25543 * v7) ^ v5)) - 12))();
}

uint64_t sub_100B11E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((29489 * ((((STACK[0x6508] + 2356) ^ (LODWORD(STACK[0x9A04]) == LODWORD(STACK[0x974C]))) & 1) == 0)) ^ LODWORD(STACK[0x2CA8]))))(a1, a2, a3, a4, a5, a6, a7, 3589933888);
}

uint64_t sub_100B11E74()
{
  int v0;
  int v1;

  LODWORD(STACK[0xDF2C]) = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v1 == 11 * (v0 ^ 0x18A9) - 1926395578) * (((v0 ^ 0x18A9) + 3955) ^ 0x5F72)) ^ v0)))();
}

uint64_t sub_100B11EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 ^ 0x33B2)) - ((v6 - 1326701415) & 0x4F13FDED) + 11684))(STACK[0x7408], a2, a3, a4, a5, a6, 3537203550);
}

uint64_t sub_100B11FA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((8
                                           * (((((v2 - 49) ^ 0xD1) + 1) ^ (a2 > a1
                                                                                               + v3
                                                                                               - 0x24D7084E6EA5C563)) & 1)) & 0xBF | ((((((v2 - 49) ^ 0xD1) + 1) ^ (a2 > a1 + v3 - 0x24D7084E6EA5C563)) & 1) << 6)) ^ v2))
                            - 8))();
}

uint64_t sub_100B11FF8()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v0 ^ 0x31254BE7 ^ (v1 - 9473)) == 0) * ((v1 - 1283) ^ 0x307E)) ^ v1))
                            - 12))();
}

uint64_t sub_100B1203C()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27859 * (v0 >= ((v1 - 12366) | 0x1050u) - 4206)) ^ v1))
                            - 12))();
}

uint64_t sub_100B1207C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((241
                                          * ((((unint64_t)(0x24D7084E6EA5C563 - v3 - a1 + a2) < 0x20) ^ (17 * (v2 ^ 0xC9))) & 1)) ^ v2))
                            - ((2107 * (v2 ^ 0x3076u)) ^ 0x107ALL)))();
}

uint64_t sub_100B120EC()
{
  unsigned int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v1 - 3534) ^ 0x429C) * (v0 > 0x1F)) ^ v1)))();
}

uint64_t sub_100B12118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((v3 ^ 0x52C9) + 516)))(a1, a2, a3, 757784572);
}

uint64_t sub_100B12144@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v10 = a4 + v7;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a1 + v7 + v4;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v8 == 0) * ((a3 + v5 - 2757) & a2 ^ v9)) ^ v6)))();
}

uint64_t sub_100B12198()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((v2 ^ (v1 == v0)) & 1) == 0) * (v2 - 22255)) ^ v2)))();
}

uint64_t sub_100B121C8()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((54 * (((((v1 - 18070) ^ 0x52C9) - 17063) & v0) == 0)) ^ (v1 - 1663))))();
}

uint64_t sub_100B12208(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))(a1, a1 - 7);
}

uint64_t sub_100B12258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (v12 + ((v9 + a5) | a6) + 793) & (v7 + v8);
  *(_QWORD *)(a2 + v13 + v6) = *(_QWORD *)(v11 + v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * (v10 + v8 != 7)) | (32 * (v10 + v8 != 7))) ^ v9))
                            - 8))();
}

uint64_t sub_100B122A8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 | (1289 * (v2 == v0))))
                            - (((v1 - 8190) + 4) ^ v1 ^ 0x2002u)))();
}

uint64_t sub_100B122E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6145)) - 8))();
}

uint64_t sub_100B122FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;

  v5 = v3 - 1;
  *(_BYTE *)(a1 + v5 + v2) = *(_BYTE *)(a2 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15307 * (v5 != 0)) ^ (v4 + 838))) - 8))();
}

uint64_t sub_100B12334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((26
                                          * ((((v8 ^ 0xCE57148B) - 1095001670) ^ ((v8 ^ 0xE54DEFA6) - 1784585579) ^ ((v8 ^ (v9 + 705028569) & (a8 + 4022) ^ 0x1A3FB0CA) + 1792224655)) == 1103746724)) ^ v9))
                            - 8))();
}

uint64_t sub_100B123D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  unsigned int v7;

  v6 = v3 < 0xF15B229B;
  *(_BYTE *)(a1 + v4 + v2) = *(_BYTE *)(a2 + v4);
  v7 = v4 + 1;
  if (v6 == v7 > 0xEA4DD64)
    v6 = v7 - 245685605 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26 * !v6) ^ v5)) - (((v5 - 884) | 0x44u) ^ 0x107ELL)))();
}

uint64_t sub_100B1245C()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 310)) - 8))(5121);
}

uint64_t sub_100B124F8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 4070)) - 8))();
}

uint64_t sub_100B12520()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 9898)) - 4))();
}

uint64_t sub_100B12548()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((27 * (STACK[0x6508] ^ 0x1073)) ^ 0x4B) * LOBYTE(STACK[0xE413])) ^ LODWORD(STACK[0x31A4])))
                            - 8))();
}

uint64_t sub_100B1258C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v6 + 6480) ^ v6))
                                                                                                - 12))(2959752912, 216, 1335218521, 12646, 5750, a6, 26365);
}

uint64_t sub_100B12624()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1389)) - 8))();
}

uint64_t sub_100B12648()
{
  _BOOL4 v0;

  v0 = LODWORD(STACK[0xDF2C]) == ((73 * (STACK[0x6508] ^ 0x10BB)) ^ 0x8D2DAE12);
  if ((LODWORD(STACK[0x862C]) ^ (LODWORD(STACK[0xC014]) - 268834918 + LODWORD(STACK[0x8CEC]))) != 0x8D2D9467)
    v0 = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((29 * v0) ^ (STACK[0x6508] + 2356))))();
}

uint64_t sub_100B126FC@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x8C08]) = v1;
  STACK[0xCB88] = STACK[0x7408];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - (a1 ^ 0x2A03u) + 4202))();
}

uint64_t sub_100B12740()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26787 * (STACK[0x7408] != 0)) ^ (v0 + 10751))) - 12))();
}

uint64_t sub_100B12770()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B1278C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((2 * (STACK[0x7988] != 0)) | (16 * (STACK[0x7988] != 0))) ^ (v0 + 12657))))();
}

uint64_t sub_100B127B8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B127D0()
{
  int v0;
  _BOOL4 v2;

  v2 = *(_DWORD *)(STACK[0x7FB0] - 0x28623712C9340CDELL) != -1926392733 || STACK[0xC7D8] == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v2 * (((v0 ^ 0xAC0172A0) + 1409196874) ^ (v0 - 2665))) ^ (v0 + 14996)))
                            - 8))();
}

uint64_t sub_100B1284C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * ((12998 * (v0 == ((v0 - 2081061625) & 0xD0091E2F ^ 0xB5F32B89))) ^ (v0 + 1409199831))))(v1);
}

uint64_t sub_100B128B4()
{
  int v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xD4DC]) = v1;
  v2 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x1389)) - 4941 * (v0 ^ 0x60Eu) + 14815))(5121);
}

_QWORD *sub_100B12960@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x7AA8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) + (a1 - 1152) - 1066;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * (a1 + 2544)) - 4))(&STACK[0xA450]);
}

uint64_t sub_100B12990()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((*(_DWORD *)(v1 + 3744) + 1) >= *(_DWORD *)(STACK[0x56C8] + 16))
                                          * (((v0 ^ 0x203C) + 16715) ^ 0x537E)) ^ v0))
                            - 8))();
}

uint64_t sub_100B129DC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL4 v8;

  *(_DWORD *)(v3 + 3748) = v1;
  v5 = *(_DWORD *)(v4 + 20);
  v6 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v3 + 3752) = v6;
  v8 = v5 != a1 && v6 != 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v8 * (v2 ^ 0x4DD ^ (v2 - 15695) ^ 0x4175)) ^ v2)))();
}

uint64_t sub_100B12A28()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v1 + 16) == ((v0 + 1356843180) ^ 0x50DFDEEB))
                                          * ((301 * (v0 ^ 0x1631)) ^ 0x1009)) ^ v0))
                            - 8))();
}

uint64_t sub_100B12A80@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = !v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(((((v1 - 5355) ^ 0xFFFFAC73) + (v1 ^ 0x4548)) * v4) ^ v1)))();
}

uint64_t sub_100B12ABC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((2 * v1) ^ 0x94A6) - 2487) * (v2 == a1)) ^ v1))
                            - (v1 + 6638)
                            + 23626))();
}

uint64_t sub_100B12AFC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0xFE3C]) = 2 * a1;
  v3 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))STACK[0x43D8])((a1 << ((((v1 + 60) | 8) - 24) ^ 0x87)), 50, 1970597460);
  *(_QWORD *)(v2 + 24) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((221 * (v3 == 0)) ^ v1)) - 4))();
}

uint64_t sub_100B12B7C()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8 * (((*(_DWORD *)(STACK[0x56C8] + 16) == 0) * (v0 - 19232)) ^ v0))
                         - 4);
  LODWORD(STACK[0xF9B4]) = v0;
  STACK[0xF9B8] = 0;
  return v1();
}

uint64_t sub_100B12BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(v1 + 2608);
  *(_QWORD *)(v1 + 2616) = v2;
  v3 = *(_DWORD *)(v1 + 2604);
  *(_DWORD *)(v1 + 2624) = v3;
  *(_DWORD *)(v1 + 2628) = 5242 * (v3 ^ 0x4B9E);
  v2 *= 16;
  v4 = *(_QWORD *)(v1 + 3752) + v2;
  *(_QWORD *)(v1 + 2632) = v4;
  v5 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 2640) = v5;
  *(_QWORD *)(v1 + 2648) = v5 + v2;
  *(_QWORD *)(v1 + 2536) = v4 + 8;
  v6 = STACK[0x6AD8];
  *(_QWORD *)(v1 + 2520) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v3 + 6793)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v3 + 6833)) - 12))();
}

uint64_t sub_100B12C50()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x43D8])(160, 50, 3135243905);
  *(_QWORD *)(STACK[0x56C8] + 24) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == 0) * ((v0 - 421) ^ 0x102E)) ^ v0))
                            - (v0 - 409)
                            + 4218))();
}

uint64_t sub_100B12CC0()
{
  int v0;
  uint64_t (*v1)(void);

  *(_QWORD *)(STACK[0x56C8] + 16) = 10;
  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12808)) - 12);
  LODWORD(STACK[0xF994]) = v0;
  STACK[0xF998] = 0;
  return v1();
}

uint64_t sub_100B12CF4()
{
  _DWORD *v0;
  int v1;
  int v2;

  v1 = v0[633];
  v2 = STACK[0xA450];
  v0[641] = STACK[0xA450];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != v2) * (v0[640] ^ 0x3274)) ^ v0[638])) - 8))();
}

uint64_t sub_100B12D44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 2640) + 16 * *(_QWORD *)(v0 + 2616) + 8;
  *(_DWORD *)(v0 + 220) = *(_DWORD *)(v0 + 2532);
  v2 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x58C0] + 7664)) - 8;
  *(_QWORD *)(v0 + 208) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (LODWORD(STACK[0x59BC]) + 7267)) - 4))();
}

uint64_t sub_100B12DAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 2640) + 16 * *(_QWORD *)(v0 + 2616) + 12;
  *(_DWORD *)(v0 + 220) = *(_DWORD *)(v0 + 2532);
  v2 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x5B6C]) + 22202));
  *(_QWORD *)(v0 + 208) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (LODWORD(STACK[0x59F8]) + 5477)) - 4))();
}

uint64_t sub_100B12E18()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t (*v4)(void);

  v2 = 86 * (v0 ^ 0x1671);
  v3 = ((v0 + 1356843179) ^ 0x50DFDEEALL) + *(_QWORD *)(v1 + 2712);
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8 * (((v3 < *(unsigned int *)(STACK[0x56C8] + 16)) * (v2 + 8896)) ^ v0))
                         - 8);
  *(_DWORD *)(v1 + 2700) = v2;
  *(_QWORD *)(v1 + 2704) = v3;
  return v4();
}

uint64_t sub_100B12E84()
{
  _DWORD *v0;
  int v1;
  uint64_t (*v2)(void);

  v1 = v0[682];
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((418 * (v0[633] == v1 - 1926398425)) ^ v0[683])) - 4);
  v0[684] = v1;
  return v2();
}

uint64_t sub_100B12ECC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)(v0 + 2736);
  *(_DWORD *)(v0 + 2740) = v1;
  *(_DWORD *)(v0 + 2744) = v1 + 1356843179;
  v2 = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2712) + 8;
  *(_DWORD *)(v0 + 220) = *(_DWORD *)(v0 + 3748);
  v3 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 20737)) - 4;
  *(_QWORD *)(v0 + 208) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x7002)) - 4))();
}

uint64_t sub_100B12F40()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  STACK[0xC048] = 0x28623712C9340FB6;
  *(_QWORD *)(STACK[0xA940] + 112) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 4589))
                            - (((_DWORD)v0 + 1493806981) & 0xA6F6795F ^ 0x3957)))();
}

uint64_t sub_100B12FBC()
{
  int v0;
  int v1;

  LODWORD(STACK[0xB348]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((4 * ((((v0 - 8539) ^ (STACK[0xC048] == 0x28623712C9340FB6)) & 1) == 0)) & 0xDF | (32 * (((v0 - 91) ^ ~(STACK[0xC048] == 0x28623712C9340FB6)) & 1)) | v0))
                            - ((v0 - 7078) ^ 0x1DB9)))();
}

uint64_t sub_100B13038()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_QWORD *)(v1 - 0x28623712C9340CD6);
  v3 = *(_QWORD *)STACK[0x47B0] - 0x3FFB7A8A24C4637CLL;
  v4 = v3 < 0x4E6586F9;
  v5 = v2 + 1315276537 < v3;
  if (v2 > 0xFFFFFFFFB19A7906 != v4)
    v6 = v4;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v6 * ((v0 ^ 0x5E5) + 8347)) ^ v0)) - 4))();
}

uint64_t sub_100B130CC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = a1 - 4211;
  LODWORD(STACK[0x1D350]) = (a1 + 11429) ^ (509340803 * ((v1 - 852695361 - 2 * ((v1 - 240) & 0xCD2CE7AF)) ^ 0x15BDF29));
  STACK[0x1D360] = (unint64_t)&STACK[0xAEBA];
  LOWORD(STACK[0x1D354]) = (-4989 * ((v1 - 6465 - 2 * ((v1 - 240) & 0xE7AF)) ^ 0xDF29)) ^ 0x7210;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x4808])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 - 12721 + (v2 ^ 0x3930))) - 12))(v3);
}

uint64_t sub_100B13180@<X0>(unsigned int a1@<W8>)
{
  char v1;
  int v2;

  LODWORD(STACK[0x96C0]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((125
                                          * (((a1 < *(_DWORD *)STACK[0x56C8]) ^ (v2 + 97 + v1 + 1)) & 1)) ^ (v2 + 8519)))
                            - ((v2 + 2024140641) & 0x875A3EF8 ^ 0x3ED8)))();
}

uint64_t sub_100B131FC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = 2142736129
     * ((~(STACK[0x38B8] | 0xCCCE0E4EC767E6ELL) + (STACK[0x38B8] & 0xCCCE0E4EC767E6ELL)) ^ 0x4C18C495B1C1C709);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) ^ v3;
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v0 + 427180620) ^ v3;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8
                                                           * ((114 * (*(_DWORD *)STACK[0x4D38] > 0)) ^ (v0 + 4003)))
                                          - ((3 * (v0 ^ 0x1503) + 488173148) & 0xE2E7473F ^ 0x4617)))(v4);
}

uint64_t sub_100B132D8()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v0 != ((49 * (v1 ^ 0x4649)) ^ 0x1077) || *(_QWORD *)STACK[0x4CD8] == 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v3 * (((v1 ^ 0x4649) + 4128) ^ 0x1026)) ^ v1)))();
}

uint64_t sub_100B13328@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int32x2_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0xBC968BC));
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v3 ^ 0xBC968BCu) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3 ^ 0xBC968BCu;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEF08] = 0;
  STACK[0xEF10] = v1;
  v12 = 16777619 * ((197748924 * v11 + 7) ^ (197748924 * v11)) % 7;
  v13 = 16777619 * ((197748924 * v11 + 6) ^ (197748924 * v11)) % 6;
  v14 = 16777619 * ((197748924 * v11 + 5) ^ (197748924 * v11)) % 5;
  v15 = 16777619 * ((197748924 * v11 + 3) ^ (197748924 * v11)) % 3;
  v16 = vdup_n_s32(197748924 * v11);
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEF08] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEF08] | v12) = STACK[0xEF0F];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEF08] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEF08] | v13) = STACK[0xEF0E];
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEF08] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEF08] | v14) = STACK[0xEF0D];
  v20 = STACK[0xEF08];
  LOBYTE(STACK[0xEF08]) = STACK[0xEF0C];
  v21 = *(_BYTE *)((unint64_t)&STACK[0xEF08] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEF08] | v15) = STACK[0xEF0B];
  v22.i32[0] = v16.i32[0];
  v22.i32[1] = 197748924 * v11 + 1;
  LOBYTE(STACK[0xEF0F]) = v17;
  LOBYTE(STACK[0xEF0E]) = v18;
  LOBYTE(STACK[0xEF0D]) = v19;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v16), (int8x8_t)v16);
  LOBYTE(STACK[0xEF0C]) = v20;
  LOBYTE(STACK[0xEF0B]) = v21;
  v24 = STACK[0xEF09];
  LOBYTE(STACK[0xEF0A]) = STACK[0xEF08];
  LOWORD(STACK[0xEF08]) = v24;
  STACK[0xEF08] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEF08], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEF10];
  v26 = (197748924 * STACK[0xEF10]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 32);
  v40 = 3;
  do
  {
    v41 = 8 * v40;
    v42 = 8 * (16777619 * ((v26 + (_DWORD)v40) ^ v26) % v40);
    v43 = *(_QWORD *)(v25 + v42) ^ *(_QWORD *)(v25 + 8 * v40);
    *(_QWORD *)(v25 + v41) = v43;
    v44 = *(_QWORD *)(v25 + v42) ^ v43;
    *(_QWORD *)(v25 + v42) = v44;
    *(_QWORD *)(v25 + v41) = *(_QWORD *)(v25 + 8 * v40) ^ v44;
    v45 = v40-- + 1;
  }
  while (v45 > 2);
  v46 = *((_BYTE *)&STACK[0xEF10] + v12);
  *((_BYTE *)&STACK[0xEF10] + v12) = STACK[0xEF17];
  LOBYTE(STACK[0xEF17]) = v46;
  v47 = *((_BYTE *)&STACK[0xEF10] + v13);
  *((_BYTE *)&STACK[0xEF10] + v13) = STACK[0xEF16];
  LOBYTE(STACK[0xEF16]) = v47;
  v48 = *((_BYTE *)&STACK[0xEF10] + v14);
  *((_BYTE *)&STACK[0xEF10] + v14) = STACK[0xEF15];
  LOBYTE(STACK[0xEF15]) = v48;
  v49 = STACK[0xEF10];
  LOBYTE(STACK[0xEF10]) = STACK[0xEF14];
  LOBYTE(STACK[0xEF14]) = v49;
  v50 = *((_BYTE *)&STACK[0xEF10] + v15);
  *((_BYTE *)&STACK[0xEF10] + v15) = STACK[0xEF13];
  LOBYTE(STACK[0xEF13]) = v50;
  v51 = STACK[0xEF11];
  LOBYTE(STACK[0xEF12]) = STACK[0xEF10];
  LOWORD(STACK[0xEF10]) = v51;
  STACK[0xEF10] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEF10], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x4CD8] = STACK[0xEF10] ^ STACK[0xEF08];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 13785)))();
}

uint64_t sub_100B13720()
{
  int v0;
  int v1;
  _DWORD *v2;

  *v2 = v0 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 4015)) - 3 * (v1 ^ 0x15F7u) + 4219))();
}

uint64_t sub_100B13750()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v4 = STACK[0x38B0];
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ STACK[0x38B0];
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v3 ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((510 * (*(_QWORD *)STACK[0x4D18] == 0)) ^ 0x2CF4u))
                                          - 12))(v5);
}

uint64_t sub_100B137C8@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = v1;
  v4 = (v1 + 3089) | 0x121;
  v5 = STACK[0x6AD8];
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  v7 = 2142736129
     * ((0x3C3797AF9D2E1CF0 - ((v2 - 240) | 0x3C3797AF9D2E1CF0) + STACK[0x3178]) ^ 0xBED3605C01897706);
  LODWORD(STACK[0x1D358]) = (v3 + 427180619) ^ v7;
  STACK[0x1D350] = a1;
  STACK[0x1D360] = v6 ^ v7;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v4 + 8148) ^ v3)) - 12))(v8);
}

uint64_t sub_100B13874()
{
  int v0;

  *(_QWORD *)STACK[0x47B0] = *(_QWORD *)(STACK[0xC048] - 0x28623712C9340CD6) + STACK[0x88D8] + 0x3FFB7A8A7329EA75;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0)
                                          - ((v0 - 1381) ^ 0x1854)))(5121);
}

uint64_t sub_100B138E4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21100 * (LOBYTE(STACK[0x8BDF]) == 1)) ^ a1))
                            - (a1 + 19335)
                            + 25551))();
}

uint64_t sub_100B13924@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19881 * (STACK[0xA4E0] != 0x55058F428EADAA34)) ^ a1))
                            - ((((a1 - 6128) | 0x1004u) + 21363) ^ 0x63DFLL)))();
}

uint64_t sub_100B13988()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = 1872284299
     * ((0xA320187C36F5282BLL - ((v2 - 240) | 0xA320187C36F5282BLL) + STACK[0x38E8]) ^ 0xC576DC04EA7B7839);
  STACK[0x1D358] = v0;
  STACK[0x1D350] = v4 - v5 - 8;
  LODWORD(STACK[0x1D364]) = v5 + v1 + 1037162758;
  ((void (*)(uint64_t))STACK[0x48F8])(v2 - 240);
  STACK[0xA4E0] = 0x55058F428EADAA34;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (int)(v1 ^ 0x834)) - (v1 ^ 0x106CLL)))(5121);
}

uint64_t sub_100B13A5C()
{
  int v0;
  _BOOL4 v1;

  v1 = LODWORD(STACK[0xB348]) == -1926392729;
  LOBYTE(STACK[0xA14F]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 * ((v0 - 22997) ^ 0xDC8)) ^ v0))
                            - ((v0 + 202677236) & 0xF3EB3ABD ^ 0x3A8DLL)))();
}

uint64_t sub_100B13ACC@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0xA940];
  *(_QWORD *)(v1 + 96) = STACK[0xCB88];
  *(_DWORD *)(v1 + 104) = STACK[0x8C08];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 - 178119352) & 0xA9DBEFE) + 5836))();
}

uint64_t sub_100B13B40@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8295 * ((v1 ^ (a1 + 1)) & 1)) ^ a1)))();
}

uint64_t sub_100B13B6C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B13BFC()
{
  return ((uint64_t (*)(void))STACK[0xA6C8])();
}

uint64_t sub_100B13C0C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6E80];
  STACK[0x99D8] = *(_QWORD *)(STACK[0x6E80] + 96);
  LODWORD(STACK[0xA44C]) = *(_DWORD *)(v2 + 104);
  STACK[0xA9F0] = *(_QWORD *)(v2 + 112);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30440 * (v0 == (((_DWORD)v1 + 4527) ^ 0x8D2DB642))) ^ LODWORD(STACK[0x3400])))
                            - 8))();
}

uint64_t sub_100B13C8C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  int v4;

  v2 = STACK[0xD190];
  LODWORD(STACK[0xE054]) = STACK[0xB4C4];
  STACK[0x9270] = v2;
  STACK[0x8418] = v1;
  STACK[0x9E28] = 0;
  STACK[0xA868] = 0;
  LODWORD(STACK[0xCD2C]) = -1926392729;
  if (v2)
    v3 = v1 == 0;
  else
    v3 = 1;
  v4 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 * (((a1 - 8723) | 0x1064) - 4095)) ^ a1)) - 8))();
}

uint64_t sub_100B13D3C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;

  v3 = a1 + 2844;
  v4 = (((v2 ^ 0x99C9708F) + ((a1 - 6692) | 0x224) + 1714849100) ^ ((v2 ^ 0x9743518E) + 1757195890) ^ ((v2 ^ (49 * ((a1 + 2844) ^ 0x2D17)) ^ 0x83A7A510) + 2086161050))
     - 233680687;
  v5 = (v4 ^ 0xDBD3035B) & (2 * (v4 & 0x9B1B439B)) ^ v4 & 0x9B1B439B;
  v6 = ((2 * (v4 ^ 0xEFC1825D)) ^ 0xE9B5838C) & (v4 ^ 0xEFC1825D) ^ (2 * (v4 ^ 0xEFC1825D)) & 0x74DAC1C6;
  v7 = v6 ^ 0x144A4042;
  v8 = (v6 ^ 0x60900084) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xD36B0718) & v7 ^ (4 * v7) & 0x74DAC1C4;
  v10 = (v9 ^ 0x504A0106) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x2490C0C6)) ^ 0x4DAC1C60) & (v9 ^ 0x2490C0C6) ^ (16 * (v9 ^ 0x2490C0C6)) & 0x74DAC1C0;
  v12 = v10 ^ 0x74DAC1C6 ^ (v11 ^ (v1 + 126)) & (v10 << 8);
  v13 = v4 ^ (2
            * ((v12 << 16) & 0x74DA0000 ^ v12 ^ ((v12 << 16) ^ 0x41C60000) & (((v11 ^ 0x3052C186) << 8) & 0x74DA0000 ^ 0x241A0000 ^ (((v11 ^ 0x3052C186) << 8) ^ 0xDAC10000) & (v11 ^ 0x3052C186))));
  LODWORD(STACK[0xE058]) = v13 ^ 0x7E075470;
  v14 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v13 ^ 0xF32AC017);
  STACK[0x9E28] = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5749 * (v14 != 0)) ^ v3)) - 12))();
}

uint64_t sub_100B13F74(_BYTE *a1)
{
  char v1;
  int v2;

  *a1 = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 1927))
                                          - ((v2 - 1240573304) ^ 0xB60E64A5)))(5121);
}

uint64_t sub_100B13FF0()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xAFF8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + ((v0 + 9987) | 0x252u) - 13155;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x16D8)))();
}

uint64_t sub_100B14048@<X0>(unsigned int a1@<W8>)
{
  int v1;

  STACK[0x9518] = (((v1 - 11866) - 0x600881003121708DLL) ^ a1)
                + ((2 * a1) & 0x19DBD3FD2)
                + 0x6DDF8DD9B32D6BFFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100B140E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 18319)) - ((v0 - 3124) | 0x2031u) + 9327))();
}

uint64_t sub_100B14114@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;

  STACK[0x94A0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((a1 != 0x28623712C9340FB6) * (((v1 - 5151) | 0x22) - 3970)) ^ v1))
                            - ((v1 + 9106) | 0x1000u)
                            + 22529))();
}

uint64_t sub_100B14180()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x8060] = *(_QWORD *)(v2 - 0x28623712C9340CC6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((*(_QWORD *)(v2 - 0x28623712C9340CD6) < v0)
                                               * (((v1 + 1863182218) & 0x90F1FFF5) + ((v1 - 13202) ^ 0xFFFFDCC1))) ^ v1))
                            - 4))();
}

uint64_t sub_100B14200()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0xBBF4]) = *(_DWORD *)(v2 - 0x28623712C9340FB6);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v1 ^ 0x2FF3) + 11487) ^ 0x3D6B) * (v0 == 0x28623712C9340FB6)) ^ v1)))();
}

uint64_t sub_100B14264()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B142B8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14547)) - 8))();
}

uint64_t sub_100B142E0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B14310@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  unint64_t v3;

  *v2 = a1;
  v3 = STACK[0x6AD8];
  STACK[0xAFF8] = ((v1 + 125526881) & 0xF884BF7F ^ 0xFFFFFFFFFFFFCCABLL)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 1644));
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 + 3172)))();
}

uint64_t sub_100B1436C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  STACK[0x7648] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((21392 * (((v2 == v1) ^ (v0 + 32)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_100B143A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v1 & ~((((v0 - 8929) ^ 0x5852) - 14254) ^ (*(_QWORD *)(v2
                                                                                                  - 0x28623712C9340D26) == 0)))
                                          * ((v0 - 8929) ^ 0x107B)) ^ (v0 - 8929) ^ 0x5852))
                            - 4))();
}

uint64_t sub_100B14404()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14254)) - 4))(v1);
}

uint64_t sub_100B1442C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((*(_QWORD *)(v1 - 0x28623712C9340EDELL) != 0x30831D73E345A1C2)
                                     * (((4886 * (a1 ^ 0x1074)) ^ 0x591C54EA) + ((a1 + 610498794) | 0x82800402))) ^ (a1 + 1432))))();
}

uint64_t sub_100B144A8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  v2 = sub_10009A7A4(a1 - 0x30831D73E345A1C2);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * (int)(v1 ^ 0xA6E39B6C ^ (14904 * (v1 > ((v1 + 1495046346) ^ 0xAA9BC8FB))))))(v2);
}

uint64_t sub_100B1450C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((6544
                                * (((v1 + 97) ^ (*(_QWORD *)(v0 - 0x28623712C9340CAELL) == 0x77F08B69E6123757)) & 1)) | v1)))();
}

uint64_t sub_100B14564()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = sub_10009A6DC();
  *v1 = 0x77F08B69E6123757;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v2);
}

uint64_t sub_100B145B8()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + ((v0 + 1056700258) & 0xC1043BF7) - 14831;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 + 3831)) - 8))(5121);
}

uint64_t sub_100B1465C()
{
  return ((uint64_t (*)(void))STACK[0xAFF8])();
}

uint64_t sub_100B14680()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((22064 * (STACK[0xCB88] != 0)) ^ LODWORD(STACK[0x2D70])))
                            - 8))();
}

uint64_t sub_100B146B4()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 8697;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B146D4()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] + 90;
  v1 = STACK[0x6508] + 10771;
  v2 = STACK[0xA940];
  *(_QWORD *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = -1926392729;
  *(_QWORD *)(v2 + 112) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v0 | 0x600u) ^ 0x16D4)))();
}

uint64_t sub_100B1473C@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t (*v8)(void);

  LODWORD(STACK[0xFE40]) = a1;
  v2 = *(_DWORD *)(STACK[0x56C8] + 16);
  v3 = a1 - 676070521;
  v4 = v2 + 145122050;
  v5 = v2 > 0xF7599CFD;
  v6 = v5 ^ (v3 < 0x8A66302);
  v7 = v3 < v4;
  if (v6)
    v7 = v5;
  v8 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8 * ((42 * (((v1 - 1) ^ v7) & 1)) ^ (v1 + 9170)))
                         - 8);
  LODWORD(STACK[0xFA44]) = (v1 - 3152) | 0x5190;
  return v8();
}

uint64_t sub_100B147D4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 11866)) - 8))();
}

uint64_t sub_100B14808()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = *(_DWORD *)(v0 + 2748);
  *(_DWORD *)(v0 + 2752) = v2;
  *(_DWORD *)(v0 + 2756) = v2 ^ 0x45C0;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = (*(_DWORD *)(v0 + 3768) - 821192571);
  *(_QWORD *)(v0 + 2760) = v4;
  *(_QWORD *)(v0 + 2536) = v3 + 16 * v4 + 8;
  v5 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 2520) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 4246)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 ^ 0x33FD)) - 12))();
}

uint64_t sub_100B14874()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = (_QWORD *)STACK[0x5B58];
  (*(void (**)(_QWORD, unint64_t *, _QWORD, uint64_t))(*(_QWORD *)STACK[0x5B58]
                                                                      + 32 * *(unsigned __int8 *)(v0 + 8)
                                                                      + 8))(*(_QWORD *)v0, &STACK[0xFB08], (16 - v1), v2);
  v6 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(*v5 + 32 * *(unsigned __int8 *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16), (char *)&STACK[0xFB08] + (16 - v1), (v1 - 8), v2 + (16 - v1));
  **(_QWORD **)(v3 + 3792) = *(_QWORD *)(v3 + 2944);
  v7 = STACK[0x6AD8];
  v8 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x48BC]));
  *(_QWORD *)(v3 + 2536) = *(_QWORD *)(v4 + 24) + 16 * *(_QWORD *)(v3 + 2920) + 12;
  *(_QWORD *)(v3 + 2520) = v8 - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x48B8])) - 12))(v6);
}

uint64_t sub_100B14930()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 2536);
  v4 = v3 - *v0;
  v5 = (v4 & 0xFFFFFFFFFFFFFFF0) + *v1;
  v6 = v4 & 0xF;
  if ((v6 ^ 0xFu) > 2)
  {
    v8 = (*(uint64_t (**)(_QWORD, unint64_t *, uint64_t, _QWORD))(*(_QWORD *)STACK[0x5B58]
                                                                                + 32 * *(unsigned __int8 *)(v5 + 8)
                                                                                + 8))(*(_QWORD *)v5, &STACK[0xF990], 4, *(_QWORD *)(v2 + 2536));
  }
  else
  {
    v7 = (_QWORD *)STACK[0x5B58];
    (*(void (**)(_QWORD, unint64_t *, _QWORD, _QWORD))(*(_QWORD *)STACK[0x5B58]
                                                                       + 32 * *(unsigned __int8 *)(v5 + 8)
                                                                       + 8))(*(_QWORD *)v5, &STACK[0xF990], (16 - v6), *(_QWORD *)(v2 + 2536));
    v8 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(*v7 + 32 * *(unsigned __int8 *)(v5 + 24) + 8))(*(_QWORD *)(v5 + 16), (char *)&STACK[0xF990] + (16 - v6), (v6 - 12), v3 + (16 - v6));
  }
  LODWORD(STACK[0xF96C]) = STACK[0xF990];
  return ((uint64_t (*)(uint64_t))STACK[0xF960])(v8);
}

uint64_t sub_100B14A1C()
{
  _DWORD *v0;
  int v1;
  uint64_t (*v2)(void);

  v1 = v0[688];
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8 * ((111 * (((v0[689] ^ (v0[633] == -1926392729)) & 1) == 0)) ^ v1))
                         - 4);
  v0[693] = v1;
  return v2();
}

uint64_t sub_100B14A64()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v1 = *(_DWORD *)(v0 + 2772);
  *(_DWORD *)(v0 + 2776) = v1;
  *(_DWORD *)(v0 + 2780) = v1 ^ 0x61D4;
  *(_DWORD *)(v0 + 2784) = (v1 ^ 0x61D4) - 9196;
  *(_QWORD *)(v0 + 2536) = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2760) + 12;
  v2 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 2520) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 4247)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x33FD)) - 12))();
}

uint64_t sub_100B14AD0()
{
  _DWORD *v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v0[733] | (2 * ((v0[951] ^ v0[633]) == (v0[735] ^ 0x3B9B07E0)))))
                            - v0[734]
                            + 1439))();
}

uint64_t sub_100B14B14()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  *(_DWORD *)(v1 + 3808) = v0;
  *(_DWORD *)(v1 + 3812) = v0 + 19946;
  v2 = STACK[0x56C8];
  v3 = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v1 + 2920) - *(_QWORD *)STACK[0x5B50];
  if ((unint64_t)(v3 & 0xF ^ 0xF) <= 6)
    return sub_100B14874();
  v5 = (*(uint64_t (**)(_QWORD, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)STACK[0x5B58]
                                                                               + 32
                                                                               * *(unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFF0) + *(_QWORD *)STACK[0x5B48] + 8)
                                                                               + 8))(*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + *(_QWORD *)STACK[0x5B48]), &STACK[0xFB08], 8, *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v1 + 2920));
  *(_QWORD *)STACK[0xFE58] = STACK[0xFB08];
  STACK[0xF970] = *(_QWORD *)(v2 + 24) + 16 * STACK[0xFAF0] + 12;
  v6 = STACK[0x6AD8];
  STACK[0xF960] = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x59BC]) ^ 0x2C83)) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (int)(STACK[0x58C0] ^ 0x2F1C)) - 12))(v5);
}

uint64_t sub_100B14C00()
{
  _DWORD *v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((v0[943] ^ v0[633]) == -148794173) * (v0[709] ^ 0x5777)) ^ v0[707])))();
}

uint64_t sub_100B14C40()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_DWORD *)(v0 + 2832);
  *(_DWORD *)(v0 + 3776) = v1;
  *(_DWORD *)(v0 + 3780) = v1 + 19957;
  v2 = STACK[0x56C8];
  v3 = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2816);
  v4 = v3 - *(_QWORD *)STACK[0x5B50];
  v5 = (v4 & 0xFFFFFFFFFFFFFFF0) + *(_QWORD *)STACK[0x5B48];
  v6 = v4 & 0xF;
  if ((v6 ^ 0xFu) > 6)
  {
    v8 = (*(uint64_t (**)(_QWORD, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)STACK[0x5B58]
                                                                                 + 32 * *(unsigned __int8 *)(v5 + 8)
                                                                                 + 8))(*(_QWORD *)v5, &STACK[0xFAA0], 8, *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2816));
  }
  else
  {
    v7 = (_QWORD *)STACK[0x5B58];
    (*(void (**)(_QWORD, unint64_t *, _QWORD, uint64_t))(*(_QWORD *)STACK[0x5B58]
                                                                        + 32 * *(unsigned __int8 *)(v5 + 8)
                                                                        + 8))(*(_QWORD *)v5, &STACK[0xFAA0], (16 - v6), *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2816));
    v8 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(*v7 + 32 * *(unsigned __int8 *)(v5 + 24) + 8))(*(_QWORD *)(v5 + 16), (char *)&STACK[0xFAA0] + (16 - v6), (v6 - 8), v3 + (16 - v6));
  }
  STACK[0xFAA8] = STACK[0xFAA0];
  v9 = STACK[0x6AD8];
  v10 = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x5B6C]) + 21960));
  STACK[0xF970] = *(_QWORD *)(v2 + 24) + 16 * STACK[0xFA88] + 12;
  STACK[0xF960] = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * (LODWORD(STACK[0x56AC]) ^ 0x37E)) - 12))(v8);
}

uint64_t sub_100B14DFC()
{
  _DWORD *v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13948 * (v0[633] == LODWORD(STACK[0xBBF4]))) ^ v0[694]))
                         - (v0[696] ^ 0x1072));
  v0[697] = v0[695];
  return v1();
}

uint64_t sub_100B14E48()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)(v0 + 2788);
  *(_DWORD *)(v0 + 2792) = v1;
  *(_DWORD *)(v0 + 2796) = v1 - 9196;
  v2 = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2760) + 8;
  *(_DWORD *)(v0 + 220) = -1926392729;
  v3 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 13034)) - 4;
  *(_QWORD *)(v0 + 208) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x5220)) - 4))();
}

uint64_t sub_100B14EBC()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 1644)) - 4))(5121);
}

uint64_t sub_100B14EDC()
{
  _DWORD *v0;
  int v1;
  uint64_t (*v2)(void);

  v1 = v0[723];
  v2 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v0[947] ^ v0[633]) == 2026518494) * (v1 ^ 0x74DA4A1F)) ^ v0[721]));
  v0[724] = v1;
  return v2();
}

uint64_t sub_100B14F28()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)(v0 + 2896);
  *(_DWORD *)(v0 + 2900) = v1;
  *(_DWORD *)(v0 + 2904) = (v1 - 1942665120) & 0xFEF07DF2;
  v2 = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * *(_QWORD *)(v0 + 2872) + 8;
  *(_DWORD *)(v0 + 220) = -1926392729;
  v3 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x74DA2D61));
  *(_QWORD *)(v0 + 208) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x74DA2C6D)) - 4))();
}

uint64_t sub_100B14FAC()
{
  uint64_t v0;

  LODWORD(STACK[0x769C]) = *(_DWORD *)(v0 + 2532);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (LODWORD(STACK[0xFE68]) ^ (LODWORD(STACK[0xFE6C]) - 14078))))(1111563582, 0x603CE14A0A8FADE1, 8343, 12941, 4294959371, 3183399564, 4961, 13299);
}

uint64_t sub_100B15030()
{
  uint64_t v0;

  LODWORD(STACK[0xCF04]) = *(_DWORD *)(v0 + 2532);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (*(_DWORD *)(v0 + 3776) ^ 0x1CB4)))(1111563582, 0x603CE14A0A8FADE1, 8343, 12941, 4294959371, 3183399564, 4961, 13299);
}

uint64_t sub_100B150B8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(void);

  v2 = (a1 + 6409);
  v3 = *(_QWORD *)(v1 + 2920) - 4213 + ((a1 + 2090390724) & 0x836712F6);
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8 * ((30563 * (v3 < *(unsigned int *)(STACK[0x56C8] + 16))) ^ a1))
                         - v2
                         + 16832);
  *(_DWORD *)(v1 + 2908) = v2;
  *(_QWORD *)(v1 + 2912) = v3;
  return v4();
}

uint64_t sub_100B15128()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0xFAE8];
  STACK[0xFAF0] = STACK[0xFAE8];
  v1 = STACK[0xFAE4];
  LODWORD(STACK[0xFAFC]) = STACK[0xFAE4];
  LODWORD(STACK[0xFB00]) = (v1 - 15555) | 0xA2;
  LODWORD(STACK[0xFB04]) = (v1 - 8593) | 0x888;
  STACK[0xF970] = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * v0 + 8;
  v2 = STACK[0x6AD8];
  STACK[0xF960] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 9347)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 + 9351)) - 12))();
}

uint64_t sub_100B151B0()
{
  int v0;

  *(_QWORD *)STACK[0xD168] = 0x28623712C9340FB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 404)) - 12))();
}

uint64_t sub_100B151F0()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = STACK[0x3210];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12)) ^ STACK[0x3210];
  LODWORD(STACK[0x1D358]) = (v0 + 427180632) ^ v3;
  STACK[0x1D350] = 0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((v0 + 12) ^ 0x550C ^ ((*(_DWORD *)STACK[0x4D38] > 0)
                                                                   * ((v0 + 6147) ^ 0xF82)))))(v4);
}

uint64_t sub_100B1526C@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = a1 == 1 && *(_QWORD *)STACK[0x4CD8] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 * (86 * (v1 ^ 0x2848) - 3959)) ^ v1)) - 12))();
}

uint64_t sub_100B152AC()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int32x2_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  int32x2_t v23;
  int32x2_t v24;
  __int16 v25;
  unint64_t v26;
  unsigned int v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int8x16_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  __int16 v52;
  int8x16x4_t v54;

  v3 = 0;
  v4 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0xBC968BC)) ^ 0xBC968BCu;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  v12 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v11 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v11;
  STACK[0xEED8] = 0;
  STACK[0xEEE0] = v0;
  v13 = 16777619 * ((197748924 * v12 + 7) ^ (197748924 * v12)) % 7;
  v14 = 16777619 * ((197748924 * v12 + 6) ^ (197748924 * v12)) % 6;
  v15 = 16777619 * ((197748924 * v12 + 5) ^ (197748924 * v12)) % 5;
  v16 = 16777619 * ((197748924 * v12 + 3) ^ (197748924 * v12)) % 3;
  v17 = vdup_n_s32(197748924 * v12);
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEED8] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEED8] | v13) = STACK[0xEEDF];
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEED8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEED8] | v14) = STACK[0xEEDE];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEED8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEED8] | v15) = STACK[0xEEDD];
  v21 = STACK[0xEED8];
  LOBYTE(STACK[0xEED8]) = STACK[0xEEDC];
  v22 = *(_BYTE *)((unint64_t)&STACK[0xEED8] | v16);
  *(_BYTE *)((unint64_t)&STACK[0xEED8] | v16) = STACK[0xEEDB];
  v23.i32[0] = v17.i32[0];
  v23.i32[1] = 197748924 * v12 + 1;
  LOBYTE(STACK[0xEEDF]) = v18;
  LOBYTE(STACK[0xEEDE]) = v19;
  LOBYTE(STACK[0xEEDD]) = v20;
  v24 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v23, v17), (int8x8_t)v17);
  LOBYTE(STACK[0xEEDC]) = v21;
  LOBYTE(STACK[0xEEDB]) = v22;
  v25 = STACK[0xEED9];
  LOBYTE(STACK[0xEEDA]) = STACK[0xEED8];
  LOWORD(STACK[0xEED8]) = v25;
  STACK[0xEED8] = (unint64_t)vmla_s32(v24, (int32x2_t)STACK[0xEED8], (int32x2_t)STACK[0x48C8]);
  v26 = STACK[0xEEE0];
  v27 = (197748924 * STACK[0xEEE0]) ^ v12;
  v28 = vdupq_n_s32(v27);
  v29 = (int32x4_t)xmmword_1015070D0;
  v30 = (int32x4_t)xmmword_1015070E0;
  v31 = (int32x4_t)xmmword_1015070F0;
  v32 = (int32x4_t)xmmword_101507100;
  v33 = *(int8x16_t *)&STACK[0x4660];
  v34 = *(int8x16_t *)&STACK[0x4620];
  v35 = *(int8x16_t *)&STACK[0x4610];
  v36.i64[0] = 0x9393939393939393;
  v36.i64[1] = 0x9393939393939393;
  v37 = *(int8x16_t *)&STACK[0x4650];
  v38 = *(int8x16_t *)&STACK[0x4950];
  v39.i64[0] = 0x1000000010;
  v39.i64[1] = 0x1000000010;
  do
  {
    v40 = *(int8x16_t *)(v26 + v3);
    v54.val[1] = veorq_s8(vqtbl1q_s8(v40, v37), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v31, v28), vsubq_s32(v31, v28))));
    v54.val[0] = veorq_s8(vqtbl1q_s8(v40, v33), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v32, v28), vsubq_s32(v32, v28))));
    v54.val[2] = veorq_s8(vqtbl1q_s8(v40, v34), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v30, v28), vsubq_s32(v30, v28))));
    v54.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v40, v35), (int8x16_t)v28), (int8x16_t)vmulq_s32(vaddq_s32(v29, v28), vsubq_s32(v29, v28)));
    *(int8x16_t *)(v26 + v3) = vmulq_s8(vqtbl4q_s8(v54, v38), v36);
    v3 += 16;
    v32 = vaddq_s32(v32, v39);
    v31 = vaddq_s32(v31, v39);
    v30 = vaddq_s32(v30, v39);
    v29 = vaddq_s32(v29, v39);
  }
  while (v3 != 32);
  v41 = 3;
  do
  {
    v42 = 8 * v41;
    v43 = 8 * (16777619 * ((v27 + (_DWORD)v41) ^ v27) % v41);
    v44 = *(_QWORD *)(v26 + v43) ^ *(_QWORD *)(v26 + 8 * v41);
    *(_QWORD *)(v26 + v42) = v44;
    v45 = *(_QWORD *)(v26 + v43) ^ v44;
    *(_QWORD *)(v26 + v43) = v45;
    *(_QWORD *)(v26 + v42) = *(_QWORD *)(v26 + 8 * v41) ^ v45;
    v46 = v41-- + 1;
  }
  while (v46 > 2);
  v47 = *((_BYTE *)&STACK[0xEEE0] + v13);
  *((_BYTE *)&STACK[0xEEE0] + v13) = STACK[0xEEE7];
  LOBYTE(STACK[0xEEE7]) = v47;
  v48 = *((_BYTE *)&STACK[0xEEE0] + v14);
  *((_BYTE *)&STACK[0xEEE0] + v14) = STACK[0xEEE6];
  LOBYTE(STACK[0xEEE6]) = v48;
  v49 = *((_BYTE *)&STACK[0xEEE0] + v15);
  *((_BYTE *)&STACK[0xEEE0] + v15) = STACK[0xEEE5];
  LOBYTE(STACK[0xEEE5]) = v49;
  v50 = STACK[0xEEE0];
  LOBYTE(STACK[0xEEE0]) = STACK[0xEEE4];
  v51 = *((_BYTE *)&STACK[0xEEE0] + v16);
  *((_BYTE *)&STACK[0xEEE0] + v16) = STACK[0xEEE3];
  LOBYTE(STACK[0xEEE4]) = v50;
  LOBYTE(STACK[0xEEE3]) = v51;
  v52 = STACK[0xEEE1];
  LOBYTE(STACK[0xEEE2]) = STACK[0xEEE0];
  LOWORD(STACK[0xEEE0]) = v52;
  STACK[0xEEE0] = (unint64_t)vmla_s32(v24, (int32x2_t)STACK[0xEEE0], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x4CD8] = STACK[0xEEE0] ^ STACK[0xEED8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (v2 - 6147) + v1))();
}

uint64_t sub_100B156B0@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;

  *v1 = a1 - 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v2 + 13592)))();
}

uint64_t sub_100B156CC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 13));
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v0 + 427180632) ^ (2142736129
                                              * ((v1 - 2035079619 - 2 * ((v1 - 240) & 0x86B3272D)) ^ 0xE5EBB324));
  STACK[0x1D360] = v3 ^ (2142736129
                       * ((v1 + 0xCF96E2286B3263DLL - 2 * ((v1 - 240) & 0xCF96E2286B3272DLL)) ^ 0x71E2662EE5EBB324));
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((v0 + 7744) ^ (v0 + 13) ^ (23385
                                                                                  * (*(_QWORD *)STACK[0x4D18] != 0))))
                                          - 12))(v4);
}

uint64_t sub_100B15784@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = 2142736129 * ((~((v2 - 240) | 0x83A51297760E594) + ((v2 - 240) & 0x83A51297760E594)) ^ 0x8ADEA6DAEBC78E62);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v4;
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v1 + 7731) ^ v1)) - 12))(v5);
}

uint64_t sub_100B15820()
{
  return ((uint64_t (*)(void))STACK[0xC1E8])();
}

uint64_t sub_100B15838()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  v2 = (((v0 - 22246) | 0x1004u) ^ 0x1077) + *(_QWORD *)(v1 + 2816);
  v3 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((3477 * (v2 < *(unsigned int *)(STACK[0x56C8] + 16))) ^ v0));
  *(_DWORD *)(v1 + 2804) = v0 - 16012;
  *(_QWORD *)(v1 + 2808) = v2;
  return v3();
}

uint64_t sub_100B158A0()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  unint64_t v3;

  v1 = STACK[0xFA80];
  STACK[0xFA88] = STACK[0xFA80];
  v2 = STACK[0xFA7C];
  LODWORD(STACK[0xFA94]) = STACK[0xFA7C];
  LODWORD(STACK[0xFA98]) = v2 ^ 0x1D54;
  LODWORD(STACK[0xFA9C]) = (v2 ^ 0x1D54) + 20928;
  STACK[0xF970] = *(_QWORD *)(v0 + 24) + 16 * v1 + 8;
  v3 = STACK[0x6AD8];
  STACK[0xF960] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 19831)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x7E87)) - 12))();
}

uint64_t sub_100B15914@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  if (*(_QWORD *)(v2 + 8) + (a1 << 7))
    v4 = -1926392729;
  else
    v4 = 1926417666;
  if (v1 == -1926392729)
    v5 = v4;
  else
    v5 = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((9543 * (v5 == ((v3 - 629720219) & 0x2588BDFE ^ 0x8D2D9DBD))) ^ (v3 - 1692)))
                                          - 12))(5121);
}

uint64_t sub_100B1599C()
{
  uint64_t v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 != 0) * ((v1 + 17328) ^ 0x1D59)) ^ v1)) - 12))();
}

uint64_t sub_100B159E4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)(v0 + 16) != 0x28623712C9340FB6)
                                          * (((v1 - 17480) | 0x98) + 4572)) ^ v1))
                            - 4))();
}

uint64_t sub_100B15A3C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * (*(_DWORD *)(v2 - 0x28623712C9340FB6) != a1)) | (8
                                                                                                  * (*(_DWORD *)(v2 - 0x28623712C9340FB6) != a1))) ^ (v1 - 4)))
                            - ((v1 - 17328) ^ (v1 - 17293) ^ 0x23)))();
}

uint64_t sub_100B15A94()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((602 * (v0 ^ 0x9DD)) ^ 0xA19) * (v1 != 0x28623712C9340FB6)) ^ v0))
                            - (v0 + 4634)
                            + 7144))();
}

uint64_t sub_100B15B0C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((1968 * (*(_DWORD *)(v2 - 0x28623712C9340FB6) == a1)) ^ v1))
                            - (((v1 + 8228) | 0x202u) ^ ((v1 ^ 0x360Bu) + 4119))))();
}

uint64_t sub_100B15B78()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((1014 * (*(_QWORD *)(v1 - 0x28623712C9340CC6) == 0x28623712C9340FB6)) ^ v0))
                            - ((v0 - 8879) | 0x10A4u)
                            + 7148))();
}

uint64_t sub_100B15C04@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v2 - 0x28623712C9340FB6) == a1)
                                          * ((15 * (v1 ^ 0x18E5)) ^ 0x2A4F)) ^ v1))
                            - ((v1 + 8742) ^ 0x3E16)))();
}

uint64_t sub_100B15C60()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v0 != 0x28623712C9340FB6)
                                * (((v1 - 15892) | 0x1070) ^ 0x198B ^ (13 * (v1 ^ 0x3ED8)))) ^ v1)))();
}

uint64_t sub_100B15CC0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  *(_QWORD *)(v1 - 0x28623712C9340CC6) = *(_QWORD *)(v2 - 0x28623712C9340CC6);
  v3 = STACK[0x6AD8];
  STACK[0xAFF8] = (a1 + 10621) - 13155 + *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 + 4864)))();
}

uint64_t sub_100B15D24()
{
  int v0;
  int v1;
  _BOOL4 v3;

  LODWORD(STACK[0xFE50]) = v0;
  v3 = v0 != -1926392729 || *(_DWORD *)(STACK[0x56C8] + 16) == v1 - 4214;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((211 * v3) ^ (v1 + 11751)))
                            - (v1 + 8229)
                            + 12435))();
}

uint64_t sub_100B15D8C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = STACK[0x38C8];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) ^ STACK[0x38C8];
  LODWORD(STACK[0x1D358]) = (v0 + 427180620) ^ v3;
  STACK[0x1D350] = 0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (v0 ^ 0x2080 ^ (*(_DWORD *)STACK[0x4D38] > (int)(((v0 + 554463029) & 0xDEF39ECD ^ 0xFFFFF1F8) + ((v0 + 75131241) & 0xFB859697)))))
                                          - 12))(v4);
}

uint64_t sub_100B15E30@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = a1 == 1 && *(_QWORD *)STACK[0x4CD8] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((v3 * ((v1 + 2131776889) & 0x80EFBC03 ^ 0x4A90)) ^ v1))
                            - 12))();
}

uint64_t sub_100B15E7C()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0xBC968BC)) ^ 0xBC968BCu;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEEE8] = 0;
  STACK[0xEEF0] = v0;
  v12 = 16777619 * ((197748924 * v11 + 7) ^ (197748924 * v11)) % 7;
  v13 = 16777619 * ((197748924 * v11 + 6) ^ (197748924 * v11)) % 6;
  v14 = 16777619 * ((197748924 * v11 + 5) ^ (197748924 * v11)) % 5;
  v15 = 16777619 * ((197748924 * v11 + 3) ^ (197748924 * v11)) % 3;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v12) = STACK[0xEEEF];
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v13) = STACK[0xEEEE];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v14) = STACK[0xEEED];
  v19 = STACK[0xEEE8];
  LOBYTE(STACK[0xEEE8]) = STACK[0xEEEC];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEEE8] | v15) = STACK[0xEEEB];
  v21 = vdup_n_s32(197748924 * v11);
  v22.i32[0] = v21.i32[0];
  v22.i32[1] = 197748924 * v11 + 1;
  LOBYTE(STACK[0xEEEF]) = v16;
  LOBYTE(STACK[0xEEEE]) = v17;
  LOBYTE(STACK[0xEEED]) = v18;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v21), (int8x8_t)v21);
  LOBYTE(STACK[0xEEEC]) = v19;
  LOBYTE(STACK[0xEEEB]) = v20;
  v24 = STACK[0xEEE9];
  LOBYTE(STACK[0xEEEA]) = STACK[0xEEE8];
  LOWORD(STACK[0xEEE8]) = v24;
  STACK[0xEEE8] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEEE8], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEEF0];
  v26 = (197748924 * STACK[0xEEF0]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 32);
  v40 = 3;
  do
  {
    v41 = 8 * v40;
    v42 = 8 * (16777619 * ((v26 + (_DWORD)v40) ^ v26) % v40);
    v43 = *(_QWORD *)(v25 + v42) ^ *(_QWORD *)(v25 + 8 * v40);
    *(_QWORD *)(v25 + v41) = v43;
    v44 = *(_QWORD *)(v25 + v42) ^ v43;
    *(_QWORD *)(v25 + v42) = v44;
    *(_QWORD *)(v25 + v41) = *(_QWORD *)(v25 + 8 * v40) ^ v44;
    v45 = v40-- + 1;
  }
  while (v45 > 2);
  v46 = *((_BYTE *)&STACK[0xEEF0] + v12);
  *((_BYTE *)&STACK[0xEEF0] + v12) = STACK[0xEEF7];
  LOBYTE(STACK[0xEEF7]) = v46;
  v47 = *((_BYTE *)&STACK[0xEEF0] + v13);
  *((_BYTE *)&STACK[0xEEF0] + v13) = STACK[0xEEF6];
  LOBYTE(STACK[0xEEF6]) = v47;
  v48 = *((_BYTE *)&STACK[0xEEF0] + v14);
  *((_BYTE *)&STACK[0xEEF0] + v14) = STACK[0xEEF5];
  LOBYTE(STACK[0xEEF5]) = v48;
  v49 = STACK[0xEEF0];
  LOBYTE(STACK[0xEEF0]) = STACK[0xEEF4];
  v50 = *((_BYTE *)&STACK[0xEEF0] + v15);
  *((_BYTE *)&STACK[0xEEF0] + v15) = STACK[0xEEF3];
  LOBYTE(STACK[0xEEF4]) = v49;
  LOBYTE(STACK[0xEEF3]) = v50;
  v51 = STACK[0xEEF1];
  LOBYTE(STACK[0xEEF2]) = STACK[0xEEF0];
  LOWORD(STACK[0xEEF0]) = v51;
  STACK[0xEEF0] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEEF0], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x4CD8] = STACK[0xEEF0] ^ STACK[0xEEE8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 2 * (v1 ^ 0x684u) + 12278))();
}

uint64_t sub_100B16288@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;

  *v2 = ((3 * (v1 ^ 0x3583)) ^ 0xFFFFEF7C) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))();
}

uint64_t sub_100B162B4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v4 = 2142736129 * ((((v1 - 240) | 0x9AF1E8CA29B39699) - ((v1 - 240) & 0x9AF1E8CA29B39699)) ^ 0xE7EAE0C64AEB0290);
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ v4;
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v3 ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * ((43 * (*(_QWORD *)STACK[0x4D18] == 0)) ^ (v0 | 0x2F08)))
                                          - ((v0 - 1924593541) & 0x72B6F777)
                                          + 4210))(v5);
}

uint64_t sub_100B16384@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = 2142736129 * ((((v2 - 240) | 0x5B44A121C263AA15) - ((v2 - 240) & 0x5B44A121C263AA15)) ^ 0x265FA92DA13B3E1CLL);
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v5;
  STACK[0x1D360] = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x2F23)) - (((v1 - 4175) | 0x1042u) ^ 0x1072)))(v6);
}

uint64_t sub_100B16434()
{
  return ((uint64_t (*)(uint64_t))STACK[0xC0C8])(5121);
}

uint64_t sub_100B1645C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t (*v11)(void);

  v2 = a1 + 12791;
  v3 = (STACK[0xCDA8] ^ 0x5BDFDF5EDE9A5D6FLL) - 0x13008540D4820128 + ((2 * STACK[0xCDA8]) & 0xB7BFBEBDBD34BADELL);
  v4 = ((v3 & 0xB720A5E1F5E7A3B9) << ((a1 - 9) ^ 0x93u)) & (v3 ^ 0xF1E73BB9) ^ v3 & 0xF5E7A3B9;
  v5 = ((2 * (v3 ^ 0xF3283AC9)) ^ 0xD9F32E0) & (v3 ^ 0xF3283AC9) ^ (2 * (v3 ^ 0xF3283AC9)) & 0x6CF9970;
  v6 = v5 ^ 0x2408910;
  v7 = (v5 ^ 0x4CF1070) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x1B3E65C0) & v6 ^ (4 * v6) & 0x6CF9970;
  v9 = (v8 ^ 0x20E0140) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x4C19830)) ^ 0x6CF99700) & (v8 ^ 0x4C19830) ^ (16 * (v8 ^ 0x4C19830)) & 0x6CF9970;
  *(_DWORD *)(v1 + 3788) = ((LODWORD(STACK[0xCDA8]) ^ 0xDE9A5D6F)
                          + 729677528
                          + ((2 * LODWORD(STACK[0xCDA8])) & 0xBD34BADE)) ^ (2
                                                                          * ((((v10 ^ 0x2060870) << 8) & 0x6CF0000 ^ 0x6890000 ^ (((v10 ^ 0x2060870) << 8) ^ 0xCF990000) & (v10 ^ 0x2060870)) & (((v10 ^ 0x4C99100) & (v9 << 8) ^ v9) << 16) ^ (v10 ^ 0x4C99100) & (v9 << 8) ^ v9));
  v11 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1);
  *(_DWORD *)(v1 + 2860) = v2;
  *(_QWORD *)(v1 + 2864) = 0;
  return v11();
}

uint64_t sub_100B165FC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 2864);
  *(_QWORD *)(v0 + 2872) = v1;
  v2 = *(_DWORD *)(v0 + 2860);
  *(_DWORD *)(v0 + 2884) = v2;
  *(_DWORD *)(v0 + 2888) = v2 ^ 0x73CE;
  *(_DWORD *)(v0 + 2892) = (v2 ^ 0x73CE) + 1960458451;
  *(_QWORD *)(v0 + 2536) = *(_QWORD *)(STACK[0x56C8] + 24) + 16 * v1 + 8;
  v3 = STACK[0x6AD8];
  *(_QWORD *)(v0 + 2520) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 959)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x4D9)) - 12))();
}

uint64_t sub_100B16670@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  v2 = *(_QWORD *)(v1 + 2872) + 1;
  v3 = *(uint64_t (**)(void))(STACK[0x6AD8]
                           + 8 * (((v2 < *(unsigned int *)(STACK[0x56C8] + 16)) * ((a1 + 12793) ^ a1 ^ 0x73CE)) ^ a1));
  *(_DWORD *)(v1 + 2860) = a1 ^ 0x73CE;
  *(_QWORD *)(v1 + 2864) = v2;
  return v3();
}

uint64_t sub_100B166BC()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 0x28623712C9340CC6);
  v2 = STACK[0x6AD8];
  STACK[0xAFF8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0x2670 ^ (v1 + 10586))))();
}

uint64_t sub_100B1671C()
{
  int v0;

  v0 = STACK[0x6508] + 2458;
  *(_DWORD *)STACK[0xB710] += LODWORD(STACK[0xC1E0]) ^ 0x8D2D9467;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B16768()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((27
                                     * (v0 == ((STACK[0x3118] - 1926397960) ^ STACK[0x6508] ^ 0x11C))) ^ (STACK[0x6508] + 7570))))();
}

uint64_t sub_100B167B4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(unint64_t);

  v0 = STACK[0x3118];
  v1 = STACK[0x3118] + 11124;
  LODWORD(STACK[0xC1D8]) = -1926392729;
  STACK[0x9258] = v1 ^ 0x78B6EE6512D52E59 ^ *(_QWORD *)(*(_QWORD *)STACK[0x60C0]
                                                        + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL;
  v2 = STACK[0x8A70] + 124;
  v3 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 ^ 0x206C)) - 12);
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return v3(v2);
}

uint64_t sub_100B16888()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  BOOL v4;
  _BOOL4 v5;

  v1 = ((STACK[0x2DFC] & 0x89471F) + 2911) ^ 0x8D2D850D;
  v2 = STACK[0xC1D8];
  if (LODWORD(STACK[0xC1D8]) == -1926392733)
    v3 = -1926392729;
  else
    v3 = 1926417666;
  v4 = v0 == v1;
  v5 = v0 == v1;
  if (!v4)
    v3 = v0;
  LODWORD(STACK[0xDF64]) = v3;
  if (v2 != -1926392733)
    v5 = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((24885 * v5) ^ LODWORD(STACK[0x2DF4]))))();
}

uint64_t sub_100B16924@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + (a1 ^ 0x167Du) + 1471)) - 12))();
}

uint64_t sub_100B16964()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0xAB3C]) = v0;
  v4 = STACK[0x3418];
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x3418]) + v1)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x3414];
  LODWORD(STACK[0xEE50]) = v4;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v0;
  LODWORD(STACK[0xEE60]) = v4 + 42;
  LODWORD(STACK[0xEE64]) = 0;
  *(_QWORD *)(v2 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v2 + 784) = -299994601
                        - 1705718857 * ((2 * ((v3 - 240) & 0x111D6168) - (v3 - 240) + 1860345495) ^ 0x537041CE)
                        + STACK[0x6508];
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * *(int *)(v2 + 788)) - 4))(v6);
}

uint64_t sub_100B16A30()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 393)) - 8))();
}

uint64_t sub_100B16A60()
{
  int v0;
  uint64_t (*v1)(unint64_t *);

  v0 = STACK[0x6508] - 2969;
  v1 = (uint64_t (*)(unint64_t *))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x21A4))
                                                  - (STACK[0x6508]
                                                   + 8211)
                                                  + 12413);
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return v1(&STACK[0x1D0B8]);
}

uint64_t sub_100B16AE0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 2957) ^ 0x712) * (v0 != -1926392729)) ^ LODWORD(STACK[0x2DF8])))
                            - 4))();
}

uint64_t sub_100B16B1C@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(unint64_t *);

  v1 = (uint64_t (*)(unint64_t *))(*(_QWORD *)(STACK[0x6AD8]
                                                              + 8 * (((a1 - 1569015018) & 0x5D857089 ^ 0x1019) + a1))
                                                  - 12);
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return v1(&STACK[0x1D0B8]);
}

uint64_t sub_100B16BA0@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = a1 ^ 0x1DE3;
  v2 = ((unint64_t)LOBYTE(STACK[0x1D0B9]) << ((v1 + 19) ^ 0x2Du)) | ((unint64_t)LOBYTE(STACK[0x1D0B8]) << 56) | ((unint64_t)LOBYTE(STACK[0x1D0BA]) << 40) | (((unint64_t)(LOBYTE(STACK[0x1D0BB]) - ((2 * LOBYTE(STACK[0x1D0BB])) & 0xCEu) + 2080145568) << 32) - 0x3900000000) ^ 0x7BFC806700000000 | (((LOBYTE(STACK[0x1D0BC]) - ((2 * LOBYTE(STACK[0x1D0BC])) & 0x13ALL)) << 24) - 0x7DE3A69D63000000) ^ 0x821C59629D000000 | (((LOBYTE(STACK[0x1D0BD]) - ((2 * LOBYTE(STACK[0x1D0BD])) & 0x84)) << 16) - 0x4FCA81DA1EBE0000) ^ 0xB0357E25E1420000 | (((LOBYTE(STACK[0x1D0BE]) - ((2 * LOBYTE(STACK[0x1D0BE])) & 0x1D2)) << 8) + 0x159A4407DF09E900) ^ 0x159A4407DF09E900;
  v3 = LOBYTE(STACK[0x1D0BF]) - 2 * (STACK[0x1D0BF] & 0x7F) - 0x30EC45ADB5430B81;
  v4 = ((v2 - ((2 * v2) & 0x8B509F5F1BA700F4) - 0x3A57B050722C7F90) ^ 0x263B6FECEE03FBE1) & (v3 ^ 0x30EC45ADB5430B80) ^ v3 & 0x98100000846ELL;
  STACK[0x9DD0] = (((v4 ^ 0xE4B01E704B021998) - 0x73B186041FB68D5FLL) ^ ((v4 ^ 0x4BC53D0A32E0DAD9)
                                                                         + 0x233B5A8199ABB1E2) ^ ((v4 ^ 0x4CE69B291A323CBELL)
                                                                                                  + 0x2418FCA2B1795787))
                + 0x7B755EF0F920484FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100B16E04()
{
  int v0;

  LODWORD(STACK[0x8D9C]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x2E08]) ^ (120 * (v0 != -1926392729)))))();
}

uint64_t sub_100B16E3C()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  STACK[0x9DD0] = 0x6E33EC9C1BBDD17;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 393)) - 8))();
}

uint64_t sub_100B16E78()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2652) ^ 0x1A5A)) - 12))();
}

uint64_t sub_100B16EBC@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) + v1))();
}

uint64_t sub_100B16FB8()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x8D9C];
  STACK[0x9DD0] = (((v0 ^ 0x9119B7F845DD6AD8) + 0x6EE64807BA229528) ^ ((v0 ^ 0xFA717CE6CA7BB670)
                                                                         + 0x58E831935844990) ^ ((v0 ^ 0x6B68CB1E028B48CFLL)
                                                                                                 - 0x6B68CB1E028B48CFLL))
                + 0x6E33ECA4EE9717ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v1 - 1926396943) ^ 0x8D2D9A8A ^ (6119
                                                                                * ((((v2 - (v1 - 1926396943)) | (v1 - 1926396943 - v2)) & 0x80000000) == 0))))
                            - 8))();
}

uint64_t sub_100B170C4()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xB3A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x24F0)) - ((v0 - 1446111028) & 0x5631E7DF ^ 0x3CDLL)))();
}

uint64_t sub_100B1711C()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x1694];
  LODWORD(STACK[0xEE50]) = STACK[0x169C];
  STACK[0xEE30] = v0;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = STACK[0x1698];
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1729352622 - ((v1 - 240) | 0x6713D3AE) + ((v1 - 240) | 0x98EC2C51)) ^ 0xA57EF308)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100B17204()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL;
  v3 = (v2 ^ 0x78B6EE6512D51ED0)
     + v0
     + (((STACK[0x9258] ^ 0x12D6F6E910CBA969) - 0x12D6F6E910CBA969) ^ ((STACK[0x9258] ^ 0x4FE7A4CFA501E3B3)
                                                                         - 0x4FE7A4CFA501E3B3) ^ ((v2 ^ 0x2587BC43A71F540ALL ^ STACK[0x9258])
                                                                                                  - (v2 ^ 0x2587BC43A71F540ALL)));
  LODWORD(v2) = STACK[0x9DD0] - 0x6E33EC9C1BBDD17 + (LODWORD(STACK[0xAB3C]) ^ 0x8D2D9467) > 0xFFFFFFFF299ABAACLL;
  v4 = v3 < v0;
  v5 = STACK[0xFD4];
  v6 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0xFD0])) - 4;
  LODWORD(STACK[0xEE20]) = v5 - 67;
  LODWORD(STACK[0xEE50]) = v5 - 573;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v5;
  STACK[0xEE30] = v2 ^ v4;
  STACK[0xEE58] = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * ((v1 - 240) ^ 0x3D92DF59) + STACK[0x6508];
  v7 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v7);
}

uint64_t sub_100B173C4()
{
  unint64_t v0;
  unint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] ^ 0x1E9B) + 2229) * (v0 >= v1)) ^ (STACK[0x6508] - 393)))
                            - 8))();
}

uint64_t sub_100B17404()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((6050 * (((v0 + v2 < v1) ^ (STACK[0x6508] + 119)) & 1)) ^ (STACK[0x6508] - 393)))
                            - 8))();
}

uint64_t sub_100B17448()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B174A8@<X0>(int a1@<W8>)
{
  int v1;
  _BYTE *v2;
  unsigned int v3;

  v2 = (_BYTE *)STACK[0x8A70];
  v3 = a1 + 1463088603 - ((2 * a1) & 0xAE69EBB6);
  v2[124] = HIBYTE(v3) ^ 0x57;
  v2[125] = (((v1 + 8) & 0xEB) - 54) ^ BYTE2(v3);
  v2[126] = ((BYTE1(v3) ^ 0xF5) - ((2 * (BYTE1(v3) ^ 0xF5)) & 0x88) - 60) ^ 0xC4;
  v2[127] = v3 ^ 0xDB;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 + 7570)))();
}

uint64_t sub_100B17548()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x88B8] != 0x3032385379A144E6)
                                          * (((v0 - 294) | 0x32) + (v0 ^ 0x240C))) ^ v0))
                            - 12))();
}

uint64_t sub_100B17598@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  v1 = a1 + 244;
  v2 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(v2);
}

uint64_t sub_100B175D0()
{
  return ((uint64_t (*)(void))STACK[0xBA08])();
}

uint64_t sub_100B175E0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 7768) ^ (454 * (v0 != -1926392729))))
                            - ((STACK[0x6508] + 650) | 0x481)
                            + 6009))();
}

uint64_t sub_100B1762C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0xC5E0];
  LODWORD(STACK[0xC074]) = STACK[0x870C];
  v2 = STACK[0xC768];
  STACK[0x9EB0] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v2 + ((v0 - 1803) ^ v0 ^ 0xF5u ^ 0x712);
  STACK[0xC7A0] = STACK[0x8A50];
  STACK[0xC1B0] = v1;
  STACK[0xAB70] = 0;
  LODWORD(STACK[0xC134]) = -1926392729;
  STACK[0xABA8] = 0;
  LODWORD(STACK[0x802C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21725 * (STACK[0x8528] != 0)) ^ v0)) - 8))();
}

uint64_t sub_100B1771C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v4;

  v4 = STACK[0xBEC0] == 0x3A8834BBB3077A40 || v1 == 0 || LODWORD(STACK[0xB4D4]) != -1926392713;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 * (((a1 - 5966) | 0x1050) ^ 0x1083)) ^ a1)) - 8))();
}

uint64_t sub_100B17798@<X0>(int a1@<W8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 - 3141) ^ 0x17EF));
  STACK[0xACB8] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 - 3141)) - 4;
  return ((uint64_t (*)(void))(v1 - ((a1 + 923306083) & 0xC8F7693D) + 2321))();
}

uint64_t sub_100B17804()
{
  int v0;
  _BOOL4 v2;

  v2 = v0 == -1926392729 && LODWORD(STACK[0xC134]) == -1926392713;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((16355 * v2) ^ LODWORD(STACK[0x2ECC])))
                            - ((STACK[0x6508] + 1792909193) & 0x9522767D)
                            + 9841))();
}

uint64_t sub_100B17880()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3085 * (((STACK[0xC1B0] == 0) ^ (v0 - 25 + v0 - 7 + 1)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_100B178D4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((255 * (v0 != ((v1 + 1117732219) & 0xBD6067EB ^ 0x731402A1))) ^ v1))
                            - 12))();
}

uint64_t sub_100B17934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xBFC0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v8 + 8 * (int)(v7 ^ 0x2970 ^ (v7 + 13545))))(37814272, a2, a3, a4, a5, a6, a7, &STACK[0xDEA4]);
}

uint64_t sub_100B179A8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((STACK[0x6508] - 4078) | 0x327) ^ (STACK[0x6508] + 5195) ^ 0x832))
                            - ((STACK[0x6508] - 185904795) & 0xB14BFF4)
                            + 8648))();
}

uint64_t sub_100B17A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v8 = STACK[0xC1B0];
  v9 = STACK[0x6AD8];
  STACK[0xBFC0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v9 + 8 * (int)(v7 - 10836 + ((v7 - 891) | 0x3880))))(37814272, v8, a3, a4, a5, a6, a7, &STACK[0xDEA4]);
}

uint64_t sub_100B17A9C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((13
                                * ((((a1 - 120023577) & 0x7F6FDDFE ^ (STACK[0x8048] == ((a1 + 1365267631) & 0xAE9FAFFD ^ 0x603CE14A0A8F8B9CLL))) & 1) == 0)) ^ a1)))();
}

uint64_t sub_100B17B14()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((25439 * (v1 == ((v0 - 491251463) & 0x1D47D0FF ^ 0x8D2D8411))) ^ v0))
                            - 4))();
}

uint64_t sub_100B17B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;

  v8 = v7 - 8874;
  v9 = STACK[0xC1B0];
  v10 = STACK[0x6AD8];
  STACK[0xBFC0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v10 + 8 * (v8 ^ 0xADC ^ (6912 * (v8 - 1099524698 != (((v8 + 7357) | 0x1824) ^ LODWORD(STACK[0x1F58])))))))(37814272, v9, a3, a4, a5, a6, a7, &STACK[0xDEA4]);
}

uint64_t sub_100B17C24()
{
  unsigned int v0;

  LODWORD(STACK[0xA044]) = STACK[0xC074];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((v0 > 0x19784210) * (v0 - 2018016632)) ^ (v0 - 2018020208)))
                            - 8))();
}

uint64_t sub_100B17C88()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 5639)) - 4))();
}

uint64_t sub_100B17CC8()
{
  int v0;
  int v1;

  LODWORD(STACK[0xA044]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2400)) - 8))();
}

uint64_t sub_100B17CE8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unint64_t v4;

  v1 = v0 - 1878;
  v2 = v0 - 3788;
  STACK[0xB438] = 0;
  LODWORD(STACK[0xAD3C]) = -1926392729;
  v3 = STACK[0xC134];
  LODWORD(STACK[0xAB94]) = STACK[0xC134];
  LODWORD(STACK[0xB91C]) = (((v3 ^ 0x5A0615DE) - 1510348254) ^ ((v3 ^ 0x4BB242A0) - 1269973664) ^ ((v1 ^ v3 ^ 0x9C99CA39)
                                                                                                 + 1667644647))
                         - 1926392677;
  v4 = STACK[0x6AD8];
  STACK[0xB058] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ 0x16A2)) - 12))();
}

uint64_t sub_100B17DD8@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  LODWORD(STACK[0x748C]) = a1;
  STACK[0xCF68] = v3;
  STACK[0x96E0] = v4;
  v6 = STACK[0xC768];
  STACK[0xAB98] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v6 + 400;
  STACK[0x70B8] = v5;
  STACK[0x86B8] = v2;
  LOWORD(STACK[0x9352]) = -16107;
  v7 = STACK[0x6AD8];
  STACK[0xA700] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v1 + 3689)) - ((8293 * (v1 ^ 0x923u)) ^ 0x612BLL)))();
}

uint64_t sub_100B17E94@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  char v3;
  uint64_t v4;
  BOOL v5;
  char v6;

  STACK[0xE0B0] = v1;
  if (v4)
    v5 = a1 == -1926392729;
  else
    v5 = 1;
  v6 = v5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((831 * ((v6 ^ ((v2 ^ v3) + 1)) & 1)) ^ v2)))();
}

uint64_t sub_100B17EE8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((12 * v0) ^ 0x12F9))
                            - (((12 * v0 + 9256) | 0x12E5u) ^ 0x3EE1)))();
}

uint64_t sub_100B17F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(STACK[0x6AD8] + 8 * v5))(145258917, 4111417161, a3, 3613388764, a5, &STACK[0xDEA4]);
}

uint64_t sub_100B17FFC()
{
  return ((uint64_t (*)(void))STACK[0xA700])();
}

uint64_t sub_100B18010()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)(((STACK[0x2848] & 0x8BF28FFF ^ 0x782C) * v0) ^ (STACK[0x6508] + 589))))(7845, 3613388764, 4222, 4294959566, 26130, 1152, 11940, 26);
}

uint64_t sub_100B1808C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x205C])))();
}

uint64_t sub_100B180A8()
{
  __int16 v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((7 * (((v0 < -16106) ^ LODWORD(STACK[0x2058])) & 1)) | LODWORD(STACK[0x204C])))
                            - 4))();
}

uint64_t sub_100B180E0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((((STACK[0x6508] - 713082255) & 0x2A80BF9B) - 2541) ^ (STACK[0x6508] - 4070))
                                     * (v0 == 49430)) ^ (STACK[0x6508] + 589))))();
}

uint64_t sub_100B18130(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6AD8];
  STACK[0xCDD0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 + 6658))
                                                            - (v2 + 9610)
                                                            + 12293))(a1, a2, 0x3032385379A144E6);
}

uint64_t sub_100B18184()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((((STACK[0x6508] - 1571) ^ 0x5A3E) * v0) ^ (STACK[0x6508] + 1611))))(7845, 3613388764, 4222, 4294959566, 26130, 1152, 11940, 26);
}

uint64_t sub_100B181F4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x206C])) - 4))();
}

uint64_t sub_100B18214@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0x2068]) - 5606) * (a1 > -16107)) ^ (STACK[0x6508] + 1015)))
                            - 4))();
}

uint64_t sub_100B1824C@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;
  _BOOL4 v2;

  v2 = a1 == (unsigned __int16)(((v1 - 3761) | 0x243) + ((v1 - 5682) ^ 0xB64C));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((4 * v2) | (8 * v2)) ^ v1)))();
}

uint64_t sub_100B18290(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6AD8];
  STACK[0xCDD0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((v2 + 9347) ^ v2)) - 8))(a1, a2, 0x3032385379A144E6);
}

uint64_t sub_100B182E4@<X0>(unint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a2 + 8) = -1926392729;
  *(_QWORD *)(a2 + 16) = 0x3A8834BBB3077A40;
  *(_DWORD *)(a2 + 24) = -1926392729;
  *(_QWORD *)(a2 + 32) = 0;
  *(_DWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0x47BA50E00EAB3CB6;
  *(_QWORD *)(a2 + 56) = 0x67F3171B1845AD9FLL;
  *(_QWORD *)(a2 + 64) = 0;
  *(_DWORD *)(a2 + 72) = -1926392729;
  *(_DWORD *)(a2 + 328) = -1926392729;
  *(_QWORD *)(a2 + 352) = v3;
  *(_QWORD *)(a2 + 360) = 0x55058F428EADAA34;
  *(_DWORD *)(a2 + 368) = -1926392729;
  *(_QWORD *)(a2 + 380) = 0;
  *(_QWORD *)(a2 + 372) = 0;
  *(_QWORD *)(a2 + 392) = 0;
  *(_QWORD *)(a2 + 84) = 0;
  *(_QWORD *)(a2 + 76) = 0;
  *(_DWORD *)(a2 + 124) = 0;
  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((v2 - 357) ^ a1)))((__n128)0);
}

uint64_t sub_100B183A0(int a1, __n128 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __n128 *v5;

  v5 = (__n128 *)(v2 + v4);
  *v5 = a2;
  v5[1] = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 != 160) * a1) ^ v3)) - 12))();
}

uint64_t sub_100B183D0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(double *)(v9 + v11) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v11 + 8 == (v10 + a5) - 4014) * a9) ^ v10))
                            - 12))();
}

uint64_t sub_100B18400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 10189)) - 8))(1772489163, a2, a3, STACK[0x4860], a5, a6, STACK[0x4858]);
}

uint64_t sub_100B18434(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;

  v14 = ((*(_DWORD *)(*v11 + (*v12 & a2)) ^ (v10 + v9)) & 0x7FFFFFFF) * a1;
  v15 = (v14 ^ HIWORD(v14)) * a1;
  *(_BYTE *)(v8 + v9) = *(_BYTE *)((v15 >> 24) + a4 + 1) ^ *(_BYTE *)(v13 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + a7 + 2) ^ v15 ^ (-63 * BYTE3(v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == 15) * a5) ^ v7)) - 8))();
}

uint64_t sub_100B184B0@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 116) = 0;
  *(_QWORD *)(a1 + 108) = 0;
  return ((uint64_t (*)(void))STACK[0xCDD0])();
}

uint64_t sub_100B184C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;

  v4 = STACK[0x6508];
  v5 = (STACK[0x6508] + 1482) | 0x21;
  v6 = STACK[0xA8C0];
  *(_QWORD *)v6 = STACK[0xAAB8];
  *(_DWORD *)(v6 + 8) = STACK[0xA264];
  *(_QWORD *)(v6 + 16) = STACK[0xC2E8];
  *(_DWORD *)(v6 + 24) = -1926392713;
  STACK[0xBB88] = a3;
  LODWORD(STACK[0xB758]) = 0;
  v7 = STACK[0x6AD8];
  STACK[0x95A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v4 - 2964)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((v4 - 2964) ^ 0x1F92 ^ (((((_DWORD)v4 - 2964) ^ (v3 + 2623)) >= 0x37F27D21)
                                                                      * (v5 + 5923))))
                            - 12))();
}

uint64_t sub_100B185B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = STACK[0x2F30] & 0x4FF1376D;
  v4 = STACK[0x6508] - 2949;
  v5 = STACK[0xAB98];
  *(_QWORD *)v5 = STACK[0x70B8];
  *(_DWORD *)(v5 + 8) = STACK[0x748C];
  *(_QWORD *)(v5 + 16) = STACK[0x86B8];
  *(_DWORD *)(v5 + 24) = -1926392713;
  STACK[0x9560] = v5;
  STACK[0x6BD8] = a3;
  LODWORD(STACK[0xB2CC]) = 0;
  v6 = STACK[0x6AD8];
  STACK[0x95A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v3 + 2336) ^ v4)) - 12))();
}

uint64_t sub_100B18678(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = STACK[0x6508];
  v4 = STACK[0x6508] ^ 0x617;
  v5 = STACK[0xB700];
  *(_QWORD *)v5 = STACK[0xC820];
  *(_DWORD *)(v5 + 8) = STACK[0x8F4C];
  *(_QWORD *)(v5 + 16) = STACK[0x7F88];
  *(_DWORD *)(v5 + 24) = -1926392713;
  LOBYTE(STACK[0xA633]) = STACK[0xA2AF];
  STACK[0x95E0] = v5;
  STACK[0xA238] = a3;
  LODWORD(STACK[0x6D28]) = 0;
  v6 = STACK[0x6AD8];
  STACK[0x95A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v3 - 2990)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((_DWORD)v3 == 1715244001) * (v4 + 5647)) ^ ((int)v3 + 2810)))
                            - 12))();
}

uint64_t sub_100B18768@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  STACK[0xB280] = v4;
  LODWORD(STACK[0xA908]) = a1;
  STACK[0x6C70] = v2;
  STACK[0x7EC0] = v3;
  LOWORD(STACK[0xA456]) = -16107;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 != 0) * ((v1 - 1515) ^ 0x106F)) ^ v1)) - 4))();
}

uint64_t sub_100B187CC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3799
                                          * ((((a1 ^ 0x5EAB4124) - 1588281636) ^ ((a1 ^ 0x57909C66) - 1469095014) ^ (((v1 + 2083593118) & 0x83CEDE76 ^ 0x7BE9A6AD) + (a1 ^ (v2 + 3820))))
                                           + (v1 ^ 0x8D2D9C07) > 0xFFFFF5FE)) ^ v1))
                            - 4))();
}

uint64_t sub_100B18880()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xA700] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((5553 * ((v0 - 839470615) < 0xE5ADF2DE)) ^ ((int)v0 - 1821)))
                            - ((8293 * (v0 ^ 0x956)) ^ 0x612BLL)))();
}

uint64_t sub_100B188F4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 1515) ^ (10527 * v0))) - 4))();
}

uint64_t sub_100B18918()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3541)) - 8))();
}

uint64_t sub_100B1893C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((59 * (a1 < (__int16)((17 * LOWORD(STACK[0x2050])) ^ 0xD777))) ^ LODWORD(STACK[0x2054]))))();
}

uint64_t sub_100B18970@<X0>(__int16 a1@<W8>)
{
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((unsigned __int16)(a1 + 16112) <= (unsigned __int16)(v1 - 5728))
                                          * (((v1 - 168484458) & 0xA0AD87E) + 12924)) ^ v1))
                            - 4))();
}

uint64_t sub_100B189DC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v0 == ((unsigned __int16)LODWORD(STACK[0x1C68]) ^ 0xD3D2)) * LODWORD(STACK[0x1C60])) ^ LODWORD(STACK[0x1C68]))))();
}

uint64_t sub_100B18A18@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  v1 = (a1 - 1580226199) & STACK[0x1C5C];
  v2 = STACK[0x6AD8];
  STACK[0x6BC8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ 0x3D5E ^ v1)) - 4))();
}

uint64_t sub_100B18AAC@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;
  _BOOL4 v2;

  v2 = (unsigned __int16)(((13 * (v1 ^ 0x16CA) + 1985) | 0x203) - 18754) == a1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((4 * v2) | (8 * v2)) ^ v1)))();
}

uint64_t sub_100B18AF4()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x6BC8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((v0 + 242) | 0x2040) ^ 0x3A41) + v0)) - 4))();
}

uint64_t sub_100B18BA4@<X0>(unsigned __int16 a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((17138
                                          * (a1 == (unsigned __int16)((LODWORD(STACK[0x2374]) ^ 0x484C)
                                                                                  + 25321))) ^ LODWORD(STACK[0x2374])))
                            - (LODWORD(STACK[0x2374]) - 1515)
                            + 4210))();
}

uint64_t sub_100B18BFC()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])(LODWORD(STACK[0xA908]) ^ 0x8D2D9467);
  STACK[0xE0C0] = v1 + 0x3032385379A144E6;
  *(_QWORD *)STACK[0x6C70] = v1 + 0x3032385379A144E6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 == 0) ^ (-115 * (v0 ^ 0x2E))) & 1)
                                          * ((2 * (v0 ^ 0x5616)) ^ 0x101B)) ^ v0))
                            - 8))();
}

uint64_t sub_100B18C9C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0xC768];
  STACK[0x7208] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = ((v0 + 14150) ^ 0x34EDLL) + v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v0 ^ 0x12BE ^ (16165 * ((v0 ^ 0x290A786Eu) < 0x25A93AB0))))
                            - 12))();
}

uint64_t sub_100B18D34()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] + 514;
  v1 = STACK[0xC38C];
  STACK[0xA9B0] = 0;
  LODWORD(STACK[0xAE74]) = 1930690922;
  LODWORD(STACK[0xA044]) = STACK[0xC074];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2990 * (v1 != -1926392729)) ^ v0)) - 8))();
}

uint64_t sub_100B18DB0()
{
  int v0;
  _BOOL4 v2;

  v2 = v0 != -1926392729 || LODWORD(STACK[0xAD3C]) != -1926392713;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 * LODWORD(STACK[0x2B78])) ^ LODWORD(STACK[0x2B7C])))
                            - 4))();
}

uint64_t sub_100B18DF4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6508];
  *(_DWORD *)(v0 + 700) = -1926392729;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((int)v1 + 3578)))();
}

uint64_t sub_100B18E28()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2278])))();
}

uint64_t sub_100B18EBC@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x76E8]) = (a1 + 15) & 0xFFFFFFF0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((LODWORD(STACK[0xA044]) == 1930690922) * (v1 ^ 0x1080)) ^ (v1 + 21252)))
                            - 4))();
}

uint64_t sub_100B18F20()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x94A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 4267)) - (((_DWORD)v0 - 8) | 0x44u) + 874))();
}

uint64_t sub_100B18F68()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2570)) - 12))();
}

uint64_t sub_100B18F88()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2570)) - 12))();
}

uint64_t sub_100B18FCC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  LODWORD(STACK[0xAE74]) = a1;
  v5 = (a1 ^ 0x6CEBFE44) & (2 * ((v4 ^ 0x8CEBEEE0) & a1)) ^ (v4 ^ 0x8CEBEEE0) & a1;
  v6 = ((2 * (a1 ^ 0x7C29EF44)) ^ 0xE18423A4) & (a1 ^ 0x7C29EF44) ^ (2 * (a1 ^ 0x7C29EF44)) & 0xF0C211D2;
  v7 = v6 ^ v1;
  v8 = (v6 ^ 0x60800082) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xC3084748) & v7 ^ (4 * v7) & 0xF0C211D0;
  v10 = (v9 ^ (v3 + 178)) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ (v2 + 3640))) ^ 0xC211D20) & (v9 ^ (v2 + 3640)) ^ (16 * (v9 ^ (v2 + 3640))) & 0xF0C211D0;
  v12 = v10 ^ 0xF0C211D2 ^ (v11 ^ 0x1100) & (v10 << 8);
  v13 = ((uint64_t (*)(_QWORD))STACK[0x5510])(a1 ^ (2
                                                            * ((v12 << 16) & 0x70C20000 ^ v12 ^ ((v12 << 16) ^ 0x11D20000) & (((v11 ^ 0xF0C200D2) << 8) & 0xF0C20000 ^ 0x30C20000 ^ (((v11 ^ 0xF0C200D2) << 8) ^ 0x42110000) & (v11 ^ 0xF0C200D2)))) ^ 0x4CEBDD32);
  STACK[0xA9B0] = v13;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((28225 * (v13 != 0)) ^ (v4 + 4393))))();
}

uint64_t sub_100B1916C(unint64_t a1)
{
  int v1;

  STACK[0x8310] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x13F9)) - ((v1 + 14173) ^ 0x3FD0)))();
}

uint64_t sub_100B191C8(uint64_t a1, uint64_t a2)
{
  int v2;

  LODWORD(STACK[0x75CC]) = v2;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x162C]))
                                                                                       - STACK[0x1960]
                                                                                       + 20007))(a1, a2, STACK[0x60C0], STACK[0x60B8]);
}

uint64_t sub_100B19210(uint64_t a1, uint64_t a2, _QWORD *a3, _DWORD *a4)
{
  int v4;
  unsigned int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  unint64_t v16;

  v6 = STACK[0x92CC];
  v7 = STACK[0x1960];
  v8 = STACK[0x8310];
  v9 = STACK[0x8310] + LODWORD(STACK[0x92CC]) + STACK[0x1960] - 19997;
  v10 = ((v9 ^ *(_DWORD *)(*a3 + (*a4 & v5))) & 0x7FFFFFFF) * v4;
  v11 = (v10 ^ HIWORD(v10)) * v4;
  v12 = STACK[0x45D0];
  v13 = STACK[0x45E0];
  v14 = STACK[0x45D8];
  *(_BYTE *)v9 = *(_BYTE *)(STACK[0x45D0] + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + STACK[0x45E0] + 1) ^ *(_BYTE *)(STACK[0x45D8] + (v11 >> 24)) ^ v11 ^ (-113 * BYTE3(v11)) ^ 0x53;
  v15 = (_BYTE *)(v8 + (v6 + 19));
  LODWORD(v11) = ((*(_DWORD *)(*a3 + (*a4 & v5)) ^ v15) & 0x7FFFFFFF) * v4;
  v16 = (v11 ^ WORD1(v11)) * v4;
  *v15 = *(_BYTE *)(v12 + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24) + v13 + 1) ^ *(_BYTE *)(v14 + (v16 >> 24)) ^ v16 ^ (-113 * BYTE3(v16)) ^ 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((75 * (STACK[0xC7A0] > v8 + (v6 + 20))) ^ v7))
                            - 8))();
}

uint64_t sub_100B19350()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((19148
                                          * ((((v1 ^ 0x8ADEB225) + 1965116891) ^ ((v1 ^ 0xCA95700) - 212424448) ^ (((301 * (v0 ^ 0x182A) + 190472396) ^ v1) - 190476610)) != 1926392729)) ^ v0))
                            - 8))();
}

uint64_t sub_100B19420@<X0>(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  _BOOL4 v25;

  v18 = (char *)(v4 + v6);
  v19 = (_BYTE *)(a3 + v6 + v3);
  v20 = *v14;
  v21 = *v18;
  LODWORD(v18) = ((*(_DWORD *)(*v13 + (int)(v20 & 0xD75FEFDC)) ^ v18) & 0x7FFFFFFF)
               * (((v5 - 6100) | 0x1026) ^ 0x69A619BD);
  v22 = (v18 ^ (v18 >> 16)) * a1;
  LODWORD(v20) = ((*(_DWORD *)(*v13 + (v20 & v9)) ^ v19) & 0x7FFFFFFF) * a1;
  v23 = (v20 ^ WORD1(v20)) * a1;
  *v19 = *(_BYTE *)(v10 + (v22 >> 24)) ^ v21 ^ *(_BYTE *)((v22 >> 24) + v12 + 3) ^ *(_BYTE *)(v15 + (v22 >> 24)) ^ *(_BYTE *)(a2 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v16 + 1) ^ v22 ^ *(_BYTE *)(v17 + (v23 >> 24)) ^ (BYTE3(v22) * v8) ^ v23 ^ (BYTE3(v23) * v11);
  v24 = v6 + 1;
  v25 = v24 + 2084988011 < v7;
  if (v7 < 0x7C46646B != v24 > 0x83B99B94)
    v25 = v7 < 0x7C46646B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19148 * v25) ^ v5)) - 8))();
}

uint64_t sub_100B19548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23504 * (v6 != ((v5 + 1928306395) & 0x8D105976) - 1926396943)) ^ v5)) - 8))(a1, a2, a3, a4, a5, 1352736849, 1772489163, STACK[0x45D0]);
}

uint64_t sub_100B195E8@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  unint64_t v32;
  unint64_t v33;

  v20 = (((v8 ^ 0x737D90A9) - 1937608873) ^ ((v8 ^ 0x24EA01B3) - 619315635) ^ ((v8 ^ 0xDABA150B ^ ((v7 - 17332) | 0x1036))
                                                                             + 625343107))
      - 1451293073;
  v21 = (v20 ^ 0xF30CA9E7) & (2 * (v20 & 0xE3AE8DF7)) ^ v20 & 0xE3AE8DF7;
  v22 = ((2 * (v20 ^ 0xB00DAB21)) ^ 0xA7464DAC) & (v20 ^ 0xB00DAB21) ^ (2 * (v20 ^ 0xB00DAB21)) & 0x53A326D6;
  v23 = v22 ^ (a2 + 513);
  v24 = (v22 ^ 0x43030486) & (4 * v21) ^ v21;
  v25 = ((4 * v23) ^ 0x4E8C9B58) & v23 ^ (4 * v23) & 0x53A326D4;
  v26 = (v25 ^ (v9 + 80)) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ LODWORD(STACK[0x1F0C]))) ^ 0x3A326D60) & (v25 ^ LODWORD(STACK[0x1F0C])) ^ (16
                                                                                               * (v25 ^ LODWORD(STACK[0x1F0C]))) & 0x53A326D0;
  v28 = v20 ^ (2
             * (((v26 ^ 0x53A326D6 ^ (v27 ^ LODWORD(STACK[0x1F08])) & (v26 << 8)) << 16) & 0x53A30000 ^ v26 ^ 0x53A326D6 ^ (v27 ^ LODWORD(STACK[0x1F08])) & (v26 << 8) ^ (((v26 ^ 0x53A326D6 ^ (v27 ^ LODWORD(STACK[0x1F08])) & (v26 << 8)) << 16) ^ 0x26D60000) & (((v27 ^ 0x41810296) << 8) & 0x53A30000 ^ 0x50810000 ^ (((v27 ^ 0x41810296) << 8) ^ 0xA3260000) & (v27 ^ 0x41810296))));
  v29 = (_BYTE *)(v6 + (v28 ^ 0x41ECC05B));
  LOBYTE(v23) = *v29;
  v30 = *v15;
  v31 = (_BYTE *)(a5 + (v28 ^ 0x41ECC05B) + v5);
  LODWORD(v29) = ((v29 ^ *(_DWORD *)(*v14 + (int)(v30 & a1))) & 0x7FFFFFFF) * a3;
  v32 = (v29 ^ (v29 >> 16)) * a3;
  LODWORD(v30) = ((v31 ^ *(_DWORD *)(*v14 + (v30 & v10))) & 0x7FFFFFFF) * a3;
  v33 = (v30 ^ WORD1(v30)) * a3;
  *v31 = *(_BYTE *)(v16 + (v32 >> 24)) ^ v23 ^ *(_BYTE *)((v32 >> 24) + v18 + 3) ^ *(_BYTE *)(v11 + (v32 >> 24)) ^ *(_BYTE *)(a4 + (v33 >> 24)) ^ *(_BYTE *)((v33 >> 24) + v17 + 1) ^ *(_BYTE *)(v19 + (v33 >> 24)) ^ v32 ^ v33 ^ (BYTE3(v32) * v13) ^ (BYTE3(v33) * v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((7745 * ((v28 ^ 0xCCC1543C) == -1926392729)) ^ v7))
                            - 8))();
}

uint64_t sub_100B19884()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1966)) - 8))();
}

uint64_t sub_100B198AC@<X0>(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  char v6;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unsigned int v12;
  unint64_t v13;
  _BYTE *v14;
  unint64_t v15;

  v11 = (_BYTE *)(a3 + (v4 + 36));
  v12 = ((v11 ^ *(_DWORD *)(*v7 + (*v8 & v5))) & 0x7FFFFFFF) * a1;
  v13 = (v12 ^ HIWORD(v12)) * a1;
  *v11 = *(_BYTE *)(a2 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v9 + 1) ^ *(_BYTE *)(v10 + (v13 >> 24)) ^ v13 ^ (BYTE3(v13) * v6) ^ 0x54;
  v14 = (_BYTE *)(a3 + (v4 + 37));
  LODWORD(v11) = ((*(_DWORD *)(*v7 + (*v8 & v5)) ^ v14) & 0x7FFFFFFF) * a1;
  v15 = (v11 ^ (v11 >> 16)) * a1;
  *v14 = *(_BYTE *)(a2 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v9 + 1) ^ *(_BYTE *)(v10 + (v15 >> 24)) ^ v15 ^ (BYTE3(v15) * v6) ^ 8;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((v3 - 2189) ^ 0x247E)))(2026);
}

uint64_t sub_100B199F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31042 * ((((LODWORD(STACK[0x92CC]) + 48) > LODWORD(STACK[0x76E8])) ^ (STACK[0x6508] - 117)) & 1)) ^ LODWORD(STACK[0x327C]))) - 12))(a1, a2, a3, a4, STACK[0x45E0], STACK[0x45D8], STACK[0x45D0]);
}

uint64_t sub_100B19A68@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W8>)
{
  char v4;
  char v5;
  unsigned int v6;
  char v7;
  unint64_t v8;
  _DWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  _BYTE *v14;
  unint64_t v15;

  v7 = v4 - 104 - v5;
  v8 = STACK[0x8310];
  v9 = (_DWORD *)STACK[0x60B8];
  v10 = (_QWORD *)STACK[0x60C0];
  v11 = STACK[0x8310] + (LODWORD(STACK[0x2C1C]) + a4);
  v12 = 1772489163 * ((v11 ^ *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & v6))) & 0x7FFFFFFF);
  v13 = 1772489163 * (v12 ^ HIWORD(v12));
  *(_BYTE *)v11 = *(_BYTE *)(a3 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + a1 + 1) ^ *(_BYTE *)(a2 + (v13 >> 24)) ^ v13 ^ (-113 * BYTE3(v13)) ^ 0x52;
  v14 = (_BYTE *)(v8 + (a4 + 47));
  LODWORD(v11) = 1772489163 * ((*(_DWORD *)(*v10 + (*v9 & v6)) ^ v14) & 0x7FFFFFFF);
  v15 = 1772489163 * (v11 ^ WORD1(v11));
  *v14 = *(_BYTE *)(a3 + (v15 >> 24)) ^ (v7 - 2) ^ *(_BYTE *)((v15 >> 24) + a1 + 1) ^ *(_BYTE *)(a2 + (v15 >> 24)) ^ v15 ^ (-113 * BYTE3(v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2C24])) - 12))();
}

uint64_t sub_100B19B7C()
{
  int v0;
  BOOL v1;
  int v2;

  if (STACK[0xC1B0])
    v1 = LODWORD(STACK[0xA044]) == v0 + 1930669113;
  else
    v1 = 1;
  v2 = !v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((91 * v2) ^ v0))
                            - ((v0 - 1824316758) & 0x6CBCBF77)
                            + 14155))();
}

uint64_t sub_100B19BF4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((a1 <= STACK[0x8310] + ((v2 - 1475253739) ^ 0x74B7A600u) + v1) * ((v2 - 9949) ^ 0x10A4)) ^ v2)))();
}

uint64_t sub_100B19C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 14444)) - 12))(a1, a2, a3, a4, a5, a6, a7, 1772489163);
}

uint64_t sub_100B19C90@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char *v13;
  _BYTE *v14;
  char v15;
  int v16;
  unint64_t v17;
  unint64_t v18;

  v12 = v3 - 1;
  v13 = (char *)(a2 + (v12 - 1930690922));
  v14 = (_BYTE *)(v2 + (v5 + v12));
  v15 = *v13;
  v16 = *(_DWORD *)(*v7 + (*v8 & v6));
  v17 = ((((v13 ^ v16) & 0x7FFFFFFF) * a1) ^ ((((v13 ^ v16) & 0x7FFFFFFF) * a1) >> 16)) * a1;
  v18 = ((((v14 ^ v16) & 0x7FFFFFFF) * a1) ^ ((((v14 ^ v16) & 0x7FFFFFFF) * a1) >> 16)) * a1;
  *v14 = *(_BYTE *)(v9 + (v17 >> 24)) ^ v15 ^ *(_BYTE *)(v10 + (v17 >> 24)) ^ *(_BYTE *)(v11 + (v17 >> 24)) ^ *(_BYTE *)(v9 + (v18 >> 24)) ^ *(_BYTE *)(v10 + (v18 >> 24)) ^ *(_BYTE *)(v11 + (v18 >> 24)) ^ v17 ^ v18 ^ (65 * BYTE3(v17)) ^ (65 * BYTE3(v18));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((11670 * (v12 == 1930690922)) ^ v4)) - 12))();
}

uint64_t sub_100B19D68(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((242 * (STACK[0x9EB0] > STACK[0x8310] + v3 - 593113725 + ((v2 - 5136) | 0x180u))) ^ v2)) - 4))(a1, a2, 1772489163, STACK[0x60C0], STACK[0x60B8], STACK[0x47E8], STACK[0x4700], STACK[0x46F8]);
}

uint64_t sub_100B19DE4@<X0>(int a1@<W2>, _QWORD *a2@<X3>, _DWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned int v13;
  unint64_t v14;

  v12 = (_BYTE *)(v7 + (v9 + v8));
  v13 = ((v12 ^ *(_DWORD *)(*a2 + (*a3 & v11))) & 0x7FFFFFFF) * (((v10 - 14725) | 0x1016) + 1772484949);
  v14 = (v13 ^ HIWORD(v13)) * a1;
  *v12 = *(_BYTE *)(a7 + v9) ^ *(_BYTE *)(a4 + (v14 >> 24)) ^ *(_BYTE *)(a5 + (v14 >> 24)) ^ *(_BYTE *)(a6 + (v14 >> 24)) ^ v14 ^ (65 * BYTE3(v14)) ^ 0x92;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31567 * (v9 != 15)) ^ v10)) - 8))();
}

uint64_t sub_100B19E8C@<X0>(int a1@<W2>, _QWORD *a2@<X3>, _DWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned int v14;
  unint64_t v15;

  v12 = v10 - 1;
  v13 = (_BYTE *)(v7 + (v12 + v8));
  v14 = ((v13 ^ *(_DWORD *)(*a2 + (*a3 & v11))) & 0x7FFFFFFF) * a1;
  v15 = (v14 ^ HIWORD(v14)) * (((v9 - 19519) | 0x1040) ^ 0x69A619BD);
  *v13 = *(_BYTE *)(a7 + v12) ^ *(_BYTE *)(a4 + (v15 >> 24)) ^ *(_BYTE *)(a5 + (v15 >> 24)) ^ *(_BYTE *)(a6 + (v15 >> 24)) ^ v15 ^ (65 * BYTE3(v15)) ^ 0x92;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6440 * (v12 == 0)) ^ v9)) - 4))();
}

uint64_t sub_100B19F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v5 ^ 0xA81198AB ^ ((v5 > 0xC1C37E59) * ((v5 ^ 0xA81198AB) + 4242)))) - 8))(a1, a2, a3, a4, a5, 1772489163, STACK[0x60C0], STACK[0x60B8]);
}

uint64_t sub_100B19FAC@<X0>(int a1@<W5>, _QWORD *a2@<X6>, _DWORD *a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  char v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v19;

  v13 = (char *)(a4 + (v8 - 1949961988));
  v14 = (_BYTE *)(v4 + (v7 + v8));
  v15 = *v13;
  v16 = *(_DWORD *)(*a2 + (*a3 & v9));
  v17 = ((((v13 ^ v16) & 0x7FFFFFFF) * a1) ^ ((((v13 ^ v16) & 0x7FFFFFFF) * a1) >> 16)) * a1;
  v18 = ((((v14 ^ v16) & 0x7FFFFFFF) * a1) ^ ((((v14 ^ v16) & 0x7FFFFFFF) * a1) >> 16)) * a1;
  *v14 = *(_BYTE *)(v10 + (v17 >> 24)) ^ v15 ^ *(_BYTE *)(v11 + (v17 >> 24)) ^ *(_BYTE *)(v12 + (v17 >> 24)) ^ *(_BYTE *)(v10 + (v18 >> 24)) ^ *(_BYTE *)(v11 + (v18 >> 24)) ^ *(_BYTE *)(v12 + (v18 >> 24)) ^ v17 ^ v18 ^ (BYTE3(v17) * (((v6 + 77) | 0x66) ^ 0x37)) ^ (65 * BYTE3(v18));
  v19 = v8 + 1521712885 < v5;
  if (v5 < 0xCEED8DF8 != (v8 + 1521712885) < 0xCEED8DF8)
    v19 = v5 < 0xCEED8DF8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((38 * !v19) ^ v6)) - 8))();
}

uint64_t sub_100B1A0C8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 4393)))();
}

uint64_t sub_100B1A0E8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((248 * (STACK[0xB438] != 0)) ^ (v0 + 14806))))();
}

uint64_t sub_100B1A11C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 514)) - 8))(v1);
}

uint64_t sub_100B1A13C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30764 * (STACK[0xAB70] != 0)) ^ (v0 + 9954))) - 4))();
}

uint64_t sub_100B1A174()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B1A190()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1803)) - 8))();
}

uint64_t sub_100B1A1B0()
{
  uint64_t v0;
  int v1;

  STACK[0xC768] = v0 - 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 7826)) - 8))();
}

uint64_t sub_100B1A1D8()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = v0 + 1880117209;
  LODWORD(STACK[0xEE50]) = v0 + 1880121099;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v0 + 1880121115;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1090453084
                            - ((v1 - 240) ^ 0x723DFDB1 | 0x40FEFE5C)
                            + ((v1 - 240) ^ 0x723DFDB1 | 0xBF0101A3)) ^ 0xF0AE234B)
                          + v0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v4);
}

uint64_t sub_100B1A2CC()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 1463;
  v1 = STACK[0x6AD8];
  STACK[0xA440] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return (*(uint64_t (**)(void))(v1 + 8 * (LODWORD(STACK[0x3C4C]) ^ v0)))();
}

uint64_t sub_100B1A37C@<X0>(uint64_t a1@<X1>, int a2@<W2>, unint64_t a3@<X8>)
{
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  BOOL v13;
  int v15;

  STACK[0xC218] = a3;
  LODWORD(STACK[0x762C]) = v6;
  STACK[0xC2D8] = v5;
  LODWORD(STACK[0x9CD4]) = v3;
  STACK[0x7740] = v7;
  *(_DWORD *)(a1 + 1724) = v8;
  STACK[0x6FA8] = v10;
  STACK[0xCB80] = v9;
  v11 = STACK[0xC768];
  v12 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x9A50] = (unint64_t)v12;
  STACK[0xCA20] = (unint64_t)(v12 + 16);
  STACK[0xC768] = v11 + 32;
  STACK[0x7310] = 0;
  if (a3)
    v13 = v5 == 0;
  else
    v13 = 1;
  v15 = !v13 && v3 != a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((v15 * (((602 * (v4 ^ 0x3E7F) - 1069935743) & 0x3FC5DC4E) + 30245)) ^ v4))
                            - 8))();
}

uint64_t sub_100B1A464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((((v7 + 1293209462) & 0xB2EB39EB) + 5677) ^ v7 ^ (12709 * ((v7 ^ 0x457FF17Cu) < 0xCC4238AC)))) - 4))(a1, 440281528, a3, a4, a5, a6, a7, 806657363);
}

uint64_t sub_100B1A4DC(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _DWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v8 = STACK[0x6AD8];
  STACK[0x9D30] = ((v3 + 167441478) & v7) + *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 22008;
  STACK[0xB2E0] = v4;
  LODWORD(STACK[0x8784]) = v2;
  STACK[0x9898] = v6;
  v9 = STACK[0xC768];
  v10 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x7CB8] = (unint64_t)v10;
  STACK[0xC768] = v9 + 160;
  v11 = (_DWORD *)STACK[0x60B8];
  v12 = (uint64_t *)STACK[0x60C0];
  v13 = *(_QWORD *)STACK[0x60C0];
  v14 = *(_DWORD *)STACK[0x60B8] & a2;
  v15 = 1772489163 * ((*(_DWORD *)(v13 + v14) ^ ((_DWORD)v10 + 20)) & 0x7FFFFFFF);
  v16 = 1772489163 * (v15 ^ HIWORD(v15));
  v17 = STACK[0x46D0];
  v18 = STACK[0x46C8];
  v19 = STACK[0x46D8];
  v10[20] = *(_BYTE *)(STACK[0x46D0] + (v16 >> 24)) ^ *(_BYTE *)(STACK[0x46C8] + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24) + STACK[0x46D8] + 3) ^ v16 ^ (-85 * BYTE3(v16)) ^ 0x52;
  LODWORD(v16) = 1772489163 * ((*(_DWORD *)(v13 + v14) ^ ((_DWORD)v10 + 21)) & 0x7FFFFFFF);
  v20 = 1772489163 * (v16 ^ WORD1(v16));
  v10[21] = *(_BYTE *)(v17 + (v20 >> 24)) ^ *(_BYTE *)(v18 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v19 + 3) ^ v20 ^ (-85 * BYTE3(v20)) ^ 0xC4;
  LODWORD(v20) = 1772489163 * ((*(_DWORD *)(v13 + v14) ^ ((_DWORD)v10 + 22)) & 0x7FFFFFFF);
  v21 = 1772489163 * (v20 ^ WORD1(v20));
  v10[22] = *(_BYTE *)(v17 + (v21 >> 24)) ^ *(_BYTE *)(v18 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v19 + 3) ^ v21 ^ (-85 * BYTE3(v21)) ^ 0xAD;
  LODWORD(v13) = 1772489163 * ((*(_DWORD *)(v13 + v14) ^ ((_DWORD)v10 + 23)) & 0x7FFFFFFF);
  v22 = 1772489163 * (v13 ^ WORD1(v13));
  LOBYTE(v21) = *(_BYTE *)(v17 + (v22 >> 24));
  STACK[0x8DF8] = (unint64_t)(v10 + 20);
  v10[23] = v21 ^ *(_BYTE *)(v18 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v19 + 3) ^ v22 ^ (-85 * BYTE3(v22)) ^ 0xCC;
  v23 = (_BYTE *)STACK[0x8DF8];
  v24 = (_BYTE *)STACK[0x8DF8];
  v25 = *v11 & a2;
  LODWORD(v14) = 1772489163 * ((*(_DWORD *)(*v12 + v25) ^ (STACK[0x8DF8] + 4)) & 0x7FFFFFFF);
  v26 = 1772489163 * (v14 ^ WORD1(v14));
  v23[4] = *(_BYTE *)(v17 + (v26 >> 24)) ^ *(_BYTE *)(v18 + (v26 >> 24)) ^ *(_BYTE *)((v26 >> 24) + v19 + 3) ^ v26 ^ (-85 * BYTE3(v26)) ^ 0x58;
  LODWORD(v26) = 1772489163 * ((*(_DWORD *)(*v12 + v25) ^ ((_DWORD)v23 + 5)) & 0x7FFFFFFF);
  v27 = 1772489163 * (v26 ^ WORD1(v26));
  v28 = *(_BYTE *)(v17 + (v27 >> 24));
  v29 = *(_BYTE *)(v18 + (v27 >> 24));
  STACK[0xA060] = (unint64_t)(v10 + 40);
  v23[5] = v28 ^ v29 ^ *(_BYTE *)((v27 >> 24) + v19 + 3) ^ v27 ^ (-85 * BYTE3(v27)) ^ 0xB2;
  LODWORD(v10) = 1772489163 * ((*(_DWORD *)(*v12 + v25) ^ ((_DWORD)v23 + 6)) & 0x7FFFFFFF);
  v30 = 1772489163 * (v10 ^ (v10 >> 16));
  v23[6] = *(_BYTE *)(v17 + (v30 >> 24)) ^ *(_BYTE *)(v18 + (v30 >> 24)) ^ *(_BYTE *)((v30 >> 24) + v19 + 3) ^ v30 ^ (-85 * BYTE3(v30)) ^ 0xAC;
  LODWORD(v30) = 1772489163 * ((*(_DWORD *)(*v12 + v25) ^ ((_DWORD)v23 + 7)) & 0x7FFFFFFF);
  v31 = 1772489163 * (v30 ^ WORD1(v30));
  v23[7] = *(_BYTE *)(v17 + (v31 >> 24)) ^ *(_BYTE *)(v18 + (v31 >> 24)) ^ *(_BYTE *)((v31 >> 24) + v19 + 3) ^ v31 ^ (-85 * BYTE3(v31)) ^ 0xF8;
  v32 = *v12;
  v33 = *v11 & a2;
  LODWORD(v31) = 1772489163 * ((*(_DWORD *)(*v12 + v33) ^ ((_DWORD)v24 + 8)) & 0x7FFFFFFF);
  v34 = 1772489163 * (v31 ^ WORD1(v31));
  v24[8] = *(_BYTE *)(v17 + (v34 >> 24)) ^ *(_BYTE *)(v18 + (v34 >> 24)) ^ *(_BYTE *)((v34 >> 24) + v19 + 3) ^ v34 ^ (-85 * BYTE3(v34)) ^ 0x6A;
  LODWORD(v34) = 1772489163 * ((*(_DWORD *)(v32 + v33) ^ ((_DWORD)v24 + 9)) & 0x7FFFFFFF);
  v35 = 1772489163 * (v34 ^ WORD1(v34));
  v24[9] = *(_BYTE *)(v17 + (v35 >> 24)) ^ *(_BYTE *)(v18 + (v35 >> 24)) ^ *(_BYTE *)((v35 >> 24) + v19 + 3) ^ v35 ^ (-85 * BYTE3(v35)) ^ 0xEF;
  LODWORD(v35) = 1772489163 * ((*(_DWORD *)(v32 + v33) ^ ((_DWORD)v24 + 10)) & 0x7FFFFFFF);
  v36 = 1772489163 * (v35 ^ WORD1(v35));
  v24[10] = *(_BYTE *)(v17 + (v36 >> 24)) ^ *(_BYTE *)(v18 + (v36 >> 24)) ^ *(_BYTE *)((v36 >> 24) + v19 + 3) ^ v36 ^ (-85 * BYTE3(v36)) ^ 0x74;
  LODWORD(v36) = 1772489163 * ((*(_DWORD *)(v32 + v33) ^ ((_DWORD)v24 + 11)) & 0x7FFFFFFF);
  v37 = 1772489163 * (v36 ^ WORD1(v36));
  v24[11] = *(_BYTE *)(v17 + (v37 >> 24)) ^ *(_BYTE *)(v18 + (v37 >> 24)) ^ *(_BYTE *)((v37 >> 24) + v19 + 3) ^ v37 ^ (-85 * BYTE3(v37)) ^ 0x98;
  v38 = (_BYTE *)STACK[0x8DF8];
  v39 = *v12;
  v40 = *v11 & a2;
  LODWORD(v32) = 1772489163 * ((*(_DWORD *)(*v12 + v40) ^ (STACK[0x8DF8] + 12)) & 0x7FFFFFFF);
  v41 = 1772489163 * (v32 ^ WORD1(v32));
  v38[12] = *(_BYTE *)(v17 + (v41 >> 24)) ^ *(_BYTE *)(v18 + (v41 >> 24)) ^ *(_BYTE *)((v41 >> 24) + v19 + 3) ^ v41 ^ (-85 * BYTE3(v41)) ^ 0x3B;
  LODWORD(v41) = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 13)) & 0x7FFFFFFF);
  v42 = 1772489163 * (v41 ^ WORD1(v41));
  v38[13] = *(_BYTE *)(v17 + (v42 >> 24)) ^ *(_BYTE *)(v18 + (v42 >> 24)) ^ *(_BYTE *)((v42 >> 24) + v19 + 3) ^ v42 ^ (-85 * BYTE3(v42)) ^ 0xFB;
  LODWORD(v42) = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 14)) & 0x7FFFFFFF);
  v43 = 1772489163 * (v42 ^ WORD1(v42));
  v38[14] = *(_BYTE *)(v17 + (v43 >> 24)) ^ *(_BYTE *)(v18 + (v43 >> 24)) ^ *(_BYTE *)((v43 >> 24) + v19 + 3) ^ v43 ^ (-85 * BYTE3(v43)) ^ 6;
  LODWORD(v39) = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 15)) & 0x7FFFFFFF);
  v44 = 1772489163 * (v39 ^ WORD1(v39));
  v38[15] = *(_BYTE *)(STACK[0x4708] + (v44 >> 24)) ^ *(_BYTE *)((v44 >> 24) + STACK[0x4710] + 2) ^ *(_BYTE *)((v44 >> 24) + STACK[0x4718] + 1) ^ v44 ^ (31 * BYTE3(v44)) ^ 0x7F;
  return (*(uint64_t (**)(void))(v8 + 8 * (v3 ^ 0x1714 ^ (9012 * ((v3 - 1992642620) > 0xE626084C)))))();
}

uint64_t sub_100B1AB38()
{
  int v0;

  LODWORD(STACK[0xC6A8]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2310 * (STACK[0xC5E0] != 0)) ^ LODWORD(STACK[0x41E4])))
                            - 8))();
}

uint64_t sub_100B1AB7C()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 8818;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B1AB9C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((((STACK[0x6508] + 2634778) | 0x9E449040) + 1637047221) ^ (85 * (STACK[0x6508] ^ 0x10E4)))
                                               * (STACK[0xA9B0] == 0)) ^ LODWORD(STACK[0x41E8])))
                            - 4))();
}

uint64_t sub_100B1AC10()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(v0 ^ 0x9E6C9F5C ^ ((v0 == -157138472)
                                                                               * ((v0 + 1637047210) ^ 0xECD9))))
                                          - 4))(v1);
}

uint64_t sub_100B1AC60()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((250 * (STACK[0x8B70] != 0)) ^ v0)))();
}

uint64_t sub_100B1AC98()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 8196)))(v1);
}

uint64_t sub_100B1ACB0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((195 * (STACK[0xB2B8] == 0)) ^ (v0 + 4))))();
}

uint64_t sub_100B1ACE0()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 67)))(v1);
}

uint64_t sub_100B1ACF4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 + 17076) | (4 * (STACK[0xAB00] != 0)))) - 12))();
}

uint64_t sub_100B1AD24()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B1AD38()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((((v0 + 795492224) & 0xD095F9BD) - 11486) ^ (v0 - 4163))))();
}

uint64_t sub_100B1AD74()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 11765)))();
}

uint64_t sub_100B1AD9C()
{
  return ((uint64_t (*)(void))STACK[0xB940])();
}

uint64_t sub_100B1ADBC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((*(_QWORD *)STACK[0x4C20] != 0) * (((a1 - 14660) | 6) - 4202)) ^ a1))
                            - 12))();
}

uint64_t sub_100B1ADF8()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = v1 + 13;
  v4 = STACK[0x6AD8];
  v5 = 2142736129
     * ((0x2ED02B97C1FBA2B9 - (STACK[0x4780] | 0x2ED02B97C1FBA2B9) + STACK[0x4778]) ^ 0x9EB7FBEF97B38BE6);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 13)) ^ v5;
  LODWORD(STACK[0x1D358]) = (v1 + 427180632) ^ v5;
  STACK[0x1D350] = v0;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ 0x5937)) - 14 * (v3 ^ 0x11AEu) + 4202))(v6);
}

uint64_t sub_100B1AEAC()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B1AEC8()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0xACF8])();
}

uint64_t sub_100B1AEF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  _QWORD *v6;

  v5 = STACK[0x6AD8];
  STACK[0xCA38] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) + a2;
  v6 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0xC768] += (v3 - 52055813) & 0x31A27F7 ^ 0x2103;
  *v6 = 0x7A3A88A8128B38ADLL;
  v6[1] = 0xAF9B8BA0AECD677DLL;
  STACK[0xD1A8] += 32;
  LODWORD(STACK[0xD4FC]) = 0;
  STACK[0xD510] = v2;
  STACK[0xD4E8] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((107 * (v6 == (_QWORD *)a1)) ^ v3)))();
}

uint64_t sub_100B1B190@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char *v6;

  v4 = *(_BYTE *)(a2 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = (char *)&STACK[0x1D0C0] + v3;
  *v6 = *a1;
  v6[1] = v4;
  *(_QWORD *)(v6 + 2) = 0x677D7A3A88A8128BLL;
  *(_DWORD *)(v6 + 10) = -1952403763;
  *((_WORD *)v6 + 7) = -20581;
  *((_QWORD *)v6 + 2) = *(_QWORD *)a1;
  *((_QWORD *)v6 + 3) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((v2 - 738767156) & 0x2C08DCEE) + 19650))();
}

uint64_t sub_100B1B240(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((109 * (((v1 + 10037) | 0x486) ^ 0x4CFB)) ^ 0x1695) * (a1 == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_100B1B2B8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 == 0) ^ v1 ^ 0x5F) & 1)
                                          * ((197 * (v1 ^ 0x4CE5)) ^ 0x210E)) ^ v1))
                            - 4))();
}

uint64_t sub_100B1B304(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  unsigned __int8 v6;
  unsigned int v7;
  int v8;
  _BOOL4 v10;

  v7 = v3 & 0xF5F1A583 ^ v4 ^ 0x759E ^ 0x449463DF ^ ((v3 & 0xF5F1A583) << ((v4 + 122) ^ 0x90)) & (v3 ^ 0xF1E591D3);
  v8 = (v6 ^ (2
                             * ((4 * v7) ^ v7 ^ (4 * v7) & ((2 * (v3 ^ 0xD5)) & 0x54 ^ 0x50 ^ ((2 * (v3 ^ 0xD5)) ^ LOBYTE(STACK[0x1F24])) & (v3 ^ 0xD5))))) & 0xF ^ 2;
  v10 = ((v8 - ((2 * v8) & 0xC) - 169130794) & (a3 + 75) ^ 0x4200C)
      + ((v8 - ((2 * v8) & 0xC) - 169130794) ^ 0xF36B0472)
      - (((v8 - ((2 * v8) & 0xC) - 169130794) ^ 0xF36B0472) & (v5 + 3000)) == -1037754123
     && v3 != 168712829;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((582 * v10) ^ v4)) - 12))();
}

uint64_t sub_100B1B438@<X0>(unint64_t a1@<X0>, int a2@<W6>, unsigned __int8 *a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  unint64_t v45;
  uint64_t v46;

  LODWORD(STACK[0x6A80]) = a2;
  STACK[0x6A90] = a1;
  v7 = *(_QWORD *)(v4 + 8 * (v3 ^ 0x504E)) - 8;
  v8 = *(unsigned __int8 *)(v7 + (*a3 ^ 0x12));
  v9 = a3[10] ^ 0x66;
  STACK[0xD520] = 0;
  STACK[0xD4E0] = 0;
  v10 = v9 - ((2 * v9) & 0xD2) + 105;
  v11 = *(_QWORD *)(v4 + 8 * (v3 - 21286)) - 4;
  v12 = a3[15];
  v13 = (v8 ^ 0xC2) << 24;
  STACK[0x6890] = v11;
  v14 = *(unsigned __int8 *)(v11 + v10);
  v15 = *(_QWORD *)(v4 + 8 * (v3 - 19754)) - 4;
  v16 = *(unsigned __int8 *)(v15 + (v12 ^ 0x59));
  v17 = *(_QWORD *)(v4 + 8 * (v3 ^ 0x57D5));
  LODWORD(v12) = *(unsigned __int8 *)(v17 + (a3[6] ^ 0xE2));
  v18 = a3[4] ^ 0x7ELL;
  STACK[0x68A0] = v7;
  LODWORD(v18) = *(unsigned __int8 *)(v7 + v18);
  STACK[0xD530] = 0;
  v19 = a3[2];
  LODWORD(v11) = v16 ^ 0x52 ^ (v16 >> 7) ^ ((v16 ^ 0x52) >> 3);
  STACK[0xD4F0] = 0;
  LODWORD(STACK[0x6AB0]) = v12 ^ 0x65;
  STACK[0xD528] = 0x400367C8C4C8FF05;
  v20 = *(_QWORD *)(v4 + 8 * (v3 - 20825)) - 4;
  STACK[0x6880] = v20;
  v21 = *(unsigned __int8 *)(v20 + (((v19 ^ 0xB5) - (v19 ^ 0x52)) ^ 0xFFFFFFFE) + (v19 ^ 0xB5));
  v22 = a3[13] ^ 0x21;
  v23 = *(_QWORD *)(v4 + 8 * (v3 ^ 0x5DD2));
  STACK[0xD500] = 0;
  LODWORD(STACK[0x6AA0]) = (v18 ^ 0x76) << 24;
  STACK[0x6870] = v23 - 12;
  LOBYTE(v18) = *(_BYTE *)(v23 - 12 + v22);
  STACK[0xD518] = 0x19FEB71C76E85E41;
  LODWORD(STACK[0xD4FC]) = 298286298;
  v24 = v21 ^ 0x65;
  v25 = a3[9] ^ 0x10;
  v26 = a3[14];
  v27 = *(_QWORD *)(v4 + 8 * (v3 ^ 0x5120)) - 8;
  STACK[0x6860] = v27;
  v28 = v13 | (v24 << 8);
  v29 = v11 & 0x12;
  v30 = (4 * (v14 ^ 0xF9)) | ((*(unsigned __int8 *)(v27 + v25) ^ 0xA8) << 10);
  LODWORD(v25) = *(unsigned __int8 *)(v17 + (v26 ^ 0x26)) ^ 0xDD;
  v31 = (a3[12] ^ 0x1F) - (v6 & (2 * (a3[12] ^ 0x1F)));
  LODWORD(STACK[0x6A70]) = a3[5] ^ 0xD1 ^ *(unsigned __int8 *)(*(_QWORD *)(v4 + 8 * (v3 - 20393))
                                                             + (a3[5] ^ 0xD8)
                                                             - 12);
  LODWORD(v17) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 8 * (v3 ^ 0x5520)) + (v31 + 226));
  v32 = ((v26 ^ 0xDC)
                        - 7
                        * ((((37 * (v26 ^ 0xDCu)) >> 8)
                          + ((((v26 ^ 0xDC)
                                              - ((unsigned __int16)(37 * (v26 ^ 0xDC)) >> 8)) & 0xFE) >> 1)) >> 2));
  v33 = a3[11] ^ 0xF3;
  STACK[0x68F0] = v15;
  LODWORD(v26) = *(unsigned __int8 *)(v15 + v33);
  v34 = a3[8];
  LODWORD(v11) = ((_DWORD)v25 << 8) | ((((v17 >> 3) | (32 * (_DWORD)v17)) ^ 0x2A ^ (((v17 >> 3) | (32 * (_DWORD)v17)) >> 3) & 0xA) << 24) | v11 & 0xFF00FFFF | (((v18 ^ (32 * (v18 ^ 0x7E)) ^ (2 * (v18 ^ 0x7E))) ^ 0x93) << 16);
  LODWORD(STACK[0x6A60]) = v11 & 0x373CBCFF ^ v29;
  v35 = a3[(v32 ^ 7) + v32];
  LODWORD(STACK[0x6A50]) = v11 + 926727405;
  v36 = *(_QWORD *)(v4 + 8 * (v3 - 21631)) - 12;
  LOBYTE(v11) = (v35 ^ 0x27) + *(_BYTE *)(v36 + (v35 ^ 0xDA));
  v37 = *(_QWORD *)(v4 + 8 * (v3 - 21269)) - 12;
  STACK[0x6850] = v37;
  LODWORD(v32) = *(unsigned __int8 *)(v37 + (v34 ^ 0x17));
  HIDWORD(v38) = v26 ^ 0x52 ^ (v26 >> 7) ^ ((v26 ^ 0x52) >> 3);
  LODWORD(v38) = v26 ^ 0x52;
  v39 = ((v38 >> 6) | (unint64_t)v30) ^ 0x86A0C27E;
  STACK[0x6A40] = v39;
  STACK[0x6AC0] = v39 >> 26;
  LODWORD(STACK[0x6A30]) = (v11 + 1);
  v40 = a3[1];
  v41 = a3[3];
  LODWORD(STACK[0x69D0]) = (v32 ^ ((v32 ^ 0xC6) >> 5) ^ ((v32 ^ 0xC6) >> 3) ^ 0x40) << 24;
  v42 = *(_QWORD *)(v4 + 8 * (v3 - 20927)) - 12;
  STACK[0x6840] = v42;
  v43 = v28 | ((*(unsigned __int8 *)(v42 + (v40 ^ 0x41)) ^ 0x31) << 16);
  LODWORD(v40) = ((v41 ^ 0x60) + *(unsigned __int8 *)(v36 + (v41 ^ 0x9D)) + 1) ^ 0x78;
  LODWORD(v37) = (~(2 * v40) | 0xFFFFFF69) + v40 + 1041427788;
  LODWORD(STACK[0x6820]) = v37;
  v44 = ((v43 - ((2 * v43) & 0x47BE4200) - 1545658031) ^ 0xF0ED4F53) & (v37 ^ 0xC1ED12B4) ^ v37 & 0x80001FD;
  LODWORD(STACK[0x6930]) = v44;
  LODWORD(STACK[0x6A20]) = v44 ^ 0x904E406F;
  v45 = STACK[0xD510];
  v46 = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  LODWORD(STACK[0x67D0]) = v5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v46 - 8))(174, 186, 3154111325, 1517924208, v45);
}

uint64_t sub_100B1B9E4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  unsigned int v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unsigned int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  unsigned int v19;
  int v20;
  _BOOL4 v21;
  _BOOL4 v22;

  v16 = (v13 ^ 0x2C) & (2 * (v13 & (((v8 ^ 0x83) * v10) ^ 0x58))) ^ v13 & (((v8 ^ 0x83) * v10) ^ 0x58);
  v17 = ((2 * (v13 ^ v12)) ^ 0xBC) & (v13 ^ v12) ^ (2 * (v13 ^ v12)) & (v15 + 2);
  v18 = v13 ^ (2
             * (((4 * (v17 ^ 0x42)) & v15 ^ ((4 * (v17 ^ 0x42)) ^ a4) & (v17 ^ 0x42) ^ 0x40) & (16
                                                                                              * ((v17 ^ 0x9A) & (4 * v16) ^ v16)) ^ (v17 ^ 0x9A) & (4 * v16) ^ v16));
  *(_BYTE *)(a7 + v9) = ((*(_BYTE *)(a5 + v9) - 96) ^ a1 ^ v18) + 2 * ((v18 ^ v11) & (*(_BYTE *)(a5 + v9) - 96));
  v19 = v9 + 1 + v14;
  v20 = (a8 < v14) ^ (v19 < v14);
  v21 = v19 < a8;
  if (v20)
    v22 = a8 < v14;
  else
    v22 = v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v22 | (4 * !v22)) ^ v8)) - 8))();
}

uint64_t sub_100B1BB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0x69F0]) = (LODWORD(STACK[0x6A50]) - (LODWORD(STACK[0x6A60]) << (10 * (a6 ^ 0x85) - 125))) ^ (((a6 - 1953934761) & 0x7476ABFE) + 551827393);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a6 ^ (6496 * (((v7 - v6) & 3) != 1)))) - 4))();
}

uint64_t sub_100B1BCAC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((((a7 + 1272041185) & 0xB42E2FEC) - 8388) * (a2 == 2)) ^ a7))
                            - 4))();
}

uint64_t sub_100B1BD18(int a1)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (31 * ((~a1 & 3) != 0))))
                            - ((v1 - 853277111) & 0x32DBB97E ^ 0x2144)))();
}

uint64_t sub_100B1BD7C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 16014)) - 4))();
}

uint64_t sub_100B1BDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  LODWORD(STACK[0x6A70]) = v5 ^ 0x4E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a5) - 12))(a1, a2, 2055821704);
}

uint64_t sub_100B1BE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((a3 + v8 + (v10 ^ (2 * a5)) == v9 + 16) * a8) ^ a5))
                            - 12))();
}

uint64_t sub_100B1BEF4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x69B0]) = v0 | STACK[0x6AC0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 1486)) - 4))();
}

uint64_t sub_100B1BF60(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                                       + 8
                                                                       * (((v8
                                                                          + v9
                                                                          - 3
                                                                          * (((a3 * (unint64_t)v12) >> 32) >> 1)
                                                                          + 1 != (((v10 ^ a7) * a8) ^ v13))
                                                                         * v11) ^ (v10 + 1462)))
                                                           - 4))(a1, a2, a3 + 1);
}

uint64_t sub_100B1BFBC(int a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  unint64_t v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  int v358;
  uint64_t v359;
  int v360;

  LODWORD(STACK[0x6AA0]) = (v10 ^ 0x1684) + 4212;
  v15 = v7 + v6 - (v3 + a2) + 2 * a1 + v8;
  LODWORD(STACK[0x6AB0]) = 5567 * (v10 ^ 0x1684);
  v16 = -1543503872 * v15 + ((1415444009 * v15) >> 6);
  v17 = (840597504 * v4) | ((772957237 * v4) >> 17);
  v18 = ((192601633 * v2) >> (((v10 ^ 0x84) + 116) ^ 0x61)) | (-172211712 * v2);
  v19 = -v17 - v18 + ((((417122717 * v5) >> ((-65 * (v10 ^ 0x84)) ^ 0x65)) | (463025056 * v5)) ^ v16);
  v20 = (2003304448 * v17) | ((-1198346515 * v17) >> 13);
  v21 = (v18 * LODWORD(STACK[0x19FC])) & 0xFFFFFF00 | ((1847378319 * v18) >> 24);
  v22 = -1040187392 * v19 + ((694615777 * v19) >> 7);
  v23 = -1992832625 * v22;
  v24 = 1307730880 * v22;
  v25 = v20 - 1560281088 * v16 + ((-467306077 * v16) >> 8) - v21 + v22;
  v26 = v24 & 0xFFFFFFC0 | (v23 >> 26);
  v27 = (1675624448 * v20) | ((-1791880417 * v20) >> 11);
  v28 = (1358577664 * v25) | ((-1984609303 * v25) >> 18);
  v29 = (v26 ^ ((1077149696 * v21) | ((-1069461491 * v21) >> 14)) ^ v28) + v27;
  v30 = (1577058304 * v26) | ((-1273956177 * v26) >> 7);
  v31 = ((-606967168 * v28) | ((767010005 * v28) >> 25))
      - ((2 * ((-606967168 * v28) | ((767010005 * v28) >> 25))) & 0x188B0CE4)
      + 205882994;
  v32 = ((1879048192 * v29) | ((-148569049 * v29) >> 4))
      - 2 * (((1879048192 * v29) | ((-148569049 * v29) >> 4)) & 0x414E6E6C ^ ((-148569049 * v29) >> 4) & 0x20)
      + 1095659084;
  v33 = v30 ^ ((1476395008 * v27) | ((836601771 * v27) >> 5)) ^ v31 ^ v32;
  v34 = (v32 ^ 0x414E6E4C) + ((v30 - ((2 * v30) & 0x188B0CE4) + 205882994) ^ 0xC1720466 ^ v31);
  v35 = (((v34 ^ 0xF328B1C6) - 1569595025) ^ ((v34 ^ 0xB47EC49F) - 450390984) ^ ((v34 ^ 0x4AD04D36) + 461970847))
      - (((v33 ^ 0x7BCC58B5) - 1535549486) ^ ((v33 ^ LODWORD(STACK[0x1A00])) + 1095336494) ^ ((v33 ^ 0xA83B35C2)
                                                                                            + 2005807783));
  v36 = v35 + 1868914589;
  v37 = 967968897 * v35 - 418702620;
  v38 = (v37 ^ 0xA3F90C0E) & (2 * (v37 & 0x88024D2F)) ^ v37 & 0x88024D2F;
  v39 = ((2 * (v37 ^ 0xB3F9060E)) ^ 0x77F69642) & (v37 ^ 0xB3F9060E) ^ (2 * (v37 ^ 0xB3F9060E)) & 0x3BFB4B20;
  v40 = v39 ^ 0x8094921;
  v41 = (v39 ^ 0x28120001) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0xEFED2C84) & v40 ^ (4 * v40) & 0x3BFB4B20;
  v43 = (v42 ^ LODWORD(STACK[0x1A04])) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x10124321)) ^ 0xBFB4B210) & (v42 ^ 0x10124321) ^ (16 * (v42 ^ 0x10124321)) & 0x3BFB4B20;
  v45 = v43 ^ 0x3BFB4B21 ^ (v44 ^ 0x3BB00200) & (v43 << 8);
  v46 = v37 ^ (2
             * ((v45 << 16) & 0x3BFB0000 ^ v45 ^ ((v45 << 16) ^ 0x4B210000) & (((v44 ^ 0x4B4921) << 8) & 0x3BFB0000 ^ 0xB00000 ^ (((v44 ^ 0x4B4921) << 8) ^ 0xFB4B0000) & (v44 ^ 0x4B4921))));
  v47 = v46 ^ 0xFD2EDB9;
  v48 = ((v12 + (v32 ^ 0xFDFC80BE) + 1408) ^ ((v32 ^ 0x8523B691) + 2061257071) ^ ((v32 ^ 0x39915863) - 965826659))
      - (((v46 ^ 0x8BCF9134) + 2078442355) ^ ((v46 ^ 0x62813237) - 1834213262) ^ ((v46 ^ 0xF8786E) - 254449111))
      + 1547193580;
  v49 = (v48 ^ 0xFE2DCAAA) & (2 * (v48 & 0xFEB1EA8C)) ^ v48 & 0xFEB1EA8C;
  v50 = ((2 * (v48 ^ 0x4B0EDABA)) ^ 0x6B7E606C) & (v48 ^ 0x4B0EDABA) ^ (2 * (v48 ^ 0x4B0EDABA)) & 0xB5BF3036;
  v51 = v50 ^ 0x94811012;
  v52 = (v50 ^ 0x210E2022) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xD6FCC0D8) & v51 ^ (4 * v51) & 0xB5BF3034;
  v54 = (v53 ^ 0x94BC0000) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x21033026)) ^ 0x5BF30360) & (v53 ^ 0x21033026) ^ (16 * (v53 ^ 0x21033026)) & 0xB5BF3030;
  v56 = v54 ^ 0xB5BF3036 ^ (v55 ^ 0x11B30000) & (v54 << 8);
  v57 = v48 ^ (2
             * ((v56 << 16) & 0x35BF0000 ^ v56 ^ ((v56 << 16) ^ 0x30360000) & (((v55 ^ 0xA40C3016) << 8) & 0x35BF0000 ^ 0x8F0000 ^ (((v55 ^ 0xA40C3016) << 8) ^ 0xBF300000) & (v55 ^ 0xA40C3016))));
  LODWORD(STACK[0x69C0]) = v46;
  v58 = (((v31 ^ 0xBADC61E8) + 1159962136) ^ ((v31 ^ 0x7A032871) - 2047027313) ^ ((v31 ^ 0xCC9ACFEB) + 862269461))
      - (((v46 ^ 0xAC20D021) + 1544405608) ^ ((v46 ^ 0x99BDCEC1) + 1771101320) ^ ((v46 ^ 0xDC2BC58D) + 738645964))
      - 1831387958;
  v59 = ((2 * (v58 & 0x930A12D4)) & 0x2508 | v58 & 0x930A12D4) ^ (2 * (v58 & 0x930A12D4)) & (v58 ^ 0x9B0B3799);
  v60 = ((2 * (v58 ^ 0x9B0B3799)) ^ LODWORD(STACK[0x1A08])) & (v58 ^ 0x9B0B3799) ^ (2 * (v58 ^ 0x9B0B3799)) & 0x801254C;
  v61 = v60 ^ 0x8012545;
  v62 = (v60 ^ 0x12005) & (4 * v59) ^ v59;
  v63 = ((4 * v61) ^ LODWORD(STACK[0x1A0C])) & v61 ^ (4 * v61) & 0x801254C;
  v64 = (v63 ^ 0x500) & (16 * v62) ^ v62;
  v65 = ((16 * (v63 ^ 0x8012049)) ^ 0x801254D0) & (v63 ^ 0x8012049) ^ (16 * (v63 ^ 0x8012049)) & 0x8012540;
  v66 = v64 ^ 0x801254D ^ (v65 ^ 0x400) & (v64 << 8);
  v67 = v58 ^ (2
             * ((v66 << 16) & 0x8010000 ^ v66 ^ ((v66 << 16) ^ 0x254D0000) & (((v65 ^ 0x801210D) << 8) & 0x8010000 ^ (((v65 ^ 0x801210D) << 8) ^ 0x1250000) & (v65 ^ 0x801210D) ^ 0x8000000)));
  LODWORD(STACK[0x6920]) = v47;
  v68 = v47 ^ v33;
  v69 = v47 ^ v33 ^ 0x204AF89B;
  v70 = (((v57 ^ 0x55440C41) - 1741109863) ^ ((v57 ^ 0xC0AD4D5E) + 231834760) ^ ((v57 ^ 0x604ACBFF) - 1388969433))
      * LODWORD(STACK[0x1A10])
      + 947633820;
  v71 = (v70 ^ 0xB2CABEFE) & (2 * (v70 & 0xB0CCBCFE)) ^ v70 & 0xB0CCBCFE;
  v72 = ((2 * (v70 ^ 0xD253F712)) ^ 0xC53E97D8) & (v70 ^ 0xD253F712) ^ (2 * (v70 ^ 0xD253F712)) & 0x629F4BEC;
  v73 = v72 ^ 0x22814824;
  v74 = (v72 ^ 0x401603C8) & (4 * v71) ^ v71;
  v75 = ((4 * v73) ^ 0x8A7D2FB0) & v73 ^ (4 * v73) & 0x629F4BEC;
  v76 = (v75 ^ 0x21D0BA0) & (16 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x6082404C)) ^ 0x29F4BEC0) & (v75 ^ 0x6082404C) ^ (16 * (v75 ^ 0x6082404C)) & 0x629F4BE0;
  v78 = v76 ^ 0x629F4BEC ^ (v77 ^ 0x20940A2C) & (v76 << 8);
  v79 = v70 ^ (2
             * ((v78 << 16) & 0x629F0000 ^ v78 ^ ((v78 << 16) ^ 0x4BEC0000) & (((v77 ^ LODWORD(STACK[0x1A14])) << 8) & 0x629F0000 ^ 0x60940000 ^ (((v77 ^ LODWORD(STACK[0x1A14])) << 8) ^ 0x1F4B0000) & (v77 ^ LODWORD(STACK[0x1A14])))));
  LODWORD(STACK[0x6990]) = v69;
  v80 = -1609831171
      * (((v67 ^ 0xFF2F0303) - 597781318) ^ ((v67 ^ 0x3C69F73B) + 521691266) ^ ((v67 ^ 0x404CAC76) + 1664957389))
      - 1671309223;
  v81 = (v80 ^ 0x94049416) & (2 * (v80 & 0x9604C686)) ^ v80 & 0x9604C686;
  v82 = ((2 * (v80 ^ 0xBC0D901A)) ^ 0x5412AD38) & (v80 ^ 0xBC0D901A) ^ (2 * (v80 ^ 0xBC0D901A)) & 0x2A09569C;
  v83 = v82 ^ LODWORD(STACK[0x1A18]);
  v84 = (v82 ^ 0x208449C) & (4 * v81) ^ v81;
  v85 = ((4 * v83) ^ 0xA8255A70) & v83 ^ (4 * v83) & 0x2A09569C;
  v86 = (v85 ^ 0x28015200) & (16 * v84) ^ v84;
  v87 = ((16 * (v85 ^ 0x208048C)) ^ 0xA09569C0) & (v85 ^ 0x208048C) ^ (16 * (v85 ^ 0x208048C)) & 0x2A095690;
  v88 = v86 ^ 0x2A09569C ^ (v87 ^ 0x2001401C) & (v86 << 8);
  v89 = v80 ^ (2
             * ((v88 << 16) & 0x2A090000 ^ v88 ^ ((v88 << 16) ^ 0x569C0000) & (((v87 ^ 0xA08161C) << 8) & 0x2A090000 ^ 0x22090000 ^ (((v87 ^ 0xA08161C) << 8) ^ 0x9560000) & (v87 ^ 0xA08161C))));
  LODWORD(STACK[0x69A0]) = v57 ^ v67;
  v90 = (((v57 ^ v67 ^ 0xDA332064) - 876510727) ^ ((v57 ^ v67 ^ 0xDA8DCEB1) - 880840914) ^ ((v57 ^ v67 ^ 0x76173C7B)
                                                                                          + 1743101416))
      - (((v57 ^ v67 ^ v69 ^ 0x6E3594CE) + 2143761747) ^ ((v57 ^ v67 ^ v69 ^ 0xBCDBC042) - 1389796897) ^ ((v57 ^ v67 ^ v69 ^ 0x2F62A053) + 1049625040))
      - 767211916;
  v91 = (v90 ^ 0xB0DD1BDC) & (2 * (v90 & 0xB2DD9B9D)) ^ v90 & 0xB2DD9B9D;
  v92 = ((2 * (v90 ^ 0xF06E18EC)) ^ 0x856706E2) & (v90 ^ 0xF06E18EC) ^ (2 * (v90 ^ 0xF06E18EC)) & 0x42B38370;
  v93 = v92 ^ LODWORD(STACK[0x1A1C]);
  v94 = (v92 ^ 0x220361) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0xACE0DC4) & v93 ^ (4 * v93) & 0x42B38370;
  v96 = (v95 ^ v14) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x40318231)) ^ 0x2B383710) & (v95 ^ 0x40318231) ^ (16 * (v95 ^ 0x40318231)) & 0x42B38370;
  v98 = v96 ^ 0x42B38371 ^ (v97 ^ (v13 - 3232)) & (v96 << 8);
  v99 = v90 ^ (2
             * ((v98 << 16) & 0x42B30000 ^ v98 ^ ((v98 << 16) ^ 0x3710000) & (((v97 ^ 0x40838061) << 8) & 0x42B30000 ^ 0x40300000 ^ (((v97 ^ 0x40838061) << 8) ^ 0x33830000) & (v97 ^ 0x40838061))));
  LODWORD(STACK[0x6810]) = v67;
  v100 = -201326592
       * (((v67 ^ 0x4B1B3D3F) + 1751820934) ^ ((v67 ^ 0xE628DBFE) - 984003515) ^ ((v67 ^ 0x2E39BE8F) + 222832950))
       - 1685761261;
  v101 = (((v100 & 0xE0000000) >> 29 << 30) | 2) & (v100 ^ 0xE8A8FA8C) ^ (v100 & 0xE0000000 | 0x8D25660);
  v102 = (2 * (v100 ^ 0xE8A8FA8C)) & 0x8000000 ^ 0x8000001 ^ ((2 * (v100 ^ 0xE8A8FA8C)) ^ 0x1124A882) & (v100 ^ 0xE8A8FA8C);
  v103 = (4 * v101) & 0x8D25660 ^ v101 & 0xE8920662 ^ ((4 * v101) ^ 0x23495984) & v102;
  v104 = (4 * v102) & 0x8D25660 ^ 0x8920661 ^ ((4 * v102) ^ 0x23495984) & v102;
  v105 = (16 * v103) & 0x8D25660 ^ v103 ^ ((16 * v103) ^ 0x8D256610) & v104;
  v106 = (16 * v104) & 0x8D25660 ^ (v9 - 2938) ^ ((16 * v104) ^ 0x8D256610) & v104;
  v107 = v105 ^ 0x8100600 ^ (v105 << 8) & 0x8D25600 ^ ((v105 << 8) ^ 0xD2106100) & v106;
  v108 = (v107 << 16) & 0x8D20000 ^ v107 ^ ((v107 << 16) ^ 0x56610000) & ((v106 << 8) & 0x8D20000 ^ 0x8800000 ^ ((v106 << 8) ^ 0x52560000) & v106);
  v109 = -406455209
       * (((v68 ^ 0x73F3871D) - 1404665734) ^ ((v68 ^ 0x34965664) - 350007039) ^ ((v68 ^ 0xEC0A0F93) + 868157688))
       + 1737952788;
  v110 = (v109 ^ 0xFF943C13) & (2 * (v109 & 0xFFD53E53)) ^ v109 & 0xFFD53E53;
  v111 = ((2 * (v109 ^ 0x5A167891)) ^ 0x4B868D84) & (v109 ^ 0x5A167891) ^ (2 * (v109 ^ 0x5A167891)) & 0xA5C346C2;
  v112 = v111 ^ 0xA4414242;
  v113 = (v111 ^ 0x1800082) & (4 * v110) ^ v110;
  v114 = ((4 * v112) ^ 0x970D1B08) & v112 ^ (4 * v112) & 0xA5C346C0;
  v115 = (v114 ^ LODWORD(STACK[0x1A20])) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x20C244C2)) ^ 0x5C346C20) & (v114 ^ 0x20C244C2) ^ (16 * (v114 ^ 0x20C244C2)) & 0xA5C346C0;
  v117 = v115 ^ 0xA5C346C2 ^ (v116 ^ 0x40044C2) & (v115 << 8);
  v118 = v109 ^ (2
               * ((v117 << 16) & 0x25C00000 ^ v117 ^ ((v117 << 16) ^ 0x46C00000) & (((v116 ^ 0xA1C302C2) << 8) & 0x25C30000 ^ 0x24800000 ^ (((v116 ^ 0xA1C302C2) << 8) ^ 0x43460000) & (v116 ^ 0xA1C302C2))));
  v119 = -907972608 * v36 + ((487366167 * v36 - 359836646) >> 20) - 717119488;
  v120 = v118 >> 19;
  v121 = (v89 >> 6) & STACK[0x1A24] ^ 0x21C18329 ^ ((v89 >> 6) ^ 0xFCE7E650) & (v100 ^ (2 * v108) ^ 0xAF405C7B);
  v122 = (((2 * v121) & 0xF33A16B0) - v121 - 2040335193) ^ 0xF8BD2A70;
  LODWORD(STACK[0x67C0]) = v57;
  v123 = -1541537792
       * (((v57 ^ 0xB95E8BEF) + 1948402231) ^ ((v57 ^ 0xA0E4B955) + 1838706829) ^ ((v57 ^ 0xEC19B85A) + 560296324))
       + 1430088976;
  v124 = (v123 ^ 0x19E6AC8F) & (2 * (v123 & 0xA1F60000)) ^ v123 & 0xA1F60000;
  v125 = (2 * (v123 ^ 0x5806AC8F)) & 0xF9F0003E ^ 0x8100001 ^ ((2 * (v123 ^ 0x5806AC8F)) ^ 0xF3E0409E) & (v123 ^ 0x5806AC8F);
  v126 = (4 * v124) & 0x89F00000 ^ v124 ^ ((4 * v124) | 0xC0) & v125;
  v127 = (4 * v125) & 0xF9F03E7C ^ 0x18300603 ^ ((4 * v125) ^ 0xE7C0F9FC) & v125;
  v128 = (16 * v126) & 0xF9F03E70 ^ v126 ^ ((16 * v126) ^ 0x700) & v127;
  v129 = (16 * v127) & 0xF9F03E70 ^ 0x60F0180F ^ ((16 * v127) ^ 0x9F03E7F0) & v127;
  v130 = v128 ^ (v128 << 8) & 0xF9F03E00 ^ ((v128 << 8) ^ 0x67000) & v129 ^ 0xF9F0080F;
  v131 = (v79 >> 15) & 0x1F40A ^ 0x1609EBF5 ^ ((v79 >> 15) ^ 0xFFFE1E2B) & (v123 ^ (2
                                                                                  * ((v130 << 16) & 0x79F00000 ^ v130 ^ ((v130 << 16) ^ 0x3E7F0000) & ((v129 << 8) & 0xF9F00000 ^ 0x9C00000 ^ ((v129 << 8) ^ 0x703E0000) & v129))) ^ 0x34FEE5FB);
  LODWORD(STACK[0x6A10]) = v68;
  v132 = -1081417728
       * (((v68 ^ 0x13E90BDF) - 866382660) ^ ((v68 ^ 0x2FCAE77E) - 260055013) ^ ((v68 ^ 0x974C324B) + 1224291632))
       - 366295831;
  v133 = (v132 ^ 0x5F4004CD) & (2 * (v132 & 0x9F620000)) ^ v132 & 0x9F620000;
  v134 = (2 * (v132 ^ 0x5BC404CD)) & 0xC4A60000 ^ 0x44A20002 ^ ((2 * (v132 ^ 0x5BC404CD)) ^ 0x894C2024) & (v132 ^ 0x5BC404CD);
  v135 = (4 * v133) & 0xC4800000 ^ v133 ^ ((4 * v133) | 0xC) & v134;
  v136 = (4 * v134) & 0xC4A61FD8 ^ 0xC4260092 ^ ((4 * v134) ^ 0x12987F68) & v134;
  v137 = (16 * v135) & 0xC4A61FD0 ^ v135 ^ ((16 * v135) ^ 0xB0) & v136;
  v138 = (16 * v136) & 0xC4A61FD0 ^ LODWORD(STACK[0x1A30]) ^ ((16 * v136) ^ 0x4A61FDA0) & v136;
  v139 = v137 ^ LODWORD(STACK[0x1A2C]) ^ (v137 << 8) & 0xC4A61F00 ^ ((v137 << 8) ^ 0x9B00) & v138;
  v140 = v132 ^ (2
               * ((v139 << 16) & 0x44A60000 ^ v139 ^ ((v139 << 16) ^ 0x1FDA0000) & ((v138 << 8) & 0xC4A60000 ^ 0x40A00000 ^ ((v138 << 8) ^ LODWORD(STACK[0x1A28])) & v138)));
  v141 = (v140 ^ 0xD45B5C) & (v120 ^ 0xBF67C7B) ^ v140 & 0xF409943E;
  v142 = (v141 & 0x62D8784D ^ 0x62D86849) + (v141 & 0x9D2787B2 ^ 0x14008011) - 1;
  v143 = ((v142 ^ 0xDA7B97EF) + 1416881368) ^ ((v142 ^ 0xD1C57A9F) + 1607272872) ^ ((v142 ^ LODWORD(STACK[0x1A34]))
                                                                                  - 326100493);
  v144 = (v122 ^ v119) - (v131 + v143) - 416353149;
  v145 = (-760809617 * v131) >> 10;
  HIDWORD(v147) = 3 * v144;
  LODWORD(v147) = 1126199859 * v144;
  v146 = v147 >> 4;
  v148 = (-608174080 * v131) | v145;
  HIDWORD(v147) = v120 ^ 0x3BA;
  LODWORD(v147) = 1434365953 * v143 - 113443971;
  v149 = v147 >> 10;
  LOBYTE(v120) = 95 * v149;
  v150 = 1016013429 * v148;
  v151 = ((((1626280576 * v122) | ((583130661 * v122) >> 25)) - v146) ^ v148) - v149;
  v152 = (-611872768 * v146) | ((1676523641 * v146) >> 20);
  v153 = (-1965293568 * v151) | ((1612260023 * v151) >> 14);
  v154 = (1593835520 * v149) | ((-781515425 * v149) >> 8);
  v155 = __PAIR64__(v145, v150) >> 1;
  v156 = (-297372160 * v152) | ((-1879628997 * v152) >> 23);
  v157 = (1652080640 * v153) | ((-2059564573 * v153) >> 18);
  v158 = (-405274624 * ((v152 ^ v155) + v154 + v153)) | ((-1021502213 * ((v152 ^ v155) + v154 + v153)) >> 13);
  v159 = (v156 ^ ((-1179991808 * v154) | ((-793138495 * v154) >> 24))) - v157;
  v160 = (v158 ^ v159) + 2 * (v158 & v159);
  v161 = ((((2 * (v156 - v157)) & 0x621873F8) + ((v156 - v157) ^ 0x310C39FC)) ^ v158) + v160;
  LODWORD(STACK[0x67B0]) = v161;
  v162 = (v161 + 1970943909) ^ v160;
  v163 = v158 - (v161 + 1970943909);
  v164 = v157 - (v161 + 1970943909);
  LODWORD(STACK[0x68D0]) = v163;
  LODWORD(STACK[0x6AC0]) = v162;
  LODWORD(STACK[0x6A50]) = v161 + 1970943909;
  LODWORD(STACK[0x6980]) = v99;
  v165 = ((2028376355 * (v161 + 1970943909)) >> (v99 & 0x15 ^ 0x15) >> (v99 & 0x15)) | (881399808 * (v161 + 1970943909));
  LODWORD(STACK[0x69E0]) = v164;
  v166 = (1620049920 * v164) | ((-417679863 * v164) >> 12);
  v167 = (219607040 * v163) | ((929091951 * v163) >> 20);
  v168 = -1476395008
       * (((v162 ^ 0xB1593188) - 1124297774) ^ ((v162 ^ 0xA1B5587E) - 1408173528) ^ ((v162 ^ 0x10EC69F6) + 491375536))
       + ((1891192629
         * (((v162 ^ 0x898ED189) - 2077527087) ^ ((v162 ^ 0xB1F57811) - 1135551927) ^ ((v162 ^ 0x387BA998) + 903744450))
         + 1553046878) >> 5)
       - 0x10000000;
  v169 = ((1547476992 * (v165 + v166 - v167 - v168)) | ((-756358683 * (v165 + v166 - v167 - v168)) >> 19)) + 854729201;
  v170 = ((2 * v169) & 0x9A1BBC1E) + (v169 ^ 0xCD0DDE0F);
  v171 = (590348288 * v167) | ((534483507 * v167) >> 12);
  v172 = -1054605312 * v168 + ((911716425 * v168) >> 14);
  v173 = 584945867 * v170;
  v174 = 1476395008 * v170;
  v175 = (v171 ^ ((717225984 * v166) | ((-1835813717 * v166) >> 10)) ^ v170) - v172;
  v176 = v174 & 0xF8000000 | (v173 >> 5);
  v177 = (2101799113 * v175) >> 27;
  v178 = (v175 * LODWORD(STACK[0x1A38])) & 0xFFFFFFE0 | v177;
  v179 = (558641323 * v172) >> 9;
  v180 = (1434451968 * v172) | v179;
  v181 = ((-1866457088 * v171) | ((-1043036671 * v171) >> 19)) + v176;
  v182 = -2028094333 * v178;
  v183 = v178 + 2 * v177;
  v184 = -50774107 * v180;
  v185 = v181 ^ v180 ^ v178;
  v186 = -1476395008 * v176 + ((1106857365 * v176) >> 5);
  v187 = __PAIR64__(v183, v182) >> 6;
  v188 = -1342177280 * v185 + ((276483115 * v185) >> 4);
  v189 = -1962896613 * (((v187 + v186) ^ 0xECC98567) - v188);
  v190 = (__PAIR64__(v179, v184) >> 1) - v186 + v187 + v188;
  LODWORD(STACK[0x6960]) = v189 ^ v190;
  v191 = (v189 ^ v190) + 1870280660;
  v192 = v191 ^ v190;
  v193 = v187 - v191 - 2019909184 - ((2 * (v187 - v191)) & 0xF355320) + 2000;
  v194 = v191 + v188 - ((2 * (v191 + v188)) & 0x8E35C20C) + 1192943878;
  LODWORD(STACK[0x6A30]) = v191;
  v195 = (1710602192 * v191) | ((-1503700099 * v191) >> 28);
  v196 = 502147752
       * (((v193 ^ 0x9F8A0665) + 1618344347) ^ ((v193 ^ 0xB25A83AF) + 1302690897) ^ ((v193 ^ 0xAA4A2C5A) + 1437979558))
       + 1362159232
       + ((-366601008
         - 1010973355
         * (((v193 ^ 0x42D772F9) - 1121415929) ^ ((v193 ^ 0x89CF47D0) + 1982904368) ^ ((v193 ^ 0x4C829CB9) - 1283628217))) >> 29);
  v197 = -1041498112
       - 1608324480
       * (((v194 ^ 0x5ECA7DAF) - 1590328751) ^ ((v194 ^ 0xC30A1E03) + 1022747133) ^ ((v194 ^ 0xDADA82AA) + 623213910))
       + ((1195394517
         * (((v194 ^ 0xAE0BA93F) + 1374967489) ^ ((v194 ^ 0x2721F010) - 656535568) ^ ((v194 ^ 0xCE30B829) + 835667927))
         + 1401149438) >> 25)
       - 256;
  v198 = (-1621901312 * v192) | ((1534229839 * v192) >> 18);
  v199 = (v196 ^ v195 ^ v197) - v198;
  v200 = (626917376 * v197) | ((-1188588881 * v197) >> 15);
  v201 = (-1436422144 * v199) | ((690660895 * v199) >> 20);
  LODWORD(v147) = __ROR4__((-1301132167 * v198) ^ 0x1FCC8530, 18) ^ 0x214C07F3;
  HIDWORD(v147) = v147;
  v202 = v147 >> 4;
  HIDWORD(v147) = v202 - 1779203864 * v196 + ((-222400483 * v196) >> 29) - v200 - v201;
  LODWORD(v147) = 1689814489 * HIDWORD(v147);
  v203 = v147 >> 3;
  v204 = (-2068250624 * v201) | ((192644281 * v201) >> 16);
  v205 = (912785408 * v202) | ((-1692113203 * v202) >> 13);
  v206 = -1979596635 * v204;
  v207 = -1062928384 * v204;
  v208 = v204 ^ ((-22298624 * v200) | ((-733218129 * v200) >> 18));
  v209 = v207 & 0xFFFF0000 | HIWORD(v206);
  HIDWORD(v147) = v203;
  LODWORD(v147) = v203 * LODWORD(STACK[0x1A3C]);
  v210 = v147 >> 1;
  v211 = (1368423600 * (v208 - v205 - v203)) | ((890832843 * (v208 - v205 - v203)) >> 28);
  v212 = v210 ^ ((-85966912 * v205) | ((-1544847105 * v205) >> 26)) ^ v209 ^ v211;
  v213 = (v211 + ((v209 + v210) ^ 0x93592739)) * LODWORD(STACK[0x1A40]) - 137367470;
  v214 = (v213 ^ 0x833A6F0F) & (2 * (v213 & 0x8300FAE)) ^ v213 & 0x8300FAE;
  v215 = ((2 * (v213 ^ 0x837A781B)) ^ 0x1694EF6A) & (v213 ^ 0x837A781B) ^ (2 * (v213 ^ 0x837A781B)) & 0x8B4A77B4;
  v216 = v215 ^ LODWORD(STACK[0x1A44]);
  v217 = (v215 ^ 0x880A6725) & (4 * v214) ^ v214;
  v218 = ((4 * v216) ^ 0x2D29DED4) & v216 ^ (4 * v216) & 0x8B4A77B4;
  v219 = (v218 ^ 0x9085681) & (16 * v217) ^ v217;
  v220 = ((16 * (v218 ^ 0x82422121)) ^ LODWORD(STACK[0x1A48])) & (v218 ^ 0x82422121) ^ (16 * (v218 ^ 0x82422121)) & 0x8B4A77B0;
  v221 = v219 ^ 0x8B4A77B5 ^ (v220 ^ 0x800273A5) & (v219 << 8);
  v222 = v213 ^ (2
               * ((v221 << 16) & 0xB4A0000 ^ v221 ^ ((v221 << 16) ^ 0x77B50000) & (((v220 ^ 0xB4804A5) << 8) & 0xB4A0000 ^ 0x1080000 ^ (((v220 ^ 0xB4804A5) << 8) ^ 0x4A770000) & (v220 ^ 0xB4804A5))));
  LODWORD(STACK[0x6830]) = v212;
  v223 = v222 ^ (v212 - ((2 * v212) & 0x9C21398) - 2065626676);
  v224 = (v223 ^ 0xCB772D41) + v211;
  v225 = (v223 ^ LODWORD(STACK[0x1A4C])) - 644337133;
  v226 = 1352247261
       * (((v222 ^ 0x258886FA) - 412751540) ^ ((v222 ^ LODWORD(STACK[0x1A50])) - 164544928) ^ ((v222 ^ 0x5EC2F399)
                                                                                             - 1674601431))
       + 1830635046;
  v227 = ((2 * (v226 ^ 0xE39EF93B)) ^ 0x34EC0414) & (v226 ^ 0xE39EF93B) ^ (2 * (v226 ^ 0xE39EF93B)) & 0x1A76020A;
  v228 = v227 ^ 0xA12020A;
  v229 = (v227 ^ 0x740202) & (4 * ((v226 ^ 0xF1CEFB39) & (2 * (v226 & STACK[0x1A54])) ^ v226 & STACK[0x1A54])) ^ (v226 ^ 0xF1CEFB39) & (2 * (v226 & STACK[0x1A54])) ^ v226 & STACK[0x1A54];
  v230 = ((4 * v228) ^ 0x69D80828) & v228 ^ (4 * v228) & 0x1A760208;
  v231 = (v230 ^ 0x8500002) & (16 * v229) ^ v229;
  v232 = ((16 * (v230 ^ 0x12260202)) ^ 0xA76020A0) & (v230 ^ 0x12260202) ^ (16 * (v230 ^ 0x12260202)) & 0x1A760200;
  v233 = v231 ^ 0x1A76020A ^ (v232 ^ 0x260000A) & (v231 << 8);
  v234 = v226 ^ (2
               * ((v233 << 16) & 0x1A600000 ^ v233 ^ ((v233 << 16) ^ 0x2000000) & (((v232 ^ LODWORD(STACK[0x1A58])) << 8) & 0x1A760000 ^ 0x8600000 ^ (((v232 ^ LODWORD(STACK[0x1A58])) << 8) ^ 0x76020000) & (v232 ^ LODWORD(STACK[0x1A58])))));
  LODWORD(STACK[0x6950]) = v223;
  LODWORD(STACK[0x6970]) = v222;
  v235 = 1721725952
       * (((v222 ^ 0x45C1239B) - 2027140053) ^ ((v222 ^ 0xD4C7EB9C) + 371885102) ^ ((v222 ^ 0xDE90EC8A) + 477987644))
       + 905255998;
  v236 = (2 * (v235 & 0xE3103C00)) & 0xC0207800 ^ v235 & 0xE3103C00 ^ ((2 * (v235 & 0xE3103C00)) | 4) & (v235 ^ 0x3FDC5F8);
  v237 = (2 * (v235 ^ 0x3FDC5F8)) & 0xE0EDF800 ^ 0x20240802 ^ ((2 * (v235 ^ 0x3FDC5F8)) ^ 0xC1DBF444) & (v235 ^ 0x3FDC5F8);
  v238 = (4 * v236) & 0xE0EDFA38 ^ v236 ^ ((4 * v236) | 8) & v237;
  v239 = (4 * v237) & 0xE0EDFA38 ^ LODWORD(STACK[0x1A5C]) ^ ((4 * v237) ^ 0x83B7E8E8) & v237;
  v240 = (16 * v238) & 0xE0EDFA30 ^ v238 ^ ((16 * v238) ^ 0xA0) & v239;
  v241 = (16 * v239) & 0xE0EDFA30 ^ 0xE020581A ^ ((16 * v239) ^ 0xEDFA3A0) & v239;
  v242 = v240 ^ (v240 << 8) & 0xE0EDFA00 ^ ((v240 << 8) ^ 0x2A00) & v241;
  v243 = v210 + (v223 ^ 0x3488D2BE) + 1;
  v244 = (v235 ^ (2
                * (((v242 ^ 0xE0EDD010) << 16) & 0x60ED0000 ^ v242 ^ 0xE0EDD010 ^ (((v242 ^ 0xE0EDD010) << 16) ^ 0x7A3A0000) & ((v241 << 8) & 0x60ED0000 ^ 0x50000 ^ ((v241 << 8) ^ 0x6DFA0000) & v241))) ^ 0xAAFE47A9) & ((v234 >> 22) ^ 0xFFFFFCDB) ^ (v234 >> 22) & 0x3E0;
  LODWORD(STACK[0x68B0]) = v243;
  v245 = (-408944640 * v243) | ((560623421 * v243) >> 11);
  LODWORD(STACK[0x68C0]) = v224;
  v246 = (-1570789056 * v224) | ((109674149 * v224) >> 26);
  HIDWORD(v147) = (109674149 * v224) >> 26;
  LODWORD(v147) = -2109511159 * v246;
  v247 = v147 >> 2;
  v248 = ((v244 & 0x1C9C6252 ^ 0x181C4213) + (v244 & 0xE3639DAD) - 1) ^ 0x5079CD2D;
  v249 = ((((958455808
           * (((v223 ^ 0x23C82E80) + 1386580893) ^ ((v223 ^ 0x317DB592) + 1074794639) ^ ((v223 ^ 0xD9C2B653) - 1464921264))) | ((-860239609 * (v225 ^ ((v223 ^ 0x4BF42404) + 983138585) ^ ((v223 ^ 0x28769E4Bu) + 1494956888)) - 1605994642) >> 19))
         - 823279616) ^ v245)
       + v246
       + v248;
  v250 = (543162368 * v249) | ((-302106365 * v249) >> 11);
  v251 = (-887238656 * v248) | ((399290845 * v248) >> 20);
  v252 = ((939524096 * ((560623421 * v243) >> 11)) | ((-368597401 * v245) >> 5)) ^ v247 ^ v250;
  v253 = (v252 ^ v251) - 2 * v251 + 2 * (v252 & v251);
  HIDWORD(v147) = (((-680441450 * v247) >> 2) | (v247 << 31)) ^ 0x82082444 ^ ((((-340220725 * v247) >> 31 << 30) | 0x4101201)
                                                                                          + 1969);
  LODWORD(v147) = HIDWORD(v147);
  v254 = (722225944 * v250) | ((1164020067 * v250) >> 29);
  v255 = ((-1303169345 * v251) | 0x18A) >> (v120 & 9) >> (v120 & 9 ^ 9);
  v256 = (-1061158912 * v253) | ((v253 * LODWORD(STACK[0x1A60])) >> 10);
  v257 = v255 + 1602224128 * v251;
  v258 = ((((v147 >> 30) ^ 0xB0E9BF05) + ((v147 >> 30) ^ 0x1860F7DA | 0x5776B720) + 1) ^ ((v147 >> 30) ^ 0x1860F7DA) & 0xA88948DF ^ v254)
       + v257
       + v256;
  v259 = (-1095761920 * v254) | ((2096225259 * v254) >> 12);
  v260 = v259 & 0x313DABBE ^ ((2096225259 * v254) >> 12) & 6;
  v261 = (1340637184 * v258) | ((-134963247 * v258) >> 17);
  v262 = ((1272494776 * v256) | ((-914679977 * v256) >> 29))
       - 2 * (((1272494776 * v256) | ((-914679977 * v256) >> 29)) & 0x313DABBF ^ ((-914679977 * v256) >> 29))
       + 826125240;
  v263 = (765460480 * v255) | ((534587757 * v257) >> 11);
  v264 = ((v259 - 2 * v260 + 826125240) ^ 0x42271E3F ^ v262) + v261;
  v265 = v263 - v259 + v261 + (v262 ^ 0xCEC25447) + 1;
  v266 = v265 - ((2 * v265) & 0xF3D27022) + 2045327377;
  v267 = ((v264 - ((2 * v264 - 1373120682) & 0xF3D27022) + 1358767036) ^ v266) - 667598765;
  v268 = (v267 ^ 0xF592C581) & (2 * (v267 & 0xC61A9525)) ^ v267 & 0xC61A9525;
  v269 = ((2 * (v267 ^ 0xF1B7C7C1)) ^ 0x6F5AA5C8) & (v267 ^ 0xF1B7C7C1) ^ (2 * (v267 ^ 0xF1B7C7C1)) & 0x37AD52E4;
  v270 = (v269 ^ 0x20090280) & (4 * v268) ^ v268;
  v271 = ((4 * (v269 ^ LODWORD(STACK[0x1A68]))) ^ 0xDEB54B90) & (v269 ^ LODWORD(STACK[0x1A68])) ^ (4
                                                                                                 * (v269 ^ LODWORD(STACK[0x1A68]))) & 0x37AD52E4;
  v272 = (v271 ^ 0x16A54280) & (16 * v270) ^ v270;
  v273 = ((16 * (v271 ^ 0x21081064)) ^ LODWORD(STACK[0x1A64])) & (v271 ^ 0x21081064) ^ (16 * (v271 ^ 0x21081064)) & 0x37AD52E0;
  v274 = v267 ^ (2
               * (((v272 ^ 0x37AD52E4 ^ (v273 ^ LODWORD(STACK[0x1A6C])) & (v272 << 8)) << 16) & 0x37AD0000 ^ v272 ^ 0x37AD52E4 ^ (v273 ^ LODWORD(STACK[0x1A6C])) & (v272 << 8) ^ (((v272 ^ 0x37AD52E4 ^ (v273 ^ LODWORD(STACK[0x1A6C])) & (v272 << 8)) << 16) ^ 0x52E40000) & (((v273 ^ 0x52850A4) << 8) & 0x37AD0000 ^ 0x12AD0000 ^ (((v273 ^ 0x52850A4) << 8) ^ 0x2D520000) & (v273 ^ 0x52850A4))));
  v275 = (((v266 ^ 0xDF4B6719) + 548706535) ^ ((v266 ^ 0xF289A86A) + 225859478) ^ ((v266 ^ 0x542BF762) - 1412167522))
       - (((v274 ^ 0x90E19123) - 409967366) ^ ((v274 ^ 0x71577180) + 103187547) ^ ((v274 ^ 0x6DBED04E) + 449783189))
       - 1681414522;
  v276 = (v275 ^ 0xD9D34692) & (2 * (v275 & 0xD99B56C3)) ^ v275 & 0xD99B56C3;
  v277 = ((2 * (v275 ^ 0xC9F14B10)) ^ 0x20D43BA6) & (v275 ^ 0xC9F14B10) ^ (2 * (v275 ^ 0xC9F14B10)) & 0x106A1DD2;
  v278 = (v277 ^ 0x10401941) & (4 * v276) ^ v276;
  v279 = ((4 * (v277 ^ 0x102A0451)) ^ 0x41A8774C) & (v277 ^ 0x102A0451) ^ (4 * (v277 ^ 0x102A0451)) & 0x106A1DD0;
  v280 = (v279 ^ 0x281543) & (16 * v278) ^ v278;
  v281 = ((16 * (v279 ^ LODWORD(STACK[0x1A70]))) ^ 0x6A1DD30) & (v279 ^ LODWORD(STACK[0x1A70])) ^ (16
                                                                                                 * (v279 ^ LODWORD(STACK[0x1A70]))) & 0x106A1DD0;
  v282 = v280 ^ 0x106A1DD3 ^ (v281 ^ 0x201DC3) & (v280 << 8);
  v283 = v275 ^ (2
               * ((v282 << 16) & 0x106A0000 ^ v282 ^ ((v282 << 16) ^ 0x1DD30000) & (((v281 ^ 0x104A00C3) << 8) & 0x106A0000 ^ 0x10620000 ^ (((v281 ^ 0x104A00C3) << 8) ^ 0x6A1D0000) & (v281 ^ 0x104A00C3))));
  LODWORD(STACK[0x68E0]) = v274 ^ 0x888E0A25;
  v284 = v274 ^ 0x888E0A25 ^ v262;
  v285 = 484763535
       * (((v284 ^ 0x6908767C) - 1762162300) ^ ((v284 ^ 0x4C4E1724) - 1280186148) ^ ((v284 ^ 0x10FDF028) - 285077544))
       + 458347141;
  v286 = (v285 ^ 0xF963730A) & (2 * (v285 & 0xF0707B0B)) ^ v285 & 0xF0707B0B;
  v287 = ((2 * (v285 ^ 0x59C35118)) ^ 0x53665426) & (v285 ^ 0x59C35118) ^ (2 * (v285 ^ 0x59C35118)) & 0xA9B32A12;
  v288 = (v287 ^ 0x1020000) & (4 * v286) ^ v286;
  v289 = ((4 * (v287 ^ 0xA8912A11)) ^ 0xA6CCA84C) & (v287 ^ 0xA8912A11) ^ (4 * (v287 ^ 0xA8912A11)) & 0xA9B32A10;
  v290 = (v289 ^ 0xA0802803) & (16 * v288) ^ v288;
  v291 = ((16 * (v289 ^ 0x9330213)) ^ 0x9B32A130) & (v289 ^ 0x9330213) ^ (16 * (v289 ^ 0x9330213)) & 0xA9B32A10;
  v292 = v290 ^ 0xA9B32A13 ^ (v291 ^ 0x89322000) & (v290 << 8);
  v293 = v285 ^ (2
               * ((v292 << 16) & 0x29B30000 ^ v292 ^ ((v292 << 16) ^ 0x2A130000) & (((v291 ^ 0x20810A03) << 8) & 0x29B30000 ^ 0x8910000 ^ (((v291 ^ 0x20810A03) << 8) ^ 0x332A0000) & (v291 ^ 0x20810A03))));
  LODWORD(STACK[0x6A60]) = v274;
  v294 = v261 + (v274 ^ 0x73F7CF12) + 1;
  v295 = v294 * LODWORD(STACK[0x1A74]);
  LODWORD(STACK[0x6900]) = v294;
  v296 = (1811939328 * v294) | (v295 >> 6);
  LODWORD(STACK[0x6910]) = v284;
  v297 = 1035736223 - ((((v284 ^ 2) + 6) ^ ((v284 ^ 4) + 4) ^ ((v284 ^ 6) + 2)) << 29);
  v298 = (2 * (v297 ^ 0x830C3C23)) & 0x40000000 ^ 0x40000002 ^ ((2 * (v297 ^ 0x830C3C23)) ^ 0x82902884) & (v297 ^ 0x830C3C23);
  v299 = (4 * v298) & 0x414FD740 ^ 0x40408242 ^ ((4 * v298) ^ 0x53F5D08) & v298;
  v300 = v299 & 0xF0 | (v297 ^ 0x830C3C23) & (2 * (v297 & 0xC0000001)) ^ v297 & 0xC0000001;
  v301 = (16 * v299) & 0x414FD740 ^ LODWORD(STACK[0x1A78]) ^ ((16 * v299) ^ 0x14FD7420) & v299;
  v302 = ((v300 << 8) & 0x8D300 | 0x41470400) ^ (v300 | 0x8950C) ^ ((v300 << 8) ^ 0x4E00) & v301;
  v303 = (v302 << 16) & 0x414F0000 ^ v302 ^ ((v302 << 16) ^ 0x57420000) & ((v301 << 8) & 0x414F0000 ^ ((v301 << 8) ^ 0x4FD70000) & v301 ^ 0x80000);
  v304 = -2028988765
       * (((v283 ^ 0xA5295768) - 1526787590) ^ ((v283 ^ 0x3328006B) + 855525115) ^ ((v283 ^ 0x4FCA3A66) + 1310489848))
       + 162497873;
  v305 = (v304 ^ 0xE7346F37) & (2 * (v304 & 0xE7A66FB0)) ^ v304 & 0xE7A66FB0;
  v306 = ((2 * (v304 ^ 0x64746177)) ^ 0x7A41D8E) & (v304 ^ 0x64746177) ^ (2 * (v304 ^ 0x64746177)) & STACK[0x1A8C];
  v307 = (v306 ^ 0x3C00C81) & (4 * v305) ^ v305;
  v308 = ((4 * (v306 ^ LODWORD(STACK[0x1A84]))) ^ LODWORD(STACK[0x1A80])) & (v306 ^ LODWORD(STACK[0x1A84])) ^ (4 * (v306 ^ LODWORD(STACK[0x1A84]))) & STACK[0x1A88];
  v309 = (v308 ^ 0x3400A03) & (16 * v307) ^ v307;
  v310 = ((16 * (v308 ^ 0x809204C3)) ^ 0x3D20EC70) & (v308 ^ 0x809204C3) ^ (16 * (v308 ^ 0x809204C3)) & STACK[0x1A7C];
  v311 = v309 ^ 0x83D20EC7 ^ (v310 ^ (v11 - 921)) & (v309 << 8);
  v312 = v304 ^ (2
               * ((v311 << 16) & 0x3D20000 ^ v311 ^ ((v311 << 16) ^ 0xEC70000) & (((v310 ^ 0x82D20287) << 8) & 0x83D20000 ^ 0x1D00000 ^ (((v310 ^ 0x82D20287) << 8) ^ 0x520E0000) & (v310 ^ 0x82D20287))));
  v313 = ((v293 >> 3) ^ 0xE199FA1A) & (v297 ^ (2 * v303) ^ 0x8BA7AC5B) ^ (v293 >> 3) & 0x16001641;
  v314 = -1560281088
       * (((v283 ^ 0x24DBC995) + 621645573) ^ ((v283 ^ 0x58AB699C) + 1501376270) ^ ((v283 ^ 0xA5BBCD6C) - 1536324610))
       + 478842462;
  v315 = (2 * (v314 & 0xE4000000) + 915590582) & 0x18004080 ^ (v314 & 0xE4000000 | 0xB49265B) ^ (v314 ^ 0xFF3C177B) & 0xC8000004 & (2 * (v314 & 0xE4000000) + 915590582);
  v316 = (2 * (v314 ^ 0xFF3C177B)) & 0x1A000000 ^ 0x8000001 ^ ((2 * (v314 ^ 0xFF3C177B)) ^ 0x36928920) & (v314 ^ 0xFF3C177B);
  v317 = (4 * v315) & 0x19010258 ^ v315 ^ ((4 * v315) ^ 0x6D259B64) & v316;
  v318 = (4 * v316) & 0x1B4966D8 ^ LODWORD(STACK[0x1A90]) ^ ((4 * v316) ^ 0x6D259B64) & v316;
  v319 = (16 * v317) & 0x1B4966D0 ^ v317 ^ ((16 * v317) ^ 0x24864990) & v318;
  v320 = (16 * v318) & 0x1B4966D0 ^ 0xB490249 ^ ((16 * v318) ^ 0xB4966D90) & v318;
  v321 = v319 ^ 0x10142D0 ^ (v319 << 8) & 0x1B496600 ^ ((v319 << 8) ^ 0x48240900) & v320;
  v322 = (v314 ^ (2
                * ((v321 << 16) & 0x1B490000 ^ v321 ^ ((v321 << 16) ^ 0x66D90000) & ((v320 << 8) & 0x1B490000 ^ 0x12090000 ^ ((v320 << 8) ^ 0x49660000) & v320))) ^ 0x340F6CE7) & ((v312 >> 8) ^ 0xFF1A798D) ^ (v312 >> 8) & 0x852F08;
  v323 = 1417673728
       * (((v274 ^ 0x5D69D9DF) + 706227206) ^ ((v274 ^ 0xF27D237B) - 2062756190) ^ ((v274 ^ 0x231CCA49) + 1416445844))
       - v296
       + ((-363520001
         * (((v274 ^ 0xB8462DD2) - 818423799) ^ ((v274 ^ 0x52ED94BB) + 631005538) ^ ((v274 ^ 0x66A38984) + 299007071))
         + 389727544) >> 22);
  v324 = (1635732544 * v296) | ((v296 * LODWORD(STACK[0x1A94])) >> 26);
  v325 = ((v313 & 0xB3674968 ^ 0x33674968) + (v313 ^ 0x84000600) - ((v313 ^ 0x84000600) & 0xB3674968)) ^ 0x6898A297;
  v326 = ((v322 & 0xA5D0B52D ^ 0xA4D09025) + (v322 & 0x5A2F4AD2 ^ 0x8040001) - 1) ^ 0x4E2B46D2;
  v327 = (731574272 * (v323 + v325 - 350953472 + v326)) | ((261274031 * (v323 + v325 - 350953472 + v326)) >> 20);
  v328 = (547329040 * v326) | ((571078977 * v326) >> 28);
  v329 = (956340680 * v327) | ((-2027941063 * v327) >> 29);
  v330 = v328 ^ v324 ^ (((1670284800 * v325) | ((405915459 * v325) >> 23)) - v327);
  v331 = (-1677721600 * v328) | ((-1830480089 * v328) >> 6);
  v332 = (-711278858 * v330) | ((-355639429 * v330) >> 31);
  v333 = (v329 ^ ((1450180608 * v324) | ((v324 * LODWORD(STACK[0x1A98])) >> 12)) ^ v332) + v331;
  v334 = (1178132480 * v332) | ((1760178631 * v332) >> 19);
  v335 = 1737974272 * v329 + ((-1967928399 * v329) >> 23);
  v336 = ((-362718368 * v333) | ((-279770405 * v333) >> 27))
       - ((2 * ((-362718368 * v333) | ((-279770405 * v333) >> 27))) & 0xB1697BCE)
       + 1488240103;
  v337 = ((-364429312 * v331) | ((1718593821 * v331) >> 18))
       - v334
       + (v335 ^ -v335 ^ (((-364429312 * v331) | ((1718593821 * v331) >> 18))
                        - (v335 ^ ((-364429312 * v331) | ((1718593821 * v331) >> 18)))))
       + (v336 ^ 0x58B4BDE7)
       + ((2 * v336) ^ 0x4E968431)
       + 1;
  v338 = ((((v337 - ((2 * v337) & 0x39C25FBA) + 484519901) ^ 0x41061D3B) - 1090919739) ^ (((v337
                                                                                          - ((2 * v337) & 0x39C25FBA)
                                                                                          + 484519901) ^ 0xEB7F3C99)
                                                                                        + 343982951) ^ (((v337 - ((2 * v337) & 0x39C25FBA) + 484519901) ^ 0xB6980E7F) + 1231548801))
       - 453588785 * (((v334 ^ v335) - ((2 * (v334 ^ v335) - 751842904) & 0xB1697BCE) + 1112318651) ^ v336)
       + 1879190994;
  v339 = (v338 ^ LODWORD(STACK[0x1A9C])) & (2 * (v338 & 0xACDF020B)) ^ v338 & 0xACDF020B;
  v340 = ((2 * (v338 ^ 0xE317A806)) ^ 0x9F91541A) & (v338 ^ 0xE317A806) ^ (2 * (v338 ^ 0xE317A806)) & 0x4FC8AA0C;
  v341 = (v340 ^ 0x780A208) & (4 * v339) ^ v339;
  v342 = ((4 * (v340 ^ 0x4048AA05)) ^ 0x3F22A834) & (v340 ^ 0x4048AA05) ^ (4 * (v340 ^ 0x4048AA05)) & 0x4FC8AA0C;
  v343 = v342 ^ LODWORD(STACK[0x1AA0]);
  v344 = ((16 * (v342 ^ 0x40C80209)) ^ 0xFC8AA0D0) & (v342 ^ 0x40C80209) ^ (16 * (v342 ^ 0x40C80209)) & 0x4FC8AA00;
  v345 = v343 & (16 * v341) ^ v341 ^ 0x4FC8AA0D ^ (v344 ^ 0x4C88A00D) & ((v343 & (16 * v341) ^ v341) << 8);
  v346 = v338 ^ (2
               * ((v345 << 16) & 0x4FC80000 ^ v345 ^ ((v345 << 16) ^ 0x2A0D0000) & (((v344 ^ 0x3400A0D) << 8) & 0x4FC80000 ^ 0x7400000 ^ (((v344 ^ 0x3400A0D) << 8) ^ 0x48AA0000) & (v344 ^ 0x3400A0D))));
  LODWORD(STACK[0x6A40]) = v346;
  v347 = v346 ^ (v334 - ((2 * v334) & 0x6AA0309C) + 894441550);
  v348 = (((v347 ^ 0x8473C843) + 221732922) ^ ((v347 ^ 0x255821C7) - 1407415874) ^ ((v347 ^ 0xB6B32B) - 1980621998))
       + 110690584;
  v349 = (v348 ^ 0xE4186971) & (2 * (v348 & 0xF09D6274)) ^ v348 & 0xF09D6274;
  v350 = ((2 * (v348 ^ LODWORD(STACK[0x1AA4]))) ^ 0xA95E968A) & (v348 ^ LODWORD(STACK[0x1AA4])) ^ (2
                                                                                                 * (v348 ^ LODWORD(STACK[0x1AA4]))) & 0xD4AF4B44;
  v351 = (v350 ^ LODWORD(STACK[0x1AB0])) & (4 * v349) ^ v349;
  v352 = ((4 * (v350 ^ LODWORD(STACK[0x1AA8]))) ^ LODWORD(STACK[0x1AAC])) & (v350 ^ LODWORD(STACK[0x1AA8])) ^ (4 * (v350 ^ LODWORD(STACK[0x1AA8]))) & 0xD4AF4B44;
  v353 = (v352 ^ 0x50AD0901) & (16 * v351) ^ v351;
  v354 = ((16 * (v352 ^ 0x84024241)) ^ 0x4AF4B450) & (v352 ^ 0x84024241) ^ (16 * (v352 ^ 0x84024241)) & 0xD4AF4B40;
  v355 = v353 ^ 0xD4AF4B45 ^ (v354 ^ 0x40A40005) & (v353 << 8);
  v356 = v348 ^ (2
               * ((v355 << 16) & 0x54AF0000 ^ v355 ^ ((v355 << 16) ^ 0x4B450000) & (((v354 ^ 0x940B4B05) << 8) & 0x54AF0000 ^ 0x50A40000 ^ (((v354 ^ 0x940B4B05) << 8) ^ 0xAF4B0000) & (v354 ^ 0x940B4B05))));
  LODWORD(STACK[0x67A0]) = v194;
  LODWORD(STACK[0x6800]) = v193;
  LODWORD(STACK[0x6A00]) = v192;
  v357 = v192 & 0x20000;
  if (((v193 ^ v194) & v192 & 0x20000) != 0)
    v357 = -v357;
  LODWORD(STACK[0x6940]) = v357;
  if ((((v347 ^ 0x10E9D60A) - 1716683150) ^ ((v347 ^ 0x4002D224) - 918128032) ^ ((v347 ^ 0xF1765E80) + 2016605948))
     - 685372118 >= 0xDFEFA99E)
    v358 = v356 ^ 0xEEFF9D4;
  else
    v358 = v347 ^ 0x76BB5785;
  v359 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD508] = v359;
  LODWORD(STACK[0x67F0]) = v347;
  if ((((v347 ^ 0x67FA141E) - 289489819) ^ ((v347 ^ 0xC5EC9948) + 1286091059) ^ ((v347 ^ 0x38BD7F8) - 1966112892))
     - 685372118 >= 0xDFEFA99E)
    v360 = 147432628;
  else
    v360 = -685372118;
  if (v358 != -685372118)
    v360 = v347 ^ 0x76BB5785;
  LODWORD(STACK[0x67E0]) = v360;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((31 * (v359 == 0)) ^ v10)))();
}

uint64_t sub_100B1FA7C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;

  LODWORD(STACK[0x69B0]) ^= LODWORD(STACK[0x69D0]) ^ 0xA8309FC5;
  v4 = -1193438844
     - (((LODWORD(STACK[0x6A10]) ^ 0x37FC2CD7) - 397857868) ^ ((LODWORD(STACK[0x6A10]) ^ 0xABE3DA3B) + 1951849824) ^ ((LODWORD(STACK[0x6A10]) ^ 0x37702806) - 389730461));
  v5 = (v4 ^ 0xB3F941EB) & (2 * (v4 & 0xBBFD480B)) ^ v4 & 0xBBFD480B;
  v6 = ((2 * (v4 ^ 0xA1C951EF)) ^ 0x346833C8) & (v4 ^ 0xA1C951EF) ^ (2 * (v4 ^ 0xA1C951EF)) & 0x1A3419E4;
  v7 = v6 ^ 0xA140824;
  v8 = (v6 ^ 0x10200840) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x68D06790) & v7 ^ (4 * v7) & 0x1A3419E4;
  v10 = v8 ^ 0x1A3419E4 ^ (v9 ^ 0x8100184) & (16 * v8);
  v11 = (16 * (v9 ^ 0x12241864)) & 0x1A3419E0 ^ 0x183401A4 ^ ((16 * (v9 ^ 0x12241864)) ^ 0xA3419E40) & (v9 ^ 0x12241864);
  v12 = (((v10 << 8) & 0x1A341900 ^ v10 ^ ((v10 << 8) ^ LODWORD(STACK[0x1630])) & v11) << 16) & 0x1A340000 ^ (v10 << 8) & 0x1A341900 ^ v10 ^ ((v10 << 8) ^ LODWORD(STACK[0x1630])) & v11 ^ ((((v10 << 8) & 0x1A341900 ^ v10 ^ ((v10 << 8) ^ LODWORD(STACK[0x1630])) & v11) << 16) ^ 0x19E40000) & ((v11 << 8) & 0x1A340000 ^ 0xA240000 ^ ((v11 << 8) ^ 0x34190000) & v11);
  v13 = STACK[0x69C0];
  LODWORD(STACK[0x6AA0]) = HIBYTE(LODWORD(STACK[0x69C0]));
  v14 = (((LODWORD(STACK[0x69A0]) ^ 0xE516BBDB) - 186377656) ^ ((LODWORD(STACK[0x69A0]) ^ 0x3CA9BBEC) + 760945265) ^ ((LODWORD(STACK[0x69A0]) ^ 0xAF16D299) - 1092324602))
      + 2093820936
      + (((v4 ^ LODWORD(STACK[0x6990]) ^ (2 * v12) ^ LODWORD(STACK[0x6980]) ^ 0x3EAF9936) + 1685460827) ^ ((v4 ^ LODWORD(STACK[0x6990]) ^ (2 * v12) ^ LODWORD(STACK[0x6980]) ^ 0x9D3050FF) - 940974444) ^ ((v4 ^ LODWORD(STACK[0x6990]) ^ (2 * v12) ^ LODWORD(STACK[0x6980]) ^ 0x849F0904) - 565803159));
  LODWORD(STACK[0x6980]) = v14;
  v15 = (v14 ^ 0x19FD839B) & (2 * (v14 & 0x9DFE1223)) ^ v14 & 0x9DFE1223;
  v16 = ((2 * (v14 ^ 0x38B9879F)) ^ 0x4A8F2B78) & (v14 ^ 0x38B9879F) ^ (2 * (v14 ^ 0x38B9879F)) & 0xA54795BC;
  v17 = v16 ^ 0xA5409484;
  v18 = (v16 ^ 0x118) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x951E56F0) & v17 ^ (4 * v17) & 0xA54795BC;
  v20 = (v19 ^ 0x850614BC) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x2041810C)) ^ 0x54795BC0) & (v19 ^ 0x2041810C) ^ (16 * (v19 ^ 0x2041810C)) & 0xA54795B0;
  v22 = v20 ^ 0xA54795BC ^ (v21 ^ 0x441113C) & (v20 << 8);
  LODWORD(STACK[0x6990]) = 2
                         * ((v22 << 16) & 0x25470000 ^ v22 ^ ((v22 << 16) ^ 0x15BC0000) & (((v21 ^ 0xA106843C) << 8) & 0x25470000 ^ 0x20420000 ^ (((v21 ^ 0xA106843C) << 8) ^ 0x47950000) & (v21 ^ 0xA106843C)));
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6AC0])
                         + (LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A50]))
                         + ((2
                           * (((2 * ((LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A50])) & STACK[0x6AC0] ^ 0x2C70CAC0)) & 0x6EBB1526)
                            - ((LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A50])) & STACK[0x6AC0] ^ 0x2C70CAC0))
                           - 1857754408) ^ 0x365A80A7)
                         + 1;
  v23 = -1870280660 - LODWORD(STACK[0x6960]);
  v24 = LODWORD(STACK[0x6940]) + (v0 ^ 0xC0804896);
  v25 = STACK[0x6A00] & 0xFFFDFFFF;
  v26 = STACK[0x6A30];
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6A30]) >> 8;
  LODWORD(STACK[0x6960]) = (v26 ^ v23 ^ (((-1378532994 - (v24 ^ v25 ^ v26)) ^ ((v24 ^ v25) + 1378532994))
                                       + 2 * ((-1378532994 - (v24 ^ v25 ^ v26)) & ((v24 ^ v25) + 1378532994))))
                         + (v24 ^ v25);
  LODWORD(STACK[0x6940]) = LODWORD(STACK[0x6950]) ^ 0x8E925AE3;
  LODWORD(STACK[0x69A0]) = v3 ^ 0xFE29B96E;
  v27 = STACK[0x6A40];
  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x6A40]) ^ 0x1226AB04;
  v28 = (((v1 ^ 0x87DEB884) + 2015446908) ^ ((v1 ^ 0x9A4499F5) + 1706780171) ^ ((v1 ^ 0x452E9C96) - 1160682646))
      - 436434088
      + (((v27 ^ 0x96A6B77E) + 2071978886) ^ ((v27 ^ 0x4D3C73D2) - 1595594966) ^ ((v27 ^ 0x4F57864D) - 1567698249));
  v29 = (v28 ^ 0xF1151B73) & (2 * (v28 & 0xF9A41C74)) ^ v28 & 0xF9A41C74;
  v30 = ((2 * (v28 ^ 0x3152B5B)) ^ 0xF5626E5E) & (v28 ^ 0x3152B5B) ^ (2 * (v28 ^ 0x3152B5B)) & 0xFAB1372E;
  v31 = v30 ^ 0xA911121;
  v32 = (v30 ^ 0xE0212201) & (4 * v29) ^ v29;
  v33 = ((4 * v31) ^ 0xEAC4DCBC) & v31 ^ (4 * v31) & 0xFAB1372C;
  v34 = (v33 ^ 0xEA801420) & (16 * v32) ^ v32;
  v35 = ((16 * (v33 ^ 0x10312303)) ^ 0xAB1372F0) & (v33 ^ 0x10312303) ^ (16 * (v33 ^ 0x10312303)) & 0xFAB13720;
  v36 = v34 ^ 0xFAB1372F ^ (v35 ^ 0xAA113200) & (v34 << 8);
  LODWORD(STACK[0x69D0]) = v2;
  v37 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6760]) = (v13 >> 8) ^ 0xF06E20D5;
  LODWORD(STACK[0x6780]) = HIWORD(v13);
  v38 = STACK[0x6A60];
  LODWORD(STACK[0x69C0]) = v28 ^ (2
                                * ((v36 << 16) & 0x7AB10000 ^ v36 ^ ((v36 << 16) ^ 0x372F0000) & (((v35 ^ 0x50A0050F) << 8) & 0x7AB10000 ^ 0x4A800000 ^ (((v35 ^ 0x50A0050F) << 8) ^ 0x31370000) & (v35 ^ 0x50A0050F))));
  LODWORD(STACK[0x6750]) = (v38 >> 8) ^ 0x8C0830;
  return ((uint64_t (*)(_UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 - 8))(&off_1015B46D0, 132544102, 4294958002, 3387555690, 2138326992, 3950809563, 4118908509, 176060214);
}

uint64_t sub_100B20568(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  int v13;
  int v14;
  char v15;
  unsigned int v16;
  char v17;
  int v18;
  int v19;
  int v20;
  int v21;

  v20 = STACK[0x6AB0];
  v21 = *(_DWORD *)(*(_QWORD *)(a1 + 8 * (LODWORD(STACK[0x6AB0]) + a3))
                  + 4 * (((v15 ^ v17 ^ v8) + v11 - 2 * ((v15 ^ v17 ^ v8) & v12)) ^ v16)
                  - 12);
  *(_DWORD *)(v9 + 4 * v8) = LODWORD(STACK[0x6AC0]) ^ v18 ^ v14 ^ v21 ^ a6 ^ (a2
                                                                              + 8
                                                                              * (v21 ^ (((LODWORD(STACK[0x6AB0]) + a7) & a8)
                                                                                      + a4))
                                                                              - ((a5
                                                                                + 16
                                                                                * (v21 ^ (((LODWORD(STACK[0x6AB0]) + a7) & a8)
                                                                                        + a4))) & (v19 + 3072))
                                                                              + 1233);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * v13) ^ v20)) - 8))();
}

uint64_t sub_100B20618()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x6AC0]) = v1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD500] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((602 * (v0 ^ 0x3115) + 23881) * (v2 != 0)) ^ v0)) - 4))();
}

uint64_t sub_100B20674()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x6740]) = v4;
  LODWORD(STACK[0x6AB0]) = v0;
  LODWORD(STACK[0x6730]) = v2;
  LODWORD(STACK[0x6970]) = v1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 ^ 0x2164u) + 2043)) - 4))(1073745805, 1141391488, 2620987237, 3627112053, 2565902884, 836838472, 1408083354, 1282951440);
}

uint64_t sub_100B20740()
{
  unsigned int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == 0) * v2) ^ v0)) - 4))();
}

uint64_t sub_100B207EC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x5D79u)) - 8))(LODWORD(STACK[0x6960]), 310, 19783, 2143406832, 2202378457, 2392957083, 1071699893, 4261402047);
}

uint64_t sub_100B20A88@<X0>(int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  uint64_t v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;

  v23 = *(_DWORD *)(*(_QWORD *)(v12 + 8 * (a9 ^ a3))
                  + 4
                  * (v17 ^ (a6 + 45) ^ ((v14 ^ v21 ^ v10) + a6 - (((v14 ^ v21 ^ v10) << (((a9 - 40) & a8) + 90)) & a2)))) ^ a1;
  *(_DWORD *)(v9 + 4 * v10) = v18 ^ v16 ^ v15 ^ v19 ^ v20 ^ v22 ^ v13 ^ a5 ^ (a7 + v23 - (a4 & (2 * v23)) + 3523);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a9 | (16 * (v11 == 0)))) - 8))();
}

uint64_t sub_100B20B34()
{
  unsigned int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD528] = v1 + 0x400367C8C4C8FF05;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * ((((v0 - 11744) ^ 0x6B1 ^ (v1 == 0)) & 1) == 0)) & 0xF7 | (8 * (((v0 + 32) ^ 0xB1 ^ ~(v1 == 0)) & 1))) ^ v0))
                            - 12))();
}

uint64_t sub_100B20BBC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(a1, 253, LODWORD(STACK[0xC54]), LODWORD(STACK[0xC50]), LODWORD(STACK[0x6A40]), 114, LODWORD(STACK[0x68D0]), LODWORD(STACK[0x68B0]));
}

uint64_t sub_100B20D6C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  char v9;
  unsigned __int8 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;

  v22 = (v10 ^ v20) + v14 - 2 * ((v10 ^ v20) & v14);
  v23 = v22 & 2;
  if ((v23 & v8 ^ (v23 | v21)) != v21)
    LOBYTE(v23) = 65 * (v12 ^ 0x9E) - (((v10 ^ v20) + v14 - 2 * ((v10 ^ v20) & v14)) & 2) + 103;
  v24 = *((_DWORD *)*(&off_1015B46D0 + v12 - 4221)
        + ((((v23 + v9) ^ v22 & a2 ^ 0xFFFFFFBC) + ((v23 + v9) ^ v22 & a2 ^ a6) + 1) ^ 0xFFFFFFFE)
        + ((v23 + v9) ^ v22 & a2 ^ a6)
        - 1);
  v25 = v17 ^ a7 ^ v16 ^ v18 ^ a8 ^ 0xD773E047 ^ (v24 - (a4 & (2 * v24)) - 875235586);
  *(_DWORD *)(a1 + 4 * v10) = a5 ^ v19 ^ a3 ^ v15 ^ v13 ^ (v25 - 685372118 - ((2 * v25) & 0xAE4C1A54));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((18036 * (v11 == 0)) ^ v12)) - 12))();
}

uint64_t sub_100B20E8C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD520] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((29515 * (((v1 == 0) ^ (121 * (v0 ^ 0x92))) & 1)) ^ v0)))();
}

uint64_t sub_100B20EE8()
{
  int v0;

  return ((uint64_t (*)(_UNKNOWN **, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(&off_1015B46D0, LODWORD(STACK[0x6910]), 5821, 1497, 1302, 4294950400, 2808415997, 1761366177);
}

uint64_t sub_100B21094@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;

  v23 = v20 ^ v19 ^ v18 ^ (v17 + v10 - (v11 & v15) + 256);
  *(_DWORD *)(v9 + 4 * v10) = v21 ^ v22 ^ a2 ^ a7 ^ *(_DWORD *)(*(_QWORD *)(a1 + 8 * (a9 + a6))
                                                                                 + 4
                                                                                 * ((((a9 + a8) & v14 ^ a3 ^ v23)
                                                                                   + (v23 & v13 ^ a4)
                                                                                   - (((a9 + a8) & v14 ^ a3 ^ v23) & v13)) ^ a5)
                                                                                 - 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 != 0) * v16) ^ a9)) - 12))();
}

uint64_t sub_100B21130()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD530] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((15613 * (((v1 == 0) ^ (v0 - 102)) & 1)) ^ v0)))();
}

uint64_t sub_100B21194(unint64_t a1)
{
  int v1;

  STACK[0x6AB0] = a1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 - 5735) | 0x1044) + 6319)) - 12))(87658480, 39696, 3420934059, 631754887, 11, LODWORD(STACK[0x6A8]), 712579590, 3663212409);
}

uint64_t sub_100B21260(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((2 * (v7 & 1) + (a2 ^ (8 * v5) ^ v7 ^ v8)) & 3) == 0) * a5) ^ v6))
                            - 12))();
}

uint64_t sub_100B21348@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4))(99, 3395335027, 17946, 2232603596, 163, 164, 55, LODWORD(STACK[0x6A10]));
}

uint64_t sub_100B21534@<X0>(char a1@<W0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, char a6@<W5>, int a7@<W6>, int a8@<W7>, unsigned __int8 a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  int v16;
  char v17;
  uint64_t v18;

  *(_DWORD *)(v18 + 4 * a9) = a8 ^ v10 ^ v11 ^ v16 ^ a2 ^ (*(_DWORD *)(*(_QWORD *)(v13 + 8 * (v9 - 3573))
                                                                       + 4
                                                                       * ((v15 ^ v14 ^ ((a9 ^ v17) + ((v9 + a3) ^ a1) - (a6 & (2 * (a9 ^ v17))))) ^ a5)
                                                                       - 12)
                                                           + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 != 0) * a7) ^ v9)) - 4))();
}

uint64_t sub_100B215B4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD4E0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v0 - 708288195) & 0x2A37567F) - 1528) ^ 0x103E) * (v1 == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_100B21610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;
  int v13;

  v5 = LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x6820]);
  v6 = (char)((LOBYTE(STACK[0x6A70])
             + 3
             + ((((((-122 * (v4 ^ 0x4C) + 57) | LOBYTE(STACK[0x624])) - 44) ^ LOBYTE(STACK[0x67F0]) ^ LOBYTE(STACK[0x6820]))
               + 3) ^ 0x3D)) & 0xFE ^ 0xF9);
  v7 = (-75
                       * ((LOBYTE(STACK[0x6A70])
                         + 3
                         + ((((((-122 * (v4 ^ 0x4C) + 57) | LOBYTE(STACK[0x624])) - 44) ^ LOBYTE(STACK[0x67F0]) ^ LOBYTE(STACK[0x6820]))
                           + 3) ^ 0x3D)) & 0xFE ^ 0xF9));
  if (v6 >= 0)
    LOBYTE(v8) = (LOBYTE(STACK[0x6A70])
                + 3
                + ((((((-122 * (v4 ^ 0x4C) + 57) | LOBYTE(STACK[0x624])) - 44) ^ LOBYTE(STACK[0x67F0]) ^ LOBYTE(STACK[0x6820]))
                  + 3) ^ 0x3D)) & 0xFE ^ 0xF9;
  else
    v8 = -v6;
  v9 = v8;
  v10 = (-75
       * ((LOBYTE(STACK[0x6A70])
         + 3
         + ((((((-122 * (v4 ^ 0x4C) + 57) | LOBYTE(STACK[0x624])) - 44) ^ v5) + 3) ^ 0x3D)) & 0xFE ^ 0xF9)
       + (_BYTE)v8) & 0xFE;
  v11 = v8 <= v7;
  v12 = v10 > v7;
  LODWORD(STACK[0x6AC0]) = v5 ^ 0x6070481B;
  if (v6 >= 0)
    v13 = v11;
  else
    v13 = v12;
  if (v9 != 1)
    v13 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21 * v13) ^ v4)) - 4))(a1, a2, a3, a4, 3922022212, 1114173680, 1352285244, 2483425039);
}

uint64_t sub_100B217C8@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, char a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;

  v20 = *(_DWORD *)(v7
                  + 4
                  * ((v15 ^ v16 ^ (((v9 * a6) ^ v17)
                                                  - (((v8 + 70) ^ 0xE) & (2 * ((v9 * a6) ^ v17)))
                                                  + 14)) ^ 0x60u));
  v21 = v13 ^ v12 ^ v18 ^ (v20 - (STACK[0xF90] & (2 * v20)) + 167946771);
  v22 = 1476740637
      - (((v21 & 0x200 ^ LODWORD(STACK[0xF8C])) + 1518178115) ^ (v21 & 0x200 | 0x61DFF1D3) ^ ((v21 & 0x200 ^ 0x1CC51A71)
                                                                                            + 1096471518));
  v23 = (v22 ^ 0x6DE14E43) & (2 * (v22 & a2)) ^ v22 & a2;
  v24 = ((2 * (v22 ^ 0x3DE3C04B)) ^ 0xA84D1E1E) & (v22 ^ 0x3DE3C04B) ^ (2 * (v22 ^ 0x3DE3C04B)) & (v19 + 14);
  v25 = ((4 * (v24 ^ v11)) ^ a4) & (v24 ^ v11) ^ (4 * (v24 ^ v11)) & (v19 + 12);
  v26 = (v25 ^ 0x50020C03) & (16 * ((v24 ^ 0x90048E01) & (4 * v23) ^ v23)) ^ (v24 ^ 0x90048E01) & (4 * v23) ^ v23;
  v27 = ((16 * (v25 ^ 0x84248303)) ^ a3) & (v25 ^ 0x84248303) ^ (16 * (v25 ^ 0x84248303)) & v19;
  v28 = v26 ^ 0x54268F0F ^ (v27 ^ 0x40208000) & (v26 << 8);
  v29 = (v21 & 0xFFFFFDFF ^ 0x22C9447A | 0xC48B2C30) - (v21 & 0xFFFFFDFF ^ 0x22C9447A | v10) + v10;
  *(_DWORD *)(a1 + 4 * (v9 * a6)) = v22 ^ ((v29 & 0x1865EA55 ^ 0x18654A45)
                                                            + (v29 & 0xE79A15AA ^ LODWORD(STACK[0xF94]))
                                                            - 1) ^ (2
                                                                  * ((v28 << 16) & v14 ^ v28 ^ ((v28 << 16) ^ 0xF0F0000) & (((v27 ^ a5) << 8) & v14 ^ 0x50200000 ^ (((v27 ^ a5) << 8) ^ 0x268F0000) & (v27 ^ a5)))) ^ 0x83C15289;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((968 * (v9 + 1 != v6 + 256)) ^ v8)) - 8))();
}

uint64_t sub_100B21A30()
{
  unsigned int v0;
  int v1;
  int v2;
  unsigned int v3;

  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8
                                                     * (int)(v0 ^ 0x98DB96C1 ^ (12882
                                                                              * (v0 < 1516 * (v0 ^ 0x98DB8706)
                                                                                    + 999595120))))
                                         - 8))((__n128)vdupq_n_s32(v2 ^ v1 ^ v3));
}

uint64_t sub_100B21A8C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W5>, unsigned int a3@<W6>, unsigned int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q0>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  char v13;
  char v14;
  char v15;
  unsigned int v16;
  int8x16_t v17;
  int32x4_t v18;
  int32x4_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int32x4_t v36;
  int32x4_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int32x4_t v41;
  int8x16_t v42;
  int32x4_t v43;
  int8x16_t v44;

  v19.i32[0] = *(_DWORD *)(v7
                         + 4
                         * ((v13 ^ v14 ^ ((((v8 + v6) * a5) ^ v15)
                                                         - ((2 * (((v8 + v6) * a5) ^ v15)) & 0x1C)
                                                         + 14)) ^ 0x60u));
  v19.i32[1] = *(_DWORD *)(v7
                         + 4
                         * ((v13 ^ v14 ^ ((((((22 * ~(_BYTE)v9) ^ (v6 - 17)) + v8) * a5) ^ v15)
                                                         - ((2 * (((((22 * ~(_BYTE)v9) ^ (v6 - 17)) + v8) * a5) ^ v15)) & 0x1C)
                                                         + 14)) ^ 0x60u));
  v19.i32[2] = *(_DWORD *)(v7
                         + 4
                         * ((v13 ^ v14 ^ ((((v8 + v6 + 2) * a5) ^ v15)
                                                         - ((2 * (((v8 + v6 + 2) * a5) ^ v15)) & 0x1C)
                                                         + 14)) ^ 0x60u));
  v19.i32[3] = *(_DWORD *)(v7
                         + 4
                         * ((v13 ^ v14 ^ ((((v8 + v6 + 3) * a5) ^ v15)
                                                         - ((2 * (((v8 + v6 + 3) * a5) ^ v15)) & 0x1C)
                                                         + 14)) ^ 0x60u));
  v20 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x14055426u))), vdupq_n_s32(0xA02AA13u)), a6);
  v21 = vandq_s8(v20, v17);
  v22 = (int8x16_t)vsubq_s32(vdupq_n_s32(0x5805461Du), (int32x4_t)veorq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v21, (int8x16_t)vdupq_n_s32(0x7E246EEu)), vdupq_n_s32(0x5A7D8F43u)), vorrq_s8(v21, (int8x16_t)vdupq_n_s32(0x61DFF1D3u))), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v21, (int8x16_t)vdupq_n_s32(0x1CC51A71u)), vdupq_n_s32(0x415AD3DEu))));
  v23 = (int32x4_t)veorq_s8(v22, (int8x16_t)vdupq_n_s32(0x3DE3C04Bu));
  v24 = (int32x4_t)vandq_s8(v22, (int8x16_t)vdupq_n_s32(0xE9C54F44));
  v25 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v24, v24), veorq_s8(v22, (int8x16_t)vdupq_n_s32(0x6DE14E43u))), (int8x16_t)v24);
  v26 = (int8x16_t)vaddq_s32(v23, v23);
  v27 = veorq_s8(vandq_s8(veorq_s8(v26, (int8x16_t)vdupq_n_s32(0xA84D1E1E)), (int8x16_t)v23), vandq_s8(v26, (int8x16_t)vdupq_n_s32(0xD4268F0E)));
  v28 = (int32x4_t)veorq_s8(v27, (int8x16_t)vdupq_n_s32(v11));
  v29 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v27, (int8x16_t)vdupq_n_s32(0x90048E01)), (int8x16_t)vshlq_n_s32(v25, 2uLL)), (int8x16_t)v25);
  v30 = (int8x16_t)vshlq_n_s32(v28, 2uLL);
  v31 = veorq_s8(vandq_s8(veorq_s8(v30, (int8x16_t)vdupq_n_s32(a3)), (int8x16_t)v28), vandq_s8(v30, (int8x16_t)vdupq_n_s32(0xD4268F0C)));
  v32 = (int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(0x84248303));
  v33 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v31, (int8x16_t)vdupq_n_s32(0x50020C03u)), (int8x16_t)vshlq_n_s32(v29, 4uLL)), (int8x16_t)v29);
  v34 = (int8x16_t)vshlq_n_s32(v32, 4uLL);
  v35 = veorq_s8(vandq_s8(veorq_s8(v34, (int8x16_t)vdupq_n_s32(a2)), (int8x16_t)v32), vandq_s8(v34, (int8x16_t)vdupq_n_s32(v16)));
  v36 = (int32x4_t)veorq_s8(v35, (int8x16_t)vdupq_n_s32(a4));
  v37 = (int32x4_t)veorq_s8(veorq_s8((int8x16_t)v33, (int8x16_t)vdupq_n_s32(0x54268F0Fu)), vandq_s8(veorq_s8(v35, (int8x16_t)vdupq_n_s32(0x4020800Fu)), (int8x16_t)vshlq_n_s32(v33, 8uLL)));
  v38 = (int8x16_t)vshlq_n_s32(v36, 8uLL);
  v39 = (int8x16_t)vshlq_n_s32(v37, 0x10uLL);
  v40 = veorq_s8((int8x16_t)(*(_OWORD *)&v20 & __PAIR128__(0xFFFFFDFFFFFFFDFFLL, 0xFFFFFDFFFFFFFDFFLL)), (int8x16_t)vdupq_n_s32(0x22C9447Au));
  v41 = vdupq_n_s32(v10);
  v42 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v40, (int8x16_t)vdupq_n_s32(0xC48B2C30)), (int32x4_t)vorrq_s8(v40, (int8x16_t)v41)), v41);
  v43 = (int32x4_t)veorq_s8(veorq_s8(vandq_s8(v39, (int8x16_t)vdupq_n_s32(v12)), (int8x16_t)v37), vandq_s8(veorq_s8(v39, (int8x16_t)vdupq_n_s32(0xF0F0000u)), veorq_s8(veorq_s8(vandq_s8(v38, (int8x16_t)vdupq_n_s32(0xD4260000)), (int8x16_t)vdupq_n_s32(0x50200000u)), vandq_s8(veorq_s8(v38, (int8x16_t)vdupq_n_s32(0x268F0000u)), (int8x16_t)v36))));
  v44 = veorq_s8(veorq_s8(veorq_s8(v22, (int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v42, (int8x16_t)vdupq_n_s32(0x1865EA55u)), (int8x16_t)vdupq_n_s32(0x18654A45u)), (int32x4_t)veorq_s8(vandq_s8(v42, (int8x16_t)vdupq_n_s32(0xE79A15AA)), (int8x16_t)vdupq_n_s32(0xC4880021))), v18)), (int8x16_t)vdupq_n_s32(0x83C15289)), (int8x16_t)vaddq_s32(v43, v43));
  *(_DWORD *)(a1 + 4 * ((v8 + v6) * a5)) = v44.i32[0];
  *(_DWORD *)(a1 + 4 * (((((22 * (v9 ^ 0x13FF)) ^ (v6 + 3823)) + v8) * a5) & 0xFE)) = v44.i32[1];
  *(_DWORD *)(a1 + 4 * ((v8 + v6 + 2) * a5)) = v44.i32[2];
  *(_DWORD *)(a1 + 4 * (((v8 + v6 + 3) * a5) & 0xFC)) = v44.i32[3];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v9 | (8 * (v8 == 252)))) - 8))();
}

uint64_t sub_100B21E60()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD518] = v1 + 0x19FEB71C76E85E41;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != 0) * (v0 - 12552)) ^ v0))
                            - (v0 ^ 0x60AFu)
                            + 20921))();
}

uint64_t sub_100B21ECC()
{
  int v0;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(STACK[0x6AD8] + 8 * v0))(LODWORD(STACK[0x6920]), 12653, LODWORD(STACK[0x68E0]), 3945421915, LODWORD(STACK[0x6A30]), LODWORD(STACK[0x69E0]), LODWORD(STACK[0x68B0]), LODWORD(STACK[0x67E0]));
}

uint64_t sub_100B22140@<X0>(char a1@<W0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  uint64_t v9;
  unsigned __int8 v10;
  char v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  int v22;
  int v23;
  unsigned int v24;
  unint64_t v25;

  v22 = ((a9 ^ v16) * v20) ^ (a5 ^ a1 ^ a3 ^ (v10 - (v11 & v21) - 56)) ^ a2;
  v23 = (a4 - (v22 | a4) + (v22 | v17)) ^ 0x1BF49B06;
  v24 = *((_DWORD *)*(&off_1015B46D0 + (a9 ^ 0x5454)) + ((((2 * v23) & 0x19E1770A) - v23 + v14) ^ v15))
      + ((((2 * v23) & 0x19E1770A) - v23 + v14) ^ 0xB87A0241)
      + 1;
  HIDWORD(v25) = a7 ^ a6 ^ a8 ^ (v24 + v19 - (v13 & (2 * v24)));
  LODWORD(v25) = HIDWORD(v25);
  *(_DWORD *)(v9 + 4 * v10) = __ROR4__(((v25 >> 27) - (v18 & (2 * (v25 >> 27))) - 409714737) ^ 0x8C531726, 5) ^ 0xFB4798F7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v12 != 0) | (4 * (v12 != 0))) ^ a9)))();
}

uint64_t sub_100B2224C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD4F0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v1 == 0) ^ v0 ^ 0x3D) & 1) * (v0 ^ 0x415F)) ^ v0))
                            - 4))();
}

uint64_t sub_100B222C0()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(2181169189, 2281701441, LODWORD(STACK[0x2EC]), 1922925137, 15014, 37552128, 134348800, 1028194304);
}

uint64_t sub_100B2244C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((2 * (v5 & 1) + (v5 ^ 1)) & 3) == 0) * a5) ^ v6))
                            - 8))();
}

uint64_t sub_100B225A0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1)
                                                                              - 12))(2232323732, 4294955362, 2117657417, 1611458550, 233);
}

uint64_t sub_100B22728(char a1, int a2, int a3, char a4, unsigned int a5, int a6, int a7, int a8)
{
  char v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  unint64_t v18;

  v17 = (v9 + a1 + ((v10 + a4) ^ v13)) * v8;
  HIDWORD(v18) = *(_DWORD *)(*(_QWORD *)(v15 + 8 * (v10 + a2))
                           + 4 * ((((v11 ^ v17) - ((2 * (v11 ^ v17)) & 0x1C) + 14) ^ v16) ^ a5)
                           - 4);
  LODWORD(v18) = HIDWORD(v18);
  *(_DWORD *)(v12 + 4 * v17) = a7 ^ a8 ^ v14 ^ (v18 >> 17) ^ ((v18 >> 17) >> 4) ^ ((v18 >> 17) >> 3) ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 != 255) * a6) ^ v10)) - 12))();
}

uint64_t sub_100B227B4@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x6770]) = v2;
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x6A60]) ^ v2;
  v3 = STACK[0x67B0];
  LODWORD(STACK[0x6750]) = LODWORD(STACK[0x67B0]) - ((2 * LODWORD(STACK[0x6A50])) & 0xF03623D6) - 308983408;
  LODWORD(STACK[0x6740]) = v3 + 1970943910;
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x67D0]) - 985433938;
  LODWORD(STACK[0x6730]) = ((a2 - 1611467812) | 0x618) - 2000550879;
  v4 = STACK[0xD4E8];
  STACK[0x6710] = STACK[0xD530];
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(a2 ^ 0x600D56F1 ^ (56349 * (a2 > 0xDDDC919B)))) - 4);
  STACK[0x6720] = v4;
  return v5(135315459, a1, 1563545350, 2317618389, 4294967238, 65, 3342560564, 11538176);
}

uint64_t sub_100B22978(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  char v42;
  int v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  unsigned int v60;
  _DWORD *v61;
  uint64_t v62;
  _DWORD *v63;
  unint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  unint64_t v67;
  unsigned int v68;
  uint64_t v69;
  _DWORD *v70;
  unsigned int v71;
  unint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unint64_t v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  _DWORD *v120;
  int v121;
  _DWORD *v122;
  _DWORD *v123;
  unsigned int v124;
  int v125;
  uint64_t v126;
  unint64_t v127;
  int v128;
  unsigned __int8 v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  uint64_t v138;
  _DWORD *v139;
  uint64_t v140;
  _DWORD *v141;
  _DWORD *v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  _DWORD *v151;
  unsigned int v152;
  uint64_t v153;
  _DWORD *v154;
  int v155;
  uint64_t v156;
  _DWORD *v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  uint64_t v172;
  _DWORD *v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  __int16 v198;
  _DWORD *v199;
  uint64_t v200;
  _DWORD *v201;
  unint64_t v202;
  int v203;
  int v204;
  uint64_t v205;
  _DWORD *v206;
  uint64_t v207;
  _DWORD *v208;
  uint64_t v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unint64_t v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  uint64_t v231;
  _DWORD *v232;
  uint64_t v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  char *v243;
  int v244;
  unsigned int v245;
  uint64_t v246;
  int v247;
  unint64_t v248;
  int v249;
  int v250;
  unsigned int v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  int v256;
  _DWORD *v257;
  _DWORD *v258;
  unsigned int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  _DWORD *v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  uint64_t v268;
  _DWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  unsigned int v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  _DWORD *v279;
  uint64_t v280;
  char *v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _DWORD *v287;
  uint64_t v288;
  char *v289;
  unsigned int v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _DWORD *v295;
  char *v296;
  uint64_t v297;
  unsigned int v298;
  uint64_t v299;
  uint64_t v300;
  _DWORD *v301;
  uint64_t v302;
  _DWORD *v303;
  uint64_t v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  uint64_t v311;
  int v312;
  _DWORD *v313;
  unint64_t v314;
  int v315;
  BOOL v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  uint64_t v330;
  unint64_t v331;
  int v332;
  _DWORD *v333;
  unsigned int v334;
  unsigned int v335;
  uint64_t v336;
  _DWORD *v337;
  int v338;
  uint64_t v339;
  unint64_t v340;
  int v341;
  uint64_t v342;
  _DWORD *v343;
  uint64_t v344;
  _DWORD *v345;
  uint64_t v346;
  _DWORD *v347;
  int v348;
  unsigned int v349;
  int v350;
  char *v351;
  _DWORD *v352;
  int v353;
  int v354;
  _DWORD *v355;
  int v356;
  uint64_t v357;
  char *v358;
  unint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  _DWORD *v363;
  uint64_t v364;
  _DWORD *v365;
  char *v366;
  _DWORD *v367;
  int v368;
  char *v369;
  unint64_t v370;
  int v371;
  unsigned int v372;
  int v373;
  _DWORD *v374;
  unint64_t v375;
  _DWORD *v376;
  int *v377;
  int v378;
  unint64_t v379;
  unint64_t v380;
  _DWORD *v381;
  unint64_t v382;
  unsigned int v383;
  unint64_t v384;
  unint64_t v385;
  int v386;
  int v387;
  int v388;
  unint64_t v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unint64_t v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  int v410;
  uint64_t v411;
  _DWORD *v412;
  uint64_t v413;
  _DWORD *v414;
  int v415;
  unsigned int v416;
  int v417;
  char *v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  int v430;
  uint64_t v431;
  unsigned int v432;
  uint64_t v433;
  char *v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  uint64_t v460;
  char *v461;
  unint64_t v462;
  unsigned int v463;
  int v464;
  uint64_t v465;
  char *v466;
  int v467;
  unsigned int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  unsigned int v492;
  unint64_t v493;
  unsigned int v494;
  unint64_t v495;
  unsigned int v496;
  unsigned int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unsigned int v502;
  uint64_t v503;
  int v504;
  int v505;
  int v506;
  int v507;
  unsigned int v508;
  uint64_t v509;
  int v510;
  int *v511;
  uint64_t v512;
  int *v513;
  int v514;
  int v515;
  int v516;
  int v517;
  unint64_t v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  unint64_t v527;
  unint64_t v528;
  unsigned int v529;
  unsigned int v530;
  int v531;
  char v532;
  unint64_t v533;
  unsigned int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  uint64_t v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;

  v24 = (v15 - 1738) | v9;
  LODWORD(STACK[0x6970]) = a7 & v8;
  LODWORD(STACK[0x67C0]) = (v15 - 1738) ^ 0x5B87;
  LODWORD(STACK[0x6AA0]) = v24;
  v25 = ((a7 & v8 ^ 0x51E57150) + (v24 ^ 0x65C8ADF5) - (((v15 - 1738) ^ 0xCB916B54) & (2 * (a7 & v8 ^ 0x51E57150)))) ^ 0xCC9BF11;
  v26 = (v25 | 0x6F4EF0A3) - (v25 | 0x90B10F5C) - 1867444388;
  LODWORD(v26) = *(unsigned __int8 *)(v21 + (v26 ^ 0x9091EE54)) + 77 * (v26 ^ 0x54) + 96;
  v28 = (a7 & 0xFFFFFFFD ^ 0x1A16968D | 0x47B27CFB)
      - (a7 & 0xFFFFFFFD ^ 0x1A16968D | LODWORD(STACK[0xC58]))
      + LODWORD(STACK[0xC58]);
  STACK[0x6AB0] = v28 ^ 0x9A9F8740;
  LOBYTE(v26) = *(_BYTE *)(STACK[0x6870] + ((v26 - (v11 & (2 * v26)) + 45) ^ v10));
  LOBYTE(v24) = *(_BYTE *)(v21 + (v28 ^ 0x9A9F8740));
  LODWORD(STACK[0x6A30]) = a7 & 0xFFFFFFF9;
  v29 = (v24 + 77 * (v28 ^ 0x40) + 96) ^ 0xCBLL;
  LOBYTE(v24) = *(_BYTE *)(v21
                         + (((a7 & 0xFFFFFFF9 ^ 0xB8B092E8)
                           + (a7 & 0x67A4720 ^ 0x64A4502)
                           - ((a7 & 0xFFFFFFF9 ^ 0xB8B092E8) & 0x67A4720)) ^ 0x79F1B8FCLL));
  v30 = STACK[0x6890];
  v31 = ((2 * a7) & 0xF1D29040 ^ v12 | 0xAF1601AB) - ((2 * a7) & 0xF1D29040 ^ v12 | 0x50E9FE54) + 1357512276;
  LODWORD(v29) = (*(unsigned __int8 *)(STACK[0x6890] + v29) ^ a6) << 8;
  v32 = *(unsigned __int8 *)(STACK[0x6880]
                           + ((((v24
                                                + 77
                                                * (((a7 & 0xF9 ^ 0xE8) + (a7 & 0x20 ^ 2) - ((a7 & 0xF9 ^ 0xE8) & 0x20)) ^ 0xFC)) ^ 7)
                                              + 96) ^ 0xE7));
  LODWORD(STACK[0x6A40]) = a7 & 0xFFFFFFF3;
  v33 = (((a7 ^ LODWORD(STACK[0xC5C])) - 956883462) ^ ((a7 ^ 0xCD0B560C) - 1909729258) ^ ((a7 ^ 0x770EE0FB) + 875458275))
      + a4
      + (((v31 & (v13 + 271) ^ 0x36450) + (v31 & 0xFDF0928A ^ 0x8D908281) - 1) ^ 0x5257773B);
  v34 = STACK[0x6720];
  v35 = *(unsigned __int8 *)(STACK[0x68F0]
                           + ((*(_BYTE *)(STACK[0x6720] + v33) - ((v33 * v18) & 0xF5) + 96) ^ 0xF6));
  v36 = STACK[0x68F0];
  LOBYTE(v31) = *(_BYTE *)(STACK[0x6720]
                         + ((((2 * (a7 & 0xFFFFFFF3 ^ 0xD10CFA11)) & 0xDDE76F82)
                           - (a7 & 0xFFFFFFF3 ^ 0xD10CFA11)
                           + 286017590) ^ 0x73BDF1BLL));
  LODWORD(STACK[0x6A00]) = a7 & 0xFFFFFFF1;
  v37 = (-54026029 - (a7 & 0xFFFFFFF1 ^ 0x6FCDAFF1 | 0xFCC7A0D3) + (a7 & 0xFFFFFFF1 ^ 0x6FCDAFF1 | 0x3385F2C)) ^ 0x45385E0E;
  LODWORD(v26) = v35 ^ 0x52 ^ (v35 >> 7) ^ ((v35 ^ 0x52) >> 3) | (((v26 ^ (32 * (v26 ^ 0x7E)) ^ (2 * (v26 ^ 0x7E))) ^ 0x15) << 16) | ((v32 ^ 0x38) << 8);
  v38 = STACK[0x6850];
  v39 = *(unsigned __int8 *)(STACK[0x6850]
                           + ((v31
                                              + 77
                                              * ((((2 * (a7 & 0xF3 ^ 0x11)) & 0x82) - (a7 & 0xF3 ^ 0x11) + 54) ^ 0x1B)
                                              + 96) ^ 0x31));
  v40 = ((a7 & 0x1A834920 ^ LODWORD(STACK[0xC68])) + (a7 & 0xE57CB6D0) - 1) ^ (v14 + 2168);
  v41 = v40 - 529919705 - ((2 * v40) & 0xC0D42244);
  v42 = *(_BYTE *)(v34 + (v41 ^ 0xBA558EDALL));
  v43 = *(unsigned __int8 *)(*(_QWORD *)(v17 + 8 * ((int)v15 - 3212))
                           + ((*(_BYTE *)(v34
                                                         + ((((2 * v37) | 0xEA28BE3A) - v37 - 1964269341) ^ 0x9BE29CF0))
                                              + 77 * ((((2 * v37) | 0x3A) - v37 - 29) ^ 0xF0)
                                              + 96) ^ 0xBELL)
                           - 4);
  v44 = v39 ^ ((v39 ^ 0xC6) >> 5) ^ ((v39 ^ 0xC6) >> 3) ^ 0x4A;
  LODWORD(STACK[0x6A60]) = a7 & 0xFFFFFFFE;
  v45 = ((a7 & 0xFFFFFFFE ^ LODWORD(STACK[0xC60]))
       + (a7 & 0xD67D05B4 ^ LODWORD(STACK[0xC64]))
       - ((a7 & 0xFFFFFFFE ^ LODWORD(STACK[0xC60])) & 0xD67D05B4)) ^ 0x76BD158E;
  v46 = ((2 * v45) & 0x1546DD06) - v45 - 178482820;
  LOBYTE(v45) = -35
              * *(_BYTE *)(*(_QWORD *)(v17 + 8 * (int)(v15 ^ 0x1044))
                         + (((v42 ^ 0x60) + 77 * (v41 ^ 0xDA) + ((2 * v42) & 0xC0)) ^ 0x29));
  LOBYTE(v37) = *(_BYTE *)(v34 + (v46 ^ 0x18B3C7C2)) + 77 * (v46 ^ 0xC2) + 96;
  LODWORD(v41) = ((v43 ^ 0xB8) << 8) | (v44 << 24);
  LODWORD(STACK[0x6A10]) = a7 & 0xFFFFFFF7;
  v47 = (248141545 - (a7 & 0xFFFFFFF7 ^ 0x8164A526 | 0xECA56E9) + (a7 & 0xFFFFFFF7 ^ 0x8164A526 | 0xF135A916)) ^ 0x7095891E;
  v48 = v47 - ((2 * v47) & 0x4DA190C4) + 651216994;
  v49 = STACK[0x6840];
  v50 = *(unsigned __int8 *)(STACK[0x6840] + (v37 ^ 0xFALL));
  LOBYTE(v48) = *(_BYTE *)(v34 + (v48 ^ 0xE12F2070)) + 77 * (v48 ^ 0x70) + 96;
  LODWORD(STACK[0x6990]) = a7 & 0xFFFFFFFC;
  LODWORD(v29) = v29 | ((v50 ^ 0xA4) << 16);
  STACK[0x6920] = v15;
  LODWORD(v48) = *(unsigned __int8 *)(*(_QWORD *)(v17 + 8 * (int)(v15 ^ 0x1EC0)) + (v48 ^ 0xC8));
  LOBYTE(v50) = *(_BYTE *)(v34
                         + ((((2 * (a7 & 0xFFFFFFFC ^ 0x69EA908C)) & 0x25EDC9D8)
                           - (a7 & 0xFFFFFFFC ^ 0x69EA908C)
                           - 318170352) ^ 0x43D8E6ABLL))
              + 77 * ((((2 * (a7 & 0xFC ^ 0x8C)) & 0xD8) - (a7 & 0xFC ^ 0x8C) + 16) ^ 0xAB)
              + 96;
  LODWORD(STACK[0x69E0]) = a7 & 0xFFFFFFF2;
  LOBYTE(v50) = *(_BYTE *)(*(_QWORD *)(v17 + 8 * (int)(v15 ^ 0x1074)) + (v50 ^ 0xB2));
  LOBYTE(v37) = *(_BYTE *)(v34
                         + (((a7 & 0xFFFFFFF2 ^ 0x3DC692D2)
                           + (a7 & 0x176F0120 ^ 0x2290121)
                           - ((a7 & 0xFFFFFFF2 ^ 0x3DC692D2) & 0x176F0120)) ^ 0xED92FECELL))
              + 77 * (((a7 & 0xF2 ^ 0xD2) + (a7 & 0x20 ^ 0x21) - ((a7 & 0xF2 ^ 0xD2) & 0x20)) ^ 0xCE);
  v51 = a7 & 0xFFFFFFFB ^ 0xC73B6D34;
  STACK[0x6980] = v51;
  LODWORD(v51) = *(unsigned __int8 *)(v34 + v51) + 77 * (a7 & 0xFFFFFFFB ^ 0x34);
  LODWORD(STACK[0x6900]) = v51;
  LODWORD(v41) = v41 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v49 + ((v37 + 96) ^ 0x7ELL)) ^ 0x2C) << 16) | v45;
  LODWORD(v49) = v41 + 1015878328 - 2 * (v41 & 0x3C8D12BB ^ v45 & 3);
  LODWORD(v41) = ((2 * (a7 & v16 ^ 0xDD29884)) & 0xE6AFB568) - (a7 & v16 ^ 0xDD29884) - 1935137470;
  v52 = *(unsigned __int8 *)(v38
                           + ((((v51 + 96) ^ -(v51 + 96) ^ (((v51 + 96) ^ 0xFFFFFF5B)
                                                                                            + 165))
                             + 164) ^ 7));
  LODWORD(v41) = (v41 & 0xD3496438 ^ 0x42414033 | v41 & 0x2CB69BC4) - 1;
  v53 = v41 ^ 0x40090C9;
  STACK[0x69C0] = v53;
  LOBYTE(v53) = *(_BYTE *)(v34 + v53);
  v54 = v52 ^ a5 ^ ((v52 ^ a5) >> 5) ^ ((v52 ^ a5) >> 3);
  LODWORD(STACK[0x69D0]) = a7 & 0xFFFFFFF5;
  LODWORD(v41) = *(unsigned __int8 *)(v36 + ((v53 + 77 * (v41 ^ 0xC9) + 96) ^ 0x45));
  LODWORD(v26) = v26 | ((v54 - ((2 * v54) & 0x3C)) << 24);
  v55 = (a7 & 0xFFFFFFF6 ^ 0x63C4B284 | LODWORD(STACK[0xC6C]))
      - (a7 & 0xFFFFFFF6 ^ 0x63C4B284 | 0xB81EF079)
      - 1205931911;
  LOBYTE(v37) = *(_BYTE *)(v34
                         + ((((2 * (a7 & 0xFFFFFFF5 ^ 0xE6E0CF35)) & 0x26FCBDAA)
                           - (a7 & 0xFFFFFFF5 ^ 0xE6E0CF35)
                           + 1820434720) ^ 0x4D5A032BLL))
              + 77 * ((((2 * (a7 & 0xF5 ^ 0x35)) & 0xAA) - (a7 & 0xF5 ^ 0x35) + 32) ^ 0x2B);
  LODWORD(STACK[0x6960]) = a7;
  v56 = a7 ^ 0xC73B6D34;
  STACK[0x69A0] = v56;
  v57 = (v55 & a3 ^ a1) + (v55 & 0xA2CE30F8 ^ 0x2C000C1) - 2;
  LODWORD(v48) = ((v41 ^ 0x52) >> 3) ^ (v41 >> 7) ^ (v41 ^ 0x52 | (((((((v48 >> 2) | ((_BYTE)v48 << 6)) ^ 0x9E) >> 6) | (4 * (((v48 >> 2) | ((_DWORD)v48 << 6)) ^ 0xFFFFFF9E))) ^ 0x20) << 24));
  LOBYTE(v41) = *(_BYTE *)(v34 + v56) + 77 * (((a7 ^ 0x3C) - 67) ^ (a7 - 127) ^ ((a7 ^ v19) + 9));
  STACK[0x6930] = v57 ^ 0xE9CE10FDLL;
  v58 = *(unsigned __int8 *)(STACK[0x6860]
                           + ((*(_BYTE *)(v34 + (v57 ^ 0xE9CE10FDLL)) + 77 * (v57 ^ 0xFD) + 96) ^ 0xC5)) ^ 0xFD;
  LODWORD(v56) = ((*(unsigned __int8 *)(v30 + ((v37 + 96) ^ 0xDBLL)) ^ 0xB1) << 8) | (v58 << 16) | v48;
  LODWORD(STACK[0x67A0]) = v56;
  LOBYTE(v50) = v50 - 10;
  v59 = v26 + 503316480;
  LODWORD(v26) = v29 & 0xFFFFFF00 | ((*(unsigned __int8 *)(STACK[0x68A0]
                                                         + ((((2 * (v41 - 113)) & 0xC0)
                                                                            + ((v41 - 113) ^ 0x60)) ^ 0xE2)) ^ 0x1C) << 24) | v50;
  LODWORD(v41) = v26 - 2 * (v26 & 0x41BC5E5F ^ v50 & 0x11) - 1044619698;
  LODWORD(v26) = LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x68E0]);
  v60 = v26 ^ 0xCF6D66EA ^ (v56 + 75905736 - 2 * (v56 & 0x4863ACB ^ v48 & 3));
  LODWORD(v56) = STACK[0x6760];
  LODWORD(STACK[0x6790]) = v59;
  LODWORD(v48) = v59 ^ v56 ^ 0x3A98F1E5;
  LODWORD(STACK[0x6780]) = v41;
  LODWORD(v29) = v26 ^ 0x9766548F ^ v41;
  v61 = (_DWORD *)(STACK[0xD500] + 4 * BYTE3(v29));
  v62 = 4 * BYTE3(v48);
  v63 = (_DWORD *)(STACK[0xD500] + v62);
  LODWORD(v26) = v56 ^ LODWORD(STACK[0xC74]);
  LODWORD(STACK[0x67B0]) = v49;
  LODWORD(v56) = v26 ^ v49;
  v64 = STACK[0x6710];
  v65 = 4 * HIBYTE(v60);
  v66 = (_DWORD *)((char *)v63 + v65 - v62);
  LODWORD(v26) = *(_DWORD *)(STACK[0x6710] + 4 * ((v26 ^ v49) >> 16)) ^ *v61 ^ *(_DWORD *)(STACK[0xD4F0] + 4 * BYTE1(v60)) ^ *(_DWORD *)(STACK[0xD520] + 4 * v48);
  v67 = STACK[0xD4F0];
  v68 = *(_DWORD *)(STACK[0x6710] + 4 * BYTE2(v29)) ^ *(_DWORD *)(STACK[0xD520] + 4 * v60) ^ *(_DWORD *)(STACK[0xD4F0] + 4 * BYTE1(v56)) ^ *v63;
  v69 = 4 * BYTE3(v56);
  v70 = (_DWORD *)((char *)&v66[(unint64_t)v69 / 4] - v65);
  v71 = *(_DWORD *)(STACK[0xD4F0] + 4 * BYTE1(v29)) ^ *(_DWORD *)(STACK[0x6710] + 4 * BYTE2(v48)) ^ *(_DWORD *)(STACK[0xD520] + 4 * v56) ^ *v66;
  v72 = STACK[0xD520];
  v73 = *v70 ^ *(_DWORD *)(STACK[0x6710] + 4 * BYTE2(v60));
  LODWORD(v66) = *(_DWORD *)(STACK[0xD4F0] + 4 * BYTE1(v48));
  LODWORD(v48) = -1442470583
               - (((v73 ^ v66 ^ LODWORD(STACK[0xC70])) - 1852611647) ^ ((v73 ^ v66 ^ 0xE716D0BF)
                                                                                    + 417935169) ^ ((v73 ^ v66 ^ 0xB367EA43)
                                                                                                  + 1285035453));
  LODWORD(v56) = (v48 ^ 0xB513F537) & (2 * (v48 & 0xB99B0634)) ^ v48 & 0xB99B0634;
  v74 = ((2 * (v48 ^ 0x8501F957)) ^ 0x7935FEC6) & (v48 ^ 0x8501F957) ^ (2 * (v48 ^ 0x8501F957)) & 0x3C9AFF62;
  LODWORD(v56) = (v74 ^ 0x28123841) & (4 * v56) ^ v56;
  v75 = ((4 * (v74 ^ 0x48A0121)) ^ LODWORD(STACK[0xC78])) & (v74 ^ 0x48A0121) ^ (4 * (v74 ^ 0x48A0121)) & 0x3C9AFF60;
  LODWORD(v56) = (v75 ^ 0x300AFD00) & (16 * v56) ^ v56;
  v76 = ((16 * (v75 ^ 0xC900263)) ^ LODWORD(STACK[0xC7C])) & (v75 ^ 0xC900263) ^ (16 * (v75 ^ 0xC900263)) & 0x3C9AFF60;
  LODWORD(v56) = v56 ^ 0x3C9AFF63 ^ (v76 ^ 0x88AF600) & ((_DWORD)v56 << 8);
  v77 = v48 ^ (2
             * (((_DWORD)v56 << 16) & 0x3C9A0000 ^ v56 ^ (((_DWORD)v56 << 16) ^ 0x7F630000) & (((v76 ^ 0x34100943) << 8) & 0x3C9A0000 ^ 0x24000000 ^ (((v76 ^ 0x34100943) << 8) ^ 0x9AFF0000) & (v76 ^ 0x34100943))));
  LODWORD(v48) = (((v73 ^ 0x69A4C3CD) - 1772405709) ^ ((v73 ^ 0x8A5E8DED) + 1973514771) ^ ((v73 ^ 0x73A1CB76)
                                                                                         - 1939983222))
               + 1237249639;
  LODWORD(v56) = ((2 * (v48 & 0xA8DE44AF)) & 0x910 | v48 & 0xA8DE44AF) ^ (2 * (v48 & 0xA8DE44AF)) & (v48 ^ 0x8ADF4B3F);
  v78 = ((2 * (v48 ^ 0x8ADF4B3F)) ^ 0x44021F20) & (v48 ^ 0x8ADF4B3F) ^ (2 * (v48 ^ 0x8ADF4B3F)) & 0x22010F90;
  LODWORD(v56) = (v78 ^ 0x700) & (4 * v56) ^ v56;
  v79 = ((4 * (v78 ^ 0x22010090)) ^ 0x88043E40) & (v78 ^ 0x22010090) ^ (4 * (v78 ^ 0x22010090)) & 0x22010F90;
  LODWORD(v56) = v56 ^ 0x22010F90 ^ (v79 ^ 0xE00) & (16 * v56);
  v80 = (16 * (v79 ^ 0x22010190)) & 0x22010F90 ^ (v22 + 1632) ^ ((16 * (v79 ^ 0x22010190)) ^ 0x2010F900) & (v79 ^ 0x22010190);
  LODWORD(v56) = ((_DWORD)v56 << 8) & 0x22010F00 ^ v56 ^ (((_DWORD)v56 << 8) ^ LODWORD(STACK[0xC80])) & v80;
  v81 = v48 ^ (2
             * (((_DWORD)v56 << 16) & 0x22010000 ^ v56 ^ (((_DWORD)v56 << 16) ^ 0xF900000) & ((v80 << 8) & 0x22010000 ^ 0x22000000 ^ ((v80 << 8) ^ 0x10F0000) & v80)));
  LODWORD(v56) = -1906027334
               - (((v66 ^ 0x89603DC7) + 1990181433) ^ ((v66 ^ 0xB9640A9C) + 1184626020) ^ ((v66 ^ 0x9A4214CE) + 1706945330));
  LODWORD(v48) = (v56 ^ 0xC6157730) & (2 * (v56 & 0xC75587B1)) ^ v56 & 0xC75587B1;
  v82 = ((2 * (v56 ^ 0xC21E7072)) ^ 0xA97EF86) & (v56 ^ 0xC21E7072) ^ (2 * (v56 ^ 0xC21E7072)) & 0x54BF7C2;
  LODWORD(v48) = (v82 ^ 0x22781) & (4 * v48) ^ v48;
  v83 = ((4 * (v82 ^ 0x5481041)) ^ 0x152FDF0C) & (v82 ^ 0x5481041) ^ (4 * (v82 ^ 0x5481041)) & 0x54BF7C0;
  LODWORD(v48) = (v83 ^ 0x50BD700) & (16 * v48) ^ v48;
  v84 = ((16 * (v83 ^ 0x4020C3)) ^ 0x54BF7C30) & (v83 ^ 0x4020C3) ^ (16 * (v83 ^ 0x4020C3)) & 0x54BF7C0;
  LODWORD(v48) = v48 ^ 0x54BF7C3 ^ (v84 ^ 0x40B7400) & ((_DWORD)v48 << 8);
  v85 = v77 & 0xD79F694C ^ 0xC9AEE88E ^ (v77 ^ 0xB8AAF8F2) & (v81 ^ 0x3F4132C3);
  v86 = v77 ^ v81;
  v87 = 2 * (((2 * v85) | 0x6B88898C) - v85) - 1804110220;
  v88 = v87 & 0x578EC978 ^ 0x13844168 ^ (v87 ^ 0xD9C18810) & (v86 ^ 0x7FA6A04);
  v89 = (unint64_t)&v70[v69 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v70) = 2 * (v88 - ((2 * v88) & 0x32F73476)) + 855061622;
  LODWORD(v70) = (((v87 ^ v86 ^ 0xE27AB468) + 470019557) ^ ((v87 ^ v86 ^ 0xB3A08481) + 1306123534) ^ ((v87 ^ v86 ^ 0xD86F1B84) + 638992905))
               + 2002043472
               + (((v70 ^ 0x2B076B14) - 1985171397) ^ ((v70 ^ 0x419C2B70) - 482873249) ^ ((v70 ^ 0xDC65E6E2) + 2127445453));
  v90 = (v70 ^ 0xFA216835) & (2 * (v70 & 0xFC894D25)) ^ v70 & 0xFC894D25;
  v91 = ((2 * (v70 ^ 0x1331E237)) ^ 0xDF715E24) & (v70 ^ 0x1331E237) ^ (2
                                                                                                  * (v70 ^ 0x1331E237)) & 0xEFB8AF12;
  v92 = (v91 ^ 0xC6200C00) & (4 * v90) ^ v90;
  v93 = ((4 * (v91 ^ 0x2088A112)) ^ 0xBEE2BC48) & (v91 ^ 0x2088A112) ^ (4 * (v91 ^ 0x2088A112)) & 0xEFB8AF10;
  v94 = (v93 ^ LODWORD(STACK[0xC84])) & (16 * v92) ^ v92;
  v95 = ((16 * (v93 ^ 0x41180312)) ^ 0xFB8AF120) & (v93 ^ 0x41180312) ^ (16 * (v93 ^ 0x41180312)) & 0xEFB8AF10;
  v96 = v94 ^ 0xEFB8AF12 ^ (v95 ^ 0xEB88A100) & (v94 << 8);
  LODWORD(v48) = v56 ^ v66 ^ v70 ^ (2
                                                              * (((_DWORD)v48 << 16) & 0x54B0000 ^ v48 ^ (((_DWORD)v48 << 16) ^ 0x77C30000) & (((v84 ^ (v20 - 2433)) << 8) & 0x54B0000 ^ 0x4080000 ^ (((v84 ^ (v20 - 2433)) << 8) ^ 0x4BF70000) & (v84 ^ (v20 - 2433))) ^ v96 ^ (v96 << 16) & 0x6FB80000 ^ ((v96 << 16) ^ 0x2F120000) & (((v95 ^ LODWORD(STACK[0xC88])) << 8) & 0x6FB80000 ^ 0x47100000 ^ (((v95 ^ LODWORD(STACK[0xC88])) << 8) ^ 0xB8AF0000) & (v95 ^ LODWORD(STACK[0xC88])))));
  LODWORD(v48) = (((v73 ^ 0x97A7C148) + 1750613688) ^ ((v73 ^ 0xFEBD50C6) + 21147450) ^ ((v73 ^ 0xF94114D8) + 113175336))
               - 734628208
               + (((v48 ^ 0x552B733) - 252734711) ^ ((v48 ^ 0x50AE61ED) - 1525463593) ^ ((v48 ^ 0x45268E7D) - 1331975609));
  v97 = (v48 ^ 0x84BD8288) & (2 * (v48 & 0xD6BD922D)) ^ v48 & 0xD6BD922D;
  LODWORD(v66) = ((2 * (v48 ^ 0xA4BCA298)) ^ 0xE402616A) & (v48 ^ 0xA4BCA298) ^ (2 * (v48 ^ 0xA4BCA298)) & 0x720130B4;
  v98 = v97 ^ 0x720130B5 ^ (v66 ^ 0x60010021) & (4 * v97);
  LODWORD(v66) = ((4 * (v66 ^ 0x12011095)) ^ 0xC804C2D4) & (v66 ^ 0x12011095) ^ (4 * (v66 ^ 0x12011095)) & 0x720130B4;
  v99 = v66 & 0x48EEC104 ^ v98 ^ (v66 ^ 0x40000095) & ((16 * v98) ^ 0x68FDCA54);
  LODWORD(v66) = ((16 * (_DWORD)v66) ^ 0x48EEC844) & (v66 ^ 0x40000095) ^ v66 & 0x48EEC104;
  v100 = v66 & 0x48EEC104 ^ v99 ^ ((v99 << 8) ^ 0x49DE7004) & (v66 ^ 0x400000B5);
  LODWORD(v66) = (((_DWORD)v66 << 8) ^ 0x48EEC504) & (v66 ^ 0x400000B5) ^ v66 & 0x48EEC104;
  LODWORD(v29) = v48 ^ *(_DWORD *)(STACK[0xD520] + 4 * v29) ^ (2
                                                                                * (v100 ^ v66 & 0x48EEC104 ^ (LODWORD(STACK[0xC8C]) ^ (v100 << 16)) & (v66 ^ 0x32010000) ^ (LODWORD(STACK[0xC8C]) ^ (v100 << 16)) & 0x72010004));
  LODWORD(v48) = ((v68 ^ 0xFFFFFFC7) + 548183049 + ((2 * v68) | 0xBEA6C7F0)) ^ 0x8203E148;
  v101 = v48 - ((2 * v48) & 0x100038BA);
  LODWORD(v66) = *(_DWORD *)(STACK[0x6710] + 4 * (BYTE2(v26) ^ 0x77u));
  LODWORD(v70) = *(_DWORD *)(v89 + 4 * (HIBYTE(v68) ^ 0x5F));
  LODWORD(v48) = (((v66 ^ 0xE6FBDB5B) + 419701925) ^ ((v66 ^ 0x180F7210) - 403665424) ^ ((v66 ^ 0x95ABF741) + 1783892159))
               - (((v70 ^ v66 ^ 0x2209F892) - 571078802) ^ ((v70 ^ v66 ^ 0xE3E11CB0)
                                                                                      + 471786320) ^ ((v70 ^ v66 ^ 0x51B36174) - 1370710388))
               - 138471149;
  LODWORD(v56) = (v48 ^ 0xEA70BF09) & (2 * (v48 & 0xE344BFA1)) ^ v48 & 0xE344BFA1;
  v102 = ((2 * (v48 ^ 0xAAF8B049)) ^ 0x93781FD0) & (v48 ^ 0xAAF8B049) ^ (2 * (v48 ^ 0xAAF8B049)) & 0x49BC0FE8;
  LODWORD(v56) = (v102 ^ 0x1300F80) & (4 * v56) ^ v56;
  v103 = ((4 * (v102 ^ 0x48840028)) ^ 0x26F03FA0) & (v102 ^ 0x48840028) ^ (4 * (v102 ^ 0x48840028)) & 0x49BC0FE8;
  LODWORD(v56) = (v103 ^ (a8 + 168)) & (16 * v56) ^ v56;
  v104 = ((16 * (v103 ^ 0x490C0048)) ^ 0x9BC0FE80) & (v103 ^ 0x490C0048) ^ (16 * (v103 ^ 0x490C0048)) & 0x49BC0FE0;
  v105 = v56 ^ 0x49BC0FE8 ^ (v104 ^ 0x9800E68) & ((_DWORD)v56 << 8);
  v106 = 1056863055
       - (((v70 ^ 0xF7843F5E) + 142327970) ^ ((v70 ^ 0x409B0651) - 1083901521) ^ ((v70 ^ 0x4C1BE253) - 1276895827));
  LODWORD(v56) = (v106 ^ 0xE5FCB415) & (2 * (v106 & STACK[0xC90])) ^ v106 & STACK[0xC90];
  v107 = ((2 * (v106 ^ 0x64959495)) ^ 0x42D24B80) & (v106 ^ 0x64959495) ^ (2 * (v106 ^ 0x64959495)) & 0xA16925C0;
  LODWORD(v56) = (v107 ^ 0x80482180) & (4 * v56) ^ v56;
  v108 = ((4 * (v107 ^ 0xA1292440)) ^ 0x85A49700) & (v107 ^ 0xA1292440) ^ (4 * (v107 ^ 0xA1292440)) & 0xA16925C0;
  LODWORD(v56) = v56 ^ 0xA16925C0 ^ (v108 ^ 0x81200500) & (16 * v56);
  v109 = (16 * (v108 ^ 0x204920C0)) & 0xA16925C0 ^ 0xA16921C0 ^ ((16 * (v108 ^ 0x204920C0)) ^ 0x16925C00) & (v108 ^ 0x204920C0);
  LODWORD(v65) = ((_DWORD)v56 << 8) & 0xA1692500 ^ v56 ^ (((_DWORD)v56 << 8) ^ LODWORD(STACK[0xC94])) & v109;
  LODWORD(v48) = v106 ^ v70 ^ v48 ^ (2
                                                 * (((_DWORD)v65 << 16) & 0x21690000 ^ v65 ^ v105 ^ (((_DWORD)v65 << 16) ^ 0x25C00000) & ((v109 << 8) & 0xA1690000 ^ 0x480000 ^ ((v109 << 8) ^ 0x69250000) & v109) ^ (v105 << 16) & 0x49BC0000 ^ ((v105 << 16) ^ 0xFE80000) & (((v104 ^ 0x403C0168) << 8) & 0x49BC0000 ^ 0x41B00000 ^ (((v104 ^ 0x403C0168) << 8) ^ 0x3C0F0000) & (v104 ^ 0x403C0168))));
  LODWORD(v48) = (((v66 ^ 0xE315F33D) + 485100739) ^ ((v66 ^ 0x2B2F8125) - 724533541) ^ ((v66 ^ 0xA3652C12) + 1553650670))
               + 683606087
               + (((v48 ^ 0x2AA1EC56) + 1092015012) ^ ((v48 ^ 0xE7CECDEE) - 1938165220) ^ ((v48 ^ 0xD2EBA040)
                                                                                         - 1185112138));
  LODWORD(v66) = ((2 * (v48 ^ 0xFFBC42A5)) ^ LODWORD(STACK[0xC98])) & (v48 ^ 0xFFBC42A5) ^ (2 * (v48 ^ 0xFFBC42A5)) & 0x31D0DD10;
  v110 = 2 * (v48 & 0xCE6C9FB5);
  LODWORD(v49) = (v66 ^ 0x21809800) & (4 * (v110 & (v48 ^ 0xEF6C5FA5) ^ v48 & 0xCE6C9FB5)) ^ v110 & (v48 ^ 0xEF6C5FA5) ^ v48 & 0xCE6C9FB5;
  LODWORD(v66) = ((4 * (v66 ^ LODWORD(STACK[0xCA4]))) ^ LODWORD(STACK[0xCA0])) & (v66 ^ LODWORD(STACK[0xCA4])) ^ (4 * (v66 ^ LODWORD(STACK[0xCA4]))) & 0x31D0DD10;
  LODWORD(v49) = v49 ^ 0x31D0DD10 ^ (v66 ^ 0x1405400) & (16 * v49);
  v111 = v110 & (v48 ^ 0x8D4A1F20) ^ v48 & 0xCE6C9FB5;
  v112 = ((2 * (v48 ^ 0x91D33208)) ^ 0xBF7F5B7A) & (v48 ^ 0x91D33208) ^ (2 * (v48 ^ 0x91D33208)) & 0x5FBFADBC;
  v113 = (v112 ^ 0x1B360938) & (4 * v111) ^ v111;
  v114 = ((4 * (v112 ^ 0x4080A485)) ^ 0x7EFEB6F4) & (v112 ^ 0x4080A485) ^ (4 * (v112 ^ 0x4080A485)) & 0x5FBFADBC;
  v115 = (v114 ^ 0x5EBEA4B9) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x1010909)) ^ 0xFBFADBD0) & (v114 ^ 0x1010909) ^ (16 * (v114 ^ 0x1010909)) & 0x5FBFADB0;
  v117 = v115 ^ 0x5FBFADBD ^ (v116 ^ 0x5BBA8900) & (v115 << 8);
  LODWORD(v48) = (((((_DWORD)v49 << 8) & 0xFFFFFDFF ^ v49 ^ (((_DWORD)v49 << 8) ^ 0x1000) & ((16 * (v66 ^ LODWORD(STACK[0xC9C]))) & 0x31D0DD00 ^ ((16 * (v66 ^ LODWORD(STACK[0xC9C]))) ^ 0x1100) & (v66 ^ LODWORD(STACK[0xC9C])) ^ 0xC00)) << 19) ^ ((_DWORD)v48 << 18)) & 0xFFFC0000 | ((v48 ^ (2 * ((v117 << 16) & 0x5FBF0000 ^ v117 ^ ((v117 << 16) ^ 0x2DBD0000) & (((v116 ^ (v23 + 3295)) << 8) & 0x5FBF0000 ^ 0x40120000 ^ (((v116 ^ (v23 + 3295)) << 8) ^ 0x3FAD0000) & (v116 ^ (v23 + 3295)))))) >> 14);
  v118 = *(_DWORD *)(STACK[0x6710] + 4 * (BYTE2(v29) ^ 0xBBu)) ^ *(_DWORD *)(v89 + 4 * (BYTE3(v26) ^ 0x71)) ^ *(_DWORD *)(STACK[0xD4F0] + 4 * (BYTE1(v71) ^ 0x99u)) ^ *(_DWORD *)(STACK[0xD520] + 4 * ((v101 - 1970316195) ^ 0xD7DFDE51));
  v119 = __ROR4__(*(_DWORD *)(STACK[0xD4F0] + 4 * (BYTE1(v29) ^ 7u)), 14);
  v120 = (_DWORD *)(STACK[0xD4F0] + 4 * (BYTE1(v26) ^ 0xC5u));
  LODWORD(v56) = (LODWORD(STACK[0xCAC]) | (2 * (v29 ^ 0x10)))
               - (v29 ^ 0x10)
               + 171489818;
  v121 = (v56 & 0x36B6EA05 ^ 0x2204A01) + (v56 & LODWORD(STACK[0xCA8]) ^ 0xC9010143);
  v122 = (_DWORD *)(v89 + 4 * (HIBYTE(v71) ^ 0x60));
  STACK[0xD500] = (unint64_t)v122;
  LODWORD(v49) = *v122 ^ *(_DWORD *)(v64 + 4 * (BYTE2(v68) ^ 0x13u));
  v123 = (_DWORD *)(v72
                  + 4
                  * (((v71 ^ 0x83A046B0)
                    - 1820925261
                    - ((2 * (v71 ^ 0x83A046B0)) & 0x6408566)) ^ 0x10D6A493));
  STACK[0xD520] = (unint64_t)v123;
  v124 = *v123 ^ __ROR4__(v48 ^ v119 ^ 0x27731DA4, 18);
  v125 = (v26 ^ 0x85) + (v26 & 0xF1 ^ 0xB70) - ((v26 ^ 0x85) & 0xFFFFFFF1);
  v126 = v49 ^ *v120 ^ *(_DWORD *)(v72 + 4 * ((v121 - 1) ^ 0x3EE60E4Eu));
  HIDWORD(v127) = *(_DWORD *)(v67 + 4 * (BYTE1(v68) ^ 0xC9u));
  LODWORD(v127) = HIDWORD(v127);
  LODWORD(v127) = (v127 >> 17) ^ __ROR4__(*(_DWORD *)(v89 + 4 * (BYTE3(v29) ^ 0x24)) ^ *(_DWORD *)(v64+ 4 * (BYTE2(v71) ^ 0xEu)), 17) ^ 0xA7338782;
  HIDWORD(v127) = v127;
  v128 = (v127 >> 15) - ((2 * (v127 >> 15)) & 0x1BE6BC32);
  LODWORD(STACK[0x6910]) = LODWORD(STACK[0x6AC0]) < LODWORD(STACK[0x6730]);
  if ((v124 & 1) != 0)
    v129 = (v124 ^ 0xF9) + 1;
  else
    v129 = (v124 ^ 0xF9) - 1;
  v130 = *(_DWORD *)(v72 + 4 * (v125 ^ 0xB62u));
  v131 = v128 - 1913430503;
  v132 = (v131 & 0xF9D6B658 ^ 0xB8C2B618) & (v130 ^ 0x3842A250);
  v133 = (v131 ^ 0x47144942) & (v130 ^ 0xA0594926) ^ v131 & 0x2556206E;
  v134 = (v133 & 0xD687B96D ^ 0xD6879969) + (v133 & 0x29784692 ^ 0x400003) - 1;
  v135 = ((v134 & 0xF9D6B658 ^ 0xC0C41200)
        + (v134 & 0x51120618 ^ 0x11324CBB)
        - ((v134 & 0xF9D6B658 ^ 0xC0C41200) & 0x51120618)) ^ 0x79DB6AE9;
  v136 = (((2 * ((v131 ^ v130) & 0x62949A7 ^ 0x2014883)) | 0xBEB4E880)
        - ((v131 ^ v130) & 0x62949A7 ^ 0x2014883)
        - 1599763520) ^ 0x4FD63C08;
  v137 = ((v136 | 0xB24A6B45) - (v136 | 0x4DB594BA) + 1303745722) & 0xBCF807A2 ^ 0x2FD8303A ^ (v131 & 0x40923440 ^ v132 ^ 0xB9DC72CE ^ (-980464617 - v135 + ((2 * v135) | 0x74E15D22) + 1368)) & (((v136 | 0xB24A6B45) - (v136 | 0x4DB594BA) + 1303745722) ^ 0x5D319473);
  STACK[0xD500] = v89;
  v138 = 4 * (HIBYTE(v118) ^ 0x6F);
  v139 = (_DWORD *)(v89 + v138);
  v140 = 4 * (HIBYTE(v124) ^ 0x53);
  v141 = &v139[(unint64_t)v140 / 4 + v138 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD4F0] = v67;
  v142 = &v141[v140 / 0xFFFFFFFFFFFFFFFCLL];
  v143 = *v141 ^ *(_DWORD *)(v64 + 4 * (BYTE2(v118) ^ 0xE7u)) ^ *(_DWORD *)(v72
                                                                            + 4
                                                                            * (((v126 & 0xF4 ^ 0x7800065)
                                                                              - (v126 & 0xB)
                                                                              - 1476039414) ^ LODWORD(STACK[0xCB0]))) ^ *(_DWORD *)(v67 + 4 * BYTE1(v137));
  v144 = *(_DWORD *)(v72 + 4 * (v129 ^ 1u)) ^ *v139 ^ *(_DWORD *)(v67 + 4 * (BYTE1(v126) ^ 0x60u)) ^ *(_DWORD *)(v64 + 4 * BYTE2(v137));
  LODWORD(v139) = ((BYTE1(v124) ^ 0x9BA1806B)
                 + ((v124 >> 8) & 0x17 ^ LODWORD(STACK[0xCB4]))
                 - ((BYTE1(v124) ^ 0x9BA1806B) & 0x8A800017)) ^ 0x4A2CFF47;
  v145 = v142[BYTE3(v126) ^ 0x7F] ^ *(_DWORD *)(v64 + 4 * (BYTE2(v124) ^ 0xD2u)) ^ *(_DWORD *)(v72
                                                                                               + 4
                                                                                               * v137) ^ *(_DWORD *)(v67 + 4 * (BYTE1(v118) ^ 0x93u));
  v146 = ((v145 & 0x10480406 ^ 0x388A866F) + (v145 & 0x1315880 ^ 0x1305001) - 2) ^ 0x1ED8E76A;
  v147 = *(_DWORD *)(v64 + 4 * ((v126 ^ 0x7FF06060uLL) >> (v58 & 0x10) >> (v58 & 0x10 ^ 0x10u))) ^ v142[HIBYTE(v137)] ^ *(_DWORD *)(v72 + 4 * (((v118 & 1) + (v118 & 0xFE ^ 0x3F) + 511) ^ 0x268)) ^ *(_DWORD *)(v67 + 4 * ((((2 * (_DWORD)v139) | 0xBFD333DC) - v139 - 1609144814) ^ 0x4FE8FA0));
  v148 = (v145 ^ 0x51946CF2)
       + ((2 * (((2 * v146) & 0x2CA07A3C) - v146) - 1034452672) ^ 0x73BE3CBF)
       + ((2 * (((2 * v146) & 0x2CA07A3C) - v146) - 1034452672) ^ 0x8C41C340);
  v149 = (v143 ^ 0xEFD23BBC) - ((2 * (v143 ^ 0xEFD23BBC)) & 0x5F2002B6) + 1066762587;
  v150 = v148 + 1;
  v151 = (_DWORD *)(v67
                  + 4
                  * ((((2 * (BYTE1(v147) ^ 0x208514AB)) & 0x1080980) - (BYTE1(v147) ^ 0x208514AB) + 1999231807) ^ 0x57ACCF3Fu));
  v152 = v142[HIBYTE(v144) ^ 0x97] ^ *(_DWORD *)(v64
                                               + 4
                                               * ((268629784
                                                 - (BYTE2(v147) ^ 0xFC)
                                                 + ((2 * (BYTE2(v147) ^ 0xFC)) | 0xDFFA11D0)) ^ 0xEFFD08F3)) ^ *(_DWORD *)(v72 + 4 * (((v149 & 0x5000032B ^ 0x3D044B01) + (v149 & 0x800000D4 ^ 0x26A3045) - 1) ^ 0xEF6E7966)) ^ *(_DWORD *)(v67 + 4 * BYTE1(v150));
  v153 = 4 * (BYTE1(v144) ^ 0xBFu);
  v154 = (_DWORD *)(v72 + 4 * (((v147 & 0xFE ^ 0x48430DDB) - (v147 & 1)) ^ 0x48430D5C));
  v155 = *(_DWORD *)(v64 + 4 * (BYTE2(v144) ^ 5u)) ^ v142[HIBYTE(v143) ^ 0x41];
  v156 = 4 * HIBYTE(v150);
  v157 = &v142[(unint64_t)v156 / 4];
  v158 = v142[(unint64_t)v156 / 4] ^ *(_DWORD *)(v64 + 4 * (BYTE2(v143) ^ 0x83u));
  v159 = (((-2045828291 - (v158 & 8 | 0x140A0093)) ^ 0x574E1DDD) + 279789765) ^ (((-2045828291 - (v158 & 8 | 0x140A0093)) ^ 0xFA0B9EE0)
                                                                               - 1108818950) ^ (((-2045828291
                                                                                                - (v158 & 8 | 0x140A0093)) ^ 0xDF40A197)
                                                                                              - 1734083441);
  v160 = v159 - 222746159;
  v161 = (v160 ^ 0x974C4573) & (2 * (v160 & 0xD760567B)) ^ v160 & 0xD760567B;
  v162 = ((2 * (v160 ^ 0x310CE125)) ^ 0xCCD96EBC) & (v160 ^ 0x310CE125) ^ (2 * (v160 ^ 0x310CE125)) & 0x666CB75E;
  v163 = (v162 ^ 0xC400221C) & (4 * v161) ^ v161;
  v164 = ((4 * (v162 ^ 0x22249142)) ^ 0x99B2DD78) & (v162 ^ 0x22249142) ^ (4 * (v162 ^ 0x22249142)) & 0x666CB75C;
  v165 = (v164 ^ LODWORD(STACK[0xCBC])) & (16 * v163) ^ v163;
  v166 = ((16 * (v164 ^ 0x664C2206)) ^ LODWORD(STACK[0xCB8])) & (v164 ^ 0x664C2206) ^ (16 * (v164 ^ 0x664C2206)) & 0xE66CB750;
  v167 = v165 ^ 0xE66CB75E ^ (v166 ^ 0x66483500) & (v165 << 8);
  v168 = (v167 << 16) & 0x666C0000 ^ v167 ^ ((v167 << 16) ^ 0x375E0000) & (((v166 ^ 0x8024821E) << 8) & 0x666C0000 ^ 0x2480000 ^ (((v166 ^ 0x8024821E) << 8) ^ 0x6CB70000) & (v166 ^ 0x8024821E));
  STACK[0xD500] = (unint64_t)&v142[(unint64_t)v156 / 4];
  STACK[0xD4F0] = v67 + v153;
  STACK[0xD520] = (unint64_t)v154;
  v169 = *(_DWORD *)(v67 + v153);
  v170 = 1585850681 - v159;
  if (((v160 ^ (2 * v168) ^ LODWORD(STACK[0xCC0])) & (v169 ^ 0xF4D76B1C) ^ (v160 ^ (2 * v168)) & 0x5E914889) == 0x56010881)
    v170 = v159 - 222746159;
  v171 = (((v169 ^ 0x23306D91) - 590376337) ^ ((v169 ^ 0x4E718C63) - 1316064355) ^ ((v169 ^ 0xC707C267) + 955792793))
       - 1928253243
       + v170;
  v172 = 4 * (HIBYTE(v147) ^ 0xB3);
  v173 = &v157[(unint64_t)v172 / 4 + v156 / 0xFFFFFFFFFFFFFFFCLL];
  v174 = ((2 * (v171 ^ 0x1452BC18)) ^ 0xC18FEAA6) & (v171 ^ 0x1452BC18) ^ (2 * (v171 ^ 0x1452BC18)) & 0xE0C7F552;
  v175 = 2 * (v171 & 0xF495494B);
  v176 = v174 ^ 0x20401551;
  v177 = (v174 ^ 0xC0876000) & (4 * (v175 & (v171 ^ 0xF4502C0A) ^ v171 & 0xF495494B)) ^ v175 & (v171 ^ 0xF4502C0A) ^ v171 & 0xF495494B;
  v178 = ((4 * v176) ^ 0x831FD54C) & v176 ^ (4 * v176) & 0xE0C7F550;
  v179 = (v178 ^ 0x8007D540) & (16 * v177) ^ v177;
  v180 = ((16 * (v178 ^ 0x60C02013)) ^ 0xC7F5530) & (v178 ^ 0x60C02013) ^ (16 * (v178 ^ 0x60C02013)) & 0xE0C7F550;
  v181 = v179 ^ 0xE0C7F553 ^ (v180 ^ 0x475543) & (v179 << 8);
  v182 = v171 ^ (2
               * ((v181 << 16) & 0x830000 ^ v181 ^ ((v181 << 16) ^ 0x75530000) & (((v180 ^ 0xE080A043) << 8) & 0x60C70000 ^ 0x20020000 ^ (((v180 ^ 0xE080A043) << 8) ^ 0xC7F50000) & (v180 ^ 0xE080A043))));
  v183 = (((2 * (v158 & 0x1B17BAB2 ^ 0x13110030)) | 0xB5805286) - (v158 & 0x1B17BAB2 ^ 0x13110030) - 1522542915) ^ 0x5AE22D60;
  v184 = ((v182 & 0x11048230 ^ 0x41C8C515) + (v182 & 0xA13388A) - 1) ^ (v183 - ((2 * v183) & 0x7D4EFE04) - 1096319230);
  v185 = v155 ^ *(_DWORD *)(v72 + 4 * v150) ^ *v151;
  v186 = (v184 ^ 0x12A66340) & ((1516708732
                               - (v158 & 0xE4E84545 ^ 0x8042054C)
                               + ((2 * (v158 & 0xE4E84545 ^ 0x8042054C)) & 0x49108802)) ^ 0xA678A586) ^ v184 & 0x3EA790D;
  v187 = v175 & (v171 ^ 0xE4416802) ^ v171 & 0xF495494B;
  v188 = ((2 * (v171 ^ 0xD61FA14)) ^ 0xF3E966BE) & (v171 ^ 0xD61FA14) ^ (2 * (v171 ^ 0xD61FA14)) & 0xF9F4B35E;
  v189 = (v188 ^ 0xF0E0221C) & (4 * v187) ^ v187;
  v190 = ((4 * (v188 ^ LODWORD(STACK[0xCC4]))) ^ 0xE7D2CD7C) & (v188 ^ LODWORD(STACK[0xCC4])) ^ (4
                                                                                               * (v188 ^ LODWORD(STACK[0xCC4]))) & 0xF9F4B35C;
  v191 = (v190 ^ 0xE1D08150) & (16 * v189) ^ v189;
  v192 = ((16 * (v190 ^ 0x18243203)) ^ 0x9F4B35F0) & (v190 ^ 0x18243203) ^ (16 * (v190 ^ 0x18243203)) & 0xF9F4B350;
  v193 = v191 ^ 0xF9F4B35F ^ (v192 ^ 0x99403100) & (v191 << 8);
  v194 = (v171 ^ (2
                * ((v193 << 16) & 0x70740000 ^ v193 ^ ((v193 << 16) ^ 0x335F0000) & (((v192 ^ 0x60B4820F) << 8) & STACK[0xCC8] ^ 0x9440000 ^ (((v192 ^ 0x60B4820F) << 8) ^ 0x74B30000) & (v192 ^ 0x60B4820F))))) & 0xE4E84545 ^ 0xC44E42C5;
  v195 = (((2 * v194) | 0xCDF470B6) - v194 - 1727674459) ^ *v154 ^ ((v186 & 0x99A61984 ^ 0x99841181)
                                                                  + (v186 & 0x6659E67B)
                                                                  - 1);
  v196 = (((2 * (v144 ^ 0xA2)) | 0xA155DC30) - (v144 ^ 0xA2) + 794104296) ^ 0xD0BAAC7C;
  v197 = *(_DWORD *)(v67 + 4 * (BYTE1(v143) ^ 0x9Fu)) ^ *v173 ^ *(_DWORD *)(v64 + 4 * BYTE2(v150)) ^ *(_DWORD *)(v72 + 4 * ((458151478 - v196 + ((2 * v196) & 0x496241CA) + 2276) ^ 0x1B5E9D9B));
  v198 = (v185 & 4 ^ 0xD504) - (v185 & 4) + (v185 ^ 0xE9);
  v199 = (_DWORD *)(v72 + 4 * (((v198 & 0x310 ^ LODWORD(STACK[0xCD0])) + (v198 & 0xEF) - 1) ^ 0x3781230Au));
  v200 = 4 * (HIBYTE(v152) ^ 0xCE);
  v201 = (_DWORD *)((char *)&v173[v172 / 0xFFFFFFFFFFFFFFFCLL] + v200);
  v202 = v197 ^ 0x6FA749D2u;
  v203 = *(_DWORD *)(v64 + 4 * (BYTE2(v202) ^ 0x39)) ^ *v201;
  v204 = v195 ^ LODWORD(STACK[0xCCC]);
  v205 = 4
       * ((-1862979799
         - ((v195 ^ LOBYTE(STACK[0xCCC])) ^ 0x10030024 | 0x90F52F29)
         + ((v195 ^ LOBYTE(STACK[0xCCC])) ^ 0x10030024 | 0x6F0AD0D6)) ^ 0x7F09D0DE);
  v206 = (_DWORD *)(v72 + v205);
  v207 = 4 * (HIBYTE(v185) ^ 0x96);
  v208 = (_DWORD *)((char *)&v201[(unint64_t)v207 / 4] - v200);
  STACK[0xD4F0] = v67;
  v209 = 4 * (BYTE1(v197) ^ 0xF7u);
  STACK[0xD4F0] = v67 + v209;
  v210 = *(_DWORD *)(v64 + 4 * (BYTE2(v152) ^ 0xA4u));
  LODWORD(v201) = (((v210 ^ 0xF546CEEC) + 179908884) ^ ((v210 ^ 0x7E105A5) - 132187557) ^ ((v210 ^ 0x99F89543)
                                                                                         + 1711762109))
                - (((*v208 ^ v210 ^ 0xD88A7CA4) + 662012764) ^ ((*v208 ^ v210 ^ 0xEA3F9D6D) + 364929683) ^ ((*v208 ^ v210 ^ 0xA2EE649F) + 1561434977))
                + 678080137;
  v211 = ((2 * (v201 & 0xB2992A2B)) & 0x5044 | v201 & 0xB2992A2B) ^ (2
                                                                                               * (v201 & 0xB2992A2B)) & (v201 ^ 0x3094F2EF);
  v212 = ((2 * (v201 ^ 0x3094F2EF)) ^ 0x41BB188) & (v201 ^ 0x3094F2EF) ^ (2 * (v201 ^ 0x3094F2EF)) & 0x820DD8C4;
  v213 = (v212 ^ 0x99080) & (4 * v211) ^ v211;
  v214 = ((4 * (v212 ^ LODWORD(STACK[0xCD4]))) ^ 0x8376310) & (v212 ^ LODWORD(STACK[0xCD4])) ^ (4
                                                                                              * (v212 ^ LODWORD(STACK[0xCD4]))) & 0x820DD8C4;
  v215 = (v214 ^ 0x54004) & (16 * v213) ^ v213;
  v216 = ((16 * (v214 ^ 0x820898C4)) ^ 0x20DD8C40) & (v214 ^ 0x820898C4) ^ (16 * (v214 ^ 0x820898C4)) & 0x820DD8C0;
  v217 = v215 ^ 0x820DD8C4 ^ (v216 ^ LODWORD(STACK[0xCD8])) & (v215 << 8);
  v218 = 1562132040
       - (((*v208 ^ 0x8E734244) + 1905049020) ^ ((*v208 ^ 0xD85A9B7D) + 665150595) ^ ((*v208 ^ LODWORD(STACK[0xCDC]))
                                                                                    + 1389559195));
  v219 = (v218 ^ 0x79EC41F) & (2 * (v218 & STACK[0xCEC])) ^ v218 & STACK[0xCEC];
  v220 = ((2 * (v218 ^ LODWORD(STACK[0xCE0]))) ^ 0xC9A3DCC6) & (v218 ^ LODWORD(STACK[0xCE0])) ^ (2
                                                                                               * (v218 ^ LODWORD(STACK[0xCE0]))) & 0xE4D1EE62;
  v221 = (v220 ^ 0x80818841) & (4 * v219) ^ v219;
  v222 = ((4 * (v220 ^ 0x24502221)) ^ 0x9347B98C) & (v220 ^ 0x24502221) ^ (4 * (v220 ^ 0x24502221)) & 0xE4D1EE60;
  v223 = (v222 ^ 0x8041A803) & (16 * v221) ^ v221;
  v224 = ((16 * (v222 ^ 0x64904663)) ^ 0x4D1EE630) & (v222 ^ 0x64904663) ^ (16 * (v222 ^ 0x64904663)) & 0xE4D1EE60;
  v225 = v223 ^ 0xE4D1EE63 ^ (v224 ^ 0x4410E643) & (v223 << 8);
  LODWORD(v200) = v218 ^ *v208 ^ v201 ^ (2
                                                     * ((v225 << 16) & 0x64D10000 ^ v225 ^ v217 ^ ((v225 << 16) ^ 0x6E630000) & (((v224 ^ LODWORD(STACK[0xCE4])) << 8) & 0xE4D10000 ^ 0x24110000 ^ (((v224 ^ LODWORD(STACK[0xCE4])) << 8) ^ 0xD1EE0000) & (v224 ^ LODWORD(STACK[0xCE4]))) ^ (v217 << 16) & 0x20D0000 ^ ((v217 << 16) ^ 0x58C40000) & (((v216 ^ 0x82005084) << 8) & 0x820D0000 ^ 0x2050000 ^ (((v216 ^ 0x82005084) << 8) ^ 0xDD80000) & (v216 ^ 0x82005084))));
  STACK[0xD500] = (unint64_t)v208;
  v226 = (unint64_t)&v208[v207 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v200) = (((v210 ^ 0x4F0223CF) - 1325540303) ^ ((v210 ^ 0xF98E36F9) + 108120327) ^ ((v210 ^ 0xDDD34B3C)
                                                                                           + 573355204))
                - 1772355584
                + (((v200 ^ 0x8B87FF0C) - 1737454896) ^ ((v200 ^ LODWORD(STACK[0xCE8])) - 1571218219) ^ ((v200 ^ 0xD158EC7E) - 1028679234))
                + 3971;
  LODWORD(v201) = (v200 ^ 0x9C79BEC3) & (2 * (v200 & 0xDC7D3EE0)) ^ v200 & 0xDC7D3EE0;
  v227 = ((2 * (v200 ^ 0xCB9CFC3)) ^ 0xA189E246) & (v200 ^ 0xCB9CFC3) ^ (2 * (v200 ^ 0xCB9CFC3)) & 0xD0C4F122;
  LODWORD(v201) = (v227 ^ LODWORD(STACK[0xCF0])) & (4 * (_DWORD)v201) ^ v201;
  v228 = ((4 * (v227 ^ 0x50441121)) ^ 0x4313C48C) & (v227 ^ 0x50441121) ^ (4 * (v227 ^ 0x50441121)) & 0xD0C4F120;
  LODWORD(v201) = (v228 ^ 0x4000C003) & (16 * (_DWORD)v201) ^ v201;
  v229 = ((16 * (v228 ^ 0x90C43123)) ^ 0xC4F1230) & (v228 ^ 0x90C43123) ^ (16 * (v228 ^ 0x90C43123)) & 0xD0C4F120;
  LODWORD(v201) = v201 ^ 0xD0C4F123 ^ (v229 ^ 0x441003) & ((_DWORD)v201 << 8);
  v230 = v203 ^ *v199 ^ *(_DWORD *)(v67 + 4 * (BYTE1(v204) ^ 0xB5u));
  LODWORD(v199) = *(_DWORD *)(v67 + v209) ^ v200 ^ *v206 ^ (2
                                                          * (((_DWORD)v201 << 16) & 0x50C40000 ^ v201 ^ (((_DWORD)v201 << 16) ^ 0x71230000) & (((v229 ^ 0xD080E103) << 8) & 0x50C40000 ^ 0x10040000 ^ (((v229 ^ 0xD080E103) << 8) ^ 0x44F10000) & (v229 ^ 0xD080E103))));
  LODWORD(v200) = (1491384553 - (v197 ^ 0x70 | 0x58E4B8E9) + (v197 ^ 0x70 | 0xA71B4716)) ^ 0xEFFB8667;
  STACK[0xD520] = (unint64_t)v206;
  v231 = 4 * ((((2 * (_DWORD)v200) & 0xDC0987E4) - (_DWORD)v200 - 1845806067) ^ 0xD91BFD0D);
  v232 = (_DWORD *)((char *)v206 + v231 - v205);
  v233 = (v202 >> 24) ^ 0xCD;
  STACK[0x68D0] = v233;
  v234 = *(_DWORD *)(v67 + 4 * (BYTE1(v185) ^ 0x10u)) ^ *(_DWORD *)(v226 + 4 * v233) ^ *(_DWORD *)(v64 + 4 * BYTE2(v204));
  LODWORD(v233) = (((2 * v234) & 0xC04082 ^ 0x10A752C1) + ((2 * v234) & 0xE4082804 ^ 0x24082801) - 2) & 0xE4C869FE;
  LODWORD(v233) = (((v234 ^ 0xB593DAFF) + 1248601345) ^ ((v234 ^ 0x2179861A) - 561612314) ^ ((v234 ^ 0xAEF7FA26)
                                                                                           + 1359480282))
                - (((v233 ^ 0xC36F8DE1) + 456931880) ^ ((v233 ^ 0x50A34383) - 1997474746) ^ ((v233 ^ 0xD34CEE24)
                                                                                           + 186604003))
                - 163611460;
  v235 = (v233 ^ 0xCFC5F5C3) & (2 * (v233 & 0xCF15F5CB)) ^ v233 & 0xCF15F5CB;
  v236 = ((2 * (v233 ^ 0xCDEF5643)) ^ 0x5F54710) & (v233 ^ 0xCDEF5643) ^ (2 * (v233 ^ 0xCDEF5643)) & 0x2FAA388;
  v237 = (v236 ^ 0xF00300) & (4 * v235) ^ v235;
  v238 = ((4 * (v236 ^ 0x20AA088)) ^ LODWORD(STACK[0xCF4])) & (v236 ^ 0x20AA088) ^ (4 * (v236 ^ 0x20AA088)) & 0x2FAA388;
  v239 = (v238 ^ 0x2EA8200) & (16 * v237) ^ v237;
  v240 = ((16 * (v238 ^ 0x102188)) ^ 0x2FAA3880) & (v238 ^ 0x102188) ^ (16 * (v238 ^ 0x102188)) & 0x2FAA380;
  v241 = v239 ^ 0x2FAA388 ^ (v240 ^ 0x2AA2008) & (v239 << 8);
  v242 = ((v241 << 16) ^ 0x23880000) & (((v240 ^ 0x508308) << 8) & 0x2FA0000 ^ 0x580000 ^ (((v240 ^ 0x508308) << 8) ^ 0x7AA30000) & (v240 ^ 0x508308));
  LODWORD(v205) = (v241 << 16) & 0x2FA0000 ^ v241;
  v243 = (char *)v232 - v231;
  LODWORD(v233) = v233 ^ *(_DWORD *)((char *)&v232[(((2 * (v152 ^ 0x6E)) | 0x1C0FFB4A)
                                                  - (v152 ^ 0x6E)
                                                  - 235404709) ^ 0xE07FD45]
                                   - v231) ^ (2 * (v205 ^ v242));
  LODWORD(v232) = *(_DWORD *)(v226 + 4 * (HIBYTE(v195) ^ 0xC8)) ^ *(_DWORD *)(v67 + 4 * (BYTE1(v152) ^ 0x40u)) ^ *(_DWORD *)(v64 + 4 * (BYTE2(v185) ^ 0x6Bu)) ^ *v232;
  v244 = *(_DWORD *)(v226 + 4 * (HIBYTE(v230) ^ 0xF6)) ^ *(_DWORD *)(v67 + 4 * (BYTE1(v232) ^ 0xE3u)) ^ *(_DWORD *)(v64 + 4 * BYTE2(v233));
  v245 = -1323403769
       - (v232 ^ 0x96000075 | 0xB11E7607)
       + (v232 ^ 0x96000075 | LODWORD(STACK[0xCF8]));
  STACK[0xD500] = v226;
  v246 = 4 * ((v232 >> 24) ^ 0x86);
  STACK[0xD500] = v226 + v246;
  HIDWORD(v248) = v244;
  LODWORD(v248) = v244;
  v247 = v248 >> 12;
  LODWORD(v248) = __ROR4__(*(_DWORD *)&v243[4* ((((2 * (v199 ^ 0x3F)) | 0xE00853D2)- (v199 ^ 0x3F)- 1879321065) ^ 0x7004292B)], 12);
  LODWORD(v231) = *(_DWORD *)(v64 + 4 * (BYTE2(v230) ^ 0x33u)) ^ *(_DWORD *)(v226
                                                                             + 4 * ((v199 >> 24) ^ 0x55)) ^ *(_DWORD *)(v67 + 4 * ((((2 * (BYTE1(v233) ^ 0x95)) | 0xF606A0FA) - (BYTE1(v233) ^ 0x95) + 83668867) ^ 0xFB0350CC));
  v249 = *(_DWORD *)&v243[4 * (v245 ^ 0xD8E1894C)];
  HIDWORD(v248) = v247 ^ v248 ^ 0xB2E19;
  LODWORD(v248) = v247 ^ v248 ^ 0xD7500000;
  LODWORD(v201) = (v249 ^ 0x7AF096B7) & (v231 ^ 0x1D1AD4B1) ^ v249 & 0x27077272;
  v250 = (v233 ^ 0x82) - ((2 * (v233 ^ 0x82)) & 0x158) - 1662046548;
  v251 = (v250 & 0x98280CD9 ^ 0x43005099) + (v250 ^ 0x987E0D42) - ((v250 ^ 0x987E0D42) & 0x40120D9);
  v252 = &v243[4 * (v251 ^ 0xDBB85FD9)];
  v253 = ((v251 ^ LODWORD(STACK[0xCFC]) ^ 0x3FD16E173578BAC4) - 0x7FD16E173578BAC4) ^ ((v251 ^ LODWORD(STACK[0xCFC]) ^ 0x88286FA6217CE91)
                                                                                         - 0x88286FA6217CE91) ^ ((v251 ^ LODWORD(STACK[0xCFC]) ^ 0x3753E8EDED2B77BCLL) - 0x7753E8EDED2B77BCLL);
  v254 = 4
       * (((v230 | 0x480C800) + (v230 & 0xF9 ^ 0x581114F9) - (v230 & 0xF9 | 0x8000)) ^ 0x5C915CD9);
  v255 = &v252[4 * (-3125019625 - v253) + v254];
  LODWORD(v246) = __ROR4__(*(_DWORD *)(v64 + 4 * (BYTE2(v199) ^ 0x8Du)) ^ *(_DWORD *)(v226 + v246), 14) ^ 0x5E6684C4;
  STACK[0xD4F0] = v67;
  v256 = v246 ^ __ROR4__(*(_DWORD *)(v67 + 4 * (BYTE1(v230) ^ 0xCEu)), 14);
  LODWORD(v209) = (((2 * (_DWORD)v201) ^ 0xB6E34318) + 687012159) ^ (((2 * (_DWORD)v201) ^ 0x23D35200) - 1111300057) ^ (((2 * (_DWORD)v201) ^ LODWORD(STACK[0xD00])) + 1327599451);
  v257 = (_DWORD *)(v67 + 4 * (BYTE1(v199) ^ 0x39u));
  LODWORD(v233) = BYTE3(v233);
  v258 = (_DWORD *)(v226 + 4 * (v233 ^ 0xB5));
  LODWORD(v199) = (((v249 ^ 0x2368031A) - 594019098) ^ ((v249 ^ 0x2ABF7AFC) - 717191932) ^ ((v249 ^ 0x7327EF51)
                                                                                          - 1931997009))
                - 1524960973
                + (((v231 ^ 0xC6A8EF04) + 962007292) ^ ((v231 ^ 0xEB87C7F) - 246971519) ^ ((v231 ^ 0xF20D35B8)
                                                                                         + 234015304))
                - v209
                + 529;
  v259 = (v199 ^ 0xC286C074) & (2 * (v199 & 0xEA04E879)) ^ v199 & 0xEA04E879;
  LODWORD(v246) = ((2 * (v199 ^ 0x928710C6)) ^ 0xF107F17E) & (v199 ^ 0x928710C6) ^ (2 * (v199 ^ 0x928710C6)) & 0x7883F8BE;
  v260 = (v246 ^ 0x7083E82C) & (4 * v259) ^ v259;
  LODWORD(v246) = ((4 * (v246 ^ 0x8800881)) ^ 0xE20FE2FC) & (v246 ^ 0x8800881) ^ (4 * (v246 ^ 0x8800881)) & 0x7883F8BC;
  v261 = (v246 ^ LODWORD(STACK[0xD04])) & (16 * v260) ^ v260;
  LODWORD(v246) = ((16 * (v246 ^ 0x18801803)) ^ 0x883F8BF0) & (v246 ^ 0x18801803) ^ (16 * (v246 ^ 0x18801803)) & 0x7883F8B0;
  v262 = v261 ^ 0x7883F8BF ^ (v246 ^ 0x8038800) & (v261 << 8);
  v263 = v199 ^ (2
                             * ((v262 << 16) & 0x78830000 ^ v262 ^ ((v262 << 16) ^ 0x78BF0000) & (((v246 ^ 0x7080700F) << 8) & 0x78830000 ^ 0x78030000 ^ (((v246 ^ 0x7080700F) << 8) ^ 0x83F80000) & (v246 ^ 0x7080700F))));
  LODWORD(v199) = *(_DWORD *)(v64
                            + 4
                            * (((BYTE2(v232) ^ 0xC090246C) - 796861264 - ((2 * (BYTE2(v232) ^ 0xC090246C)) & 0x81000960)) ^ 0x1010F8A0)) ^ *v257;
  v264 = &v258[-1656941933
             - (((v233 ^ 0x12FA5D804FA96A35) - 0x52FA5D802D6B87EDLL) ^ ((v233 ^ 0x922688A987B3AA2)
                                                                                      - 0x922688AFAB9D77ALL) ^ ((v233 ^ 0x1BD8350AD7D25022) - 0x5BD8350AB510BDFALL))];
  LODWORD(v258) = *v258 ^ v199;
  LODWORD(v233) = ((v258 & 0x194A0050 ^ 0x120808C3)
                 + (v258 & 0xE4A5672C ^ LODWORD(STACK[0xD08]))
                 - 2) ^ 0x3FC986D7;
  v265 = *(_DWORD *)v252 ^ __ROR4__(v256, 18);
  LODWORD(v252) = ((v258 & STACK[0xD0C] ^ 0x2001801)
                 + (v258 & 0x2108802 ^ 0x7C30C12E)
                 - ((v258 & STACK[0xD0C] ^ 0x2001801) & 0x2108802)) ^ 0x7E708FB8;
  STACK[0xD4F0] = (unint64_t)v257;
  v266 = ((v233 | 0x377FDB75) - (v233 | 0xC880248A) - 931126134) & 0x1E25E1E7 ^ ((((2 * (_DWORD)v252) | 0xF225B8B4)
                                                                                - (_DWORD)v252
                                                                                - 2031279194) ^ 0x98981C56) & (((v233 | 0x377FDB75) - (v233 | 0xC880248A) - 931126134) ^ 0xD9E8CCFB) ^ *(_DWORD *)v255;
  LODWORD(v252) = ((BYTE1(v265) ^ 0x13) - 1713371058 - ((2 * (BYTE1(v265) ^ 0x13)) & 0x136) + 77) ^ 0xB87048AE;
  STACK[0xD520] = (unint64_t)v255;
  v267 = (v248 >> 20) ^ 0xCE7E56DF;
  v268 = 4 * HIBYTE(v267);
  v269 = &v264[(unint64_t)v268 / 4];
  v270 = 4 * ((-1812270101 - (_DWORD)v252 + ((2 * (_DWORD)v252) & 0x400017A8) + 64) ^ 0xB26AB4A9);
  STACK[0x6810] = v270;
  v271 = 4
       * ((((2 * (BYTE2(v266) ^ 0xC22234DC)) | 0x7FA96880) - (BYTE2(v266) ^ 0xC22234DC) - 1070904384) ^ LODWORD(STACK[0xD14]));
  STACK[0x6830] = v271;
  v272 = 4
       * ((378814609 - (v263 ^ 0x4E) + ((2 * (v263 ^ 0x4E)) & 0x14) + 100) ^ 0x16944091u);
  v273 = &v255[v272 - v254];
  v274 = *(_DWORD *)(v64 + v271) ^ *v269 ^ *(_DWORD *)(v67 + v270) ^ *(_DWORD *)v273;
  v275 = 4 * BYTE2(v267);
  STACK[0x6820] = v275;
  v276 = 4 * ((-1221168738 - (BYTE1(v266) ^ 0xFB | 0xB736719E) + (BYTE1(v266) ^ 0xFB | 0x48C98E61)) ^ 0x48C98ED4);
  v277 = v67 + v276;
  STACK[0x67E0] = v276;
  v278 = 4 * (HIBYTE(v263) ^ 4);
  v279 = &v269[(unint64_t)v278 / 4 + v268 / 0xFFFFFFFFFFFFFFFCLL];
  v280 = 4
       * ((-1554699863 - (v265 ^ 0x3D | 0xA35529A9) + (v265 ^ 0x3D | 0x5CAAD656)) ^ 0x5CAAD64A);
  v281 = &v273[v280 - v272];
  v282 = *(_DWORD *)(v67 + v276) ^ *(_DWORD *)(v64 + v275) ^ *v279 ^ *(_DWORD *)v281;
  LODWORD(v258) = (HIWORD(v265) & 0xE5 ^ 0x62FD3C44) + (HIWORD(v265) & 0x1A ^ 0xB) - 1;
  v283 = 4 * BYTE1(v267);
  v284 = 4 * (BYTE2(v263) ^ 0x14u);
  STACK[0x67F0] = v284;
  v285 = v277
       + v283
       - 4 * ((-1221168738 - (BYTE1(v266) ^ 0xFB | 0xB736719E) + (BYTE1(v266) ^ 0xFB | 0x48C98E61)) ^ 0x48C98ED4);
  v286 = 4 * (HIBYTE(v265) ^ 0x7F);
  v287 = &v279[(unint64_t)v286 / 4 + v278 / 0xFFFFFFFFFFFFFFFCLL];
  v288 = 4
       * ((-1474630876 - (v266 ^ 0x16A51CDC) + ((2 * (v266 ^ 0x16A51CDC)) | 0xAFCA29B8)) ^ LODWORD(STACK[0xD10]));
  v289 = &v281[v288 - v280];
  v290 = *v287 ^ *(_DWORD *)(v64 + v284) ^ *(_DWORD *)v285 ^ *(_DWORD *)v289;
  v291 = v285 - v283;
  v292 = 4
       * (((v258 & 0xC50877 ^ 0x1020012)
         + (v258 ^ 0x70FD0CED)
         - ((v258 ^ 0x70FD0CED) & 0x12000877)) ^ 0x1C73856);
  STACK[0x68B0] = v292;
  v293 = 4 * (BYTE1(v263) ^ 0xB7u);
  STACK[0x6800] = v293;
  v294 = 4 * (HIBYTE(v266) ^ 0xA9);
  v295 = &v287[(unint64_t)v294 / 4 + v286 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v285) = *(_DWORD *)(v64 + v292) ^ *(_DWORD *)(v285 - v283 + v293) ^ *v295;
  LODWORD(STACK[0x68C0]) = (BYTE1(v282) ^ 0xFFFFFFDF) - 1401114224 + ((2 * BYTE1(v282)) | 0xA7069CE2);
  v296 = &v289[-v288];
  v297 = 4 * ((v248 >> 20) ^ 0xDFu);
  STACK[0x67D0] = v297;
  v298 = v285 ^ *(_DWORD *)&v289[v297 - v288];
  LODWORD(v289) = ((BYTE2(v298) ^ 0x8D) + (HIWORD(v298) & 0xD4 ^ 0x2B335150) - ((BYTE2(v298) ^ 0x8D) & 0xD4)) ^ 0x3BBF7DDD;
  LODWORD(v285) = (_DWORD)v289 - (STACK[0xD18] & (2 * (_DWORD)v289));
  v299 = 4
       * ((921583944 - (v282 ^ 0x440800AD) + ((2 * (v282 ^ 0x440800AD)) | 0x92237D70)) ^ 0x8D19BE92);
  STACK[0xD520] = (unint64_t)&v296[v299];
  v300 = 4 * (HIBYTE(v274) ^ 0xD2);
  v301 = (_DWORD *)((char *)&v295[v294 / 0xFFFFFFFFFFFFFFFCLL] + v300);
  v302 = 4 * (HIBYTE(v282) ^ 0x92);
  v303 = (_DWORD *)((char *)&v301[(unint64_t)v302 / 4] - v300);
  v304 = 4 * ((v290 ^ 0x30A21D95) >> (BYTE1(v282) & 8) >> (BYTE1(v282) & 8 ^ 8));
  v305 = *(_DWORD *)(v64 + 4 * (((_DWORD)v285 + 1095210607) ^ 0x51CBBAADu)) ^ *(_DWORD *)(v291 + v304) ^ *v301;
  LODWORD(v285) = *(_DWORD *)&v296[v299];
  v306 = (((((755768026 - (v285 & 0x8000000)) & 0x28080882) - 692577208) ^ 0xFC24C9C9) - 1861875703) ^ (((((755768026 - (v285 & 0x8000000)) & 0x28080882) - 692577208) ^ 0xCEE5FF7F) - 1547223361) ^ (((((755768026 - (v285 & 0x8000000)) & 0x28080882) - 692577208) ^ 0xC401127C) - 1457269826);
  LODWORD(v293) = v306 + 1763601215;
  v307 = (v293 ^ 0xF2FC2FA4) & (2 * (v293 & 0xFAFEAFB5)) ^ v293 & 0xFAFEAFB5;
  LODWORD(v297) = ((2 * (v293 ^ 0x17E07584)) ^ 0xDA3DB462) & (v293 ^ 0x17E07584) ^ (2 * (v293 ^ 0x17E07584)) & 0xED1EDA30;
  v308 = (v297 ^ 0xC81C9020) & (4 * v307) ^ v307;
  LODWORD(v297) = ((4 * (v297 ^ 0x25024A11)) ^ 0xB47B68C4) & (v297 ^ 0x25024A11) ^ (4 * (v297 ^ 0x25024A11)) & 0xED1EDA30;
  v309 = (v297 ^ 0xA41A4801) & (16 * v308) ^ v308;
  LODWORD(v297) = ((16 * (v297 ^ 0x49049231)) ^ 0xD1EDA310) & (v297 ^ 0x49049231) ^ (16 * (v297 ^ 0x49049231)) & 0xED1EDA30;
  v310 = v309 ^ 0xED1EDA31 ^ (v297 ^ 0xC10C8200) & (v309 << 8);
  LODWORD(v297) = (v306 + 1763601215) ^ (2
                                       * ((v310 << 16) & 0x6D1E0000 ^ v310 ^ ((v310 << 16) ^ 0x5A310000) & (((v297 ^ 0x2C125821) << 8) & 0x6D1E0000 ^ 0x61040000 ^ (((v297 ^ 0x2C125821) << 8) ^ 0x1EDA0000) & (v297 ^ 0x2C125821))));
  LODWORD(v297) = v297 & 0x35963487 ^ 0x21040004 ^ (v297 ^ 0xB0E31BD7) & (v305 ^ 0xF8B9244);
  v311 = 4
       * ((((2 * (BYTE1(v298) ^ 0x24083011)) & 0x48100034) - (BYTE1(v298) ^ 0x24083011) - 1850312987) ^ 0xB5BE46A0);
  STACK[0xD4F0] = v291 + v304 + v311;
  LODWORD(v300) = *(_DWORD *)(v64
                            + 4
                            * ((-1617324357
                              - (BYTE2(v274) ^ 0x119F801F | 0x9F9996BB)
                              + (BYTE2(v274) ^ 0x119F801F | 0x60666944)) ^ 0x71F9E946));
  STACK[0xD500] = (unint64_t)v303;
  v312 = v300 ^ *v303;
  v313 = (_DWORD *)(v291 + v311);
  v314 = (unint64_t)&v303[v302 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD500] = v314 + 4 * (HIBYTE(v290) ^ 0x30);
  v315 = (v285 & 0xF7FFFFFF ^ 0xA609AB38)
       + (v285 & 0xC1A82FB0 ^ 0x49A00480)
       - ((v285 & 0xF7FFFFFF ^ 0xA609AB38) & 0xC1A82FB0);
  v316 = (_DWORD)v297 + 928029276 - ((2 * (_DWORD)v297) & 0x6EA134B8) == 651594463;
  v317 = -1595656873 - v306;
  if (v316)
    v317 = v306 + 1763601215;
  v318 = (((v305 ^ 0x50954713) - 1351960339) ^ ((v305 ^ 0x239384D9) - 596870361) ^ ((v305 ^ 0x491B6509) - 1226532105))
       + 1756343419
       + v317;
  v319 = (v318 ^ LODWORD(STACK[0xD1C])) & (2 * (v318 & 0xCC6CA9FD)) ^ v318 & 0xCC6CA9FD;
  v320 = ((2 * (v318 ^ 0xC8EE029A)) ^ 0x90556CE) & (v318 ^ 0xC8EE029A) ^ (2 * (v318 ^ 0xC8EE029A)) & 0x482AB66;
  v321 = (v320 ^ 0x4000245) & (4 * v319) ^ v319;
  v322 = ((4 * (v320 ^ 0x482A921)) ^ 0x120AAD9C) & (v320 ^ 0x482A921) ^ (4 * (v320 ^ 0x482A921)) & 0x482AB64;
  v323 = (v322 ^ 0x2A903) & (16 * v321) ^ v321;
  v324 = ((16 * (v322 ^ 0x4800263)) ^ 0x482AB670) & (v322 ^ 0x4800263) ^ (16 * (v322 ^ 0x4800263)) & 0x482AB60;
  v325 = v323 ^ 0x482AB67 ^ (v324 ^ 0x2A207) & (v323 << 8);
  v326 = (v325 << 16) & 0x4820000 ^ v325 ^ ((v325 << 16) ^ 0x2B670000) & (((v324 ^ 0x4800907) << 8) & 0x4820000 ^ (((v324 ^ 0x4800907) << 8) ^ 0x2AB0000) & (v324 ^ 0x4800907) ^ 0x4000000);
  v327 = (((v274 >> 8) & 0x79 ^ 0x32A66C78) + ((v274 >> 8) & 0x86 ^ 0x85) - 1) ^ 0x61A23968;
  v328 = v327 - 623563754 - ((2 * v327) & 0xA408182C);
  v329 = (((2 * (v298 ^ 0x6A)) | 0x41F60C20) - (v298 ^ 0x6A) + 1594161648) ^ 0xC0FB0E14;
  v330 = 4
       * ((-2141359775 - (v290 ^ 0x14) + ((2 * (v290 ^ 0x14)) & 0x13C)) ^ 0x805D71E0);
  v331 = (unint64_t)&v296[v330];
  v332 = v312 ^ *(_DWORD *)&v296[v330];
  STACK[0xD4F0] = (unint64_t)v313;
  v333 = &v313[v311 / 0xFFFFFFFFFFFFFFFCLL];
  v334 = v332 ^ *v313;
  v335 = v318 ^ v315 ^ (2 * v326);
  STACK[0xD520] = v331;
  v336 = 4 * ((-1984499077 - v329 + ((2 * v329) & 0xEC921B08)) ^ 0xE9B6FA5B);
  v337 = (_DWORD *)(v331 + v336 - v330);
  v338 = *(_DWORD *)(v314 + 4 * (HIBYTE(v290) ^ 0x30));
  v339 = 4 * (HIBYTE(v298) ^ 0xEA);
  STACK[0xD500] = v314 + v339;
  LODWORD(v330) = ((HIWORD(v290) & 0xD6 ^ LODWORD(STACK[0xD20])) + (HIWORD(v290) & 0x29) - 1) ^ 0x67F393EA;
  v340 = STACK[0xD530];
  v341 = *(_DWORD *)(STACK[0xD530]
                   + 4 * (((HIWORD(v282) & 9 ^ 0x209) - (HIWORD(v282) & 9) + (BYTE2(v282) ^ 0xA6)) ^ 0x221));
  LODWORD(v330) = *(_DWORD *)(STACK[0xD530]
                            + 4 * (((_DWORD)v330 + 1751915891 - ((2 * (_DWORD)v330) & 0x508802E6)) ^ 0xD2291C79));
  v342 = 4
       * (((v274 ^ 0x280102A) - ((2 * (v274 ^ 0x280102A)) & 0xF0) + 1160554616) ^ 0x47ACB808u);
  v343 = &v337[(unint64_t)v342 / 4 + v336 / 0xFFFFFFFFFFFFFFFCLL];
  v344 = v328 ^ 0x89D1797C;
  v345 = &v333[v344];
  v346 = 4 * (LODWORD(STACK[0x68C0]) ^ 0x53834E34u);
  STACK[0xD4F0] = (unint64_t)v345 + v346;
  v347 = (_DWORD *)((char *)v345 + v346 - v344 * 4);
  LODWORD(v337) = v341 ^ v338 ^ *v345 ^ *v337;
  v348 = *(unsigned __int8 *)(STACK[0x68F0] + STACK[0x68D0])
       - 1324820095
       - ((2 * *(unsigned __int8 *)(STACK[0x68F0] + STACK[0x68D0])) & 0xFF03);
  v349 = v337 ^ v348 ^ 0x53C991E7;
  STACK[0xD520] = (unint64_t)v343;
  LODWORD(v339) = *(_DWORD *)(v314 + v339) ^ v330;
  LODWORD(v345) = v349
                + 1454925356
                + (((v337 ^ 0x9C493143) + 674242201) ^ ((v337 ^ 0xA2181488) + 375470932) ^ ((v337 ^ 0x236F9252) - 1760117366))
                + 402;
  LODWORD(v337) = (_DWORD)v345 - (((_DWORD)v345 - 1324820095 - (STACK[0xD24] & (2 * (_DWORD)v345))) ^ v348);
  v350 = (_DWORD)v337 - 1324820095 - (STACK[0xD24] & (2 * (_DWORD)v337));
  v351 = (char *)v347 - v346;
  LODWORD(v346) = 1324820095
                - (((v348 ^ 0x1C1E09A0) - 471730592) ^ ((v348 ^ 0x134FD558) - 323999064) ^ ((v348 ^ 0xBE590579)
                                                                                          + 1101462151));
  LODWORD(v330) = ((v346 ^ v348 ^ v350) + (_DWORD)v345) ^ v346;
  LODWORD(v346) = v339 ^ *v347 ^ *v343;
  LODWORD(v330) = v330 + v349;
  v352 = &v343[v342 / 0xFFFFFFFFFFFFFFFCLL];
  v353 = (((2 * (BYTE2(v346) ^ 0xDC)) & 0x56) - (BYTE2(v346) ^ 0xDC) + 1425580756) ^ 0x50B8BA45;
  v354 = *(_DWORD *)(v314 + 4 * (HIBYTE(v335) ^ 0xAB)) ^ *(_DWORD *)&v351[4 * BYTE1(v330)] ^ *(_DWORD *)(v340 + 4 * ((v353 - ((2 * v353) & 0x800169C) - 1138462898) ^ 0xB864770A)) ^ v343[v342 / 0xFFFFFFFFFFFFFFFCLL + (((v334 ^ 0xFFFFFFF3) + 789051714 + ((2 * v334) | 0xA1F00D7E)) ^ LODWORD(STACK[0xD28]))];
  v355 = (_DWORD *)(v314 + 4 * BYTE3(v330));
  v356 = *(_DWORD *)&v351[4
                        * ((((v346 >> 8) & 0x97 ^ 0x89584796)
                          + ((v346 >> 8) & 0x68 ^ 0x2040029)
                          - 1) ^ 0x8B5C47C7)] ^ v352[v330] ^ *(_DWORD *)(v314
                                                                                        + 4
                                                                                        * ((v334 ^ 0x7EABA9) >> (~((STACK[0x6900] & 0x18) - 106) & 0x10) >> (((STACK[0x6900] & 0x18) - 106 - ((2 * LODWORD(STACK[0x6900])) & 0x20)) & 0xE8 ^ 0x80) >> (STACK[0x6900] & 0x18 ^ 0x18))) ^ *(_DWORD *)(v340 + 4 * (BYTE2(v335) ^ 0xD2u));
  LODWORD(v345) = (925480443
                 - (v346 ^ 0xE3AA9A0F | 0x3729B5FB)
                 + (v346 ^ 0xE3AA9A0F | 0xC8D64A04)) ^ LODWORD(STACK[0xD2C]);
  v357 = 4 * (BYTE1(v335) ^ 0x83u);
  v358 = &v351[v357];
  v359 = v314;
  v360 = 4 * (BYTE1(v334) ^ 0xABu);
  v361 = &v358[v360 - v357];
  LODWORD(v346) = *(_DWORD *)(v314 + 4 * (BYTE3(v346) ^ 0x9A)) ^ *(_DWORD *)(v340 + 4 * BYTE2(v330));
  LODWORD(v330) = ((2 * (v335 ^ 0xA3)) & 0xD0) - (v335 ^ 0xA3) + 1516835223;
  LODWORD(v346) = v346 ^ *(_DWORD *)v361;
  v362 = 4 * (((_DWORD)v345 - ((2 * (_DWORD)v345) & 0x2E9ED8F4) + 391081082) ^ 0x97413C7A);
  v363 = &v352[(unint64_t)v362 / 4];
  v364 = 4
       * (((v330 & 0x102819BB ^ 0x480D828)
         + (v330 ^ 0xF83B0197)
         - ((v330 ^ 0xF83B0197) & 0x204219BB)) ^ 0x96B8C92B);
  v365 = &v363[(unint64_t)v364 / 4 + v362 / 0xFFFFFFFFFFFFFFFCLL];
  v366 = &v361[STACK[0x6810] - v360];
  v367 = &v365[(unint64_t)v272 / 4 + v364 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(STACK[0x68C0]) = *v355 ^ *(_DWORD *)(v340
                                             + 4
                                             * (((HIWORD(v334) & 0xF6 ^ 0x23D1) + (HIWORD(v334) & 9) - 1) ^ 0x23AE)) ^ *v363 ^ *(_DWORD *)v358;
  v368 = v346 ^ *v365;
  v369 = &v361[-v360];
  v370 = STACK[0x67E0];
  STACK[0xD4F0] = (unint64_t)&v361[STACK[0x67E0] - v360];
  v371 = *(_DWORD *)(v340 + STACK[0x6820]);
  v372 = *v367 ^ *(_DWORD *)(v340 + STACK[0x6830]) ^ *(_DWORD *)v366 ^ *(_DWORD *)(v314 + v268);
  LODWORD(v361) = *(_DWORD *)(v314 + v286) ^ *(_DWORD *)(v340 + STACK[0x67F0]);
  STACK[0xD500] = v314 + v278;
  v373 = *(_DWORD *)(v314 + v278) ^ v371;
  v374 = &v367[v272 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v280 / 4];
  STACK[0xD520] = (unint64_t)v374;
  LODWORD(v366) = *(_DWORD *)&v369[v370];
  STACK[0xD500] = v314 + v286;
  LODWORD(v367) = *v374;
  v375 = (unint64_t)&v374[(unint64_t)v288 / 4];
  STACK[0xD520] = v375;
  v376 = (_DWORD *)(v375 - v280);
  STACK[0xD500] = v314 + v286 + v294;
  v377 = (int *)&v369[v283];
  STACK[0xD4F0] = (unint64_t)v377;
  v378 = *v377;
  v379 = STACK[0x6800];
  v380 = (unint64_t)v377 + STACK[0x6800];
  STACK[0xD4F0] = v380;
  v381 = (_DWORD *)(v380 - v283);
  STACK[0xD520] = (unint64_t)v376;
  v382 = (unint64_t)&v376[v288 / 0xFFFFFFFFFFFFFFFCLL];
  v383 = v361 ^ v378 ^ *v376;
  v384 = STACK[0x67D0];
  STACK[0xD520] = v382 + STACK[0x67D0];
  LODWORD(v370) = v373 ^ v366;
  v385 = STACK[0xD530];
  v386 = *(_DWORD *)(STACK[0xD530] + STACK[0x68B0]) ^ *(_DWORD *)(v314 + v294);
  STACK[0xD4F0] = (unint64_t)v381;
  STACK[0xD500] = v314;
  v387 = v386 ^ *v381;
  LODWORD(v366) = *(_DWORD *)(v382 + v384);
  STACK[0x68D0] = v382;
  LODWORD(v384) = ((2 * (v366 & 0x200000 ^ LODWORD(STACK[0xD9C]))) | 0x38253B18)
                - (v366 & 0x200000 ^ LODWORD(STACK[0xD9C]))
                + 1676501620;
  v388 = ((v384 ^ 0xD9772166) - 1193242750) ^ ((v384 ^ LODWORD(STACK[0xD30])) + 1776536648) ^ ((v384 ^ 0x4110DF4A)
                                                                                             + 545747374);
  v389 = (unint64_t)v381 - v379;
  STACK[0x6900] = v389;
  v390 = v370 ^ v367;
  v391 = v388 + 1443118452;
  LODWORD(v370) = (v391 ^ 0x3E77D30F) & (2 * (v391 & 0xB8779020)) ^ v391 & 0xB8779020;
  LODWORD(v361) = ((2 * (v391 ^ 0x5EF3D34F)) ^ 0xCD0886DE) & (v391 ^ 0x5EF3D34F) ^ (2 * (v391 ^ 0x5EF3D34F)) & 0xE684436E;
  LODWORD(v370) = (v361 ^ 0xC0000021) & (4 * v370) ^ v370;
  LODWORD(v361) = ((4 * (v361 ^ 0x22844121)) ^ 0x9A110DBC) & (v361 ^ 0x22844121) ^ (4 * (v361 ^ 0x22844121)) & 0xE684436C;
  LODWORD(v370) = (v361 ^ 0x82000123) & (16 * v370) ^ v370;
  LODWORD(v361) = ((16 * (v361 ^ 0x64844243)) ^ 0x684436F0) & (v361 ^ 0x64844243) ^ (16 * (v361 ^ 0x64844243)) & 0xE6844360;
  LODWORD(v370) = v370 ^ 0xE684436F ^ (v361 ^ 0x6004020F) & ((_DWORD)v370 << 8);
  LODWORD(v370) = (v388 + 1443118452) ^ (2
                                       * (((_DWORD)v370 << 16) & 0x66840000 ^ v370 ^ (((_DWORD)v370 << 16) ^ 0x436F0000) & (((v361 ^ LODWORD(STACK[0xD34])) << 8) & 0x66840000 ^ 0x62840000 ^ (((v361 ^ LODWORD(STACK[0xD34])) << 8) ^ 0x84430000) & (v361 ^ LODWORD(STACK[0xD34])))));
  LODWORD(v370) = (v370 ^ 0xF17716FE) & (v387 ^ 0x3E0E9463) ^ v370 & LODWORD(STACK[0xD38]);
  v392 = (v366 & 0xFFDFFFFF ^ 0xFFD01EF2)
       - ((2 * (v366 & 0xFFDFFFFF ^ 0xFFD01EF2)) & 0x53AEDB40);
  if ((v370 ^ 0xA0) - (v370 & 0x751980F) + (v370 & 0x751980F ^ 0x751980F) != 121801231)
    v391 = 957129292 - v388;
  v393 = (((v387 ^ 0xA6C5DD1A) + 1496982246) ^ ((v387 ^ 0x6EB45E01) - 1857314305) ^ ((v387 ^ 0xF26C25D8) + 227793448))
       + 1414899051
       + v391;
  v394 = (v393 ^ 0x5DBF4177) & (2 * (v393 & STACK[0xD3C])) ^ v393 & STACK[0xD3C];
  v395 = ((2 * (v393 ^ 0x45C441C7)) ^ 0xB7F7A17E) & (v393 ^ 0x45C441C7) ^ (2 * (v393 ^ 0x45C441C7)) & 0xDBFBD0BE;
  v396 = (v395 ^ 0x91F29021) & (4 * v394) ^ v394;
  v397 = ((4 * (v395 ^ LODWORD(STACK[0xD44]))) ^ 0x6FEF42FC) & (v395 ^ LODWORD(STACK[0xD44])) ^ (4
                                                                                               * (v395 ^ LODWORD(STACK[0xD44]))) & 0xDBFBD0BC;
  v398 = (v397 ^ LODWORD(STACK[0xD40])) & (16 * v396) ^ v396;
  v399 = ((16 * (v397 ^ 0x90109003)) ^ 0xBFBD0BF0) & (v397 ^ 0x90109003) ^ (16 * (v397 ^ 0x90109003)) & 0xDBFBD0B0;
  v400 = v398 ^ 0xDBFBD0BF ^ (v399 ^ 0x9BB90000) & (v398 << 8);
  HIDWORD(v402) = v390;
  LODWORD(v402) = v390;
  v401 = v402 >> 10;
  HIDWORD(v402) = v401 ^ 0x1D7CAC;
  LODWORD(v402) = v401 ^ 0xAB800000;
  v403 = v393 ^ (v392 - 1445499488) ^ (2
                                     * ((v400 << 16) & 0x5BFB0000 ^ v400 ^ ((v400 << 16) ^ 0x50BF0000) & (((v399 ^ 0x4042D00F) << 8) & 0x5BFB0000 ^ 0x2B0000 ^ (((v399 ^ 0x4042D00F) << 8) ^ 0x7BD00000) & (v399 ^ 0x4042D00F))));
  v404 = (v402 >> 22) ^ 0xE77CD729;
  HIDWORD(v402) = *(_DWORD *)(v314 + 4 * (HIBYTE(v372) ^ 0xD2)) ^ *(_DWORD *)(v389 + 4 * (BYTE1(v383) ^ 0x1Du)) ^ *(_DWORD *)(v385 + 4 * (BYTE2(v403) ^ 0xC2u));
  LODWORD(v402) = HIDWORD(v402);
  v405 = (v402 >> 18) ^ __ROR4__(*(_DWORD *)(v382 + 4 * v404), 18);
  HIDWORD(v402) = v405 ^ 0x2541;
  LODWORD(v402) = v405 ^ 0x36110000;
  v406 = *(_DWORD *)(v385
                   + 4
                   * ((-650975521 - (BYTE2(v372) ^ 0x9E10D1) + ((2 * (BYTE2(v372) ^ 0x9E10D1)) & 0x1182040)) ^ 0xD9ACF613)) ^ *(_DWORD *)(v314 + 4 * HIBYTE(v404)) ^ *(_DWORD *)(v389 + 4 * (BYTE1(v403) ^ 0xB1u));
  v407 = (v403 ^ 0xBB) + (v403 & 0x78 ^ 0xC5497540) - ((v403 ^ 0xBB) & 0x78);
  v408 = *(_DWORD *)(v314 + 4 * (HIBYTE(v383) ^ 0x30)) ^ *(_DWORD *)(v385 + 4 * BYTE2(v404));
  v409 = (((2 * (v406 & 0xBF92A82D ^ 0x18908808)) & 0x36041052) - (v406 & 0xBF92A82D ^ 0x18908808) + 1691459652) ^ 0x44D0ECCD;
  v410 = ((v406 & 0x406D57D2 ^ 0x30004C9) - ((2 * (v406 & 0x406D57D2 ^ 0x30004C9)) & 0x44A2006) - 1498040317) ^ *(_DWORD *)(v382 + 4 * (((v383 & 0x29 ^ 0xFFE0AC20) + (v383 & 0xD6 ^ 0xC3) - 1) ^ 0xFFE0AC77));
  v411 = 4
       * (((v372 & 0xA8) - 425647397 + (v372 ^ 0xBC) - ((v372 ^ 0xBC) & 0xA8) + 549) ^ 0xE6A1254E);
  v412 = (_DWORD *)(v389 + 4 * (BYTE1(v372) ^ 0xFEu));
  v413 = 4 * BYTE1(v404);
  v414 = (_DWORD *)(v389 + v413);
  v415 = *(_DWORD *)(v385
                   + 4
                   * ((-896191747 - (BYTE2(v383) ^ 0x98081EA | 0xCA9532FD) + (BYTE2(v383) ^ 0x98081EA | 0x356ACD02)) ^ 0x3CEA4C4A)) ^ *(_DWORD *)(v314 + 4 * (HIBYTE(v403) ^ 0xE));
  v416 = v410 ^ (1933703184 - v409 + ((2 * v409) & 0x197C0334) + 1621);
  v417 = v408 ^ *v412 ^ *(_DWORD *)(v382
                                  + 4
                                  * (((v407 & 0x1484 ^ 0x20000884)
                                    + (v407 ^ 0x8665D61A)
                                    - ((v407 ^ 0x8665D61A) & 0x40280484)) ^ 0x2304BF84));
  v418 = (char *)v414 - v413;
  LODWORD(v413) = ((2 * (v417 & 0xFFFFBFFF ^ 0xA027DA56)) & 0x7AA335A8) - (v417 & 0xFFFFBFFF ^ 0xA027DA56);
  v419 = -79573860
       - ((((145643676 - (v417 & 0x4000 | 0x8084800C)) ^ 0x94D3CE0B) + 715386925) ^ (((145643676
                                                                                     - (v417 & 0x4000 | 0x8084800C)) ^ LODWORD(STACK[0xD48]))
                                                                                   + 936839272) ^ (((145643676 - (v417 & 0x4000 | 0x8084800C)) ^ 0x955D20DB)
                                                                                                 + 724377341));
  v420 = (v419 ^ 0xD970C22F) & (2 * (v419 & 0xDD44922E)) ^ v419 & 0xDD44922E;
  v421 = ((2 * (v419 ^ 0x51F0C22B)) ^ 0x1968A00A) & (v419 ^ 0x51F0C22B) ^ (2 * (v419 ^ 0x51F0C22B)) & 0x8CB45004;
  v422 = (v421 ^ 0x8A00005) & (4 * v420) ^ v420;
  v423 = ((4 * (v421 ^ LODWORD(STACK[0xD50]))) ^ LODWORD(STACK[0xD4C])) & (v421 ^ LODWORD(STACK[0xD50])) ^ (4 * (v421 ^ LODWORD(STACK[0xD50]))) & 0x8CB45004;
  v424 = v422 ^ 0x8CB45005 ^ (v423 ^ 0x904001) & (16 * v422);
  v425 = (16 * (v423 ^ 0x8C241001)) & 0x8CB45000 ^ 0x4B05005 ^ ((16 * (v423 ^ 0x8C241001)) ^ 0xCB450050) & (v423 ^ 0x8C241001);
  v426 = (v424 << 8) & 0x8CB45000 ^ v424 ^ ((v424 << 8) ^ 0xB4500500) & v425;
  v427 = (v426 << 16) & 0xCB40000 ^ v426 ^ ((v426 << 16) ^ 0x50050000) & ((v425 << 8) & 0x8CB40000 ^ 0x8A40000 ^ ((v425 << 8) ^ 0xB4500000) & v425);
  v428 = v415 ^ *v414 ^ *(_DWORD *)(v382 + v411);
  LODWORD(v411) = v419 ^ (v413 + 1118725419) ^ (2 * v427);
  v429 = (v402 >> 14) ^ 0xA607860F;
  LODWORD(v413) = *(_DWORD *)(v385
                            + 4
                            * ((((2 * (BYTE2(v428) ^ 0xF8)) | 0x80690EC) - (BYTE2(v428) ^ 0xF8) + 1945941898) & 0xFFFFFFF ^ 0xC034887u)) ^ *(_DWORD *)(v314 + 4 * HIBYTE(v429)) ^ *(_DWORD *)(v382 + 4 * (((v416 & 2) - 1549360640 + (v416 ^ 0x72) - ((v416 ^ 0x72) & 2)) ^ 0xA3A6A2F7)) ^ *(_DWORD *)&v418[4 * (BYTE1(v411) ^ 0xBD)];
  LODWORD(v414) = *(_DWORD *)(v385 + 4 * BYTE2(v429)) ^ *(_DWORD *)(v314 + 4 * (HIBYTE(v416) ^ 0xEE));
  v430 = *(_DWORD *)(v385 + 4 * (BYTE2(v416) ^ 0x1Bu));
  v431 = 4 * (((v411 & 0x34 ^ 0x3AF4C11) + (v411 & 0xCB) - 1) ^ 0x3AF4C3D);
  v432 = ((2 * (v428 ^ 0x7C)) | 0xB1C57476) - (v428 ^ 0x7C) - 1491253819;
  v433 = 4
       * (((BYTE1(v428) ^ 0x84200409) + ((v428 >> 8) & 0xE4 ^ 0x2A0158E4) - ((BYTE1(v428) ^ 0x84200409) & 0x802004E4)) ^ 0x2E015894);
  v434 = &v418[v433];
  v435 = *(_DWORD *)&v418[v433];
  LODWORD(v418) = (((v435 ^ 0x36DAEEFF) - 920317695) ^ ((v435 ^ 0xAA501D4F) + 1437590193) ^ ((v435 ^ 0x36CCD025)
                                                                                           - 919392293))
                - (((v435 ^ v414 ^ 0x250503D5) - 621085653) ^ ((v435 ^ v414 ^ 0xB877A123)
                                                                           + 1200119517) ^ ((v435 ^ v414 ^ 0xA76F0435)
                                                                                          + 1485896651))
                - 1467836394;
  v436 = (v418 ^ 0x97B5D4BE) & (2 * (v418 & 0xC7A5E4BC)) ^ v418 & 0xC7A5E4BC;
  v437 = ((2 * (v418 ^ 0x10F65586)) ^ 0xAEA76274) & (v418 ^ 0x10F65586) ^ (2 * (v418 ^ 0x10F65586)) & 0xD753B13A;
  v438 = (v437 ^ 0x4643203A) & (4 * v436) ^ v436;
  v439 = ((4 * (v437 ^ 0x5150910A)) ^ 0x5D4EC4E8) & (v437 ^ 0x5150910A) ^ (4 * (v437 ^ 0x5150910A)) & 0xD753B138;
  v440 = (v439 ^ 0x55428020) & (16 * v438) ^ v438;
  v441 = ((16 * (v439 ^ 0x82113112)) ^ 0x753B13A0) & (v439 ^ 0x82113112) ^ (16 * (v439 ^ 0x82113112)) & 0xD753B130;
  v442 = v440 ^ 0xD753B13A ^ (v441 ^ 0x55131100) & (v440 << 8);
  v443 = ((v442 << 16) ^ 0x313A0000) & (((v441 ^ 0x8240A01A) << 8) & 0x57530000 ^ 0x4420000 ^ (((v441 ^ 0x8240A01A) << 8) ^ 0x53B10000) & (v441 ^ 0x8240A01A));
  v444 = -2139138592
       - (((v414 ^ 0x7D1B17C4) - 2098927556) ^ ((v414 ^ 0xC42D150A) + 1003678454) ^ ((v414 ^ 0x296D8798) - 695043992));
  v445 = (v444 ^ 0xCFB582E2) & (2 * (v444 & 0xEF2524CA)) ^ v444 & 0xEF2524CA;
  v446 = ((2 * (v444 ^ 0xDDBFC3F2)) ^ 0x6535CE70) & (v444 ^ 0xDDBFC3F2) ^ (2 * (v444 ^ 0xDDBFC3F2)) & 0x329AE738;
  v447 = (v446 ^ 0x22128630) & (4 * v445) ^ v445;
  v448 = ((4 * (v446 ^ 0x128A2108)) ^ 0xCA6B9CE0) & (v446 ^ 0x128A2108) ^ (4 * (v446 ^ 0x128A2108)) & 0x329AE738;
  v449 = (v448 ^ 0x20A8438) & (16 * v447) ^ v447;
  v450 = ((16 * (v448 ^ 0x30906318)) ^ 0x29AE7380) & (v448 ^ 0x30906318) ^ (16 * (v448 ^ 0x30906318)) & 0x329AE730;
  v451 = v450 ^ 0x12108438;
  v452 = v449 ^ 0x329AE738 ^ (v450 ^ 0x208A6300) & (v449 << 8);
  v453 = *(_DWORD *)(STACK[0xD530] + 4 * (BYTE2(v411) ^ 0x60u));
  v454 = v444 ^ v414 ^ v418 ^ (2
                                                         * ((v452 << 16) & 0x329A0000 ^ v452 ^ v442 ^ ((v452 << 16) ^ 0x67380000) & ((v451 << 8) & 0x329A0000 ^ 0x20180000 ^ ((v451 << 8) ^ 0x9AE70000) & v451) ^ (v442 << 16) & 0x57530000 ^ v443));
  LODWORD(v418) = *(_DWORD *)(v359 + 4 * (BYTE3(v411) ^ 0x6E)) ^ v430;
  LODWORD(v411) = (((v435 ^ 0x75AD85D4) - 1974306260) ^ ((v435 ^ 0x585A33F2) - 1482306546) ^ ((v435 ^ 0x87B195B3)
                                                                                            + 2018404941))
                + 1099760330
                + (((v454 ^ 0xD9A57D20) + 1704845384) ^ ((v454 ^ LODWORD(STACK[0xD54])) + 1717533863) ^ ((v454 ^ 0x169F75C5) - 1431836509));
  v455 = (v411 ^ 0xBE1B8877) & (2 * (v411 & 0xBF53AC87)) ^ v411 & 0xBF53AC87;
  LODWORD(v414) = ((2 * (v411 ^ 0x8C3FD17D)) ^ 0x66D8FBF4) & (v411 ^ 0x8C3FD17D) ^ (2 * (v411 ^ 0x8C3FD17D)) & 0x336C7DFA;
  v456 = (v414 ^ 0x22487030) & (4 * v455) ^ v455;
  LODWORD(v414) = ((4 * (v414 ^ 0x1124040A)) ^ 0xCDB1F7E8) & (v414 ^ 0x1124040A) ^ (4 * (v414 ^ 0x1124040A)) & 0x336C7DF8;
  v457 = (v414 ^ LODWORD(STACK[0xD58])) & (16 * v456) ^ v456;
  LODWORD(v414) = ((16 * (v414 ^ 0x324C0812)) ^ 0x36C7DFA0) & (v414 ^ 0x324C0812) ^ (16 * (v414 ^ 0x324C0812)) & 0x336C7DF0;
  v458 = v457 ^ 0x336C7DFA ^ (v414 ^ 0x32445D00) & (v457 << 8);
  v459 = (v458 << 16) & 0x336C0000 ^ v458 ^ ((v458 << 16) ^ 0x7DFA0000) & (((v414 ^ 0x128205A) << 8) & 0x336C0000 ^ 0x13000000 ^ (((v414 ^ 0x128205A) << 8) ^ 0x6C7D0000) & (v414 ^ 0x128205A));
  v460 = 4 * BYTE1(v429);
  v461 = &v434[v460 - v433];
  v462 = v382;
  LODWORD(v431) = v411 ^ *(_DWORD *)(v382 + v431) ^ (2 * v459);
  v463 = v418 ^ *(_DWORD *)v461 ^ *(_DWORD *)(v382
                                                          + 4
                                                          * (((v432 & 0x9C1BC044 ^ 0x80184004)
                                                            + (v432 ^ 0x7C439A7A)
                                                            - ((v432 ^ 0x7C439A7A) & 0x9C1BC044)) ^ 0xB8BAE0D6));
  v464 = *(_DWORD *)(v359 + 4 * (HIBYTE(v428) ^ 0x9A));
  v465 = 4 * (BYTE1(v416) ^ 0x2Du);
  STACK[0x68B0] = v465;
  v466 = &v461[v465 - v460];
  STACK[0x6830] = (unint64_t)v466;
  v467 = ((v413 ^ 0xF4E8A5FC) - 693518618) ^ ((v413 ^ 0xE1A8C74) + 744200046) ^ ((v413 ^ 0x274CCD6E) + 84792952);
  v468 = (((v354 ^ 0xD0D9FD36) - 1896770073) ^ ((v354 ^ 0x30044F59) + 1848387466) ^ ((v354 ^ 0x3D635689) + 1665875546))
       - v467
       - 574347275;
  v469 = (v468 ^ 0x8CFFE875) & (2 * (v468 & 0x88FF8D76)) ^ v468 & 0x88FF8D76;
  LODWORD(v413) = ((2 * (v468 ^ 0x8C9EF0B5)) ^ 0x8C2FB86) & (v468 ^ 0x8C9EF0B5) ^ (2 * (v468 ^ 0x8C9EF0B5)) & 0x4617DC2;
  v470 = (v413 ^ 0x417981) & (4 * v469) ^ v469;
  LODWORD(v413) = ((4 * (v413 ^ 0x4210441)) ^ 0x1185F70C) & (v413 ^ 0x4210441) ^ (4 * (v413 ^ 0x4210441)) & 0x4617DC0;
  v471 = v470 ^ 0x4617DC3 ^ (v413 ^ 0x17503) & (16 * v470);
  LODWORD(v413) = ((16 * (v413 ^ 0x46008C3)) ^ 0x4617DC30) & (v413 ^ 0x46008C3) ^ (16 * (v413 ^ 0x46008C3)) & 0x4617DC0;
  v472 = v413 & LODWORD(STACK[0xD5C]);
  v473 = v472 ^ v471 ^ (v413 ^ 0x4015CC3) & ((v471 << 8) ^ 0xFFE58510);
  LODWORD(v413) = (((_DWORD)v413 << 8) ^ 0x9FC44610) & (v413 ^ 0x4015CC3) ^ v472;
  LODWORD(v413) = v413 & 0x1E984610 ^ v473 ^ ((v473 << 16) ^ 0xA75B461C) & (v413 ^ 0x610000) ^ ((v473 << 16) ^ 0xA75B461C) & 0x4614400;
  v474 = (((v356 ^ 0xD6118BD9) - 524105292) ^ ((v356 ^ 0xC4F037D7) - 232557122) ^ ((v356 ^ 0x61717998) + 1470249971))
       - (((v431 ^ 0x73E2385A) - 626436296) ^ ((v431 ^ 0xEE3A3541) + 1198610989) ^ ((v431 ^ 0x6F0E393D) - 968534447))
       + 1758580918;
  LODWORD(v465) = (v474 ^ 0x417ADB60) & (2 * (v474 & 0x9578DB61)) ^ v474 & 0x9578DB61;
  LODWORD(v411) = ((2 * (v474 ^ 0x61EB6BA0)) ^ 0xE9276182) & (v474 ^ 0x61EB6BA0) ^ (2 * (v474 ^ 0x61EB6BA0)) & 0xF493B0C0;
  LODWORD(v465) = (v411 ^ 0xE01320C1) & (4 * v465) ^ v465;
  LODWORD(v411) = ((4 * (v411 ^ 0x14909041)) ^ 0xD24EC304) & (v411 ^ 0x14909041) ^ (4 * (v411 ^ 0x14909041)) & 0xF493B0C0;
  LODWORD(v465) = (v411 ^ LODWORD(STACK[0xD60])) & (16 * v465) ^ v465;
  LODWORD(v411) = ((16 * (v411 ^ 0x249130C1)) ^ 0x493B0C10) & (v411 ^ 0x249130C1) ^ (16 * (v411 ^ 0x249130C1)) & 0xF493B0C0;
  LODWORD(v465) = v465 ^ 0xF493B0C1 ^ (v411 ^ LODWORD(STACK[0xD64])) & ((_DWORD)v465 << 8);
  LODWORD(v411) = ((_DWORD)v465 << 16) & 0x74930000 ^ v465 ^ (((_DWORD)v465 << 16) ^ 0x30C10000) & (((v411 ^ 0xB480B0C1) << 8) & 0xF4930000 ^ 0x64030000 ^ (((v411 ^ 0xB480B0C1) << 8) ^ 0x93B00000) & (v411 ^ 0xB480B0C1));
  LODWORD(v465) = v464 ^ *(_DWORD *)v466 ^ v453 ^ *(_DWORD *)(v462 + 4 * ((v402 >> 14) ^ 0xFu));
  v475 = v468 ^ (2 * v413);
  v476 = (((v368 ^ 0x27A0D1DA) + 14425882) ^ ((v368 ^ 0xF620F5D) + 673104287) ^ ((v368 ^ 0x10E7DF3A) + 932909562))
       - (((v465 ^ 0xCF87A99B) + 1317797355) ^ ((v465 ^ 0xAB72CFA1) + 712940497) ^ ((v465 ^ 0x5CD06787) - 572771337))
       + 2095035886;
  LODWORD(v413) = (v476 ^ 0x35C164DE) & (2 * (v476 & 0xA5E470DF)) ^ v476 & 0xA5E470DF;
  v477 = ((2 * (v476 ^ 0x35494564)) ^ 0x215A6B76) & (v476 ^ 0x35494564) ^ (2 * (v476 ^ 0x35494564)) & 0x90AD35BA;
  LODWORD(v413) = (v477 ^ 0x41131) & (4 * v413) ^ v413;
  v478 = ((4 * (v477 ^ 0x90A51489)) ^ 0x42B4D6EC) & (v477 ^ 0x90A51489) ^ (4 * (v477 ^ 0x90A51489)) & 0x90AD35B8;
  LODWORD(v413) = (v478 ^ 0xA414A3) & (16 * v413) ^ v413;
  v479 = ((16 * (v478 ^ 0x90092113)) ^ 0xAD35BB0) & (v478 ^ 0x90092113) ^ (16 * (v478 ^ 0x90092113)) & 0x90AD35B0;
  LODWORD(v413) = v413 ^ 0x90AD35BB ^ (v479 ^ 0x81110B) & ((_DWORD)v413 << 8);
  LODWORD(v413) = ((_DWORD)v413 << 16) & 0x10AD0000 ^ v413 ^ (((_DWORD)v413 << 16) ^ 0x35BB0000) & (((v479 ^ 0x902C240B) << 8) & 0x90AD0000 ^ 0x10880000 ^ (((v479 ^ 0x902C240B) << 8) ^ 0x2D350000) & (v479 ^ 0x902C240B));
  v480 = v474 ^ LODWORD(STACK[0xD68]) ^ (2 * v411);
  v481 = (((LODWORD(STACK[0x68C0]) ^ 0x89805DEA) - 1171785131) ^ ((LODWORD(STACK[0x68C0]) ^ 0x814886F1) - 1292951216) ^ ((LODWORD(STACK[0x68C0]) ^ 0xAA9A08A0) - 1724010721))
       - (((v463 ^ 0x53B0E980) - 1034936597) ^ ((v463 ^ 0xE42A465) - 1616751856) ^ ((v463 ^ 0xFFA09E5E) + 1849714997))
       + 1746988002;
  LODWORD(v418) = (2 * (v481 & 0xF31C5AAA)) & (v481 ^ 0xB78C321B) ^ v481 & 0xF31C5AAA ^ ((2 * (v481 & 0xF31C5AAA)) & 0x44102010 | 0x20);
  LODWORD(v411) = (2 * (v481 ^ 0xB78C321B)) & 0x449068B0 ^ 0x44902891 ^ ((2 * (v481 ^ 0xB78C321B)) ^ 0x8920D162) & (v481 ^ 0xB78C321B);
  LODWORD(v418) = (4 * (_DWORD)v418) & 0x449068B0 ^ v418 ^ ((4 * (_DWORD)v418) ^ 0x80) & v411;
  LODWORD(v411) = (4 * v411) & 0x449068B0 ^ 0x44904831 ^ ((4 * v411) ^ 0x1241A2C4) & v411;
  LODWORD(v418) = (16 * (_DWORD)v418) & 0x449068B0 ^ v418 ^ ((16 * (_DWORD)v418) ^ 0xA00) & v411;
  LODWORD(v411) = (16 * v411) & 0x449068B0 ^ 0x49060A1 ^ ((16 * v411) ^ 0x49068B10) & v411;
  LODWORD(v418) = v418 ^ 0x44904011 ^ ((_DWORD)v418 << 8) & 0x44906800 ^ (((_DWORD)v418 << 8) ^ 0x8A000) & v411;
  v482 = v476 ^ LODWORD(STACK[0xD70]) ^ (2 * v413);
  v480 *= -1557259847;
  v483 = v480 + 1098181379 * (v475 ^ 0x73B08746);
  LODWORD(v413) = 1666299365
                * (v481 ^ (2
                         * (((_DWORD)v418 << 16) & 0x44900000 ^ v418 ^ (((_DWORD)v418 << 16) ^ 0x68B10000) & (((_DWORD)v411 << 8) & 0x44900000 ^ 0x44900000 ^ (((_DWORD)v411 << 8) ^ 0x90680000) & v411))) ^ 0x2BCE0A65);
  v484 = v482 * LODWORD(STACK[0xD6C]);
  v485 = v480 + v413;
  LODWORD(v413) = v484 ^ v413;
  v486 = v483 ^ v484;
  v487 = v483 + v413;
  LODWORD(v418) = v487 ^ -v485;
  v488 = v487 & -v485;
  v489 = v487 + v413;
  LODWORD(v413) = (_DWORD)v418 + 2 * v488;
  v490 = v486 + v485 - v413;
  v491 = v489 + v490;
  LODWORD(v431) = (((v431 ^ 0x70A27525) - 639034807) ^ ((v431 ^ 0x85FF15CD) + 750025377) ^ ((v431 ^ 0x78B54CE)
                                                                                          - 1363133532))
                + v490
                - 2 * v490;
  LODWORD(v465) = (((v465 ^ 0xE2EB67BD) + 1676096461) ^ ((v465 ^ 0x555AA24E) - 732498368) ^ ((v465 ^ 0x8F94C44E)
                                                                                           + 244879424))
                - 965877385
                + v485
                + v491;
  v492 = v467 - v413 + 361013673;
  v493 = STACK[0xD528] + 4 * HIBYTE(v492);
  LODWORD(v466) = v431 + 385814239;
  v494 = (v431 - 33);
  v495 = STACK[0xD518] + 4 * (v431 - 33);
  LODWORD(v418) = (((v463 ^ 0x6EFD3C6A) - 14824703) ^ ((v463 ^ 0xBE2E0B8D) + 802094312) ^ ((v463 ^ 0x7281E45C)
                                                                                         - 480177353))
                - v491
                + 887458669;
  v496 = (v418 ^ 0xC3B83719) & 0x5B242EC1 ^ 0x51BA5963 ^ (((v418 ^ 0xC3B83719) & 0x5B242E3E ^ 0x7ABA0899)
                                                                      + ((v418 ^ 0xC3B83719) & 0x5300083E ^ 0x1015026)
                                                                      - (((v418 ^ 0xC3B83719) & 0x5B242E3E ^ 0x7ABA0899) & 0x539A083E));
  v497 = (v496 | 0xB617E532) - (v496 | 0x49E81ACD) + 1239947981;
  v498 = v495
       + 4
       * (-279631664
        - (((v494 ^ 0x2A820F27B9D1DB85) - 0x2A820F27A97B0CB5) ^ ((v494 ^ 0x9345F86B424115FLL) + 0x36CBA0795B713991) ^ ((v494 ^ 0x23B650A10DF5CADALL) + 0x1C49AF5EE2A0E216)))
       + 4 * (v497 ^ 0xCE8CECEF);
  v499 = v493
       + 4
       * (-1506360053
        - (((HIBYTE(v492) ^ 0x58A85A85A66BF88) + 0x3A757A57FC507A83) ^ ((HIBYTE(v492) ^ 0x30DFED04B1E289FFLL)
                                                                          + 0x4F2012FB17D44CF6) ^ ((HIBYTE(v492) ^ 0x355568ACEB843677) - 0x755568ACB24D0C82)))
       + 4 * (v466 >> 24);
  v500 = v499
       + 4 * (v418 >> 24)
       + 4
       * (-3324930504
        - ((((v466 >> 24) ^ 0x1768B7FD5C9388A3) + 0x6897480265421E95) ^ (((v466 >> 24) ^ 0xFB05BC94C2BE873)
                                                                                         - 0x4FB05BC98A0581BBLL) ^ (((v466 >> 24) ^ 0x18D8EC3410B860D0) + 0x272713CB2969F6E8)));
  LODWORD(v434) = (((2 * ((v465 ^ 0x6231C21B) & 0x38DB16A5)) | 0xF1355184)
                 - ((v465 ^ 0x6231C21B) & 0x38DB16A5)
                 - 2023401666) ^ (v465 ^ 0x6231C21B) & 0x38DB165A;
  v501 = v498
       + 4
       * (-2908775008
        - (((v497 ^ 0x28EEF7320A16643ELL) + 0x571108CD9605154FLL) ^ ((v497 ^ 0x165AD5BCA2EC8BD1) - 0x165AD5BCC100055ELL) ^ ((v497 ^ 0x3EB4228E66760300) + 0x414BDD71FA657271)))
       + 4 * (v434 ^ 0x789AA8D9);
  v502 = BYTE3(v465);
  v503 = v500
       + 4 * BYTE3(v465)
       + 4
       * (-1651405037
        - ((((v418 >> 24) ^ 0x10237EDEFE52A251) - 0x10237EDE9C3CD2BCLL) ^ (((v418 >> 24) ^ 0x28AFC5A85958F09BLL)
                                                                                         - 0x28AFC5A83B368076) ^ (((v418 >> 24) ^ 0x388CBB76A70A52CALL) - 0x388CBB76C5642227)));
  v504 = *(_DWORD *)(STACK[0xD508] + 4 * BYTE2(v465));
  v505 = *(_DWORD *)(STACK[0xD508] + 4 * BYTE2(v492));
  v506 = *(_DWORD *)(STACK[0xD508] + 4 * BYTE2(v466));
  LODWORD(STACK[0x68C0]) = *(_DWORD *)(STACK[0xD508] + 4 * BYTE2(v418));
  v507 = LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6940]);
  LODWORD(v499) = v507 ^ 0x55B5D60F ^ v505 ^ *(_DWORD *)(v499 - 0x400367C8C4C8FF05) ^ *(_DWORD *)(STACK[0xD4E0]
                                                                                                  + 4 * BYTE1(v465)) ^ *(_DWORD *)(v498 - 0x19FEB71C76E85E41);
  LODWORD(v465) = (v492 ^ 0xDE43F261) & 0xD0A3C89D ^ 0x4CA7BF66 ^ (((v492 ^ 0xDE43F261) & 0xD0A3C862)
                                                                 - ((2 * (v492 ^ 0xDE43F261)) & 0x21409004)
                                                                 - 1666941178);
  v508 = ((2 * v465) & 0xEF8E73DC) - v465 + 3720209;
  v509 = v501
       + 4 * (v508 ^ 0xD03B0410)
       + 4
       * (-3225136654
        - (((v434 ^ LODWORD(STACK[0xD74]) ^ 0x15E10D1C96C0B23CLL) - 0x55E10D1C96C0B23CLL) ^ ((v434 ^ LODWORD(STACK[0xD74]) ^ 0x1B97BDCE35958ED0) + 0x24684231CA6A7130) ^ ((v434 ^ LODWORD(STACK[0xD74]) ^ 0xE76B0D2636E92E2) + 0x71894F2D9C916D1ELL)));
  v510 = *(_DWORD *)(STACK[0xD4E0] + 4 * BYTE1(v418));
  v511 = (int *)(STACK[0xD4E0] + 4 * BYTE1(v492));
  v512 = 4 * BYTE1(v466);
  v513 = (int *)(STACK[0xD4E0] + v512);
  v514 = v499 & 0xFF7FFFFF ^ LODWORD(STACK[0x6A70]);
  v515 = v499 & 0x800000;
  v516 = STACK[0x6A50];
  if ((v515 & STACK[0x6A50]) != 0)
    v515 = -v515;
  v517 = v514 ^ (v515 + v516);
  v518 = STACK[0x6920];
  v519 = *(_DWORD *)(v493 - 0x400367C8C4C8FF05);
  v520 = *(_DWORD *)(v495 - 0x19FEB71C76E85E41);
  v521 = *(_DWORD *)(v500 - 0x400367C8C4C8FF05);
  v522 = *v511;
  v523 = *(_DWORD *)(v501 - 0x19FEB71C76E85E41);
  v524 = *(_DWORD *)(v503 - 0x400367C8C4C8FF05);
  v525 = *v513;
  v526 = *(_DWORD *)(v509 - 0x19FEB71C76E85E41);
  v527 = STACK[0xD4E8];
  v528 = STACK[0xD4E8];
  *(_BYTE *)(v527
           + ((((2 * (LODWORD(STACK[0x6970]) ^ 0x3D84A3AA)) & 0x4F8AE874)
             - (LODWORD(STACK[0x6970]) ^ 0x3D84A3AAu)
             + 1480231873) ^ 0xA285455ELL)) = *((_BYTE *)*(&off_1015B46D0 + (int)(STACK[0x6920] ^ 0x140C))
                                              + (BYTE2(v517) ^ 0xD1)
                                              - 4) ^ 0x57;
  v529 = v507 ^ v516 ^ LODWORD(STACK[0x6A20]) ^ v519 ^ v510 ^ v504 ^ v520;
  v530 = (LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0xD80]) | 0xA422C4B9)
       - (LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0xD80]) | 0x5BDD3B46)
       + 1541225286;
  *(_BYTE *)(v527 + (((v530 & 0x6EFFB850 ^ 0x4C4D8001) + (v530 & STACK[0xD7C]) - 1) ^ 0xD92C0702)) = (*((_BYTE *)*(&off_1015B46D0 + (int)v518 - 3218) + (v529 ^ 0xE0) - 8) - 9) ^ 0x60;
  v531 = v518;
  v532 = *((_BYTE *)*(&off_1015B46D0 + (int)v518 - 4973)
         + ((((v517 ^ 0x16FF6D77u) >> 24) - (((v517 ^ 0x16FF6D77u) >> 23) & 0x66666666) + 51) ^ 0xFFLL)
         - 8)
       - 56;
  *(_BYTE *)(v527 + STACK[0x6980]) = v532 ^ 0xCB ^ ((16 * v532) | 0x50);
  HIDWORD(v533) = v522;
  LODWORD(v533) = v522;
  LODWORD(v533) = __ROR4__((v533 >> 18) ^ __ROR4__(v506 ^ v521, 18) ^ 0x14E24E60, 14);
  v534 = ((v507 ^ v523 ^ v533 ^ 0x6C358586 ^ -(v507 ^ v523 ^ v533 ^ 0x6C358586) ^ (LODWORD(STACK[0x6740])
                                                                                 + (LODWORD(STACK[0x6750]) ^ 0xEBD16B92 ^ v507 ^ v523 ^ v533)))
        + v516) ^ LODWORD(STACK[0x69B0]);
  *(_BYTE *)(v527 + STACK[0x6930]) = ((((((v534 ^ 0x53500D25) >> 16) ^ 0x1F) + 111) ^ -(((v534 ^ 0x53500D25) >> 16) ^ 0x8E) ^ ((v534 ^ 0x53500D25) >> 16) ^ 0x8E)
                                    + *((_BYTE *)*(&off_1015B46D0 + (int)(v518 ^ 0x10DA))
                                      + (((v534 ^ 0x53500D25) >> 16) ^ 1)
                                      - 4)
                                    + 110) ^ 0x82;
  v535 = STACK[0x6960];
  v536 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)v518 - 3297) + (v517 ^ 0x6FLL) - 8);
  *(_BYTE *)(v527
           + ((((2 * (v535 & 0xFFFFFFF8 ^ 0xE49FFB08)) | 0x8B6E9396) - (v535 & 0xFFFFFFF8 ^ 0xE49FFB08) - 1169639883) & 0xFFFFFFF8 ^ 0x6613DFF7)) = ((v536 >> 5) | (8 * v536)) ^ 0xF0;
  STACK[0xD520] = STACK[0x68D0];
  STACK[0xD4F0] = STACK[0x6900];
  STACK[0xD4F0] = STACK[0x6830] - STACK[0x68B0];
  STACK[0xD520] = v462;
  STACK[0xD528] = v503
                + 4
                * (-2388915800
                 - (((v502 ^ 0x7E0FA7F51272675) - 0x47E0FA7FDF44D02DLL) ^ ((v502 ^ 0x2D34BEA456799C64)
                                                                           - 0x2D34BEA4D81A6A3CLL) ^ ((v502 ^ 0x2AD444DB075EBA11) - 0x6AD444DB893D4C49)));
  STACK[0xD4E0] = (unint64_t)&v513[v512 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v518) = v507 ^ v516 ^ LODWORD(STACK[0xD78]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x68C0]) ^ v525 ^ v524 ^ v526;
  v537 = (((v517 ^ 0x16FF6D77u) >> 5) & 0xF8 | ((unsigned __int16)(v517 ^ 0x6D77) >> 13)) ^ 0xF7;
  v538 = (v537 >> 3) & 0xFFFFFF1F | (32 * (v537 & 7));
  v539 = ((2 * (LODWORD(STACK[0x6A30]) ^ 0x5DA4241)) & 0x64FC72F0) - (LODWORD(STACK[0x6A30]) ^ 0x5DA4241) + 1300350595;
  *(_BYTE *)(v527
           + (((v539 & 0xA0FDCB88 ^ 0xA0788908) + (v539 ^ 0x5D874683) - ((v539 ^ 0x5D874683) & 0xA0FDCB88)) ^ 0x721A64FFLL)) = *((_BYTE *)*(&off_1015B46D0 + (v531 ^ 0x1E95)) + (v538 ^ 0x32) - 8) ^ 0x3A;
  v540 = ((2 * (v535 & 0xFFFFFFF0 ^ 0x7FFDE4B0)) & 0x714A0160) - (v535 & 0xFFFFFFF0 ^ 0x7FFDE4B0) - 950337720;
  *(_BYTE *)(v527 + STACK[0x69C0]) = (*((_BYTE *)*(&off_1015B46D0 + v531 - 5477) + (v534 ^ 0xAFLL)) - 23) ^ 0xD4;
  *(_BYTE *)(v527
           + (((v540 & 0x6668E20 ^ 0x6240204) + (v540 ^ 0xC15B9D39) - ((v540 ^ 0xC15B9D39) & 0x6668E21)) ^ LODWORD(STACK[0xD84]))) = ((v518 ^ 0xB7) - 40) ^ 0x8A ^ *((_BYTE *)*(&off_1015B46D0 + (v531 ^ 0x11AB)) + (v518 ^ 0xEBLL) - 8);
  v541 = (((2 * (LODWORD(STACK[0x69E0]) ^ 0x692FEBA2)) & 0xB62A64A0) - (LODWORD(STACK[0x69E0]) ^ 0x692FEBA2) - 1528115794) ^ 0xE48B8DAE;
  *(_BYTE *)(v527 + ((((2 * v541) & 0x49DED120) - v541 + 1527813999) ^ 0xB56551F0)) = *((_BYTE *)*(&off_1015B46D0 + (v531 ^ 0x1D76))
                                                                                        + (BYTE2(v518) ^ 0x80)
                                                                                        - 8) ^ 0x1C;
  v542 = *((unsigned __int8 *)*(&off_1015B46D0 + v531 - 4026) + (BYTE1(v518) ^ 0xAFLL));
  LODWORD(v538) = (1167877962
                 - (LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0xD90]) | 0x459C674A)
                 + (LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0xD90]) | LODWORD(STACK[0xD8C]))) ^ LODWORD(STACK[0xD88]);
  *(_BYTE *)(v527 + (LODWORD(STACK[0x6A00]) ^ 0xC73B6D3E)) = ((v542 >> 1) | ((_BYTE)v542 << 7)) ^ (4 * v542) & 0x88 ^ 7;
  *(_BYTE *)(v527 + ((v538 - ((2 * (_DWORD)v538) & 0x6B1DA68C) - 1248931002) ^ 0x4AA32C99)) = BYTE3(v518) ^ *((_BYTE *)*(&off_1015B46D0 + (v531 ^ 0x11DC)) + (BYTE3(v518) ^ 0x15) - 8) ^ 0x7F;
  STACK[0xD518] = v509
                + 4
                * (-257011072
                 - (((v508 ^ 0x29E356E55A5A7E71) - 0x69E356E58530D7E1) ^ ((v508 ^ 0x15A97035A46464B0)
                                                                            - 0x55A970357B0ECD20) ^ ((v508 ^ 0x3C4A26D02E051ED1) - 0x3C4A26D0F16FB741)));
  v543 = v531;
  *(_BYTE *)(v527 + STACK[0x69A0]) = *((_BYTE *)*(&off_1015B46D0 + (v531 ^ 0x132E)) + (HIBYTE(v529) ^ 0x22)) ^ 0xA1;
  *(_BYTE *)(v527 + STACK[0x6AB0]) = *((_BYTE *)*(&off_1015B46D0 + v531 - 4815)
                                     + (((unsigned __int16)(v529 ^ 0xF92B) >> 8) ^ 0xFELL)) ^ 0x79 ^ (*((_BYTE *)*(&off_1015B46D0 + v531 - 4815) + (((unsigned __int16)(v529 ^ 0xF92B) >> 8) ^ 0xFELL)) >> 1) & 0x7C;
  v544 = *((unsigned __int8 *)*(&off_1015B46D0 + v531 - 5707)
         + (((unsigned __int16)(v534 ^ 0xD25) >> 8) ^ ((((unsigned __int16)(v534 ^ 0xD25) >> 8) ^ 0xFFFFFF25)
                                                                      + 1) ^ ((((unsigned __int16)(v534 ^ 0xD25) >> 8) ^ 0xFFFFFFBE)
                                                                            + 156) ^ 0xDA)
         + 143);
  v545 = (1592800746
        - (LODWORD(STACK[0x69D0]) ^ 0xE3E903F4 | 0x5EF035EA)
        + (LODWORD(STACK[0x69D0]) ^ 0xE3E903F4 | 0xA10FCA15)) ^ 0x712B4A20;
  LODWORD(v518) = (((v535 ^ 0xD76EE3DF) + 680598561) ^ ((v535 ^ 0xC9CE9E71) + 909205903) ^ ((v535 ^ 0xD99B109A)
                                                                                          + 644149094))
                - 19224650;
  LODWORD(v538) = (v518 ^ 0xEE64D5CC) & (2 * (v518 & LODWORD(STACK[0xD94]))) ^ v518 & LODWORD(STACK[0xD94]);
  v546 = ((2 * (v518 ^ 0xEEE556C0)) ^ 0x4D0B269C) & (v518 ^ 0xEEE556C0) ^ (2 * (v518 ^ 0xEEE556C0)) & 0x2685934E;
  v547 = v546 ^ 0x22849142;
  v548 = (v546 ^ 0x1830A) & (4 * v538) ^ v538;
  LODWORD(v538) = ((4 * v547) ^ 0x9A164D38) & v547 ^ (4 * v547) & 0x2685934C;
  v549 = (v538 ^ 0x2040106) & (16 * v548) ^ v548;
  LODWORD(v538) = ((16 * (v538 ^ 0x24819246)) ^ LODWORD(STACK[0xD98])) & (v538 ^ 0x24819246) ^ (16 * (v538 ^ 0x24819246)) & 0x26859340;
  v550 = v549 ^ 0x2685934E ^ (v538 ^ 0x2001100E) & (v549 << 8);
  *(_BYTE *)(v528 + ((((2 * v545) | 0x10C41D00) - v545 - 140643968) ^ 0xFC94E07FLL)) = ((v544 >> 6) | (4 * v544)) ^ (((v544 >> 6) | (4 * v544)) >> 2) ^ (((v544 >> 6) | (4 * v544)) >> 1) ^ 0xE5;
  v551 = (((2 * (LODWORD(STACK[0x6A10]) ^ 0xD4C85492)) | 0xC64C06DC) - (LODWORD(STACK[0x6A10]) ^ 0xD4C85492) - 1663435630) ^ 0x232A056F;
  *(_BYTE *)(v528 + ((v551 - ((2 * v551) & 0x47459E52) + 597872425) ^ 0x705DF086)) = (*((_BYTE *)*(&off_1015B46D0 + v543 - 5739)
                                                                                        + (HIBYTE(v534) ^ 0x9ELL)
                                                                                        - 8) ^ 0xD)
                                                                                     - 16;
  v552 = v518 ^ (2
               * ((v550 << 16) & 0x26850000 ^ v550 ^ ((v550 << 16) ^ 0x134E0000) & (((v538 ^ 0x684830E) << 8) & 0x26850000 ^ 0x22040000 ^ (((v538 ^ 0x684830E) << 8) ^ 0x5930000) & (v538 ^ 0x684830E))));
  v553 = (LODWORD(STACK[0x6A60]) ^ 0xB4A20E8C)
       - 325813470
       - ((2 * (LODWORD(STACK[0x6A60]) ^ 0xB4A20E8C)) & 0xD9290E88)
       + 3106;
  *(_BYTE *)(v528
           + (((v553 & 0x85967BE0 ^ 0x810268A1) + (v553 ^ 0x6CB49346) - ((v553 ^ 0x6CB49346) & 0x85967BE0)) ^ 0x762F0C5ALL)) = (*((_BYTE *)*(&off_1015B46D0 + v543 - 4341) + (BYTE2(v529) ^ 0x92)) + 46) ^ 0xB8;
  v554 = (((v552 ^ 0xBB3FC9C5) + 43563037) ^ ((v552 ^ 0xCE1C7D25) + 2008747261) ^ ((v552 ^ 0xF44057F2) + 1306994220))
       + 1342015599;
  LODWORD(v518) = LODWORD(STACK[0x6910]) ^ (v554 < 0x88C21B3B);
  v555 = v554 < LODWORD(STACK[0x6AC0]);
  if ((_DWORD)v518)
    v555 = STACK[0x6910];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((54 * v555) ^ v543)))();
}

uint64_t sub_100B2A764@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  v2 = STACK[0x67C0];
  v3 = (LODWORD(STACK[0x67C0]) - 13501);
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6790]) ^ 0xC2F605BE;
  LODWORD(STACK[0x6A20]) = LODWORD(STACK[0x6780]) ^ 0x270AC0DA;
  LODWORD(STACK[0x69F0]) = LODWORD(STACK[0x67B0]) ^ 0x46306741;
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x67A0]) ^ 0x1E42A11A;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (v3 ^ 0x171E)))(135315459, a1, 1563545350, 2317618389, 4294967238, 65, a2 ^ 0x46588E26u, 11538176);
}

uint64_t sub_100B2A89C()
{
  int v0;

  v0 = STACK[0x6AA0];
  LODWORD(STACK[0xD4FC]) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 1571)))();
}

uint64_t sub_100B2A8C4()
{
  int v0;
  void (*v1)(unint64_t);

  v1 = (void (*)(unint64_t))STACK[0x5A40];
  ((void (*)(unint64_t))STACK[0x5A40])(STACK[0xD508]);
  v1(STACK[0xD520]);
  v1(STACK[0xD500]);
  v1(STACK[0xD4F0]);
  v1(STACK[0xD4E0]);
  v1(STACK[0xD530]);
  v1(STACK[0xD528] - 0x400367C8C4C8FF05);
  v1(STACK[0xD518] - 0x19FEB71C76E85E41);
  return ((uint64_t (*)(unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4257))
                                                            - (v0 ^ 0x6E7u)
                                                            + 5765))(STACK[0x6A90], 2069329108);
}

uint64_t sub_100B2A9F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;

  STACK[0xD1A8] = v7 - 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((37
                                          * ((((a7 ^ 0x9A1672B5) - 468775080) ^ ((a7 ^ 0x2F7F3FA9)
                                                                               + ((v8 - 770922387) & 0x2DF35177)
                                                                               + 1365651926) ^ (a6
                                                                                              + (a7 ^ 0x80E9272)
                                                                                              + 3083))
                                           - 1210527161 == a2)) ^ v8))
                            - 4))();
}

uint64_t sub_100B2AAD4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, char a5@<W4>, char a6@<W5>, unsigned int a7@<W8>)
{
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  _BYTE *v12;
  unsigned int v13;

  v11 = v7 < a2;
  v12 = (_BYTE *)(a1 + a7);
  *v12 ^= *(_BYTE *)(*(_QWORD *)(v10 + 8 * (v9 - 3488))
                   + ((((((_DWORD)v12 * v8) ^ (((_DWORD)v12 * v8) >> 16)) * v8) >> (v9 + a5)) & 0xFF0 | a7 & 0xF)
                   - 12) ^ ((((_BYTE)v12 * v8) ^ (((_DWORD)v12 * v8) >> 16)) * a6);
  v13 = a7 + 1;
  if (v11 == v13 > a4)
    v11 = v13 + a2 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v11 * a3) ^ v9)) - 4))();
}

uint64_t sub_100B2AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0xC768] -= 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0xCA38])(a1, a2, a3, a4, 4294967271);
}

uint64_t sub_100B2ABC8@<X0>(_DWORD *a1@<X5>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = v2 + 3053;
  a1[72] = a2;
  a1[71] = v3;
  v5 = (((a1[52] ^ 0xA6D259FE) + 1496163842) ^ ((a1[52] ^ 0x1524653) - 22169171) ^ ((a1[52] ^ 0x2AAD8BCA)
                                                                                  + ((v2 - 2218) ^ 0xD55273FA)))
     + 1992443840;
  v6 = v5 < 0xE994B359;
  v7 = a2 - 376130727 < v5;
  if (a2 > 0x166B4CA6 != v6)
    v7 = v6;
  if (v3 != -1926392729)
    v7 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8517 * v7) ^ v4)) - 8))();
}

uint64_t sub_100B2ACA0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x12D5)) - 12))();
}

uint64_t sub_100B2AD00()
{
  return ((uint64_t (*)(void))STACK[0x9E30])();
}

uint64_t sub_100B2AD18()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((92 * (STACK[0xDF80] == 0)) ^ (v0 + 12713))) - 4))();
}

uint64_t sub_100B2AD50@<X0>(_DWORD *a1@<X8>)
{
  int v1;

  *a1 = STACK[0xD540];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 12749)) - 4))();
}

uint64_t sub_100B2AD78()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 783)) - 8))();
}

uint64_t sub_100B2ADA8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xDFB0] == 0x5A72B636DA2414DCLL)
                                          * (((v0 - 16784011) & 0x47AABAB7) - 1185591444)) ^ (v0 + 11628)))
                            - 4))();
}

uint64_t sub_100B2AE14@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 0x5A72B636DA2414DCLL) = STACK[0xD540];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((2950 * (a1 < 0x4DFDC393)) ^ (a1 - 1185577528)))
                            - 98 * (a1 ^ 0x46AAB088)
                            + 4210))();
}

uint64_t sub_100B2AE88()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 783)) - 8))();
}

uint64_t sub_100B2AEBC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((25102 * (v0 + 168086220 >= (v1 + 3017))) ^ (v0 + 4465))))();
}

uint64_t sub_100B2AF08()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 3820) ^ (228 * (v0 != -1926392729))))
                            - ((((STACK[0x6508] + 1164) | 0xA84) - 1084) ^ (STACK[0x6508]
                                                                                          + 2768))))();
}

uint64_t sub_100B2AF54()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])(LODWORD(STACK[0xB0DC]));
  STACK[0x8EB0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((9154 * (((v1 == 0) ^ (v0 + 121)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100B2AFC0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = v0 & 0xFFFFFFFF961C6591;
  v2 = STACK[0x6AD8];
  STACK[0xADD8] = (((_DWORD)v1 - 1033) | 0x3001u) - 12437 + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ 0x21E8)) - 12))();
}

uint64_t sub_100B2B058()
{
  int v0;

  LODWORD(STACK[0xA534]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((LODWORD(STACK[0x2E00]) * (v0 == -1926392729)) ^ LODWORD(STACK[0x2E04])))
                            - 4))();
}

uint64_t sub_100B2B098()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x2710];
  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])((LODWORD(STACK[0x2710]) - 11150) ^ 0x8D2D9F78 ^ *(_DWORD *)STACK[0xAD58]);
  *(_QWORD *)STACK[0xAF30] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((397 * (v1 == 0)) ^ v0))
                            - (v0 - 9783)
                            + 4210))();
}

uint64_t sub_100B2B120()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3856)) - (v0 ^ 0xB30u) + 6970))(v1);
}

uint64_t sub_100B2B154()
{
  int v0;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * (int)(((STACK[0xB5C8] == 0x3032385379A144E6)
                                                   * ((14 * (v0 ^ 0x1A6B) + 1639344777) & 0x9E499576 ^ 0x1044)) ^ v0)))(43);
}

uint64_t sub_100B2B1C4@<X0>(int a1@<W8>)
{
  int v1;

  v1 = a1 + 2814;
  sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v1))(43);
}

uint64_t sub_100B2B1FC()
{
  return ((uint64_t (*)(void))STACK[0xB648])();
}

uint64_t sub_100B2B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 11636)) - (v6 + 8841) + 11684))(a1, a2, a3, a4, a5, a6, 3537203550, 3589933888);
}

uint64_t sub_100B2B2B8()
{
  return ((uint64_t (*)(void))STACK[0xA470])();
}

uint64_t sub_100B2B2D0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25935 * (STACK[0xA348] != 0)) ^ (v0 - 3847)))
                            - (v0 - 3847)
                            + 359))();
}

uint64_t sub_100B2B308@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  unint64_t v5;

  v5 = STACK[0x6AD8];
  STACK[0xD270] = (a5 + 17383) - 17758 + *(_QWORD *)(STACK[0x6AD8] + 8 * a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                                  + 8 * ((4811 * (a5 != 1281575153)) ^ (a5 + 3392))))(83, a1, 4169, a2, a3, a4, 14990);
}

uint64_t sub_100B2B3C0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0xA348] != 0) * ((v0 - 4081) ^ 0x609D)) ^ (v0 - 3847)))
                            - 8))();
}

uint64_t sub_100B2B3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 ^ 0x7A7C ^ (v6 - 86218952) & 0x523FBEB))
                                                                                                - 12))(2959752912, 216, 1335218521, 12646, 5750, a6, 26365);
}

uint64_t sub_100B2B4A4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v2 > v3 + v1 - 0x63F92BFB397FE509) * ((v0 - 19788) ^ 0x1B ^ (407 * (v0 ^ 0x63A7)))) | v0)))();
}

uint64_t sub_100B2B4FC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v6 + (v4 ^ 0x481649E0) + 2890) ^ ((v4 ^ 0xB9C61A24) - 1963537366) ^ ((v5 ^ 0x178AE24F) + (v4 ^ 0x24BA221C)))
                                 - 904947974 != a1)
                                * a4) ^ v5)))();
}

uint64_t sub_100B2B578(unsigned int a1, uint64_t a2, unsigned int a3, int a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;

  v11 = v7 < a1;
  *(_BYTE *)(v10 + v6 + v5) = *(_BYTE *)(v9 + v6);
  v12 = v6 + 1;
  if (v11 == v12 > ((98 * (v8 ^ a5)) ^ a3))
    v11 = v12 + a1 < v7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v11 * a4) ^ v8)))();
}

uint64_t sub_100B2B5D8()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((v0 ^ 0xD56A71D8) == ((v1 - 1123499587) & 0x42F76D43 ^ 0x4543))
                                * ((v1 - 1484) ^ 0x1069)) ^ v1)))();
}

uint64_t sub_100B2B62C(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ ((v2 < 8) * a2)))
                            - ((43 * (v3 ^ 0x4521u)) ^ 0x107ALL)))();
}

uint64_t sub_100B2B668()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (v1 ^ 0x544B ^ (4
                                              * (v2
                                                             - (v3
                                                              + v0)
                                                             - (unint64_t)(((v1 ^ 0x544B) - 1772009481) ^ 0x966138C0)
                                                             + 0x63F92BFB39804548 >= (unint64_t)(((v1 ^ 0x544B) - 1772009481) & 0x699EB776)
                                                                                     - 4182)))))();
}

uint64_t sub_100B2B6D4()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((((v1 - 24559) | 0x1026) ^ 0x10C0) * (v0 < 0x20)) ^ v1))
                            - (((v1 - 24111) | 0x1082u) ^ 0x129ALL)))();
}

uint64_t sub_100B2B728()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B2B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v12 = ((40 * (v8 ^ a5)) ^ (unint64_t)(a4 - 146)) & v11;
  *(_QWORD *)(v10 + v12 + v6) = *(_QWORD *)(v9 + v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 0) * a6) ^ v8)) - 4))();
}

uint64_t sub_100B2B7B0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((a1 - 146) ^ 0x1723) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_100B2B7D8()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v0 + 18073)))(-5693, 497, 1560, 18056);
}

uint64_t sub_100B2B804(uint64_t a1, int a2, unsigned int a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v11 = (~(_DWORD)v7 + v5);
  v12 = *(_OWORD *)(v9 + v11 - 15);
  v13 = *(_OWORD *)(v9 + v11 - 31);
  v14 = v10 + v11 + v4;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v7 + a1 + ((v8 - 49) | a3) != v6) * a2) ^ (v8 + a4))))();
}

uint64_t sub_100B2B858()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 + 109 * (v2 ^ 0x1675) + 2049) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_100B2B88C()
{
  char v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 ^ (14860 * ((v0 & 0x18) != 0)))))();
}

uint64_t sub_100B2B8C4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 11047)) - 8))();
}

uint64_t sub_100B2B8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v11 + (v9 - 1) + v7) = *(_BYTE *)(v10 + (v9 - 1));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == 1) * a7) ^ v8)) - 8))();
}

uint64_t sub_100B2B90C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_100B2B928()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3059)) - ((12 * (v0 ^ 0x12E4u)) ^ 0x1ED4)))();
}

uint64_t sub_100B2B964()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((397
                                          * ((((v1 - (((((v0 + 1210241322) | 0x4410E20) - 1281617324) ^ 0x8D2D65F9) + v0)) | (((((v0 + 1210241322) | 0x4410E20) - 1281617324) ^ 0x8D2D65F9) + v0 - v1)) & 0x80000000) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100B2B9E0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  unsigned int v2;

  *(_DWORD *)STACK[0x43E8] = *(_DWORD *)STACK[0x43E8] - 4213 + ((v1 - 1281617408) | 0x54);
  *(_QWORD *)STACK[0x8678] = a1;
  *(_DWORD *)STACK[0xD008] = STACK[0xB604];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v1 ^ 0x4C63E0FA ^ (9068 * (v1 >= v2)))) - 12))();
}

uint64_t sub_100B2BA64()
{
  return ((uint64_t (*)(void))STACK[0xB3C8])();
}

uint64_t sub_100B2BA74()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((LODWORD(STACK[0x2A08]) * v0) ^ LODWORD(STACK[0x2A04])))
                            - 4))();
}

uint64_t sub_100B2BAA4()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;

  v0 = STACK[0x2170];
  v1 = (((LODWORD(STACK[0xCF00]) ^ 0xCAB4E7CB) + 894113845) ^ ((LODWORD(STACK[0xCF00]) ^ 0xF94C4791)
                                                             + ((v0 - 7122) ^ 0x6B3B482)) ^ (((v0 - 1107202369) & 0x41FE78F7 ^ 0x412ADBB5)
                                                                                           + (LODWORD(STACK[0xCF00]) ^ 0xBED5343D)))
     - 597387785;
  v2 = (v1 ^ 0x38EAFF73) & (2 * (v1 & 0xB0C8FE73)) ^ v1 & 0xB0C8FE73;
  v3 = ((2 * (v1 ^ 0x18EB8FB3)) ^ 0x5046E380) & (v1 ^ 0x18EB8FB3) ^ (2 * (v1 ^ 0x18EB8FB3)) & 0xA82371C0;
  v4 = v3 ^ 0xA8211040;
  v5 = (v3 ^ 0x28026180) & (4 * v2) ^ v2;
  v6 = ((4 * v4) ^ 0xA08DC700) & v4 ^ (4 * v4) & 0xA82371C0;
  v7 = (v6 ^ 0xA0014100) & (16 * v5) ^ v5;
  v8 = ((16 * (v6 ^ 0x82230C0)) ^ 0x82371C00) & (v6 ^ 0x82230C0) ^ (16 * (v6 ^ 0x82230C0)) & 0xA82371C0;
  v9 = v7 ^ 0xA82371C0 ^ (v8 ^ 0x80231000) & (v7 << 8);
  v10 = v1 ^ (2
            * ((v9 << 16) & 0x28230000 ^ v9 ^ ((v9 << 16) ^ 0x71C00000) & (((v8 ^ 0x280061C0) << 8) & 0x28230000 ^ 0x8020000 ^ (((v8 ^ 0x280061C0) << 8) ^ 0x23710000) & (v8 ^ 0x280061C0))));
  LODWORD(STACK[0x96F4]) = v10 ^ 0x2DA38994;
  v11 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v10 ^ 0xA08E1DF3);
  STACK[0x7048] = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6670 * (v11 != 0)) ^ v0)) - 4))();
}

uint64_t sub_100B2BCDC(_BYTE *a1)
{
  int v1;
  __int16 v2;

  *a1 = 1;
  v2 = (LOWORD(STACK[0xCF00]) ^ 0x9467)
     + (((v1 + 2496) | 0x850) ^ 0x5D59)
     - ((2 * (LOWORD(STACK[0xCF00]) ^ 0x9467)) & 0x8748);
  a1[1] = HIBYTE(v2) ^ 0x43;
  a1[2] = v2 ^ 0xA4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x1B0D)) - 4))();
}

uint64_t sub_100B2BD7C()
{
  *(_DWORD *)(STACK[0xB7E8] - 0xB580E1F2621E52FLL) = STACK[0xE414];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 337)) - 12))();
}

uint64_t sub_100B2BDD0(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8]
                                                     + 8
                                                     * (int)(((((STACK[0x6508] - 1902) | 0x411) ^ LODWORD(STACK[0x2A0C]))
                                                            * v1) ^ (STACK[0x6508] + 368))))(a1, 134479872);
}

uint64_t sub_100B2BE38()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((28981 * (*(_BYTE *)(STACK[0xC2A8] + 28) == 1)) ^ (STACK[0x6508] + 556)))
                            - 8))();
}

uint64_t sub_100B2C03C@<X0>(unsigned int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((5515 * (a1 < 0xACD8FFBE)) ^ (a1 + 1450474922)))
                            - 8))();
}

uint64_t sub_100B2C244()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  int v7;

  v2 = v0 ^ ((v1 - 2277) | 0x418) ^ 0x8D2D997E;
  v3 = (uint64_t (*)(uint64_t))STACK[0x5510];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5510])(v2);
  STACK[0xA570] = v4;
  v5 = v3(v2);
  STACK[0xA558] = v5;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 1;
  v7 = !v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((21800 * v7) ^ v1)))();
}

uint64_t sub_100B2C2BC(_BYTE *a1)
{
  __int16 v1;
  int v2;
  _BYTE *v3;
  __int16 v4;
  __int16 v5;
  int v6;

  v4 = ((v1 ^ 0xB434) + 30658) ^ ((v1 ^ 0xA82E) + 27612) ^ ((v1 ^ (v2 + 13794) ^ 0xCFB5)
                                                          + ((v2 + 19319) & 0xEBBB ^ 0x290));
  v5 = v4 - ((2 * v4 + 20692) & 0x8748) - 5106;
  a1[1] = HIBYTE(v5) ^ 0x43;
  *a1 = 3;
  a1[2] = v5 ^ 0xA4;
  *v3 = 1;
  v6 = STACK[0xCC78];
  v3[1] = BYTE1(LODWORD(STACK[0xCC78])) ^ 0x94;
  v3[2] = v6 ^ 0x67;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 + 13794) | (2 * (STACK[0xC460] + 0x59E39C8A742A89B4 <= (unint64_t)(v3 + 0x59E39C8A742A89B7))))) - 12))(422647530, 1786908673, 2508054041, 23157910, 4271809386, 3723459944, 4294948777, 3872319766);
}

uint64_t sub_100B2C450@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * (LODWORD(STACK[0xCC78]) != -1926392729)) | (32
                                                                                           * (LODWORD(STACK[0xCC78]) != -1926392729))) ^ a1))
                            - (((a1 - 14547) | 0x1A0u) ^ 0x11E2)))();
}

uint64_t sub_100B2C4A0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v7 = (((v1 ^ 0xAB0824DE) + 1425529634) ^ ((v1 ^ 0x9807CF71) + 1744318607) ^ (((a1 - 14131) ^ v1 ^ 0xBE226E2E)
                                                                             + 1105035320))
     - 1436039463;
  v8 = (v7 ^ 0xE085ED2D) & (2 * (v7 & 0xE2C5CD8D)) ^ v7 & 0xE2C5CD8D;
  v9 = ((2 * (v7 ^ 0x2187ED35)) ^ 0x86844170) & (v7 ^ 0x2187ED35) ^ (2 * (v7 ^ 0x2187ED35)) & 0xC34220B8;
  v10 = v9 ^ 0x41422088;
  v11 = (v9 ^ LODWORD(STACK[0x30F0])) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xD0882E0) & v10 ^ (4 * v10) & 0xC34220B8;
  v13 = (v12 ^ 0x10000A8) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0xC2422018)) ^ 0x34220B80) & (v12 ^ 0xC2422018) ^ (16 * (v12 ^ 0xC2422018)) & 0xC34220B0;
  v15 = v13 ^ 0xC34220B8 ^ (v14 ^ (v2 + 47)) & (v13 << 8);
  v16 = v7 ^ (2
            * ((v15 << 16) & 0x43420000 ^ v15 ^ ((v15 << 16) ^ 0x20B80000) & (((v14 ^ LODWORD(STACK[0x30F4])) << 8) & 0x43420000 ^ 0x1420000 ^ (((v14 ^ LODWORD(STACK[0x30F4])) << 8) ^ 0x42200000) & (v14 ^ LODWORD(STACK[0x30F4])))));
  *(_BYTE *)(v6 + (((v1 ^ 0x352003CF) - 891290575) ^ ((v1 ^ 0xE1185A5F) + 518497697) ^ ((v1 ^ v3) + v4)) - 1926392727) = *(_BYTE *)(STACK[0xC460] + (v16 ^ 0x64418CFD));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((4 * ((v16 ^ v5) != -1926392729)) | (32
                                                                                            * ((v16 ^ v5) != -1926392729)) | a1))
                            - 4))();
}

uint64_t sub_100B2C6D4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((23597
                                * (*(unsigned __int8 *)(v1 + 28) == (((v0 - 22) ^ 0x38) + v0 + 51))) ^ v0)))();
}

uint64_t sub_100B2C710()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v4 = STACK[0xCC78];
  *(_BYTE *)(v2
           + (((v4 ^ 0xD45A2F84) + 732287100) ^ ((v4 ^ 0xD2E62B0E) + 756667634) ^ (((((v0 + 1616793118) & 0x9FA195F7)
                                                                                   - 1953399033) ^ v4)
                                                                                 + 1953394451))
           - 1926392726) = 4;
  *(_BYTE *)(v2
           + (((v4 ^ 0xEA54B5E8) + 363547160) ^ ((v4 ^ 0xE6A122DB) + 425647397) ^ ((v4 ^ 0x81D80354) + 2116549804))
           - 1926392725) = 0;
  *(_BYTE *)(v2
           + (((v4 ^ 0xEA54B5E8) + 363547160) ^ ((v4 ^ 0xE6A122DB) + 425647397) ^ ((v4 ^ 0x81D80354) + 2116549804))
           - 1926392724) = 20;
  v5 = v1 + 8 <= v2
               + (unint64_t)((((v4 ^ 0x9FD78099) + v3) ^ ((v4 ^ 0xF1A6DA74) + 240723340) ^ ((v4 ^ 0xE35CCE8A)
                                                                                                 + 480457078))
                                  - 1926392723);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 | (32 * v5)) ^ v0)) - 4))();
}

uint64_t sub_100B2C880@<X0>(int a1@<W8>)
{
  int v1;
  _BYTE *v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;

  *(_BYTE *)(v5 + (v1 + 25)) = v4[27];
  *(_BYTE *)(v5 + (v1 + 24)) = v4[26];
  *(_BYTE *)(v5 + (v1 + 23)) = v4[25];
  *(_BYTE *)(v5 + (v1 + 22)) = v4[24];
  *(_BYTE *)(v5 + (v3 - 1926396943 + a1 - 1229 + 882)) = v4[23];
  *(_BYTE *)(v5 + (v1 + 20)) = v4[22];
  *(_BYTE *)(v5 + (v1 + 19)) = v4[21];
  *(_BYTE *)(v5 + (v1 + 18)) = v4[20];
  *(_BYTE *)(v5 + (v1 + 17)) = v4[19];
  *(_BYTE *)(v5 + (v1 + 16)) = v4[18];
  *(_BYTE *)(v5 + (v1 + 15)) = v4[17];
  *(_BYTE *)(v5 + (v1 + 14)) = v4[16];
  *(_BYTE *)(v5 + (v1 + 13)) = v4[15];
  *(_BYTE *)(v5 + (v1 + 12)) = v4[14];
  *(_BYTE *)(v5 + (v1 + 11)) = v4[13];
  *(_BYTE *)(v5 + (v1 + 10)) = v4[12];
  *(_BYTE *)(v5 + (v1 + 9)) = v4[11];
  *(_BYTE *)(v5 + (v1 + 8)) = v4[10];
  *(_BYTE *)(v5 + (v1 + 7)) = v4[9];
  *v2 = v4[8];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B2C990(int a1, int a2, int a3, int a4, int a5, unsigned int a6, int a7, int a8)
{
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  _BOOL4 v14;
  _BOOL4 v15;

  v12 = v8 + v10;
  v13 = v11
      + (((LODWORD(STACK[0xCC78]) ^ a4) + a5) ^ ((LODWORD(STACK[0xCC78]) ^ a8) + a1) ^ (((((v9 + a7) | 0x1124) + a2) ^ LODWORD(STACK[0xCC78]))
                                                                                      + a3))
      + 1930;
  v14 = v13 < v10;
  v15 = v12 < v13;
  if (v8 > a6 != v14)
    v15 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4449 * v15) ^ v9)) - 4))();
}

uint64_t sub_100B2CA18()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v0 + 3) = *(_BYTE *)(STACK[0xC460] + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 337)) - 12))();
}

uint64_t sub_100B2CA58@<X0>(int a1@<W8>)
{
  int v1;
  _BYTE *v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;

  *v2 = v4[8];
  *(_BYTE *)(v5 + ((7 * (a1 ^ 0x1039)) ^ 0x8D2D9977) + v3) = v4[9];
  *(_BYTE *)(v5 + (v1 + 8)) = v4[10];
  *(_BYTE *)(v5 + (v1 + 9)) = v4[11];
  *(_BYTE *)(v5 + (v1 + 10)) = v4[12];
  *(_BYTE *)(v5 + (v1 + 11)) = v4[13];
  *(_BYTE *)(v5 + (v1 + 12)) = v4[14];
  *(_BYTE *)(v5 + (v1 + 13)) = v4[15];
  *(_BYTE *)(v5 + (v1 + 14)) = v4[16];
  *(_BYTE *)(v5 + (v1 + 15)) = v4[17];
  *(_BYTE *)(v5 + (v1 + 16)) = v4[18];
  *(_BYTE *)(v5 + (v1 + 17)) = v4[19];
  *(_BYTE *)(v5 + (v1 + 18)) = v4[20];
  *(_BYTE *)(v5 + (v1 + 19)) = v4[21];
  *(_BYTE *)(v5 + (v1 + 20)) = v4[22];
  *(_BYTE *)(v5 + (v1 + 21)) = v4[23];
  *(_BYTE *)(v5 + (v1 + 22)) = v4[24];
  *(_BYTE *)(v5 + (v1 + 23)) = v4[25];
  *(_BYTE *)(v5 + (v1 + 24)) = v4[26];
  *(_BYTE *)(v5 + (v1 + 25)) = v4[27];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B2CB74()
{
  int v0;
  int v1;

  LODWORD(STACK[0x95B8]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x1AF9)) - 4))();
}

uint64_t sub_100B2CD7C@<X0>(int a1@<W8>)
{
  char v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((16948
                                * ((v1 & 0xF ^ 0x104170B | (a1 + 1939998816)) - (v1 & 0xF ^ 0x104170B | 0x8C5DD8A2) != -431466577)) ^ a1)))();
}

uint64_t sub_100B2CDE0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B2CE78()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int8x16_t *v9;
  uint64_t v10;
  _BOOL4 v11;

  v7 = STACK[0xC768];
  STACK[0xC768] += 32;
  v8 = 1655432393 * ((-320464143 - ((v6 - 240) | 0xECE61AF1) + ((v6 - 240) | 0x1319E50E)) ^ 0xEC3AE470);
  LODWORD(STACK[0x1D360]) = (v4 - 7644) ^ v8;
  LODWORD(STACK[0x1D350]) = v8
                          - 1293085857
                          + (((v4 ^ 0x5DD1 ^ v2 ^ 0x9123FB35) + 1859917961) ^ ((v2 ^ 0xF6E8D861) + 152512415) ^ (((v4 + 2079567972) & 0x840C1E7E ^ 0x151944F9) + (v2 ^ 0xEAE6AB71)));
  v9 = (int8x16_t *)((char *)&STACK[0x10000] + v7);
  v9->i64[0] = 0xB7292169E83F1518;
  v9->i64[1] = 0xABEB1F903FEE271FLL;
  v9[1] = veorq_s8(*(int8x16_t *)((char *)&STACK[0x10000] + v7), (int8x16_t)xmmword_101507290);
  STACK[0x1D370] = v0;
  STACK[0x1D368] = v1;
  STACK[0x1D358] = (unint64_t)&STACK[0x10000] + v7 + 16;
  v10 = ((uint64_t (*)(uint64_t))((char *)*(&off_1015B46D0 + (v4 ^ 0x474F)) - 8))(v6 - 240);
  v11 = LODWORD(STACK[0x1D364]) != v5 + 2220;
  STACK[0xC768] -= 32;
  if (v2 == v3)
    v11 = 1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((53 * v11) ^ v4)) - 12))(v10);
}

uint64_t sub_100B2D044()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B2D068()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6217)) - 4))();
}

uint64_t sub_100B2D094()
{
  int v0;
  int v1;

  LODWORD(STACK[0xDFF0]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((57 * (STACK[0x9F08] == 0)) ^ (v0 + 12642))) - 4))();
}

uint64_t sub_100B2D0D8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12651)) - 4))(v1);
}

uint64_t sub_100B2D0FC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (((((v0 - 1056399484) & 0x3EF772B7) - 8839)
                                                                 * (v1 == -1926392729)) ^ (v0 + 11343)))
                                                   - 8))(STACK[0x7048]);
}

uint64_t sub_100B2D150(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t (*v3)(void);

  *(_QWORD *)STACK[0x99E8] = a1;
  *(_DWORD *)STACK[0xC250] = v2;
  *(_DWORD *)STACK[0xB080] = *(_DWORD *)STACK[0x49E8];
  v3 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 - 13719 + ((v1 + 10651) | 0x142)));
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 4103)) - 12;
  return v3();
}

uint64_t sub_100B2D214@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 ^ (111 * (a1 != 0))))
                            - ((a2 - 4668) ^ (a2 + 1736719684) & 0x987BB07F ^ 4)))();
}

uint64_t sub_100B2D260()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4668)) - 4))(v1);
}

uint64_t sub_100B2D288()
{
  int v0;

  *(_QWORD *)STACK[0x99E8] = 0;
  *(_DWORD *)STACK[0xC250] = -1926392729;
  *(_DWORD *)STACK[0xB080] = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13915 * (v0 - 191282599 > ((4685 * (v0 ^ 0x1074)) ^ 0x61CC6AB1u))) ^ (v0 + 2650)))
                            - 4))();
}

uint64_t sub_100B2D324()
{
  unint64_t v0;
  unint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ ((v1 <= v0) | (8 * (v1 <= v0)))))
                            - ((v2 + 1789936144) & 0x954FF7ED ^ 0x5644)))();
}

uint64_t sub_100B2D364()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((26767
                                * ((((v1 ^ 0x268FF44C) - 646968396) ^ ((v1 ^ LODWORD(STACK[0x1E30])) - 1109887929) ^ ((v1 ^ 0xE985EB92) + 377099374)) != (((v0 ^ 0x1703EB55) - 386132821) ^ ((v0 ^ LODWORD(STACK[0x1E34])) - 902525158) ^ ((v0 ^ 0xAFE50FD4) + 1343935008 + 86 * ((v2 - 2140774533) & 0x7F99CF5E ^ 0x4B2D) + 3478)))) ^ (v2 + 7628))))();
}

uint64_t sub_100B2D458()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v2 - 15014) ^ 0x30D9 ^ ((v2 - 10972) | 0x93))
                                          * ((~v1 + v0) > 6)) ^ v2))
                            - 8))();
}

uint64_t sub_100B2D4B4(unsigned int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((17075 * ((((v4 + 10825) ^ (a1 > v2 + v1 - v3 - 1)) & 1) == 0)) ^ v4))
                            - (((v4 - 4253) | 0x40u) ^ 0x1072)))();
}

uint64_t sub_100B2D514()
{
  unint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (1928 * (v0 > 0x1F))))
                            - 2 * ((v1 - 15014) ^ 0x36E4u)
                            + 19740))();
}

uint64_t sub_100B2D558(unsigned int a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((124 * (a2 ^ 0x4D6B)) ^ 0x264B) * (a1 < 0x1F)) ^ a2))
                            - 12))();
}

uint64_t sub_100B2D598()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B2D5E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, int a6, unsigned int a7)
{
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  *(_QWORD *)(v9 + v7) = *(_QWORD *)(v8 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * a5) ^ v11)) - (((v11 + a6) | a7) ^ a4)))();
}

uint64_t sub_100B2D620(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((149
                                          * ((((((v2 - a1) | (unint64_t)(a1 - v2)) >> 63) ^ (v1 - 1)) & 1) == 0)) ^ v1))
                            - 4))();
}

uint64_t sub_100B2D660()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((24140 * (STACK[0xC460] != 0)) ^ (STACK[0x6508] + 1863)))
                            - 8))();
}

uint64_t sub_100B2D698()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B2D6B4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((14900 * (STACK[0xA570] != 0)) ^ LODWORD(STACK[0x22CC])))
                            - 4))();
}

uint64_t sub_100B2D6F0()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 19304;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B2D718()
{
  int v0;

  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((508
                                                                      * (v0 == (((STACK[0x6508] - 4094) | 0x2204) ^ 0x8D2DB61B))) ^ (STACK[0x6508] + 13938)))
                                                   - 71 * (STACK[0x6508] ^ 0x10E9)
                                                   + 11281))(STACK[0xA558]);
}

uint64_t sub_100B2D788@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_QWORD *)STACK[0x99E8] = a1;
  *(_DWORD *)STACK[0xC250] = STACK[0x95B8];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a2))();
}

uint64_t sub_100B2D7D4()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((7
                                          * (((((v0 - 13595) ^ 0xA75C79D8) + (v2 ^ 0x58A3A703)) ^ ((v2 ^ 0x6D984FE6)
                                                                                                 - 1838698470) ^ (((v0 - 1206507966) ^ v2) + 1206485886)) == (((v1 ^ LODWORD(STACK[0x1E38])) - 275273768) ^ ((v1 ^ 0x31A65179) - 832983417) ^ ((v1 ^ 0xACE39D36) + 1394369226)))) | v0))
                            - 8))();
}

uint64_t sub_100B2D8A8()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (26086 * (v0 > 7))))
                            - (((v1 ^ 0x6E8Eu) - 16181) ^ 0x1072)))();
}

uint64_t sub_100B2D8F4()
{
  uint64_t v0;
  int v1;
  int v2;
  _BOOL4 v4;

  v4 = (v2 ^ 0x72D26B98u) < (int)v0 - 1 || v0 - 1 > (((v1 - 3237) | 0x88u) ^ 0xFFFFBC71uLL);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((127 * ((((v1 - 3237) ^ v4) & 1) == 0)) ^ v1)))();
}

uint64_t sub_100B2D958()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((51 * (v1 - v2 < ((v0 + 3052) ^ 0x4F5AuLL))) ^ v0))
                            - 12))();
}

uint64_t sub_100B2D998()
{
  unsigned int v0;
  int v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((6438
                                          * (((v0 < 0x20) ^ (43 * (((v1 - 22) | v2) ^ 7) + 1)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100B2D9F0()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v0 + 11185)))(26283, 10872, 14894);
}

uint64_t sub_100B2DA18(int a1, unsigned int a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;

  v10 = (v6 + v3);
  v11 = *(_OWORD *)(v9 + v10);
  v12 = *(_OWORD *)(v9 + v10 + 16);
  v13 = (_OWORD *)(v8 + v10);
  *v13 = v11;
  v13[1] = v12;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v5 ^ a2 ^ a3) + v6 == v4) * a1) ^ v7)))();
}

uint64_t sub_100B2DA54()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((26418 * (v1 != v0)) ^ v2)))();
}

uint64_t sub_100B2DA74()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((54
                                          * ((((290 * (v1 ^ 0x3A48)) ^ 0x4F54) & v0) != ((290 * (v1 ^ 0x3A48u)
                                                                                        + 1731961779) & STACK[0x640] ^ 0x1076))) ^ (290 * (v1 ^ 0x3A48))))
                            - 8))();
}

uint64_t sub_100B2DAE4()
{
  unsigned int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8]
                                                     + 8
                                                     * (int)((11605 * (v0 <= 3303 * (v0 ^ 0xF40DA166) - 153535944)) ^ (v0 + 200436347))))(27572, 70);
}

uint64_t sub_100B2DB48(int a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + (v4 + v2)) = *(_QWORD *)(v8 + (v4 + v2));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((((v5 - 1717) | a2) ^ v6) + v4 == v3) * a1) ^ v5)))();
}

uint64_t sub_100B2DB80()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (355 * (v1 != v0)))) - (v2 ^ 0x3030u) + 4210))();
}

uint64_t sub_100B2DBB4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 19428)) - 12))();
}

uint64_t sub_100B2DBCC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + (v2 + v1)) = *(_BYTE *)(v5 + (v2 + v1));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7676 * (v2 + 1 != v0)) ^ (v3 + 12592))) - 12))();
}

uint64_t sub_100B2DC08(uint64_t a1)
{
  int v1;
  char v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((a1 == 0) ^ (((v1 + 94) & (v2 - 43)) + 1)) & 1)
                                * ((v1 - 7075) ^ 0x4D6)) ^ v1)))();
}

uint64_t sub_100B2DC54()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7075)))(v1);
}

uint64_t sub_100B2DC78@<X0>(int a1@<W8>)
{
  *(_QWORD *)STACK[0x99E8] = 0;
  *(_DWORD *)STACK[0xC250] = -1926392729;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 4614)))();
}

uint64_t sub_100B2DCCC()
{
  int v0;
  int v1;

  *(_DWORD *)STACK[0xB080] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0x811u) + 9366))();
}

uint64_t sub_100B2DD00@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)STACK[0x4548] != 0)
                                          * ((a1 - 5143) ^ (a1 - 1938925468) & 0x73919377 ^ 0x80)) ^ a1))
                            - 12))();
}

uint64_t sub_100B2DD54()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = 2142736129
     * ((0xC7A5EED3A2287DF1 - ((v2 - 240) | 0xC7A5EED3A2287DF1) + STACK[0x29F8]) ^ 0x454119203E8F1607);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v4;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v4;
  STACK[0x1D350] = v0;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (v1 ^ 0x3419 ^ (((v1 ^ 0xF4D4A13D) == 1754652920)
                                                                      * (((2 * v1) ^ 0x3170) + 23909))))
                                          - 12))(v5);
}

uint64_t sub_100B2DE30()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 ^ 0x3632) + 8220)) - 12))((v0 & 0x1FFFFFFE0) - 32);
}

uint64_t sub_100B2DE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v13 = *(_OWORD *)(v12 + v10 - 31);
  v14 = v11 + v10;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 + v10 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a1 == 0) * a6) ^ v9))
                                          - (((v8 ^ a8) * a5) ^ a7)))(a1 - 32);
}

uint64_t sub_100B2DEC4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 ^ (3947 * (v2 != v3))))
                            - ((a2 + 795961776) & 0xD08E60DB ^ 0x20DBLL)))();
}

uint64_t sub_100B2DF08(int a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((a1 - 1740956005) & 0x67C4E6D5 ^ 0x265CLL) & v1) != 0)
                                          * (((2 * a1) ^ 0x51D0) + 20568)) ^ a1))
                            - 4))();
}

uint64_t sub_100B2DF5C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 10687)))();
}

uint64_t sub_100B2DF70()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = v2 - 1;
  *(_BYTE *)(v3 + (v5 + v0)) = *(_BYTE *)(v4 + (v5 + v0));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((59 * (v5 != 0)) ^ (v1 + 10648))))();
}

uint64_t sub_100B2DFA8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 3073)))();
}

uint64_t sub_100B2DFC4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  v2 = 9 * (v0 ^ 0x1213);
  v3 = v0 + 12;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12));
  v6 = v0 + 427180632;
  v7 = 2142736129
     * ((0xDAC1D8BE73C0D9FCLL - ((v1 - 240) | 0xDAC1D8BE73C0D9FCLL) + STACK[0x3880]) ^ 0x58252F4DEF67B20ALL);
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v5 ^ v7;
  LODWORD(STACK[0x1D358]) = v6 ^ v7;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (v3 ^ 0x2804 ^ (23 * (*(_DWORD *)STACK[0x4D38] > (v2 ^ 0x158D)))))
                                          - 8))(v8);
}

uint64_t sub_100B2E09C@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = a1 != 1 || *(_QWORD *)STACK[0x4CD8] == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19798 * ((((v1 + 8947) ^ v3) & 1) == 0)) ^ v1)) - 4))();
}

uint64_t sub_100B2E0E4()
{
  unint64_t v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int32x2_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0xBC968BC));
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v3 ^ 0xBC968BCu) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3 ^ 0xBC968BCu;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEEF8] = 0;
  STACK[0xEF00] = v0;
  v12 = 16777619 * ((197748924 * v11 + 7) ^ (197748924 * v11)) % 7;
  v13 = 16777619 * ((197748924 * v11 + 6) ^ (197748924 * v11)) % 6;
  v14 = 16777619 * ((197748924 * v11 + 5) ^ (197748924 * v11)) % 5;
  v15 = 16777619 * ((197748924 * v11 + 3) ^ (197748924 * v11)) % 3;
  v16 = vdup_n_s32(197748924 * v11);
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v12) = STACK[0xEEFF];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v13) = STACK[0xEEFE];
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v14) = STACK[0xEEFD];
  v20 = STACK[0xEEF8];
  LOBYTE(STACK[0xEEF8]) = STACK[0xEEFC];
  v21 = *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEEF8] | v15) = STACK[0xEEFB];
  v22.i32[0] = v16.i32[0];
  v22.i32[1] = 197748924 * v11 + 1;
  LOBYTE(STACK[0xEEFF]) = v17;
  LOBYTE(STACK[0xEEFE]) = v18;
  LOBYTE(STACK[0xEEFD]) = v19;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v16), (int8x8_t)v16);
  LOBYTE(STACK[0xEEFC]) = v20;
  LOBYTE(STACK[0xEEFB]) = v21;
  v24 = STACK[0xEEF9];
  LOBYTE(STACK[0xEEFA]) = STACK[0xEEF8];
  LOWORD(STACK[0xEEF8]) = v24;
  STACK[0xEEF8] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEEF8], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEF00];
  v26 = (197748924 * STACK[0xEF00]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 32);
  v40 = 3;
  do
  {
    v41 = 8 * v40;
    v42 = 8 * (16777619 * ((v26 + (_DWORD)v40) ^ v26) % v40);
    v43 = *(_QWORD *)(v25 + v42) ^ *(_QWORD *)(v25 + 8 * v40);
    *(_QWORD *)(v25 + v41) = v43;
    v44 = *(_QWORD *)(v25 + v42) ^ v43;
    *(_QWORD *)(v25 + v42) = v44;
    *(_QWORD *)(v25 + v41) = *(_QWORD *)(v25 + 8 * v40) ^ v44;
    v45 = v40-- + 1;
  }
  while (v45 > 2);
  v46 = *((_BYTE *)&STACK[0xEF00] + v12);
  *((_BYTE *)&STACK[0xEF00] + v12) = STACK[0xEF07];
  LOBYTE(STACK[0xEF07]) = v46;
  v47 = *((_BYTE *)&STACK[0xEF00] + v13);
  *((_BYTE *)&STACK[0xEF00] + v13) = STACK[0xEF06];
  LOBYTE(STACK[0xEF06]) = v47;
  v48 = *((_BYTE *)&STACK[0xEF00] + v14);
  *((_BYTE *)&STACK[0xEF00] + v14) = STACK[0xEF05];
  LOBYTE(STACK[0xEF05]) = v48;
  v49 = STACK[0xEF00];
  LOBYTE(STACK[0xEF00]) = STACK[0xEF04];
  v50 = *((_BYTE *)&STACK[0xEF00] + v15);
  *((_BYTE *)&STACK[0xEF00] + v15) = STACK[0xEF03];
  LOBYTE(STACK[0xEF04]) = v49;
  LOBYTE(STACK[0xEF03]) = v50;
  v51 = STACK[0xEF01];
  LOBYTE(STACK[0xEF02]) = STACK[0xEF00];
  LOWORD(STACK[0xEF00]) = v51;
  STACK[0xEF00] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEF00], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x4CD8] = STACK[0xEF00] ^ STACK[0xEEF8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v1) - (v1 ^ 0x1589)))();
}

uint64_t sub_100B2E4EC@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;

  *v2 = a1 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((3 * (v1 ^ 0x3D07u)) ^ 0x108BLL)))();
}

uint64_t sub_100B2E518()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = STACK[0x4270];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) ^ STACK[0x4270];
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ v3;
  STACK[0x1D350] = 0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * (v0 ^ 0x5B84 ^ (4680 * (*(_QWORD *)STACK[0x4D18] != 0))))
                                          - (v0 - 13)
                                          + 4210))(v4);
}

uint64_t sub_100B2E598@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  STACK[0x1D350] = a1;
  v5 = STACK[0x3C50];
  STACK[0x1D360] = v4 ^ STACK[0x3C50];
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x5B84)) - ((14 * (v1 ^ 0x11AEu)) ^ 0x1072)))(v6);
}

uint64_t sub_100B2E60C()
{
  return ((uint64_t (*)(void))STACK[0xC040])();
}

uint64_t sub_100B2E61C@<X0>(int a1@<W8>)
{
  _QWORD *v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((*v1 != 0xAD7DC3C140BF010) * (a1 + 10563)) ^ a1))
                            - 12))();
}

uint64_t sub_100B2E658@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)(v1 - 0xAD7DC3C140BF000) != 0x6A072866245C401ALL) * (a1 - 5353)) ^ a1))
                            - (((a1 - 1759) | 0xC81u) ^ 0x1C89)))();
}

uint64_t sub_100B2E6BC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v1 - 0xAD7DC3C140BF00CLL) != ((v0 + 1282004858) & 0xB3961C76)
                                                                                    - 4214)
                                          * (v0 + 16680)) ^ v0))
                            - 8))();
}

uint64_t sub_100B2E724@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 3039)) - 8))();
}

uint64_t sub_100B2E750()
{
  unsigned int *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = STACK[0x6508] + 3039;
  *(_DWORD *)(v2 + 8) = 1784467771;
  *(_DWORD *)(v2 + 12) = 1784467771;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((208 * (((v1 + 1 - *v0) & ~(v1 + 1)) >= 0)) ^ v3)) - 8))();
}

uint64_t sub_100B2E7A0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16 * ((v1 ^ 0xF7F7DFFB57E03DFFLL) + ((2 * (_DWORD)v1) & 0xAFC07BFE) + 0x8082004A81FC201))
     + 0x27574D3E775010DLL;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = a1 + 409208026;
  LODWORD(STACK[0xEE50]) = a1 + 409208900;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 + 409208392;
  STACK[0xEE30] = 0x32A7AD27611645F3;
  STACK[0xEE58] = v4;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1078886027
                            - ((v3 - 240) ^ 0xF87BEFE8 | 0x404E7E8B)
                            + ((v3 - 240) ^ 0xF87BEFE8 | 0xBFB18174)) ^ 0x7A58B1C5)
                          + a1;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v6);
}

uint64_t sub_100B2E8EC()
{
  uint64_t v0;

  v0 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((3273 * (LODWORD(STACK[0x4804]) > 0x78AB1F39)) ^ (LODWORD(STACK[0x4804]) + 625412958)))
                                          - 12))(v0);
}

uint64_t sub_100B2E948()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v2 - 0xAD7DC3C140BF010) = 0;
  *(_DWORD *)(v2 - 0xAD7DC3C140BF008) = 0;
  *(_DWORD *)(v2 - 0xAD7DC3C140BEFF8) = 0;
  *(_QWORD *)(v2 - 0xAD7DC3C140BEFF0) = 0x603CE14A0A8FADE1;
  *(_DWORD *)(v2 - 0xAD7DC3C140BEFE8) = -1;
  *v3 = 0;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v0 + 302399888;
  LODWORD(STACK[0xEE50]) = v0 + 302402656;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v0 + 302399910;
  STACK[0xEE30] = v1 + 0x3985E2BF03CF49F7;
  STACK[0xEE58] = 0xA38D0B25282B8A11;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((-1601181033 - ((v4 - 240) | 0xA08FEA97) + ((v4 - 240) | 0x5F701568)) ^ 0x62E2CA31)
                          + v0;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v4 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v6);
}

uint64_t sub_100B2EAC0()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 422;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B2EAF0()
{
  _QWORD *v0;
  int v1;

  v1 = STACK[0x6508] + 1645;
  *v0 = 0x6A072866245C401ALL;
  sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(5121);
}

uint64_t sub_100B2EB3C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B2EB4C()
{
  return ((uint64_t (*)(void))STACK[0x81A0])();
}

uint64_t sub_100B2EB8C()
{
  return ((uint64_t (*)(void))STACK[0x74E8])();
}

uint64_t sub_100B2EB94()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((16945 * (LODWORD(STACK[0xA614]) == -1926392729)) ^ (STACK[0x6508] + 3501)))
                            - ((STACK[0x6508] + 3501) ^ 0x1E2BLL)))();
}

uint64_t sub_100B2EBE4()
{
  int v0;

  STACK[0x7788] = STACK[0xBFA8];
  LODWORD(STACK[0xC524]) = STACK[0x8F98];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0xE55u) + 4206))();
}

uint64_t sub_100B2EC34()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2459)) - 8))();
}

uint64_t sub_100B2EC5C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0xC05C]) == -1926392729) * LODWORD(STACK[0x2A48])) ^ (STACK[0x6508] + 271)))
                            - 4))();
}

uint64_t sub_100B2EC9C@<X0>(int a1@<W8>)
{
  *(_QWORD *)STACK[0xCC38] = STACK[0xAE28];
  *(_DWORD *)STACK[0x9DA0] = STACK[0xA504];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 - 4415) | 0x1030u) + 4210))();
}

uint64_t sub_100B2ECFC()
{
  return ((uint64_t (*)(void))STACK[0xC980])();
}

uint64_t sub_100B2ED14(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((STACK[0x2188] & 0x8F373EB) + STACK[0x2718] - 15067) * (a4 == -1926392729)) ^ (STACK[0x6508] + 118))))();
}

uint64_t sub_100B2ED68()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = STACK[0x2718];
  v1 = STACK[0x2718] + 19710;
  STACK[0x7630] = STACK[0x9DA8];
  LODWORD(STACK[0x99D4]) = STACK[0x91FC];
  STACK[0xCBF8] = 0x6A072866245C401ALL;
  v2 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 + 2978)) - v1 + 21177))();
}

uint64_t sub_100B2EE00(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((LODWORD(STACK[0xA818]) == -1926392729) * (LODWORD(STACK[0x2A7C]) + 964744673)) ^ (STACK[0x6508] + 4286))) - (STACK[0x2A7C] & 0x398079BA) + 6166))(a1, a2, 440281528, 1772489163, 1772484949, 2147476573, 2330697227, 1964267738);
}

uint64_t sub_100B2EEB4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((5 * ((v0 + 2331) ^ 0x25E6) + 25141)
                                          * (LODWORD(STACK[0x775C]) == -1926392717)) ^ (v0 + 2331)))
                            - 4))();
}

uint64_t sub_100B2EF14()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x9728] > STACK[0x8948])
                                          * (((v0 ^ 3) - 3) ^ 0x76B9 ^ ((v0 ^ 3) - 428768763) & 0x198E7DF7)) ^ v0 ^ 3))
                            - 4))();
}

uint64_t sub_100B2EF7C(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;

  v19 = ((*(_DWORD *)(*v14 + (*v16 & a3)) ^ (v9 + v10)) & 0x7FFFFFFF) * (a5 + ((v11 + a7) & a8) - 1956);
  v20 = (v19 ^ HIWORD(v19)) * a4;
  *(_BYTE *)(v9 + v10) = *(_BYTE *)(v15 + (v20 >> 24)) ^ *(_BYTE *)(v8 + v10) ^ *(_BYTE *)((v20 >> 24) + v17 + 4) ^ *(_BYTE *)((v20 >> 24) + v18 + 1) ^ v20 ^ (BYTE3(v20) * v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 != 19) * v12) ^ v11)) - 4))();
}

uint64_t sub_100B2F018(uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;

  v16 = v9 - 1;
  v17 = ((*(_DWORD *)(*v11 + (*v13 & a3)) ^ (v7 + v16)) & (a6 + v8 - 2330 + 904)) * a4;
  v18 = (v17 ^ HIWORD(v17)) * a4;
  *(_BYTE *)(v7 + v16) = *(_BYTE *)(v12 + (v18 >> 24)) ^ *(_BYTE *)(v6 + v16) ^ *(_BYTE *)((v18 >> 24) + v14 + 4) ^ *(_BYTE *)((v18 >> 24) + v15 + 1) ^ v18 ^ (BYTE3(v18) * v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v16 != 0) | (2 * (v16 != 0))) ^ v8)) - 4))();
}

uint64_t sub_100B2F0AC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((38 * (STACK[0x9728] == 0)) ^ a1))
                            - ((a1 - 1956) ^ ((a1 - 2056) | 0x64u) ^ 8)))();
}

uint64_t sub_100B2F10C()
{
  int v0;
  int v1;
  uint64_t v2;

  v1 = v0 + 1990;
  v2 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))(v2);
}

uint64_t sub_100B2F138()
{
  return ((uint64_t (*)(void))STACK[0x7F98])();
}

uint64_t sub_100B2F14C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((LODWORD(STACK[0x1D64]) * (v0 == -1926392729)) ^ LODWORD(STACK[0x1F3C]))))();
}

uint64_t sub_100B2F17C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((32147
                                * (LODWORD(STACK[0x92E4]) == LODWORD(STACK[0x1F3C])
                                                           - 1926410475
                                                           + LODWORD(STACK[0x1F3C])
                                                           - 1784
                                                           + 2282)) ^ LODWORD(STACK[0x1F3C]))))();
}

uint64_t sub_100B2F1DC@<X0>(int a1@<W8>)
{
  _BOOL4 v1;
  int v2;

  v1 = STACK[0x7C48] != 0;
  if (STACK[0x7C48])
    v2 = -1926392729;
  else
    v2 = 1926417666;
  LODWORD(STACK[0xE0D0]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 | a1)) - ((a1 - 5552) ^ 0x157Au) + 4202))();
}

uint64_t sub_100B2F234()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x16C1)) - 12))(5121);
}

uint64_t sub_100B2F2A4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2A44])) - 8))();
}

uint64_t sub_100B2F2C8()
{
  return ((uint64_t (*)(void))STACK[0x6BC8])();
}

uint64_t sub_100B2F2D4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0xCC28]) != -1926392729)
                                               * ((STACK[0x6508] - 10497167) & 0xA01FFE ^ 0x63)) ^ (STACK[0x6508] + 3376)))
                            - 8))();
}

uint64_t sub_100B2F33C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x7450];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 - 1288853370) & 0x4CD2147F)) - 4;
  LODWORD(STACK[0xEE20]) = a1 - 1288853393;
  LODWORD(STACK[0xEE50]) = (a1 - 1288853370) ^ 0xEB8;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 - 1288853370;
  STACK[0xEE30] = v2 + 0x3F716A7B76DE5B55;
  STACK[0xEE58] = 0x4185B2EFBB89695DLL;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v1 - 240) | 0x20178F57) - (v1 - 240) + ((v1 - 240) & 0xDFE870A8)) ^ 0x1D85500E)
                          + a1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B2F440()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 1702;
  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B2F45C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 == -1926392729) * (STACK[0x3220] ^ 0x6EB)) ^ LODWORD(STACK[0x2EF8])))
                            - ((STACK[0x6508] + 11762) ^ 0x3E60)))();
}

uint64_t sub_100B2F4B0()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char *v4;
  unint64_t v5;

  v0 = STACK[0x3220];
  v1 = (STACK[0x3220] - 596) | 0x38AC;
  STACK[0x8F18] = STACK[0x7788];
  LODWORD(STACK[0x8028]) = STACK[0xC524];
  LODWORD(STACK[0xC2E0]) = STACK[0x71BC];
  v2 = STACK[0xBA30];
  STACK[0xCBB8] = STACK[0x7E60];
  STACK[0xB7B0] = STACK[0xB9C0];
  v3 = STACK[0xC768];
  v4 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x9930] = (unint64_t)v4;
  STACK[0xA3B0] = (unint64_t)(v4 + 120);
  STACK[0xC768] = v3 + (v1 ^ 0x38BC);
  STACK[0x8C88] = STACK[0xA728];
  STACK[0xCFA8] = v2;
  v5 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)(v0 ^ 0x13BF)) - 8))();
}

uint64_t sub_100B2F5BC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2459)) - 8))();
}

uint64_t sub_100B2F5E4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1676)) - 12))();
}

uint64_t sub_100B2F60C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 2717) ^ 0x5E4) * (a4 != -1926392729)) ^ (STACK[0x6508] + 2131)))
                            - 4))();
}

uint64_t sub_100B2F64C()
{
  int v0;
  unint64_t v1;

  STACK[0xC7B0] = STACK[0x8810];
  LODWORD(STACK[0xC65C]) = STACK[0x9324];
  STACK[0x8968] = 0x6A072866245C401ALL;
  v1 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (v0 ^ 0x14B0 ^ (13190 * (v0 + 967005443 + (v0 ^ 0x571C) == 1718202424))))
                            - 12))();
}

uint64_t sub_100B2F708()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x8CF0];
  STACK[0x7450] = STACK[0x8CF0];
  v2 = STACK[0xBEF0];
  STACK[0x8C00] = STACK[0x9580] - 0x55058F428EADA7E4;
  STACK[0x7038] = v1;
  LODWORD(STACK[0xBB44]) = v2;
  LODWORD(STACK[0x8F98]) = 1784467771;
  STACK[0xBFA8] = 0x214487444AB0E08;
  STACK[0x7B60] = 0xAD7DC3C140BF010;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v0 ^ 0x1F81u) + v0)))();
}

uint64_t sub_100B2F7CC()
{
  return ((uint64_t (*)(void))STACK[0xAE18])();
}

uint64_t sub_100B2F7DC()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  int v4;

  v1 = STACK[0x6508];
  v2 = LODWORD(STACK[0x7B58]) ^ 0x8D2D9467;
  v3 = v0 != -1926392729 || v2 - 1 >= (unint64_t)(STACK[0x6508] + 11202) - 12345;
  STACK[0x9140] = v2;
  v4 = !v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3948 * v4) ^ ((int)v1 + 896))) - STACK[0x1F30] + 22827))();
}

uint64_t sub_100B2F864()
{
  uint64_t (*v0)(unint64_t, unint64_t *, unint64_t, unint64_t *, unint64_t *);
  unint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  v1 = STACK[0x1F30];
  v2 = (STACK[0x1F30] - 727505201) & 0x2B5C93F7;
  v3 = STACK[0x1F30] - 17721;
  v4 = v0(STACK[0x9688], &STACK[0x7264], STACK[0x4A88], &STACK[0x8540], &STACK[0x9140]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v4 - 1926392698 - ((2 * v4) & 0x1A5B28CE) == -1926392698)
                                               * (v3 ^ 0x1399)) ^ v1))
                            - v2
                            + 5106))();
}

uint64_t sub_100B2F904()
{
  int v0;

  *(_BYTE *)STACK[0x4290] = 1;
  *(_QWORD *)STACK[0x4260] = ((v0 + 10306) + 0x188A0F2F185A76F9) ^ STACK[0x9000] ^ *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B2F980()
{
  int v0;
  int v1;

  LODWORD(STACK[0xE0D0]) = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 4204)))();
}

uint64_t sub_100B2F9A4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1019 * (STACK[0x7C48] != 0)) ^ (v0 + 2439))) - 12))();
}

uint64_t sub_100B2F9D0()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B2F9E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2630)) - 12))();
}

uint64_t sub_100B2FA04()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v0 - 678705009) ^ 0xD78BC99B)) - 4;
  LODWORD(STACK[0xEE20]) = v0 - 678705482;
  LODWORD(STACK[0xEE50]) = v0 - 678705009;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0xEE60]) = v0 - 678704550;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1151383430 - ((v1 - 240) | 0x44A0B786) + ((v1 - 240) | 0xBB5F4879)) ^ 0x86CD9720)
                          + v0;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v3);
}

uint64_t sub_100B2FADC()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 589;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B2FAFC()
{
  return ((uint64_t (*)(void))STACK[0xB3A8])();
}

uint64_t sub_100B2FB0C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((STACK[0x6508] + 12267) | 0x1C80) ^ 0x35BA) * (v0 == -1926392729)) ^ LODWORD(STACK[0x16A0]))))();
}

uint64_t sub_100B2FB84()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  _BOOL4 v3;
  _BOOL4 v4;

  v0 = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL;
  v1 = (((STACK[0xC9C8] ^ 0xB36CB6B8733B199CLL) + 0x4C9349478CC4E664) ^ ((STACK[0xC9C8] ^ 0x8A1396CCA248ABFALL)
                                                                         + 0x75EC69335DB75406) ^ ((((STACK[0xFC8] & 0x9CE1F076) + 19563) ^ 0xA6BC3EC12403BC98)
                                                                                                  + (STACK[0xC9C8] ^ 0x5943C13EDBFC1F87)))
     + 0x603CE14AB1C6A852;
  v2 = (v0 ^ 0x78B6EE6512D51ED0)
     + 2805398129
     + (((STACK[0xCFF8] ^ 0xFFF4FCB038240F4CLL) + 0xB034FC7DBF0B4) ^ ((STACK[0xCFF8] ^ 0xC635CBA9B874E353)
                                                                      + 0x39CA3456478B1CADLL) ^ ((v0 ^ 0x4177D97C9285F2CFLL ^ STACK[0xCFF8])
                                                                                               - (v0 ^ 0x4177D97C9285F2CFLL)));
  v3 = v2 < 0xA736FA71;
  v4 = v1 < v2;
  if (v1 < 0xA736FA71 != v3)
    v4 = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (!v4 | (16 * !v4) | LODWORD(STACK[0xFCC]))))();
}

uint64_t sub_100B2FD50()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 - 20822) | 0x410) + ((v0 - 19611) | 0x30) - 8200)
                                          * LOBYTE(STACK[0xCA77])) ^ v0))
                            - 4))();
}

uint64_t sub_100B2FDA0()
{
  int v0;
  int v1;
  unsigned int v2;

  v1 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & (v0 ^ 0x6EDDF64Bu)));
  v2 = (v1 ^ 0xED2AE12F)
     + (((LODWORD(STACK[0xC9C8]) ^ 0x1055DF7) - 17128951) ^ ((LODWORD(STACK[0xC9C8]) ^ 0x73E643B6) - 1944470454) ^ ((LODWORD(STACK[0xC9C8]) ^ 0x786CB3A0) - 2020389792))
     - (((LODWORD(STACK[0xCFF8]) ^ 0x2BF68F17) - 737578775) ^ ((LODWORD(STACK[0xCFF8]) ^ 0x1B158256) - 454394454) ^ ((v1 ^ 0x22361391 ^ LODWORD(STACK[0xCFF8])) - (v1 ^ 0x22361391)))
     + 1467940792;
  *(_DWORD *)STACK[0x8C48] = v2 - ((2 * v2 + 102849620) & 0x1A5B28CE) + 1077822097;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100B2FEF0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((LODWORD(STACK[0x1900]) * (v0 == -1926392729)) ^ LODWORD(STACK[0x1924]))))();
}

uint64_t sub_100B2FF24()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((1214
                                * ((((LODWORD(STACK[0x8224]) ^ 0x6A552AA9) - 1783966377) ^ (v0
                                                                                          + LODWORD(STACK[0x1154])
                                                                                          - 13046
                                                                                          + (LODWORD(STACK[0x8224]) ^ 0xDEFF62D1)
                                                                                          + 3117) ^ ((LODWORD(STACK[0x8224]) ^ (v1 + 2609) ^ LODWORD(STACK[0x1640])) - 965205023))
                                 - 1926392737 < 0xFFFFFFF8)) ^ LODWORD(STACK[0x1154]))))();
}

uint64_t sub_100B2FFD8()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x1640];
  v1 = LODWORD(STACK[0x1640]) ^ 0x1BE2u;
  LODWORD(STACK[0xE2CC]) = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3714)) - v1 + 7837))();
}

uint64_t sub_100B30040()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x16AC];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x16AC]) + 1618487259)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x16B0];
  LODWORD(STACK[0xEE50]) = v2;
  STACK[0xEE30] = v0;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v2 + 19;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v1 - 240) | 0xA56F528) - (v1 - 240) + ((v1 - 240) & 0xF5A90AD0)) ^ 0x37C42A71)
                          + STACK[0x6508];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B30118()
{
  int v0;

  v0 = STACK[0x6508] + 15169;
  STACK[0x82A0] = ((uint64_t (*)(uint64_t))STACK[0x5510])(2560) + 0x3032385379A144E6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B30170()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((11865 * (v0 == -1926392729)) ^ LODWORD(STACK[0x16B4])))
                            - ((STACK[0x6508] - 3338) ^ 0x368)))();
}

uint64_t sub_100B301C4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(2560);
  STACK[0xB9B0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != 0) * (v0 - 14625)) ^ v0)) - 4))();
}

uint64_t sub_100B3021C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(2560);
  STACK[0x9EF8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((215 * (v1 != 0)) ^ v0))
                            - ((v0 - 19163) | 0x200u)
                            + 872))();
}

uint64_t sub_100B30268()
{
  int v0;
  unint64_t v1;

  LODWORD(STACK[0xAEFC]) = -1926392729;
  LOBYTE(STACK[0x9497]) = 1;
  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + ((v0 + 13904) ^ 0xFFFFFFFFFFFFC640);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 3439)) - 8))();
}

uint64_t sub_100B302D0()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x16A8];
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x16A8]) + v0 + 3133)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x16A4];
  LODWORD(STACK[0xEE50]) = v3;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0xEE60]) = v3 + 59;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v2 - 240) | 0x175B8D63) + (~(v2 - 240) | 0xE8A4729C)) ^ 0x2AC9523B)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100B3039C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;

  v0 = *(_DWORD *)STACK[0x60B8];
  v1 = *(_QWORD *)STACK[0x60C0];
  v2 = *(_DWORD *)(v1 + (int)(v0 & 0x86CA5F68)) & 0x7FFFFFFF ^ (((STACK[0x6508] + 139) | 0x2208) + 47216104);
  v3 = (*(_QWORD *)(v1 + (v0 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x78B6EE6512D51ED0)
     + 128403411
     + (((STACK[0x7608] ^ 0x6FA01E6FA162D7E7) - 0x6FA01E6FA162D7E7) ^ ((STACK[0x7608] ^ 0xF9E786142444D0DDLL)
                                                                         + 0x61879EBDBBB2F23) ^ ((*(_QWORD *)(v1 + (v0 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0xEEF1761E97F319EALL ^ STACK[0x7608])
                                                                                                 - (*(_QWORD *)(v1 + (v0 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0xEEF1761E97F319EALL)));
  v4 = v2
     + 128403411
     + (((LODWORD(STACK[0x92D4]) ^ 0x80AC287A2E650C5CLL) + 0x7F53D785D19AF3A4) ^ ((LODWORD(STACK[0x92D4]) ^ 0x2EB8C33D25909A6DLL)
                                                                                  - 0x2EB8C33D25909A6DLL) ^ ((v2 ^ 0xAE14EB470BF59631 ^ LODWORD(STACK[0x92D4])) - (v2 ^ 0xAE14EB470BF59631)));
  if (v4 < 0x7A747D3 != v3 < 0x7A747D3)
    v5 = v4 < 0x7A747D3;
  else
    v5 = v3 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((30438 * ((LODWORD(STACK[0x9300]) == -1780616145) & ~v5)) ^ (STACK[0x6508] + 8851)))
                            - 4))();
}

uint64_t sub_100B30584@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4))();
}

uint64_t sub_100B3068C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((22358
                                               * (v0 == ((STACK[0x6508] + 538) | 0x426) - 1926398543)) ^ (STACK[0x6508] + 1712)))
                            - 8))();
}

uint64_t sub_100B306DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((*(_BYTE *)(STACK[0xC4C8] + 792) == 0) * (v0 - 5414)) ^ v0))
                            - ((v0 + 1734908993) & 0x98975D7E)
                            + 4206))();
}

uint64_t sub_100B30738()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  *(_QWORD *)(v0 + 824) = (STACK[0x7810] ^ 0x78B6EE6512D51ED0 ^ *(_QWORD *)(*(_QWORD *)STACK[0x60C0]
                                                                            + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL)
                        + *(_QWORD *)(v0 + 816);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 112)) - ((49 * ((v1 + 112) ^ 0x1770u)) ^ v2)))();
}

uint64_t sub_100B307B0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 2535)) - 4))();
}

uint64_t sub_100B307E4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((27824 * (v0 == STACK[0x6508] - 1926396943)) ^ (STACK[0x6508] + 6170))))();
}

uint64_t sub_100B30828()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = STACK[0xFC0];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) ^ STACK[0xFC0];
  STACK[0x1D350] = STACK[0x4A90];
  LODWORD(STACK[0x1D358]) = (v0 + 427180620) ^ v3;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((445 * *(unsigned __int8 *)STACK[0x4290]) ^ (v0 + 9686 + ((v0 - 1748424165) & 0x6836DFFF))))
                                          - 12))(v4);
}

uint64_t sub_100B308B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;

  v3 = v0 - 12;
  v4 = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL;
  v5 = v0 - 2092176464;
  v6 = STACK[0xA6B8]
     + 0x53343179129F6916
     + (((*(_QWORD *)STACK[0x4260] ^ 0x88679F26267F4104) + 0x779860D9D980BEFCLL) ^ ((*(_QWORD *)STACK[0x4260] ^ 0xE1FED4264F0B660)
                                                                                    - 0xE1FED4264F0B660) ^ ((*(_QWORD *)STACK[0x4260] ^ 0xE644932E48005A85) + 0x19BB6CD1B7FFA57BLL)) < 0x549FCDC9;
  v7 = (v4 ^ 0x78B6EE6512D51ED0)
     + 1419759049
     + (((STACK[0x9000] ^ 0x5A12A7B30946BE7FLL) - 0x5A12A7B30946BE7FLL) ^ ((STACK[0x9000] ^ 0x2148E459D5B0B0E8)
                                                                         - 0x2148E459D5B0B0E8) ^ ((v4 ^ 0x3ECAD8FCE231047 ^ STACK[0x9000])
                                                                                                  - (v4 ^ 0x3ECAD8FCE231047))) < 0x549FCDC9;
  v8 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v3 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v5 | 8;
  LODWORD(STACK[0xEE50]) = v5 ^ 0xE8A;
  LODWORD(STACK[0xEE64]) = v5;
  STACK[0xEE58] = v6 ^ v7;
  *(_DWORD *)(v1 + 784) = -299994601
                        - 1705718857
                        * (((((v2 - 240) | 0xD784ABBA) ^ 0xFFFFFFFE) - (~(v2 - 240) | 0x287B5445)) ^ 0x15E98B1C)
                        + v3;
  LODWORD(STACK[0xEE60]) = 0;
  STACK[0xEE30] = 0;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  v9 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * *(int *)(v1 + 788)))(v9);
}

uint64_t sub_100B30AF8()
{
  unint64_t v0;
  unint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x8BC] & 0x3CF4FB9F) - 3529) * (v0 < v1)) ^ (STACK[0x6508] + 8831)))
                            - (STACK[0x6508] ^ 0x107ALL)))();
}

uint64_t sub_100B30B54()
{
  int v0;
  int v1;

  LODWORD(STACK[0xAEFC]) = v1;
  LOBYTE(STACK[0x9497]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0x131Au) + 4210))();
}

uint64_t sub_100B30B8C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((STACK[0x9497] & 1) == 0) * (v0 - 3720)) ^ (v0 + 5243)))
                            - ((v0 - 1684667517) & 0x6469ECBF)
                            + 181))();
}

uint64_t sub_100B30BE0@<X0>(unsigned int a1@<W8>)
{
  LODWORD(STACK[0xA734]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - (((a1 + 3961) | 0x44) ^ 0x107ELL)))();
}

uint64_t sub_100B30C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xBC78] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v7 - 1454)) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((v7 - 1454) ^ 0x2BD9)) - ((v7 - 3574) | 0x5D05u) + 24449))(2624, a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B30CA4()
{
  int v0;
  int v1;

  LODWORD(STACK[0xE2CC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12135)) - 12))();
}

uint64_t sub_100B30CCC()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20866 * (STACK[0x8540] != 0)) ^ v0))
                            - ((v0 - 820479103) ^ 0xCF18B34F)
                            + 15412))();
}

uint64_t sub_100B30D24()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  STACK[0x8540] = 0;
  STACK[0x9140] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)((13318 * (v0 < 0x790690A)) ^ (v0 + 820479103)))
                                          - 4))(v1);
}

uint64_t sub_100B30D88@<X0>(char a1@<W8>)
{
  int v1;

  LOBYTE(STACK[0x713B]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((*(unsigned __int8 *)STACK[0x4290] * ((v1 - 3176) ^ 0x2FBD)) ^ v1))
                            - ((v1 - 15364) | 0x83u)
                            + 179))();
}

uint64_t sub_100B30DD4()
{
  uint64_t (*v0)(unint64_t, unint64_t *, unint64_t, unint64_t *, unint64_t *);
  int v1;
  int v2;

  STACK[0x8540] = 0;
  STACK[0x9140] = 0;
  v2 = v0(STACK[0x9688], &STACK[0x7264], STACK[0x4A88], &STACK[0x8540], &STACK[0x9140]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v2 - 1926392729 - ((2 * v2) & 0x1A5B28CE) == v1 - 1926404969)
                                          * (((v1 - 12219) | 0x3C40) - 15431)) | v1))
                            - 12))();
}

uint64_t sub_100B30E78()
{
  int v0;

  *(_BYTE *)STACK[0x4290] = 1;
  *(_QWORD *)STACK[0x4260] = STACK[0x9000] ^ 0x188A0F2F185AB331 ^ *(_QWORD *)(*(_QWORD *)STACK[0x60C0]
                                                                              + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & ((v0 - 15262) + 0x7FFFFFFFFFFFFF48);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B30F00()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15814 * *(unsigned __int8 *)STACK[0x4290]) ^ v0))
                            - ((2107 * (v0 ^ 0xB5u)) ^ 0x107ELL)))();
}

uint64_t sub_100B30F40()
{
  int v0;

  STACK[0xC5C0] = STACK[0x8540];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((21909 * (((v0 + 104) ^ (HIDWORD(STACK[0x9140]) != 0)) & 1)) ^ v0))
                            - (v0 ^ 0x10C1u)
                            + 4206))();
}

uint64_t sub_100B30FB0()
{
  int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0xC5F8]) = v2 - ((2 * v2) & 0x1A5B28CE) + (((v0 - 22803) | 0xAE3) ^ 0x8D2D9F88);
  STACK[0x7AA0] = 0xAD7DC3C140BF010;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 - 18857) ^ 0x102A) * (v1 == 0)) ^ v0)) - 12))();
}

uint64_t sub_100B31048@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0x8540] == 0) * ((a1 + 13) ^ 0x10AD)) ^ (a1 + 8805)))
                            - ((a1 - 2626) | 0x1149u)
                            + 6001))();
}

uint64_t sub_100B3109C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8
                                              * (((LOBYTE(STACK[0x713B]) != 0) * (2 * (v0 ^ 0x70B) - 0x1FFF)) ^ v0)))();
}

uint64_t sub_100B310D8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 4464)))(v1);
}

uint64_t sub_100B310F0()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(void))*(&off_1015B46D0 + (v0 ^ 0x13CD)))();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 4464)))(v1);
}

uint64_t sub_100B3111C()
{
  int v0;

  STACK[0x8540] = 0;
  STACK[0x9140] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 8831)) - (((v0 - 118) | 0x83u) ^ 0x108FLL)))();
}

uint64_t sub_100B31160()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v4 = STACK[0x2BD8];
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ STACK[0x2BD8];
  STACK[0x1D360] = v3 ^ v4;
  STACK[0x1D350] = STACK[0x4A90];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + ((v0 - 51) | 0x26) + 1943)))(v5);
}

uint64_t sub_100B311C4()
{
  STACK[0xC768] -= 2080;
  return ((uint64_t (*)(void))STACK[0x7660])();
}

uint64_t sub_100B311E8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 345) ^ (10434 * (v0 == -1926392729))))
                            - 8599 * (STACK[0x6508] ^ 0x1075)
                            + 25789))();
}

uint64_t sub_100B31234()
{
  int v0;
  int v1;

  v1 = LOBYTE(STACK[0x708F]);
  if (LODWORD(STACK[0x81D4]) == ((79 * (v0 ^ 0x64C1)) ^ 0x8D2D954B))
    v1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 * ((v0 - 23095) ^ 0xA9F)) ^ v0)) - 4))();
}

uint64_t sub_100B3129C()
{
  int v0;

  STACK[0xDA18] = STACK[0x8B48] + 512;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x3C7A)) - (((v0 + 16072) | 0x1063u) ^ 0x506BLL)))();
}

uint64_t sub_100B31320()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((LODWORD(STACK[0x4B08]) ^ 0x140C) + 27194) * (v0 == -1926392729)) ^ (STACK[0x6508] + 5374)))
                            - 4))();
}

uint64_t sub_100B31370()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;

  STACK[0xADC8] = STACK[0x6ED0];
  v1 = STACK[0xC768];
  v2 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0xA190] = (unint64_t)v2;
  STACK[0xC768] = v1 + 16;
  *v2 = 0;
  v2[1] = 0;
  STACK[0x7D70] = (unint64_t)v2 + 4;
  v3 = STACK[0x6AD8];
  STACK[0x86A0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((int)v0 - 11401 + (int)v0 + 19207)) - 8))();
}

uint64_t sub_100B313FC()
{
  unsigned int v0;

  STACK[0xC768] -= 384;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 + 4101)) - (v0 ^ 0x107ELL)))();
}

uint64_t sub_100B31440@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x248B)) - 4))();
}

uint64_t sub_100B314B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 9257));
  STACK[0xCF88] = (v0 ^ 0xFFFFFFFFFFFFF417) + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(v1 - 4))();
}

uint64_t sub_100B31514()
{
  unsigned int v0;
  _DWORD *v1;

  LODWORD(STACK[0x7264]) = 0;
  v1 = (_DWORD *)STACK[0x9688];
  *v1 = 1;
  v1[3] = 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 5863) ^ 0x3BELL)))();
}

uint64_t sub_100B31568@<X0>(int a1@<W8>)
{
  unint64_t v1;

  STACK[0x8540] = 0;
  STACK[0x9140] = 0;
  LODWORD(STACK[0x7B58]) = -1926392729;
  v1 = STACK[0x6AD8];
  STACK[0x7F98] = (a1 ^ 0x81Eu) + *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 2992;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x198B)) - 4))();
}

uint64_t sub_100B315DC()
{
  unint64_t v0;
  unint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] ^ 0xAEB) - 3529) * (v0 < v1)) ^ (STACK[0x6508] + 8831)))
                            - 12))();
}

uint64_t sub_100B31624()
{
  int v0;
  int v1;
  _DWORD *v2;

  v1 = *(unsigned __int8 *)STACK[0x4290];
  LODWORD(STACK[0x7264]) = 0;
  v2 = (_DWORD *)STACK[0x9688];
  *v2 = 1;
  v2[3] = 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((2 * v0) ^ 0x65B7) * v1) ^ v0))
                            - ((v0 + 885425377) & 0xCB397AFF)
                            + 6774))();
}

uint64_t sub_100B316AC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((227 * (*(_QWORD *)STACK[0x4A88] == 0)) ^ v0))
                            - (((v0 - 6776) | 0x3B0u) ^ 0x3BELL)))();
}

uint64_t sub_100B316F0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 31;
  v2 = (v0 - 5832);
  v3 = ((uint64_t (*)(void))*(&off_1015B46D0 + ((v0 + 31) ^ 0x1A65)))();
  *(_QWORD *)STACK[0x4A88] = 0;
  *(_BYTE *)STACK[0x4290] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - v2 + 942))(v3);
}

uint64_t sub_100B31748(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(((LODWORD(STACK[0x20C4]) ^ 0x36) * (a4 != -1926392729)) ^ (STACK[0x6508] + 1637)))
                                          - 12))(5121);
}

uint64_t sub_100B317A8()
{
  int v0;

  v0 = STACK[0x20C4];
  STACK[0xD550] = STACK[0xAFE0];
  STACK[0xBA78] = STACK[0xA0D0];
  STACK[0xAD28] = 0x6A072866245C401ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1780 * (v0 != 1630713181)) ^ (v0 + 4835))) - 8))();
}

uint64_t sub_100B31874()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2740));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 + 16975) ^ (v0 - 2740) ^ 0x466E)) - 12))();
}

uint64_t sub_100B318CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((18891
                                               * (a4 == (((STACK[0x6508] - 3504) | 0x111) ^ 0x8D2D97B0))) ^ (STACK[0x6508] - 3644)))
                            - 8))();
}

uint64_t sub_100B3191C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;

  STACK[0xA4F8] = STACK[0xAD28];
  STACK[0x70E8] = STACK[0x1DD8];
  v8 = STACK[0x6AD8];
  STACK[0x9308] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)(v7 - 4426 + ((v7 - 917) | 0x2080))) - 4))(a1, a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B319B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] - 3170) | 0x23) + 14222) * (a4 == -1926392729)) ^ (STACK[0x6508] + 18715)))
                            - 12))();
}

uint64_t sub_100B31A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = v7 ^ 0x5564;
  v9 = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  v10 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v7 ^ 0x1114));
  STACK[0xD0D8] = v9;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(v10 - v8 + 20807))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B31A8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((11875
                                               * (a4 == ((STACK[0x6508] - 4161) | 0x3C8) - 1926393750)) ^ (STACK[0x6508] - 3644)))
                            - 8))();
}

uint64_t sub_100B31AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)((((v7 - 956) | 0x5112) - 14965) ^ v7)) - 12))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B31B64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 3644) ^ (21711 * (a4 == -1926392729))))
                            - ((STACK[0x6508] + 18705) ^ 0x598FLL)))();
}

uint64_t sub_100B31BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;
  int v9;

  v4 = STACK[0xA4F8];
  v5 = *(_DWORD *)(STACK[0xA4F8] - 0x6A072866245C400ELL);
  LODWORD(STACK[0xDFE0]) = v5 + ((a4 - 18705) ^ 0x107E);
  v6 = *(_DWORD *)(v4 - 0x6A072866245C4012) - 98349026;
  v5 -= 98349018;
  v7 = v5 < 0x64802159;
  v8 = v6 < v5;
  if (v7 != v6 < 0x64802159)
    v8 = v7;
  if (v8)
    v9 = 1926417665;
  else
    v9 = -1926392729;
  LODWORD(STACK[0xDFE4]) = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * ((v8 * (((a4 - 20551) | 0x20) - 2378)) ^ a4))
                                                                     - 12))(a1, a2, a3, 1926417665);
}

uint64_t sub_100B31C9C()
{
  int v0;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 1830)))(558497578);
}

uint64_t sub_100B31D44()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = 95 * (STACK[0x6508] ^ 0x1070);
  *(_DWORD *)(STACK[0xA4F8] - 0x6A072866245C400ELL) = *(_DWORD *)(v0 + 316);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(v0 + 320) == -1926392729) * (v2 + 15924)) ^ ((int)v1 - 3644)))
                            - 8))();
}

uint64_t sub_100B31DB8()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xA898] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + (v0 ^ 0x124C) + 563)))();
}

uint64_t sub_100B31DE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((a4 == ((v4 - 4020) ^ 0x8D2D94A5)) * (v4 - 1800)) ^ (v4 + 1672)))
                                          - 12))(5121);
}

_QWORD *sub_100B31E4C()
{
  int v0;
  unint64_t v1;

  STACK[0x9180] = STACK[0xAFE0];
  STACK[0xCE80] = 0;
  LODWORD(STACK[0xB75C]) = 1784467771;
  STACK[0x85D0] = 0;
  v1 = STACK[0x6AD8];
  STACK[0xC6C8] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 1917)) - 4;
  return (*(_QWORD *(**)(unint64_t *__return_ptr, uint64_t, unint64_t, unint64_t, unint64_t))(v1 + 8 * (((7334 * ((v0 - 1917) ^ 0x8FB)) ^ 0x31D6) + v0 - 1917)))(&STACK[0x85D0], 236, STACK[0x5680], STACK[0x5678], STACK[0x5670]);
}

uint64_t sub_100B31EE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((LODWORD(STACK[0x4D8C]) ^ 0x68EE) * (a4 == -1926392729)) ^ LODWORD(STACK[0x2A54]))))();
}

uint64_t sub_100B31F20()
{
  int v0;
  uint64_t v1;

  v0 = LODWORD(STACK[0x4D8C]) ^ 0xABE;
  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])((LODWORD(STACK[0xB2DC]) - 1784467771));
  STACK[0xD100] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(((v1 != 0) * (((v0 + 67726699) & 0xFBF66E53) - 1494)) ^ v0)))();
}

uint64_t sub_100B31FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  LODWORD(STACK[0xDFE8]) = -1926392729;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 + 13857) ^ v4))
                                                                                       - 8))(a1, a2, a3, a4, 0xD218315410365DB9);
}

uint64_t sub_100B32008(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  LODWORD(STACK[0xDFE8]) = a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 3475)) - 8))();
}

uint64_t sub_100B32028()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0xAD18] + 0x27832825C27D08AFLL;
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 1031898698) ^ 0x1FFFFFFFC27E9A50)) - 4;
  LODWORD(STACK[0xEE20]) = v0 - 1031898720;
  LODWORD(STACK[0xEE50]) = (v0 - 1031898698) ^ 0xFAC;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v0 - 1031898698;
  STACK[0xEE30] = 0x2997709A072816B7;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v1 - 240) & 0x2141FAC8) - (v1 - 240) - 557972170) ^ 0xE32CDA6F)
                          + v0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B32134()
{
  uint64_t v0;

  v0 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2178])))(v0);
}

uint64_t sub_100B32168()
{
  int v0;
  uint64_t v1;
  int v2;

  v1 = STACK[0x6508] + 30;
  v2 = STACK[0x6508] + 10311;
  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (26210 * (v0 == -1926392729)))) - (v1 ^ 0x1098)))();
}

uint64_t sub_100B321DC()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;

  v4 = STACK[0xB75C];
  v5 = (v4 ^ 0xC52B2C91) & (2 * ((((2 * v0) ^ 0x315E) - 1784471985) & v4)) ^ (((2 * v0) ^ 0x315E) - 1784471985) & v4;
  v6 = ((2 * (v4 ^ 0xEE696591)) ^ 0xF79496A8) & (v4 ^ 0xEE696591) ^ (2 * (v4 ^ 0xEE696591)) & 0x7BCA4B54;
  v7 = v6 ^ 0x84A4954;
  v8 = (v6 ^ 0x73C20240) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xEF292D50) & v7 ^ (4 * v7) & 0x7BCA4B54;
  v10 = (v9 ^ 0x6B080950) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x10C24204)) ^ 0xBCA4B540) & (v9 ^ 0x10C24204) ^ (16 * (v9 ^ 0x10C24204)) & 0x7BCA4B50;
  v12 = v10 ^ 0x7BCA4B54 ^ (v11 ^ 0x38800114) & (v10 << 8);
  v13 = LODWORD(STACK[0xB75C]) ^ (2
                                * ((v12 << 16) & 0x7BCA0000 ^ v12 ^ ((v12 << 16) ^ 0x4B540000) & (((v11 ^ 0x434A4A14) << 8) & 0x7BCA0000 ^ 0x31800000 ^ (((v11 ^ 0x434A4A14) << 8) ^ 0x4A4B0000) & (v11 ^ 0x434A4A14))));
  LOBYTE(v12) = (LOBYTE(STACK[0xA6C3]) ^ 0xE7) + ((2 * LOBYTE(STACK[0xA6C3])) & 0xCF);
  v14 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  LODWORD(STACK[0xEE20]) = v13 ^ 0x94A52008;
  STACK[0xEE38] = STACK[0x85D0];
  STACK[0xEE40] = STACK[0xCE60];
  STACK[0xEE48] = STACK[0x7A30];
  LOBYTE(STACK[0xEE68]) = v12 + 60;
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * (v1 ^ 0x3D92DF59) + v0 - 30;
  STACK[0xEE28] = v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v15 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * (v0 | 0x2829)) - 12))(v15);
}

uint64_t sub_100B32414()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x9AC4]) = v0;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v1 - 579057102) ^ 0xDD7C4AD4)) - 4;
  LODWORD(STACK[0xEE20]) = (v1 - 579057102) ^ 0x65;
  LODWORD(STACK[0xEE50]) = (v1 - 579057102) ^ 0xDD1;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 - 579057102;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v3 - 240)) | 0xE03AE276) - (v3 - 240) + 266505925) ^ 0xCD8FAE62)
                          + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v5);
}

uint64_t sub_100B324EC()
{
  uint64_t v0;

  v0 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((5834 * (STACK[0x6508] == 1287164510)) ^ (STACK[0x6508] - 706)))
                                          - 12))(v0);
}

uint64_t sub_100B32528()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] - 3383;
  v1 = STACK[0x6508] + 411;
  v2 = STACK[0x85D0];
  STACK[0xC688] = STACK[0x85D0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((86 * (v2 != 0)) ^ v1)) - (v0 ^ 0x33B)))();
}

uint64_t sub_100B32578@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x13E4)) - ((a1 + 9549) | 0x1130u) + 14772))();
}

uint64_t sub_100B325B8()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v2 = STACK[0x6508];
  v3 = 97 * (STACK[0x6508] ^ v0);
  v4 = STACK[0x6508] + 13;
  v5 = STACK[0x6AD8];
  v6 = 2142736129
     * ((~((v1 - 240) | 0x154BA901EE75AF2DLL) + ((v1 - 240) & 0x154BA901EE75AF2DLL)) ^ 0x97AF5EF272D2C4DBLL);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) ^ v6;
  LODWORD(STACK[0x1D358]) = (v2 + 427180632) ^ v6;
  STACK[0x1D350] = STACK[0x4840];
  ((void (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v4 ^ 0x67D)) - (v3 ^ 0xCE)))(5121);
}

uint64_t sub_100B326A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;

  LODWORD(STACK[0xA7EC]) = a4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v7 + v4) & v5 ^ v6) + v7)))();
}

uint64_t sub_100B326E0()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v2 = STACK[0x6508];
  v3 = (STACK[0x6508] - 629) | 0x1008;
  v4 = STACK[0x8330];
  v5 = STACK[0xAD18];
  v6 = STACK[0xD100];
  v7 = STACK[0xB2DC];
  v8 = 1651633301 * ((((v1 - 240) | 0xAB66A361) + (~(v1 - 240) | 0x54995C9E)) ^ 0xBB6EE5C0);
  STACK[0x1D358] = STACK[0x8510];
  STACK[0x1D370] = v4;
  LODWORD(STACK[0x1D368]) = v8 + 1600395290 + v2;
  LODWORD(STACK[0x1D350]) = -475732267 - v8 + 89769207 * v7;
  STACK[0x1D360] = v5;
  STACK[0x1D378] = v6;
  v9 = v0(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((LODWORD(STACK[0x1D354]) == 1624777124) * (v3 - 7178)) ^ LODWORD(STACK[0x1D50])))
                                          - 4))(v9);
}

uint64_t sub_100B327F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7 * (LODWORD(STACK[0xDFE8]) == -1926392729)) ^ v0))
                            - (v0 - 3475)
                            + 4206))();
}

uint64_t sub_100B3283C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unint64_t v5;

  STACK[0xCE80] = v5;
  LODWORD(STACK[0xB75C]) = STACK[0xB2DC];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3)
                                                                     - (v4 ^ 0x107E)))(a1, a2, a3, 2368574567);
}

uint64_t sub_100B32878()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  v2 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((((v0 - 478107299) & 0x250E3C76 ^ v1) + v0) ^ (8760 * (v0 < 0xC1760E8A))))
                                          - 8))(v2);
}

uint64_t sub_100B328D8()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v0 = STACK[0x6508] ^ 0x377B;
  v1 = STACK[0x6508] - 4025;
  v2 = STACK[0x8448];
  *(_QWORD *)v2 = 0x1D8A118EDE6D14DLL;
  *(_DWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 1414217035;
  *(_QWORD *)(v2 + 28) = 0x800000002;
  *(_DWORD *)(v2 + 36) = 1;
  *(_QWORD *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = 957766676;
  *(_QWORD *)(v2 + 56) = 0;
  *(_DWORD *)(v2 + 64) = 1768711563;
  *(_QWORD *)(v2 + 68) = 0x400000001;
  *(_QWORD *)(v2 + 80) = STACK[0xB4D8] ^ 0x603CE14A0A8FADE1;
  *(_DWORD *)(v2 + 76) = 2;
  *(_DWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = 1315558685;
  *(_QWORD *)(v2 + 108) = 0x800000002;
  *(_DWORD *)(v2 + 116) = 2;
  v3 = STACK[0x6AD8];
  STACK[0x6F78] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x18CB)) - v0 + 9985))();
}

uint64_t sub_100B329E0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x28E4]) ^ ((v0 != -1926392729) | (2 * (v0 != -1926392729)))))
                            - STACK[0x2CD0]
                            + 3176))();
}

uint64_t sub_100B32A14()
{
  unint64_t v0;

  v0 = STACK[0x6AD8];
  STACK[0xB658] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x2CD0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 51112) - 4))();
}

uint64_t sub_100B32A6C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((5033
                                               * (v0 == ((79 * (STACK[0x6508] ^ 0x1064)) ^ 0x8D2D91E9))) ^ (STACK[0x6508] - 2792)))
                            - 8))();
}

uint64_t sub_100B32AB8()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x9478] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v0 - 1369530265) & 0x51A17FEE ^ 0x37DD) + v0)) - 12))();
}

uint64_t sub_100B32B30@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0xA1C4]) = v1;
  STACK[0xC288] = v2;
  STACK[0xCFD0] = v4;
  STACK[0x8490] = v3;
  STACK[0x9128] = 0;
  LODWORD(STACK[0xC614]) = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28 * (v5 != 0)) ^ a1))
                            - 5 * (((a1 - 9700) | 0x1076) ^ 0x1923u)
                            + 11933))();
}

uint64_t sub_100B32BD4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(STACK[0x4C70] + 84);
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = (v0 + 912453536) ^ 0xE4A;
  LODWORD(STACK[0xEE50]) = v0 + 912453536;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0xEE60]) = (v0 + 912453536) ^ 0x3A;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((2042238304 - ((v1 - 240) | 0x79BA1560) + ((v1 - 240) | 0x8645EA9F)) ^ 0xBBD735C6)
                          + v0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B32CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;

  v8 = 19 * (STACK[0x6508] ^ 0x14EF);
  v9 = STACK[0x6508] - 3189;
  v10 = STACK[0xC768];
  STACK[0xC9B8] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v10 + 48;
  STACK[0x9C00] = v7;
  STACK[0xB980] = v6;
  STACK[0xB9A8] = 0x55D9758D0B8C38CELL;
  STACK[0xB008] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v9 ^ 0x101A))
                                                                                                - v8
                                                                                                + 22355))(0x4B0D70AD3A88BE86, a2, a3, a4, a5, a6, 16794642);
}

uint64_t sub_100B32DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v8 = STACK[0x6508];
  v9 = STACK[0xC768];
  STACK[0x72B8] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v9 + 48;
  STACK[0xB848] = v7;
  STACK[0x8AA0] = v6;
  STACK[0xBAA0] = 0x55D9758D0B8C38CELL;
  STACK[0xBB00] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v8 + 933))
                                                                                                - 8))(0x4B0D70AD3A88BE86, a2, a3, a4, a5, a6, 16794642);
}

uint64_t sub_100B32E8C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0xC5CC]) = v0;
  v2 = STACK[0x83A8];
  v3 = STACK[0x3EBC];
  v4 = STACK[0x6508];
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v3 - 29;
  LODWORD(STACK[0xEE50]) = STACK[0x3EB4];
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v3;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v1 - 240) | 0xAF1EB52F) - ((v1 - 240) & 0xAF1EB52F)) ^ 0x928C6A76)
                          + v4;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * SLODWORD(STACK[0x1D354])))(v6);
}

uint64_t sub_100B32F58()
{
  uint64_t v0;

  v0 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x38D8])) - 4))(v0);
}

uint64_t sub_100B32F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;

  v7 = STACK[0x3EB8];
  v8 = STACK[0x6508] - 3016;
  v9 = STACK[0x6AD8];
  STACK[0xA3E8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (v8 ^ 0x58FA ^ (v7 | 0x800))))(a1, a2, a3, 4128, a5, a6, a7, 0x4B0D70AD3A88BE86);
}

uint64_t sub_100B32FDC()
{
  int v0;
  int v1;

  v0 = STACK[0x6508] + 13216;
  v1 = STACK[0x6508] + 1717;
  STACK[0xC768] -= 128;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((LODWORD(STACK[0xC5CC]) == -1926392729) * (v0 ^ 0x7EF9)) ^ v1))
                            - 12))();
}

uint64_t sub_100B33048()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(1280);
  STACK[0x8F40] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 != 0) * ((v0 ^ 0x5460) - 8403 + (v0 ^ 0x548B))) ^ v0)))();
}

uint64_t sub_100B330A0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = STACK[0xB628];
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + (((_DWORD)v1 - 4171) | 0x1024u) - 4222;
  v6 = 1132842119 * ((((v2 - 240) | 0x5CCFD34A27AC15FFLL) - ((v2 - 240) & 0x5CCFD34A27AC15FFLL)) ^ 0xBAF6DA0DE39A6B0);
  STACK[0x1D368] = STACK[0x7080];
  STACK[0x1D370] = v5 ^ v6;
  STACK[0x1D358] = a1;
  LODWORD(STACK[0x1D350]) = v6 + v1 + 1884380221;
  STACK[0x1D360] = (unint64_t)&STACK[0x9F14];
  LODWORD(STACK[0x1D378]) = v3 ^ v6;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x44B0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((5678 * (LODWORD(STACK[0x9F14]) < 0x501)) ^ ((int)v1 + 13177))))(v7);
}

uint64_t sub_100B331A4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13495
                                          * (*(_DWORD *)(v1 + 788)
                                           - 1926392729
                                           - (((((v0 + 1678) ^ 0x1606) + 625) ^ 0x1A5B2B50) & (2 * *(_DWORD *)(v1 + 788))) == ((14 * ((v0 + 1678) ^ 0x1606)) ^ 0x8D2D8411))) ^ (v0 + 1678)))
                            - 12))();
}

uint64_t sub_100B3321C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  STACK[0x6FD0] = v7;
  LODWORD(STACK[0x9F24]) = STACK[0x9F14];
  LODWORD(STACK[0xA964]) = 0;
  STACK[0x97B0] = 0;
  LODWORD(STACK[0xA514]) = -1926392729;
  STACK[0x9E80] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 - 1479320511) & 0x582CF77B ^ 0x4726) + v6))
                                                                                                - 8))(0x4B0D70AD3A88BE86, a2, a3, a4, a5, a6, 16794642);
}

uint64_t sub_100B332F4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;

  v2 = (STACK[0x6508] + 1826729161) & 0x931E7FFF;
  v3 = STACK[0x6508] - 2256;
  v4 = STACK[0x6FD0];
  v5 = STACK[0x9F24];
  LODWORD(STACK[0xC504]) = -1926392729;
  STACK[0x6C18] = 0;
  LODWORD(STACK[0x988C]) = -1926392729;
  LODWORD(STACK[0xB6C0]) = -1926392729;
  STACK[0xA360] = v4 + 4;
  v6 = v2 + 1815526590 + v5;
  v7 = (v6 ^ 0x8BC531FF) & (2 * (v6 & 0x93C905FF)) ^ v6 & 0x93C905FF;
  v8 = ((2 * (v6 ^ 0x8AD539A1)) ^ 0x323878BC) & (v6 ^ 0x8AD539A1) ^ (2 * (v6 ^ 0x8AD539A1)) & 0x191C3C5E;
  v9 = v8 ^ 0x9040442;
  v10 = (v8 ^ 0x1008381E) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x6470F178) & v9 ^ (4 * v9) & 0x191C3C5C;
  v12 = (v11 ^ 0x103056) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x190C0C06)) ^ 0x91C3C5E0) & (v11 ^ 0x190C0C06) ^ (16 * (v11 ^ 0x190C0C06)) & 0x191C3C50;
  v14 = v12 ^ 0x191C3C5E ^ (v13 ^ 0x1100041E) & (v12 << 8);
  LODWORD(STACK[0xC8E0]) = v6 ^ 0x1CE4E924 ^ (2
                                            * ((v14 << 16) & 0x191C0000 ^ v14 ^ ((v14 << 16) ^ 0x3C5E0000) & (((v13 ^ 0x81C381E) << 8) & 0x191C0000 ^ (((v13 ^ 0x81C381E) << 8) ^ 0x1C3C0000) & (v13 ^ 0x81C381E) ^ 0x1000000)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ 0x1FB9))
                                                                     - 8))(1260235307, a2, 961099298, 3992873211);
}

uint64_t sub_100B33508()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((LODWORD(STACK[0x2770]) + (STACK[0x6508] ^ 0x8B5) - 28551) * (v0 == -1926392729)) ^ LODWORD(STACK[0x2770]))))();
}

uint64_t sub_100B33550()
{
  int v0;

  v0 = STACK[0x2770];
  STACK[0x6C18] = STACK[0xA360];
  LODWORD(STACK[0x988C]) = STACK[0xC8E0];
  LODWORD(STACK[0xC504]) = STACK[0xB6C0];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B335B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  if (v7 == -1926392729)
    v9 = STACK[0xC504];
  else
    v9 = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21692 * (v9 == ((v8 - 5172) ^ 0x8D2D90E8))) ^ v8)) - (((v8 - 6305) | 0x1054u) ^ 0x107ELL)))(a1, a2, a3, a4, a5, a6, a7, 0x4B0D70AD3A88BE86);
}

uint64_t sub_100B33634@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(STACK[0x4C70] + 84);
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = a1 + 617921382;
  LODWORD(STACK[0xEE50]) = a1 + 617919923;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v3;
  STACK[0xEE60] = (a1 + 617919855);
  *(_DWORD *)(v1 + 784) = -299994601
                        - 1705718857 * ((((2 * (v2 - 240)) | 0x55DAD8D0) - (v2 - 240) - 720202856) ^ 0x177FB331)
                        + a1;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * *(int *)(v1 + 788)) - 4))(v5);
}

uint64_t sub_100B336FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (STACK[0x6508] - 4141) | 0x3A0;
  v1 = STACK[0x6508] - 2402;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x1E4B));
  STACK[0xB9F0] = v2;
  return ((uint64_t (*)(void))(v3 - v0 + 989))();
}

uint64_t sub_100B33778()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0x7530] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2785)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 2785) ^ 0x1059)) - (v0 - 3234) + 972))();
}

uint64_t sub_100B337D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v7 == -1926392729) * ((STACK[0x6508] - 2517) ^ 0x2938)) ^ (STACK[0x6508] + 2125))) - (((STACK[0x6508] - 3058) | 0xB) ^ 0x487)))(a1, a2, a3, a4, a5, a6, a7, 0x4B0D70AD3A88BE86);
}

_QWORD *sub_100B33838@<X0>(int a1@<W8>)
{
  _QWORD *(*v1)(unint64_t *__return_ptr);

  v1 = *(_QWORD *(**)(unint64_t *__return_ptr))(STACK[0x6AD8] + 8 * ((a1 + 7002) ^ 0x30B3 | a1));
  STACK[0x8E68] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4;
  return v1(&STACK[0xA964]);
}

uint64_t sub_100B338A8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] ^ 0x14F9) + 8482) * (v0 == -1926392729)) ^ (STACK[0x6508] + 2125)))
                            - 8))();
}

uint64_t sub_100B338EC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5172)) - 8))();
}

uint64_t sub_100B33944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unint64_t v5;

  LODWORD(STACK[0x74D4]) = v4;
  v5 = STACK[0x6AD8];
  STACK[0xA3E8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((v3 - 2057550010) & 0x7AA3FD7B) - 14279) ^ v3)))(a1, a2, a3, 4128);
}

uint64_t sub_100B339A8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v1 = STACK[0x6508];
  v2 = STACK[0x97B0];
  v3 = (STACK[0x6508] - 705038513) ^ 0xF9E;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v1 - 705038457;
  LODWORD(STACK[0xEE50]) = v3;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 - 705038513;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v0 + 509339183 - 2 * ((v0 - 240) & 0x1E5BE71F)) ^ 0x23C93846)
                          + v1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100B33A78()
{
  unint64_t v0;
  unsigned int v1;
  uint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 2126774029;
  v2 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * ((26192 * (v1 < 0xC68B9A60)) ^ ((int)v0 + 10115)))
                                          - 8))(v2);
}

uint64_t sub_100B33ACC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((26 * (LODWORD(STACK[0x74D4]) == -1926392729)) ^ (STACK[0x6508] + 1717)))
                            - ((8 * STACK[0x6508]) ^ 0x8560)
                            + 1732))();
}

uint64_t sub_100B33B18@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x26E8)) - (a1 + 2470) + 4206))();
}

uint64_t sub_100B33B50()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x7080];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = (v0 - 642889673) ^ 0xB;
  LODWORD(STACK[0xEE50]) = v0 - 642890313;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v0 - 642889673;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v1 - 240) | 0x7CFAF8AD) - ((v1 - 240) & 0x7CFAF8AD)) ^ 0x416827F4)
                          + v0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100B33C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = STACK[0x6508];
  v8 = STACK[0x7080];
  v9 = STACK[0x6AD8];
  *(_QWORD *)(v3 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 33)) - 4;
  *(_QWORD *)(v3 + 968) = v8;
  *(_QWORD *)(v1 + 792) = v0;
  *(_DWORD *)(v1 + 784) = v4 - ((~((v6 - 240) | 0x1ECF94DC) + ((v6 - 240) & 0x1ECF94DC)) ^ 0xDCA2B47A) * v5 + v7;
  v10 = v2(v6 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * ((int)v7 - 491)) - 8))(v10);
}

uint64_t sub_100B33C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = STACK[0x6508];
  v8 = STACK[0x8F40];
  v9 = STACK[0x6AD8];
  *(_QWORD *)(v3 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1993250229) ^ 0x89316ABD)) - 4;
  *(_DWORD *)(v3 + 960) = v7 - 1993250235;
  *(_DWORD *)(v3 + 1008) = (v7 - 1993250229) ^ 0xF31;
  *(_DWORD *)(v3 + 1024) = 0;
  *(_DWORD *)(v3 + 1028) = v7 - 1993250229;
  *(_QWORD *)(v3 + 976) = 0;
  *(_QWORD *)(v3 + 1016) = v8;
  *(_DWORD *)(v1 + 784) = v4
                        - ((-895622128 - ((v6 - 240) | 0xCA9DE410) + ((v6 - 240) | 0x35621BEF)) ^ 0x8F0C4B6) * v5
                        + v7;
  *(_QWORD *)(v1 + 792) = v0;
  v10 = v2(v6 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * *(int *)(v1 + 788)) - 12))(v10);
}

uint64_t sub_100B33D50()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 299;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B33D70()
{
  return ((uint64_t (*)(void))STACK[0xCA18])();
}

uint64_t sub_100B33D90()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 4036;
  v2 = STACK[0x8748];
  *(_QWORD *)v2 = 0x1D8A118EDE6D14DLL;
  *(_DWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 1414217035;
  *(_QWORD *)(v2 + 28) = 0x800000002;
  *(_DWORD *)(v2 + 36) = 1;
  *(_QWORD *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = -1055333906;
  *(_QWORD *)(v2 + 56) = 0;
  *(_DWORD *)(v2 + 64) = 1768711563;
  *(_QWORD *)(v2 + 68) = 0x400000001;
  *(_DWORD *)(v2 + 76) = 2;
  *(_QWORD *)(v2 + 80) = 0;
  *(_DWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = -937638717;
  *(_QWORD *)(v2 + 108) = 0x400000001;
  *(_DWORD *)(v2 + 116) = 2;
  v3 = STACK[0x6AD8];
  STACK[0x6F78] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 4036));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((v0 + 5783) ^ v1 ^ 0x294C ^ (5765
                                                                           * ((((_DWORD)v0 - 4036) ^ 0xC4800876) > 0x8B1644B0))))
                            - 12))();
}

uint64_t sub_100B33E94()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x28E8]) ^ (21706 * (v0 == -1926392729))))
                            - STACK[0x28F0]))();
}

uint64_t sub_100B33EC8()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x2110];
  v1 = STACK[0x6AD8];
  STACK[0xB658] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x2110]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 - 888998091) & 0x34FCFEEF) + 4624) ^ v0)) - 4))();
}

uint64_t sub_100B33F30()
{
  int v0;
  _BOOL4 v1;

  v1 = v0 != (STACK[0x22F0] ^ 0x8D2D91DF);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * v1) | (16 * v1)) ^ LODWORD(STACK[0x2004]))) - 12))();
}

uint64_t sub_100B33F6C()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x22F0];
  v1 = STACK[0x22F0] ^ 0x57A;
  v2 = STACK[0x6AD8];
  STACK[0x9478] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x22F0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((50 * v1) ^ 0x37EB) + (int)v0)) - 12))();
}

uint64_t sub_100B33FDC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6508];
  LODWORD(STACK[0xAD84]) = v0;
  v3 = STACK[0xCDF0];
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v2 + 955416711) ^ 0x38F28081)) - 4;
  LODWORD(STACK[0xEE20]) = (v2 + 955416711) ^ 6;
  LODWORD(STACK[0xEE50]) = (v2 + 955416711) ^ 0xE55;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v2 + 955416711;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v3;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v1 - 240) | 0x4C73A16E) - ((v1 - 240) & 0x4C73A16E)) ^ 0x71E17E37)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100B340BC()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 159286080;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)(v0 ^ 0xF681BCAA ^ (21195 * (v0 == 1901307146))))
                                          - 8))(v1);
}

uint64_t sub_100B3411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v7 = STACK[0x6508] - 3024;
  v8 = STACK[0x6AD8];
  STACK[0xA3E8] = ((LODWORD(STACK[0x2F7C]) | 0x150u) ^ 0xFFFFFFFFFFFFB6ADLL) + *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v7 ^ 0x11A3)))(a1, a2, a3, 4128, a5, a6, a7, 0x4B0D70AD3A88BE86);
}

uint64_t sub_100B34188()
{
  uint64_t v0;

  v0 = STACK[0x6508] + 6045;
  STACK[0xC768] += v0 ^ 0xFFFFFFFFFFFFD793;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((4881 * (LODWORD(STACK[0xAD84]) == -1926392729)) ^ v0))
                            - 12))();
}

uint64_t sub_100B341F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(1280);
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((4984 * (v1 != 0)) ^ v0));
  STACK[0xC2C0] = v1;
  return ((uint64_t (*)(void))(v2 - (((v0 - 6134) | 0x80u) ^ 0x1091)))();
}

uint64_t sub_100B34260(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = STACK[0x85C0];
  v4 = STACK[0xB5AC];
  v5 = STACK[0x6AD8];
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  LODWORD(STACK[0x1D350]) = 1132842119 * ((((2 * (v2 - 240)) | 0x34DA94C6) - (v2 - 240) + 1704113565) ^ 0x63F8F92C)
                          + v1
                          + 1884380221;
  STACK[0x1D360] = (unint64_t)&STACK[0xC7A8];
  STACK[0x1D370] = (v6 - 8) ^ (1132842119
                             * ((((2 * (v2 - 240)) | 0x505D3B8934DA94C6) - (v2 - 240) - 0x282E9DC49A6D4A63) ^ 0x7F4E232E63F8F92CLL));
  STACK[0x1D358] = a1;
  LODWORD(STACK[0x1D378]) = v4 ^ (1132842119 * ((((2 * (v2 - 240)) | 0x34DA94C6) - (v2 - 240) + 1704113565) ^ 0x63F8F92C));
  STACK[0x1D368] = v3;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x44B0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * (int)((LODWORD(STACK[0xC7A8]) >= (((_DWORD)v1 + 2049059033) ^ 0x7A223C77u)) ^ (((v1 + 2049059033) & 0x85DDD6FF ^ 0x703) + v1)))
                                          - 12))(v7);
}

uint64_t sub_100B3438C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((32528
                                          * (*(_DWORD *)(v1 + 788)
                                           - 1926392729
                                           - ((*(_DWORD *)(v1 + 788) << ((v0 + 99) ^ 0x77)) & 0x1A5B28CE) == ((v0 - 9253) ^ 0x8D2D9789))) ^ v0))
                            - 12))();
}

uint64_t sub_100B343F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  STACK[0x88E8] = v7;
  LODWORD(STACK[0x91A4]) = STACK[0xC7A8];
  LODWORD(STACK[0x8C74]) = 0;
  STACK[0xBCD8] = 0;
  LODWORD(STACK[0x7EEC]) = -1926392729;
  STACK[0x7980] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 ^ 0x17F5))
                                                                                                - 8))(0x4B0D70AD3A88BE86, a2, a3, a4, a5, a6, 16794642);
}

uint64_t sub_100B344C8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v2 = STACK[0x6508];
  v3 = STACK[0x6508] - 117;
  LODWORD(STACK[0xAB14]) = -1926392729;
  STACK[0x8DB0] = 0;
  LODWORD(STACK[0xC0E0]) = -1926392729;
  v4 = STACK[0x88E8];
  v5 = STACK[0x91A4];
  LODWORD(STACK[0x8728]) = -1926392729;
  STACK[0x8760] = v4 + 4;
  v6 = ((v5 + 304280980) ^ 0xC9D94066) & (2 * ((v5 + 304280980) & 0xEDDD0A68)) ^ (v5 + 304280980) & 0xEDDD0A68;
  v7 = ((((v5 + 304280980) ^ 0x584350E6) << ((v3 | 0x3E) ^ 0x3E)) ^ 0x6B3CB51C) & ((v5 + 304280980) ^ 0x584350E6) ^ (((v5 + 304280980) ^ 0x584350E6) << ((v3 | 0x3E) ^ 0x3E)) & 0xB59E5A8E;
  v8 = v7 ^ 0x94824A82;
  v9 = (v7 ^ 0x211C1000) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0xD6796A38) & v8 ^ (4 * v8) & 0xB59E5A8C;
  v11 = (v10 ^ 0x94184A00) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x21861086)) ^ 0x59E5A8E0) & (v10 ^ 0x21861086) ^ (16 * (v10 ^ 0x21861086)) & 0xB59E5A80;
  v13 = v11 ^ 0xB59E5A8E ^ (v12 ^ 0x1184080E) & (v11 << 8);
  v14 = (v5 + 304280980) ^ 0x2AD02B13 ^ (2
                                       * ((v13 << 16) & 0x359E0000 ^ v13 ^ ((v13 << 16) ^ 0x5A8E0000) & (((v12 ^ 0xA41A520E) << 8) & 0x359E0000 ^ 0x21840000 ^ (((v12 ^ 0xA41A520E) << 8) ^ 0x9E5A0000) & (v12 ^ 0xA41A520E))));
  v15 = STACK[0x6AD8];
  LODWORD(STACK[0xC6F4]) = v14;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((int)v2 + 1961)) - 8))(1260235307, a2, 961099298, 3992873211);
}

uint64_t sub_100B346D4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((STACK[0x21E8] & 0x7B1B756) + 4909) ^ (STACK[0x6508] + 2562))
                                     * (v0 == -1926392729)) ^ (STACK[0x6508] + 2562))))();
}

uint64_t sub_100B34728@<X0>(int a1@<W8>)
{
  STACK[0x8DB0] = STACK[0x8760];
  LODWORD(STACK[0xC0E0]) = STACK[0xC6F4];
  LODWORD(STACK[0xAB14]) = STACK[0x8728];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100B34774()
{
  int v0;
  int v1;
  int v2;

  if (v1 == -1926392729)
    v2 = STACK[0xAB14];
  else
    v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((25881 * (v2 == ((98 * (v0 ^ 0x77D)) ^ 0x8D2D8411))) ^ v0))
                            - ((v0 + 896816553) & 0xCA8BB376 ^ 0x107ELL)))();
}

uint64_t sub_100B347F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(STACK[0x4C70] + 84);
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = a1 + 56364555;
  LODWORD(STACK[0xEE50]) = a1 + 56361734;
  STACK[0xEE30] = v3;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0xEE60]) = (a1 + 56361734) ^ 0x3FF;
  LODWORD(STACK[0xEE64]) = 0;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v1 + 784) = -299994601
                        - 1705718857 * (((v2 - 240) & 0xC6B2F971 | ~((v2 - 240) | 0xC6B2F971)) ^ 0x4DFD9D7)
                        + a1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * *(int *)(v1 + 788)) - 8))(v5);
}

uint64_t sub_100B348C0()
{
  uint64_t (*v0)(void);

  v0 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2281))
                         - ((STACK[0x6508] - 3213) ^ 0x3E5));
  STACK[0xB9F0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2336)) - 8;
  return v0();
}

uint64_t sub_100B34934()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] - 3234;
  v2 = STACK[0x6AD8];
  STACK[0x7530] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2838)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 ^ 0x13B8) + (int)v0 - 2838)) - 8))();
}

uint64_t sub_100B34998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((194 * (v8 == ((v7 - 1305000414) & 0x4DC8AFFF) - 1926394417)) ^ (v7 - 25))) - (v7 - 3078) + 1132))(a1, a2, a3, a4, a5, a6, a7, 0x4B0D70AD3A88BE86);
}

_QWORD *sub_100B34A00@<X0>(uint64_t a1@<X8>)
{
  _QWORD *(*v1)(unint64_t *__return_ptr);

  v1 = *(_QWORD *(**)(unint64_t *__return_ptr))(STACK[0x6AD8] + 8 * (int)(a1 ^ 0x308A ^ (a1 + 7011)));
  STACK[0x8E68] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  return v1(&STACK[0x8C74]);
}

uint64_t sub_100B34A70@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x7280] = v4;
  STACK[0x9398] = v2;
  LODWORD(STACK[0x7D14]) = v1;
  STACK[0x8F00] = a1;
  STACK[0x6FB0] = 0;
  LODWORD(STACK[0x7164]) = 0;
  v6 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v3 ^ 0x8D2D9467);
  STACK[0x85C8] = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v5 | (4 * (((v5 + 22) ^ (v6 == 0)) & 1)))))();
}

uint64_t sub_100B34B00(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  int v3;

  STACK[0x6AC0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((11 * (((v1 > a1) ^ ((v3 | 2) + 2)) & 1)) ^ (v3 | 0x2702)))
                            - (((v3 | 0x2702) - 7938) | 0x504u)
                            + 5393))();
}

uint64_t sub_100B34B5C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (32 * (v1 != -1926392729)))) - 8))(2515997230, 3233814620, 4042464860, 4042455897, 4078829339, 254928320, 14745600, 1894973440);
}

uint64_t sub_100B34C18(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;

  v23 = ((a1 + (v9 ^ (v12 + 2815)) + 2003) ^ ((v9 ^ 0xCBA6C30B) + 878263541) ^ ((v8 ^ 0x151D)
                                                                              + (v9 ^ 0x2C83B293)
                                                                              - 746828443))
      - 1785243895;
  v24 = (v23 ^ v19) & (2 * (v23 & v18)) ^ v23 & v18;
  v25 = ((2 * (v23 ^ 0x7652301)) ^ v20) & (v23 ^ 0x7652301) ^ (2 * (v23 ^ 0x7652301)) & a3;
  v26 = v25 ^ (v11 + 2468);
  v27 = (v25 ^ v21) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ v22) & v26 ^ (4 * v26) & a3;
  v29 = (v28 ^ a2) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x3033060C)) ^ a6) & (v28 ^ 0x3033060C) ^ (16 * (v28 ^ 0x3033060C)) & (a3 - 12);
  v31 = v29 ^ a3 ^ (v30 ^ (v10 + 1564)) & (v29 << 8);
  v32 = v23 ^ (2
             * ((v31 << 16) & a8 ^ v31 ^ ((v31 << 16) ^ 0x1E5C0000) & (((v30 ^ 0xF0C21A1C) << 8) & (a4 + 1191) ^ a7 ^ (((v30 ^ 0xF0C21A1C) << 8) ^ (a5 + 229)) & (v30 ^ 0xF0C21A1C))));
  *(_BYTE *)(v17 + (v32 ^ v16)) = *(_BYTE *)(v13 + (v32 ^ v16)) ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v8 ^ (32 * ((v32 ^ v15) != -1926392729))))
                            - 8))();
}

uint64_t sub_100B34D9C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((8245
                                                        * ((((v1 ^ 0x180ACE5B) - 403361371) ^ ((v1 ^ 0x284292C2)
                                                                                             - 675451586) ^ ((v1 ^ 0xBD65C8F6 ^ (v0 - 5389)) + 1117402882)) != 1926392729)) ^ v0))
                                          - 8))(146);
}

uint64_t sub_100B34E4C@<X0>(char a1@<W0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;

  v10 = v4 < v5;
  *(_BYTE *)(v9 + v2) = *(_BYTE *)(v8 + v2) ^ a1;
  v11 = v2 + 1;
  if (v10 == v11 > (a2 ^ v7))
    v10 = v11 + v5 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v10 * v6) ^ v3)) - 8))();
}

uint64_t sub_100B34EA4@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x73A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((41 * (a1 ^ 0x116) - 6977) ^ a1)) - 12))();
}

uint64_t sub_100B34EEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  int v10;

  STACK[0xC628] = v2;
  *(_DWORD *)(v1 + 2472) = v3;
  v6 = STACK[0xC768];
  v7 = (_BYTE *)(v0 + STACK[0xC768]);
  STACK[0x6D50] = (unint64_t)v7;
  STACK[0xC768] = v6 + 32;
  STACK[0x8288] = v5;
  STACK[0x70A0] = 0;
  STACK[0x93E8] = 0;
  STACK[0xA970] = 0;
  LODWORD(STACK[0x6BD4]) = -1926392729;
  LODWORD(STACK[0x9F3C]) = 0;
  STACK[0xA2A0] = 0x55D9758D0B8C38CELL;
  STACK[0x90F0] = 0;
  LODWORD(STACK[0x9CDC]) = -1926392729;
  v8 = sub_10009ABD4(v7, 0, 0x20uLL);
  if (v5)
    v9 = v3 == -1926392729;
  else
    v9 = 1;
  v10 = !v9;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31063 * v10) ^ v4)) - 8))(v8);
}

uint64_t sub_100B34FE8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(128);
  STACK[0x9BC8] = v1 + 0x4B0D70AD3A88BE86;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((v1 != 0) * ((v0 + 701779112) & 0xD62B95FF ^ 0x105B)) ^ v0))
                            - ((v0 - 1316848623) & 0x4E7D7EE3)
                            + 10427))();
}

uint64_t sub_100B35090(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (454 * (a1 != 0))))
                            - ((v1 + 2078757692) & 0xF57CAE4F ^ 0x71642A47)))();
}

uint64_t sub_100B350E4(_QWORD *a1)
{
  unsigned int v1;
  int v2;

  *a1 = 0x3C7DEF729F5B1DDALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((2623 * (v1 > 0x4FCCEB48)) ^ (v1 + v2)))
                            - ((v1 - 1902376472) ^ 0x343FLL)))();
}

uint64_t sub_100B3513C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = 0x3C7DEF729F5B1DDALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v1 - 11965) ^ 0x2EB) - 1926) * (v2 == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_100B35188()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xAB68] = ((v0 + 20993) ^ 0xFFFFFFFFFFFFA66ELL) + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x1525)) - 12))();
}

uint64_t sub_100B351D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v7 + 4238) | 4) ^ 0x26DA) + v7)) - 4))(a1, a2, a3, a4, a5, a6, a7, &off_1015B46D0);
}

uint64_t sub_100B3520C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 == LODWORD(STACK[0x3254]) - 1926396918)
                                               * (142 * (STACK[0x6508] ^ 0x107E) + 20954)) ^ (STACK[0x6508] - 25)))
                            - 4))();
}

uint64_t sub_100B35264()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3254])) - 4))();
}

uint64_t sub_100B352C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unint64_t v5;

  LODWORD(STACK[0xC248]) = v4;
  v5 = STACK[0x6AD8];
  STACK[0xA3E8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8 * (((v3 + 17633) ^ 0x59C4) + v3)))(a1, a2, a3, 4128);
}

uint64_t sub_100B35314()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v1 = STACK[0x6508];
  v2 = STACK[0xBCD8];
  v3 = (STACK[0x6508] - 789641745) ^ 0xF10;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = (v1 - 789641745) ^ 3;
  LODWORD(STACK[0xEE50]) = v3;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 - 789641745;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v0 - 240) & 0x76490398) - (v0 - 240) - 1984496539) ^ 0xB424233C)
                          + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v5);
}

uint64_t sub_100B353EC()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 355;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B35414()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((7552
                                               * (LODWORD(STACK[0xC248]) == ((347
                                                                            * (STACK[0x6508] ^ 0x1073)) ^ 0x8D2D92A0))) ^ (STACK[0x6508] + 6045)))
                            - 12))();
}

uint64_t sub_100B35474()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x3689 ^ ((v0 + 2367) | 0x70))) - 8))();
}

uint64_t sub_100B354AC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x85C0];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = (v0 - 1039738002) ^ 0x32;
  LODWORD(STACK[0xEE50]) = (v0 - 1039738002) | 0x1013;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v0 - 1039738002;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v1 - 240) | 0x36601A0) - (v1 - 240) + ((v1 - 240) & 0xFC99FE58)) ^ 0x3EF4DEF9)
                          + v0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100B35584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v7 = STACK[0x6508];
  v8 = STACK[0x6508] + 33;
  v9 = STACK[0x85C0];
  v10 = STACK[0x6AD8];
  *(_QWORD *)(v2 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 4;
  *(_QWORD *)(v2 + 968) = v9;
  *(_QWORD *)(v1 + 792) = v0;
  *(_DWORD *)(v1 + 784) = v3
                        - ((1658431759 - ((v6 - 240) | 0x62D9A90F) + ((v6 - 240) | 0x9D2656F0)) ^ 0xA0B489A9) * v4
                        + v7;
  v11 = v5(v6 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * (v8 ^ 0xB6)) - 8))(v11);
}

uint64_t sub_100B3560C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = STACK[0x6508];
  v8 = STACK[0xC2C0];
  v9 = STACK[0x6AD8];
  *(_QWORD *)(v2 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)(STACK[0x6508] + 254139833) ^ 0xF25FE53)) - 4;
  *(_DWORD *)(v2 + 960) = v7 + 254139837;
  *(_DWORD *)(v2 + 1008) = v7 + 254136628;
  *(_DWORD *)(v2 + 1024) = 0;
  *(_DWORD *)(v2 + 1028) = v7 + 254139833;
  *(_QWORD *)(v2 + 976) = 0;
  *(_QWORD *)(v2 + 1016) = v8;
  *(_DWORD *)(v1 + 784) = v3 - ((((2 * (v6 - 240)) | 0x2A8A3A2E) - (v6 - 240) - 356850967) ^ 0x28D7C24E) * v4 + v7;
  *(_QWORD *)(v1 + 792) = v0;
  v10 = v5(v6 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * *(int *)(v1 + 788)) - 8))(v10);
}

uint64_t sub_100B356BC()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 221;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B356DC()
{
  return ((uint64_t (*)(void))STACK[0x92F0])();
}

uint64_t sub_100B356F8()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  STACK[0x78F0] = v1;
  STACK[0xA3A8] = v2;
  STACK[0xAD30] = 0xAD7DC3C140BF010;
  v3 = STACK[0x6AD8];
  STACK[0xCF88] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(v0 ^ (v0 + 903297399) & 0xCA28BEEF ^ 0x1DA8 ^ (8727
                                                                                             * ((v0 + 1159125704) <= 0x890BD9CA))))
                            - 4))();
}

uint64_t sub_100B357A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 395599991) & 0x179458FD ^ 0x2D26)
                                               * (a4 == -1926392729)) ^ (STACK[0x6508] + 3013)))
                            - (STACK[0x6508] ^ 0x107ELL)))();
}

_QWORD *sub_100B35808()
{
  uint64_t v0;
  unint64_t v1;

  STACK[0x7218] = STACK[0xAD30];
  STACK[0xCD90] = 0;
  LODWORD(STACK[0x848C]) = 1784467771;
  STACK[0x9800] = 0;
  v1 = STACK[0x6AD8];
  STACK[0xC6C8] = (((_DWORD)v0 + 6159) | 0x1840u) - 14676 + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(_QWORD *(**)(unint64_t *__return_ptr, uint64_t, unint64_t, unint64_t, unint64_t))(v1 + 8 * (v0 + 2198)))(&STACK[0x9800], 236, STACK[0x5680], STACK[0x5678], STACK[0x5670]);
}

uint64_t sub_100B35898(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((LODWORD(STACK[0x4D8C]) ^ 0x20FF) * (a4 == -1926392729)) ^ LODWORD(STACK[0x2A4C])))
                            - 4))();
}

uint64_t sub_100B358D8()
{
  int v0;
  uint64_t v1;

  v0 = LODWORD(STACK[0x4D8C]) ^ 0x1030;
  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])((LODWORD(STACK[0x7784]) - 1784467771));
  STACK[0xA780] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((478 * (v1 == 0)) ^ v0))
                            - ((v0 + 1046883618) & 0xC199B277 ^ 0x1072)))();
}

uint64_t sub_100B35964(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  LODWORD(STACK[0xDFEC]) = a4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v4 + 7522)))();
}

uint64_t sub_100B35988()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x7428] + 0x7B33A84430ED2D81;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = (v1 + 1042860731) | v0;
  LODWORD(STACK[0xEE50]) = (v1 + 1042860731) ^ 0xE54;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 + 1042860731;
  STACK[0xEE30] = v3;
  STACK[0xEE58] = 0x7D47F0B875983B89;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v2 - 240)) | 0xED7F5232) - (v2 - 240) - 1992272153) ^ 0x4B2D7640)
                          + v1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v5);
}

uint64_t sub_100B35A78()
{
  unsigned int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 923807483;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)(v0 ^ 0xC8EFEF25 ^ (4750 * (v0 > 0xCB13B363))))
                                          - 8))(v1);
}

uint64_t sub_100B35AE0()
{
  int v0;
  int v1;

  v1 = STACK[0x6508] + 13589;
  STACK[0xC768] += STACK[0x6508] + 30 - 4260;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (26 * (v0 != -1926392729)))) - 12))();
}

uint64_t sub_100B35B54()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;

  v3 = STACK[0x848C];
  v4 = (v3 ^ 0xC5230CB5) & (2 * ((((v0 + 1609220971) & 0xA0153C76) - 1784471985) & v3)) ^ (((v0 + 1609220971) & 0xA0153C76)
                                                                                         - 1784471985) & v3;
  v5 = ((2 * (v3 ^ 0xE42740B7)) ^ 0xE308DCE4) & (v3 ^ 0xE42740B7) ^ (2 * (v3 ^ 0xE42740B7)) & 0x71846E72;
  v6 = v5 ^ 0x10842212;
  v7 = (v5 ^ 0x61004C22) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xC611B9C8) & v6 ^ (4 * v6) & 0x71846E70;
  v9 = (v8 ^ 0x40002842) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x31844632)) ^ 0x1846E720) & (v8 ^ 0x31844632) ^ (16 * (v8 ^ 0x31844632)) & 0x71846E70;
  v11 = v9 ^ 0x71846E72 ^ (v10 ^ 0x10046652) & (v9 << 8);
  v12 = LODWORD(STACK[0x848C]) ^ (2
                                * ((v11 << 16) & 0x71840000 ^ v11 ^ ((v11 << 16) ^ 0x6E720000) & (((v10 ^ 0x61800852) << 8) & 0x71840000 ^ 0x71800000 ^ (((v10 ^ 0x61800852) << 8) ^ 0x846E0000) & (v10 ^ 0x61800852))));
  v13 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  LODWORD(STACK[0xEE20]) = v12 ^ 0xD6B96A44;
  STACK[0xEE38] = STACK[0x9800];
  STACK[0xEE40] = STACK[0x78F0];
  STACK[0xEE48] = STACK[0xA3A8];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v2 - 240)) | 0x7D8E8202) - (v2 - 240) + 1094237951) ^ 0x83559E58)
                          + v0
                          - 30;
  STACK[0xEE28] = v1;
  LOBYTE(STACK[0xEE68]) = 35;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v14 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * (v0 + 13565)) - 12))(v14);
}

uint64_t sub_100B35DA8()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0xC468]) = v0;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v1 - 1095639753) ^ 0xBEB1FDD1)) - 4;
  LODWORD(STACK[0xEE20]) = v1 - 1095639775;
  LODWORD(STACK[0xEE50]) = (v1 - 1095639753) ^ 0xF56;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 - 1095639753;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v3 - 240)) | 0x39D07E04) - (v3 - 240) + 1662501118) ^ 0xA17AE05B)
                          + v1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v5);
}

uint64_t sub_100B35E80()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 266;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B35EA0()
{
  unsigned int v0;
  unint64_t v1;

  v0 = (STACK[0x6508] - 3885) | 0x204;
  v1 = STACK[0x9800];
  STACK[0x7100] = STACK[0x9800];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((77 * (v1 == 0)) ^ LODWORD(STACK[0x2C4C]))) - v0 + 837))();
}

uint64_t sub_100B35EF0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v1 = STACK[0x28A4] & 0x37C873F9;
  v2 = STACK[0x6508] + 13;
  v3 = STACK[0x6AD8];
  v4 = STACK[0x6508] + 427180632;
  v5 = 2142736129
     * ((0xA540F121644976E4 - ((v0 - 240) | 0xA540F121644976E4) + STACK[0x2898]) ^ 0x27A406D2F8EE1D12);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) ^ v5;
  STACK[0x1D350] = STACK[0x4840];
  LODWORD(STACK[0x1D358]) = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v2 ^ 0xCB8)) - (v1 ^ 0xC1)))(v6);
}

uint64_t sub_100B35FCC@<X0>(int a1@<W3>, int a2@<W8>)
{
  LODWORD(STACK[0x7B0C]) = a1;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (a2 + 4467)))(5121);
}

uint64_t sub_100B3601C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(a1 - 11310 + ((a1 - 825) | 0x39A8))) - 8))();
}

uint64_t sub_100B36058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  LODWORD(STACK[0xDFEC]) = -1926392729;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 - 10971) ^ 0x3C22))
                                                                                       - ((v4 + 577848355) & 0xDD8ECF9B)
                                                                                       + 17555))(a1, a2, a3, a4, 0xD218315410365DB9);
}

uint64_t sub_100B360D0()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v2 = LODWORD(STACK[0x1D4C]) | 0x1011060u;
  v3 = STACK[0xC4A8];
  v4 = STACK[0x7CE0];
  v5 = STACK[0x7428];
  v6 = STACK[0xA780];
  v7 = STACK[0x7784];
  v8 = 1651633301 * ((2 * ((v1 - 240) & 0x11A1DB28) - (v1 - 240) - 295820077) ^ 0xFE566273);
  LODWORD(STACK[0x1D368]) = v8 + STACK[0x6508] + 1600395290;
  STACK[0x1D358] = v3;
  STACK[0x1D360] = v5;
  STACK[0x1D378] = v6;
  LODWORD(STACK[0x1D350]) = -475732267 - v8 + 89769207 * v7;
  STACK[0x1D370] = v4;
  v9 = v0(v1 - 240);
  return ((uint64_t (*)(uint64_t))(2368574567
                                          - v2
                                          + *(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (((4 * (LODWORD(STACK[0x1D354]) == 1624777124)) | (16 * (LODWORD(STACK[0x1D354]) == 1624777124))) ^ LODWORD(STACK[0x1D34])))
                                          - 4))(v9);
}

uint64_t sub_100B361E4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((27730 * (((LODWORD(STACK[0xDFEC]) - v0) | (v0 - LODWORD(STACK[0xDFEC]))) >= 0)) ^ (v0 + 1926400251 + ((v0 + 1926396875) | 0x44)))))();
}

uint64_t sub_100B36248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  unint64_t v4;

  STACK[0xCD90] = v4;
  LODWORD(STACK[0x848C]) = STACK[0x7784];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (a4 + 7522)))(a1, a2, a3, 2368574567);
}

uint64_t sub_100B3628C()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 7522;
  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B362BC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 1095) ^ (24059 * (v0 == -1926392729))))
                            - (((STACK[0x3C20] & 0x28787FBB) + 1241) ^ 0x3C6D)))();
}

uint64_t sub_100B36310()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((31452
                                          * (((LODWORD(STACK[0xB914]) == -1926392722) ^ (v0 + 53)) & 1)) ^ v0))
                            - ((v0 + 849786351) & 0xCD591F9B)
                            + 3335))();
}

uint64_t sub_100B36378()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((9013
                                          * ((v0 ^ (*(unsigned __int8 *)(STACK[0x8588]
                                                                                        - 0x55058F428EADA764) == (v0 ^ 0xBD))) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100B363E4@<X0>(unsigned int a1@<W8>)
{
  STACK[0x8348] = STACK[0x7A20] + 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(a1 + 13923)) - (a1 ^ 0xD17)))();
}

uint64_t sub_100B36430@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v5 = 3102 * (v1 ^ 0x1074u);
  v6 = STACK[0x6AD8];
  STACK[0xC4B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  v7 = v1 - 1480;
  STACK[0x9570] = v2;
  LODWORD(STACK[0xB584]) = v4;
  v8 = STACK[0xC768];
  STACK[0xACC8] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v5 + v8 - 6172;
  STACK[0xAC08] = v3;
  STACK[0xA5A0] = *(_QWORD *)(v6 + 8 * v7) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v7 ^ 0x35AB)) - 8))();
}

uint64_t sub_100B36504()
{
  int v0;
  int v1;

  v1 = STACK[0x6508] - 2503;
  LODWORD(STACK[0xD55C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x22EE)) - 12))();
}

uint64_t sub_100B3654C()
{
  unint64_t v0;
  unint64_t v1;

  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (int)(((v0 > v1)
                                                                                                 * ((7 * (STACK[0x6508] ^ 0x1561)) ^ 0x2546)) ^ (STACK[0x6508] + 4907)))
                                                                              - (((STACK[0x6508] + 4378) | 0x22A) ^ 0x23BELL)))(1772489163, STACK[0x5650], STACK[0x5648]);
}

uint64_t sub_100B365C8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v8 = (unint64_t)(((((_DWORD)v5 + (_DWORD)v3) * a1) ^ (((v5 + v3) * a1) >> 16)) * a1) >> (((v4 + 104) | 0x54) ^ 0x6Eu);
  *(_BYTE *)(v7 + v3) = *(_BYTE *)(a2 + v8) ^ *(_BYTE *)(v5 + v3) ^ *(_BYTE *)(v8 + a3 + 4) ^ *(_BYTE *)(v8 + v6 + 2) ^ ((((v5 + v3) * a1) ^ (((v5 + v3) * a1) >> 16)) * a1) ^ (-9 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1788 * (v3 != 19)) ^ v4)) - 4))();
}

uint64_t sub_100B36654(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v8 = v4 - 1;
  v9 = ((((_DWORD)v5 + (_DWORD)v8) * a1) ^ (((v5 + v8) * a1) >> 16)) * a1;
  *(_BYTE *)(v7 + v8) = *(_BYTE *)(a2 + (v9 >> 24)) ^ *(_BYTE *)(v5 + v8) ^ *(_BYTE *)((v9 >> 24) + a3 + 4) ^ *(_BYTE *)(v6 + (v9 >> 24) + (v3 ^ 0x23A3u)) ^ v9 ^ (-9 * ((((((_DWORD)v5 + (_DWORD)v8) * a1) ^ (((v5 + v8) * a1) >> 16)) * a1) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27 * (v8 == 0)) ^ v3)) - 4))();
}

uint64_t sub_100B366D0()
{
  unint64_t v0;
  uint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 11243;
  *(_BYTE *)STACK[0x7410] = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 1095)) - (v1 ^ 0x3C6D)))();
}

uint64_t sub_100B36714()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((STACK[0x8588] != 0x55058F428EADAA34) | (16 * (STACK[0x8588] != 0x55058F428EADAA34))) ^ v0)))();
}

uint64_t sub_100B36754@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = 2098 * (v1 ^ 0x3C63);
  v4 = STACK[0x6AD8];
  v5 = 1872284299
     * ((0x3CB1FE8DE2E88378 - ((v2 - 240) | 0x3CB1FE8DE2E88378) + STACK[0x3390]) ^ 0x5AE73AF53E66D36ALL);
  STACK[0x1D350] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - v5 - 8;
  STACK[0x1D358] = a1;
  LODWORD(STACK[0x1D364]) = v5 + v3 + 1037162758;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x48F8])(v2 - 240);
  STACK[0x8588] = 0x55058F428EADAA34;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x89F ^ (v3 + 5174))))(v6);
}

uint64_t sub_100B36824()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v0 - 5194) ^ 0xFB ^ ((v0 - 5194) | 0x26) ^ 0x6B24) * (v1 == -1926392729)) ^ v0))
                            - 12))();
}

uint64_t sub_100B36874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  BOOL v3;
  int v6;

  if (STACK[0xC2A8])
    v3 = STACK[0x99E8] == 0;
  else
    v3 = 1;
  v6 = v3 || STACK[0xC250] == 0 || STACK[0xB080] == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v6 * ((49 * (a3 ^ 0x10FD)) ^ (614 * (a3 ^ 0x10AC)) ^ 0xDD)) ^ a3))
                                                                                                - 4))(a1, a2, 1620702590, 4294967291, 23987, 4844, 2674262670);
}

uint64_t sub_100B36920()
{
  int v0;
  unsigned __int16 *v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((18708 * (*v1 == (unsigned __int16)(((v0 + 4103) ^ 0x30A7) - 4213))) | v0))
                            - 4))();
}

uint64_t sub_100B36968()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((4 * (*(_QWORD *)STACK[0x4548] != 0)) | (8
                                                                                          * (*(_QWORD *)STACK[0x4548] != 0))) ^ v0))
                            - (v0 ^ 0x20D5)))();
}

uint64_t sub_100B369A4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BOOL4 v7;

  v2 = (v0 - 320834526) & 0x131F7B9C;
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4;
  v4 = (_QWORD *)STACK[0x4548];
  STACK[0xEE28] = STACK[0x4548];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * (((v1 - 240) & 0x93C63DB | ~((v1 - 240) | 0x93C63DB)) ^ 0xCB51437D)
                          + v2
                          - 26;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  v7 = LODWORD(STACK[0x1D354]) != (v2 ^ 0x74B7) - 25639 || *v4 == 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (int)((v7 * (v2 - 2564)) ^ (v2 + 4173))) - 4))(v5);
}

uint64_t sub_100B36A94@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = 2142736129
     * ((0x3B15389B4FDF3FE3 - (STACK[0x2218] | 0x3B15389B4FDF3FE3) + STACK[0x2210]) ^ 0xD60F9172708D2B87);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v4;
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180620) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 + 5583))
                                          - ((v1 + 1948378981) & 0x8BDE6C3F)
                                          + 25635))(v5);
}

uint64_t sub_100B36B4C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((((v1 ^ 0x6425) + 1902) ^ (*(_DWORD *)(v0 + 4) == -1926392722)) & 1) == 0)
                                          * ((956 * (v1 ^ 0x6425)) ^ 0x767)) ^ v1))
                            - 8))();
}

uint64_t sub_100B36BA4@<X0>(int a1@<W8>)
{
  STACK[0x7048] = 0;
  LODWORD(STACK[0xCF00]) = -1926392729;
  STACK[0x9F08] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x1201)) - ((a1 + 7353) ^ 0x2435)))();
}

uint64_t sub_100B36C0C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2041)) - 4))();
}

uint64_t sub_100B36C20()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v1 < (v0 ^ 0x72D2DCCE)) * ((v0 + 3335) ^ 0x1D5F)) ^ (v0 + 3429)))
                            - 4))();
}

uint64_t sub_100B36C6C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (16336 * (v3 < 1926417542))))
                                                                                                - ((((v2 - 8055) | 0x2488u)
                                                                                                  - 21538) ^ 0x10C2)))(a1, a2, 1620702590, 4294967291, 23987, 4844, 2674262670);
}

uint64_t sub_100B36CDC()
{
  int v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((3968 * (v3 != (((((v0 - 166) | 0x52) ^ v2) * v1) ^ 0x8D2D8411))) ^ v0))
                            - 4))();
}

uint64_t sub_100B36D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 < (((a3 - 5433) | 0x5028) ^ (v3 + 3143))) * (a3 - 7311)) ^ a3))
                                                                                                - 4))(a1, a2, 1620702590, 4294967291, 23987, 4844, 2674262670);
}

uint64_t sub_100B36D80@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  v2 = a1 + 13367;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4
                                           * (((v2 + 79) ^ (v1 < (((v2 - 20916) | 0x1F4A) ^ 0x72D2D24B))) & 1)) & 0xBF | ((((v2 + 79) ^ (v1 < (((v2 - 20916) | 0x1F4A) ^ 0x72D2D24B))) & 1) << 6)) ^ v2))
                            - 8))();
}

uint64_t sub_100B36DE4()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0x72D2DDC9 ^ (3968
                                                                 * ((v0 & (v0 ^ v1) | (v0 - v1) & ~(v0 ^ v1)) >> 31))))
                            - 4))();
}

uint64_t sub_100B36E38@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 < a1 + 1926391707) * (((a1 - 25004) | 0x1C0A) - 7983)) ^ a1)))();
}

uint64_t sub_100B36E7C()
{
  int v0;
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (10574 * (v2 == 1926417543))))
                            - ((v0 + 1110850349) & 0xBDC9B5FE)
                            - ((v0 - 3914) | v1)
                            + 8424))();
}

uint64_t sub_100B36EDC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 84)) - 4))();
}

uint64_t sub_100B36EF4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((204 * (v1 >= 1926417716)) ^ v0)) - 4))();
}

uint64_t sub_100B36F24()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 18338) ^ (3968 * (v2 != v1))))
                            - ((((v0 - 18338) ^ 0xBCu) - 4) ^ (v0 - 18422))))();
}

uint64_t sub_100B36F64()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 7990) | 0x1062) ^ 0x5C2C) * (v2 == v1 - 73)) ^ v0))
                            - ((602 * (v0 ^ 0x1F4Du)) ^ 0x1072)))();
}

uint64_t sub_100B36FB8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 84)) - 4))();
}

uint64_t sub_100B36FDC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v1 != (((((v0 + 441403231) & 0xE5B070FE) - 4262) | 0x1052) ^ 0x72D2DD58))
                                               * (((((v0 + 441403231) & 0xE5B070FE) + 526288812) & 0xE0A177FF) - 246)) ^ (v0 + 441403231) & 0xE5B070FE))
                            - 4))();
}

uint64_t sub_100B37050@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 84)) - 4))();
}

uint64_t sub_100B37070()
{
  STACK[0xC768] -= 64;
  return ((uint64_t (*)(void))STACK[0xB8A8])();
}

uint64_t sub_100B3709C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (v0 + 7361);
  STACK[0xA570] = 0;
  LODWORD(STACK[0xCC78]) = -1926392729;
  STACK[0xC460] = 0;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1209));
  STACK[0xA558] = 0;
  return ((uint64_t (*)(void))(v2 - (v1 ^ 0x2435)))();
}

uint64_t sub_100B37118@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;

  STACK[0xB3C8] = a1;
  STACK[0x8678] = v3;
  STACK[0xD008] = v2;
  LODWORD(STACK[0xB604]) = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)STACK[0x43E8] != 892252502)
                                          * (((v1 ^ 0x250F) * v4 - 11290) ^ v1 ^ 0x2C4F)) ^ v1))
                            - 8))();
}

uint64_t sub_100B371A0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  v2 = *(_DWORD *)(STACK[0x49E8] + 76);
  *(_DWORD *)(v0 + 2948) = v2;
  v3 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v2 ^ 0x8D2D9467);
  STACK[0xE3A8] = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v1 + 73) ^ (v3 == 0)) & 1) * (((v1 - 13350) | 0x1070) ^ 0x1060)) ^ v1)))();
}

uint64_t sub_100B3721C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 6363))
                                                                                                - 12))(2959752912, 216, 1335218521, 12646, 5750, a6, 26365);
}

_QWORD *sub_100B372D4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x7AA8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x1AE8))
                                                                 - (v0 ^ 0xC58)
                                                                 + 1058))(&STACK[0xB604]);
}

uint64_t sub_100B37314()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((470 * (v1 != (v0 ^ 0x8D2D8411))) ^ (v0 + 13448))) - 8))();
}

uint64_t sub_100B37358()
{
  int v0;

  STACK[0xD190] = 0;
  LODWORD(STACK[0xB4C4]) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 1605)))();
}

uint64_t sub_100B37384()
{
  unsigned int v0;

  STACK[0xD190] = STACK[0xBEB0];
  LODWORD(STACK[0xB4C4]) = STACK[0xC084];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0) - (v0 ^ 0x3889)))();
}

uint64_t sub_100B373DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((23136
                                               * (v0 == (((STACK[0x6508] - 4143) | 0x5380) ^ 0x8D2DC7A0))) ^ (STACK[0x6508] + 2955)))
                            - 4))();
}

uint64_t sub_100B3743C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  _BOOL4 v4;

  LODWORD(STACK[0xE050]) = v1;
  LODWORD(STACK[0xE04C]) = a1;
  v4 = v1 < LODWORD(STACK[0x6DA0]) && a1 == -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((10899 * v4) ^ (v2 + 2955)))
                            - 85 * (v2 ^ 0x1061u)
                            + 1951))();
}

uint64_t sub_100B374AC()
{
  unsigned int v0;
  int v1;

  LOBYTE(STACK[0xD563]) = *(_BYTE *)(STACK[0xBEE8] + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x12BA)) - 12))();
}

uint64_t sub_100B37524()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((12526
                                          * (((STACK[0xBEE8] == 0) ^ (v0 - 81 + v0 + 47 + 1)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_100B37588@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  v1 = (a1 | 0x1000) + 17233;
  v2 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))(v2);
}

uint64_t sub_100B375B4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((2971 * (v1 == ((v0 - 963) ^ 0x8D2D98D4))) ^ (v0 + 8864)))
                            - 4))();
}

uint64_t sub_100B375FC@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;

  LODWORD(STACK[0x904C]) = STACK[0xE048];
  v1 = STACK[0x9DC0];
  *(_DWORD *)(v1 + 24) = -1926392729;
  v1 += 24;
  STACK[0x6E80] = v1;
  STACK[0xD568] = v1;
  *(_QWORD *)(v1 + 8) = 0x603CE14A0A8FADE1;
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = -1926392729;
  *(_DWORD *)(v1 + 36) = -1926392729;
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = -1926392729;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0x603CE14A0A8FADE1;
  *(_QWORD *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 104) = -1926392729;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0x603CE14A0A8FADE1;
  *(_DWORD *)(v1 + 136) = -1926392729;
  *(_QWORD *)(v1 + 144) = 0x603CE14A0A8FADE1;
  *(_QWORD *)(v1 + 128) = 0;
  v2 = STACK[0x6AD8];
  STACK[0xD1B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((a1 + 4510) ^ a1)))(5121);
}

uint64_t sub_100B376F4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2948)) - 4))();
}

uint64_t sub_100B37720()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 2948)) - 4))();
}

uint64_t sub_100B3774C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2948)) - 4))();
}

uint64_t sub_100B37770()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 13803)) - 4))();
}

uint64_t sub_100B37794()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 4572;
  v3 = STACK[0x9E28];
  v4 = STACK[0xE054];
  v5 = LODWORD(STACK[0xE054]) ^ 0xFBE3B09D;
  v6 = ((LODWORD(STACK[0xA44C]) ^ 0x6FD87A0A) - 1876457994) ^ ((LODWORD(STACK[0xA44C]) ^ 0xCACA40A4) + 892714844) ^ ((LODWORD(STACK[0xA44C]) ^ 0x283FAEC9) - 675262153);
  v7 = 1132842119 * ((2 * ((v0 - 240) & 0xDA02568) - (v0 - 240) - 228599148) ^ 0xBCA69DB);
  STACK[0x1D360] = STACK[0x9270];
  LODWORD(STACK[0x1D36C]) = v7 + v5 + ((2 * v4) & 0xF7C7613A) + 920608623;
  STACK[0x1D358] = v3 + 5;
  LODWORD(STACK[0x1D354]) = v6 - v7 - 1810924891;
  LODWORD(STACK[0x1D368]) = v1 - v7 + 8870;
  v8 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0 + SLODWORD(STACK[0x2BB4])))(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * ((32586 * (LODWORD(STACK[0x1D350]) == -1926392729)) ^ v2))
                                          - 8))(v8);
}

uint64_t sub_100B37918()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x229C])) - 12))();
}

uint64_t sub_100B3793C()
{
  int v0;
  unint64_t v1;
  int v2;

  STACK[0xA868] = v1;
  LODWORD(STACK[0xCD2C]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4572)) - 8))();
}

uint64_t sub_100B37974()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 8864)) - 4))();
}

uint64_t sub_100B37998()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8869 * (STACK[0xD190] != 0)) ^ (v0 + 1605))))();
}

uint64_t sub_100B379C8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B379E0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((9562 * (STACK[0xAEB0] != 0)) ^ (v0 + 3352))) - 12))();
}

uint64_t sub_100B37A14()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B37A30()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((51 * (v1 == ((v0 + 142281445) & 0xF784FFA6) - 1926399643)) ^ (v0 + 16531)))
                            - 12))();
}

uint64_t sub_100B37A84@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  *(_QWORD *)STACK[0xA9E8] = STACK[0xA868];
  *(_DWORD *)(STACK[0xB780] - 0x3F0E7E2645869007) = STACK[0xCD2C];
  *(_QWORD *)STACK[0x7FA0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)a1) - (a1 ^ 0x1B0ELL)))();
}

uint64_t sub_100B37AF4@<X0>(int a1@<W8>)
{
  *(_QWORD *)STACK[0xA9E8] = 0;
  *(_DWORD *)(STACK[0xB780] - 0x3F0E7E2645869007) = -1926392729;
  *(_QWORD *)STACK[0x7FA0] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((a1 - 1011974276) ^ (STACK[0xA868] == 0)) & 1) == 0)
                                          * ((a1 - 2700) ^ 0x2601)) ^ a1))
                            - 12))();
}

uint64_t sub_100B37B90()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2700)) - 12))(v1);
}

uint64_t sub_100B37BB4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((11 * (STACK[0x99D8] == 0)) ^ (v0 + 4639))))();
}

uint64_t sub_100B37BE8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 4648)))(v1);
}

uint64_t sub_100B37C08()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 9710)))();
}

uint64_t sub_100B37C1C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((419 * (((v0 ^ (v1 < 1926417592)) & 1) == 0)) ^ (v0 + 6722)))
                            - (((v0 - 4054) | 0x1C44u) ^ 0x1CE8)))();
}

uint64_t sub_100B37C78()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v1 ^ 0x71EC) - 23944) | 0x4048) - 17438) * (v2 < v0 + 45)) ^ v1 ^ 0x71EC))
                            - 4))();
}

uint64_t sub_100B37CC0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((2003 * (v1 < ((((v0 - 11721) ^ 0x220B) - 16) ^ 0x72D2DCCB))) ^ (v0 - 11721)))
                            - 12))();
}

uint64_t sub_100B37D08()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 != v0) * (v1 ^ 0x11DA)) | v1)))();
}

uint64_t sub_100B37D44()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v0 ^ 0x1BC) + 6466)))();
}

uint64_t sub_100B37D70()
{
  int v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v2 & ~((v0 + 1926410174) ^ (v3 < v1 - 122))) * (v0 - 6908)) ^ v0))
                            - 12))();
}

uint64_t sub_100B37DB0@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(a1 ^ 0x72D2E664 ^ (((((a1 | v2) - a1) | (v2 - a1) & ~(v2 ^ a1)) >> 31) * v1))))();
}

uint64_t sub_100B37DF8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v2 == ((((a1 + 382149945) & 0x76661FFE) - 4504) | 0x1034) + v1)
                                * (((((a1 + 382149945) & 0x76661FFE) - 4502) | 0x1032) + 25736)) ^ (a1 + 382149945) & 0x76661FFE)))();
}

uint64_t sub_100B37E58()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 6466)))();
}

uint64_t sub_100B37E7C@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((62 * (v1 < 10 * (a1 ^ 0x4593) + 1926413146)) ^ a1))
                            - 4))();
}

uint64_t sub_100B37EC0()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((14434 * (v1 == 1926417710)) ^ v0)))();
}

uint64_t sub_100B37EF0()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((v1 < ((v0 - 3182) ^ 0x72D2DCF0)) * ((v0 - 2826) ^ 0x142C)) ^ (v0 + 3284))))();
}

uint64_t sub_100B37F34()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v0 - 356) ^ 0x2814) * (v1 == -1926392729)) ^ v0)))();
}

uint64_t sub_100B37F64@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 6466)))();
}

uint64_t sub_100B37F84()
{
  STACK[0xC768] -= 256;
  return ((uint64_t (*)(void))STACK[0x8240])();
}

uint64_t sub_100B37FAC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v0 ^ 0x29B8) * (v1 <= 1926417667)) ^ v0)))();
}

uint64_t sub_100B37FE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((v2 == (((((a1 - 1599912100) & 0xEC89FDDB) - 358) | 2) ^ (v1 - 28)))
                                     * (((a1 - 1599912100) & 0xEC89FDDB) + 9864)) ^ (a1 - 1599912100) & 0xEC89FDDB)))();
}

uint64_t sub_100B3802C@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((14434 * (v1 == ((301 * (a1 ^ 0x4454) - 1543591935) & 0x5C0157FE ^ 0x72D2DD42))) ^ a1 ^ 0x5580)))();
}

uint64_t sub_100B38088()
{
  int v0;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * ((42 * (((v0 == -1926392729) ^ (STACK[0x6508] - 1)) & 1)) ^ LODWORD(STACK[0x356C]))))(43);
}

uint64_t sub_100B380CC()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((32054
                                     * (((STACK[0xBD00] == 0x2EB35D1B00280420) ^ (((STACK[0x6508] - 112) | 0xB0) - 1)) & 1)) ^ ((STACK[0x6508] - 4208) | 0x37B0))))();
}

uint64_t sub_100B38134()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v0 - 13090) | 0x128) ^ 0x5A0) * v1) ^ 0x3F2C) + ((v0 - 13090) | 0x128)))
                            - 8))();
}

uint64_t sub_100B38178()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((31703
                                * (v0 != (((LODWORD(STACK[0x4B08]) ^ 0x1A02) - 1926396062) ^ (STACK[0x6508]
                                                                                            - 2757)))) ^ LODWORD(STACK[0x2C28]))))();
}

uint64_t sub_100B381CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  STACK[0xC348] = STACK[0xBD00];
  STACK[0xCD88] = 0;
  STACK[0x7E40] = 0x2EB35D1B00280420;
  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  LODWORD(STACK[0x7124]) = 1930690922;
  STACK[0x8B30] = v3;
  return (*(uint64_t (**)(_QWORD))(v2 + 8 * (int)(a1 ^ 0x52F8 ^ (a1 + 5505))))(*(_QWORD *)(v1 + 8 * (int)(a1 ^ 0xE64)));
}

uint64_t sub_100B38260()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(((((STACK[0x6508] - 4214) | 0x5BD) - 1447)
                                                             * (v0 == -1926392729)) ^ LODWORD(STACK[0x34FC])))
                                          - 4))(43);
}

uint64_t sub_100B382AC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x2451)) - (v0 ^ 0x26A1u) + 8980))();
}

uint64_t sub_100B382E0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((19098
                                               * (v0 == ((731 * (STACK[0x6508] ^ 0x1074)) ^ 0x8D2D91D1))) ^ (STACK[0x6508] + 6840)))
                            - 4))();
}

uint64_t sub_100B38330()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0x12A7 ^ (15080
                                                             * (((((v0 - 637490777) & 0x25FF7AA7) + 728005732) ^ v0) < 0xB5294031))))
                            - 8))();
}

uint64_t sub_100B383BC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((499 * (STACK[0x6508] ^ 0x1073) + 5665) * (v0 == -1926392729)) ^ (STACK[0x6508] + 6840)))
                            - 4))();
}

uint64_t sub_100B38408()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x176C)) - (v0 + 15620) + 18111))();
}

uint64_t sub_100B38464()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  v2 = STACK[0x6508] - 4063;
  v3 = STACK[0x6508] - 2160;
  LODWORD(STACK[0x8594]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ (23560 * (v1 == -1926392729)))) - (v2 ^ v0)))();
}

uint64_t sub_100B384BC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 20284)))();
}

uint64_t sub_100B384EC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 672))
                            - (STACK[0x6508]
                             + 231)
                            + 4433))();
}

uint64_t sub_100B38520()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6840)) - 4))();
}

uint64_t sub_100B3854C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((2 * (STACK[0xCD88] == 0)) | (8 * (STACK[0xCD88] == 0))) ^ LODWORD(STACK[0x3E94])))
                            - 8))();
}

uint64_t sub_100B38580()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 7237;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B385A8()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3E90])) - 8))(43);
}

uint64_t sub_100B385D0()
{
  int v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8
                                              * (((v2 >= v0 + 1926378490) * (v1 - 13786)) ^ LODWORD(STACK[0x3E98]))))();
}

uint64_t sub_100B38604()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v1 == ((v0 - 1422931967) & 0x54D005F9 ^ 0x72D26E01)) * (((v0 - 14198) | 0x1036) - 895)) ^ v0)))();
}

uint64_t sub_100B38660()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((((v0 - 13078) | 0x111) + 5840) ^ ((v0 - 14144) | 0x1000)) * (v1 == -1926392729)) ^ v0)))();
}

uint64_t sub_100B386B0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10312)) - 8))();
}

uint64_t sub_100B3870C(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8]
                                                     + 8
                                                     * (int)((30706 * (v1 == (STACK[0x3420] & 0xD95E53FF ^ 0x8D2D95EA))) ^ (STACK[0x6508] + 10048))))(a1, 2013256049);
}

uint64_t sub_100B38770@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5625 * (a1 != -962049736)) ^ (a1 + 2757)))
                            - ((a1 + 3817) ^ 0x1072)))();
}

uint64_t sub_100B387D8(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8]
                                                     + 8
                                                     * (int)((STACK[0x6508] + 10048) ^ (27806 * (v1 == -1926392729)))))(a1, 2013256049);
}

_QWORD *sub_100B38820()
{
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(STACK[0x6AD8]
                                                                             + 8 * SLODWORD(STACK[0x2300]))
                                                                 - 8))(&STACK[0x8DAC]);
}

uint64_t sub_100B38854()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3C44])))();
}

uint64_t sub_100B3887C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  LODWORD(STACK[0x6B88]) = v0;
  v3 = *(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (((v1 + 3967) ^ 0x22C1) + v1 - 1585));
  v4 = *(_QWORD *)(v2 + 8 * (v1 - 3305));
  STACK[0x8B30] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 1585)) - 8;
  return v3(v4 - 4);
}

uint64_t sub_100B388D4@<X0>(unint64_t a1@<X0>, char a2@<W8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  char v7;

  STACK[0xEBC0] = v3;
  STACK[0xEBC8] = v4;
  if (a1)
    v5 = v3 == 0;
  else
    v5 = 1;
  v7 = v5 || v4 == 0;
  LOBYTE(STACK[0xEBB7]) = a2;
  STACK[0xEBB8] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v2 ^ v7) & 1) * ((v2 - 8181) ^ 0x3FF2)) ^ v2))
                            - 8))();
}

uint64_t sub_100B38960(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = (v5 & (2 * v3)) + (v3 ^ a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5671
                                          * ((((*(unsigned __int8 *)(a1 + v6 + a3) - v4) | (v4
                                                                                          - *(unsigned __int8 *)(a1 + v6 + a3))) & 0x80) == 0)) ^ (v4 + 8199)))
                            - 8))();
}

uint64_t sub_100B389C4@<X0>(unsigned __int8 a1@<W8>)
{
  uint64_t v1;
  int v2;

  STACK[0xEBD0] = v1 - 0x4C1006400414200FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((8542
                                          * ((((v2 + 1) ^ a1 & ((((v2 + 7854) ^ 0x1EA0) & (v1 - 0x4C1006400414200FLL) | 0x400894B402802050)
                                                              + ((v1 - 0x4C1006400414200FLL) & 1 ^ 0x8406634BF851DEA1)
                                                              - (((v2 + 7854) ^ 0x1EA0) & (v1 - 0x4C1006400414200FLL) & 1 | 0x4B000002040) != 0xC40EF34FFAD1DEB1)) & 1) == 0)) ^ v2))
                            - 8))();
}

uint64_t sub_100B38A8C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v5 | (8
                                               * (*(_BYTE *)(v3
                                                           + (v4 ^ a2 ^ (v5 - 2020459752) & 0x786D8644)
                                                           + (v6 & (2 * v4))
                                                           + a3) != 0))))
                            - 8))();
}

uint64_t sub_100B38AE0@<X0>(unsigned __int8 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0xEBD8] = v2 - 0x4C1006400414200FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v1 ^ 0x5B52 ^ (231
                                                                      * (a1 & (((((((((_DWORD)v1 + 1162344823) & 0xBAB816FE)
                                                                                  + 20669) ^ 0x6130) & (v2 - 0x4C1006400414200FLL))
                                                                               - v1) | (v1
                                                                                      - ((((((_DWORD)v1 + 1162344823) & 0xBAB816FE)
                                                                                         + 20669) ^ 0x6130) & (v2 - 0x4C1006400414200FLL)))) < 0)))))
                            - 4))();
}

uint64_t sub_100B38B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0xEBE0] = a3 + v3 + 1;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5510])((((v5 + 293843907) & 0xEE7BFB7F) + 4294963081) & (v3 + v4 - 0x619BF8A7C8EBCFEDLL));
  STACK[0xC0E8] = v6 + 0x2EB35D1B00280420;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 != 0) * ((13 * (v5 ^ 0x6276)) ^ 0x2AF3)) ^ v5))
                            - 12))();
}

uint64_t sub_100B38C24()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = v1 + 0x7022066E7949C4A5 + 301 * (v0 ^ 0x2A8Fu) != 1110811944;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v2 | (2 * v2)) ^ v0)))();
}

uint64_t sub_100B38CD8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 16927)))();
}

uint64_t sub_100B38D00@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, char a7@<W7>, int a8@<W8>)
{
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;
  unint64_t v14;
  int v15;
  _BOOL4 v16;

  v13 = v8 < v10;
  *(_BYTE *)(v11 + v9) = 0;
  v14 = ((v9 + 1) ^ a2) + a5 + (((uint64_t)(v9 + 1) << ((a8 ^ a7) ^ a3)) & a4);
  v15 = v13 ^ (v14 < a1);
  v16 = v8 > v14;
  if (!v15)
    v13 = v16;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v13 * a6) ^ (a8 + v12))))();
}

uint64_t sub_100B38D64()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(200);
  STACK[0x95D8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 == 0) ^ (v0 + 111)) & 1) * ((v0 - 6713) ^ 0x1FE1)) ^ v0))
                            - 4))();
}

uint64_t sub_100B38DC8()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD1B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xE09 ^ (v0 + 985))))(5121);
}

uint64_t sub_100B38E44()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0xF83u) + 4206))(v1);
}

uint64_t sub_100B38E80()
{
  return ((uint64_t (*)(void))STACK[0x8B30])();
}

uint64_t sub_100B38E8C()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x34F8])) - 8))(STACK[0x73C0]);
}

uint64_t sub_100B38EC4()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((LODWORD(STACK[0x3568]) * (v0 == -1926392729)) ^ (STACK[0x6508] + 5958)))
                                          - 4))(43);
}

uint64_t sub_100B38F14()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xB228] != 0x2EB35D1B00280420)
                                          * ((LODWORD(STACK[0x2FFC]) - 5958) ^ 0xCEF ^ (733
                                                                                      * (LODWORD(STACK[0x2FFC]) ^ v0)))) ^ LODWORD(STACK[0x2FFC])))
                            - 4))();
}

uint64_t sub_100B38F80()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x2456)) - ((v0 + 7522) ^ 0x2314)))();
}

uint64_t sub_100B38FAC@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((a1 == 0x2EB35D1B00280420)
                                * (((v1 - 4892) | 0x8A) ^ (v1 - 1730651805) & 0x672793F6 ^ 0xDF)) ^ v1)))();
}

uint64_t sub_100B39018@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  STACK[0xEE28] = a1;
  STACK[0xEE38] = 0x5F92E8D8FECF3E32;
  STACK[0xEE40] = 0x4D4CFE6B13AF88DLL;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((407083181 - ((v2 - 240) | 0x184398AD) + ((v2 - 240) | 0xE7BC6752)) ^ 0xDA2EB80B)
                          + v1
                          - 20;
  ((void (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(v1 ^ 0x1E77 ^ (((v1 ^ 0x241A3A83) < 0x894B351E)
                                                                 * ((v1 - 1521220244) & 0x5AABFA7F ^ 0x3DB4)))))(43);
}

uint64_t sub_100B39138()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 5958) ^ (27858 * (v0 == -1926392729))))
                            - (((STACK[0x6508] - 3055) | 0x110) ^ 0x593)))();
}

uint64_t sub_100B3919C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 10338)) - ((a1 + 701883880) & 0xD62A3E85) + 10749))();
}

uint64_t sub_100B39200(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((STACK[0x6508] + 5958) ^ (6598
                                                                                               * (v1 == -1926392729))))
                                                   - 4))(a1, 2013256049);
}

uint64_t sub_100B39250()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 3762) ^ 0x186F)) - 4))();
}

uint64_t sub_100B39294@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int *v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v9;

  v6 = *v4;
  v7 = *v5;
  v8 = STACK[0x6AD8];
  STACK[0x9D98] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12;
  STACK[0xED70] = v7;
  LODWORD(STACK[0xED7C]) = v6;
  STACK[0xED80] = v3;
  STACK[0xED88] = v2;
  v9 = v7 == 0;
  LOBYTE(STACK[0xED97]) = v9;
  if (v6 - 1930690922 < ((v1 + 590468983) & 0xDCCE1BDF ^ 0x3C9))
    v9 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((27 * v9) ^ (v1 + 1048))) - 4))();
}

uint64_t sub_100B3932C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 824) = 1926417666;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 99)) - 4))();
}

uint64_t sub_100B39354()
{
  return ((uint64_t (*)(void))STACK[0x9D98])();
}

uint64_t sub_100B39364(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((STACK[0x6508] + 5923) ^ (37 * (v1 != -1926392729))))
                                                   - 4))(a1, 2013256049);
}

_QWORD *sub_100B393BC()
{
  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(STACK[0x6AD8]
                                                                             + 8 * (int)(STACK[0x6508] + 18854))
                                                                 - 8))(&STACK[0xAF94]);
}

uint64_t sub_100B393EC@<X0>(int *a1@<X8>)
{
  int v1;
  uint64_t *v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  _BOOL4 v10;

  v3 = STACK[0x6508] + 6970;
  v4 = *a1;
  v5 = *v2;
  v6 = STACK[0x6AD8];
  STACK[0x7AD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + ((STACK[0x6508] - 3280) ^ 0xFFFFFFFFFFFFFC5ELL);
  LODWORD(STACK[0xEDA4]) = v4;
  v7 = STACK[0xC768];
  v8 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x6E28] = (unint64_t)v8;
  STACK[0x9C18] = (unint64_t)(v8 + 0x1097C91CF9244B30);
  STACK[0xC768] = v7 + 224;
  v10 = (v4 - 1930690922) > 0x39 && v5 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((29229 * v10) ^ v3)) - 8))();
}

uint64_t sub_100B394B0@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  STACK[0xD1E0] = v2;
  STACK[0x8DE0] = v2 + (a1 - 1930690942);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x10C2)) - 4269 * (v1 ^ 0x3A4u) + 8530))();
}

uint64_t sub_100B39528()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 824) = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x10A9)) - 8))();
}

uint64_t sub_100B3957C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 5958)) - 4))();
}

uint64_t sub_100B395AC()
{
  int v0;
  int v1;

  LODWORD(STACK[0xCFBC]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((112 * (v0 == ((v1 + 15235) ^ 0x6546) - 11967)) ^ (v1 + 8634)))
                            - 12))();
}

uint64_t sub_100B39608@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((a1 == 0) ^ (v1 + 16)) & 1) * ((v1 - 7753) ^ 0x103C)) ^ v1))
                            - 12))();
}

uint64_t sub_100B39660()
{
  int v0;
  int v1;

  STACK[0xA300] = STACK[0x8BC8];
  LODWORD(STACK[0x9A34]) = STACK[0x8DAC];
  STACK[0x89C8] = STACK[0xBD00];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((405 * (v1 == ((212 * (v0 ^ 0x103B) - 6340) | 0x89A) - 1926404915)) ^ (v0 + 14361)))
                            - 4))();
}

uint64_t sub_100B39708@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (2047 * (a1 == 0))))
                            - ((v1 - 7296) ^ 0xFFFFFFFFFFFF9B7FLL)
                            - ((v1 - 18425) | 0x4806u)))();
}

uint64_t sub_100B39758()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v2 = (((LODWORD(STACK[0xBF84]) ^ 0xFF513553) + 11455149) ^ ((LODWORD(STACK[0xBF84]) ^ 0x1A76E20E) - 443998734) ^ (((v0 + 1745483572) ^ LODWORD(STACK[0xBF84])) + (((v0 - 15621) | 0x2078) ^ 0x97F593BF)))
     + 1056606084;
  v3 = (((LODWORD(STACK[0xD144]) ^ 0x50CF5056) - 1355763798) ^ ((LODWORD(STACK[0xD144]) ^ v1) - 338392759) ^ ((LODWORD(STACK[0xD144]) ^ 0xC9C9B286) + 909528442))
     + 1056606084;
  v4 = (v2 < 0xB1CCF31D) ^ (v3 < 0xB1CCF31D);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0xB1CCF31D;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4943 * !v5) ^ v0)) - 12))();
}

uint64_t sub_100B39880()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4822 * (STACK[0x7148] != 0)) ^ (v0 - 7441))) - 12))();
}

uint64_t sub_100B398C8@<X0>(int a1@<W8>)
{
  signed int v1;
  uint64_t v2;

  v1 = ((a1 + 33802250) & 0xFDFC1976) + 7807;
  v2 = sub_10009A6DC();
  STACK[0x7148] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(v2);
}

uint64_t sub_100B39910@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((STACK[0x8BC8] == 0) * (a1 ^ 0x2F7C)) ^ a1)))();
}

uint64_t sub_100B39944()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  STACK[0x8BC8] = 0;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7942)))(v1);
}

uint64_t sub_100B39974()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xBD00] != 0x2EB35D1B00280420)
                                          * ((v0 - 723361975) & 0x2B1D9CDB ^ 0xC1A)) ^ (v0 + 8643)))
                            - 12))();
}

uint64_t sub_100B399E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1F35u)) - (((v0 - 2039) | 0x800u) ^ 0xCA0)))();
}

uint64_t sub_100B39A10@<X0>(int a1@<W8>)
{
  unint64_t v1;

  STACK[0x9868] = v1;
  STACK[0x7110] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0x79C0] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0xB85 ^ (a1 + 5336))) - 12))();
}

uint64_t sub_100B39A70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  BOOL v10;
  int v11;

  STACK[0x9960] = v1;
  STACK[0xC768] = v0 + 16;
  STACK[0xA6B0] = 1;
  strcpy((char *)(v2 + v0), "Library/");
  v6 = (uint64_t)*(&off_1015B46D0 + v5 - 6741);
  v7 = *(_BYTE **)(v6 - 4);
  *v3 = *v7 - 113;
  v3[1] = v7[1] - 113;
  v3[2] = v7[2] - 113;
  v3[3] = v7[3] + ((v5 - 125) & 0x8F);
  v3[4] = v7[4] - 113;
  v3[5] = v7[5] + (((v5 - 90) | 0x81) ^ 0x2C);
  v3[6] = v7[6] - 113;
  v3[7] = v7[7] - 113;
  v3[8] = v7[8] - 113;
  v3[9] = v7[9] - 113;
  v3[10] = v7[10] - 113;
  v3[11] = v7[11] - 113;
  v3[12] = v7[12] - 113;
  v3[13] = v7[13] - 113;
  v3[14] = v7[14] - 113;
  v3[15] = v7[15] - 113;
  v3[16] = v7[16] - 113;
  v3[17] = v7[17] - 113;
  v3[18] = v7[18] - 113;
  v3[19] = v7[19] - 113;
  v3[20] = v7[20] - 113;
  v3[21] = v7[21] - 113;
  v3[22] = v7[22] - 113;
  v3[23] = v7[23] - 113;
  v3[24] = v7[24] - 113;
  v3[25] = v7[25] - 113;
  v8 = *(_BYTE **)(v6 - 4);
  v3[26] = v8[26] - 113;
  v3[27] = v8[27] - 113;
  v3[28] = v8[28] - 113;
  v9 = ((uint64_t (*)(_QWORD, unint64_t *, unint64_t *))*(&off_1015B46D0 + (v5 ^ 0x265D)))(0, &STACK[0xFFE3], &STACK[0xA6B0]);
  *v4 = v9;
  if (v9)
    v10 = STACK[0xA6B0] == 1;
  else
    v10 = 0;
  v11 = v10;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((223 * v11) ^ v5)))();
}

uint64_t sub_100B39CF8(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_BYTE *)((v7 + a2) + a1 + (v4 & (2 * v2)) + (v2 ^ v5) + v3) == 0)
                                * v6) ^ v7)))();
}

uint64_t sub_100B39D38@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4))(2360865770, 1934097855, 10997, 4294951516);
}

uint64_t sub_100B39DA8@<X0>(int a1@<W2>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((*(_BYTE *)(v6 + (v3 & (2 * v2)) + (v2 ^ v4) + v5) == 0) * a1) ^ a2))
                            - 4))();
}

uint64_t sub_100B39DF0()
{
  int v0;
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  _BOOL4 v5;

  v5 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v2 + v1 + v0 + (v4 ^ 0x37141257u)) == 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 * ((v4 - 11513) ^ 0x1327)) ^ v4)) - 4))(*v3);
}

uint64_t sub_100B39E48(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v1 ^ 0x3DA7) + 4212) ^ (2107 * (v1 ^ 0x3DA7)) ^ 0x1E) * (a1 != 0)) ^ v1 ^ 0x202A)))();
}

uint64_t sub_100B39EA8()
{
  int v0;
  int v1;
  uint64_t v2;

  v1 = v0 + 3353;
  v2 = ((uint64_t (*)(void))STACK[0x5A40])();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v1))(v2);
}

uint64_t sub_100B39ED0(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((v1 ^ (a1 == 0)) & 1)
                                     * (((v1 + 2008015430) & 0xBFD3B2EF) - 931366902)) ^ v1)))();
}

uint64_t sub_100B39F2C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x5A40])();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((7299 * (v0 != 905429075)) | (v0 - 931377593))))(v1);
}

uint64_t sub_100B39F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * ((113
                                                                         * ((((v3 - 1291170861) & 0x4CF5F3F4 ^ 0xEFFFFF7DF1FD9BBELL) & (2 * (((v3 + 49) ^ 0xDE1906571D9438DCLL) + v2)))
                                                                          + ((((v3 + 49) ^ 0xDE1906571D9438DCLL)
                                                                            + v2) ^ 0x77FFFFBEF8FEE5E5) == 0x77FFFFBEF8FEE5E6)) ^ v3)))(a1, a2, 0xEF1739F3DFF6F6DCLL);
}

uint64_t sub_100B3A0A4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  v8 = v2 + v6 + ((v1 + v3) & v5);
  v9 = *(unsigned __int8 *)(a1 + v8);
  *(_BYTE *)(v4 + v8) = v9;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v9 != 0) * (v1 + v7)) ^ v1)))();
}

uint64_t sub_100B3A0DC(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;
  int v15;
  unint64_t v16;
  int v17;
  _BOOL4 v18;

  v13 = v9 - 49;
  v14 = v10 < a4;
  v15 = (v9 - 49 + a8) | 0x108C;
  v16 = (a5 & (2 * (v8 + 1))) + ((v8 + 1) ^ a3) + a6;
  v17 = v14 ^ (v16 < (unint64_t)((v13 ^ v12) * a7) + v11);
  v18 = v10 > v16;
  if (!v17)
    v14 = v18;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((!v14 * (v15 - 4204)) ^ v13)))();
}

uint64_t sub_100B3A154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14 * (((v6 - v7 == 0x88E8C5CB1907EF0ALL) ^ (v8 + 113)) & 1)) ^ v8)) - (((v8 - 16482) | 0x4068u) ^ 0x5072)))(a1, a2, a3, a4, a5, a6, 0x10E8C60C20090924, 0x6DF6FFE8E67FE2F6);
}

uint64_t sub_100B3A1E4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_BYTE *)(v2 + a1) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (((v1 + 637711015) | 0x19F000CEu) ^ 0x3FF303E7)))();
}

uint64_t sub_100B3A21C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 0x21E6F9A8E26BD800 + v3 - 1) = 47;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (v1 ^ 0x3FF34712 ^ (52988
                                                                                   * (v1 == ((v1 - 269696242) & 0xD0207DFF)
                                                                                          + 1269277843))))
                                                   - 12))(a1, 4116);
}

uint64_t sub_100B3A2C8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_BYTE *)(v13 + (v10 & (2 * v8)) + (v9 ^ v11 ^ a8 ^ v8) + v12) == 0) * a2) ^ v9))
                            - 12))();
}

uint64_t sub_100B3A30C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((490
                                          * ((((v3 + v2 + 1) << (-(char)a2 - 6)) & 0x9FFFFFED7EE66AE2)
                                           + ((v3 + v2 + 1) ^ 0x4FFFFFF6BF733571)
                                           - 0x4FFFFFF5F4C8888FLL != a1)) ^ a2))
                            - 4))();
}

uint64_t sub_100B3A3BC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  v6 = *(unsigned __int8 *)(v4 + v3 + a1);
  *(_BYTE *)(v2 + v3 + a1) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 != (a2 + 7)) * v5) ^ a2)) - 4))();
}

uint64_t sub_100B3A3F8@<X0>(unint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  int v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BOOL4 v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v9 = v6 < a2;
  v10 = (a3 & (2 * (v5 + 1))) + ((v5 + 1) ^ a1) + a4;
  v11 = v9 ^ (v10 < (unint64_t)(30 * (a5 ^ v7)) + v8);
  v12 = v6 > v10;
  if (!v11)
    v9 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((490 * v9) ^ a5)) - 4))();
}

uint64_t sub_100B3A45C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((v0 - v2 == 0x60E8C602DF7C3E96) * (v1 + 15378)) ^ v1))
                            - 8))();
}

uint64_t sub_100B3A4A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_BYTE *)(v0 + v1) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((v2 - 9638) | 0x16u) + 4206))();
}

uint64_t sub_100B3A4CC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (a2 + 10338)))(a1, 67);
}

uint64_t sub_100B3A518@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_BYTE *)(v9
                                            + (v3 ^ (unint64_t)(a2 + 650) ^ (a3 + v6) & v7)
                                            + (v4 & (2 * v3))
                                            + v5) != 0)
                                * a1) ^ (a3 + v8))))();
}

uint64_t sub_100B3A564()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + v0 + (v3 - 3353) + v4 + 0x7022066E37141F7BLL) = 0;
  v5 = ((uint64_t (*)(void))STACK[0x5A40])();
  *v1 = v4;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v3))(v5);
}

uint64_t sub_100B3A5B4()
{
  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))STACK[0x9960])();
}

uint64_t sub_100B3A5E0()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1099)) - 8))(STACK[0x73C0]);
}

uint64_t sub_100B3A608()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((30759 * (v0 == STACK[0x4028] - 1926395433)) ^ (STACK[0x6508] + 7702)))
                            - 8))();
}

uint64_t sub_100B3A650()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x4028];
  v1 = STACK[0x6AD8];
  STACK[0x8B30] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x4028])
                + ((STACK[0x4028] + 5477) ^ 0xFFFFFFFFFFFFE00DLL);
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 15593)))();
}

uint64_t sub_100B3A6A0(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4941 * (a1 != 0)) ^ LODWORD(STACK[0x3E4C]))) - 8))();
}

uint64_t sub_100B3A6C8()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 5418;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B3A704()
{
  STACK[0xC768] -= 48;
  return ((uint64_t (*)(void))STACK[0x9760])();
}

uint64_t sub_100B3A738@<X0>(uint64_t a1@<X8>)
{
  STACK[0xC768] = a1 - 80;
  return ((uint64_t (*)(void))STACK[0x8988])();
}

uint64_t sub_100B3A754()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x3500] ^ 0x22CA) * (v0 == -1926392729)) ^ LODWORD(STACK[0x3248])))
                            - 8))();
}

uint64_t sub_100B3A78C()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x3500] + 10327))
                                          - (STACK[0x3500]
                                           + 9315)
                                          + 10749))(43);
}

uint64_t sub_100B3A7D8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1511) ^ (18452 * a1)))
                            - (STACK[0x6508]
                             - 1511)
                            + 2695))();
}

uint64_t sub_100B3A800()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = STACK[0x7110];
  *(_QWORD *)v1 = 0x6C722E646B736CLL;
  *(_BYTE *)(v1 + 9) = -90;
  *(_BYTE *)(v1 + 12) = 0;
  v2 = STACK[0x79C0];
  v3 = STACK[0x6AD8];
  STACK[0x8B30] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return (*(uint64_t (**)(unint64_t))(v3
                                                     + 8
                                                     * ((51325 * (((v0 + 5478) ^ 0xAF73BD9A) + v0 > 0xED6036FB)) ^ (v0 + 15594))))(v2);
}

uint64_t sub_100B3A88C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((71 * (STACK[0x79C0] == 0)) ^ (STACK[0x6508] + 1721))))();
}

uint64_t sub_100B3A8B8()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 1778;
  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B3A8D8()
{
  STACK[0xC768] -= 256;
  return ((uint64_t (*)(void))STACK[0x9868])();
}

uint64_t sub_100B3A910()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3570])) - 12))();
}

uint64_t sub_100B3A944@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _BOOL4 v4;

  v4 = a1 != 0x2EB35D1B00280420 && v2 == ((v1 + 2008514660) & 0x88486FFF) - 1926392947;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4745 * v4) ^ (v1 + 15849))) - 12))();
}

uint64_t sub_100B3A9B0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 20217)))();
}

uint64_t sub_100B3A9F0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  STACK[0xC768] += 144;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v1 == 0x2EB35D1B00280420) * (((a1 + 10287) | 0x810) - 22518)) ^ a1))
                            - 12))();
}

uint64_t sub_100B3AA54()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char *v3;
  int v4;

  v3 = (char *)&STACK[0x10000] + v0;
  ((void (*)(_QWORD))STACK[0x4850])(0);
  v4 = ((uint64_t (*)(uint64_t, char *))*(&off_1015B46D0 + (v2 ^ 0x5FD6)))(v1 - 0x2EB35D1B00280407, v3);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((46 * (((v4 << (v2 ^ 0x9E)) & 0xFB8B39FA) + (v4 ^ 0x7DC59CFD) != (v2 ^ 0x7DC5C462))) ^ v2)))();
}

uint64_t sub_100B3AAF4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x41D8])();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 ^ 0x48E9) + 1310)) - 4))(v1);
}

uint64_t sub_100B3AB18()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((29034 * ((*(_WORD *)(v1 + 4) & 0xF000) != 40960)) ^ v0 ^ 0x4D0B))
                            - (v0 ^ 0x48E9u)
                            + 4210))();
}

uint64_t sub_100B3AB5C()
{
  uint64_t v0;
  int v1;
  int v2;

  v2 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0 + v1 - 4847))(v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((913
                                          * ((((7 * (v1 ^ 0x17CE)) ^ 0xE2FACFCA) & (2 * v2)) + (v2 ^ 0xF17D6FDE) == -243437602)) ^ v1))
                            - ((v1 - 1298) ^ 0x1086)))();
}

uint64_t sub_100B3ABD8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(v0 - 0x2EB35D1B00280420);
  v4 = 8 * v1;
  v5 = STACK[0x6AD8];
  v6 = *(_QWORD *)(STACK[0x6AD8] + v4);
  v7 = 2142736129 * ((0x8D8ED8950F1E6F9CLL - ((v2 - 240) | 0x8D8ED8950F1E6F9CLL) + STACK[0x29A8]) ^ 0xF6A2F6693B9046ALL);
  LODWORD(STACK[0x1D358]) = (v1 + 427180620) ^ v7;
  STACK[0x1D350] = v3;
  STACK[0x1D360] = v6 ^ v7;
  v8 = (uint64_t (*)(uint64_t))STACK[0x5530];
  ((void (*)(uint64_t))STACK[0x5530])(v2 - 240);
  *(_OWORD *)(v0 - 0x2EB35D1B00280418) = 0u;
  v9 = *(_QWORD *)(v0 - 0x2EB35D1B00280420);
  v10 = *(_QWORD *)(v5 + (v4 | 8));
  v11 = 2142736129 * ((v2 - 240) ^ 0x7D1B080C63589409);
  LODWORD(STACK[0x1D358]) = (v1 + 427180620) ^ v11;
  STACK[0x1D350] = v9;
  STACK[0x1D360] = v10 ^ v11;
  v12 = v8(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v1 + 1298)) - ((v1 - 4126) | 0x1012u) + 4210))(v12);
}

uint64_t sub_100B3AD0C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4850])(v1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6227)) - 12))(v2);
}

uint64_t sub_100B3AD4C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  STACK[0xC768] = v0 - 144;
  return v1();
}

uint64_t sub_100B3AD60()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 4019) | 0x4600) - 12202) ^ (STACK[0x6508] - 1708)))
                            - 4))();
}

uint64_t sub_100B3ADBC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x324C]) ^ (31997 * (v0 == -1926392729))))
                            - ((STACK[0x6508] + 933334364) & 0xC85E6BFD ^ 0x9DCLL)))();
}

uint64_t sub_100B3AE14@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 5379)) - 4))();
}

uint64_t sub_100B3AE64()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 672))
                            - (STACK[0x323C] & (v0 + 3226) ^ 0x1151)))();
}

uint64_t sub_100B3AEB8()
{
  STACK[0xBD00] = 0x2EB35D1B00280420;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x33FC])) - 12))();
}

uint64_t sub_100B3AEF0()
{
  int v0;

  STACK[0xA300] = STACK[0x7148];
  LODWORD(STACK[0x9A34]) = STACK[0xAF94];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7753)) - ((v0 + 1215359289) & 0xB78F4EDF) + 18563))();
}

uint64_t sub_100B3AF58@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = LODWORD(STACK[0xCFBC]) != ((a1 - 17415) | 0x2B12) - 12186 && v1 == -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 * (((a1 - 9487) | 0x1C44) ^ 0x3E51)) ^ a1)) - 4))();
}

uint64_t sub_100B3AFCC()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(112);
  STACK[0xA300] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 != 0) * ((308 * (v0 ^ 0x2FAF)) ^ (v0 + 9633))) ^ v0)))();
}

uint64_t sub_100B3B030(unint64_t a1)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((a1 >= (unint64_t)*(&off_1015B46D0 + v1 - 10348) - 4)
                                          * ((362 * ((v1 - 3668) ^ 0x2160)) ^ 0x3592)) ^ (v1 - 3668)))
                            - 12))();
}

uint64_t sub_100B3B084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((70 * (a2 - a1 < (unint64_t)(v2 - 1387) - 12353)) ^ v2))
                            - (v2 + 1988084547)
                            + 1988098291))();
}

uint64_t sub_100B3B104@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W3>, uint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v9 = v5 + v6 + ((v4 + v8) & v7);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a4 + v9) ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 != 0) * a2) ^ v4)) - 12))();
}

uint64_t sub_100B3B13C(uint64_t a1)
{
  int v1;
  unint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 - 8500) | 0x5281 | (4 * (v2 < 0x10)) | (8 * (v2 < 0x10))))
                                                                                                - (((v1 - 8500) | 0x5281u)
                                                                                                 - 8770)
                                                                                                - (((((v1 - 8500) | 0x5281) - 12931) | 0x1041u) ^ 0xFFFFFFFFFFFFFFEALL)))(a1, 2216818030, 2368112985, 2368125193, 25294, 25282, 146);
}

uint64_t sub_100B3B1E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X3>, int a4@<W4>, char a5@<W6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a6 + v6) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v8 + v7 + 3888) | (a2 + 2970)) ^ a3) + v6 != 112) * a4) ^ v7))
                            - 12))();
}

uint64_t sub_100B3B224@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int8x16_t v8;

  v8.i64[0] = 0x9292929292929292;
  v8.i64[1] = 0x9292929292929292;
  *(int8x16_t *)(a1 + v3) = veorq_s8(*(int8x16_t *)(a3 + v3), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v3 + 16 != v5 + ((v4 + v7) | (v6 + 4036)) + 113) * a2) ^ v4))
                            - 12))();
}

uint64_t sub_100B3B26C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((217 * (v0 ^ 0x767FF8C6) - 2004876022) & v0 ^ (20631 * (v0 == -1863540777))))
                            - 12))();
}

uint64_t sub_100B3B2C8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  _BOOL4 v7;

  v6.i64[0] = 0x9292929292929292;
  v6.i64[1] = 0x9292929292929292;
  *(int8x16_t *)(v4 + 111 - v2) = veorq_s8(*(int8x16_t *)(a2 + 111 - v2 - 15), v6);
  v7 = v2 + 16 != (v3 ^ a1 ^ (unint64_t)(v5 + 111));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2 * v7) | (8 * v7) | v3)) - 12))();
}

uint64_t sub_100B3B318(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;

  LODWORD(STACK[0x9A34]) = 1930691034;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(v3 ^ (a3 + 3385) ^ ((((v3 - 1209186626) & 0xBAEC3FFD) + 12512) * (v3 > 0xC463F5D8)))))();
}

uint64_t sub_100B3B38C@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0xA35C]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0xB228] == 0x2EB35D1B00280420) * (v1 - 16301)) ^ v1))
                            - 49 * (v1 ^ 0x3F92u)
                            + 4202))();
}

uint64_t sub_100B3B3F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 11438)) - ((v0 - 14265) ^ 0x1956u) + 4433))();
}

uint64_t sub_100B3B42C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x89C8] != 0x2EB35D1B00280420) * (((v0 - 2165) | 2) - 2048)) ^ (v0 + 21606)))
                            - 4))();
}

uint64_t sub_100B3B484()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + v0 + 2394 - 1610)) - 12))();
}

uint64_t sub_100B3B4A8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((LODWORD(STACK[0xA35C]) == -1926392729) * (((v0 - 3126) | 0x1080) + 15070)) ^ (v0 + 1098)))
                            - ((v0 + 632203587) & 0xDA516FEF ^ 0x29A1)))();
}

uint64_t sub_100B3B518@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xA300] == 0) ^ (a1 + 65)) & 1 | (16 * (((STACK[0xA300] == 0) ^ (a1 + 65)) & 1)) | a1))
                            - 8))();
}

uint64_t sub_100B3B55C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((LODWORD(STACK[0x9A34]) - 1930690980 < 15 * (a1 ^ 0x1607u) - 10723)
                                          * (((a1 - 4030) | 0x220) ^ 0x467A)) ^ a1))
                            - 8))();
}

uint64_t sub_100B3B5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = STACK[0x6AD8];
  STACK[0x6AA0] = STACK[0xA460];
  LODWORD(STACK[0x6AB0]) = STACK[0x980C];
  LODWORD(STACK[0x6A80]) = v8 - 1231022924;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((12660 * (v7 != -1776417246)) ^ (v7 + 2404)));
  LODWORD(STACK[0x6A90]) = v8;
  return v10(a1, a2, a3, a4, a5, a6, a7, 3114859961);
}

uint64_t sub_100B3B6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ 0xC20 ^ (7930 * (((v7 + 2489) ^ 0xB687BA15) + v7 < 0xEDBA28B9)))) - 8))(a1, a2, a3, a4, a5, a6, a7, 3114859961);
}

uint64_t sub_100B3B728()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 4476)))();
}

uint64_t sub_100B3B748()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 != v3 && v0 != 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * ((v5 * ((602 * (v1 ^ 0x1E95)) ^ 0x104C)) ^ v1))
                                         - 12))(0);
}

uint64_t sub_100B3B790()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v4;

  v4 = v2 > 0x5D7155DE;
  if (v4 == v1 + v2 > 0x5D7155DE)
    v4 = v2 - 1567708639 > v1 + v2 - 1567708639;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (19130 * !v4)))
                                         - (v0 + 15156)
                                         - ((v0 - 312442779) & (v3 + 3938) ^ 0xFFFFFFFFFFFFB630)))(0);
}

uint64_t sub_100B3B820()
{
  unsigned int v0;
  int v1;
  int v2;
  _BOOL4 v3;

  if (LODWORD(STACK[0x6A80]) < 0x29B4161E != v0 > v2 + ((v1 + 1614477112) & 0x9FC4BF77) + 3035)
    v3 = v0 > v2 + ((v1 + 1614477112) & 0x9FC4BF77) + 3035;
  else
    v3 = v0 + 699667998 > LODWORD(STACK[0x6A80]);
  return ((uint64_t (*)(_QWORD, BOOL))(*(_QWORD *)(STACK[0x6AD8]
                                                           + 8 * ((!v3 * (((v1 - 6385) | 0x122A) ^ 0x52DF)) ^ v1))
                                               - 8))(0, v0 + 699667998 > LODWORD(STACK[0x6A80]));
}

uint64_t sub_100B3B8B8()
{
  unint64_t v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((6 * (v2 ^ 0x5EFC)) ^ 0x49DC) * (v3 + (unint64_t)v1 > v0)) ^ v2)))();
}

uint64_t sub_100B3B934(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a4 | (v4 < 8) | (32 * (v4 < 8))))
                            - ((a4 - 1068265235) ^ 0xC05380F4)
                            - ((a4 - 1068265235) & 0x3FAC3776)
                            + 26745))();
}

uint64_t sub_100B3B984(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  int v7;

  v5 = ((a3 - 4056) ^ 0xFFFFFFFFFFFFB7CCLL) + v4;
  if (HIDWORD(v5))
    v6 = 0;
  else
    v6 = (((a3 ^ 0x487D) - 4215) ^ v3) >= v5;
  v7 = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((98 * v7) ^ a3)))();
}

uint64_t sub_100B3B9D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BOOL4 v13;

  v9 = v4 - v8 - a1;
  v13 = (unint64_t)(v4 - v5) < 0x10
     || (unint64_t)(v4 - v7 - 3) < 0x10
     || (unint64_t)(v4 - v6) < 0x10
     || v9 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6666 * (((a4 ^ 0x5845 ^ v13) & 1) == 0)) ^ a4))
                            - ((a4 - 1587713250) & 0x5EA24CBE ^ 0x18)))();
}

uint64_t sub_100B3BA50(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (a3 ^ 0x3022 ^ (98
                                                        * ((((45 * (a3 ^ 0x1E) + 1) ^ ((-((~v3 + a3) ^ (~v4 + a3)) | (~v3 + a3)) < 0)) & 1) == 0))))
                            - 12))();
}

uint64_t sub_100B3BABC(int a1, double a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  __n128 v7;
  __n128 v8;

  v7.n128_u64[0] = 0x909090909090909;
  v7.n128_u64[1] = 0x909090909090909;
  v8.n128_u64[0] = 0x1010101010101010;
  v8.n128_u64[1] = 0x1010101010101010;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 1872))
                                                                                                 - 8))((__n128)xmmword_101507240, a3, a4, a5, a6, a7, v7, v8);
}

uint64_t sub_100B3BAF4(int a1, int a2, int8x16_t a3, double a4, double a5, double a6, double a7, double a8, int8x16_t a9, int8x16_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(int8x16_t *)(v15 + v21) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + (v21 + v16)), vmulq_s8(a3, a9)), veorq_s8(*(int8x16_t *)(v17 + v21), *(int8x16_t *)(v19 + (v21 | 3)))), *(int8x16_t *)(v18 + v21));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * (((v21 + v23 + (a1 ^ a15) == v20) * a14) ^ a2))
                                         - 8))((__n128)vaddq_s8(a3, a10));
}

uint64_t sub_100B3BB54(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((205 * ((((a3 + 4563) ^ (v3 == (((a3 - 3615) | 0x36u) ^ 0x1076))) & 1) == 0)) ^ a3))
                            - 12))();
}

uint64_t sub_100B3BBA8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((((32 * a4) ^ 0x61BE0) - 7576) & v4) == 0)
                                               * (((a4 + 2131256133) & 0x80F77CFE) + 24426)) ^ a4))
                            - 12))();
}

uint64_t sub_100B3BC00()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, double))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7)
                                                                                              - 12))(v5 + v6 + 3, v0 + v6, v2 + v6, v4 + v6, v6 - (v3 & 0xFFFFFFF8) + 8, (v1 + v6), COERCE_DOUBLE(vorr_s8(vdup_n_s8(v6), (int8x8_t)0x706050403020100)));
}

uint64_t sub_100B3BC58(int8x8_t *a1, int8x8_t *a2, int8x8_t *a3, int8x8_t *a4, uint64_t a5, unsigned int a6, __n128 a7, double a8, double a9, double a10, double a11, double a12, int8x8_t a13, int8x8_t a14)
{
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;

  *a2 = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v15 + a6), *a3), *a4), veor_s8(vmul_s8((int8x8_t)a7.n128_u64[0], a13), *a1));
  a7.n128_u64[0] = (unint64_t)vadd_s8((int8x8_t)a7.n128_u64[0], a14);
  return ((uint64_t (*)(int8x8_t *, int8x8_t *, int8x8_t *, int8x8_t *, uint64_t, _QWORD, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a5 == 0) * v17) | v14)) - ((v14 + 242) ^ v16)))(&a1[1], &a2[1], &a3[1], &a4[1], a5 + 8, a6 + 8, a7);
}

uint64_t sub_100B3BCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a7 | (16704 * (v7 == 0))))
                                          - ((301 * (a7 ^ 0x1E9Cu)) ^ 0x107ALL)))(1);
}

uint64_t sub_100B3BD0C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a2 + 8980)))();
}

uint64_t sub_100B3BD20()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v0 + v6) = (9 * v6) ^ *(_BYTE *)(v2 + v6) ^ *(_BYTE *)(v8 + (v6 + v1)) ^ *(_BYTE *)(v6 + v5 + 3) ^ *(_BYTE *)(v4 + v6);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((28219 * (v6 + 1 == v3)) ^ v7)))(1);
}

uint64_t sub_100B3BD80()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = v3 - 1;
  v9 = ((v6 ^ 0x4289u) - 4199) & v8;
  *(_BYTE *)(v0 + v8) = *(_BYTE *)(v2 + v9) ^ *(_BYTE *)(v7 + (v8 + v1)) ^ *(_BYTE *)(v9 + v5 + 3) ^ *(_BYTE *)(v4 + v9) ^ (9 * v9);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((3918 * ((_DWORD)v8 == 0)) ^ v6)))(1);
}

uint64_t sub_100B3BDF4()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B3BE00(int a1)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((LODWORD(STACK[0x39EC]) * a1) ^ LODWORD(STACK[0x39E8]))))();
}

uint64_t sub_100B3BE28()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x39CC])) - 4))();
}

uint64_t sub_100B3BE48(int a1)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((((STACK[0x6508] - 4086) | 0x1440) ^ 0x1736) * (a1 ^ 1)) ^ LODWORD(STACK[0x39F4]))))();
}

uint64_t sub_100B3BE84()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6797)) - 4))();
}

uint64_t sub_100B3BEA8(int a1)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)(((((STACK[0x6508] - 3190) | 0x10C0) + 715) * a1) ^ (STACK[0x6508] + 4501))))();
}

uint64_t sub_100B3BEE0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6797)) - 4))();
}

uint64_t sub_100B3BF04()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) + v1))();
}

uint64_t sub_100B3BF90()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((STACK[0x6508] + 1098) ^ 0x58B) * (v0 == 352798382)) ^ (STACK[0x6508] + 4501))))();
}

uint64_t sub_100B3BFDC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2383) ^ 0x1340)) - 8))();
}

uint64_t sub_100B3C010()
{
  int v0;

  LODWORD(STACK[0x6AC0]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x3E60] ^ STACK[0x39D4] & 0x8C09F4E2 ^ 0x39E1)
                                               * (*(_QWORD *)STACK[0x4A48] == 0)) ^ (STACK[0x6508] + 1534)))
                            - 4))();
}

uint64_t sub_100B3C07C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  int v7;

  v2 = STACK[0x3E60];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = ((2113 * (STACK[0x3E60] ^ 0x1092)) ^ 0xFFFFFFFFFFFFEF7ELL)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x3E60]);
  v4 = (_QWORD *)STACK[0x4A48];
  STACK[0xEE28] = STACK[0x4A48];
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857 * ((((v1 - 240) | 0xD9D46DCB) - ((v1 - 240) & 0xD9D46DCB)) ^ 0xE446B292)
                        + v2
                        - 26;
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  if (*(_DWORD *)(v0 + 788))
    v6 = 1;
  else
    v6 = *v4 == 0;
  v7 = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((228 * v7) ^ (v2 + 1508))) - 4))(v5);
}

uint64_t sub_100B3C150@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = STACK[0x6AD8];
  v5 = 2142736129 * ((((v3 - 240) | 0x1486074CF2F68814) - ((v3 - 240) & 0x1486074CF2F68814)) ^ 0x699D0F4091AE1C1DLL);
  *(_QWORD *)(v2 + 800) = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v5;
  *(_QWORD *)(v2 + 784) = a1;
  *(_DWORD *)(v2 + 792) = (v1 + 427180620) ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v1 + 1550)) - 4))(v6);
}

uint64_t sub_100B3C1D8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = STACK[0x39C0];
  *(_DWORD *)(v0 + 792) = (v1 + 427180620) ^ STACK[0x39C0];
  *(_QWORD *)(v0 + 800) = v4 ^ v5;
  *(_QWORD *)(v0 + 784) = 0;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  if (*(_DWORD *)STACK[0x4A78])
    v7 = 1;
  else
    v7 = *(_QWORD *)STACK[0x49F0] == 0;
  v8 = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((251 * v8) ^ (v1 - 4247 + (v1 ^ 0x3B0A)))) - 8))(v6);
}

uint64_t sub_100B3C258@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  int v22;
  int v23;
  int v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  int32x4_t v44;
  int8x16_t v45;
  int32x4_t v46;
  uint16x8_t v47;
  uint8x16_t v48;
  uint16x8_t v49;
  uint16x8_t v50;
  int8x16x4_t v52;

  v3 = *(_DWORD *)(*v1 + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v3 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3 ^ 0x83C25199;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  LODWORD(v10) = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEFA8] = 0;
  v11 = -2084417127 * v10;
  v12 = 16777619 * ((-2084417127 * (_DWORD)v10 + 7) ^ (-2084417127 * v10)) % 7;
  v13 = *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v12) = 0;
  LOBYTE(STACK[0xEFAF]) = v13;
  v14 = 16777619 * ((-2084417127 * (_DWORD)v10 + 6) ^ (-2084417127 * v10)) % 6;
  v15 = *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v14) = STACK[0xEFAE];
  LOBYTE(STACK[0xEFAE]) = v15;
  v16 = 16777619 * ((-2084417127 * (_DWORD)v10 + 5) ^ (-2084417127 * v10)) % 5;
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v16);
  *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v16) = STACK[0xEFAD];
  LOBYTE(STACK[0xEFAD]) = v17;
  v18 = STACK[0xEFA8];
  LOBYTE(STACK[0xEFA8]) = STACK[0xEFAC];
  LOBYTE(STACK[0xEFAC]) = v18;
  v19 = 16777619 * ((-2084417127 * (_DWORD)v10 + 3) ^ (-2084417127 * v10)) % 3;
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v19);
  *(_BYTE *)((unint64_t)&STACK[0xEFA8] | v19) = STACK[0xEFAB];
  LOBYTE(STACK[0xEFAB]) = v20;
  v21 = STACK[0xEFA9];
  LOBYTE(STACK[0xEFAA]) = STACK[0xEFA8];
  LOWORD(STACK[0xEFA8]) = v21;
  v22 = (v11 * v11) ^ v11;
  v23 = (v11 + v11 * v11) ^ v11;
  v24 = v23 + 16777619 * LODWORD(STACK[0xEFAC]);
  LODWORD(STACK[0xEFA8]) = v22 + 16777619 * LODWORD(STACK[0xEFA8]);
  LODWORD(STACK[0xEFAC]) = v24;
  v25 = STACK[0xEFA8] ^ a1;
  v26 = 899433627 * (v25 - v22);
  LODWORD(v25) = 899433627 * (HIDWORD(v25) - v23);
  LODWORD(STACK[0xEFB0]) = v26;
  LODWORD(STACK[0xEFB4]) = v25;
  LOBYTE(STACK[0xEFB1]) = v26;
  LOBYTE(STACK[0xEFB0]) = BYTE2(v26);
  LOBYTE(STACK[0xEFB2]) = BYTE1(v26);
  v27 = HIBYTE(v26);
  v28 = (_BYTE *)((unint64_t)&STACK[0xEFB0] | v19);
  LOBYTE(v26) = *v28;
  *v28 = v27;
  LOBYTE(STACK[0xEFB3]) = v26;
  LOBYTE(v27) = STACK[0xEFB0];
  LOBYTE(STACK[0xEFB0]) = v25;
  LOBYTE(STACK[0xEFB4]) = v27;
  v29 = (_BYTE *)((unint64_t)&STACK[0xEFB0] | v16);
  LOBYTE(v28) = *v29;
  *v29 = BYTE1(v25);
  LOBYTE(STACK[0xEFB5]) = (_BYTE)v28;
  v30 = (_BYTE *)((unint64_t)&STACK[0xEFB0] | v14);
  LOBYTE(v29) = *v30;
  *v30 = BYTE2(v25);
  LOBYTE(STACK[0xEFB6]) = (_BYTE)v29;
  v31 = (_BYTE *)((unint64_t)&STACK[0xEFB0] | v12);
  LOBYTE(v30) = *v31;
  *v31 = BYTE3(v25);
  LOBYTE(STACK[0xEFB7]) = (_BYTE)v30;
  v32 = STACK[0xEFB0];
  v33 = (-2084417127 * STACK[0xEFB0]) ^ v10;
  for (i = 1; i != 2; ++i)
  {
    v35 = 8 * i;
    v36 = 8 * (16777619 * ((v33 + (_DWORD)i) ^ v33) % i);
    v37 = *(_QWORD *)(v32 + v36) ^ *(_QWORD *)(v32 + 8 * i);
    *(_QWORD *)(v32 + v35) = v37;
    v38 = *(_QWORD *)(v32 + v36) ^ v37;
    *(_QWORD *)(v32 + v36) = v38;
    *(_QWORD *)(v32 + v35) = *(_QWORD *)(v32 + 8 * i) ^ v38;
  }
  v39 = 0;
  v40 = (__n128)xmmword_1015070D0;
  v41 = (__n128)xmmword_1015070E0;
  v42 = (__n128)xmmword_1015070F0;
  v43 = (__n128)xmmword_101507100;
  v44 = vdupq_n_s32(v33);
  v45 = *(int8x16_t *)&STACK[0x4950];
  v46.i64[0] = 0x1000000010;
  v46.i64[1] = 0x1000000010;
  v47.i64[0] = 0x9B009B009B009BLL;
  v47.i64[1] = 0x9B009B009B009BLL;
  do
  {
    v48 = *(uint8x16_t *)(v32 + v39);
    v49 = vmovl_high_u8(v48);
    v50 = vmovl_u8(*(uint8x8_t *)v48.i8);
    v52.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v42, v44), vsubq_s32((int32x4_t)v42, v44)), (int8x16_t)v44), (int8x16_t)vmull_high_u16(v50, v47));
    v52.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v41, v44), vsubq_s32((int32x4_t)v41, v44)), (int8x16_t)v44), (int8x16_t)vmull_u16(*(uint16x4_t *)v49.i8, (uint16x4_t)0x9B009B009B009BLL));
    v52.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v43, v44), vsubq_s32((int32x4_t)v43, v44)), (int8x16_t)v44), (int8x16_t)vmull_u16(*(uint16x4_t *)v50.i8, (uint16x4_t)0x9B009B009B009BLL));
    v52.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v40, v44), vsubq_s32((int32x4_t)v40, v44)), (int8x16_t)v44), (int8x16_t)vmull_high_u16(v49, v47));
    *(int8x16_t *)(v32 + v39) = vqtbl4q_s8(v52, v45);
    v39 += 16;
    v43 = (__n128)vaddq_s32((int32x4_t)v43, v46);
    v42 = (__n128)vaddq_s32((int32x4_t)v42, v46);
    v41 = (__n128)vaddq_s32((int32x4_t)v41, v46);
    v40 = (__n128)vaddq_s32((int32x4_t)v40, v46);
  }
  while (v39 != 16);
  *(_QWORD *)STACK[0x49F0] = v32;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                                                                 - ((2 * (v2 ^ 0x23C9u)) ^ 0x108ALL)))(v40, v41, v42, v43);
}

uint64_t sub_100B3C658()
{
  int v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  *v1 = v0 + 1;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 1));
  v6 = 2142736129 * ((((v3 - 240) | 0xA1C7D73ECB0AB182) - ((v3 - 240) & 0xA1C7D73ECB0AB182)) ^ 0xDCDCDF32A852258BLL);
  LODWORD(STACK[0x1D358]) = (v2 + 427180620) ^ v6;
  STACK[0x1D360] = v5 ^ v6;
  STACK[0x1D350] = 0;
  v7 = (uint64_t (*)(uint64_t))STACK[0x5530];
  ((void (*)(uint64_t))STACK[0x5530])(v3 - 240);
  *(_DWORD *)STACK[0x4CF8] = STACK[0x6AC0];
  v8 = *(_QWORD *)(v4 + 8 * v2);
  v9 = STACK[0x39B8];
  LODWORD(STACK[0x1D358]) = (v2 + 427180620) ^ STACK[0x39B8];
  STACK[0x1D360] = v8 ^ v9;
  STACK[0x1D350] = 0;
  v10 = v7(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (int)(v2 ^ 0x2859 ^ (1309
                                                                           * ((((((v2 + 806446909) & 0xCFEECE6B) - 17964) ^ (v2 - 4226) ^ *(_DWORD *)STACK[0x4A78]) & (v2 - 4226 - *(_DWORD *)STACK[0x4A78]) | (v2 - 4226) & ~*(_DWORD *)STACK[0x4A78]) >> 31))))
                                          - 12))(v10);
}

uint64_t sub_100B3C7B4@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = a1 == 1 && *(_QWORD *)STACK[0x49F0] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 * ((v1 ^ 0x7EF0) - 5532)) ^ v1)) - 8))();
}

uint64_t sub_100B3C7F4()
{
  unint64_t v0;
  _QWORD *v1;
  _DWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  int32x2_t v23;
  int32x2_t v24;
  int32x2_t v25;
  __int16 v26;
  unint64_t v27;
  unsigned int v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int32x4_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int32x4_t v40;
  int8x16_t v41;
  _QWORD *v42;
  unsigned int v43;
  uint64_t i;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  __int16 v53;
  int8x16x4_t v55;

  v4 = 0;
  v5 = *(_DWORD *)(*v1 + (int)(*v2 & 0x83C25198)) ^ 0x83C25199;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  v12 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v11 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v11;
  v13 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v12 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v12;
  STACK[0xEEC8] = 0;
  STACK[0xEED0] = v0;
  v14 = 16777619 * ((-2084417127 * v13 + 7) ^ (-2084417127 * v13)) % 7;
  v15 = 16777619 * ((-2084417127 * v13 + 6) ^ (-2084417127 * v13)) % 6;
  v16 = 16777619 * ((-2084417127 * v13 + 5) ^ (-2084417127 * v13)) % 5;
  v17 = 16777619 * ((-2084417127 * v13 + 3) ^ (-2084417127 * v13)) % 3;
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v14) = STACK[0xEECF];
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v15) = STACK[0xEECE];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v16);
  *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v16) = STACK[0xEECD];
  v21 = STACK[0xEEC8];
  LOBYTE(STACK[0xEEC8]) = STACK[0xEECC];
  v22 = *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v17);
  *(_BYTE *)((unint64_t)&STACK[0xEEC8] | v17) = STACK[0xEECB];
  v23 = vdup_n_s32(-2084417127 * v13);
  v24.i32[0] = v23.i32[0];
  v24.i32[1] = -2084417127 * v13 + 1;
  LOBYTE(STACK[0xEECF]) = v18;
  LOBYTE(STACK[0xEECE]) = v19;
  LOBYTE(STACK[0xEECD]) = v20;
  v25 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v24, v23), (int8x8_t)v23);
  LOBYTE(STACK[0xEECC]) = v21;
  LOBYTE(STACK[0xEECB]) = v22;
  v26 = STACK[0xEEC9];
  LOBYTE(STACK[0xEECA]) = STACK[0xEEC8];
  LOWORD(STACK[0xEEC8]) = v26;
  STACK[0xEEC8] = (unint64_t)vmla_s32(v25, (int32x2_t)STACK[0xEEC8], (int32x2_t)STACK[0x48C8]);
  v27 = STACK[0xEED0];
  v28 = (-2084417127 * STACK[0xEED0]) ^ v13;
  v29 = vdupq_n_s32(v28);
  v30 = (int32x4_t)xmmword_1015070D0;
  v31 = (int32x4_t)xmmword_1015070E0;
  v32 = (int32x4_t)xmmword_1015070F0;
  v33 = (int32x4_t)xmmword_101507100;
  v34 = *(int8x16_t *)&STACK[0x4660];
  v35 = *(int8x16_t *)&STACK[0x4620];
  v36 = *(int8x16_t *)&STACK[0x4610];
  v37.i64[0] = 0x9393939393939393;
  v37.i64[1] = 0x9393939393939393;
  v38 = *(int8x16_t *)&STACK[0x4650];
  v39 = *(int8x16_t *)&STACK[0x4950];
  v40.i64[0] = 0x1000000010;
  v40.i64[1] = 0x1000000010;
  do
  {
    v41 = *(int8x16_t *)(v27 + v4);
    v55.val[1] = veorq_s8(vqtbl1q_s8(v41, v38), veorq_s8((int8x16_t)v29, (int8x16_t)vmulq_s32(vaddq_s32(v32, v29), vsubq_s32(v32, v29))));
    v55.val[0] = veorq_s8(vqtbl1q_s8(v41, v34), veorq_s8((int8x16_t)v29, (int8x16_t)vmulq_s32(vaddq_s32(v33, v29), vsubq_s32(v33, v29))));
    v55.val[2] = veorq_s8(vqtbl1q_s8(v41, v35), veorq_s8((int8x16_t)v29, (int8x16_t)vmulq_s32(vaddq_s32(v31, v29), vsubq_s32(v31, v29))));
    v55.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v41, v36), (int8x16_t)v29), (int8x16_t)vmulq_s32(vaddq_s32(v30, v29), vsubq_s32(v30, v29)));
    *(int8x16_t *)(v27 + v4) = vmulq_s8(vqtbl4q_s8(v55, v39), v37);
    v4 += 16;
    v33 = vaddq_s32(v33, v40);
    v32 = vaddq_s32(v32, v40);
    v31 = vaddq_s32(v31, v40);
    v30 = vaddq_s32(v30, v40);
  }
  while (v4 != 16);
  v42 = (_QWORD *)(v27 + 8);
  v43 = 1;
  for (i = 3; i > 2; --i)
  {
    v45 = 8 * (16777619 * ((v28 + v43) ^ v28) % v43);
    v46 = *(_QWORD *)(v27 + v45) ^ *v42;
    *v42 = v46;
    v47 = *(_QWORD *)(v27 + v45) ^ v46;
    *(_QWORD *)(v27 + v45) = v47;
    *v42 ^= v47;
    v42 += 0xFFFFFFFFLL;
    --v43;
  }
  v48 = *((_BYTE *)&STACK[0xEED0] + v14);
  *((_BYTE *)&STACK[0xEED0] + v14) = STACK[0xEED7];
  LOBYTE(STACK[0xEED7]) = v48;
  v49 = *((_BYTE *)&STACK[0xEED0] + v15);
  *((_BYTE *)&STACK[0xEED0] + v15) = STACK[0xEED6];
  LOBYTE(STACK[0xEED6]) = v49;
  v50 = *((_BYTE *)&STACK[0xEED0] + v16);
  *((_BYTE *)&STACK[0xEED0] + v16) = STACK[0xEED5];
  LOBYTE(STACK[0xEED5]) = v50;
  v51 = STACK[0xEED0];
  LOBYTE(STACK[0xEED0]) = STACK[0xEED4];
  v52 = *((_BYTE *)&STACK[0xEED0] + v17);
  *((_BYTE *)&STACK[0xEED0] + v17) = STACK[0xEED3];
  LOBYTE(STACK[0xEED4]) = v51;
  LOBYTE(STACK[0xEED3]) = v52;
  v53 = STACK[0xEED1];
  LOBYTE(STACK[0xEED2]) = STACK[0xEED0];
  LOWORD(STACK[0xEED0]) = v53;
  STACK[0xEED0] = (unint64_t)vmla_s32(v25, (int32x2_t)STACK[0xEED0], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x49F0] = STACK[0xEED0] ^ STACK[0xEEC8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - (((v3 - 5608) | 0x898u) ^ 0x38D3)))();
}

uint64_t sub_100B3CC0C@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;

  *v2 = a1 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 400046392) & 0x17D810DF) + 4215))();
}

uint64_t sub_100B3CC44()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  STACK[0x1D350] = 0;
  v4 = STACK[0x39B0];
  STACK[0x1D360] = v3 ^ STACK[0x39B0];
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * ((469 * (*(_QWORD *)STACK[0x4A48] != 0)) ^ (v0 + 4726)))
                                          - (v0 - 2502)
                                          + 1713))(v5);
}

uint64_t sub_100B3CCC0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = STACK[0x3320];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ STACK[0x3320];
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 ^ 0x34C7 ^ ((v1 - 3058) | 0x22C))) - 12))(v5);
}

uint64_t sub_100B3CD2C()
{
  int v0;
  _BOOL4 v1;

  v1 = v0 - 352803749 + ((STACK[0x6508] - 54) | 0x480) > 0xFFFFFFC7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 | (16 * v1)) ^ LODWORD(STACK[0x39D0]))) - 8))();
}

uint64_t sub_100B3CD70()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2396) ^ 0x137D)) - 8);
  LODWORD(STACK[0x6AB0]) = v0;
  return v1();
}

uint64_t sub_100B3CDB0@<X0>(unsigned int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x723C]) = v3;
  LODWORD(STACK[0xD570]) = v4;
  LODWORD(STACK[0xD574]) = a2;
  LODWORD(STACK[0x980C]) = STACK[0x6AB0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((v2 + 1180112687) & a1 ^ 0x29A1)))();
}

uint64_t sub_100B3CE0C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  v4 = STACK[0x6508] + 1098;
  LODWORD(STACK[0x723C]) = v2;
  LODWORD(STACK[0xD570]) = v3;
  LODWORD(STACK[0xD574]) = a2;
  LODWORD(STACK[0x980C]) = STACK[0x6AB0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v4 ^ 0x3D69) + 4984) * a1) ^ v4)) - 8))();
}

uint64_t sub_100B3CE70()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0xC724]) = v0 - 352798421;
  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])((v0 - 352798421));
  STACK[0x88D0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((13305 * (((v2 == 0) ^ (v1 + 57)) & 1)) ^ v1))
                            - (((v1 - 5280) | 0x2544u) ^ 0x256CLL)))();
}

uint64_t sub_100B3CF0C(unint64_t a1)
{
  int v1;
  unsigned int v2;
  unint64_t v3;
  unint64_t v4;

  v3 = STACK[0xA300] + v2;
  v4 = STACK[0xA460];
  STACK[0xD1A8] += 32;
  LODWORD(STACK[0xD5BC]) = 0;
  STACK[0xD580] = v3;
  STACK[0xD5B0] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6846 * (v4 != 0)) ^ v1))
                            - ((v1 ^ 0x166u)
                             + 5019)
                            + 14225))();
}

uint64_t sub_100B3CFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 ^ 0x37CD) * (a2 == a1)) ^ v2)))();
}

uint64_t sub_100B3D034(_BYTE *a1)
{
  int v1;
  uint64_t v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v2;
  v3[16] = *a1;
  v3[17] = a1[1];
  v3[18] = a1[2];
  v3[19] = a1[3];
  v3[20] = a1[4];
  v3[21] = a1[5];
  v3[22] = a1[6];
  v3[23] = a1[7];
  v3[24] = a1[8];
  v3[25] = a1[9];
  v3[26] = a1[10];
  v3[27] = a1[11];
  v3[28] = a1[12];
  v3[29] = a1[13];
  v3[30] = a1[14];
  v3[31] = a1[15];
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *((_QWORD *)v3 + 1) = *((_QWORD *)a1 + 1);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v1))();
}

uint64_t sub_100B3D0E8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5000
                                          * (((v0 == 0) ^ (11 * (v1 ^ 0x22) + (v1 ^ 0x22) - 5)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_100B3D134()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v0 == 2091653848 || (v0 & 0xF ^ 3) - 392605653 - 2 * (v0 & 0xF ^ 3) != -392605664;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((((v1 ^ 0x143) - 26555 + 14 * (v1 ^ 0x2198)) * v3) ^ v1))
                            - 12))();
}

uint64_t sub_100B3D1A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned __int8 *a3@<X8>)
{
  int v3;
  int v4;
  unsigned __int8 v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  int v32;

  STACK[0x6A60] = a1;
  v5 = a3[9];
  STACK[0xD590] = 0;
  v6 = (v5 & 0x7D ^ 0xFBEFEDFE) + (v5 & 0x7C | 0x4101201) + 1;
  STACK[0xD588] = 0;
  v7 = 2 * v6;
  STACK[0xD5A0] = 0;
  if ((v6 & 0xAA) == 0)
    v7 = 0;
  STACK[0xD5A8] = 0;
  STACK[0xD578] = 0;
  v8 = *(_QWORD *)(a2 + 8 * (v3 - 14742)) - 8;
  v9 = *(unsigned __int8 *)(v8 + (v5 & 0xFE ^ 0x93 ^ (v6 - v7 + 170)));
  STACK[0xD598] = 0x3B9B8378DDDB256CLL;
  STACK[0xD5C8] = 0;
  LODWORD(STACK[0xD5BC]) = 98605586;
  v10 = ((v9 + (v9 ^ 9) + 1) ^ 0xFFFFFFFC) + v9;
  v11 = *(_QWORD *)(a2 + 8 * (v3 - 17166));
  v12 = *(_QWORD *)(a2 + 8 * (v3 ^ 0x4274));
  v13 = ((*(unsigned __int8 *)(v11 + (a3[8] ^ 0xCALL)) ^ 0x94) << 24) | ((v10 ^ 0x56 ^ (v10 >> 4) & 0xB) << 16) | ((*(unsigned __int8 *)(v12 + (a3[10] ^ 0x81)) ^ 0x31) << 8);
  LOBYTE(v10) = *(_BYTE *)(v8 + (a3[13] ^ 0x48)) ^ 0x9C ^ (*(_BYTE *)(v8 + (a3[13] ^ 0x48)) >> 4) & 0xB;
  v14 = *(_QWORD *)(a2 + 8 * (v3 ^ 0x4142)) - 8;
  v15 = *(unsigned __int8 *)(v14 + (a3[7] ^ 0x22));
  v16 = a3[1];
  v17 = *(unsigned __int8 *)(v14 + (a3[11] ^ 0x88));
  v18 = *(unsigned __int8 *)(v14 + (a3[15] ^ 0xECLL));
  LODWORD(STACK[0x6AC0]) = *(unsigned __int8 *)(v11 + (*a3 ^ 0x96)) ^ 0xFE;
  v19 = a3[12];
  v20 = v18 & 0xFF00FFFF | (v10 << 16);
  LODWORD(STACK[0x6AB0]) = *(unsigned __int8 *)(v8 + (v16 ^ 0xA7)) ^ ((((*(_BYTE *)(v8 + (v16 ^ 0xA7)) ^ 0xBC)
                                                                                       + (*(_BYTE *)(v8 + (v16 ^ 0xA7)) & 0x4A ^ 0xF7)
                                                                                       + 1) & 0xF0) >> 4) ^ 0x51;
  v21 = (v17 ^ 0x5C | v13) - ((2 * (v17 ^ 0x5C | v13)) & 0x6F9F4CBE) - 1211128225;
  v22 = a3[2];
  v23 = *(unsigned __int8 *)(v11 + (v19 ^ 0xC9)) ^ 0x4A;
  v24 = a3[5] ^ 0x53;
  STACK[0x6980] = v8;
  LODWORD(v19) = v15 ^ 0x6E;
  v25 = a3[6] ^ 0xD3;
  LODWORD(v19) = v19 & 0xFF00FFFF | ((*(_BYTE *)(v8 + v24) ^ (~*(unsigned __int8 *)(v8 + v24) >> 4) & 0xB ^ 0xC7) << 16);
  v26 = a3[3];
  LODWORD(STACK[0x6A90]) = *(unsigned __int8 *)(v12 + (v22 ^ 0x7D)) ^ 0xA6;
  v27 = a3[14] ^ 0xBCLL;
  v28 = *(unsigned __int8 *)(v12 + v25) ^ 0x6E;
  STACK[0x6960] = v12;
  LODWORD(v27) = *(unsigned __int8 *)(v12 + v27);
  STACK[0x6950] = v14;
  LODWORD(STACK[0x6A50]) = *(unsigned __int8 *)(v14 + (v26 ^ 0xF5));
  v29 = v19 | (v28 << 8);
  v30 = a3[4] ^ 0x7BLL;
  v31 = v20 | (v23 << 24) | ((v27 ^ 0x62) << 8);
  STACK[0x6970] = v11;
  v32 = (*(unsigned __int8 *)(v11 + v30) ^ 0x49) << 24;
  LODWORD(STACK[0x6A80]) = v32;
  LODWORD(STACK[0x69C0]) = v32 ^ 0x72CF3522;
  LODWORD(STACK[0x6A40]) = v29 ^ 0xFF6B7FD1;
  LODWORD(STACK[0x6AA0]) = v29 & 0xB4E0FE;
  LODWORD(STACK[0x69A0]) = v21 ^ 0x54EF13C9;
  LODWORD(STACK[0x69B0]) = v31;
  LODWORD(STACK[0x69D0]) = v31 ^ 0xA2044C84;
  LODWORD(STACK[0x6A70]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12))();
}

uint64_t sub_100B3D628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  unsigned int v7;
  char v8;
  char v9;
  char v10;
  char v11;
  int v12;
  char v13;
  unsigned int v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  _BOOL4 v23;

  v16 = v7 - 121;
  v17 = (v16 ^ 0x70) & (2 * (v16 & (((v6 + 66) | v10) + 89))) ^ v16 & (((v6 + 66) | v10) + 89);
  v18 = ((2 * (v16 ^ 0xC2)) ^ 0x76) & (v16 ^ 0xC2) ^ (2 * (v16 ^ 0xC2)) & (v8 + 2);
  v19 = v18 ^ 0x89;
  v20 = v17 ^ (v8 + 3) ^ (v18 ^ 0x20) & (4 * v17);
  v21 = ((4 * v19) ^ 0xEC) & v19 ^ (4 * v19) & v8;
  v22 = (v7 - 121) ^ (2 * (v21 & 0xA8 ^ v20 ^ (v21 ^ v9) & ((16 * v20) ^ 0x18)));
  *(_BYTE *)(a4 + v7) = *(_BYTE *)(a3 + v7)
                      + (((v22 ^ v13) - 115) ^ ((v22 ^ v15) - 20) ^ ((v22 ^ 0x38) - 57)) * v11
                      + 26;
  v23 = a6 < v14;
  if (v23 == v7 + 702674785 < v14)
    v23 = v7 + 702674785 < a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v23 * v12) ^ v6)) - 12))();
}

uint64_t sub_100B3D828(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  v5 = LODWORD(STACK[0x6A50]) | (LODWORD(STACK[0x6AC0]) << 24) | (LODWORD(STACK[0x6AB0]) << 16) | (LODWORD(STACK[0x6A90]) << 8);
  LODWORD(STACK[0x6900]) = v5;
  LODWORD(STACK[0x6A40]) = v5 ^ 0x835CC58;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ (24832 * ((a5 + 1) & 1)))) - 8))();
}

uint64_t sub_100B3D910(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8))();
}

uint64_t sub_100B3D960(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  LODWORD(STACK[0x6A30]) = v3 | LODWORD(STACK[0x6AA0]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - (a3 ^ 0x1BF5u) + 11282))(a1, 35717135, 47328437, 336102160, 419430787, 496534076, 1085164637, 2164260864);
}

uint64_t sub_100B3DA18()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7157 * (2 * (v1 & 1) + (v1 ^ 1u) < v2 + 16)) ^ v0))
                            - 4))();
}

uint64_t sub_100B3DAE4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * ((-1431655765 * (v0 + 1)) < 0x55555556)) | (8 * ((-1431655765 * (v0 + 1)) < 0x55555556))) ^ v1))
                            - 4))();
}

uint64_t sub_100B3DB64(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unint64_t v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unint64_t v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  unint64_t v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  uint64_t v174;

  v22 = (247735457 * v9) >> 8;
  v23 = v22 - 1593835520 * v9;
  v24 = 253951829 * v23;
  v25 = (-375778304 * v8) | ((-1543870843 * v8) >> 22);
  v26 = (823549952 * v10) | ((-718698317 * v10) >> 19);
  v27 = v26 - v25 + ((1366873579 * v11) >> 30) + v23 + ((v13 ^ 0x1D87) + 1172511627) * v11;
  v28 = ((1711610303 * v27) >> 2) - (v27 << 30);
  v29 = (1702887424 * v26) | ((1315768523 * v26) >> 9);
  v30 = (26482176 * v25) | ((1971374603 * v25) >> 23);
  v31 = -2021652367 * v28;
  v32 = 2013300496 * v28;
  v33 = v29 + v30 + (__PAIR64__(v22, v24) >> 1) - v28;
  v34 = v32 & 0xFFFFFFF0 | (v31 >> 28);
  v35 = ((1305250687 * v33) >> 7) - (v33 << 25);
  v36 = 1439747665 * v35;
  v37 = -1459617792 * v29 + ((-44590167 * v29) >> 8);
  v38 = 1464023364 * v35;
  v39 = (v34 ^ ((-1623195648 * v30) | ((-1134422403 * v30) >> 10))) + v37 + v35;
  v40 = ((2 * (v38 & 0xFFFFFFFC | (v36 >> 30))) & 0x79FFF5F6) + ((v38 & 0xFFFFFFFC | (v36 >> 30)) ^ 0xBCFFFAFB);
  v41 = 2014625280 * v34 + ((708577887 * v34) >> 23);
  v42 = ((-1050079232 * v39) | ((-355723631 * v39) >> 20))
      - 2 * (((-1050079232 * v39) | ((-355723631 * v39) >> 20)) & 0x4627E7D7 ^ ((-355723631 * v39) >> 20) & 0x10)
      - 970463289;
  v43 = v41 + 198910331 + v40 + (v42 ^ LODWORD(STACK[0x644]));
  v44 = (v41 ^ ((1409286144 * v37) | ((1987629717 * v37) >> 6)))
      - v40
      - 153611468
      - (((v42 ^ LODWORD(STACK[0x648])) - 1077321169) ^ ((v42 ^ 0x5CB5E482) - 1555424386) ^ ((v42 ^ 0xDAA49E94)
                                                                                           + 626745708));
  v45 = v44 - ((2 * v44) & 0x9B5A24B2) - 844295591;
  v46 = v45 ^ (((2 * v43) & 0x396BFF74) + (v43 ^ 0x1CB5FFBA));
  v47 = (((v46 ^ 0xE2BFB99F) - 1436599895) ^ ((v46 ^ 0x9D256997) - 708449887) ^ ((v46 ^ 0xB237C251) - 86556057))
      * (a8 + 127)
      + 521974828;
  LODWORD(STACK[0x6AC0]) = v13 ^ 0x1D87;
  v48 = (v47 ^ 0x895796F2) & (2 * (v47 & 0xD067A6C3)) ^ v47 & 0xD067A6C3;
  v49 = ((2 * (v47 ^ 0xA9979E74)) ^ 0xF3E0716E) & (v47 ^ 0xA9979E74) ^ (2 * (v47 ^ 0xA9979E74)) & 0x79F038B6;
  v50 = (v49 ^ 0x41A03004) & (4 * v48) ^ v48;
  v51 = ((4 * (v49 ^ 0x8100891)) ^ 0xE7C0E2DC) & (v49 ^ 0x8100891) ^ (4 * (v49 ^ 0x8100891)) & 0x79F038B4;
  v52 = (v51 ^ 0x61C02093) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x18301823)) ^ 0x9F038B70) & (v51 ^ 0x18301823) ^ (16 * (v51 ^ 0x18301823)) & 0x79F038B0;
  v54 = v52 ^ 0x79F038B7 ^ (v53 ^ (a5 + 1796)) & (v52 << 8);
  v55 = v47 ^ (2
             * ((v54 << 16) & 0x79F00000 ^ v54 ^ ((v54 << 16) ^ 0x38B70000) & (((v53 ^ 0x60F03087) << 8) & 0x79F00000 ^ 0x9C00000 ^ (((v53 ^ 0x60F03087) << 8) ^ 0x70380000) & (v53 ^ 0x60F03087))));
  v56 = (((v45 ^ 0xD1926630) + 778934736) ^ ((v45 ^ 0xE75AA654) + 413489580) ^ ((v45 ^ 0xFB65D23D) + 77213123))
      + 488493647
      + (((v55 ^ (a7 + 2134)) - 1453841502) ^ ((v55 ^ 0x1D94C7C7) - 194858794) ^ ((v55 ^ 0xFDD44D9) - 433376308));
  v57 = (v56 ^ 0xE1791E02) & (2 * (v56 & 0xF57D9F4A)) ^ v56 & 0xF57D9F4A;
  v58 = ((2 * (v56 ^ 0x1491286)) ^ 0xE8691B98) & (v56 ^ 0x1491286) ^ (2 * (v56 ^ 0x1491286)) & 0xF4348DCC;
  v59 = v58 ^ 0x14148444;
  v60 = (v58 ^ LODWORD(STACK[0x64C])) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0xD0D23730) & v59 ^ (4 * v59) & 0xF4348DCC;
  v62 = (v61 ^ 0xD0100500) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0x242488CC)) ^ 0x4348DCC0) & (v61 ^ 0x242488CC) ^ (16 * (v61 ^ 0x242488CC)) & 0xF4348DC0;
  v64 = v62 ^ 0xF4348DCC ^ (v63 ^ 0x40008C0C) & (v62 << 8);
  v65 = v56 ^ (2
             * ((v64 << 16) & 0x74340000 ^ v64 ^ ((v64 << 16) ^ 0xDCC0000) & (((v63 ^ 0xB434010C) << 8) & 0x74340000 ^ 0x40300000 ^ (((v63 ^ 0xB434010C) << 8) ^ 0x348D0000) & (v63 ^ 0xB434010C))));
  v66 = ((v55 ^ LODWORD(STACK[0x650])) - 2039961229) ^ ((v55 ^ 0x512FDB12) - 1193694207);
  LODWORD(STACK[0x6AA0]) = v55;
  v67 = v40 + 104067462 + (v66 ^ ((v55 ^ 0x6C56D2DF) - 2053069362));
  v68 = (v67 ^ 0x753278BE) & (2 * (v67 & 0x81BA72BF)) ^ v67 & 0x81BA72BF;
  v69 = ((2 * (v67 ^ 0x7442FCE8)) ^ 0xEBF11CAE) & (v67 ^ 0x7442FCE8) ^ (2 * (v67 ^ 0x7442FCE8)) & 0xF5F88E56;
  v70 = v69 ^ (a4 - 191);
  v71 = (v69 ^ 0x1F00C04) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0xD7E2395C) & v70 ^ (4 * v70) & 0xF5F88E54;
  v73 = (v72 ^ 0xD5E00853) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x20188603)) ^ 0x5F88E570) & (v72 ^ 0x20188603) ^ (16 * (v72 ^ 0x20188603)) & 0xF5F88E50;
  v75 = v73 ^ 0xF5F88E57 ^ (v74 ^ 0x55888400) & (v73 << 8);
  v76 = v67 ^ (2
             * ((v75 << 16) & 0x75F80000 ^ v75 ^ ((v75 << 16) ^ 0xE570000) & (((v74 ^ 0xA0700A07) << 8) & 0x75F80000 ^ 0x5700000 ^ (((v74 ^ 0xA0700A07) << 8) ^ 0x788E0000) & (v74 ^ 0xA0700A07))));
  LODWORD(STACK[0x6990]) = v55 ^ 0x160988ED;
  LODWORD(STACK[0x6910]) = v42;
  v77 = v55 ^ 0x160988ED ^ v42;
  v78 = -1919760477
      * (((v76 ^ 0xE6C89807) - 765497881) ^ ((v76 ^ 0x74BD40A3) + 1076540739) ^ ((v76 ^ 0xF09EB6B5) - 1006025899))
      - 1789049594;
  v79 = (v78 ^ 0xCFB09197) & (2 * (v78 & 0xCFA11987)) ^ v78 & 0xCFA11987;
  v80 = ((2 * (v78 ^ 0x41F29393)) ^ 0x1CA71428) & (v78 ^ 0x41F29393) ^ (2 * (v78 ^ 0x41F29393)) & 0x8E538A14;
  v81 = v80 ^ 0x82508A14;
  v82 = (v80 ^ v15) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x394E2850) & v81 ^ (4 * v81) & 0x8E538A14;
  v84 = v82 ^ 0x8E538A14 ^ (v83 ^ 0x8420814) & (16 * v82);
  v85 = (16 * (v83 ^ 0x86118204)) & 0x8E538A10 ^ 0xA430A14 ^ ((16 * (v83 ^ 0x86118204)) ^ LODWORD(STACK[0x654])) & (v83 ^ 0x86118204);
  v86 = (v84 << 8) & 0x8E538A00 ^ v84 ^ ((v84 << 8) ^ 0x538A1400) & v85;
  v87 = (v78 ^ (2
              * ((v86 << 16) & 0xE530000 ^ v86 ^ ((v86 << 16) ^ 0xA140000) & ((v85 << 8) & v16 ^ v20 ^ ((v85 << 8) ^ v14) & v85)))) >> 10;
  v88 = (((v77 ^ 0xAF8781A5) + 1350073947) ^ ((v77 ^ 0xD922D796) + 652028010) ^ ((v77 ^ 0xF46CEEB4) + 194187596))
      * LODWORD(STACK[0x658])
      - 2121088306;
  v89 = (v88 ^ 0xF87D3B90) & (2 * (v88 & 0xFA79BB25)) ^ v88 & 0xFA79BB25;
  v90 = ((2 * (v88 ^ 0x6CDE2BDA)) ^ 0x2D4F21FE) & (v88 ^ 0x6CDE2BDA) ^ (2 * (v88 ^ 0x6CDE2BDA)) & 0x96A790FE;
  v91 = v90 ^ 0x92A09001;
  v92 = (v90 ^ 0x700BD) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0x5A9E43FC) & v91 ^ (4 * v91) & 0x96A790FC;
  v94 = (v93 ^ 0x128600F0) & (16 * v92) ^ v92;
  v95 = ((16 * (v93 ^ 0x84219003)) ^ 0x6A790FF0) & (v93 ^ 0x84219003) ^ (16 * (v93 ^ 0x84219003)) & 0x96A790F0;
  v96 = v94 ^ 0x96A790FF ^ (v95 ^ a2) & (v94 << 8);
  v97 = v88 ^ (2
             * ((v96 << 16) & 0x16A70000 ^ v96 ^ ((v96 << 16) ^ v21) & (((v95 ^ 0x9486900F) << 8) & 0x16A70000 ^ 0x10270000 ^ (((v95 ^ 0x9486900F) << 8) ^ LODWORD(STACK[0x65C])) & (v95 ^ 0x9486900F))));
  v98 = STACK[0x660];
  LODWORD(STACK[0x6920]) = v76;
  v99 = -1498519410
      - 390070272 * (((v76 ^ 0x9C88DF09) - 1474352407) ^ ((v76 ^ v98) + 1961284400) ^ ((v76 ^ 0xBE1297D6) - 1970970056));
  v100 = ((2 * (v99 & (v17 + 8))) | 4) & (v99 ^ 0x7FB2BBF0) ^ v99 & (v17 + 8) ^ (((2 * (v99 & (v17 + 8))) & a8 | 0x20009)
                                                                               + 2039);
  v101 = (2 * (v99 ^ 0x7FB2BBF0)) & 0x83000000 ^ (a8 + 2) ^ ((2 * (v99 ^ 0x7FB2BBF0)) ^ 0x6445104) & (v99 ^ 0x7FB2BBF0);
  v102 = (4 * v100) & 0x83232C80 ^ v100 ^ ((4 * v100) ^ 0x82008) & v101;
  v103 = (4 * v101) & 0x83232C80 ^ 0x83230C82 ^ ((4 * v101) ^ 0xC8CB208) & v101;
  v104 = v102 ^ (16 * v102) & 0x83232C80 ^ ((16 * v102) ^ 0x228020) & v103 ^ 0x83030480;
  v105 = (16 * v103) & 0x83232C80 ^ 0x81012482 ^ ((16 * v103) ^ 0x3232C820) & v103;
  v106 = (v104 << 8) & 0x83232C00 ^ v104 ^ ((v104 << 8) ^ 0x232C8200) & v105;
  v107 = (v106 << 16) & 0x3230000 ^ v106 ^ ((v106 << 16) ^ 0x2C820000) & ((v105 << 8) & 0x83230000 ^ ((v105 << 8) ^ 0x232C0000) & v105 ^ 0x30000);
  v108 = STACK[0x664];
  LODWORD(STACK[0x6940]) = v77;
  v109 = 1666187264
       * (((v77 ^ 0xB4B33410) + 1263324144) ^ ((v77 ^ 0x8C8704E6) + 1937308442) ^ ((v77 ^ v108) + 1157789583))
       + 178180494;
  v110 = (v109 & 0xD4900000 | ((((v109 & 0xD4900000) >> 28) & 1) << 29)) ^ ((2 * (v109 & 0xD4900000)) | 4) & (v109 ^ 0xE2559BF1);
  v111 = (2 * (v109 ^ 0xE2559BF1)) & 0x36C00002 ^ 0x12400001 ^ ((2 * (v109 ^ 0xE2559BF1)) ^ 0x6D894A06) & (v109 ^ 0xE2559BF1);
  v112 = (4 * v110) & 0x3FC00000 ^ v110 ^ ((4 * v110) | 8) & v111;
  v113 = (4 * v111) & 0x36C4B580 ^ 0x24C42183 ^ ((4 * v111) ^ 0xDB12D60C) & v111;
  v114 = (16 * v112) & 0x36C4B580 ^ v112 ^ ((16 * v112) ^ 0x20) & v113;
  v115 = (16 * v113) & 0x36C4B580 ^ 0x1284A583 ^ ((16 * v113) ^ 0x6C4B5830) & v113;
  v116 = v114 ^ 0x36C4B581 ^ (v114 << 8) & 0x36C4B500 ^ ((v114 << 8) ^ 0x200) & v115;
  v117 = v87 & 0x3A840 ^ 0x36BCDFBF ^ (v99 ^ LODWORD(STACK[0x668]) ^ (2 * v107)) & (v87 ^ 0xFFCF377C);
  v118 = (v109 ^ (2
                * ((v116 << 16) & 0x36C40000 ^ v116 ^ ((v116 << 16) ^ 0x35830000) & ((v115 << 8) & 0x36C40000 ^ 0x32400000 ^ ((v115 << 8) ^ 0xC4B50000) & v115))) ^ 0xC8B49203) & ((v97 >> 12) ^ 0xFFF09876) ^ (v97 >> 12) & 0x32888;
  v119 = ((v118 & 0xD2EB829D ^ 0x50AA8215) + (v118 ^ 0x83512088) - ((v118 ^ 0x83512088) & 0xD2EB829D)) ^ 0x491555EA;
  v120 = ((-238288896
         * (((v65 ^ 0xA11372B2) + 524942579) ^ ((v65 ^ 0xD70AABEB) + 1766860204) ^ ((v65 ^ LODWORD(STACK[0x66C]))
                                                                                  - 580922420))) | ((1521732599 - 166118285 * (((v65 ^ 0xD7E54191) + 1774178258) ^ ((v65 ^ (v18 + 1438)) + a3) ^ ((v65 ^ 0x7E7167B7) - 1070863880))) >> 14))
       + 802947072;
  v121 = (v12
        + 1140850688
        * (((v46 ^ 0x6464C858) + 746866800) ^ ((v46 ^ 0x447ECD35) + 211700995) ^ ((v46 ^ 0xEDB71734) - 1520986364))
        + ((-1621709615
          * (((v46 ^ 0x57924F9A) + 527617966) ^ ((v46 ^ 0x588C1CC1) + 275553527) ^ ((v46 ^ 0xC2B34102) - 1974222538))
          - 352395423) >> 6)
        - v119
        + v117) ^ v120;
  v122 = (302170112 * v120) | ((77613067 * v120) >> 18);
  v123 = (-966042880 * v121) | ((801532763 * v121) >> 24);
  v124 = (-1004739504 * v119) | ((-331231675 * v119) >> 28);
  v125 = (-v124 - 9993312 * v117 + ((-537183203 * v117) >> 27) - v123) ^ v122;
  v126 = (-856026977 * v123) >> 14;
  v127 = (1115422720 * v123) | v126;
  v128 = (833408027 * v122) >> 12;
  v129 = (-1045430272 * v122) | v128;
  v130 = (1803005952 * v125) | ((1253488507 * v125) >> 20);
  v131 = ((-1578909696 * v124) | ((1005225871 * v124) >> 18)) - v127 + v130;
  v132 = (1809901568 * (v131 ^ v129)) | ((99449885 * (v131 ^ v129)) >> 21);
  v133 = (880206592 * v130) | ((-1120635165 * v130) >> 24);
  HIDWORD(v135) = v126;
  LODWORD(v135) = -1511648543 * v127;
  v134 = v135 >> 3;
  v136 = v134 - (v128 << 30) + ((927029203 * v129) >> 2) + v133 + v132;
  v137 = (v134 - v133 + 1843943125 + v132) ^ LODWORD(STACK[0x670]) ^ v136;
  v138 = -238186065 * v137 + v133;
  v139 = -238186065 * v137 + v136 - ((2 * (-238186065 * v137 + v136)) & 0xC26252D8) + 1630611820;
  LODWORD(STACK[0x6A20]) = -238186065 * v137;
  v140 = (-238186065 * v137) ^ v132;
  v141 = v140 + a6 - ((2 * v140) & 0x3B310478);
  LODWORD(STACK[0x6AB0]) = v141;
  if ((v138 & 0x4000) != 0)
    v142 = -16384;
  else
    v142 = 0x4000;
  LODWORD(STACK[0x69E0]) = v142;
  LODWORD(STACK[0x69F0]) = 2 * v138;
  LODWORD(STACK[0x6A50]) = v139;
  HIDWORD(v144) = 3 * v138;
  LODWORD(v144) = 158633683 * v138;
  v143 = v144 >> 4;
  v145 = (-435005489
        * (((v139 ^ 0x27D6C361) - 668386145) ^ ((v139 ^ v19) + 1595743727) ^ ((v139 ^ 0xE605081C) + 435877860))
        + 1030500948) >> 18;
  v146 = ((-1779187712
         * (((v139 ^ 0xAC22B04E) + 1407012786) ^ ((v139 ^ 0x21A3F6D) - 35274605) ^ ((v139 ^ 0xCF09A64F) + 821451185))) | v145)
       + 211091456;
  v147 = ((843691375
         * (((v141 ^ 0xE14CF477) + 515050377) ^ ((v141 ^ 0xD8524191) + 665697903) ^ ((v141 ^ 0x248637DA) - 612775898))
         - 2075073532) >> 2)
       - (v140 << 30);
  v148 = ((-233134896 * v137) | ((-14570931 * v137) >> 28)) - v143 + v146 - v147;
  v149 = (-889540608 * v148) | ((-1477660757 * v148) >> 20);
  v150 = v149 * LODWORD(STACK[0x67C]);
  v151 = (132907008 * v147) | ((v147 * LODWORD(STACK[0x674])) >> 14);
  v152 = __PAIR64__(v145, 1396175589 * v146) >> 1;
  v153 = ((v149 ^ ((v143 * LODWORD(STACK[0x678])) & 0xFFFFFFFC | ((1937202933 * v143) >> 30))) - v151) ^ v152;
  HIDWORD(v144) = 3 * v153;
  LODWORD(v144) = -1172515709 * v153;
  v154 = v144 >> 7;
  v155 = 424442203 * v154;
  v156 = (-1315864832 * v149) | HIBYTE(v150);
  v157 = -955583516 * v152 + ((834845945 * v152) >> 30);
  v158 = (v156 ^ ((-2091122688 * v151) | ((-659562281 * v151) >> 14))) - v157 - v154;
  HIDWORD(v144) = 5 * HIBYTE(v150);
  LODWORD(v144) = 337148645 * v156;
  v159 = (-891813888 * v154) | ((424442203 * v154) >> 13);
  v160 = -382730240 * v158 + ((v158 * LODWORD(STACK[0x680])) >> 12);
  v161 = ((v144 >> 5) ^ ((-1825178624 * v157) | ((1860488575 * v157) >> 22)) ^ v159)
       + v160
       + 1635282801 * ((-1042163803 * ((v144 >> 5) - v159)) ^ v160);
  LODWORD(STACK[0x6A10]) = 1672881;
  v162 = (v161 >> 8) ^ 0x1986B1;
  v163 = (v162 | (v161 << 24)) ^ 0xD0000000;
  HIDWORD(v144) = v155 >> 13;
  LODWORD(v144) = v159;
  v164 = v144 >> 8;
  if ((v162 & 0x200) != 0)
    v165 = -512;
  else
    v165 = 512;
  v166 = (v161 ^ 0x1986B1D0) + v160;
  HIDWORD(v168) = v164 ^ 0x5215A005 ^ (v165 + v163);
  LODWORD(v168) = HIDWORD(v168);
  v167 = v168 >> 24;
  LODWORD(STACK[0x68F0]) = v167 ^ 0x29FEAA4;
  v169 = v166 + 1598073440;
  if (v166 < 0xA0BF55A0)
    v169 = v166;
  v170 = v166 * LODWORD(STACK[0x684]);
  if (v166 >= 0xA0BF55A0)
    v171 = -1598073440;
  else
    v171 = 0;
  if (v169)
    v172 = v166;
  else
    v172 = v171;
  LODWORD(STACK[0x6930]) = v172;
  LODWORD(STACK[0x6A90]) = v170;
  v173 = (v170 >> 10) & 0x15;
  if (!(v167 ^ 0x29FEAA4 ^ (v166 - ((2 * v166) & 0x2E7BDFEC) + 389935094)))
    v173 = 0;
  LODWORD(STACK[0x6A00]) = v173;
  v174 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD5C0] = v174 + 0x7036FF22EDE636FDLL;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2529 * (v174 != 0)) ^ v13)))();
}

uint64_t sub_100B3F2F8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unint64_t v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;

  LODWORD(STACK[0x6830]) = v4;
  LODWORD(STACK[0x6890]) = v1;
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6A30]) ^ 0x7AD1D9E6;
  v8 = STACK[0x6AA0];
  LODWORD(STACK[0x68D0]) = HIWORD(LODWORD(STACK[0x6AA0])) ^ 0xB5E90C5F;
  LODWORD(STACK[0x6AA0]) = (v8 >> 8) ^ 0xCC9AC540;
  v9 = (v3 - (STACK[0x69F0] & 0xC26252D8) + 1630611820) ^ LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x67C0]) = LODWORD(STACK[0x69E0]) + v3;
  v10 = (v9 + 496534076 - ((2 * v9) & 0x3B310478)) ^ LODWORD(STACK[0x6AB0]);
  v11 = (LODWORD(STACK[0x6A20]) ^ (238186065 * v7) ^ (v10 - (v10 ^ LODWORD(STACK[0x6A20])))) + v10;
  v12 = v11 - ((2 * v11) & 0xBAAF2B42) - 581462623;
  LODWORD(STACK[0x6880]) = v0 ^ LODWORD(STACK[0x53C]);
  v13 = v6
      - (((v0 ^ 0x83D30E86) - 1168337763) ^ ((v0 ^ 0xF7471D96) - 825718899) ^ ((v0 ^ LODWORD(STACK[0x540])) + 1419589851))
      - 2136722030;
  v14 = (v13 ^ 0x1F42E6B8) & (2 * (v13 & 0x9F64F639)) ^ v13 & 0x9F64F639;
  v15 = ((2 * (v13 ^ 0x3F0A0E88)) ^ LODWORD(STACK[0x544])) & (v13 ^ 0x3F0A0E88) ^ (2 * (v13 ^ 0x3F0A0E88)) & 0xA06EF8B0;
  v16 = v15 ^ 0xA0220891;
  v17 = (v15 ^ 0x4F031) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0x81BBE2C4) & v16 ^ (4 * v16) & 0xA06EF8B0;
  v19 = (v18 ^ 0x802AE080) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x20441831)) ^ 0x6EF8B10) & (v18 ^ 0x20441831) ^ (16 * (v18 ^ 0x20441831)) & 0xA06EF8B0;
  v21 = v19 ^ 0xA06EF8B1 ^ (v20 ^ 0x6E8800) & (v19 << 8);
  v22 = v13 ^ (2
             * ((v21 << 16) & 0x206E0000 ^ v21 ^ ((v21 << 16) ^ 0x78B10000) & (((v20 ^ 0xA00070A1) << 8) & 0x206E0000 ^ (((v20 ^ 0xA00070A1) << 8) ^ 0x6EF80000) & (v20 ^ 0xA00070A1) ^ 0x60000)));
  LODWORD(STACK[0x6870]) = v22 ^ 0xE2799AE5;
  v23 = 956093877
      * (((v2 ^ 0x6A67F27C) - 1761089752) ^ ((v2 ^ 0x1AAD18D) - 53820201) ^ ((v2 ^ 0x7E6F26A3) - 2096155655))
      - 40216850;
  v24 = ((1792704512
        * (((v2 ^ 0xD24067BA) + 790655714) ^ ((v2 ^ 0xBCDD5B01) + 1102925403) ^ ((v2 ^ 0x7B3F39E9) - 2040582989))) | (v23 >> 17))
      + 729219072;
  v25 = 399018131
      - 581456189
      * (((v22 ^ 0xD55F3F99) - 925279612) ^ ((v22 ^ 0x6F9AE780) + 1914471067) ^ ((v22 ^ 0x253CDF42) + 951761497));
  v26 = (v25 ^ 0x69F292A7) & (2 * (v25 & 0x8DF8C327)) ^ v25 & 0x8DF8C327;
  v27 = ((2 * (v25 ^ 0x711212E9)) ^ 0xF9D5A39C) & (v25 ^ 0x711212E9) ^ (2 * (v25 ^ 0x711212E9)) & 0xFCEAD1CE;
  v28 = v27 ^ 0x42A5042;
  v29 = (v27 ^ 0x78C841CE) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ 0xF3AB4738) & v28 ^ (4 * v28) & 0xFCEAD1CC;
  v31 = (v30 ^ 0xF0AA4100) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0xC4090C6)) ^ 0xCEAD1CE0) & (v30 ^ 0xC4090C6) ^ (16 * (v30 ^ 0xC4090C6)) & 0xFCEAD1C0;
  v33 = v31 ^ 0xFCEAD1CE ^ (v32 ^ 0xCCA81000) & (v31 << 8);
  v34 = v25 ^ (2
             * ((v33 << 16) & 0x7CEA0000 ^ v33 ^ ((v33 << 16) ^ 0x51CE0000) & (((v32 ^ 0x3042C10E) << 8) & 0x7CEA0000 ^ 0x142A0000 ^ (((v32 ^ 0x3042C10E) << 8) ^ 0x6AD10000) & (v32 ^ 0x3042C10E))));
  v35 = (-499122176 * v5) | (LODWORD(STACK[0x6A90]) >> 10);
  v36 = -53193931
      - 332398592
      * (((v22 ^ 0x7F5E1A34) + 1658355503) ^ ((v22 ^ 0x4B0B0BFB) + 1452109538) ^ ((v22 ^ 0xABAC1694) - 1238731889));
  v37 = v36 & 0xBEC00000 ^ 0x90C8411 ^ ((2 * (v36 & 0xBEC00000)) | 2) & (v36 ^ 0xB7C720DB) ^ ((2 * (v36 & 0xBEC00000)) & 0x9000000 | 0x800);
  v38 = (2 * (v36 ^ 0xB7C720DB)) & 0x9000000 ^ 0x9000000 ^ ((2 * (v36 ^ 0xB7C720DB)) ^ 0x12111020) & (v36 ^ 0xB7C720DB);
  v39 = (4 * v37) & 0x90C8C10 ^ v37 ^ ((4 * v37) ^ 0x24323040) & v38;
  v40 = (4 * v38) & 0x90C8C10 ^ 0x90C8C10 ^ ((4 * v38) ^ 0x24323040) & v38;
  v41 = v39 ^ 0x88000 ^ (16 * v39) & 0x90C8C10 ^ ((16 * v39) ^ 0x90C8C100) & v40;
  v42 = (16 * v40) & 0x90C8C10 ^ 0x9040C10 ^ ((16 * v40) ^ 0x90C8C100) & v40;
  v43 = (v41 << 8) & 0x90C8C00 ^ v41 ^ ((v41 << 8) ^ 0xC8C1000) & v42;
  v44 = (v36 ^ (2
              * ((v43 << 16) & 0x90C0000 ^ v43 ^ ((v43 << 16) ^ 0xC100000) & ((v42 << 8) & 0x90C0000 ^ ((v42 << 8) ^ 0xC8C0000) & v42 ^ 0x1000000))) ^ 0xD27C464) & ((v34 >> 12) ^ 0xFFF2A469) ^ (v34 >> 12) & 0x28F70;
  v45 = ((v44 & 0xF99C666F ^ 0xE99C664F) + (v44 ^ 0x14020820) - ((v44 ^ 0x14020820) & 0xF99C666F)) ^ 0x4C7315D0;
  v46 = (v24 ^ (((-959037440
                * (((v0 ^ 0xB806A509) - 2121711852) ^ ((v0 ^ 0xD8C8F8E3) - 515415302) ^ ((v0 ^ 0x7948EC3A) + 1086813729))) | ((1805589337 * (((v0 ^ 0x661635C0) + 1603907547) ^ ((v0 ^ 0x73BC1A0C) + 1244889111) ^ ((v0 ^ 0xC2C9E1Cu) + 899875847)) - 652452499) >> 18))
              + 391856128))
      - v35
      - v45;
  v47 = (1871532160 * v46) | ((1960778401 * v46) >> 25);
  HIDWORD(v48) = v23 >> 17;
  LODWORD(v48) = -707480343 * v24;
  v49 = (1797201920 * v35) | ((485185785 * v35) >> 19);
  v50 = (-2121046016 * v45) | ((565195373 * v45) >> 21);
  v51 = ((v47 ^ (v48 >> 3)) - v49) ^ v50;
  v52 = (-441656816 * v47) | ((777702817 * v47) >> 28);
  v53 = (869007360 * v51) | ((328060147 * v51) >> 14);
  v54 = (1312817152 * v50) | ((-134599367 * v50) >> 10);
  v55 = (v52 ^ ((-1364836352 * v49) | ((-1325221223 * v49) >> 18))) - v53 + v54;
  v56 = -786872145 * v54;
  v57 = (v52 * LODWORD(STACK[0x548])) & 0xFFFFFFE0 | ((-2023769171 * v52) >> 27);
  v58 = -1935386752 * v54;
  v59 = (-895614976 * v53) | ((-589568689 * v53) >> 15);
  v60 = ((-730838945 * v55) >> 3) - (v55 << 29);
  v61 = v57 - v59 - v60 + 380573678;
  v62 = v59 + (v57 ^ (v58 & 0xFFFFFF80 | (v56 >> 25))) - v60;
  v63 = v62 ^ v61;
  LODWORD(STACK[0x6790]) = v63;
  v63 += 993012084;
  v64 = v63 + v60;
  v65 = -1284609937 * v63;
  v66 = v63 + v59 - ((2 * (v63 + v59)) & 0x75E0F172) + 988838073;
  v67 = 921077488 * v63;
  v68 = 1681261123 * (v63 + v60);
  LODWORD(STACK[0x6840]) = v63;
  LODWORD(STACK[0x67E0]) = v62;
  v69 = v63 ^ v62;
  v70 = 583182947 * (v63 ^ v62);
  v68 >>= 18;
  v71 = STACK[0x54C];
  LODWORD(STACK[0x68A0]) = v69;
  v72 = v69 * v71;
  LODWORD(STACK[0x6A90]) = v64;
  v73 = v68 - 2137997312 * v64;
  LODWORD(STACK[0x6800]) = v66;
  v74 = v72 & 0xFFFFFF00 | HIBYTE(v70);
  v75 = v67 & 0xFFFFFFF0 | (v65 >> 28);
  v76 = ((-1201017632
        * (((v66 ^ 0x29EF648D) - 703554701) ^ ((v66 ^ 0x9C3A52F9) + 1673899271) ^ ((v66 ^ 0x8F254ECD) + 1893380403))) | ((901992295 * (((v66 ^ 0x9033364C) + 1875691956) ^ ((v66 ^ 0x3FE367D3) - 1071867859) ^ ((v66 ^ 0x95202926) + 1793054426)) + 770484591) >> 27))
      - 1114296864;
  v77 = (v73 ^ v75 ^ v76) - v74;
  v78 = -1248986021 * v77;
  v79 = (-1401953576 * v77) | ((-1248986021 * v77) >> 29);
  v80 = __PAIR64__(v68, 1347910089 * v73) >> 2;
  v81 = -760248704 * v74 + ((430268173 * v74) >> 25);
  v82 = 828567957 * v79;
  v83 = v80
      - v81
      + v79
      + (((1542340608 * v76) | ((-1909624903 * v76) >> 18)) ^ -((1542340608 * v76) | ((-1909624903 * v76) >> 18)) ^ (v79 - (v79 ^ ((1542340608 * v76) | ((-1909624903 * v76) >> 18)))));
  HIDWORD(v48) = v78 >> 29;
  LODWORD(v48) = v82;
  v84 = v48 >> 1;
  v85 = (1943992320 * v83) | ((1296989151 * v83) >> 21);
  v86 = (2025181184 * v81) | ((1970768733 * v81) >> 20);
  v87 = ((-687300288 * v80) | ((324805253 * v80) >> 26)) - v86 + v84 + v85;
  v88 = (540868608 * v84) | ((-127459267 * v84) >> 16);
  v89 = (-34676548 * v85) | ((-8669137 * v85) >> 30);
  HIDWORD(v48) = 234834919 * v86;
  LODWORD(v48) = 234834919 * v86;
  v90 = -1610612736 * v87 + ((-716552819 * v87) >> 3);
  v91 = v90 + (v89 ^ ((v48 >> 31) - v88));
  v92 = ((v90 + 1928757623 * (v88 - v89)) * LODWORD(STACK[0x550])) ^ v91;
  LODWORD(STACK[0x6780]) = v92;
  v93 = v92 + 641366873;
  v94 = v92 + 641366873 + v89;
  v95 = (v92 + 641366873) ^ v90;
  v96 = v91 - (v92 + 641366873);
  v97 = 1777075423 * (v92 + 641366873);
  LODWORD(STACK[0x6850]) = v95;
  LODWORD(STACK[0x6820]) = v94;
  v98 = (-1851502592 * v94) | ((885594693 * v94) >> 20);
  LODWORD(STACK[0x6860]) = v96;
  v99 = ((-267404160
        * (((v95 ^ 0x1E74DB50) - 623757240) ^ ((v95 ^ 0x88F350FD) + 1280685035) ^ ((v95 ^ 0x96878BAD) + 1377921211))) | ((736108409 * (((v95 ^ 0x3F9C8734) - 80059356) ^ ((v95 ^ 0x8B1659D7) + 1336982209) ^ ((v95 ^ 0xB48ADEE3) + 1881947637)) + 446611880) >> 25))
      + 1331745792;
  v100 = (146145280 * v96) | ((898991195 * v96) >> 15);
  v101 = ((-1091866617 * ((v99 ^ ((__PAIR64__(v93, v97) >> 1) - v98)) + v100)) >> 2)
       - (((v99 ^ ((__PAIR64__(v93, v97) >> 1) - v98)) + v100) << 30);
  HIDWORD(v48) = 3 * v99;
  LODWORD(v48) = -1821561533 * v99;
  v102 = v48 >> 6;
  v103 = (1967993088 * v100) | ((-864727759 * v100) >> 24);
  v104 = ((-1988514976 * v98) | ((1145818459 * v98) >> 27)) - v103 - v102 + v101;
  v105 = (unsigned __int16)((1786095313 * v101) >> LODWORD(STACK[0x6A00]) >> (LODWORD(STACK[0x6A00]) ^ 0x15)) | (-1388935168 * v101);
  v106 = (-1207874699 * v104) >> 3;
  v107 = v106 - 1610612736 * v104;
  v108 = (1568407552 * v103) | ((4413279 * v103) >> 14);
  LODWORD(v48) = __ROR4__((__PAIR64__(v106, v107) >> 25) ^ __ROR4__(v105 ^ ((-177791744 * v102) | ((1224042269 * v102) >> 24)), 25) ^ 0xFA6DE2ED, 7);
  LODWORD(STACK[0x67F0]) = v12;
  LOBYTE(v102) = (v12 & 7 ^ 0x9C) - ((2 * (v12 & 7 ^ 0x9C)) & 0x16) + 11;
  v109 = (1526726656 * v105) | ((-1402126501 * v105) >> 8);
  v110 = (-307887616 * v107) | ((1131860737 * v107) >> 23);
  v111 = (v109 + (((237669299 * v108) << (v102 ^ 0x96) << (v102 ^ 0x91)) ^ ((237669299 * v108) >> 25))) ^ v110;
  v112 = (782242816 * (v108 ^ v48 ^ 0xDBF4DBC5)) | ((176924677 * (v108 ^ v48 ^ 0xDBF4DBC5)) >> 22);
  v113 = v112 ^ v111 ^ 0x929A86DF ^ (v112
                                   + 1631501565 * (v109 - v110)
                                   - 600946850
                                   - ((2 * (v112 + 1631501565 * (v109 - v110) - 600946850)) & 0x25350DBE)
                                   - 1835366689);
  v114 = (v113 - 554011028) ^ v112 ^ v111;
  LODWORD(STACK[0x67A0]) = v114;
  v115 = v110 - (v113 - 554011028);
  LODWORD(STACK[0x67B0]) = v115;
  LODWORD(STACK[0x69E0]) = v113;
  LODWORD(STACK[0x67D0]) = ((v113 - 554011028) ^ (554011028 - v113) ^ ((v115 ^ v111) - (v115 ^ v111 ^ (v113 - 554011028))))
                         + (v115 ^ v111);
  LODWORD(STACK[0x68B0]) = v114 ^ 0xB8AF3826;
  LODWORD(STACK[0x6810]) = HIBYTE(v93);
  LODWORD(STACK[0x69F0]) = v113 - 554011028;
  LODWORD(STACK[0x6A00]) = v0;
  LODWORD(STACK[0x68C0]) = v93;
  STACK[0x6A10] = STACK[0xD5C0];
  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])))((v113 - 554011028) ^ v112);
}

uint64_t sub_100B40760(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;

  v23 = STACK[0x6AC0];
  v24 = (((v9 ^ v17) - (v12 & (2 * (v9 ^ v17))) - 105) ^ LODWORD(STACK[0x6AA0]));
  v25 = LODWORD(STACK[0x6AB0]) ^ 0xE7639660 ^ LODWORD(STACK[0x6A90]) ^ a1 ^ v24 ^ *((_DWORD *)*(&off_1015B46D0
                                                                                              + (LODWORD(STACK[0x6AC0]) ^ v11))
                                                                                  + (LODWORD(STACK[0x6AC0]) ^ v16 ^ v19 ^ v24)
                                                                                  - 3);
  v26 = v15 - (((v25 & v14 ^ v13) - 1) ^ v18 | v15) + (((v25 & v14 ^ v13) - 1) ^ v18 | a3);
  v27 = (v25 & a5 ^ a6 | a7) - (v25 & a5 ^ a6 | v20) + v20;
  v28 = v27 & v21 ^ 0x23700242 ^ (v26 ^ a8) & (v27 ^ v22);
  *(_DWORD *)(v8 + 4 * v9) = (((2 * v28) & 0x138F932E) - v28 + 1983395432) ^ 0x4752030;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 == 0) * a4) ^ v23)))();
}

uint64_t sub_100B40894(int a1)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x6AC0]) = a1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD598] = v2 + 0x3B9B8378DDDB256CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 != 0) * (((v1 - 7648) | 0x16) + 15148)) ^ v1))
                            - 12))();
}

uint64_t sub_100B40920(uint64_t a1)
{
  unsigned int v1;
  int v2;

  LODWORD(STACK[0x6AB0]) = LODWORD(STACK[0x69F0]) << ((v2 - 96) ^ 0xE1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 6048)) - 12))(a1, 13437, 70, 26, LODWORD(STACK[0x68D0]), LODWORD(STACK[0x6A50]), LODWORD(STACK[0x68B0]), ((LODWORD(STACK[0x68C0]) ^ v1) >> 16) ^ 0x1986);
}

uint64_t sub_100B40A54@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, char a8@<W7>, int a9@<W8>)
{
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  *(_DWORD *)(a1 + 4 * ((((a9 ^ v13) * a4) ^ a2) & v9)) = a6 ^ (v12 + 1874) ^ v15 ^ a7 ^ *(_DWORD *)(*(_QWORD *)(v11 + 8 * (a9 ^ v14)) + 4 * ((((v9 ^ a8) - ((2 * (v9 ^ a8)) & 0x70) - 72) ^ a5) ^ a3) - 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((60 * (v10 != 0)) ^ a9)) - 12))();
}

uint64_t sub_100B40AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  LODWORD(STACK[0x6A50]) = a8;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD590] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((21 * (v9 != 0)) ^ v8)) - (v8 ^ 0x348ALL)))();
}

uint64_t sub_100B40B34()
{
  int v0;

  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x6A30]) ^ 0x454B1F97;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 12362) | 0x4001)) - 8))(4039274805, 18066, 4294955457, 17457, 5920, 102, 46, LODWORD(STACK[0x6940]));
}

uint64_t sub_100B40D04@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W5>, char a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  char v17;
  int v18;
  _BOOL4 v19;

  v18 = ((((v12 * v10) ^ v17) - (a7 & (2 * ((v12 * v10) ^ v17))) - 105) ^ v15);
  *(_DWORD *)(v11 + 4 * (v12 * v10)) = a8 ^ a1 ^ v14 ^ v16 ^ v18 ^ *(_DWORD *)(*(_QWORD *)(v13 + 8 * (v9 ^ a2))
                                                                                                + 4 * (v18 ^ a6));
  v19 = v12 + a3 + (v9 ^ a4) * a5 != a9 + 256;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * v19) | (8 * v19)) ^ v9)) - 8))();
}

uint64_t sub_100B40D84()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD5C8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((v1 != 0) * ((v0 - 1362784837) & 0xDDBFCFBD ^ 0x8C85E323)) ^ v0))
                            - ((v0 - 1362784837) ^ 0xAEC5BBF7)))();
}

uint64_t sub_100B40E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6990]);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v4 ^ 0x8C858E88 ^ (11713 * (v4 != 2117623860)))) - 12))(a1, LODWORD(STACK[0x68C0]), LODWORD(STACK[0x6870]), a4, LODWORD(STACK[0x6860]), LODWORD(STACK[0x6820]), LODWORD(STACK[0x6810]), LODWORD(STACK[0x6850]));
}

uint64_t sub_100B41024@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  uint64_t v8;
  int v9;
  int v10;
  unsigned __int8 v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;

  *(_DWORD *)(v8 + 4 * v11) = v12 ^ 0x58A3DF6 ^ v14 ^ v13 ^ v15 ^ a3 ^ a2 ^ a1 ^ a5 ^ a4 ^ a7 ^ (*((_DWORD *)*(&off_1015B46D0 + (a8 ^ v19)) + (((((((v18 ^ a6 ^ v11 ^ v17) & v16) + ((v18 ^ a6 ^ v11 ^ v17) & v16 ^ 0xE29516C2) + 1) ^ (80 * (a8 ^ (v19 + 1807)) - 11842)) + ((v18 ^ a6 ^ v11 ^ v17) & v16)) ^ 0x1D6AE91A | (v18 ^ a6 ^ v11 ^ v17) & v20) ^ v21))
                                                                                                 - 1221242007);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a8 ^ (19537 * ((v10 | v9) >= 0)) ^ 0x4DF50E5)) - 12))();
}

uint64_t sub_100B4111C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD5A8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25664 * (v1 != 0)) ^ v0))
                            - ((((v0 - 1775866313) & 0x69D973FE) + 8205) ^ (v0 - 2120464241) & 0x7E63B9BF)))();
}

uint64_t sub_100B4119C()
{
  unsigned int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(625266353, 25158, 1899937833, 2512637734, 76, 59, 106, 123);
}

uint64_t sub_100B412C4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unsigned int a8@<W7>, int a9@<W8>)
{
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;

  v21 = ((((v12 * v10) ^ v16) + 117 - ((2 * ((v12 * v10) ^ v16)) & a7)) ^ v20) & v18 | ((((v12 * v10) ^ v16)
                                                                                       + 117
                                                                                       - ((2 * ((v12 * v10) ^ v16)) & (((v9 ^ (a9 + 142)) * a6) ^ a5))) ^ v20) & v17;
  *(_DWORD *)(v11 + 4 * (v12 * v10)) = v14 ^ v15 ^ v19 ^ *(_DWORD *)(*(_QWORD *)(v13
                                                                                                  + 8 * (int)(v9 ^ (a9 + 798)))
                                                                                      + 4
                                                                                      * ((v21 - (v17 & (2 * v21)) + 87) ^ a8)
                                                                                      - 4) ^ __ROR4__(a3 ^ __ROR4__(v21 - (v17 & (2 * v21)) + 87, 21), 11) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((~(2 * (v12 & 1) + (v12 ^ 1u)) + (unint64_t)v9) >> 32) ^ 1)
                                               * a2) ^ (a1 + v9 + 27)))
                            - 12))();
}

uint64_t sub_100B41388()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD5A0] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8
                                              * (((((v0 + 134367002) | 0x41000221) ^ 0x49026A89) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_100B413F0(uint64_t a1)
{
  unsigned int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * (int)(v1 ^ 0x49023C9C ^ (64371 * (v1 > 0x7DFE2B15)))))(a1, 4294954883, 2112, 4294946979, 4294955457, 1977676146, 988838073, LODWORD(STACK[0x67F0]));
}

uint64_t sub_100B41514@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v20 = v17 ^ v16 ^ *(_DWORD *)(*(_QWORD *)(v11 + 8 * (a9 + a4)) + 4 * (v19 ^ v18 ^ v9 ^ 0xFCu) - 4);
  *(_DWORD *)(a1 + 4 * v9) = a8 ^ v12 ^ v15 ^ v14 ^ (v20 + a7 - ((v20 << (((a9 + a2) | a3) + a5)) & a6));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 == 0) * v13) ^ a9)))();
}

uint64_t sub_100B41590()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD588] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != 0) * ((v0 + 15900) ^ v0 ^ 0x3E36)) ^ v0)) - 12))();
}

uint64_t sub_100B415EC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 1031)) - 12))(a1, 10770, 4294956769, 2095243742, 742070196, 1106594857, 1107123272, 133);
}

uint64_t sub_100B41788@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v19 = (v9 ^ v16) & a8;
  v20 = (v9 ^ v16) & v14;
  *(_DWORD *)(a1 + 4 * v9) = v15 ^ v17 ^ v18 ^ ((((v12 + v19 + (v20 ^ a6) + 3155) << (a9 ^ a2)) & 0xF0 ^ 0x40)
                                                                 + ((v12 + v19 + (v20 ^ a6) + 3155) ^ a4)) ^ a5 ^ *(_DWORD *)(*(_QWORD *)(v11 + 8 * (a9 + a3)) + 4 * ((v12 + v19 + (v20 ^ a6) + 3155) ^ a7) - 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 != 0) * v13) ^ a9)) - 12))();
}

uint64_t sub_100B41814@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x67B0]) = v1;
  v2 = a1 ^ 0x7F9;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD578] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v2 - 749727220) & 0x2CAFD07F) + 3275) ^ 0x1EEB) * (v3 == 0)) ^ v2))
                            - 12))();
}

uint64_t sub_100B41888()
{
  unsigned int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B41910(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;

  v4 = (((v1 ^ LOBYTE(STACK[0x6A50]))
                        - (((v1 ^ LODWORD(STACK[0x6A50])) << (((v3 + 53) & 0xDD) - 83)) & 0x70)
                        - 72) ^ LODWORD(STACK[0x68D0]));
  *(_DWORD *)(a1 + 4 * v1) = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x210]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6860]) ^ (-441829731 - v4) ^ *((_DWORD *)*(&off_1015B46D0 + (v3 ^ 0x14D3)) + (v4 ^ 0x25u) - 3);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8982 * (v2 == 0)) ^ v3)))();
}

uint64_t sub_100B41A00@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;

  v1 = 2 * LODWORD(STACK[0x68C0]);
  v2 = STACK[0x6780];
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6780]) - ((((a1 + 7085) | 0x41C) - 1074959283) & v1) + 103894926;
  LODWORD(STACK[0x6780]) = v2 - (v1 & 0x949C8F74) + 1888011027;
  v3 = STACK[0x69F0];
  v4 = (-2 - ((~((v3 ^ 0x55828B35) & 0x72A6D695) | 0xB4A7FA1) + ((v3 ^ 0x55828B35) & 0x2025681 | 0xF4B5805E))) ^ (v3 ^ 0x55828B35) & 0xF2A6D695;
  LODWORD(STACK[0x6760]) = (((v4 ^ 0x2776D2CB) + 1338943881) ^ ((v4 ^ 0xAD5D3E99) - 974830117) ^ ((v4 ^ 0x816193F3)
                                                                                                - 371595087))
                         + 1162256175;
  v5 = STACK[0x6AB0];
  LODWORD(STACK[0x6750]) = (v3 & 0x7FFFFFFF) - (STACK[0x6AB0] & 0xB23425E0) - 652602640;
  v6 = v5 & 0x3E85EC88;
  v7 = STACK[0x69E0];
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x69E0]) - v6 + 2117954736;
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6790]) - ((2 * LODWORD(STACK[0x6840])) & 0x84E5FBC4) + 2107844438;
  LODWORD(STACK[0x6730]) = v7 - 506010499 - 2 * (v3 & 0x2DC7CF7 ^ v7 & 1) + 3813;
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6A70]) - 122869035;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12))();
}

uint64_t sub_100B41C78()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  unsigned int v11;
  char v12;
  int v13;
  unsigned int v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned __int8 v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  _DWORD *v47;
  uint64_t v48;
  _DWORD *v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  _DWORD *v53;
  uint64_t v54;
  _DWORD *v55;
  unint64_t v56;
  unint64_t v57;
  unsigned int v58;
  int v59;
  char *v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  BOOL v74;
  uint64_t v75;
  _DWORD *v76;
  uint64_t v77;
  _DWORD *v78;
  unsigned int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  int v84;
  uint64_t v85;
  char *v86;
  _DWORD *v87;
  unsigned int v88;
  uint64_t v89;
  char *v90;
  unsigned int v91;
  unsigned int v92;
  unsigned __int8 v93;
  unsigned int v94;
  int v95;
  unint64_t v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  __int16 v102;
  int v103;
  unsigned __int16 v104;
  __int16 v105;
  char v106;
  char v107;
  char v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  __int16 v123;
  int v124;
  char *v125;
  int v126;
  uint64_t v127;
  _DWORD *v128;
  uint64_t v129;
  _DWORD *v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  _DWORD *v137;
  _DWORD *v138;
  unint64_t v139;
  int v140;
  uint64_t v141;
  char *v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  unsigned int v172;
  unint64_t v173;
  unsigned int v174;
  int v175;
  unint64_t v176;
  _DWORD *v177;
  unsigned int v178;
  char v179;
  unsigned int v180;
  _DWORD *v181;
  _DWORD *v182;
  unint64_t v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  unint64_t v197;
  unint64_t v198;
  BOOL v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  char v216;
  char v217;
  unint64_t v218;
  uint64_t v219;
  _DWORD *v220;
  uint64_t v221;
  _DWORD *v222;
  uint64_t v223;
  _DWORD *v224;
  unint64_t v225;
  unint64_t v226;
  int v227;
  char *v228;
  char *v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  unsigned int v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  int v254;
  int v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  int v260;
  unsigned int v261;
  uint64_t v262;
  _DWORD *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  _DWORD *v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int v282;
  unint64_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  _DWORD *v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  _DWORD *v292;
  unsigned int v293;
  uint64_t v294;
  int v295;
  unsigned int v296;
  unint64_t v297;
  int v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  unsigned int v303;
  _DWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  _DWORD *v311;
  int v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  int v316;
  uint64_t v317;
  unint64_t v318;
  unint64_t v319;
  unint64_t v320;
  int v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  int *v325;
  int v326;
  unint64_t v327;
  unint64_t v328;
  _DWORD *v329;
  unint64_t v330;
  int v331;
  unint64_t v332;
  _DWORD *v333;
  _DWORD *v334;
  char *v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  unsigned int v342;
  unint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unsigned int v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  unsigned int v351;
  uint64_t v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  char v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  char *v364;
  uint64_t v365;
  char *v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  int v373;
  int v374;
  unint64_t v375;
  int v376;
  int v377;
  int v378;
  unint64_t v379;
  int v380;
  unsigned int v381;
  uint64_t v382;
  _DWORD *v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unint64_t v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  uint64_t v433;
  unsigned int v434;
  int v435;
  int *v436;
  unint64_t v437;
  unint64_t v438;
  unint64_t v439;
  unint64_t v440;
  uint64_t v441;
  _DWORD *v442;
  unsigned int v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t v446;
  int v447;
  int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  int v459;
  int v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  char *v466;
  int v467;
  unint64_t v468;
  int v469;
  char *v470;
  unint64_t v471;
  unsigned int v472;
  unsigned int v473;
  char *v474;
  unsigned int v475;
  unsigned int v476;
  unint64_t v477;
  unint64_t v478;
  char *v479;
  unint64_t v480;
  unsigned int v481;
  unsigned int v482;
  uint64_t v483;
  int v484;
  unsigned int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;

  LODWORD(STACK[0x6AB0]) = v1;
  v3 = (2 * v1) ^ 0x684Cu;
  STACK[0x67A0] = v3;
  v4 = v0;
  v5 = ((2 * (v0 & ((_DWORD)v3 - 4218) ^ 0x68701014)) | 0xDDB79882)
     - (v0 & ((_DWORD)v3 - 4218) ^ 0x68701014)
     + 287585215;
  LODWORD(STACK[0x6800]) = v1 - 8137;
  LODWORD(v3) = ((v0 & ((v1 - 8137) ^ 0xFFFFE3A6) ^ 0x65C89742)
               + 1211727185
               - ((2 * (v0 & ((v1 - 8137) ^ 0xFFFFE3A6) ^ 0x65C89742)) & 0x9072FAA0)) ^ 0x41793D41;
  v6 = (STACK[0x214] & (2 * v3)) - v3 + 911065841;
  STACK[0x6A90] = v6 ^ 0x4B3BBE0C;
  v7 = *(_BYTE *)(v2 + (v6 ^ 0x4B3BBE0C));
  STACK[0x6A30] = v5 ^ 0x975577FELL;
  v8 = STACK[0x6980];
  LODWORD(v6) = *(unsigned __int8 *)(STACK[0x6980] + ((v7 + 69 * (v6 ^ 0xC) - 112) ^ 0x6CLL));
  v9 = STACK[0x6950];
  LODWORD(v5) = *(unsigned __int8 *)(STACK[0x6950]
                                   + ((*(_BYTE *)(v2 + (v5 ^ 0x975577FELL)) + 69 * (v5 ^ 0xFE) - 112) ^ 0xEALL));
  LODWORD(STACK[0x6A80]) = v0 & 0xFFFFFFF8;
  v10 = *(_BYTE *)(v2 + (v0 & 0xFFFFFFF8 ^ 0x11FEABAF)) + 69 * (v0 & 0xF8 ^ 0xAF) - 112;
  LODWORD(STACK[0x6A50]) = v0 & 0xFFFFFFF3;
  v11 = (v4 & 0xFFFFFFF3 ^ 0xCDA291A0) + (v4 & 0xC1C32673 ^ 0x412653) - ((v4 & 0xFFFFFFF3 ^ 0xCDA291A0) & 0xC1C32673);
  v12 = *(_BYTE *)(v2 + (v11 ^ LODWORD(STACK[0x218]))) + 69 * (v11 ^ 0x7C);
  v13 = *(unsigned __int8 *)(v9 + (v10 ^ 0x13));
  LODWORD(STACK[0x6AA0]) = v4 & 0xFFFFFFF7;
  v14 = ((v4 & 0xFFFFFFF7 ^ 0xD0830771) + (v4 & 0x9C168BC0 ^ 0xC148888) - ((v4 & 0xFFFFFFF7 ^ 0xD0830771) & 0x9C168BC0)) ^ 0xBA9488EC;
  v15 = STACK[0x6970];
  v16 = ((v6 ^ 0xA7 ^ (~(_DWORD)v6 >> 4) & 0xB) << 16) | (*(unsigned __int8 *)(STACK[0x6970] + ((v12 - 112) ^ 0xBELL)) << 24);
  v17 = ((2 * (v4 & 0xFFFFFFF9 ^ 0xDE68EE18)) & 0x3C856F20) - (v4 & 0xFFFFFFF9 ^ 0xDE68EE18) - 507688849;
  v18 = (*(_BYTE *)(v2
                                   + (((v14 | 0x9D6CBBEF) - (v14 | 0x62934410) + 1653818384) ^ LODWORD(STACK[0x21C])))
                        + 69 * (((v14 | 0xEF) - (v14 | 0x10) + 16) ^ 0x11)
                        - 112) ^ 0xF4;
  STACK[0x6A10] = v17 ^ 0x2E2B0DD8;
  v19 = STACK[0xD5B0];
  STACK[0x6910] = STACK[0xD5B0];
  v20 = (*(_BYTE *)(v19 + (v17 ^ 0x2E2B0DD8))
                        + 69 * ((((2 * (v4 & 0xF9 ^ 0x18)) & 0x20) - (v4 & 0xF9 ^ 0x18) + 111) ^ 0xD8)
                        - 112) ^ 0xB8;
  LODWORD(v17) = *(unsigned __int8 *)(v15 + v18) ^ 0x27;
  LODWORD(STACK[0x6900]) = v4 & 0xFFFFFFF4;
  v21 = STACK[0x6960];
  LODWORD(v20) = v13 | ((*(unsigned __int8 *)(STACK[0x6960] + v20) ^ 0xDF) << 8);
  v22 = *(unsigned __int8 *)(v9
                           + ((*(_BYTE *)(v19
                                                         + ((((2 * (v4 & 0xFFFFFFF4 ^ 0xD25B3C40)) | 0xD0CA40AE)
                                                           - (v4 & 0xFFFFFFF4 ^ 0xD25B3C40)
                                                           + 396025769) ^ 0x2BC0B7BCLL))
                                              + 69
                                              * ((((2 * (v4 & 0xF4 ^ 0x40)) | 0xAE) - (v4 & 0xF4 ^ 0x40) - 87) ^ 0xBC)
                                              - 112) ^ 0xC6));
  LODWORD(STACK[0x69C0]) = v4 & 0xFFFFFFF1;
  LODWORD(v17) = v22 | ((_DWORD)v17 << 24);
  v23 = *(unsigned __int8 *)(v19 + (v4 & 0xFFFFFFF1 ^ 0x11FEABAF));
  LODWORD(STACK[0x68D0]) = v4 & 0xFFFFFFF0;
  v24 = v23 + 69 * (v4 & 0xFFFFFFF1 ^ 0xFFFFFFAF) - 112;
  STACK[0x6890] = v24;
  LODWORD(v24) = *(unsigned __int8 *)(v21 + (v24 ^ 0xC6)) ^ 0x7E;
  v25 = *(unsigned __int8 *)(v9
                           + ((*(_BYTE *)(v19
                                                         + (((v4 & 0xFFFFFFF0 ^ 0xEA5120E0)
                                                           + (v4 & 0x3C84FA70 ^ 0x1484DA1E)
                                                           - ((v4 & 0xFFFFFFF0 ^ 0xEA5120E0) & 0x3C84FA70)) ^ 0xC72B7131))
                                              + 69
                                              * (((v4 & 0xF0 ^ 0xE0) + (v4 & 0x70 ^ 0x1E) - ((v4 & 0xF0 ^ 0xE0) & 0x70)) ^ 0x31)
                                              - 112) ^ 0xF7));
  LODWORD(STACK[0x6930]) = v4 & 0xFFFFFFFD;
  LODWORD(v18) = (((2 * (v4 & 0xFFFFFFFD ^ 0x32E755C9)) | 0xD6CECF40) - (v4 & 0xFFFFFFFD ^ 0x32E755C9) - 1801938848) ^ 0xFBE366AC;
  v26 = (_DWORD)v18 + 499293713 - ((2 * (_DWORD)v18) & 0x3B853C22u);
  HIDWORD(v27) = *(unsigned __int8 *)(v19 + (v26 ^ 0xAE5F617FLL)) + 69 * (v26 ^ 0x7F);
  LODWORD(v27) = (HIDWORD(v27) << 24) - 1879048192;
  v28 = v16 | ((_DWORD)v24 << 8) | v25;
  v29 = v4 ^ 0x11FEABABu;
  STACK[0x68A0] = v29;
  LODWORD(STACK[0x6940]) = v4 & 0xFFFFFFF5;
  v30 = (-674532788 - (v4 & 0xFFFFFFF5 ^ 0x6D1FEB74 | 0xD7CB724C) + (v4 & 0xFFFFFFF5 ^ 0x6D1FEB74 | 0x28348DB3)) ^ 0xAB2CAF91;
  v31 = (v30 | 0xAFD4F97B) - (v30 | 0x502B0684) + 1344996996;
  LODWORD(v5) = v5 | ((*(unsigned __int8 *)(v21
                                          + (((((v27 >> 26) ^ 0x72) >> 6) | (4 * ((v27 >> 26) ^ 0x72))) ^ 0x5DLL)) ^ 0x21) << 8);
  v32 = (*(_BYTE *)(v19 + (v31 ^ 0x502D9B86)) + 69 * (v31 ^ 0x86) - 112) ^ 0xE4;
  LODWORD(v31) = *(unsigned __int8 *)(v15
                                    + ((*(_BYTE *)(v19 + v29)
                                                       + 69
                                                       * (((v4 ^ 0xD5) + 96) ^ ((v4 ^ 0xF7) + 126) ^ ((v4 ^ 0x89) + 4))
                                                       + 102) ^ 0xD4)) ^ 0x64;
  v33 = v4 & 0xFFFFFFFE ^ 0x11FEABAB;
  STACK[0x68B0] = v33;
  LODWORD(v29) = v5 | ((_DWORD)v31 << 24);
  LODWORD(v5) = *(unsigned __int8 *)(v8
                                   + ((*(_BYTE *)(v19 + v33) + 69 * (v4 & 0xFE ^ 0xAB) - 112) ^ 0xE7));
  LODWORD(v32) = v17 | ((*(unsigned __int8 *)(v21 + v32) ^ 0xA8) << 8);
  LODWORD(v29) = v29 & 0xFF00FFFF | ((((~(_DWORD)v5 >> 4) & 0xB)
                                                     + (v5 ^ 0x27)
                                                     - 2 * ((~(_DWORD)v5 >> 4) & 0xB & (v5 ^ 0x27))) << 16);
  LODWORD(v5) = ((v4 & 0x868894F3 ^ 0x2801037) + (v4 & 0x79776B08 ^ 0x30570B01) - 1) ^ 0xCC960FF7;
  v34 = v5 - ((2 * (_DWORD)v5) & 0x13CA5154) + 166013098;
  LODWORD(v33) = v4 & STACK[0x228] ^ 0x1000001;
  LODWORD(STACK[0x69E0]) = v4;
  LODWORD(v33) = (v33 + (v4 & 0x7CFDEE72 ^ LODWORD(STACK[0x224])) - 2) ^ 0x8342308C;
  STACK[0x68C0] = v34 ^ 0xE65A97C5;
  LOBYTE(v34) = *(_BYTE *)(v19 + (v34 ^ 0xE65A97C5)) + 69 * (v34 ^ 0xC5);
  LODWORD(v33) = v33 - ((2 * v33) & 0x52F98D68) - 1451440460;
  v35 = v33 ^ LODWORD(STACK[0x220]);
  STACK[0x69B0] = v35;
  LODWORD(v17) = (v4 & 0xFFFFFFFA ^ 0x354EC9F0) - ((2 * (v4 & 0xFFFFFFFA ^ 0x354EC9F0)) & 0xD3E36A94);
  LODWORD(v26) = *(unsigned __int8 *)(v8 + ((*(_BYTE *)(v19 + v35) + 69 * (v33 ^ 0x81) - 112) ^ 0xCBLL));
  v36 = v20 | ((*(unsigned __int8 *)(v15 + ((v34 - 112) ^ 0x5ELL)) ^ 0xD1) << 24);
  STACK[0x6920] = ((_DWORD)v17 - 370035377) & 0xFFFFFFFE ^ 0xCD41D711;
  LODWORD(v32) = v32 & 0xFF00FFFF | ((v26 ^ 0x4A ^ (~(_DWORD)v26 >> 4) & 0xB) << 16);
  LODWORD(v34) = v32 - ((2 * v32) & 0x949C8F74);
  v37 = *(_BYTE *)(v19 + (((_DWORD)v17 - 370035377) & 0xFFFFFFFE ^ 0xCD41D711))
      + 69 * ((v17 + 79) & 0xFE ^ 0x11)
      - 112;
  LODWORD(v20) = *(unsigned __int8 *)(v8 + (v37 ^ 0xC9)) ^ 0xFFFFFFF6;
  v38 = v36 & 0xFF00FFFF | ((((v20 >> 4) & 0xB ^ v20 ^ -((v20 >> 4) & 0xB ^ v20) ^ (((v20 >> 4) & 0xB ^ v20 ^ 0xDD) + 35))
                                            + 34) << 16);
  LODWORD(v35) = STACK[0x67B0];
  LODWORD(STACK[0x67E0]) = v29;
  LODWORD(v17) = v29 ^ v35 ^ 0x521F0EB0;
  LODWORD(STACK[0x67F0]) = v28;
  LODWORD(v29) = v35 ^ 0x6CF8BADE ^ v28;
  v39 = STACK[0xD5C8];
  v40 = STACK[0xD578];
  v41 = STACK[0xD578];
  LODWORD(v19) = *(_DWORD *)(STACK[0xD578] + 4 * BYTE2(v29)) ^ *(_DWORD *)(STACK[0xD5C8] + 4 * BYTE3(v17));
  LODWORD(v26) = v34 + 1246644154;
  LODWORD(v33) = STACK[0x6990];
  LODWORD(v34) = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6780]) ^ 0x76E4C48B;
  LODWORD(STACK[0x67C0]) = v26;
  LODWORD(v34) = v34 ^ v26;
  LODWORD(v26) = LODWORD(STACK[0x6880]) ^ v33 ^ LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x67D0]) = v38;
  v42 = v26 ^ v38;
  LODWORD(v19) = v19 ^ *(_DWORD *)(STACK[0xD590] + 4 * BYTE1(v34)) ^ *(_DWORD *)(STACK[0xD5A8]
                                                                                 + 4 * v42);
  v43 = STACK[0xD590];
  v44 = *(_DWORD *)(v39 + 4 * HIBYTE(v42)) ^ *(_DWORD *)(v40 + 4 * BYTE2(v17)) ^ *(_DWORD *)(STACK[0xD5A8]
                                                                                               + 4
                                                                                               * v34) ^ *(_DWORD *)(STACK[0xD590] + 4 * BYTE1(v29));
  LODWORD(v33) = *(_DWORD *)(v39 + 4 * BYTE3(v34)) ^ *(_DWORD *)(v40 + 4 * BYTE2(v42)) ^ *(_DWORD *)(STACK[0xD5A8] + 4 * v29) ^ *(_DWORD *)(STACK[0xD590] + 4 * BYTE1(v17));
  v45 = *(_DWORD *)(STACK[0xD5A8] + 4 * v17) ^ *(_DWORD *)(STACK[0xD590] + 4 * BYTE1(v42)) ^ *(_DWORD *)(v40 + 4 * BYTE2(v34)) ^ *(_DWORD *)(v39 + 4 * BYTE3(v29));
  LODWORD(v34) = *(_DWORD *)(v40 + 4 * (BYTE2(v45) ^ 0x63u));
  LODWORD(v29) = *(_DWORD *)(v40 + 4 * (BYTE2(v19) ^ 0x5Du));
  LODWORD(v40) = (v33 ^ 0xA2 | 0x16AEB39B) - (v33 ^ 0xA2 | 0xE9514C64) - 380547996;
  v46 = 4
      * (((v40 & 0x62CB2B5 ^ 0x60240824)
        + (v40 ^ 0x97DAB79B)
        - ((v40 ^ 0x97DAB79B) & 0xE62CBAB5)) ^ 0x6758BEF5);
  v47 = (_DWORD *)(STACK[0xD5A8] + v46);
  LODWORD(v21) = *(_DWORD *)(v39 + 4 * (BYTE3(v19) ^ 0xD5));
  v48 = 4 * (HIBYTE(v44) ^ 0x76);
  v49 = (_DWORD *)(v39 + v48);
  v50 = *(_DWORD *)(STACK[0xD590] + 4 * (BYTE1(v45) ^ 0x83u)) ^ v29 ^ *v49 ^ *v47;
  v51 = v21 ^ *(_DWORD *)(STACK[0xD5A8] + 4 * (v44 ^ 0xB1u)) ^ *(_DWORD *)(STACK[0xD590]
                                                                                            + 4 * (BYTE1(v33) ^ 0x38u)) ^ v34;
  LODWORD(STACK[0x6870]) = v33;
  v52 = 4 * (BYTE3(v33) ^ 0xD9);
  v53 = &v49[(unint64_t)v52 / 4 + v48 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v15) = ((v45 ^ 0xF5) + (v45 & 0xE2 ^ 0x300EA402) - ((v45 ^ 0xF5) & 0xE2)) ^ 0x320F2EC2;
  v54 = 4 * (((_DWORD)v15 - 536892141 - ((2 * (_DWORD)v15) & 0x4031A26)) ^ 0xDDFE2791);
  v55 = (_DWORD *)((char *)v47 + v54 - v46);
  v56 = (unint64_t)&v53[v52 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v53) = *(_DWORD *)(v41 + 4 * (BYTE2(v44) ^ 0x4Au)) ^ *(_DWORD *)(v43 + 4 * (BYTE1(v19) ^ 0x34u)) ^ *v53;
  STACK[0xD5A8] = (unint64_t)v55;
  STACK[0xD5C8] = v56;
  v57 = v43 + 4 * (BYTE1(v44) ^ 0xB6u);
  STACK[0xD590] = v57;
  v58 = v53 ^ *v55;
  v59 = *(_DWORD *)(v56 + 4 * (HIBYTE(v45) ^ 0xA8)) ^ *(_DWORD *)(v41 + 4 * (BYTE2(v33) ^ 0x69u));
  v60 = (char *)v55 - v54;
  LODWORD(v57) = *(_DWORD *)v57;
  LODWORD(v54) = v57 & 4 ^ 0x1400814C ^ ((2 * (v57 & 4 | 0x1420C54A)) ^ 0x20C402) & (v57 & 4 | 0x1420C54A);
  LODWORD(v21) = (4 * (2 * (v57 & 4) - 337691984)) & 0xAB5C2AA0 ^ (2 * (v57 & 4) - 337691984) & 0x40831028 ^ v54 & 8;
  LODWORD(v54) = (4 * v54) & 0x6BDF3AB4 ^ 0x40831026 ^ ((4 * v54) ^ 0x420C048) & v54;
  LODWORD(v21) = (16 * v21) & LODWORD(STACK[0x230]) ^ v21 ^ ((16 * v21) ^ 0x3DF3AB60) & v54;
  LODWORD(v54) = (16 * v54) & 0xEBDF3AB0 ^ 0x420C1096 ^ ((16 * v54) ^ 0x3DF3AB60) & v54;
  LODWORD(v21) = v21 ^ ((_DWORD)v21 << 8) & 0xEBDF3A00 ^ (((_DWORD)v21 << 8) ^ 0xC109600) & v54;
  v61 = v57 & 4 | 0x5CFE46CA;
  LODWORD(v54) = v61 ^ (2
                      * (((v21 ^ 0xA1C33820) << 16) & 0x6BDF0000 ^ v21 ^ 0xA1C33820 ^ (((v21 ^ 0xA1C33820) << 16) ^ 0x3AB60000) & (((_DWORD)v54 << 8) & 0x6BDF0000 ^ 0x20C50000 ^ (((_DWORD)v54 << 8) ^ 0x5F3A0000) & v54)));
  LODWORD(v54) = v54 & 0xF3B9F134 ^ 0x7288A014 ^ (v54 ^ 0x2193CC5A) & (v59 ^ 0xEA924EC);
  LODWORD(v19) = (v19 & 0xE4 ^ 0xE014CAC1) + (v19 & 0x1B) - 1;
  v62 = 4
      * (((v19 & 0x2B2 ^ 0x11620002) + (v19 ^ 0x481862F5) - ((v19 ^ 0x481862F5) & 0x280008B2)) ^ 0x916EA232);
  STACK[0xD5A8] = (unint64_t)&v60[v62];
  LODWORD(v21) = (249349013 - (v50 & 0xDCE87DFB ^ 0x54A86800 | 0xEDCC395) + (v50 & 0xDCE87DFB ^ 0x54A86800 | 0xF1233C6A)) ^ 0xF1233AEA;
  v63 = (((((2 * v21) & 0x54FAF1B0) - v21 - 712866009) ^ 0x3F59FAF8) + 1665256778) ^ (((((2 * v21) & 0x54FAF1B0)
                                                                                      - v21
                                                                                      - 712866009) ^ LODWORD(STACK[0x234]))
                                                                                    + 1827433111) ^ (((((2 * v21) & 0x54FAF1B0) - v21 - 712866009) ^ 0x25F0F52F) + 2045297311);
  LODWORD(v57) = ((v57 & 0xFFFFFFFB ^ LODWORD(STACK[0x238]))
                - ((2 * (v57 & 0xFFFFFFFB ^ LODWORD(STACK[0x238]))) & 0xE75E24F6)
                - 206630277) ^ 0xDDFBD26B;
  v64 = ((2 * v57) & 0xE89DB0F6) - v57;
  LODWORD(STACK[0x68F0]) = LODWORD(STACK[0x6AC0]) < 0x624F185B;
  if ((_DWORD)v54 - ((2 * (_DWORD)v54) & 0xC900087A) != -753311748)
    v61 = -1174631020 - v61;
  v65 = (((v59 ^ 0xE41BCAC0) + 467940672) ^ ((v59 ^ 0x69B2D1C2) - 1773326786) ^ ((v59 ^ 0x70B9CEDB) - 1891225307))
      + 448640129
      + v61;
  v66 = (v65 ^ 0xE146D2AC) & (2 * (v65 & STACK[0x23C])) ^ v65 & STACK[0x23C];
  v67 = ((2 * (v65 ^ 0xE34662A0)) ^ 0xCC25705C) & (v65 ^ 0xE34662A0) ^ (2 * (v65 ^ 0xE34662A0)) & 0x6612B82E;
  v68 = (v67 ^ 0x400300A) & (4 * v66) ^ v66;
  v69 = ((4 * (v67 ^ 0x22128822)) ^ 0x984AE0B8) & (v67 ^ 0x22128822) ^ (4 * (v67 ^ 0x22128822)) & 0x6612B82C;
  v70 = (v69 ^ 0x2A026) & (16 * v68) ^ v68;
  v71 = ((16 * (v69 ^ 0x66101806)) ^ 0x612B82E0) & (v69 ^ 0x66101806) ^ (16 * (v69 ^ 0x66101806)) & 0x6612B820;
  v72 = v70 ^ 0x6612B82E ^ (v71 ^ 0x60028000) & (v70 << 8);
  STACK[0xD590] = v43;
  STACK[0xD5C8] = v56;
  v73 = (v64 - 1951324284) ^ *(_DWORD *)&v60[v62] ^ v65 ^ (2
                                                         * ((v72 << 16) & 0x66120000 ^ v72 ^ ((v72 << 16) ^ 0x382E0000) & (((v71 ^ 0x610380E) << 8) & 0x66120000 ^ 0x64020000 ^ (((v71 ^ 0x610380E) << 8) ^ 0x12B80000) & (v71 ^ 0x610380E))));
  v74 = v37 == 0;
  v75 = 4 * (BYTE1(v58) ^ 0x35u);
  v76 = (_DWORD *)(v43 + v75);
  v77 = 4 * (BYTE1(v73) ^ 3u);
  v78 = &v76[(unint64_t)v77 / 4 + v75 / 0xFFFFFFFFFFFFFFFCLL];
  v79 = (((v50 ^ 0x162786D6) - 371689174) ^ ((v50 ^ 0xB8B30391) + 1196227695) ^ ((v50 ^ 0xA4F63E10) + 1527366128))
      - 2
      * (v63 + (((v50 ^ 0x6932AD3) + 658314100) ^ ((v50 ^ 0x2FD2CA70) + 243069905) ^ ((v50 ^ 0x7FCB260F) + 1583685552)))
      - 2008087049;
  v80 = 4
      * ((((v50 ^ 0xD6) + 42) ^ ((v50 ^ 0x91) + 111) ^ ((v50 ^ 0x10) - 16))
                        - 2 * (v63 + (((v50 ^ 0xD3) + 116) ^ ((v50 ^ 0x70) - 47) ^ ((v50 ^ 0xF) - 80)))
                        - 9);
  v81 = &v60[v80];
  v82 = 4
      * (((v58 ^ 0xB0400005)
        + (v58 & 0xCC ^ 0x491DA2C8)
        - ((v58 ^ 0xB0400005) & 0x200000CC)) ^ 0xD95DA2CD);
  v83 = &v81[v82 - v80];
  LODWORD(v76) = *(_DWORD *)(v56 + 4 * (HIBYTE(v51) ^ 0xF6)) ^ *v76 ^ *(_DWORD *)v81 ^ *(_DWORD *)(v41 + 4 * (BYTE2(v73) ^ 0x5Bu));
  LODWORD(v81) = *(_DWORD *)(v56 + 4 * HIBYTE(v79)) ^ *(_DWORD *)(v41 + 4 * (BYTE2(v51) ^ 0xDFu));
  v84 = *(_DWORD *)(v56 + 4 * (HIBYTE(v58) ^ 0xA5)) ^ *(_DWORD *)(v41 + 4 * BYTE2(v79));
  v85 = 4
      * (((STACK[0x240] & (2 * (v73 ^ 0x80AC40CD))) - (v73 ^ 0x80AC40CD) - 1335841048) ^ 0x30CCEEEA);
  v86 = &v83[v85 - v82];
  v87 = &v78[v77 / 0xFFFFFFFFFFFFFFFCLL];
  v88 = v81 ^ *(_DWORD *)v83 ^ *v78;
  v89 = 4 * (((v51 & 0x8D ^ 0x304) + (v51 & 0x72 ^ 0xC61) - 1) ^ 0xF94);
  v90 = &v86[v89 - v85];
  v91 = ((v76 ^ 0x3B18BB67) - 608936490) ^ ((v76 ^ 0xD0A98794) + 805658919) ^ ((v76 ^ 0xF4E225BE) + 340706061);
  v92 = v84 ^ v87[BYTE1(v51) ^ 0xF5] ^ *(_DWORD *)v86;
  v93 = (BYTE2(v58) ^ 0x41) & 0xA3;
  if (!v74)
    v93 = BYTE2(v58) ^ 0x41;
  v94 = v93 | (HIWORD(v58) ^ 0xA541) & 0x5C;
  v95 = *(_DWORD *)(v56 + 4 * (HIBYTE(v73) ^ 0xC3));
  v96 = STACK[0xD578];
  STACK[0x6860] = STACK[0xD578];
  v97 = v87[BYTE1(v79)] ^ v95 ^ *(_DWORD *)(v96 + 4 * v94) ^ *(_DWORD *)v90;
  v98 = v91 + 1188820776;
  v99 = ((2 * (v98 ^ 0xC548F492)) ^ 0xF8D9F894) & (v98 ^ 0xC548F492) ^ (2 * (v98 ^ 0xC548F492)) & 0x7C6CFC4A;
  v100 = (v91 + 1188820776) & 0xB92408D8;
  v101 = 2 * v100;
  v102 = v99 ^ 0x44A;
  v103 = (v99 ^ 0x6804600A) & (4 * (v101 & (v98 ^ LODWORD(STACK[0x244])) ^ v100)) ^ v101 & (v98 ^ LODWORD(STACK[0x244])) ^ v100;
  v104 = ((4 * v102) ^ 0xF128) & v102 ^ (4 * v102) & 0xFC48;
  v105 = ((16 * (v104 ^ 0xC42)) & 0xFC40 ^ 0xC400 ^ ((16 * (v104 ^ 0xC42)) ^ 0xC400) & (v104 ^ 0xC42)) & (((v104 ^ 0xF000) & (unsigned __int16)(16 * v103) ^ (unsigned __int16)v103) << 8) ^ (v104 ^ 0xF000) & (16 * v103) ^ v103;
  v106 = v91 + 84;
  if (v91 >= 0xA583CDD4)
  {
    v107 = -44;
  }
  else
  {
    v106 = v91 + 40;
    v107 = 0;
  }
  v108 = v106 + v107;
  v109 = ((2 * (v98 ^ 0x2337CB4B)) ^ 0x34278726) & (v98 ^ 0x2337CB4B) ^ (2 * (v98 ^ 0x2337CB4B)) & 0x9A13C392;
  v110 = (v109 ^ 0x2000311) & (4 * (v101 & (v98 ^ 0x3137CADB) ^ v100)) ^ v101 & (v98 ^ 0x3137CADB) ^ v100;
  v111 = ((4 * (v109 ^ 0x8A104091)) ^ 0x684F0E4C) & (v109 ^ 0x8A104091) ^ (4 * (v109 ^ 0x8A104091)) & 0x9A13C390;
  v112 = (v111 ^ 0x8030213) & (16 * v110) ^ v110;
  v113 = ((16 * (v111 ^ 0x9210C193)) ^ 0xA13C3930) & (v111 ^ 0x9210C193) ^ (16 * (v111 ^ 0x9210C193)) & 0x9A13C390;
  v114 = v112 ^ 0x9A13C393 ^ (v113 ^ 0x80100183) & (v112 << 8);
  v115 = v101 & (v98 ^ 0xBD0102DD) ^ v100;
  v116 = (2 * (v98 ^ 0x8D4112CD)) & 0x34651A14 ^ 0x14250A15 ^ ((2 * (v98 ^ 0x8D4112CD)) ^ 0x68CA342A) & (v98 ^ 0x8D4112CD);
  v117 = (4 * v115) & v116 ^ v115 ^ ((4 * v115) & 0x24200200 | 0x10040814);
  v118 = (4 * v116) & 0x34651A14 ^ 0x24611201 ^ ((4 * v116) ^ 0xD1946854) & v116;
  v119 = (16 * v117) & 0x34651A00 ^ v117 ^ ((16 * v117) ^ 0x408140) & v118;
  v120 = (16 * v118) & 0x34651A10 ^ 0x30241A05 ^ ((16 * v118) ^ 0x4651A150) & v118;
  v121 = v119 ^ 0x20210201 ^ (v119 << 8) & 0x34651A00 ^ ((v119 << 8) ^ 0x44081400) & v120;
  v122 = (v121 << 16) & 0x34000000 ^ v121 ^ ((v121 << 16) ^ 0x1A000000) & ((v120 << 8) & 0x34650000 ^ ((v120 << 8) ^ 0x651A0000) & v120 ^ 0x10000000);
  v123 = v98 ^ (2 * v105);
  v124 = v98 ^ (2
              * ((v114 << 16) & 0x1A130000 ^ v114 ^ ((v114 << 16) ^ 0x43930000) & (((v113 ^ 0x1A03C283) << 8) & 0x1A130000 ^ 0x8100000 ^ (((v113 ^ 0x1A03C283) << 8) ^ 0x13C30000) & (v113 ^ 0x1A03C283))));
  v125 = &v90[-v89];
  v126 = (-133559394 - (BYTE1(v92) ^ 0xAF) + ((2 * (BYTE1(v92) ^ 0xAF)) | 0xFEBD30A) + 2781) ^ LODWORD(STACK[0x248]);
  v127 = 4 * (((v98 ^ (2 * v122)) >> 24) ^ 0xF1);
  v128 = (_DWORD *)(v56 + v127);
  v129 = 4 * (HIBYTE(v88) ^ 0x55);
  v130 = (_DWORD *)((char *)v128 + v129 - v127);
  v131 = *(_DWORD *)&v125[4 * (((v88 & 0xF1 ^ 0x311) + (v88 & 0xE ^ 0xB) - 1) ^ 0x3EF)];
  LODWORD(v127) = *(_DWORD *)(v96 + 4 * (BYTE2(v97) ^ 0x4Bu)) ^ v87[(-1542670478
                                                                     - (v126 | 0xA40CB772)
                                                                     + (v126 | 0x5BF3488D)) ^ 0x7DD34895] ^ v131 ^ *v128;
  LODWORD(v128) = (-1265057199
                 - (v127 & 0x1983BCA4 ^ 0x19010C80 | 0xB498C251)
                 + (v127 & 0x1983BCA4 ^ 0x19010C80 | 0x4B673DAE)) ^ 0x5E34A8A4;
  v132 = ((v97 & 0x70 ^ 0x3046D431) + (v97 & 0x8F) - 1) ^ 0x32417181;
  v133 = ((117296375 - (_DWORD)v128 + ((2 * (_DWORD)v128) & 0x72046610)) ^ 0x8346BAA3) & (v127 & 0xE67C435B ^ 0xFD9FFCAC);
  v134 = *(_DWORD *)(v96 + 4 * (BYTE2(v124) ^ 0x25u));
  v135 = *(_DWORD *)(v96 + 4 * (BYTE2(v88) ^ 0xC8u));
  v136 = 4 * (BYTE1(v97) ^ 0x8Eu);
  v137 = &v87[(unint64_t)v136 / 4];
  v138 = &v137[(HIBYTE(v123) ^ 8u) + v136 / 0xFFFFFFFFFFFFFFFCLL];
  v139 = (unint64_t)v130 - v129;
  v140 = *(_DWORD *)((char *)&v130[HIBYTE(v92) ^ 6] - v129) ^ v135;
  LODWORD(v129) = *v130 ^ v134;
  v141 = 4 * v92;
  v142 = &v125[v141];
  v143 = v129 ^ *v137 ^ *(_DWORD *)v142;
  LODWORD(v130) = (((v140 ^ 0xCAB33EA8) + 894222680) ^ ((v140 ^ 0xBDFB5451) + 1107602351) ^ ((v140 ^ 0x8A58BF20)
                                                                                           + 1973895392))
                - (((v140 ^ *v138 ^ 0x336AF0A9) - 862646441) ^ ((v140 ^ *v138 ^ 0xFCCEFB20) + 53544160) ^ ((v140 ^ *v138 ^ 0xF5509CFA) + 179266310))
                - 677361223;
  v144 = (v130 ^ 0xE373E2AD) & (2 * (v130 & 0xEA7BF4AD)) ^ v130 & 0xEA7BF4AD;
  v145 = ((2 * (v130 ^ 0x6366CBB5)) ^ 0x123A7E30) & (v130 ^ 0x6366CBB5) ^ (2 * (v130 ^ 0x6366CBB5)) & 0x891D3F18;
  v146 = (v145 ^ 0x183610) & (4 * v144) ^ v144;
  v147 = ((4 * (v145 ^ 0x89050108)) ^ 0x2474FC60) & (v145 ^ 0x89050108) ^ (4 * (v145 ^ 0x89050108)) & 0x891D3F18;
  v148 = (v147 ^ 0x143C08) & (16 * v146) ^ v146;
  v149 = ((16 * (v147 ^ 0x89090318)) ^ 0x91D3F180) & (v147 ^ 0x89090318) ^ (16 * (v147 ^ 0x89090318)) & 0x891D3F10;
  v150 = v148 ^ 0x891D3F18 ^ (v149 ^ 0x81113100) & (v148 << 8);
  v151 = 1388254570
       - (((*v138 ^ 0xCED6400F) + 824819697) ^ ((*v138 ^ 0x8AD9B980) + 1965442688) ^ ((*v138 ^ 0x83EBBB25) + 2081703131));
  v152 = (v151 ^ 0xE15A37ED) & (2 * (v151 & 0xE55CA7EC)) ^ v151 & 0xE55CA7EC;
  v153 = ((2 * (v151 ^ 0xAB5A70B5)) ^ 0x9C0DAEB2) & (v151 ^ 0xAB5A70B5) ^ (2 * (v151 ^ 0xAB5A70B5)) & 0x4E06D758;
  v154 = (v153 ^ 0x4C04C619) & (4 * v152) ^ v152;
  v155 = ((4 * (v153 ^ 0x42025149)) ^ 0x381B5D64) & (v153 ^ 0x42025149) ^ (4 * (v153 ^ 0x42025149)) & 0x4E06D758;
  v156 = (v155 ^ 0x8025559) & (16 * v154) ^ v154;
  v157 = ((16 * (v155 ^ 0x46048219)) ^ LODWORD(STACK[0x24C])) & (v155 ^ 0x46048219) ^ (16 * (v155 ^ 0x46048219)) & 0x4E06D750;
  v158 = v156 ^ 0x4E06D759 ^ (v157 ^ LODWORD(STACK[0x250])) & (v156 << 8);
  v159 = v151 ^ *v138 ^ v130 ^ (2
                                            * ((v158 << 16) & 0x4E060000 ^ v158 ^ ((v158 << 16) ^ 0x57590000) & (((v157 ^ 0xE028249) << 8) & 0x4E060000 ^ 0x48000000 ^ (((v157 ^ 0xE028249) << 8) ^ 0x6D70000) & (v157 ^ 0xE028249)) ^ v150 ^ (v150 << 16) & 0x91D0000 ^ ((v150 << 16) ^ 0x3F180000) & ((((v149 ^ 0x80C0E18) << 8) ^ 0x1D3F0000) & (v149 ^ 0x80C0E18) ^ ((v149 ^ 0x80C0E18) << 8) & 0x91D0000)));
  v160 = (BYTE2(v92) ^ 0x108307E) + (HIWORD(v92) & 0x31 ^ 0x6AC7C401) - ((BYTE2(v92) ^ 0x108307E) & 0x3031);
  v161 = (((v140 ^ 0x460733E1) - 1174877153) ^ ((v140 ^ 0x43C9FC8C) - 1137310860) ^ ((v140 ^ LODWORD(STACK[0x254]))
                                                                                   + 119661900))
       + 1954214753
       + (((v159 ^ 0x2D8AABEB) + 1826779634) ^ ((v159 ^ 0x185A5419) + 1496485380) ^ ((v159 ^ 0xED143E9B) - 1401101182))
       + 814;
  v162 = (v161 ^ 0xEECDD385) & (2 * (v161 & 0xEEE9C3D6)) ^ v161 & 0xEEE9C3D6;
  v163 = ((2 * (v161 ^ 0x7F1ED021)) ^ 0x23EE27EE) & (v161 ^ 0x7F1ED021) ^ (2 * (v161 ^ 0x7F1ED021)) & 0x91F713F6;
  v164 = (v163 ^ 0x1F603E0) & (4 * v162) ^ v162;
  v165 = ((4 * (v163 ^ 0x90111011)) ^ 0x47DC4FDC) & (v163 ^ 0x90111011) ^ (4 * (v163 ^ 0x90111011)) & 0x91F713F4;
  v166 = (v165 ^ 0x1D403C3) & (16 * v164) ^ v164;
  v167 = ((16 * (v165 ^ 0x90231023)) ^ 0x1F713F70) & (v165 ^ 0x90231023) ^ (16 * (v165 ^ 0x90231023)) & 0x91F713F0;
  v168 = v166 ^ 0x91F713F7 ^ (v167 ^ 0x11711300) & (v166 << 8);
  v169 = 4 * ((v132 - ((2 * v132) & 0x40502F6) - 2096463493) ^ 0x810D247B);
  v170 = (unint64_t)&v142[v169];
  v171 = &v142[v169 - v141];
  v172 = v161 ^ *(_DWORD *)v171 ^ (2
                                 * ((v168 << 16) & 0x11F70000 ^ v168 ^ ((v168 << 16) ^ 0x13F70000) & (((v167 ^ 0x80860087) << 8) & 0x91F70000 ^ 0xE40000 ^ (((v167 ^ 0x80860087) << 8) ^ 0x77130000) & (v167 ^ 0x80860087))));
  v173 = (unint64_t)&v171[-v169];
  v174 = v127 & 0x66140001 ^ LODWORD(STACK[0x258]) ^ v133;
  LODWORD(v171) = ((((v172 ^ 0x74ED9F96) - 1082170516) ^ ((v172 ^ 0xE59B9131) + 772369869) ^ ((v172 ^ 0x1C97064F)
                                                                                            - 687473997))
                 - 1393301042)
                % 0xC98221C;
  v175 = (_DWORD)v171 - 1182004246 - ((2 * (_DWORD)v171) & 0x131817D4);
  v176 = STACK[0x6860];
  v177 = &v137[v136 / 0xFFFFFFFFFFFFFFFCLL];
  v178 = v137[v136 / 0xFFFFFFFFFFFFFFFCLL + (BYTE1(v88) ^ 0x77u)] ^ *(_DWORD *)(STACK[0x6860]
                                                                              + 4 * (v160 ^ 0x6BCFC419u)) ^ *(_DWORD *)(v173 + 4 * (v108 - 40)) ^ *(_DWORD *)(v139 + 4 * (HIBYTE(v97) ^ 0xD4));
  if ((((v172 ^ 0x44CE4475) - 1889748855) ^ ((v172 ^ 0xCAC1E1A7) + 22224219) ^ ((v172 ^ LODWORD(STACK[0x25C]))
                                                                               - 931376696))
     - 1393301042 >= 0xF367DDE4)
    v175 = v172 ^ 0x346D0302;
  v179 = ((-60 - (v131 | 0xF7)) & 8) + ((-60 - (v131 | 0xF7)) ^ 0x8C) - (((-60 - (v131 | 0xF7)) ^ 0x8C) & 0x48) + 50;
  v180 = (v172 ^ 0x8DE108E8) % 0xC98221C;
  v181 = &v177[((v178 ^ 0xD87F82E6) >> ((v179 ^ 0x13) & 0xE8 ^ 0x28) >> ((v179 ^ 0x13) & 0x17) >> ((v179 ^ 3) & 7) >> ((v179 ^ 0x10) & 0x18))];
  v182 = &v177[BYTE1(v174)];
  v183 = (unint64_t)&v137[v136 / 0xFFFFFFFFFFFFFFFCLL];
  v184 = *(_DWORD *)(v176 + 4 * (BYTE2(v172) ^ 0xE1u)) ^ *(_DWORD *)(v173 + 4 * v174) ^ *(_DWORD *)(v139 + 4 * (HIBYTE(v178) ^ 0xD8)) ^ v177[BYTE1(v143) ^ 0xD5];
  v185 = 0x234B598AALL
       * (((v184 ^ 0x37151F7940CA8B5BLL) - 0x37151F79EAD2F973) ^ ((v184 ^ 0x413BD50774B19A57) - 0x413BD507DEA9E87FLL) ^ ((v184 ^ 0x762ECA7EBF9A531ELL) - 0x762ECA7E15822136))
       + 0x282DB99836A2A078;
  v186 = (v185 ^ 0x129A5CD10C7BD5EALL) & (2 * (v185 & 0x22C35E192E7BD60CLL)) ^ v185 & 0x22C35E192E7BD60CLL;
  v187 = ((2 * (v185 ^ 0x529870E1100A71EALL)) ^ 0xE0B65DF07CE34FCCLL) & (v185 ^ 0x529870E1100A71EALL) ^ (2 * (v185 ^ 0x529870E1100A71EALL)) & 0x705B2EF83E71A7E4;
  v188 = (v187 ^ 0x1208E038610040) & (4 * v186) ^ v186;
  v189 = ((4 * (v187 ^ 0x104922080210A022)) ^ 0xC16CBBE0F9C69F98) & (v187 ^ 0x104922080210A022) ^ (4 * (v187 ^ 0x104922080210A022)) & 0x705B2EF83E71A7E4;
  v190 = (v189 ^ 0x40482AE038408780) & (16 * v188) ^ v188;
  v191 = ((16 * (v189 ^ 0x3013041806312066)) ^ 0x5B2EF83E71A7E60) & (v189 ^ 0x3013041806312066) ^ (16 * (v189 ^ 0x3013041806312066)) & 0x705B2EF83E71A7E0;
  v192 = (v191 ^ 0x122E8026102600) & (v190 << 8) ^ v190;
  v193 = (((v191 ^ 0x7049007818618186) << 8) ^ 0x5B2EF83E71A7E600) & (v191 ^ 0x7049007818618186) ^ ((v191 ^ 0x7049007818618186) << 8) & 0x705B2EF83E71A700;
  v194 = v192 ^ 0x705B2EF83E71A7E6 ^ (v193 ^ 0x500A283830210000) & (v192 << 16);
  v195 = v185 ^ (2
               * ((v194 << 32) & 0x705B2EF800000000 ^ v194 ^ ((v194 << 32) ^ 0x3E71A7E600000000) & (((v193 ^ 0x205106C00E5001E6) << 16) & 0x705B2EF800000000 ^ 0x5003008800000000 ^ (((v193 ^ 0x205106C00E5001E6) << 16) ^ 0x2EF83E7100000000) & (v193 ^ 0x205106C00E5001E6))));
  if (v175 != -1182004246)
    LOBYTE(v180) = 0;
  v196 = (__CFADD__(v195 ^ 0x8D15499FCC07DB15, 0xD33435CBB5667B88) - 1) ^ (__CFADD__(v195 ^ 0x94F344C3FFD0686FLL, 0xCAD2389786B1C8FELL)- 1);
  v197 = ((v195 ^ 0x8D15499FCC07DB15) - 0x2CCBCA344A998478) ^ ((v195 ^ 0x94F344C3FFD0686FLL) - 0x352DC768794E3702);
  v198 = v195 ^ 0xBB314375614F2ABALL;
  v199 = __CFADD__(v198, 0xE5103F21182E8A29);
  v200 = v197 ^ (v198 - 0x1AEFC0DEE7D175D7);
  LOBYTE(v197) = (((unint64_t)v200 * (unsigned __int128)0x740D7868uLL) >> 64) + 104 * (v196 ^ (v199 - 1));
  v199 = __CFADD__(1947039848 * v200, 0x8C08A6E7CAAACE48);
  v201 = 0x234B598AALL
       * (((v184 ^ 0xFF0F184179539606) + 0xF0E7BE2CB41BD2) ^ ((v184 ^ 0xDFBD846961445BFFLL) + 0x20427B9634A3D629) ^ ((v184 ^ 0x20B29C2893F68FEBLL) - 0x20B29C2839EEFDC3))
       - 0x6758F0DF99BC2C1ELL;
  v202 = (v201 ^ 0x2A6B04CEFC98923BLL) & (2 * (v201 & 0xB24A0890FEDAA2A2)) ^ v201 & 0xB24A0890FEDAA2A2;
  v203 = ((2 * (v201 ^ 0x2EEB14CFC00C967FLL)) ^ 0x394238BE7DAC69BALL) & (v201 ^ 0x2EEB14CFC00C967FLL) ^ (2 * (v201 ^ 0x2EEB14CFC00C967FLL)) & 0x9CA11C5F3ED634DCLL;
  v204 = (v203 ^ 0x180000063C840098) & (4 * v202) ^ v202;
  v205 = ((4 * (v203 ^ 0x84A1044102521445)) ^ 0x7284717CFB58D374) & (v203 ^ 0x84A1044102521445) ^ (4 * (v203 ^ 0x84A1044102521445)) & 0x9CA11C5F3ED634DCLL;
  v206 = (v205 ^ 0x1080105C3A501040) & (16 * v204) ^ v204;
  v207 = ((16 * (v205 ^ 0x8C210C0304862489)) ^ 0xCA11C5F3ED634DD0) & (v205 ^ 0x8C210C0304862489) ^ (16 * (v205 ^ 0x8C210C0304862489)) & 0x9CA11C5F3ED634D0;
  v208 = (v207 ^ 0x880104532C420400) & (v206 << 8) ^ v206;
  v209 = (((v207 ^ 0x14A0180C1294300DLL) << 8) ^ 0xA11C5F3ED634DD00) & (v207 ^ 0x14A0180C1294300DLL) ^ ((v207 ^ 0x14A0180C1294300DLL) << 8) & 0x9CA11C5F3ED63400;
  v210 = v208 ^ 0x9CA11C5F3ED634DDLL ^ (v209 ^ 0x80001C1E16140000) & (v208 << 16);
  v211 = v201 ^ (2
               * ((v210 << 32) & 0x1CA11C5F00000000 ^ v210 ^ ((v210 << 32) ^ 0x3ED634DD00000000) & (((v209 ^ 0x1CA1004128C220DDLL) << 16) & 0x1CA11C5F00000000 ^ 0xA0000900000000 ^ (((v209 ^ 0x1CA1004128C220DDLL) << 16) ^ 0x1C5F3ED600000000) & (v209 ^ 0x1CA1004128C220DDLL))));
  LOBYTE(v210) = v199 + v197 - 50;
  v212 = ((v211 ^ 0x32CDF34A8AF23D2CLL) + 0x3A0460A355F102A6) ^ ((v211 ^ 0x861F74ECBCEAC4D9) - 0x712918FA9C1604AFLL);
  v74 = __CFADD__(1947039848 * (v212 ^ ((v211 ^ 0x6DA9F32B56E32EDLL) + 0xE130CDB6A6D0D65)), 0x84B96CEB920634B0)
      + (((v212 ^ ((v211 ^ 0x6DA9F32B56E32EDLL) + 0xE130CDB6A6D0D65)) * (unsigned __int128)0x740D7868uLL) >> 64)
      + 1947039848
      * ((__CFADD__(v211 ^ 0x32CDF34A8AF23D2CLL, 0x3A0460A355F102A6) - 1) ^ (__CFADD__(v211 ^ 0x861F74ECBCEAC4D9, 0x8ED6E70563E9FB51)- 1) ^ (__CFADD__(v211 ^ 0x6DA9F32B56E32EDLL, 0xE130CDB6A6D0D65)- 1)) == -526643592;
  STACK[0xD5A8] = v170;
  STACK[0xD590] = (unint64_t)v138;
  v213 = *(_DWORD *)(v139 + 4 * HIBYTE(v174)) ^ *(_DWORD *)(v176 + 4 * (BYTE2(v178) ^ 0x7Fu)) ^ *(_DWORD *)(v173 + 4 * ((((2 * (v143 ^ 0xDD)) & 0xFFFFFFEF) - (v143 ^ 0xDD) + 2824) ^ 0xB3B)) ^ v177[BYTE1(v172) ^ 8];
  v214 = *v181 ^ *(_DWORD *)(v139 + 4 * (HIBYTE(v143) ^ 0x40)) ^ *(_DWORD *)(v176 + 4 * BYTE2(v174)) ^ *(_DWORD *)(v173 + 4 * ((v172 ^ 0xE8) - v180));
  STACK[0xD5C8] = v139;
  v215 = *(_DWORD *)(v139 + 4 * (HIBYTE(v172) ^ 0x8D)) ^ *v182 ^ *(_DWORD *)(v176 + 4 * (BYTE2(v143) ^ 0xF9u)) ^ *(_DWORD *)(v173 + 4 * (((v178 ^ 0xE6) + (v178 & 0xC1 ^ 0x3F15EB01) - ((v178 ^ 0xE6) & 0xFFFFFFC1)) ^ 0x3F15EBC1));
  v216 = 26 - v210;
  if (!v74)
    v216 = 88;
  v217 = (((v184 ^ LOBYTE(STACK[0x260])) + 116) ^ ((v184 ^ 0xD9) + 15) ^ ((v184 ^ 0x6F) - 71)) + 37 + v216;
  v218 = STACK[0xD5C8] + 4 * (HIBYTE(v213) ^ 0xE5);
  v219 = 4 * (HIBYTE(v214) ^ 0xCF);
  v220 = (_DWORD *)(STACK[0xD5C8] + v219);
  STACK[0xD590] = v183;
  v221 = 4 * (BYTE1(v215) ^ 0x15u);
  v222 = (_DWORD *)(v183 + v221);
  v223 = 4 * (BYTE1(v184) ^ 0x42u);
  v224 = (_DWORD *)((char *)v222 + v223 - v221);
  v225 = STACK[0xD578];
  v226 = STACK[0xD578];
  LODWORD(v218) = *v222 ^ *(_DWORD *)v218 ^ *(_DWORD *)(STACK[0xD578] + 4 * (BYTE2(v184) ^ 0xE1u));
  STACK[0xD5A8] = v173;
  LODWORD(v221) = v218 ^ *(_DWORD *)(v173 + 4 * (v214 ^ 0xBBu));
  v227 = ((2 * (v215 ^ 0x4A)) & 0xB6) - (v215 ^ 0x4A) + 1163769508;
  LODWORD(v218) = (v227 & 0xCA31E ^ 0x800080A) + (v227 ^ 0x455FA7B4) - ((v227 ^ 0x455FA7B4) & 0x2131E);
  v228 = (char *)v220 - v219;
  LODWORD(v219) = *(_DWORD *)(v225 + 4 * (BYTE2(v213) ^ 0xF9u)) ^ *v224 ^ *v220;
  v229 = (char *)v224 - v223;
  LOBYTE(v223) = (v217 ^ 0xB9) & (2 * (v217 & 0xBD)) ^ v217 & 0xBD;
  LOBYTE(v224) = ((2 * (v217 ^ 0x91)) ^ 0x58) & (v217 ^ 0x91) ^ (2 * (v217 ^ 0x91)) & 0x2C;
  v230 = (v217 ^ (2
                                 * (((4 * (v224 ^ 0x24)) & 0x2C ^ ((4 * (v224 ^ 0x24)) ^ 0xB0) & (v224 ^ 0x24) ^ 0x20) & (16 * ((v224 ^ 8) & (4 * v223) ^ v223)) ^ (v224 ^ 8) & (4 * v223) ^ v223))) ^ 0xE2;
  LODWORD(v223) = ((((v230 | 0x5457097A) - (v230 | 0xABA8F685) - 1414990203) & 0x451081B ^ 0x1C0B010)
                 + (((v230 | 0x5457097A) - (v230 | 0xABA8F685) - 1414990203) & 0x500603E4 ^ 0x40040165)
                 - 1) ^ 0x1593B851;
  v231 = v219 ^ *(_DWORD *)(v173 + 4 * (v218 ^ 0x80CAA5E));
  LODWORD(v219) = *(_DWORD *)&v229[4 * (BYTE1(v213) ^ 0xED)] ^ *(_DWORD *)(v225 + 4 * (BYTE2(v214) ^ 0x1Bu)) ^ *(_DWORD *)&v228[4 * (HIBYTE(v215) ^ 0x13)] ^ *(_DWORD *)(v173 + 4 * v223);
  LODWORD(v222) = (1472587766 - (v213 ^ 0x31 | 0x57C5E7F6) + (v213 ^ 0x31 | 0xA83A1809)) ^ 0xA83A1044;
  v232 = *(_DWORD *)(v225 + 4 * (BYTE2(v215) ^ 0x67u)) ^ *(_DWORD *)&v228[4 * (HIBYTE(v184) ^ 0x8B)] ^ *(_DWORD *)&v229[4 * (BYTE1(v214) ^ 0xA4)] ^ *(_DWORD *)(v173 + 4 * (((_DWORD)v222 - 435063719 - ((2 * (_DWORD)v222) & 0x4C22F896) + 2034) ^ 0xE6117459));
  v233 = (BYTE1(v219) ^ 0xFD | 0x1A68C631) - (BYTE1(v219) ^ 0xFD | 0xE59739CE) - 443074098;
  LODWORD(v223) = (v233 & 0x18600277 ^ 0x24513235) + (v233 & 0x208C588 ^ 0x800CCC01);
  v234 = (-328437666 - (v219 ^ 0x89) + ((2 * (v219 ^ 0x89)) & 0x1BC) + 2755) ^ 0xEE64665A;
  v235 = 734407870 - (v234 | 0x2BC62CBE) + (v234 | 0xD439D341);
  v236 = ((WORD1(v221) & 0x9A ^ 0x2E890C03) + (WORD1(v221) & 0x65) - 1) ^ 0x21;
  v237 = (v236 & 0x451 ^ 0x9685E440) + (v236 & 0xAE ^ 0x8000AAB);
  v238 = (BYTE1(v221) ^ 0x45 | 0x57508335) - (BYTE1(v221) ^ 0x45 | 0xA8AF7CCA) - 1464894262;
  v239 = (v238 & 0x544080A8 ^ LODWORD(STACK[0x268])) + (v238 ^ 0x7741C105) - ((v238 ^ 0x7741C105) & 0x74E898A8);
  v240 = 4 * (BYTE3(v221) ^ 0xA4);
  v241 = 4
       * ((955092288
         - (BYTE2(v232) ^ LODWORD(STACK[0x264]) | 0x38ED8D40)
         + (BYTE2(v232) ^ LODWORD(STACK[0x264]) | 0xC71272BF)) ^ 0x852052DE);
  STACK[0x6810] = v241;
  v242 = 4 * (v231 ^ 0x82u);
  v243 = v173 + v242;
  LODWORD(v241) = *(_DWORD *)&v228[v240] ^ *(_DWORD *)(v225 + v241) ^ *(_DWORD *)(v173 + v242);
  v244 = 4 * (((_DWORD)v223 - 1) ^ 0xBE3538F3);
  v245 = &v229[v244];
  v246 = v244;
  STACK[0x6820] = v244;
  v247 = v241 ^ *(_DWORD *)&v229[v244];
  LOWORD(v229) = ((2 * (BYTE2(v231) ^ 0xA8)) & 0x1CC) - (BYTE2(v231) ^ 0xA8) + 25113;
  v248 = 4 * (HIBYTE(v231) ^ 0x20);
  v249 = &v228[v248];
  v250 = 4 * (BYTE3(v219) ^ 0xD6);
  v251 = v250;
  STACK[0x6860] = v250;
  v252 = &v228[v250];
  v253 = 4 * (((v229 & 0x30 ^ 0x9400821) + ((unsigned __int16)v229 & 0x3CF) - 1) ^ 0x9400A11u);
  STACK[0x6850] = v253;
  v254 = *(_DWORD *)(v225 + v253) ^ *(_DWORD *)&v228[v250];
  LODWORD(v228) = (1005917336 - (BYTE2(v219) ^ 0xB4) + ((2 * (BYTE2(v219) ^ 0xB4)) & 0xCE)) ^ 0xFBF41530;
  v255 = ((2 * (_DWORD)v228) | 0x1F6485D4) - (_DWORD)v228;
  v256 = 4
       * ((((v232 >> 8) & 0x34) + (BYTE1(v232) ^ 0x698000FF) - ((BYTE1(v232) ^ 0x698000FF) & 0x69000034) - 2076461312) ^ 0x84BBB727);
  v257 = &v245[v256 - v246];
  v258 = 4 * (v239 ^ 0x54F9DAAAu);
  v259 = &v245[v258 - v246];
  LODWORD(v245) = v254 ^ *(_DWORD *)v259;
  v260 = (((2 * (BYTE1(v231) ^ 0x9E)) & 0x64) - (BYTE1(v231) ^ 0x9E) + 1183698381) ^ 0x5A82C1E9;
  LODWORD(v250) = ((2 * v260) & 0x20141EFA) - v260;
  v261 = (((2 * (v221 ^ 0xC1)) | 0xE1F97FF4) - (v221 ^ 0xC1) - 1895612410) ^ 0x72F8FFFB;
  LODWORD(v221) = ((STACK[0x26C] & (2 * v261)) - v261 - 164398537) ^ 0xF4373AB7;
  v262 = 4 * (v235 ^ 0xD631CE45);
  v263 = (_DWORD *)(v243 + v262 - v242);
  v264 = 4 * (HIBYTE(v232) ^ 0x92);
  v265 = &v252[v264 - v251];
  STACK[0xD5C8] = (unint64_t)v265;
  STACK[0xD590] = (unint64_t)v259;
  v266 = 4
       * (((v232 ^ 0x1040085F) - ((2 * (v232 ^ 0x1040085F)) & 0x2000119C) + 2014854094) ^ 0x685833CEu);
  v267 = &v263[v262 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v266 / 4];
  STACK[0xD5A8] = (unint64_t)v267;
  v268 = v245 ^ *v267;
  v269 = 4 * ((v237 - 1) ^ 0x9E85EA59);
  STACK[0x6830] = v269;
  LODWORD(v257) = *(_DWORD *)v257 ^ *(_DWORD *)(v225 + v269) ^ *(_DWORD *)v249 ^ *v263;
  LOBYTE(v249) = STACK[0x6890] & 0x10;
  v270 = 4 * ((v255 - 263340778) ^ 0xCFB343E8);
  STACK[0x6890] = v270;
  LODWORD(v225) = *(_DWORD *)v265 ^ *(_DWORD *)(v225 + v270);
  v271 = &v259[-v258];
  v272 = 4 * (((_DWORD)v250 + 1276452994) ^ 0x501A2CCAu);
  v273 = &v259[v272 - v258];
  STACK[0xD590] = (unint64_t)v273;
  LODWORD(v225) = v225 ^ *(_DWORD *)v273;
  v274 = 4 * v221;
  v275 = (unint64_t)&v263[v262 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v274 / 4];
  STACK[0xD5A8] = v275;
  LODWORD(v225) = v225 ^ *(_DWORD *)v275;
  LODWORD(v221) = ((v268 >> 8) & 0x71) - 1329348432 + ((v268 >> 8) & 0x8E ^ 0x8B) + 3663;
  v276 = (unint64_t)&v265[-v264];
  v277 = (unint64_t)&v263[v262 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v275) = *(_DWORD *)(v276 + 4 * (HIBYTE(v247) ^ 0xC2));
  v278 = 4 * (((v257 ^ 0x91) - ((2 * (v257 ^ 0x91)) & 0x34) + 2842) ^ 0xB1Eu);
  v279 = *(_DWORD *)(v226 + 4 * (BYTE2(v225) ^ 0x98u));
  STACK[0xD5A8] = v277 + v278;
  v280 = 4 * (((v221 & 0x593 ^ 0xA6C36082) + (v221 & 0x1A6C ^ 0x200269) - 1) ^ 0xA6E36D23);
  STACK[0xD590] = (unint64_t)&v271[v280];
  STACK[0xD5C8] = v276;
  LODWORD(v278) = v275 ^ v279 ^ *(_DWORD *)(v277 + v278) ^ *(_DWORD *)&v271[v280];
  v281 = 4 * (BYTE1(v225) ^ 0x5Du);
  LODWORD(v249) = *(_DWORD *)(v226
                            + 4
                            * ((unint64_t)((v247 ^ 0xC2E69181) >> (~((_BYTE)v249 + 19) & 0x10)) >> (v249 ^ 0x10u)));
  LODWORD(v226) = *(_DWORD *)(v226
                            + 4
                            * ((((2 * (BYTE2(v257) ^ 0x200001E2)) | 0xF660F7FA) - (BYTE2(v257) ^ 0x200001E2) - 2066775037) ^ LODWORD(STACK[0x270])));
  LODWORD(v280) = (v268 & 2) + (v268 ^ 0xFFFFFFFE) + (v268 | 0x1F7849FD) + 1;
  v282 = ((v280 & 0x5C4EE219 ^ 0x6E200) + (v280 ^ 0x7C7809DF) - ((v280 ^ 0x7C7809DF) & 0x5C4EE219)) ^ 0x3F4EA219;
  STACK[0xD5A8] = v277;
  STACK[0xD590] = (unint64_t)&v271[v281];
  STACK[0xD5C8] = v276;
  v283 = (unint64_t)v271;
  LODWORD(v281) = *(_DWORD *)&v271[v281];
  v284 = 4 * v282;
  STACK[0xD5A8] = v277 + v284;
  v285 = *(_DWORD *)(v276 + 4 * ((v257 >> 24) ^ 0x8E));
  v286 = 4 * (HIBYTE(v268) ^ 0xFC);
  v287 = (_DWORD *)(v276 + v286);
  v288 = *v287 ^ v226;
  STACK[0xD590] = v283;
  STACK[0xD5C8] = (unint64_t)v287;
  LODWORD(v226) = *(_DWORD *)(v277 + v284);
  v289 = 4 * (BYTE1(v247) ^ 0x91u);
  STACK[0xD590] = v283 + v289;
  v290 = BYTE3(v225) ^ 0x4E;
  v291 = (unint64_t)&v287[v290 + v286 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD5C8] = v291;
  STACK[0xD5A8] = v277;
  LODWORD(v289) = *(_DWORD *)(v283 + v289);
  v292 = (_DWORD *)(v277
                  + 4
                  * (((v225 ^ 0xCF) - ((2 * (v225 ^ 0xCF)) & 0x17A) + 3005) ^ 0xB8Cu));
  STACK[0xD5A8] = (unint64_t)v292;
  LODWORD(v226) = v285 ^ v249 ^ v226 ^ v281;
  LODWORD(v281) = (BYTE2(v268) ^ 0xAD) - ((2 * (BYTE2(v268) ^ 0xAD)) & 0x138);
  v293 = (((v257 >> 8) & 0x79 ^ 0xD9FC9731) + ((v257 >> 8) & 0x86 ^ 0x81) - 1) ^ 0x1A75B70B;
  LODWORD(v249) = *v292;
  STACK[0xD5A8] = v277;
  v294 = 4 * ((v293 - ((2 * v293) & 0x5000DD8) + 989202156) ^ 0xF97F2668);
  v295 = *(_DWORD *)v291;
  STACK[0xD590] = v283 + v294;
  v296 = v288 ^ v249 ^ v289;
  v297 = v291 - v290 * 4;
  v298 = *(_DWORD *)(v283 + v294);
  v299 = 4 * (((v247 ^ 0xFC) - ((2 * (v247 ^ 0xFC)) & 0xFFFFFF9F) + 719) ^ 0x2B2);
  STACK[0xD5A8] = v277 + v299;
  v300 = STACK[0xD578];
  v301 = STACK[0xD578];
  HIDWORD(v302) = *(_DWORD *)(STACK[0xD578] + 4 * (((_DWORD)v281 + 1436) ^ 0x5CDu));
  LODWORD(v302) = HIDWORD(v302);
  STACK[0xD5C8] = v297;
  STACK[0xD590] = v283;
  LODWORD(v291) = v298 ^ __ROR4__((v302 >> 20) ^ __ROR4__(v295, 20) ^ 0xC02E09B1, 12) ^ *(_DWORD *)(v277 + v299);
  v303 = (v226 ^ 0x46F61443) >> (STACK[0x6870] & 8) >> (STACK[0x6870] & 8 ^ 8);
  LODWORD(v281) = *(_DWORD *)(v300
                            + 4
                            * (((BYTE2(v291) ^ 0x96) + (WORD1(v291) & 0x93 ^ 0x1101) - ((BYTE2(v291) ^ 0x96) & 0x93)) ^ 0x111F));
  v304 = (_DWORD *)(v297 + 4 * (BYTE3(v278) ^ 0x37));
  STACK[0xD5C8] = (unint64_t)v304;
  STACK[0xD5A8] = v277;
  LODWORD(v281) = v281 ^ *v304;
  v305 = 4
       * ((((2 * (BYTE1(v296) ^ 0x12C006F3)) | 0x4745CFB8) - (BYTE1(v296) ^ 0x12C006F3) - 597878748) ^ 0x3162E1E9u);
  STACK[0xD590] = v283 + v305;
  STACK[0xD5C8] = v297;
  LODWORD(v305) = *(_DWORD *)(v283 + v305);
  v306 = 4
       * ((((2 * (v226 ^ 0x88020053)) | 0x86A8A94) - (v226 ^ 0x88020053) - 70600010) ^ LODWORD(STACK[0x274]));
  STACK[0xD5A8] = v277 + v306;
  v307 = 4 * (BYTE3(v226) ^ 0x46);
  STACK[0xD5C8] = v297 + v307;
  STACK[0xD590] = v283;
  LODWORD(v307) = *(_DWORD *)(v297 + v307);
  LODWORD(v306) = *(_DWORD *)(v277 + v306);
  v308 = 4
       * ((((2 * (BYTE1(v291) ^ 0x4114081F)) & 0x2001180) - (BYTE1(v291) ^ 0x4114081F) + 1614190399) ^ 0x21229F87u);
  STACK[0xD590] = v283 + v308;
  v309 = 4 * (v296 ^ 0xE1u);
  STACK[0xD5A8] = v277 + v309;
  LODWORD(v281) = v281 ^ v305 ^ v306;
  LODWORD(v305) = (((2 * (v281 & 0xB1D09990 ^ 0x91800980)) & 0x61203020) - (v281 & 0xB1D09990 ^ 0x91800980) + 188917632) ^ 0xC42A728;
  LODWORD(v306) = ((BYTE2(v278) ^ 0x83) - ((2 * (BYTE2(v278) ^ 0x83)) & 0x1CC) - 115611162) ^ 0x69F3D5F4;
  LODWORD(v281) = (v281 & 0x8002603 ^ 0x10D0A580) + (v281 & 0x462F406C ^ 0x40D4061) - 1;
  LODWORD(v281) = (v281 & 0x5E0A0C27 ^ 0x450A1004) + (v281 ^ 0x1AE12E33) - ((v281 ^ 0x1AE12E33) & 0x4E1A8C27);
  LODWORD(v306) = *(_DWORD *)(v301
                            + 4
                            * (((_DWORD)v306 + 2145815498 - (STACK[0x278] & (2 * (_DWORD)v306)) + 2798) ^ 0xEF0EAA99));
  LODWORD(v226) = *(_DWORD *)(v301
                            + 4
                            * ((((2 * (BYTE2(v226) ^ 0xA4)) | 0x17D008EA) - (BYTE2(v226) ^ 0xA4) + 1947728779) ^ 0x8BE80427));
  LODWORD(v281) = v281 & 0x6A101E10 ^ 0x8101C00 ^ ((((2 * v305) & 0xF3E34030) - v305 - 2046402589) ^ 0x85292E34) & (v281 ^ 0xA4FB8A4C);
  v310 = -1667544814 - (v281 | 0x9C9B4912) + (v281 | 0x6364B6ED);
  STACK[0xD5C8] = v297;
  LODWORD(v281) = *(_DWORD *)(v283 + v308);
  STACK[0xD590] = v283;
  LODWORD(v305) = *(_DWORD *)(v277 + v309);
  v311 = (_DWORD *)(v297 + 4 * (HIBYTE(v296) ^ 0x78));
  STACK[0xD5C8] = (unint64_t)v311;
  LODWORD(v226) = *v311 ^ v226;
  v312 = v306 ^ v307 ^ v281 ^ v305;
  LODWORD(v281) = (((v278 >> 8) & 0x6E ^ 0x11FCB06E)
                 - ((v278 >> 8) & 0x6E)
                 + (BYTE1(v278) ^ 1)) ^ 0x1CF0B336;
  v313 = 4 * ((((2 * (_DWORD)v281) | 0x50998E34) - v281 - 676120346) ^ LODWORD(STACK[0x27C]));
  STACK[0xD590] = v283 + v313;
  LOWORD(v305) = (v291 & 0xBC ^ 0xA9) - (v291 & 0x43) - 30910;
  STACK[0xD5A8] = v277;
  STACK[0xD5C8] = v297;
  LODWORD(v313) = v226 ^ *(_DWORD *)(v283 + v313);
  STACK[0xD590] = v283;
  v314 = 4 * (((v305 & 0x85C1 ^ 0x21038040) + (v305 & 0x7A3E ^ 0x4900203) - 1) ^ 0x259305C3);
  v315 = v277 + v314;
  STACK[0xD5A8] = v277 + v314;
  v316 = v313 ^ *(_DWORD *)(v277 + v314);
  v317 = 4 * (BYTE3(v291) ^ 0x23);
  v318 = v297 + v317;
  v319 = v318 + v240 - v317;
  LODWORD(v278) = ((v278 & 0xD ^ 0xF4609301) + (v278 & 0xF2 ^ 0x33) - 1) ^ 0x54659F8D;
  LODWORD(v307) = v278 - ((2 * v278) & 0xA1E4C);
  v320 = STACK[0xD578];
  v321 = *(_DWORD *)(STACK[0xD578]
                   + 4
                   * ((337772960 - (BYTE2(v296) ^ 0xCE | 0x142201A0) + (BYTE2(v296) ^ 0xCE | 0xEBDDFE5F)) ^ 0xEBDDFE7D));
  LODWORD(v277) = *(_DWORD *)(STACK[0xD578] + STACK[0x6810]);
  v322 = 4 * (((_DWORD)v307 + 159235878) ^ 0xA978B305);
  v323 = v315 + v322 - v314;
  v324 = 4 * v303;
  v325 = (int *)(v283 + v324);
  STACK[0xD590] = (unint64_t)v325;
  STACK[0xD5C8] = v318;
  LODWORD(v318) = *(_DWORD *)v318;
  STACK[0xD5C8] = v319;
  v326 = *v325;
  v327 = STACK[0x6820];
  v328 = (unint64_t)v325 + STACK[0x6820];
  STACK[0xD590] = v328;
  v329 = (_DWORD *)(v328 - v324);
  STACK[0xD5A8] = v323;
  v330 = v323 - v322;
  LODWORD(v323) = *(_DWORD *)v323;
  LODWORD(v324) = *(_DWORD *)v319;
  STACK[0xD5A8] = v330 + v242;
  v331 = v326 ^ v318 ^ v321 ^ v323;
  STACK[0xD590] = (unint64_t)v329;
  LODWORD(v318) = v324 ^ v277 ^ *v329;
  v332 = (unint64_t)v329 + v256;
  STACK[0xD590] = v332;
  LODWORD(v242) = *(_DWORD *)(v330 + v242);
  v333 = (_DWORD *)(v319 + v248 - v240);
  LODWORD(v270) = (((v242 ^ 0x278AB332) - 663401266) ^ ((v242 ^ 0xD5E58402) + 706378750) ^ ((v242 ^ 0xC2F91B14)
                                                                                          + 1023861996))
                - (((v242 ^ v318 ^ 0xAC1FB9D7) + 1407206953) ^ ((v242 ^ v318 ^ LODWORD(STACK[0x280])) + 1138225796) ^ ((v242 ^ v318 ^ 0x1A550FFC) - 441782268))
                + 1412904040;
  LODWORD(v323) = v270 & 0xD1FC3C65 ^ 0xCBBFFFA7 ^ (v270 ^ 0x99FBBB40) & (2 * (v270 & 0xD1FC3C65));
  LODWORD(v240) = ((2 * (v270 ^ LODWORD(STACK[0x284]))) ^ 0x977FFF4E) & (v270 ^ LODWORD(STACK[0x284])) ^ (2 * (v270 ^ LODWORD(STACK[0x284]))) & 0xCBBFFFA6;
  LODWORD(v323) = v240 & 0x271DD148 ^ v323 ^ ((4 * v323) ^ 0x9E22FD4) & (v240 ^ 0x833FFF05);
  LODWORD(v240) = ((4 * v240) ^ 0x2BE22D50) & (v240 ^ 0x833FFF05) ^ v240 & 0x271DD148;
  LODWORD(v323) = v240 & 0x271DD148 ^ v323 ^ ((16 * v323) ^ 0xAD3F3B38) & (v240 ^ 0x31DD107);
  LODWORD(v240) = ((16 * v240) ^ 0x16C0C148) & (v240 ^ 0x31DD107) ^ v240 & 0x271DD148;
  LODWORD(v323) = v323 ^ v240 & 0x271DD148 ^ (((_DWORD)v323 << 8) ^ 0x98E27648) & (v240 ^ 0x31DD1A7);
  LODWORD(v240) = (((_DWORD)v240 << 8) ^ 0x3ACCD148) & (v240 ^ 0x31DD1A7) ^ v240 & 0x271DD148;
  LODWORD(v324) = -634650231
                - (((v318 ^ 0xE7F74ABA) + 403223878) ^ ((v318 ^ 0x105650B5) - 274092213) ^ ((v318 ^ 0xCD558D7C)
                                                                                          + 850031236));
  LODWORD(v322) = (v324 ^ 0xCADE47C0) & (2 * (v324 & 0xEADF6704)) ^ v324 & 0xEADF6704;
  LODWORD(v277) = ((2 * (v324 ^ 0x1A5C81C8)) ^ 0xE107CD98) & (v324 ^ 0x1A5C81C8) ^ (2 * (v324 ^ 0x1A5C81C8)) & 0xF083E6CC;
  LODWORD(v322) = (v277 ^ 0xE0038644) & (4 * v322) ^ v322;
  LODWORD(v277) = ((4 * (v277 ^ 0x10802244)) ^ 0xC20F9B30) & (v277 ^ 0x10802244) ^ (4 * (v277 ^ 0x10802244)) & 0xF083E6CC;
  LODWORD(v322) = (v277 ^ 0xC0038200) & (16 * v322) ^ v322;
  LODWORD(v277) = ((16 * (v277 ^ 0x308064CC)) ^ 0x83E6CC0) & (v277 ^ 0x308064CC) ^ (16 * (v277 ^ 0x308064CC)) & 0xF083E6C0;
  LODWORD(v322) = v322 ^ 0xF083E6CC ^ (v277 ^ 0x2640C) & ((_DWORD)v322 << 8);
  LODWORD(v319) = v324 ^ v318 ^ v270 ^ (2
                                      * (((_DWORD)v322 << 16) & 0x70830000 ^ v322 ^ (((_DWORD)v322 << 16) ^ 0x66CC0000) & (((v277 ^ 0xF081820C) << 8) & 0xF0830000 ^ 0x70010000 ^ (((v277 ^ 0xF081820C) << 8) ^ 0x83E60000) & (v277 ^ 0xF081820C)) ^ v323 ^ v240 & 0x271DD148 ^ (((_DWORD)v323 << 16) ^ 0x9BAD148) & (v240 ^ 0x48A20000) ^ (((_DWORD)v323 << 16) ^ 0x9BAD148) & 0x4BBFD100));
  STACK[0xD5A8] = v330 + v262;
  LODWORD(v319) = (((v242 ^ 0xC269526C) + 1033285012) ^ ((v242 ^ 0xBBEF3272) + 1141951886) ^ ((v242 ^ 0x49104C3A)
                                                                                            - 1225804858))
                - 978255872
                + (((v319 ^ 0x64BB6DCD) + 1922195951) ^ ((v319 ^ 0x15890018) + 60820540) ^ ((v319 ^ 0xC79D9311)
                                                                                          - 776691917))
                + 1435;
  LODWORD(v323) = (v319 ^ 0x821FA320) & (2 * (v319 & 0xCA5E33A1)) ^ v319 & 0xCA5E33A1;
  LODWORD(v240) = ((2 * (v319 ^ 0x8613E520)) ^ 0x989BAD02) & (v319 ^ 0x8613E520) ^ (2 * (v319 ^ 0x8613E520)) & 0x4C4DD680;
  LODWORD(v323) = (v240 ^ 0x8098400) & (4 * v323) ^ v323;
  LODWORD(v240) = ((4 * (v240 ^ 0x44445281)) ^ 0x31375A04) & (v240 ^ 0x44445281) ^ (4 * (v240 ^ 0x44445281)) & 0x4C4DD680;
  LODWORD(v323) = (v240 ^ LODWORD(STACK[0x288])) & (16 * v323) ^ v323;
  LODWORD(v240) = ((16 * (v240 ^ 0x4C488481)) ^ 0xC4DD6810) & (v240 ^ 0x4C488481) ^ (16 * (v240 ^ 0x4C488481)) & 0x4C4DD680;
  LODWORD(v323) = v323 ^ 0x4C4DD681 ^ (v240 ^ 0x444D4000) & ((_DWORD)v323 << 8);
  LODWORD(v242) = v319 ^ (2
                        * (((_DWORD)v323 << 16) & 0x4C4D0000 ^ v323 ^ (((_DWORD)v323 << 16) ^ 0x56810000) & (((v240 ^ LODWORD(STACK[0x28C])) << 8) & 0x4C4D0000 ^ 0x90000 ^ (((v240 ^ LODWORD(STACK[0x28C])) << 8) ^ 0x4DD60000) & (v240 ^ LODWORD(STACK[0x28C])))));
  v334 = (_DWORD *)(v332 - v327);
  LODWORD(v332) = *(_DWORD *)(v320 + STACK[0x6830]);
  LODWORD(v240) = *(_DWORD *)(v320 + STACK[0x6850]);
  STACK[0xD5C8] = (unint64_t)v333;
  LODWORD(v324) = *(_DWORD *)(v330 + v262);
  v335 = (char *)v334 - v256;
  STACK[0xD590] = (unint64_t)&v334[(unint64_t)v258 / 4] - v256;
  v336 = (unint64_t)&v333[v248 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v270) = v324 ^ v332 ^ *v333 ^ *v334;
  STACK[0xD5A8] = v330 + v266;
  STACK[0xD5C8] = (unint64_t)&v333[v248 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v334) = *(_DWORD *)(v330 + v266);
  STACK[0xD590] = (unint64_t)&v335[v272];
  LODWORD(v332) = v240 ^ *(_DWORD *)&v335[v258] ^ *(_DWORD *)((char *)&v333[v248 / 0xFFFFFFFFFFFFFFFCLL] + STACK[0x6860]);
  v337 = STACK[0xD578];
  v338 = STACK[0xD578];
  LODWORD(v324) = v332 ^ v334;
  LODWORD(v327) = *(_DWORD *)(v336 + v264) ^ *(_DWORD *)(STACK[0xD578] + STACK[0x6890]) ^ *(_DWORD *)&v335[v272];
  STACK[0xD5A8] = v330 + v274;
  STACK[0xD5C8] = v336;
  LODWORD(v332) = v327 ^ *(_DWORD *)(v330 + v274);
  LODWORD(v327) = *(_DWORD *)(v337
                            + 4
                            * ((-1815255424
                              - (BYTE2(v332) ^ 0x690041B9 | 0x93CD6680)
                              + (BYTE2(v332) ^ 0x690041B9 | 0x6C32997F)) ^ 0x532D85E));
  v339 = 4 * (BYTE3(v242) ^ 0x12);
  STACK[0xD5C8] = v336 + v339;
  LODWORD(v337) = (((2 * (v270 ^ 0xF3)) & 0x158) - (v270 ^ 0xF3) + 237303891) ^ 0x8C045C73;
  LODWORD(v320) = (((2 * (BYTE1(v332) ^ 0xDC)) | 0xC24D4040) - (BYTE1(v332) ^ 0xDC) + 517562336) ^ 0xF04DACA1;
  v340 = 4 * ((146028989 - (v320 | 0x8B439BD) + (v320 | 0xF74BC642)) ^ 0xE620CA42);
  STACK[0xD590] = (unint64_t)&v335[v340];
  LODWORD(v318) = (v324 ^ 0x92 | 0x91646A6E) - (v324 ^ 0x92 | 0x6E9B9591) + 1855690129;
  LODWORD(v256) = (BYTE2(v242) ^ LODWORD(STACK[0x290]))
                + (WORD1(v242) & 0x61 ^ 0x26834020)
                - ((BYTE2(v242) ^ LODWORD(STACK[0x290])) & 0x80108461);
  LODWORD(v327) = *(_DWORD *)&v335[4
                                 * (((BYTE1(v324) ^ 0x2149BE6E)
                                   - ((2 * (BYTE1(v324) ^ 0x2149BE6E)) & 0x2905976)
                                   - 604213829) ^ 0xFAB5D396)] ^ v327;
  v341 = 4 * ((475874216 - (_DWORD)v337 + ((2 * (_DWORD)v337) | 0xC74578B0)) ^ 0x6182181E);
  STACK[0xD5A8] = v330 + v341;
  v342 = v327 ^ *(_DWORD *)(v330 + v341) ^ *(_DWORD *)(v336 + v339);
  v343 = v330 + 4 * (((v318 & 0x80246872 ^ 0xC8008031) + (v318 & 0x1140038D) - 1) ^ 0x5964EAEF);
  v344 = 4 * (v332 ^ 0xFEu);
  STACK[0xD5A8] = v343;
  STACK[0xD5C8] = v336;
  LODWORD(v343) = *(_DWORD *)v343;
  v345 = 4 * (BYTE3(v324) ^ 0xFC);
  STACK[0xD5C8] = v336 + v345;
  v346 = *(_DWORD *)(v336 + 4 * (BYTE3(v270) ^ 0x8E)) ^ v343 ^ *(_DWORD *)&v335[v340] ^ *(_DWORD *)(v338 + 4 * (v256 ^ 0x278340E3));
  LODWORD(v340) = ((BYTE1(v242) ^ 0xE3) - ((2 * (BYTE1(v242) ^ 0xE3)) & 0x11C) + 1256117134) ^ 0x63D7F98B;
  v347 = 4 * (((_DWORD)v340 - 29369861 - ((2 * (_DWORD)v340) & 0x501233F6)) ^ 0xD736F3A9);
  STACK[0xD590] = (unint64_t)&v335[v347];
  LODWORD(v343) = *(_DWORD *)(v336 + v345) ^ *(_DWORD *)(v338
                                                       + 4
                                                       * (((BYTE2(v270) ^ 0x74)
                                                         - 566965464
                                                         - ((2 * (BYTE2(v270) ^ 0x74)) & 0x50)) ^ 0xDE34CB2E));
  LODWORD(v324) = ((2 * (BYTE2(v324) ^ 0x7DC21901)) & 0xEB0432A6) - (BYTE2(v324) ^ 0x7DC21901) - 2008726356;
  LODWORD(v338) = *(_DWORD *)(v338
                            + 4 * (((v324 & 0x81D432E5 ^ 0x5222E4) + (v324 & 0x7E28451A ^ 0x7000C411) - 1) ^ 0x85D6B3A5));
  STACK[0xD5A8] = v330 + v344;
  v348 = 4 * (BYTE3(v332) ^ 0x4E);
  LODWORD(v324) = *(_DWORD *)(v330 + v344);
  STACK[0xD5C8] = v336 + v348;
  v349 = 4 * (BYTE1(v270) ^ 0x3Eu);
  STACK[0xD590] = (unint64_t)&v335[v349];
  v350 = v330;
  v351 = v343 ^ v324 ^ *(_DWORD *)&v335[v347];
  LODWORD(v339) = (((2 * v242) & 0x80) + 493045725 + (v242 ^ 0xFFFFFFF0) + 2787) ^ 0x4E23D8A7;
  v352 = 4 * (((_DWORD)v339 - ((2 * (_DWORD)v339) & 0x600038C) + 119755206) ^ 0x5463DBA4u);
  STACK[0xD5A8] = v330 + v352;
  v353 = *(_DWORD *)(v336 + v348) ^ *(_DWORD *)&v335[v349] ^ v338 ^ *(_DWORD *)(v330 + v352);
  LODWORD(v338) = (v242 & 0xFF0000 ^ 0xEC0000 | 0x7B33642A) - (v242 & 0xFF0000 ^ 0xEC0000 | 0x84CC9BD5) - 2066965547;
  v354 = (v338 & 0x66444422 ^ 0x4400153) + (v338 & 0x19BB2008);
  LODWORD(v352) = (((2 * (BYTE1(v351) ^ 0xE4)) | 0x224EB20A) - (BYTE1(v351) ^ 0xE4) + 1859692283) ^ 0xB9AF5927;
  v355 = v352 - ((2 * v352) & 0x4FF31F16);
  LODWORD(v324) = (((v346 ^ 0x82C87025) - 1482694120) ^ ((v346 ^ 0x218084E5) + 81204952) ^ ((v346 ^ 0xE5BEE083)
                                                                                          - 1058442574))
                + 458268780;
  LODWORD(v242) = (v324 ^ 0xF24C4DA1) & (2 * (v324 & 0xFB408E24)) ^ v324 & 0xFB408E24;
  LODWORD(v347) = ((2 * (v324 ^ 0x524C41E1)) ^ 0x52199F8A) & (v324 ^ 0x524C41E1) ^ (2 * (v324 ^ 0x524C41E1)) & 0xA90CCFC4;
  LODWORD(v242) = (v347 ^ 0xF80) & (4 * v242) ^ v242;
  LODWORD(v347) = ((4 * (v347 ^ 0xA9044045)) ^ 0xA4333F14) & (v347 ^ 0xA9044045) ^ (4 * (v347 ^ 0xA9044045)) & 0xA90CCFC4;
  LODWORD(v242) = (v347 ^ 0xA0000F01) & (16 * v242) ^ v242;
  LODWORD(v347) = ((16 * (v347 ^ 0x90CC0C1)) ^ 0x90CCFC50) & (v347 ^ 0x90CC0C1) ^ (16 * (v347 ^ 0x90CC0C1)) & 0xA90CCFC0;
  LODWORD(v242) = v242 ^ 0xA90CCFC5 ^ (v347 ^ 0x800CCC85) & ((_DWORD)v242 << 8);
  v356 = v324 ^ LODWORD(STACK[0x298]) ^ (2
                                       * (((_DWORD)v242 << 16) & 0x290C0000 ^ v242 ^ (((_DWORD)v242 << 16) ^ 0x4FC50000) & (((v347 ^ 0x29000385) << 8) & 0x290C0000 ^ 0x21000000 ^ (((v347 ^ 0x29000385) << 8) ^ 0xCCF0000) & (v347 ^ 0x29000385))));
  if ((((v346 ^ 0x7111F5F2) + 1413900226) ^ ((v346 ^ 0x37957590) + 314763171) ^ ((v346 ^ 0x729420) + 623183379))
     - 1671530098 >= 0x85CD4AFE)
    v357 = 112;
  else
    v357 = -114;
  v358 = v346 ^ LODWORD(STACK[0x294]);
  if ((((v346 ^ 0x3898633A) + 500166922) ^ ((v346 ^ 0x4E3BC4D2) + 1802262241) ^ ((v346 ^ 0x3055B3AA) + 352461209))
     - 1671530098 < 0x85CD4AFE)
    v356 = v346 ^ LODWORD(STACK[0x294]);
  if (v356 == -1671530098)
    LOBYTE(v358) = v357;
  v359 = ((v353 & 0xC2 ^ 0x40) - ((2 * (v353 & 0xC2 ^ 0x40)) & 0x80) + 1539298625) ^ 0x5EDFD145;
  v360 = ((2 * (BYTE1(v353) ^ 0x96AD8B64)) | 0xCA057956) - (BYTE1(v353) ^ 0x96AD8B64) + 452805461;
  v361 = (v358 & 0xC8 ^ 0x40773889) + (v358 & 0x37);
  v362 = ((BYTE2(v353) ^ 0xD1) - 369408281 - ((2 * (BYTE2(v353) ^ 0xD1)) & 0x86) + 3164) ^ 0xE1D97351;
  v363 = ((2 * v362) & 0x10002072) - v362;
  v364 = &v335[4 * ((v355 - 1476817013) ^ 0x8F718F8B)];
  v365 = 4
       * (((v360 & 0x3458F3CC ^ LODWORD(STACK[0x29C])) + (v360 ^ 0x71AF3702) - ((v360 ^ 0x71AF3702) & 0x3458F3CC)) ^ 0xB658F3A4);
  STACK[0x6890] = (unint64_t)v364;
  v366 = &v335[v365];
  v367 = (((2 * v359) & 0x240050C) - v359 - 1505667743) ^ 0x6BD364D1;
  if (v354 == 2145150329)
    v367 = -923650636;
  v368 = (v367 ^ 0xC8F2354B) & (v353 ^ 0x309ABF46) ^ v367 & 0x889C1ACC;
  v369 = (LODWORD(STACK[0x2A0]) | ~v368) + (v368 | 0x8A99911F);
  v370 = (((2 * (BYTE2(v342) ^ 0xF5)) & 0xE8) - (BYTE2(v342) ^ 0xF5) - 53005685) ^ 0xE01D97C4;
  v371 = ((2 * v370) & 0x21040666) - v370;
  v372 = *(_DWORD *)(v336 + 4 * (HIBYTE(v342) ^ 0x37)) ^ *(_DWORD *)v364 ^ *(_DWORD *)(STACK[0xD578]
                                                                                       + 4
                                                                                       * ((v363 + 1185132486) ^ 0x4E818F03)) ^ *(_DWORD *)(v330 + 4 * ((v361 - 1) ^ 0x40773806u));
  v373 = ((HIWORD(v351) & 0x20) + (BYTE2(v351) ^ 0x7D) - ((BYTE2(v351) ^ 0x7D) & 0x20) - 410316544) ^ 0x268F3730;
  v374 = *(_DWORD *)(STACK[0xD578] + 4 * ((-1155143937 - (v373 | 0xBB25E6FF) + (v373 | 0x44DA1900)) ^ 0x85DE3F81));
  v375 = (unint64_t)&v366[-v365];
  v376 = *(_DWORD *)(STACK[0xD578] + 4 * ((v371 + 1282192588) ^ 0x50A611C6)) ^ *(_DWORD *)(v336
                                                                                           + 4 * (HIBYTE(v346) ^ 0x46)) ^ *(_DWORD *)(v330 + 4 * (v351 ^ 0xE1u)) ^ *(_DWORD *)v366;
  v377 = *(_DWORD *)(STACK[0xD578] + 4 * (((BYTE2(v346) ^ 0xAF) - ((2 * (BYTE2(v346) ^ 0xAF)) & 0xD2) + 617) ^ 0x230u)) ^ *(_DWORD *)(v336 + 4 * (HIBYTE(v351) ^ 0x78));
  v378 = *(_DWORD *)(v375 + 4 * (BYTE1(v342) ^ 0x5Fu));
  v379 = v375;
  STACK[0x6860] = v375;
  v380 = v377 ^ v378 ^ *(_DWORD *)(v330 + 4 * ((-2 - v369) ^ 0xFDF67EA8));
  v381 = ((v342 & 0x2B ^ 0xD707792B) - (v342 & 0x2B) + (v342 ^ 0x94)) ^ 0xD203BF2A;
  v382 = 4 * ((v381 - ((2 * v381) & 0xA098696) - 180436149) ^ 0xF03A0543);
  STACK[0x6870] = v382;
  v383 = (_DWORD *)(v330 + v382);
  STACK[0x6850] = v330 + v382;
  LODWORD(v382) = v374 ^ *(_DWORD *)(v336 + 4 * (HIBYTE(v353) ^ 0xB8));
  LODWORD(v375) = (BYTE1(v346) ^ 0x11) + ((v346 >> 8) & 0x47 ^ 0x69CBFC46) - ((BYTE1(v346) ^ 0x11) & 0x47);
  v384 = (((v312 ^ 0x4363EAA5) - 1999255639) ^ ((v312 ^ 0xA70E10B5) + 1824013753) ^ ((v312 ^ 0x9F490A99) + 1426007957))
       - (((v376 ^ 0x9A05EA91) - 341169785) ^ ((v376 ^ 0x5EC7B6A1) + 795375031) ^ ((v376 ^ LODWORD(STACK[0x2A8]))
                                                                                 - 834048081))
       - 501284919;
  v385 = (v384 ^ LODWORD(STACK[0x2A4])) & (2 * (v384 & 0x852D72CF)) ^ v384 & 0x852D72CF;
  v386 = ((2 * (v384 ^ 0x1042D62)) ^ 0x852BF5A) & (v384 ^ 0x1042D62) ^ (2 * (v384 ^ 0x1042D62)) & 0x84295FAC;
  v387 = (v386 ^ 0x80001F89) & (4 * v385) ^ v385;
  v388 = ((4 * (v386 ^ 0x842940A5)) ^ 0x10A57EB4) & (v386 ^ 0x842940A5) ^ (4 * (v386 ^ 0x842940A5)) & 0x84295FAC;
  v389 = (v388 ^ 0x215EA9) & (16 * v387) ^ v387;
  v390 = ((16 * (v388 ^ 0x84080109)) ^ 0x4295FAD0) & (v388 ^ 0x84080109) ^ (16 * (v388 ^ 0x84080109)) & 0x84295FA0;
  v391 = v389 ^ 0x84295FAD ^ (v390 ^ 0x15A2D) & (v389 << 8);
  v392 = (v391 << 16) & 0x4290000 ^ v391 ^ ((v391 << 16) ^ 0x5FAD0000) & (((v390 ^ 0x8428052D) << 8) & 0x84290000 ^ 0x4200000 ^ (((v390 ^ 0x8428052D) << 8) ^ 0x295F0000) & (v390 ^ 0x8428052D));
  v393 = (v310 ^ 0x14755DCA)
       - (((v372 ^ 0xCB05261) - 94146229) ^ ((v372 ^ 0xB900B31E) + 1339265078) ^ ((v372 ^ 0x1F3C58F0) - 370181156))
       + 1586547818;
  v394 = (v393 ^ 0x9C7C83D2) & (2 * (v393 & 0xDE7E1394)) ^ v393 & 0xDE7E1394;
  v395 = ((2 * (v393 ^ 0x58A2DA)) ^ 0xBC4D629C) & (v393 ^ 0x58A2DA) ^ (2 * (v393 ^ 0x58A2DA)) & 0xDE26B14E;
  v396 = (v395 ^ 0x98020102) & (4 * v394) ^ v394;
  v397 = ((4 * (v395 ^ 0x42229142)) ^ 0x789AC538) & (v395 ^ 0x42229142) ^ (4 * (v395 ^ 0x42229142)) & 0xDE26B14C;
  v398 = v396 ^ 0xDE26B14E ^ (v397 ^ 0x58028100) & (16 * v396);
  v399 = (16 * (v397 ^ 0x86243046)) & 0xDE26B140 ^ 0x1C04A10E ^ ((16 * (v397 ^ 0x86243046)) ^ 0xE26B14E0) & (v397 ^ 0x86243046);
  v400 = (v398 << 8) & 0xDE26B100 ^ v398 ^ ((v398 << 8) ^ 0x26B14E00) & v399;
  v401 = (v400 << 16) & 0x5E260000 ^ v400 ^ ((v400 << 16) ^ 0x314E0000) & ((v399 << 8) & 0x5E260000 ^ 0x58060000 ^ ((v399 << 8) ^ 0x26B10000) & v399);
  v402 = v384 ^ (2 * v392);
  LODWORD(v382) = v382 ^ *(_DWORD *)(v379 + 4 * (v375 ^ 0x69CBFC42)) ^ *v383;
  LODWORD(v382) = ((v382 ^ 0xAE680E4E) - 1692456562) ^ ((v382 ^ 0x51868188) + 1693558348) ^ ((v382 ^ 0x356657FA)
                                                                                           + 1142842);
  v403 = (((v331 ^ LODWORD(STACK[0x2AC])) + 213632001) ^ ((v331 ^ 0xAE55F7B0) - 1231644922) ^ ((v331 ^ 0x70A58B39)
                                                                                             + 1751575437))
       - v382
       + 114949385;
  LODWORD(v375) = (v403 ^ 0xE47D2E04) & (2 * (v403 & 0xF47DAEA5)) ^ v403 & 0xF47DAEA5;
  v404 = ((2 * (v403 ^ 0xEC143B46)) ^ 0x30D32BC6) & (v403 ^ 0xEC143B46) ^ (2 * (v403 ^ 0xEC143B46)) & 0x186995E2;
  LODWORD(v375) = (v404 ^ 0x18410181) & (4 * v375) ^ v375;
  v405 = ((4 * (v404 ^ 0x8289421)) ^ 0x61A6578C) & (v404 ^ 0x8289421) ^ (4 * (v404 ^ 0x8289421)) & 0x186995E0;
  LODWORD(v375) = (v405 ^ 0x201583) & (16 * v375) ^ v375;
  v406 = ((16 * (v405 ^ 0x18498063)) ^ 0x86995E30) & (v405 ^ 0x18498063) ^ (16 * (v405 ^ 0x18498063)) & 0x186995E0;
  LODWORD(v375) = v375 ^ 0x186995E3 ^ (v406 ^ 0x914C3) & ((_DWORD)v375 << 8);
  LODWORD(v375) = ((_DWORD)v375 << 16) & 0x18690000 ^ v375 ^ (((_DWORD)v375 << 16) ^ 0x15E30000) & (((v406 ^ 0x186081C3) << 8) & 0x18690000 ^ 0x10680000 ^ (((v406 ^ 0x186081C3) << 8) ^ 0x69950000) & (v406 ^ 0x186081C3));
  v407 = (((v316 ^ 0x5EED32C8) - 1523279759) ^ ((v316 ^ 0xD94A8725) + 580070814) ^ ((v316 ^ 0xB3DFDC18) + 1208383137))
       - (((v380 ^ 0x8505BB72) + 20863038) ^ ((v380 ^ 0x573C6E36) - 754479750) ^ ((v380 ^ 0xE641BCB1) + 1652187135))
       + 1023341368;
  v408 = (v407 ^ LODWORD(STACK[0x2B4])) & (2 * (v407 & 0xD4D630B6)) ^ v407 & 0xD4D630B6;
  v409 = ((2 * (v407 ^ 0xF08E7957)) ^ LODWORD(STACK[0x2B0])) & (v407 ^ 0xF08E7957) ^ (2 * (v407 ^ 0xF08E7957)) & 0x245849E0;
  v410 = (v409 ^ 0x1009C1) & (4 * v408) ^ v408;
  v411 = ((4 * (v409 ^ 0x24484821)) ^ 0x91612784) & (v409 ^ 0x24484821) ^ (4 * (v409 ^ 0x24484821)) & 0x245849E0;
  v412 = (v411 ^ 0x400181) & (16 * v410) ^ v410;
  v413 = ((16 * (v411 ^ 0x24184861)) ^ 0x45849E10) & (v411 ^ 0x24184861) ^ (16 * (v411 ^ 0x24184861)) & 0x245849E0;
  v414 = v412 ^ 0x245849E1 ^ (v413 ^ 0x40008E1) & (v412 << 8);
  v415 = -258619529 * (v402 ^ 0xCE7AE5AF);
  v416 = v415
       - 1045917405
       * (v407 ^ (2
                * ((v414 << 16) & 0x24580000 ^ v414 ^ ((v414 << 16) ^ 0x49E10000) & (((v413 ^ 0x205841E1) << 8) & 0x24580000 ^ 0x24100000 ^ (((v413 ^ 0x205841E1) << 8) ^ 0x58490000) & (v413 ^ 0x205841E1)))) ^ 0x2BFE2324);
  v417 = 485362163 * (v403 ^ (2 * v375) ^ 0x1B9A8A45);
  v418 = v415 - 2033270891 * (v393 ^ (2 * v401) ^ 0x9F19032);
  v419 = v416 - v418 + v417;
  v420 = v418 + v415 - v417 - ((2 * (v418 + v415 - v417)) & 0xF72F1A7C) - 73953986;
  v421 = v420 ^ v419;
  v422 = v421 ^ -v418;
  v423 = (((v372 ^ 0xC442F280) + 848417196) ^ ((v372 ^ 0x1877D46D) - 291178681) ^ ((v372 ^ 0x76B99F62) - 2140488630))
       - (((v420 ^ 0xC6D392E9) + 959212823) ^ ((v420 ^ 0xA29CD66D) + 1566779795) ^ ((v420 ^ 0x9FD8C9BA) + 1613182534));
  v424 = (((v380 ^ 0xBD4B2892) + 963693534) ^ ((v380 ^ 0x29DA5F65) - 1377715157) ^ ((v380 ^ 0xA0E91E02) + 617807182))
       - (((v422 ^ 0xEB34ADE9) + 1382217495) ^ ((v422 ^ 0x3CDE2D9F) - 2054654111) ^ ((v422 ^ 0x2C7D0D48) - 1792321608));
  v425 = v382
       + v416
       - (((v422 ^ 0x9F60118B) + 641092469) ^ ((v422 ^ 0x74A0B470) - 839455088) ^ ((v422 ^ 0x105728C5) - 1459523013));
  v426 = v424 + 1299373821;
  v427 = (-2
        - ((~((((v424 + 1299373821) >> 8) ^ 0xB682763B) & 0x9623512C) | 0xF478794E)
         + ((((v424 + 1299373821) >> 8) ^ 0xB682763B) & 0x9420510C | 0xB8786B1))) ^ (((v424 + 1299373821) >> 8) ^ 0xB682763B) & 0x962351D3;
  v428 = (v427 & 0xF93A8B0B ^ 0x99008209) + (v427 & 0x6C574F4 ^ 0x2402065) - 1;
  v429 = STACK[0xD5C0] + 4 * (v428 ^ 0x6F38DB18);
  v430 = v425 + 516599945;
  v431 = (-944204717
        - ((((v425 + 516599945) >> 8) ^ 0x93F1EC57) & 0x10422200 | 0xC7B89453)
        + ((((v425 + 516599945) >> 8) ^ 0x93F1EC57) & 0x380052 | 0x38476BAC)) ^ (((v425 + 516599945) >> 8) ^ 0x93F1EC57) & 0x107A22AD;
  v432 = (v431 & 0x27828431 ^ 0x47808401) + (v431 ^ 0x28374BFE) - ((v431 ^ 0x28374BFE) & 0x67828431);
  v433 = v429
       + 4 * (v432 ^ 0x77F2A434)
       + 4
       * (-824078705
        - (((v428 ^ 0xC4F2F68A608376BLL) + 0x33B0D09707D162FELL) ^ ((v428 ^ 0xD43E7317A323501) + 0x72BC18CEDBEB6098) ^ ((v428 ^ 0x10CC859B302D972) - 0x410CC859ED24731BLL)));
  v423 -= 443222406;
  v434 = (((v376 ^ LODWORD(STACK[0x2B8])) + 895282472) ^ ((v376 ^ 0x62C604F0) + 325699560) ^ ((v376 ^ 0x5D11DA49)
                                                                                            + 750655839))
       - (((v421 ^ 0xADA03EE4) + 2147118687) ^ ((v421 ^ 0x44A7E315) - 1761758288) ^ ((v421 ^ 0x129050CF) - 1060503434))
       + 182486553;
  v435 = *(_DWORD *)(STACK[0xD588]
                   + 4
                   * ((((v376 ^ LOBYTE(STACK[0x2B8])) + 40) ^ ((v376 ^ 0xF0) - 24) ^ ((v376 ^ 0x49) + 95))
                                     - (((v421 ^ 0xE4) + 95) ^ ((v421 ^ 0x15) - 80) ^ ((v421 ^ 0xCF) + 118))
                                     + 25)) ^ *(_DWORD *)(STACK[0xD5A0] + 4 * HIBYTE(v423)) ^ *(_DWORD *)(STACK[0xD598] + 4 * BYTE2(v430) - 0x3B9B8378DDDB256CLL) ^ *(_DWORD *)(v429 - 0x7036FF22EDE636FDLL);
  v436 = (int *)(STACK[0xD5A0] + 4 * HIBYTE(v434));
  v437 = STACK[0xD5A0] + 4 * HIBYTE(v426);
  v438 = STACK[0xD598] + 4 * BYTE2(v423);
  v439 = STACK[0xD598] + 4 * BYTE2(v426);
  v440 = STACK[0xD598] + 4 * BYTE2(v434);
  v441 = 4 * HIBYTE(v430);
  v442 = (_DWORD *)(STACK[0xD5A0] + v441);
  v443 = ((v423 >> 8) ^ 0xF4300BB6) & 0x736EB8 ^ LODWORD(STACK[0x2BC]) ^ ((((v423 >> 8) ^ 0xF4300BB6) & 0x24736E47 ^ 0x59969A99)
                                                                        - ((2
                                                                          * (((v423 >> 8) ^ 0xF4300BB6) & 0x24736E47 ^ 0x59969A99)) & 0x138EA90C)
                                                                        - 1949870714);
  v444 = ((2 * v443) & 0x55F34F80) - v443 + 1426479167;
  v445 = v433
       + 4
       * (-2686423175
        - (((v432 ^ 0x30B30AFE28444394) - 0x70B30AFEFFA97727) ^ ((v432 ^ 0x1BF6CD4E87DF1A5FLL) - 0x5BF6CD4E50322EECLL) ^ ((v432 ^ 0x2B45C7B0D869FDFFLL) - 0x2B45C7B00F84C94CLL)))
       + 4 * (v444 ^ 0xF136528F);
  LODWORD(v375) = (-1356035872
                 - (((v434 >> 8) ^ 0xF79ED8DB) & 0x714F71A9)
                 + ((2 * (((v434 >> 8) ^ 0xF79ED8DB) & 0x714F71A9)) | 0xA1A6E78A)
                 + 859) ^ ((v434 >> 8) ^ 0xF79ED8DB) & 0x714F7156;
  v446 = v445
       + 4
       * (-2440005262
        - (((v444 ^ 0x2526C4A9B790E53) + 0x3DAD93B504DF25AELL) ^ ((v444 ^ 0x332B308A52CEE871) - 0x732B308A32973C70) ^ ((v444 ^ 0x31795CC03881B4ADLL) + 0x4E86A33FA7279F54)))
       + 4 * (v375 ^ 0x50D3731E);
  v447 = *(_DWORD *)(STACK[0xD588] + 4 * v426);
  v448 = *(_DWORD *)(STACK[0xD588] + 4 * v430);
  v449 = *(_DWORD *)(STACK[0xD588] + 4 * v423);
  v450 = LODWORD(STACK[0x6760])
       + (((v435 ^ 0x598FA404) - 1502585860) ^ ((v435 ^ 0xBCEBF26B) + 1125387669) ^ ((v435 ^ 0x45BC665A) - 1169974874));
  v451 = (v450 ^ 0xF79FED03) & (2 * (v450 & 0xF79F8C23)) ^ v450 & 0xF79F8C23;
  v452 = ((2 * (v450 ^ 0x509EE507)) ^ 0x4E02D248) & (v450 ^ 0x509EE507) ^ (2 * (v450 ^ 0x509EE507)) & 0xA7016924;
  v453 = v451 ^ 0xA7016924 ^ (v452 ^ 0x6004000) & (4 * v451);
  v454 = (4 * (v452 ^ 0xA1012924)) & 0xA7016924 ^ 0x23004924 ^ ((4 * (v452 ^ 0xA1012924)) ^ 0x9C05A490) & (v452 ^ 0xA1012924);
  v455 = (16 * v453) & 0xA7016920 ^ v453 ^ ((16 * v453) ^ 0x70169240) & v454;
  v456 = (16 * v454) & 0xA7016920 ^ 0x87016924 ^ ((16 * v454) ^ 0x70169240) & v454;
  v457 = v455 ^ 0x21012000 ^ (v455 << 8) & 0xA7016900 ^ ((v455 << 8) ^ 0x1692400) & v456;
  v458 = LODWORD(STACK[0x6750]) ^ 0x22874C9B ^ v450 ^ (2
                                                     * ((v457 << 16) & 0x27010000 ^ v457 ^ ((v457 << 16) ^ 0x69240000) & ((v456 << 8) & 0x27010000 ^ 0x26000000 ^ ((v456 << 8) ^ 0x1690000) & v456)));
  v459 = STACK[0x6A20];
  v460 = LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6A20]);
  v461 = v460 ^ LODWORD(STACK[0x6A40]) ^ (v458 + 137743572 - ((2 * v458) & 0x106B99A8));
  v462 = *(_DWORD *)(v438 - 0x3B9B8378DDDB256CLL);
  v463 = *v436;
  v464 = *(_DWORD *)(v433 - 0x7036FF22EDE636FDLL);
  v465 = *(_DWORD *)(v439 - 0x3B9B8378DDDB256CLL);
  LODWORD(v439) = *(_DWORD *)(v440 - 0x3B9B8378DDDB256CLL);
  LODWORD(v437) = *(_DWORD *)v437;
  LODWORD(v438) = *(_DWORD *)(v445 - 0x7036FF22EDE636FDLL);
  LODWORD(v379) = STACK[0x6AB0];
  v466 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AB0]) ^ 0x3E4A)) - 4;
  LODWORD(v440) = *v442;
  v467 = *(_DWORD *)(v446 - 0x7036FF22EDE636FDLL);
  v468 = STACK[0x6910];
  *(_BYTE *)(v468 + STACK[0x6A30]) = (v466[v461 ^ 0x75] + 92) ^ 0x9A;
  v469 = v379;
  v470 = (char *)*(&off_1015B46D0 + (int)(v379 ^ 0x3491)) - 8;
  *(_BYTE *)(v468 + STACK[0x68A0]) = v470[HIBYTE(v461) ^ 0xF6] ^ 0xDF;
  v471 = v468;
  v472 = v460 ^ LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x69D0]) ^ v465 ^ v440 ^ v449 ^ v467;
  LODWORD(v468) = STACK[0x69E0];
  v473 = ((LODWORD(STACK[0x68D0]) ^ 0x24505C0)
        + (STACK[0x69E0] & 0xD90CD4D0 ^ LODWORD(STACK[0x2C0]))
        - ((LODWORD(STACK[0x68D0]) ^ 0x24505C0) & 0xD90CD4D0)) ^ 0x150CC5D4;
  *(_BYTE *)(v471 + ((-901179410 - v473 + ((2 * v473) & 0x6B6DB264) + 3799) ^ 0x15F299AC)) = (v466[v472 ^ 0x94]
                                                                                            + 92) ^ 0x6F;
  v474 = (char *)*(&off_1015B46D0 + (v469 ^ 0x3E43)) - 4;
  *(_BYTE *)(v471 + STACK[0x68B0]) = v474[BYTE2(v461) ^ 0xD6] ^ BYTE2(v461) ^ 0x12;
  LODWORD(v438) = LODWORD(STACK[0x6790]) ^ v459 ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x69A0]) ^ v448 ^ v439 ^ v437 ^ v438;
  v475 = ((LODWORD(STACK[0x6900]) ^ 0xCD016A04) - ((2 * (LODWORD(STACK[0x6900]) ^ 0xCD016A04)) & 0x8AD9A400) + 1164759560) ^ 0x656CDE19;
  *(_BYTE *)(v471 + ((1436525727 - (v475 | 0x559FA49F) + (v475 | 0xAA605B60)) ^ 0x569F96DELL)) = (v466[v438 ^ 0x69]
                                                                                                + 92) ^ 0x62;
  *(_BYTE *)(v471
           + ((((2 * (LODWORD(STACK[0x6A50]) ^ 0xD497D072)) | 0x7D47F0A)
             - (LODWORD(STACK[0x6A50]) ^ 0xD497D072)
             - 65683333) ^ 0xC6834458)) = v470[HIBYTE(v472) ^ 0x58] ^ 0x91;
  *(_BYTE *)(v471 + STACK[0x6A90]) = BYTE2(v472) ^ 0x67 ^ v474[BYTE2(v472) ^ 0xA2] ^ 0xF3;
  v476 = v460 ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x68E0]) ^ v462 ^ v463 ^ v447 ^ v464;
  *(_BYTE *)(v471 + STACK[0x68C0]) = v470[HIBYTE(v476) ^ 0xEALL] ^ 0x9E;
  LOBYTE(v439) = (v466[v476 ^ 0xA0] + 92) ^ 0x5C;
  v477 = STACK[0xD5B0];
  v478 = STACK[0xD5B0];
  *(_BYTE *)(v477 + (((LODWORD(STACK[0x6A80]) ^ 0xC3AE9379) - 1) ^ 0xD25038D7)) = v439;
  v476 ^= 0x2A766A72u;
  *(_BYTE *)(v477 + STACK[0x6920]) = BYTE2(v476) ^ 0xCB ^ v474[BYTE2(v476) ^ 0xEFLL];
  STACK[0xD5C8] = v336;
  STACK[0xD5A8] = v350;
  STACK[0xD590] = STACK[0x6890];
  STACK[0xD590] = STACK[0x6860];
  STACK[0xD5A8] = STACK[0x6850] - STACK[0x6870];
  STACK[0xD5A0] = (unint64_t)&v442[v441 / 0xFFFFFFFFFFFFFFFCLL];
  v479 = (char *)*(&off_1015B46D0 + v469 - 14229) - 8;
  *(_BYTE *)(v477 + STACK[0x6A10]) = BYTE1(v476) ^ 0x67 ^ v479[BYTE1(v476) ^ 0x90];
  v480 = v446
       + 4
       * (-286720104
        - (((v375 ^ 0x6CBCF43C6CC5ACLL) - 0x406CBCF47DA8B6DALL) ^ ((v375 ^ 0x145072CF9B411EE1)
                                                                               + 0x6BAF8D30257A9269) ^ ((v375 ^ 0x143CCE3BF7FEA853) + 0x2BC331C449C524DBLL)));
  v481 = (LODWORD(STACK[0x6930]) ^ 0xB76E92C8 | 0x91FD9711) - (LODWORD(STACK[0x6930]) ^ 0xB76E92C8 | 0x6E0268EE);
  v482 = (1209793812
        - (LODWORD(STACK[0x69C0]) ^ 0xF9B4A80 | 0x481BFD14)
        + (LODWORD(STACK[0x69C0]) ^ 0xF9B4A80 | LODWORD(STACK[0x2C4]))) ^ 0xF7E40CAB;
  *(_BYTE *)(v477 + ((((2 * v482) | 0xEAE25788) - v482 - 1970351044) ^ 0x2B14C4ABLL)) = BYTE1(v472) ^ v479[BYTE1(v472) ^ 0xA1] ^ 0xCC;
  LODWORD(v446) = (((2 * (LODWORD(STACK[0x6940]) ^ 0x55311934)) | 0x738903BC)
                 - (LODWORD(STACK[0x6940]) ^ 0x55311934)
                 - 969179614) ^ 0x91E4CC9C;
  *(_BYTE *)(v477 + ((v446 - ((2 * (_DWORD)v446) & 0x320A6238) - 1727712996) ^ 0x75EACEC1)) = ((unsigned __int16)(v438 ^ 0x5E5D) >> 8) ^ 0xD8 ^ v479[((unsigned __int16)(v438 ^ 0x5E5D) >> 8) ^ 0x65];
  *(_BYTE *)(v477
           + ((((v481 + 1845651694) & 0x54C5D531 ^ 0x54045520)
             + ((v481 + 1845651694) ^ 0x23FB8897)
             - (((v481 + 1845651694) ^ 0x23FB8897) & 0x54C5D533)) ^ 0x4053F3D6)) = BYTE1(v461) ^ 0x6C ^ v479[((BYTE1(v461) ^ 0x42) & 0xFE | (v461 >> 8) & 1) ^ 0xE3];
  STACK[0xD5C0] = v480;
  v483 = 1297044210
       - (LODWORD(STACK[0x6AA0]) ^ 0x6631D06C | 0x4D4F52F2)
       + (LODWORD(STACK[0x6AA0]) ^ 0x6631D06Cu | LODWORD(STACK[0x2C8]));
  v484 = (((v468 ^ 0x73CE2CBF) - 1942891711) ^ ((v468 ^ 0xC5A119FB) + 979297797) ^ ((v468 ^ 0xA7919EEF) + 1483628817))
       + 385520014;
  LODWORD(v477) = (v484 ^ 0xFB37198D) & (2 * (v484 & 0xFB041A2D)) ^ v484 & 0xFB041A2D;
  v485 = ((2 * (v484 ^ 0x4F371D87)) ^ 0x68660F54) & (v484 ^ 0x4F371D87) ^ (2 * (v484 ^ 0x4F371D87)) & 0xB43307AA;
  LODWORD(v446) = v485 ^ 0x941100AA;
  v486 = (v485 ^ 0x20210102) & (4 * v477) ^ v477;
  LODWORD(v477) = ((4 * v446) ^ 0xD0CC1EA8) & v446 ^ (4 * v446) & 0xB43307A8;
  v487 = (v477 ^ 0x900006A2) & (16 * v486) ^ v486;
  LODWORD(v477) = ((16 * (v477 ^ 0x24330102)) ^ 0x43307AA0) & (v477 ^ 0x24330102) ^ (16 * (v477 ^ 0x24330102)) & 0xB43307A0;
  v488 = v487 ^ 0xB43307AA ^ (v477 ^ 0x30020A) & (v487 << 8);
  *(_BYTE *)(v478 + STACK[0x69B0]) = ((v438 ^ 0x301F5E5D) >> 16) ^ 0xBE ^ v474[((v438 ^ 0x301F5E5D) >> 16) ^ 0x72];
  v489 = v484 ^ (2
               * ((v488 << 16) & 0x34330000 ^ v488 ^ ((v488 << 16) ^ 0x7AA0000) & (((v477 ^ 0xB403050A) << 8) & 0xB4330000 ^ 0x4300000 ^ (((v477 ^ 0xB403050A) << 8) ^ 0x33070000) & (v477 ^ 0xB403050A))));
  *(_BYTE *)(v478 + (v483 ^ 0xC57FD6CALL)) = v470[BYTE3(v438) ^ 0xFLL] ^ 0x63;
  LODWORD(v471) = (((v489 ^ 0x27B7438E) + 1385169572) ^ ((v489 ^ 0x7714E7E7) + 36939467) ^ ((v489 ^ 0xCB85B110)
                                                                                          - 1096617922))
                + 1951253510;
  LODWORD(v480) = LODWORD(STACK[0x68F0]) ^ (v471 < 0x624F185B);
  v490 = v471 < LODWORD(STACK[0x6AC0]);
  if ((_DWORD)v480)
    v490 = STACK[0x68F0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((94 * (v490 ^ 1)) ^ v469)) - 12))();
}

uint64_t sub_100B489F0()
{
  int v0;

  v0 = STACK[0x6800];
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x67E0]) ^ 0x8D4F2CC3;
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x67C0]) ^ 0x6C39B90B;
  LODWORD(STACK[0x69D0]) = LODWORD(STACK[0x67F0]) ^ 0x3750EA9D;
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x67D0]) ^ 0x5527FD9F;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B48ABC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;

  LODWORD(STACK[0x723C]) = v2;
  LODWORD(STACK[0xD570]) = v3;
  LODWORD(STACK[0xD574]) = a1;
  LODWORD(STACK[0x980C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 + 5353) ^ 0x29A1)))();
}

uint64_t sub_100B48B10()
{
  int v0;

  v0 = STACK[0x67A0] + 7626;
  LODWORD(STACK[0xD5BC]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B48B44()
{
  uint64_t v0;
  int v1;
  void (*v2)(unint64_t);

  v2 = (void (*)(unint64_t))STACK[0x5A40];
  ((void (*)(uint64_t))STACK[0x5A40])(v0 - 0x7036FF22EDE636FDLL);
  v2(STACK[0xD588]);
  v2(STACK[0xD590]);
  v2(STACK[0xD5A0]);
  v2(STACK[0xD5C8]);
  v2(STACK[0xD5A8]);
  v2(STACK[0xD598] - 0x3B9B8378DDDB256CLL);
  v2(STACK[0xD578]);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 5358)) - 12))(STACK[0x6A60]);
}

uint64_t sub_100B48C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  STACK[0xD1A8] = v4 - 32;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (v5 ^ (62
                                                                                                 * (v7 + 1375104717 == v6))))
                                                                              - 4))(a1, a2, a3, a4, 1772489163);
}

uint64_t sub_100B48D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned int a3@<W3>, int a4@<W4>, char a5@<W5>, char a6@<W6>, char a7@<W7>, unsigned int a8@<W8>)
{
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  char v14;
  _QWORD *v15;
  _DWORD *v16;
  _BYTE *v17;
  _BOOL4 v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  char v23;

  v17 = (_BYTE *)(a1 + a8);
  v18 = v8 < v9;
  v19 = ((*(_DWORD *)(*v15 + (*v16 & a3)) ^ v17) & 0x7FFFFFFF) * a4;
  v20 = (v19 >> ((v10 + a5) & a6 ^ a7)) ^ v19;
  v21 = *(_QWORD *)(a2 + 8 * (v10 ^ v11)) + (a8 & 0xF | (16 * ((v20 * a4) >> 24)));
  v22 = a8 + 1;
  v23 = *(_BYTE *)(v21 - 4) ^ *v17 ^ (v20 * v14);
  if (v18 == v22 > v12)
    v18 = v22 + v13 < v8;
  *v17 = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((62 * !v18) ^ v10)) - 4))();
}

uint64_t sub_100B48DBC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v1 + 2131825588) ^ 0x7F114E62) * (v0 == 1797303612)) ^ v1))
                            - ((v1 + 2131825588) & 0x80EED37E)
                            + 4210))();
}

uint64_t sub_100B48E28()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 1677) ^ 0x3A66)) - 4))();
}

uint64_t sub_100B48E48()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x88D0] == 0) * (((STACK[0x6508] + 6451) ^ 0x3377) - 6805)) ^ (STACK[0x6508] + 6292)))
                            - 4))();
}

uint64_t sub_100B48EA0()
{
  int v0;
  unint64_t v1;

  STACK[0x6AC0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13303 * (*(_QWORD *)STACK[0x4A48] == 0)) ^ v0))
                            - (((v0 - 6750) | 0x1002u) ^ 0x108ELL)))();
}

uint64_t sub_100B48EF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BOOL4 v9;

  v3 = v0 - 2638;
  v4 = (v0 + 1470109468) & 0xA85FDE87;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 2638)) - 4;
  v6 = (_QWORD *)STACK[0x4A48];
  STACK[0xEE28] = STACK[0x4A48];
  *(_DWORD *)(v1 + 784) = -299994601 - 1705718857 * ((v2 - 240) ^ 0x3D92DF59) + v0 - 2638 - 26;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  v7 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  v9 = *(_DWORD *)(v1 + 788) == (v4 ^ 0x1082) && *v6 != 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((97 * v9) ^ (v3 | 0xA2F))) - 12))(v7);
}

uint64_t sub_100B48FC0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = STACK[0x6AD8];
  v5 = STACK[0x2D28];
  *(_QWORD *)(v2 + 800) = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ STACK[0x2D28];
  *(_DWORD *)(v2 + 792) = (v1 + 427180620) ^ v5;
  *(_QWORD *)(v2 + 784) = a1;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v1 ^ 0xA3D)) - 12))(v6);
}

uint64_t sub_100B49010()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  *(_QWORD *)(v1 + 784) = 0;
  v5 = STACK[0x3028];
  *(_DWORD *)(v1 + 792) = (v0 + 427180620) ^ STACK[0x3028];
  *(_QWORD *)(v1 + 800) = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  if (*(_DWORD *)STACK[0x4A78])
    v7 = 1;
  else
    v7 = *(_QWORD *)STACK[0x49F0] == 0;
  v8 = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v8 * ((v0 ^ 0x1207) - 618)) ^ (v0 + 16616)))
                                          - ((v0 + 1883250582) | 0x809040E7)
                                          + 4040192243))(v6);
}

uint64_t sub_100B490B0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  __int16 v19;
  int v20;
  int v21;
  unint64_t v22;
  unsigned int v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  int32x4_t v40;
  int8x16_t v41;
  int32x4_t v42;
  uint16x8_t v43;
  uint8x16_t v44;
  uint16x8_t v45;
  uint16x8_t v46;
  int8x16x4_t v48;

  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v3 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v2 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v2 ^ 0x83C25199;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  LODWORD(v9) = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  STACK[0xEF98] = 0;
  LODWORD(v7) = -2084417127 * v9;
  v10 = 16777619 * ((-2084417127 * (_DWORD)v9 + 7) ^ (-2084417127 * v9)) % 7;
  v11 = *(_BYTE *)((unint64_t)&STACK[0xEF98] | v10);
  *(_BYTE *)((unint64_t)&STACK[0xEF98] | v10) = 0;
  LOBYTE(STACK[0xEF9F]) = v11;
  v12 = 16777619 * ((-2084417127 * (_DWORD)v9 + 6) ^ (-2084417127 * v9)) % 6;
  v13 = *(_BYTE *)((unint64_t)&STACK[0xEF98] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEF98] | v12) = STACK[0xEF9E];
  LOBYTE(STACK[0xEF9E]) = v13;
  v14 = 16777619 * ((-2084417127 * (_DWORD)v9 + 5) ^ (-2084417127 * v9)) % 5;
  v15 = *(_BYTE *)((unint64_t)&STACK[0xEF98] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEF98] | v14) = STACK[0xEF9D];
  LOBYTE(STACK[0xEF9D]) = v15;
  v16 = STACK[0xEF98];
  LOBYTE(STACK[0xEF98]) = STACK[0xEF9C];
  LOBYTE(STACK[0xEF9C]) = v16;
  v17 = 16777619 * ((-2084417127 * (_DWORD)v9 + 3) ^ (-2084417127 * v9)) % 3;
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEF98] | v17);
  *(_BYTE *)((unint64_t)&STACK[0xEF98] | v17) = STACK[0xEF9B];
  LOBYTE(STACK[0xEF9B]) = v18;
  v19 = STACK[0xEF99];
  LOBYTE(STACK[0xEF9A]) = STACK[0xEF98];
  LOWORD(STACK[0xEF98]) = v19;
  v20 = (v7 * v7) ^ v7;
  LODWORD(v7) = (v7 + v7 * v7) ^ v7;
  v21 = v7 + 16777619 * LODWORD(STACK[0xEF9C]);
  LODWORD(STACK[0xEF98]) = v20 + 16777619 * LODWORD(STACK[0xEF98]);
  LODWORD(STACK[0xEF9C]) = v21;
  v22 = STACK[0xEF98] ^ a1;
  v23 = 899433627 * (v22 - v20);
  LODWORD(v22) = 899433627 * (HIDWORD(v22) - v7);
  LODWORD(STACK[0xEFA0]) = v23;
  LODWORD(STACK[0xEFA4]) = v22;
  LOBYTE(STACK[0xEFA1]) = v23;
  LOBYTE(STACK[0xEFA0]) = BYTE2(v23);
  LOBYTE(STACK[0xEFA2]) = BYTE1(v23);
  LODWORD(v7) = HIBYTE(v23);
  v24 = (_BYTE *)((unint64_t)&STACK[0xEFA0] | v17);
  LOBYTE(v23) = *v24;
  *v24 = v7;
  LOBYTE(STACK[0xEFA3]) = v23;
  LOBYTE(v7) = STACK[0xEFA0];
  LOBYTE(STACK[0xEFA0]) = v22;
  LOBYTE(STACK[0xEFA4]) = v7;
  v25 = (_BYTE *)((unint64_t)&STACK[0xEFA0] | v14);
  LOBYTE(v24) = *v25;
  *v25 = BYTE1(v22);
  LOBYTE(STACK[0xEFA5]) = (_BYTE)v24;
  v26 = (_BYTE *)((unint64_t)&STACK[0xEFA0] | v12);
  LOBYTE(v25) = *v26;
  *v26 = BYTE2(v22);
  LOBYTE(STACK[0xEFA6]) = (_BYTE)v25;
  v27 = (_BYTE *)((unint64_t)&STACK[0xEFA0] | v10);
  LOBYTE(v10) = *(_BYTE *)((unint64_t)&STACK[0xEFA0] | v10);
  *v27 = BYTE3(v22);
  LOBYTE(STACK[0xEFA7]) = v10;
  v28 = STACK[0xEFA0];
  v29 = (-2084417127 * STACK[0xEFA0]) ^ v9;
  for (i = 1; i != 2; ++i)
  {
    v31 = 8 * i;
    v32 = 8 * (16777619 * ((v29 + (_DWORD)i) ^ v29) % i);
    v33 = *(_QWORD *)(v28 + v32) ^ *(_QWORD *)(v28 + 8 * i);
    *(_QWORD *)(v28 + v31) = v33;
    v34 = *(_QWORD *)(v28 + v32) ^ v33;
    *(_QWORD *)(v28 + v32) = v34;
    *(_QWORD *)(v28 + v31) = *(_QWORD *)(v28 + 8 * i) ^ v34;
  }
  v35 = 0;
  v36 = (__n128)xmmword_1015070D0;
  v37 = (__n128)xmmword_1015070E0;
  v38 = (__n128)xmmword_1015070F0;
  v39 = (__n128)xmmword_101507100;
  v40 = vdupq_n_s32(v29);
  v41 = *(int8x16_t *)&STACK[0x4950];
  v42.i64[0] = 0x1000000010;
  v42.i64[1] = 0x1000000010;
  v43.i64[0] = 0x9B009B009B009BLL;
  v43.i64[1] = 0x9B009B009B009BLL;
  do
  {
    v44 = *(uint8x16_t *)(v28 + v35);
    v45 = vmovl_high_u8(v44);
    v46 = vmovl_u8(*(uint8x8_t *)v44.i8);
    v48.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v38, v40), vsubq_s32((int32x4_t)v38, v40)), (int8x16_t)v40), (int8x16_t)vmull_high_u16(v46, v43));
    v48.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v37, v40), vsubq_s32((int32x4_t)v37, v40)), (int8x16_t)v40), (int8x16_t)vmull_u16(*(uint16x4_t *)v45.i8, (uint16x4_t)0x9B009B009B009BLL));
    v48.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v39, v40), vsubq_s32((int32x4_t)v39, v40)), (int8x16_t)v40), (int8x16_t)vmull_u16(*(uint16x4_t *)v46.i8, (uint16x4_t)0x9B009B009B009BLL));
    v48.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v36, v40), vsubq_s32((int32x4_t)v36, v40)), (int8x16_t)v40), (int8x16_t)vmull_high_u16(v45, v43));
    *(int8x16_t *)(v28 + v35) = vqtbl4q_s8(v48, v41);
    v35 += 16;
    v39 = (__n128)vaddq_s32((int32x4_t)v39, v42);
    v38 = (__n128)vaddq_s32((int32x4_t)v38, v42);
    v37 = (__n128)vaddq_s32((int32x4_t)v37, v42);
    v36 = (__n128)vaddq_s32((int32x4_t)v36, v42);
  }
  while (v35 != 16);
  *(_QWORD *)STACK[0x49F0] = v28;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8]
                                                                             + 8
                                                                             * ((((v1 - 972984912) & 0x492E23D5)
                                                                               - 254779840) ^ v1 ^ (16715
                                                                                                  * (v1 != 1912822516))))
                                                                 - 12))(v36, v37, v38, v39);
}

uint64_t sub_100B494E4()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  ++*v0;
  v3 = STACK[0x6AD8];
  v4 = 2142736129
     * ((~((v2 - 240) | 0x71E0EB3DE1E07560) + ((v2 - 240) & 0x71E0EB3DE1E07560)) ^ 0xF3041CCE7D471E96);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 3582)) ^ v4;
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v1 + 427184201) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  LODWORD(STACK[0x6AA0]) = 0;
  v6 = STACK[0x4CF8];
  *(_DWORD *)(v6 + 4) = 492826167;
  *(_QWORD *)(v6 + 8) = 0;
  LODWORD(STACK[0x6A90]) = STACK[0xC724];
  STACK[0x6AB0] = *(_QWORD *)(v3 + 8 * v1) - 8;
  LODWORD(STACK[0x6A80]) = STACK[0x78E4];
  STACK[0x6A70] = STACK[0xD5D8];
  LODWORD(STACK[0x6A60]) = STACK[0xD5D4];
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v1 + (v1 ^ 0x4860) + 3913)) - 12))(v5, 4164);
}

uint64_t sub_100B49644(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8 * (((v1 - 1120953859) & 0x42D073FF ^ 0x2B47) + v1))
                                                   - 12))(a1, 4164);
}

uint64_t sub_100B4969C()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v3 = STACK[0x6AD8];
  STACK[0x6AB0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 + 19517)) - (v2 + 14959) + 19161))();
}

uint64_t sub_100B496D8@<X0>(unsigned int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;

  if (v2)
    v5 = LODWORD(STACK[0x6A90]) == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v6 * a2) ^ v4))
                                         - (((v4 - 19109) | v3) ^ ((v4 - 19123) | a1) ^ 0x2132)))(0);
}

uint64_t sub_100B49768()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v5;
  uint64_t (*v6)(_QWORD);

  v3 = v2 + v1 + v0 + v0 - 8328 - 492843071;
  v5 = v2 > v3 || v3 > LODWORD(STACK[0x6A90]);
  v6 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7 * v5) | v0)) - 8);
  LODWORD(STACK[0x6AA0]) = v2;
  return v6(0);
}

uint64_t sub_100B497CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x6AB0])(a1, a2, a3, 1250377252, 4294963102);
}

uint64_t sub_100B497EC(int a1)
{
  int v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 3581) ^ (17499 * a1))) - 8);
  LODWORD(STACK[0x6A80]) = v1;
  return v2();
}

uint64_t sub_100B4981C()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2058) ^ v0)) - 4);
  LODWORD(STACK[0x6A80]) = v1;
  return v2();
}

uint64_t sub_100B49848(int a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 3603) ^ (21317 * a1))) - 8))();
}

uint64_t sub_100B4986C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2088) ^ 0x126F)) - 4))();
}

uint64_t sub_100B49890()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) + v1))();
}

uint64_t sub_100B49ABC()
{
  int v0;
  unint64_t v1;
  uint64_t (*v2)(void);

  v1 = STACK[0x6508];
  *(_DWORD *)(STACK[0x4CF8] + 4) = v0;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8
                                     * ((13510
                                       * (((((((_DWORD)v1 + 1627582089) & 0x9EFD3FFF) - 15494) ^ (((v0
                                                                                                  - LODWORD(STACK[0x4200])) | (LODWORD(STACK[0x4200]) - v0)) >> 31)) & 1) == 0)) ^ LODWORD(STACK[0x4204])))
                         - 4);
  LODWORD(STACK[0x6A60]) = 492826167;
  return v2();
}

uint64_t sub_100B49B50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v7 = (((v6 - 11997) | 0x54) ^ 0x106E) * v4 - 807838412;
  v8 = (2 * (v7 & 0xD8490FD0)) & 0x8216A0 ^ v7 & 0xD8490FD0 ^ ((2 * (v7 & 0xD8490FD0)) | 8) & (v7 ^ 0x92CE5960);
  v9 = (2 * (v7 ^ 0x92CE5960)) & 0x4A8756B0 ^ 0x4A815294 ^ ((2 * (v7 ^ 0x92CE5960)) ^ 0x950EAD68) & (v7 ^ 0x92CE5960);
  v10 = (4 * v8) & 0x4A8756B4 ^ v8 ^ ((4 * v8) | 0x10) & v9;
  v11 = (4 * v9) & 0x4A8756B4 ^ 0x40820424 ^ ((4 * v9) ^ 0x2A1D5AD0) & v9;
  v12 = (16 * v10) & 0x4A8756B0 ^ v10 ^ ((16 * v10) ^ 0x140) & v11;
  v13 = (16 * v11) & 0x4A8756B0 ^ 0x428214B4 ^ ((16 * v11) ^ 0xA8756B40) & v11;
  v14 = v12 ^ (a4 + 1148) ^ (v12 << 8) & 0x4A875600 ^ ((v12 << 8) ^ 0x1400) & v13;
  v15 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v7 ^ (2
                                                            * ((v14 << 16) & 0x4A870000 ^ v14 ^ ((v14 << 16) ^ 0x56B40000) & ((v13 << 8) & 0x4A870000 ^ 0x48810000 ^ ((v13 << 8) ^ 0x87560000) & v13))) ^ 0xC84FA2BC);
  *(_QWORD *)(STACK[0x4CF8] + 8) = v15;
  v16 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26863 * (v15 == 0)) ^ v6)) - 4);
  LODWORD(STACK[0x6A60]) = v5;
  return v16();
}

uint64_t sub_100B49D48()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 11913)) - 4))();
}

uint64_t sub_100B49D70()
{
  unsigned int v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(STACK[0x4CF8] + 4) + (v2 ^ 0x36D08F19);
  v4 = v3 < 0x54308DA6;
  v5 = v0 + 1412468134 < v3;
  if (v0 > 0xABCF7259 != v4)
    v5 = v4;
  v6 = v1 == -1926392729 && v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((102 * v6) ^ (v2 + 18220))) - 4))();
}

uint64_t sub_100B49DFC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 - 3571) ^ 0x3F29)) - 12))(a1, 4164);
}

uint64_t sub_100B49E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;

  LODWORD(STACK[0x6AA0]) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((v9 - 2203) | 0x42C0) ^ 0x4AEB) * (a7 + (unint64_t)v10 > v7)) | v9))
                            - (v9 ^ 0x10CCLL)))();
}

uint64_t sub_100B49ED0(int a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(STACK[0x6AD8]
                                                    + 8
                                                    * (a1 | (32
                                                           * (v1 + 43 * (a1 ^ 0x5468) + 724625813 == a1 + 1217434680)))))(1, 0);
}

uint64_t sub_100B49F64@<X0>(unsigned int a1@<W1>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  char v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v25;
  char v26;

  v19 = (char *)(a2 + a1 + v8);
  v20 = *v19;
  v21 = *v15;
  v22 = v3 + a1;
  LODWORD(v19) = ((v19 ^ *(_DWORD *)(*v13 + (v21 & v17))) & 0x7FFFFFFF) * a3;
  v23 = ((v19 >> (((v9 + 37) | 2) - 102)) ^ v19) * a3;
  LODWORD(v21) = ((*(_DWORD *)(*v13 + (v21 & v12)) ^ v22) & 0x7FFFFFFF) * a3;
  v24 = (v21 ^ WORD1(v21)) * a3;
  v25 = v4 < v10;
  v26 = *(_BYTE *)(v7 + (v23 >> 24)) ^ v20 ^ *(_BYTE *)(v6 + (v23 >> 24) + 1) ^ *(_BYTE *)(v5 + (v23 >> 24) + 1) ^ *(_BYTE *)(v11 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + v16 + 1) ^ *(_BYTE *)(v18 + (v24 >> 24)) ^ v23 ^ (BYTE3(v23) * v14) ^ v24 ^ (-63 * BYTE3(v24));
  if (v25 == a1 + 1 > 0xB76F17BD)
    v25 = a1 + 1217456195 < v4;
  *(_BYTE *)(v22 - 0x72B7487B5520D359) = v26;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20874 * v25) ^ v9)) - 8))(1);
}

uint64_t sub_100B4A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = STACK[0x6508];
  v8 = STACK[0x4CF8];
  v9 = *(_QWORD *)(STACK[0x4CF8] + 8);
  STACK[0x6A70] = v5;
  v10 = 24 * v5;
  *(_DWORD *)(v9 + v10) = v6;
  LODWORD(v9) = *(_DWORD *)(*(_QWORD *)(v8 + 8) + v10) - 492826167;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v7 + a5) ^ 0x26D ^ (19143
                                                                   * ((((_DWORD)v7 + a5) & ~(_DWORD)v9 | (((_DWORD)v7 + a5) | ~(_DWORD)v9) & (v9 - (v7 + a5))) >> 31))))
                            - 8))();
}

uint64_t sub_100B4A130(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((3895
                                                                      * ((STACK[0x41F4] & 0xC764FB7F ^ 0x568D289) < 0xBC7B8E85)) ^ ((STACK[0x41F4] & 0xC764FB7F) + 12346)))
                                                   - (STACK[0x41F4] & 0xC764FB7F ^ 0x26FLL)))(a1, 4164);
}

uint64_t sub_100B4A1C4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (6491 * (v0 != 492826167))))
                                          - (((v1 - 19157) | 0x1066u) ^ 0x107ALL)))(1);
}

uint64_t sub_100B4A244()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 7299)) - 8))();
}

uint64_t sub_100B4A270@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v18 = (char *)(a1 + (v8 + v4));
  v19 = *v18;
  v20 = *v13;
  v21 = v3 + (v4 - 492826168);
  LODWORD(v18) = ((v18 ^ *(_DWORD *)(*v12 + (v20 & a2))) & 0x7FFFFFFF) * a3;
  v22 = (v18 ^ (v18 >> 16)) * a3;
  LODWORD(v20) = ((*(_DWORD *)(*v12 + (v20 & v11)) ^ v21) & 0x7FFFFFFF) * a3;
  v23 = (v20 ^ WORD1(v20)) * a3;
  *(_BYTE *)(v21 + v15) = *(_BYTE *)(v7 + (v22 >> 24)) ^ v19 ^ *(_BYTE *)(v6 + (v22 >> 24) + 1) ^ *(_BYTE *)(v5 + (v22 >> 24) + 1) ^ *(_BYTE *)(v10 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v14 + 1) ^ *(_BYTE *)(v17 + (v23 >> 24)) ^ v22 ^ (BYTE3(v22) * v16) ^ v23 ^ (-63 * BYTE3(v23));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7981 * (v4 == 492826168)) ^ v9)) - 8))(1);
}

uint64_t sub_100B4A368()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x85F4]) = v0;
  LODWORD(STACK[0x78E4]) = STACK[0x6A80];
  LODWORD(STACK[0xD5D0]) = v1;
  STACK[0xD5D8] = STACK[0x6A70];
  LODWORD(STACK[0xD5D4]) = STACK[0x6A60];
  v4 = STACK[0x6AD8];
  v5 = STACK[0x3020];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 12)) ^ STACK[0x3020];
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v2 + 427180632) ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((v2 + 12) ^ 0x2B53 ^ (15
                                                                             * (*(_DWORD *)STACK[0x4A78] <= ((((v2 - 4214) | 0x1083) + 6924) ^ 0x2B8F)))))
                                          - 8))(v6);
}

uint64_t sub_100B4A44C()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v0 == 1 && *(_QWORD *)STACK[0x49F0] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 * (v1 + 19160)) ^ v1)) - 12))();
}

uint64_t sub_100B4A488@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  int32x2_t v22;
  int32x2_t v23;
  int32x2_t v24;
  __int16 v25;
  unint64_t v26;
  unsigned int v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int32x4_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int8x16_t v40;
  _QWORD *v41;
  unsigned int v42;
  uint64_t i;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  __int16 v52;
  int8x16x4_t v54;

  v3 = 0;
  v4 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198)) ^ 0x83C25199;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  v12 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v11 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v11;
  STACK[0xEEB8] = 0;
  STACK[0xEEC0] = v1;
  v13 = 16777619 * ((-2084417127 * v12 + 7) ^ (-2084417127 * v12)) % 7;
  v14 = 16777619 * ((-2084417127 * v12 + 6) ^ (-2084417127 * v12)) % 6;
  v15 = 16777619 * ((-2084417127 * v12 + 5) ^ (-2084417127 * v12)) % 5;
  v16 = 16777619 * ((-2084417127 * v12 + 3) ^ (-2084417127 * v12)) % 3;
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v13) = STACK[0xEEBF];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v14) = STACK[0xEEBE];
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v15) = STACK[0xEEBD];
  v20 = STACK[0xEEB8];
  LOBYTE(STACK[0xEEB8]) = STACK[0xEEBC];
  v21 = *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v16);
  *(_BYTE *)((unint64_t)&STACK[0xEEB8] | v16) = STACK[0xEEBB];
  v22 = vdup_n_s32(-2084417127 * v12);
  v23.i32[0] = v22.i32[0];
  v23.i32[1] = -2084417127 * v12 + 1;
  LOBYTE(STACK[0xEEBF]) = v17;
  LOBYTE(STACK[0xEEBE]) = v18;
  LOBYTE(STACK[0xEEBD]) = v19;
  v24 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v23, v22), (int8x8_t)v22);
  LOBYTE(STACK[0xEEBC]) = v20;
  LOBYTE(STACK[0xEEBB]) = v21;
  v25 = STACK[0xEEB9];
  LOBYTE(STACK[0xEEBA]) = STACK[0xEEB8];
  LOWORD(STACK[0xEEB8]) = v25;
  STACK[0xEEB8] = (unint64_t)vmla_s32(v24, (int32x2_t)STACK[0xEEB8], (int32x2_t)STACK[0x48C8]);
  v26 = STACK[0xEEC0];
  v27 = (-2084417127 * STACK[0xEEC0]) ^ v12;
  v28 = vdupq_n_s32(v27);
  v29 = (int32x4_t)xmmword_1015070D0;
  v30 = (int32x4_t)xmmword_1015070E0;
  v31 = (int32x4_t)xmmword_1015070F0;
  v32 = (int32x4_t)xmmword_101507100;
  v33 = *(int8x16_t *)&STACK[0x4660];
  v34 = *(int8x16_t *)&STACK[0x4620];
  v35 = *(int8x16_t *)&STACK[0x4610];
  v36.i64[0] = 0x9393939393939393;
  v36.i64[1] = 0x9393939393939393;
  v37 = *(int8x16_t *)&STACK[0x4650];
  v38 = *(int8x16_t *)&STACK[0x4950];
  v39.i64[0] = 0x1000000010;
  v39.i64[1] = 0x1000000010;
  do
  {
    v40 = *(int8x16_t *)(v26 + v3);
    v54.val[1] = veorq_s8(vqtbl1q_s8(v40, v37), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v31, v28), vsubq_s32(v31, v28))));
    v54.val[0] = veorq_s8(vqtbl1q_s8(v40, v33), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v32, v28), vsubq_s32(v32, v28))));
    v54.val[2] = veorq_s8(vqtbl1q_s8(v40, v34), veorq_s8((int8x16_t)v28, (int8x16_t)vmulq_s32(vaddq_s32(v30, v28), vsubq_s32(v30, v28))));
    v54.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v40, v35), (int8x16_t)v28), (int8x16_t)vmulq_s32(vaddq_s32(v29, v28), vsubq_s32(v29, v28)));
    *(int8x16_t *)(v26 + v3) = vmulq_s8(vqtbl4q_s8(v54, v38), v36);
    v3 += 16;
    v32 = vaddq_s32(v32, v39);
    v31 = vaddq_s32(v31, v39);
    v30 = vaddq_s32(v30, v39);
    v29 = vaddq_s32(v29, v39);
  }
  while (v3 != 16);
  v41 = (_QWORD *)(v26 + 8);
  v42 = 1;
  for (i = 3; i > 2; --i)
  {
    v44 = 8 * (16777619 * ((v27 + v42) ^ v27) % v42);
    v45 = *(_QWORD *)(v26 + v44) ^ *v41;
    *v41 = v45;
    v46 = *(_QWORD *)(v26 + v44) ^ v45;
    *(_QWORD *)(v26 + v44) = v46;
    *v41 ^= v46;
    v41 += 0xFFFFFFFFLL;
    --v42;
  }
  v47 = *((_BYTE *)&STACK[0xEEC0] + v13);
  *((_BYTE *)&STACK[0xEEC0] + v13) = STACK[0xEEC7];
  LOBYTE(STACK[0xEEC7]) = v47;
  v48 = *((_BYTE *)&STACK[0xEEC0] + v14);
  *((_BYTE *)&STACK[0xEEC0] + v14) = STACK[0xEEC6];
  LOBYTE(STACK[0xEEC6]) = v48;
  v49 = *((_BYTE *)&STACK[0xEEC0] + v15);
  *((_BYTE *)&STACK[0xEEC0] + v15) = STACK[0xEEC5];
  LOBYTE(STACK[0xEEC5]) = v49;
  v50 = STACK[0xEEC0];
  LOBYTE(STACK[0xEEC0]) = STACK[0xEEC4];
  v51 = *((_BYTE *)&STACK[0xEEC0] + v16);
  *((_BYTE *)&STACK[0xEEC0] + v16) = STACK[0xEEC3];
  LOBYTE(STACK[0xEEC4]) = v50;
  LOBYTE(STACK[0xEEC3]) = v51;
  v52 = STACK[0xEEC1];
  LOBYTE(STACK[0xEEC2]) = STACK[0xEEC0];
  LOWORD(STACK[0xEEC0]) = v52;
  STACK[0xEEC0] = (unint64_t)vmla_s32(v24, (int32x2_t)STACK[0xEEC0], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x49F0] = STACK[0xEEC0] ^ STACK[0xEEB8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (a1 ^ 0x3BD2)))();
}

uint64_t sub_100B4A898@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;

  *v2 = v1 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 - 11099) ^ 0x108BLL)))();
}

uint64_t sub_100B4A8C0()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v4 = STACK[0x3018];
  LODWORD(STACK[0x1D358]) = (v0 + 427180619) ^ STACK[0x3018];
  STACK[0x1D360] = v3 ^ v4;
  STACK[0x1D350] = 0;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * (v0 ^ 0x443 ^ (22339 * (*(_QWORD *)STACK[0x4A48] != 0))))
                                          - ((v0 - 313643674) & 0x12B1EBBF ^ 0x29A1)))(v5);
}

uint64_t sub_100B4A960@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = 2142736129 * ((0x1B22A119F114F0ALL - ((v2 - 240) | 0x1B22A119F114F0ALL) + STACK[0x29F0]) ^ 0x8356DDE203B624FCLL);
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ v4;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v4;
  STACK[0x1D350] = a1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v1 ^ 0x14BE) + v1)) - 8))(v5);
}

uint64_t sub_100B4AA10()
{
  int v0;
  int v1;

  LODWORD(STACK[0x9D18]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((STACK[0xA300] == 0) ^ (((v0 + 77) & 0x7F) + 1)) & 1)
                                          * (v0 + 8703)) ^ v0))
                            - 8))();
}

uint64_t sub_100B4AA7C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  STACK[0xA300] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6451)) - 8))(v1);
}

uint64_t sub_100B4AAB0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14952 * (STACK[0x88D0] != 0)) ^ (v0 + 19910))) - 8))();
}

uint64_t sub_100B4AAE4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  STACK[0x88D0] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B4AB08()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 1700) ^ (16524 * (v1 != -1926392729)))) - 8))();
}

uint64_t sub_100B4AB38@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x3A5D)) - 4))();
}

uint64_t sub_100B4AB54()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((*(_QWORD *)STACK[0x4A48] == 0) * (((v0 + 12) ^ 0x12) - 4177)) ^ (v0 + 6248))))();
}

uint64_t sub_100B4ABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BOOL4 v7;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  v4 = (_QWORD *)STACK[0x4A48];
  STACK[0xEE28] = STACK[0x4A48];
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v1 + 784) = -299994601 - 1705718857 * ((v2 - 240) ^ 0x3D92DF59) + v0 - 26;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  v7 = *(_DWORD *)(v1 + 788) != (v0 ^ 0x12) - 4226 || *v4 == 0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((18797 * v7) ^ ((int)v0 + (int)v0 - 14 + 1996))))(v5);
}

uint64_t sub_100B4AC54@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v6 = 2142736129
     * ((~(STACK[0x3A20] | 0x44FBA0F18B0ABB82) + (STACK[0x3A20] & 0x44FBA0F18B0ABB82)) ^ 0xBEB9478E1FBD0CAFLL);
  *(_QWORD *)(v2 + 784) = a1;
  *(_QWORD *)(v2 + 800) = v5 ^ v6;
  *(_DWORD *)(v2 + 792) = (v1 + 427180620) ^ v6;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v1 ^ 0x7131)))(v7);
}

uint64_t sub_100B4ACE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v5 = STACK[0x3CC8];
  *(_DWORD *)(v1 + 792) = (v0 + 427180620) ^ STACK[0x3CC8];
  *(_QWORD *)(v1 + 784) = 0;
  *(_QWORD *)(v1 + 800) = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  if (*(_DWORD *)STACK[0x4A78])
    v7 = 1;
  else
    v7 = *(_QWORD *)STACK[0x49F0] == 0;
  v8 = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((28 * v8) ^ (v0 + 6887)))
                                          - ((v0 - 130) | 0x83u)
                                          + 4215))(v6);
}

uint64_t sub_100B4AD68()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  int v21;
  int v22;
  int v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  int32x4_t v43;
  int8x16_t v44;
  int32x4_t v45;
  uint16x8_t v46;
  uint8x16_t v47;
  uint16x8_t v48;
  uint16x8_t v49;
  int8x16x4_t v51;

  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v3 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v2 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v2 ^ 0x83C25199;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  LODWORD(v9) = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  STACK[0xEF68] = 0;
  v10 = -2084417127 * v9;
  v11 = 16777619 * ((-2084417127 * (_DWORD)v9 + 7) ^ (-2084417127 * v9)) % 7;
  v12 = *(_BYTE *)((unint64_t)&STACK[0xEF68] | v11);
  *(_BYTE *)((unint64_t)&STACK[0xEF68] | v11) = 0;
  LOBYTE(STACK[0xEF6F]) = v12;
  v13 = 16777619 * ((-2084417127 * (_DWORD)v9 + 6) ^ (-2084417127 * v9)) % 6;
  v14 = *(_BYTE *)((unint64_t)&STACK[0xEF68] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEF68] | v13) = STACK[0xEF6E];
  LOBYTE(STACK[0xEF6E]) = v14;
  v15 = 16777619 * ((-2084417127 * (_DWORD)v9 + 5) ^ (-2084417127 * v9)) % 5;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEF68] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEF68] | v15) = STACK[0xEF6D];
  LOBYTE(STACK[0xEF6D]) = v16;
  v17 = STACK[0xEF68];
  LOBYTE(STACK[0xEF68]) = STACK[0xEF6C];
  LOBYTE(STACK[0xEF6C]) = v17;
  v18 = 16777619 * ((-2084417127 * (_DWORD)v9 + 3) ^ (-2084417127 * v9)) % 3;
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEF68] | v18);
  *(_BYTE *)((unint64_t)&STACK[0xEF68] | v18) = STACK[0xEF6B];
  LOBYTE(STACK[0xEF6B]) = v19;
  v20 = STACK[0xEF69];
  LOBYTE(STACK[0xEF6A]) = STACK[0xEF68];
  LOWORD(STACK[0xEF68]) = v20;
  v21 = (v10 * v10) ^ v10;
  v22 = (v10 + v10 * v10) ^ v10;
  v23 = v22 + 16777619 * LODWORD(STACK[0xEF6C]);
  LODWORD(STACK[0xEF68]) = v21 + 16777619 * LODWORD(STACK[0xEF68]);
  LODWORD(STACK[0xEF6C]) = v23;
  v24 = STACK[0xEF68] ^ v0;
  v25 = 899433627 * (v24 - v21);
  LODWORD(v24) = 899433627 * (HIDWORD(v24) - v22);
  LODWORD(STACK[0xEF70]) = v25;
  LODWORD(STACK[0xEF74]) = v24;
  LOBYTE(STACK[0xEF71]) = v25;
  LOBYTE(STACK[0xEF70]) = BYTE2(v25);
  LOBYTE(STACK[0xEF72]) = BYTE1(v25);
  v26 = HIBYTE(v25);
  v27 = (_BYTE *)((unint64_t)&STACK[0xEF70] | v18);
  LOBYTE(v25) = *v27;
  *v27 = v26;
  LOBYTE(STACK[0xEF73]) = v25;
  LOBYTE(v26) = STACK[0xEF70];
  LOBYTE(STACK[0xEF70]) = v24;
  LOBYTE(STACK[0xEF74]) = v26;
  v28 = (_BYTE *)((unint64_t)&STACK[0xEF70] | v15);
  LOBYTE(v27) = *v28;
  *v28 = BYTE1(v24);
  LOBYTE(STACK[0xEF75]) = (_BYTE)v27;
  v29 = (_BYTE *)((unint64_t)&STACK[0xEF70] | v13);
  LOBYTE(v28) = *v29;
  *v29 = BYTE2(v24);
  LOBYTE(STACK[0xEF76]) = (_BYTE)v28;
  v30 = (_BYTE *)((unint64_t)&STACK[0xEF70] | v11);
  LOBYTE(v29) = *v30;
  *v30 = BYTE3(v24);
  LOBYTE(STACK[0xEF77]) = (_BYTE)v29;
  v31 = STACK[0xEF70];
  v32 = (-2084417127 * STACK[0xEF70]) ^ v9;
  for (i = 1; i != 2; ++i)
  {
    v34 = 8 * i;
    v35 = 8 * (16777619 * ((v32 + (_DWORD)i) ^ v32) % i);
    v36 = *(_QWORD *)(v31 + v35) ^ *(_QWORD *)(v31 + 8 * i);
    *(_QWORD *)(v31 + v34) = v36;
    v37 = *(_QWORD *)(v31 + v35) ^ v36;
    *(_QWORD *)(v31 + v35) = v37;
    *(_QWORD *)(v31 + v34) = *(_QWORD *)(v31 + 8 * i) ^ v37;
  }
  v38 = 0;
  v39 = (__n128)xmmword_1015070D0;
  v40 = (__n128)xmmword_1015070E0;
  v41 = (__n128)xmmword_1015070F0;
  v42 = (__n128)xmmword_101507100;
  v43 = vdupq_n_s32(v32);
  v44 = *(int8x16_t *)&STACK[0x4950];
  v45.i64[0] = 0x1000000010;
  v45.i64[1] = 0x1000000010;
  v46.i64[0] = 0x9B009B009B009BLL;
  v46.i64[1] = 0x9B009B009B009BLL;
  do
  {
    v47 = *(uint8x16_t *)(v31 + v38);
    v48 = vmovl_high_u8(v47);
    v49 = vmovl_u8(*(uint8x8_t *)v47.i8);
    v51.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v41, v43), vsubq_s32((int32x4_t)v41, v43)), (int8x16_t)v43), (int8x16_t)vmull_high_u16(v49, v46));
    v51.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v40, v43), vsubq_s32((int32x4_t)v40, v43)), (int8x16_t)v43), (int8x16_t)vmull_u16(*(uint16x4_t *)v48.i8, (uint16x4_t)0x9B009B009B009BLL));
    v51.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v42, v43), vsubq_s32((int32x4_t)v42, v43)), (int8x16_t)v43), (int8x16_t)vmull_u16(*(uint16x4_t *)v49.i8, (uint16x4_t)0x9B009B009B009BLL));
    v51.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v39, v43), vsubq_s32((int32x4_t)v39, v43)), (int8x16_t)v43), (int8x16_t)vmull_high_u16(v48, v46));
    *(int8x16_t *)(v31 + v38) = vqtbl4q_s8(v51, v44);
    v38 += 16;
    v42 = (__n128)vaddq_s32((int32x4_t)v42, v45);
    v41 = (__n128)vaddq_s32((int32x4_t)v41, v45);
    v40 = (__n128)vaddq_s32((int32x4_t)v40, v45);
    v39 = (__n128)vaddq_s32((int32x4_t)v39, v45);
  }
  while (v38 != 16);
  *(_QWORD *)STACK[0x49F0] = v31;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 6899))
                                                                 - ((v1 - 42530995) & 0x288F8B3 ^ 0x108FLL)))(v39, v40, v41, v42);
}

uint64_t sub_100B4B180()
{
  int v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v1 = (v2 ^ 1) + v0 - 4225;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  v6 = 2142736129 * ((v3 - 240) ^ 0x7D1B080C63589409);
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v5 ^ v6;
  LODWORD(STACK[0x1D358]) = (v2 + 427180619) ^ v6;
  ((void (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x4CF8] + 8) != 0) * ((v2 ^ 0x2047) - 9269)) ^ (v2 + 8257)))
                            - 8))();
}

